From trac at twistedmatrix.com  Sun Jul  2 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Jul 2017 06:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1498975521.42.8656629329782046613@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170702/eaa4a8e8/attachment.html>

From glyph at twistedmatrix.com  Mon Jul  3 05:44:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 04:44:52 -0700
Subject: [Twisted-Python] Custom log "files" with twisted.logger
In-Reply-To: <CAEeXt4OtOPKjBgwXbGyuwH5ukFE3P8199xSgyrLxFSZ1X4_0TQ@mail.gmail.com>
References: <CAEeXt4OtOPKjBgwXbGyuwH5ukFE3P8199xSgyrLxFSZ1X4_0TQ@mail.gmail.com>
Message-ID: <7F2A1F31-E889-4724-B6AA-8E6731E542E4@twistedmatrix.com>


> On Jun 14, 2017, at 5:53 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I would like to be able to send events from the new logging system (twisted.logger) to a remote log collection system.  If I'm using twist then it seems options for configuring this part of logging are limited.  The choices appear to be logging to stdout, stdout, or a file on the filesystem.

This is definitely a desirable goal, something that I am also wrestling with.

> If I write my own command-line entrypoint then I can probably do whatever I want by writing a custom observer and hooking it up appropriately.  I'd rather not have to do that, though.
> 
> I could also go back to twistd and use --logger.  But since interest in twistd appears to be on the decline, in favor of twist, I'd rather avoid that as well.

The hope is that `twist` can fully supplant it, yes.

> It seems like the idea would be something like --logger for twist, perhaps replacing the --log-file option.  If there were a way to pass some arguments that would be pretty nice as well.

This looks like a pretty reasonable idea.

>     twist --logger myapp.something:x=y,a=b
>   twist --logger twisted.logger.FileLogObserver.fromPath:path=/foo/bar
> 
> (Actual syntax not that important to me; consistency with endpoint syntax would have some advantages; something that deals with the necessities of quoting and nesting would be better, of course.   Also, I know everyone hates Twisted's plugins but they would make for a nicer UI than FQPNs here.)

I don't hate Twisted's plugins.

> The first thing I'm likely to do with this is bridge twisted.logger events to Eliot.  I think this will provide the most useful logs (at least some of the logs from Twisted will have a meaningful Eliot context, though certainly nowhere near all).  Also I already have a system for configuring Eliot log destinations (which supports passing along arguments, so I can already tell Eliot where my remote log collector is with a command-line argument).
> 
> What are the chances of getting support for this scenario into twist itself?

I take it that Eliot "log destinations" are sufficient for the purposes of remotely transmitting your logs to a collection system, so you're mainly asking about the extension point, and not any particular collector?

I'd say that chances are extremely good that this could be accepted.  I'd really like log configuration generally to be more robust.

Another thing that might be germane to this (or maybe it's just "another thing that would be nice for twist to have on its command line somewhere") - https://twistedmatrix.com/documents/current/api/twisted.logger.LogLevelFilterPredicate.html <https://twistedmatrix.com/documents/current/api/twisted.logger.LogLevelFilterPredicate.html> and https://twistedmatrix.com/documents/current/api/twisted.logger.FilteringLogObserver.html <https://twistedmatrix.com/documents/current/api/twisted.logger.FilteringLogObserver.html> might be something that you would want to put in front of your remote log collectors.  Ideally not every single message in the world needs to be transmitted.

Also, possibly the hypothetical "+" plugin which has come up a few times (i.e. "a command line syntax for running more than one plugin in the same process") would be an interesting idea here.  'twist + eliot --to=<some eliot place> + web --port le:certificates:tcp:443' might be a way to express this without any specific logging support from `twist`; the "eliot" plugin could just add a global log observer when it starts.

-glyph

P.S.: Sorry for the long delay on the response, I would like to refer everyone back to https://twistedmatrix.com/pipermail/twisted-python/2017-April/031396.html <https://twistedmatrix.com/pipermail/twisted-python/2017-April/031396.html> which is getting more relevant by the day.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170703/c4971f11/attachment.html>

From glyph at twistedmatrix.com  Mon Jul  3 06:08:07 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 05:08:07 -0700
Subject: [Twisted-Python] 'ok to merge' label in github?
Message-ID: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>

Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.

I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

(I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)

-g

From contact at evilham.com  Mon Jul  3 06:24:03 2017
From: contact at evilham.com (Evilham)
Date: Mon, 3 Jul 2017 14:24:03 +0200
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
Message-ID: <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>

Hi Glyph,

Am 03/07/2017 um 14:08 schrieb Glyph:
> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
> 
> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

If those are GitHub labels and only modifiable by repo owners, it sounds
like a sane thing to do.

One thing that would worry me though, is that more commits could come to
that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
guess such a tag should be associated with the last commit but I'm not
too sure that's possible out of the box with GitHub.

> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)

Maybe a bot could figure out the last reviewed commit and remove the
label if it detects new (not reviewed) commits in that PR.

I... would actually be interested in taking a look at it, got any
pointers / are there already some bots for the twisted project running?
-- 
Evilham


From contact at evilham.com  Mon Jul  3 06:45:40 2017
From: contact at evilham.com (Evilham)
Date: Mon, 3 Jul 2017 14:45:40 +0200
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
 <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
Message-ID: <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>



Am 03/07/2017 um 14:24 schrieb Evilham:
> Hi Glyph,
> 
> Am 03/07/2017 um 14:08 schrieb Glyph:
>> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
>>
>> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

Isn't this exactly what you want Glyph? (maybe I missed sth :-D)
https://help.github.com/articles/about-required-reviews-for-pull-requests/

It could affect the workflow of people with write-access though.

> If those are GitHub labels and only modifiable by repo owners, it sounds
> like a sane thing to do.
> 
> One thing that would worry me though, is that more commits could come to
> that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
> guess such a tag should be associated with the last commit but I'm not
> too sure that's possible out of the box with GitHub.
> 
>> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)
> 
> Maybe a bot could figure out the last reviewed commit and remove the
> label if it detects new (not reviewed) commits in that PR.
> 
> I... would actually be interested in taking a look at it, got any
> pointers / are there already some bots for the twisted project running?
> 

-- 
Evilham


From glyph at twistedmatrix.com  Mon Jul  3 06:47:14 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 05:47:14 -0700
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
 <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
 <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>
Message-ID: <B640D7B7-01DE-4950-9493-FA1382D659EE@twistedmatrix.com>


> On Jul 3, 2017, at 5:45 AM, Evilham <contact at evilham.com> wrote:
> 
> 
> 
> Am 03/07/2017 um 14:24 schrieb Evilham:
>> Hi Glyph,
>> 
>> Am 03/07/2017 um 14:08 schrieb Glyph:
>>> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
>>> 
>>> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?
> 
> Isn't this exactly what you want Glyph? (maybe I missed sth :-D)
> https://help.github.com/articles/about-required-reviews-for-pull-requests/ <https://help.github.com/articles/about-required-reviews-for-pull-requests/>

No, this just prevents you from merging if you don't have a review; it doesn't automatically merge if you do have one.

> 
> It could affect the workflow of people with write-access though.
> 
>> If those are GitHub labels and only modifiable by repo owners, it sounds
>> like a sane thing to do.
>> 
>> One thing that would worry me though, is that more commits could come to
>> that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
>> guess such a tag should be associated with the last commit but I'm not
>> too sure that's possible out of the box with GitHub.
>> 
>>> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)
>> 
>> Maybe a bot could figure out the last reviewed commit and remove the
>> label if it detects new (not reviewed) commits in that PR.
>> 
>> I... would actually be interested in taking a look at it, got any
>> pointers / are there already some bots for the twisted project running?
>> 
> 
> -- 
> Evilham
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170703/4a8c6497/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Jul  4 05:30:11 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 4 Jul 2017 07:30:11 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
Message-ID: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>

Hello all,

I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library for
interacting with Amazon Web Services (AWS) using Twisted.

You can download the release from PyPI <https://pypi.python.org/pypi/txAWS>.

txAWS development uses GitHub for issues and source control
<https://github.com/twisted/txaws>.

Since the last release, the following enhancements have been made:

Bugfixes
--------

- txaws now correctly signs requests with paths that require urlencoding.
(#20)


Features
--------

- The Route53 client now recognizes all of the basic resource record types.
  (#50)
- txaws now supports reading the AWS_SHARED_CREDENTIALS_FILE and environment
  variable. (#52)
- txAWS now raises a CredentialsNotFoundError when it cannot locate
  credentials. Catching the previously-raised ValueError is now deprecated.
  (#53)
- txaws.credentials.AWSCredentials now supports loading different sets of
  credentials via AWS_PROFILE. (#54)

Thanks to everyone who contributed and to Least Authority Enterprises
<https://leastauthority.com/> for sponsoring my work on this release.

Jean-Paul Calderone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170704/0422cd4a/attachment.html>

From glyph at twistedmatrix.com  Tue Jul  4 14:08:35 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Jul 2017 13:08:35 -0700
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
Message-ID: <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>


> On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello all,
> 
> I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library for interacting with Amazon Web Services (AWS) using Twisted.

Woohoo!

This reminds me; I have a question about txAWS: if I have an EC2 instance or ECS instance with a machine role, will txAWS pick up the ambient credentials from ... I guess it's the metadata server that provides them?

-glyph


From exarkun at twistedmatrix.com  Tue Jul  4 14:27:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 4 Jul 2017 16:27:53 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
Message-ID: <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>

On Tue, Jul 4, 2017 at 4:08 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> > On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
> >
> > Hello all,
> >
> > I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library
> for interacting with Amazon Web Services (AWS) using Twisted.
>
> Woohoo!
>
> This reminds me; I have a question about txAWS: if I have an EC2 instance
> or ECS instance with a machine role, will txAWS pick up the ambient
> credentials from ... I guess it's the metadata server that provides them?
>
>
Nope, it totally won't.  There's been some progress recently in improving
the way credentials are supplied to txAWS.  I hope there's some more soon
to add these kinds of capabilities.

Jean-Paul



> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170704/ec55b872/attachment.html>

From adi at roiban.ro  Wed Jul  5 03:29:25 2017
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 5 Jul 2017 10:29:25 +0100
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders for
	merge
Message-ID: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>

Hi,

I did not had to much time to follow twisted-infra activity lately,
sorry if the following question is obvious for all the others.

Why the OSX build was removed from Travis and forced on buildbot?

I think that for contributor without write access to the main repo,
this is a big handicap as they can't get a good coverage report ...
and merging such branches needs extra work as you need to create a new
branch, push it wait for results...(maybe create a new PR)... etc

---------

Is the list of builders marked in GitHub as "required" the official
list of tests which need to be green in order to merge?

I am reading this page, but is not clear which tests need to be green:
 https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk

Thanks!
-- 
Adi Roiban


From barry.scott at forcepoint.com  Wed Jul  5 03:32:52 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Wed, 5 Jul 2017 10:32:52 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
Message-ID: <4348076.WLXFC0nInn@barry-scott-desktop>

I am interested in using Twisted with a couple of technologies: WebSockets and 
QUIC. I'm researching what is already available.

I found the autobahn-python for WebSockets, are there other projects that 
provide WebSockets that I have missed?

I could not find references to any projects supporting the QUIC protocol for 
python. I did find the libquic project. Do you know of any work going on for 
this protocol for Twisted?

Barry




From rodrigc at crodrigues.org  Wed Jul  5 13:24:01 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 5 Jul 2017 12:24:01 -0700
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders
 for merge
In-Reply-To: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
References: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
Message-ID: <CAG=rPVfTYs5=cESfhzXa10=7XKSOVY97UPGvLXDvVvF+jKp5og@mail.gmail.com>

On Wed, Jul 5, 2017 at 2:29 AM, Adi Roiban <adi at roiban.ro> wrote:

>
> Why the OSX build was removed from Travis and forced on buildbot?
>
>
At the time that Glyph did this, the OSX builders on Travis were overloaded
from all projects (not just Twisted)
and took a long time to run.  This slowed down the whole CI process for
Twisted.

I don't know the answers to your other questions.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/e2d9008a/attachment.html>

From rodrigc at crodrigues.org  Wed Jul  5 13:26:38 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 5 Jul 2017 12:26:38 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
Message-ID: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>

Hi,

This builder:
https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio

seems to now be failing with:

cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to
use this library.

Can someone upgrade pypy on this builder?

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/de5fba7e/attachment.html>

From steveo at mcroberts.org  Wed Jul  5 16:00:40 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Wed, 5 Jul 2017 17:00:40 -0500
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
Message-ID: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>

I'm looking for suggestions why the channel key would be missing after it was just opened.
I use persistent connections with a timeout but the timer is reset every call so it stays open.

Here's some of my logs:

2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
--- (snipped traceback for clarity) ---
File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
   channel = self.channels[localChannel]
   exceptions.KeyError: 4

The same connection instance will work later on the next channel so it seems the connection is fine.

Any suggestions on what would cause this behavior?

Is this behavior typical?

From glyph at twistedmatrix.com  Wed Jul  5 20:41:37 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:41:37 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
Message-ID: <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>


> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
> 
> seems to now be failing with:
> 
> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
> 
> Can someone upgrade pypy on this builder?

Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.

We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.

Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/df941a11/attachment.html>

From glyph at twistedmatrix.com  Wed Jul  5 20:54:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:54:52 -0700
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders
 for	merge
In-Reply-To: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
References: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
Message-ID: <7E7FE9D6-4309-49F4-BD9F-A9C7855AEC40@twistedmatrix.com>


> On Jul 5, 2017, at 2:29 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I did not had to much time to follow twisted-infra activity lately,
> sorry if the following question is obvious for all the others.
> 
> Why the OSX build was removed from Travis and forced on buildbot?

As Craig said: it was slow.

Of course, the entire CI process is slow, so just a little more slowness would not have been a reason.  It wasn't just slow, it was catastrophically slow: sometimes blocking builds for entire days at a time.

Not only was it an order of magnitude out from all other build slowness, it would also block other travis builds from completing promptly.

And finally, the frequent outages on Travis's infrastructure meant that not only was it slow, not only was it interfering with other resources, but it was also tremendously unpredictable: so sometimes it would be only a few minutes, sometimes 72 hours. Intermittent reinforcement is a form of psychological torture, so this was really the icing on this terrible cake.

> I think that for contributor without write access to the main repo,
> this is a big handicap as they can't get a good coverage report ...
> and merging such branches needs extra work as you need to create a new
> branch, push it wait for results...(maybe create a new PR)... etc

Yep, it's really annoying and I very much wish we could turn it back on.  What it comes down to is: would it be more useful for the contributors to get their Linux / Py2 / Py3 build results immediately automatically, or their macOS build results after 15 hours automatically?

But, loading https://www.traviscistatus.com <https://www.traviscistatus.com/> today, I see yet another effective outage on the OS X infra:



The frequency of outages that merit a formal incident report does seem to have gone down, but "you can't do a build for the entire working day because the infrastructure is regularly jammed up" is a level of availability that is more like a continuous outage :).

> Is the list of builders marked in GitHub as "required" the official
> list of tests which need to be green in order to merge?

Technically speaking all builders should pass.  Particularly, patch coverage in principle ought to be enforced.

However:

In some cases (such as trivial python 3 syntax transformations) there are patches which should be able to skip the coverage check, so it isn't enforced.  It would be better if these were all covered, but sometimes it makes more sense to get a module importing on py3 so that we can address coverage issues more easily.
Also, codecov itself is unreliable enough that making this mandatory would make us spend more time investigating issues with codecov than developing twisted.  (And other options, such as coveralls, seem to just be worse.)
Given the large number of builders in our fleet, it's likely that at least one will still fail with some intermittent issue that's irrelevant to the patch.  Until we have less activity on https://twistedmatrix.com/trac/ticket/8879 <https://twistedmatrix.com/trac/ticket/8879>, making these mechanically mandatory would still do more harm than good.  However… we have been making a lot of progress, and we certainly see a lot fewer intermittent failures than we used to!

> I am reading this page, but is not clear which tests need to be green:
> https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk <https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk>

Yeah, the documentation on this is a lot spottier than it should be.  Please feel free to propose some changes to that text based on this.  Thanks for raising this issue!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/4295f524/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.png
Type: image/png
Size: 30815 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20170705/4295f524/attachment-0001.png>

From glyph at twistedmatrix.com  Wed Jul  5 20:58:05 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:58:05 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <4348076.WLXFC0nInn@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
Message-ID: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>


> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com> wrote:
> 
> I am interested in using Twisted with a couple of technologies: WebSockets and 
> QUIC. I'm researching what is already available.

Why are you interested in QUIC? My understanding was that Google used this protocol as an experiment, but HTTP/2 is the successful termination of the experiment, and nobody should really be using it.  (For http2 support, `pip install twisted[tls,http2]`).

Investigating now I guess I can see https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02 <https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02> suggests that it has a future life as a transport for http2?

> I found the autobahn-python for WebSockets, are there other projects that 
> provide WebSockets that I have missed?

There's txWS... but autobahn is a lot more current and updated.

> I could not find references to any projects supporting the QUIC protocol for 
> python. I did find the libquic project. Do you know of any work going on for 
> this protocol for Twisted?

None that I know of.  Perhaps you could contribute it!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/b50ef8df/attachment.html>

From glyph at twistedmatrix.com  Wed Jul  5 21:01:37 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 20:01:37 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <9F8677F2-FE1C-48F4-8F98-18F96B4BBFF5@twistedmatrix.com>


> On Jul 5, 2017, at 3:00 PM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.

Are you just using `twist conch`?  Is any of your own code involved?

> Here's some of my logs:
> 
> 2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
> 2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
> --- (snipped traceback for clarity) ---
> File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
>   channel = self.channels[localChannel]
>   exceptions.KeyError: 4
> 
> The same connection instance will work later on the next channel so it seems the connection is fine.
> 
> Any suggestions on what would cause this behavior?
> 
> Is this behavior typical?

I don't see an existing bug for it, but if you can provoke a traceback like this without monkeying around with any of Twisted's internal data structures, it's a bug.  Perhaps it will turn out that the only bug has to do with error reporting and it should be logging something other than a traceback, but nevertheless this is almost certainly a bug in conch itself.

-g


From mithrandi at mithrandi.net  Wed Jul  5 22:59:46 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 06 Jul 2017 04:59:46 +0000
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <CAMcKhMS1gOuNb4bEimq4QCay5evbohCcQ_7JywHVN4dZC3vnVQ@mail.gmail.com>

On Thu, 6 Jul 2017 at 04:58 Glyph <glyph at twistedmatrix.com> wrote:

> Why are you interested in QUIC? My understanding was that Google used this
> protocol as an experiment, but HTTP/2 is the successful termination of the
> experiment, and nobody should really be using it.  (For http2 support, `pip
> install twisted[tls,http2]`).
>

You're thinking of SPDY. QUIC is a UDP-based protocol that allows 0-rtt
connection setup (and is also implemented by Chrome / Google services).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170706/f88851d0/attachment.html>

From cory at lukasa.co.uk  Thu Jul  6 01:36:29 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 6 Jul 2017 08:36:29 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <4348076.WLXFC0nInn@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
Message-ID: <E9393E9C-D0AB-4FE5-8BB2-58763AC8ADE4@lukasa.co.uk>


> On 5 Jul 2017, at 10:32, Barry Scott <barry.scott at forcepoint.com> wrote:
> 
> I am interested in using Twisted with a couple of technologies: WebSockets and 
> QUIC. I'm researching what is already available.
> 
> I found the autobahn-python for WebSockets, are there other projects that 
> provide WebSockets that I have missed?
> 
> I could not find references to any projects supporting the QUIC protocol for 
> python. I did find the libquic project. Do you know of any work going on for 
> this protocol for Twisted?

Right now QUIC is in its *very* early stages. For reference the current interop draft is -4, and the interop goal is literally just to be able to complete the handshake. None of the currently available OSS implementations have a goal at this stage to actually be able to transmit data amongst themselves. Even this goal is currently hard to reach due to disagreements about which TLS 1.3 draft version should be used (-18 or -20).

The upshot of this is that QUIC is at least a year away from being a serious proposition to deploy in the wild!

I am constantly keeping an eye on the landscape of OSS QUIC implementations that could be bound into Twisted. At this time there is nothing really useful. The two best options are ngtcp2 and quicly. Both of these are C libraries which can easily be bound by Twisted. However, both are currently not well suited for use with Twisted due to their insistence on using non-OpenSSL TLS backends (BoringSSL and pictols respectively). ngtcp2 will eventually support OpenSSL, which will make it the best option for Twisted, but until the difficulty about TLS 1.3 drafts is resolved it will stay on BoringSSL for the forseeable future.

I suppose the TL;DR here is that you can’t really deploy QUIC in the wild, so the absence of a Twisted implementation is not hugely meaningful. ;)

Cory

From adi at roiban.ro  Thu Jul  6 04:14:10 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 6 Jul 2017 11:14:10 +0100
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>

On 5 July 2017 at 23:00, Stephen McRoberts <steveo at mcroberts.org> wrote:
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.

[snip]

As suggested by Glyph.
Please provide a complete minimal example which can be used to
reproduce this behaviour.

http://sscce.org/

I am happy to help with any SSH related bugs.

-- 
Adi Roiban


From steveo at mcroberts.org  Thu Jul  6 09:19:05 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Thu, 6 Jul 2017 10:19:05 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
Message-ID: <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>

It already helps to know this isn't normal behavior.
My code is self-contained in a single file and I can add a main for testing.
However it's far from minimal. The problem doesn't occur right away - only after several channels have been opened/closed with a persistent connection.
I'll continue to work and try to minimally pin it down but as you know it's difficult with asynchronous operations on several hosts.
It can run 100's of channels on multiple hosts without a problem or the problem can occur in the first five minutes.
For now, I just add a canceller method on downstream deferreds and try again.

Steve

> On Jul 6, 2017, at 5:14 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 5 July 2017 at 23:00, Stephen McRoberts <steveo at mcroberts.org> wrote:
>> I'm looking for suggestions why the channel key would be missing after it was just opened.
>> I use persistent connections with a timeout but the timer is reset every call so it stays open.
> 
> [snip]
> 
> As suggested by Glyph.
> Please provide a complete minimal example which can be used to
> reproduce this behaviour.
> 
> http://sscce.org/
> 
> I am happy to help with any SSH related bugs.
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From adi at roiban.ro  Thu Jul  6 10:31:40 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 6 Jul 2017 17:31:40 +0100
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
 <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>
Message-ID: <CAFycZ9eK_S1Tqh0OLPDx6iung36GtZtxLnLoyh0qimFq56=d9w@mail.gmail.com>

On 6 July 2017 at 16:19, Stephen McRoberts <steveo at mcroberts.org> wrote:
> It already helps to know this isn't normal behavior.
> My code is self-contained in a single file and I can add a main for testing.

I don't know what your code is doing... so maybe is expected :)
You can share the single file together with a description of how to
run it and how to wait for the error.

Regards,
-- 
Adi Roiban


From steveo at mcroberts.org  Thu Jul  6 10:59:46 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Thu, 6 Jul 2017 11:59:46 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>

Do I just post it to the list?
I need to write up a little as there needs to be configuration dicts for the logins to remotes.
I also need to put copyright data in the code. Some of it is mine and some came under apache license (really never intended any other eyes to see it).

> On Jul 5, 2017, at 5:00 PM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.
> 
> Here's some of my logs:
> 
> 2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
> 2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
> --- (snipped traceback for clarity) ---
> File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
>   channel = self.channels[localChannel]
>   exceptions.KeyError: 4
> 
> The same connection instance will work later on the next channel so it seems the connection is fine.
> 
> Any suggestions on what would cause this behavior?
> 
> Is this behavior typical?
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From p.mayers at imperial.ac.uk  Fri Jul  7 04:59:30 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 7 Jul 2017 11:59:30 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>

On 06/07/17 03:58, Glyph wrote:
> 
>> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com 
>> <mailto:barry.scott at forcepoint.com>> wrote:
>>
>> I am interested in using Twisted with a couple of technologies: 
>> WebSockets and
>> QUIC. I'm researching what is already available.
> 
> Why are you interested in QUIC? My understanding was that Google used 
> this protocol as an experiment, but HTTP/2 is the successful termination 
> of the experiment, and nobody should really be using it.  (For http2 
> support, `pip install twisted[tls,http2]`).

QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was 
the easiest first step, but as you've noted there's substantial interest 
in running HTTP/2 over better-than-TCP transport (UDP being the only 
practical alternative in the near term, what with middleboxes being so 
horribly omnipresent).

As someone else noted, maybe you're thinking of SPDY?

Ironically the goals of QUIC are, I believe, similar to Vertex ;o)


From barry.scott at forcepoint.com  Fri Jul  7 06:14:53 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Fri, 7 Jul 2017 13:14:53 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <214206674.tzngfghdHU@barry-scott-desktop>

On Thursday, 6 July 2017 03:58:05 BST Glyph wrote:
> > On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com>
> > wrote:
> > 
> > I am interested in using Twisted with a couple of technologies: WebSockets
> > and QUIC. I'm researching what is already available.
> 
> Why are you interested in QUIC? My understanding was that Google used this
> protocol as an experiment, but HTTP/2 is the successful termination of the
> experiment, and nobody should really be using it.  (For http2 support, `pip
> install twisted[tls,http2]`).

My management is looking to the future and wanted to know if support for QUIC
was in Twisted. We use twisted in our cloud services and may need QUIC support 
if it is adopeted more widely.

> 
> Investigating now I guess I can see
> https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02
> <https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02> suggests that it
> has a future life as a transport for http2?
> > I found the autobahn-python for WebSockets, are there other projects that
> > provide WebSockets that I have missed?
> 
> There's txWS... but autobahn is a lot more current and updated.
> 
> > I could not find references to any projects supporting the QUIC protocol
> > for python. I did find the libquic project. Do you know of any work going
> > on for this protocol for Twisted?
> 
> None that I know of.  Perhaps you could contribute it!

That is a possibility.

Barry

> 
> -glyph



From barry.scott at forcepoint.com  Fri Jul  7 06:17:40 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Fri, 7 Jul 2017 13:17:40 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
Message-ID: <1855869.VS3c9gT4sU@barry-scott-desktop>

On Friday, 7 July 2017 11:59:30 BST Phil Mayers wrote:
> On 06/07/17 03:58, Glyph wrote:
> >> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com
> >> <mailto:barry.scott at forcepoint.com>> wrote:
> >> 
> >> I am interested in using Twisted with a couple of technologies:
> >> WebSockets and
> >> QUIC. I'm researching what is already available.
> > 
> > Why are you interested in QUIC? My understanding was that Google used
> > this protocol as an experiment, but HTTP/2 is the successful termination
> > of the experiment, and nobody should really be using it.  (For http2
> > support, `pip install twisted[tls,http2]`).
> 
> QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was
> the easiest first step, but as you've noted there's substantial interest
> in running HTTP/2 over better-than-TCP transport (UDP being the only
> practical alternative in the near term, what with middleboxes being so
> horribly omnipresent).
> 
> As someone else noted, maybe you're thinking of SPDY?

I know abnout SPDY, it is indeed QUIC that I'm researching into.

I read on the ATS (apache traffic server) list that there is a IETF QUIC
being worked on and that ATS is aiming for end 2018 for QUIC support.

Barry

> 
> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From p.mayers at imperial.ac.uk  Fri Jul  7 07:15:39 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 7 Jul 2017 14:15:39 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <1855869.VS3c9gT4sU@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <1855869.VS3c9gT4sU@barry-scott-desktop>
Message-ID: <66c07d65-68b2-7595-e99a-d79b3726c3ee@imperial.ac.uk>

On 07/07/17 13:17, Barry Scott wrote:

>> As someone else noted, maybe you're thinking of SPDY?
> 
> I know abnout SPDY, it is indeed QUIC that I'm researching into.

I was talking to Glyph ;o) Sorry for any confusion.


From steveo at mcroberts.org  Fri Jul  7 10:55:56 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Fri, 7 Jul 2017 11:55:56 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
Message-ID: <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>

 I made a minimal single-file.py app to perform test runs and never had the issue. Observer altered reality?

Then I realized there are a couple of threads in the application which were there before moving to twisted a long time ago. They never manifested themselves in any other way.

I removed the python threads and now it's running without the channel problem. (As a side note, I had overcome the channel problem by sending deferreds to a point where I could re-start the channel open and it would work but I'm glad to have that work-around out of the code.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/cecfae33/attachment.html>

From glyph at twistedmatrix.com  Fri Jul  7 20:58:16 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 19:58:16 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
Message-ID: <F3B91C5D-4D2D-408C-9D55-3B109966EAE1@twistedmatrix.com>


> On Jul 6, 2017, at 9:59 AM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> Do I just post it to the list?

If the list is where you're asking for help, yes :).

> I need to write up a little as there needs to be configuration dicts for the logins to remotes.
> I also need to put copyright data in the code. Some of it is mine and some came under apache license (really never intended any other eyes to see it).

Sure, all the usual stuff from http://sscce.org <http://sscce.org/> applies.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/2bc55c51/attachment.html>

From glyph at twistedmatrix.com  Fri Jul  7 20:59:05 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 19:59:05 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
Message-ID: <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>


> On Jul 7, 2017, at 3:59 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 06/07/17 03:58, Glyph wrote:
>>> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com <mailto:barry.scott at forcepoint.com>> wrote:
>>> 
>>> I am interested in using Twisted with a couple of technologies: WebSockets and
>>> QUIC. I'm researching what is already available.
>> Why are you interested in QUIC? My understanding was that Google used this protocol as an experiment, but HTTP/2 is the successful termination of the experiment, and nobody should really be using it.  (For http2 support, `pip install twisted[tls,http2]`).
> 
> QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was the easiest first step, but as you've noted there's substantial interest in running HTTP/2 over better-than-TCP transport (UDP being the only practical alternative in the near term, what with middleboxes being so horribly omnipresent).
> 
> As someone else noted, maybe you're thinking of SPDY?

I think I was actually thinking of the somewhat confusingly-named "QUIC Crypto", which is actually dead, and we should either use TLS 1.3, or, as QUIC apparently does now, DTLS.

> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)

Really?  How so?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/bb7360f8/attachment.html>

From glyph at twistedmatrix.com  Fri Jul  7 21:06:20 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 20:06:20 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
 <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>
Message-ID: <47204E81-11A5-40AA-AFA3-812655C2C72F@twistedmatrix.com>


> On Jul 7, 2017, at 9:55 AM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
>  I made a minimal single-file.py app to perform test runs and never had the issue. Observer altered reality?
> 
> Then I realized there are a couple of threads in the application which were there before moving to twisted a long time ago. They never manifested themselves in any other way.
> 
> I removed the python threads and now it's running without the channel problem. (As a side note, I had overcome the channel problem by sending deferreds to a point where I could re-start the channel open and it would work but I'm glad to have that work-around out of the code.)
> 
Hooray, glad you managed to track it down (sort of)!  Unfortunately it's quite difficult for us to automatically reject usage of Twisted APIs from threads without catastrophically terrible performance :-\.  But this is the cause of a lot of "how could this possibly happen" reports from users.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/c3cb4234/attachment.html>

From p.mayers at imperial.ac.uk  Sat Jul  8 02:47:50 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 8 Jul 2017 09:47:50 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
Message-ID: <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>

On 08/07/17 03:59, Glyph wrote:

>> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
>
> Really?  How so?

Sorry, memory not serving me well. I'm thinking of the PTCP bits, I'd 
managed to remember that, but forget about all the rest!

So no, not similar - my mistake.


From hawkowl at atleastfornow.net  Sat Jul  8 21:30:06 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 9 Jul 2017 13:30:06 +1000
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
 <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
Message-ID: <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>


> On 6 Jul 2017, at 12:41, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> Hi,
>> 
>> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
>> 
>> seems to now be failing with:
>> 
>> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
>> 
>> Can someone upgrade pypy on this builder?
> 
> Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.
> 
> We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.
> 
> Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?
> 
> -glyph

This is done. PyPy graces https://speed.twistedmatrix.com/comparison/ <https://speed.twistedmatrix.com/comparison/> once again, and the unsupported build works.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/f372e98f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170709/f372e98f/attachment.sig>

From hawkowl at atleastfornow.net  Sat Jul  8 21:32:38 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 9 Jul 2017 13:32:38 +1000
Subject: [Twisted-Python] Buildbot Updates: Addition of Debian 9,
	Removal of Ubuntu 12.04
Message-ID: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>

Hello everyone,

I've just updated the Twisted buildbots to add the newest Debian release (with Python 2.7 and 3.5 as supported Python versions), and removed the now-EOL Ubuntu 12.04 buildbots, which ran Python 2.7.

The next version of Twisted will now correspondingly support Debian 9, and not support Ubuntu 12.04.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170709/bc051919/attachment.sig>

From trac at twistedmatrix.com  Sun Jul  9 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Jul 2017 06:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1499580321.74.1720457896187295711@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/face36fc/attachment.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:21:44 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:21:44 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
 <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>
Message-ID: <863D1CD5-5A6E-4FD7-8E7D-EB61431C159F@twistedmatrix.com>


> On Jul 8, 2017, at 1:47 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 08/07/17 03:59, Glyph wrote:
> 
>>> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
>> 
>> Really?  How so?
> 
> Sorry, memory not serving me well. I'm thinking of the PTCP bits, I'd managed to remember that, but forget about all the rest!
> 
> So no, not similar - my mistake.

In a way, PTCP is much less ambitious, as well: it is just TCP over UDP in order to get connection-initiations through firewalls.

My understanding of QUIC is that it has very different goals: it's not the thing you'd use for peer-to-peer connectivity (that would be something like RTMP) but rather it's over UDP so it can have slightly different guarantees and performance characteristics than TCP itself.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/863265a0/attachment.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:35:00 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:35:00 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
 <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
 <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>
Message-ID: <5AF43248-F1E5-4951-A476-471E6CBD819D@twistedmatrix.com>


> On Jul 8, 2017, at 8:30 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> 
>> On 6 Jul 2017, at 12:41, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> 
>>> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> Hi,
>>> 
>>> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
>>> 
>>> seems to now be failing with:
>>> 
>>> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
>>> 
>>> Can someone upgrade pypy on this builder?
>> 
>> Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.
>> 
>> We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.
>> 
>> Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?
>> 
>> -glyph
> 
> This is done. PyPy graces https://speed.twistedmatrix.com/comparison/ <https://speed.twistedmatrix.com/comparison/> once again, and the unsupported build works.

Thanks Amber!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/51359be1/attachment.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:35:20 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:35:20 -0700
Subject: [Twisted-Python] Buildbot Updates: Addition of Debian 9,
 Removal of Ubuntu 12.04
In-Reply-To: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>
References: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>
Message-ID: <3D79EFD4-80BE-48CE-8283-1546773F1966@twistedmatrix.com>


> On Jul 8, 2017, at 8:32 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hello everyone,
> 
> I've just updated the Twisted buildbots to add the newest Debian release (with Python 2.7 and 3.5 as supported Python versions), and removed the now-EOL Ubuntu 12.04 buildbots, which ran Python 2.7.
> 
> The next version of Twisted will now correspondingly support Debian 9, and not support Ubuntu 12.04.
> 
> - Amber

Yay builder maintenance!

-g


From yeh at uda.co.il  Tue Jul 11 01:44:51 2017
From: yeh at uda.co.il (Yehuda Deutsch)
Date: Tue, 11 Jul 2017 07:44:51 +0000
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
Message-ID: <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>

Hi,

This is great, I am building new deployment tools for my company's
infrastructure, since we host on AWS this will be most useful.
If i am not wrong, you are following the boto design, if so why not base on
the boto3 design?

On Tue, Jul 4, 2017 at 11:28 PM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Tue, Jul 4, 2017 at 4:08 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> > On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>> >
>> > Hello all,
>> >
>> > I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library
>> for interacting with Amazon Web Services (AWS) using Twisted.
>>
>> Woohoo!
>>
>> This reminds me; I have a question about txAWS: if I have an EC2 instance
>> or ECS instance with a machine role, will txAWS pick up the ambient
>> credentials from ... I guess it's the metadata server that provides them?
>>
>>
> Nope, it totally won't.  There's been some progress recently in improving
> the way credentials are supplied to txAWS.  I hope there's some more soon
> to add these kinds of capabilities.
>
> Jean-Paul
>
>
>
>> -glyph
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170711/5ff0f51b/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul 11 04:41:15 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 11 Jul 2017 06:41:15 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
Message-ID: <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>

On Tue, Jul 11, 2017 at 3:44 AM, Yehuda Deutsch <yeh at uda.co.il> wrote:

> Hi,
>
> This is great, I am building new deployment tools for my company's
> infrastructure, since we host on AWS this will be most useful.
>

Cool!  Glad to hear it's of use. :)


> If i am not wrong, you are following the boto design, if so why not base
> on the boto3 design?
>

If this was an original design decision about txaws (which was around for a
long time before I got involved with it), I'm not aware of it.  For my
part, with the recent Route 53 work, I've just been looking that AWS API
documentation and trying to expose the APIs in the most straightforward way
possible.

Do you see particular similarities between boto/boto3 and txAWS?  Do you
think there is something to be gained by explicitly mirroring something
done in those libraries?

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170711/502343d3/attachment.html>

From thomas.westfeld at currenta.de  Tue Jul 11 09:04:38 2017
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Tue, 11 Jul 2017 15:04:38 +0000
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
Message-ID: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>

Dear all,

I am experiencing an issue with my twistd plugin. It is in a project_plugin.py 
file in the twisted/plugins directory of my project.

Calling "twistd --help" works fine up to twistd version 16.3.2 but in 16.4.0 
the plugin is not recognized anymore.

This is how it looks like:

from zope.interface import implementer

from twisted.application.service import IServiceMaker
from twisted.application import internet
from twisted.plugin import IPlugin
from twisted.python import usage

from myfile import MyFactory

class Options(usage.Options):
	optParameters = [["port", "p", 8000, "The port number to listen on."],
                         ["my-hostname", "l", "", "the hostname of other 
server"],
                         ["my-port", "i", 9000,"the port of the other 
server"]]

@implementer(IServiceMaker, IPlugin)
class MyServiceMaker(object):
        tapname = "myserver"
        description = ""
        options = Options

        def makeService(self, options):
            return internet.TCPServer(int(options["port"]), 
MyFactory(options["my-hostname"], options["my-port"]))

serviceMaker = MyServiceMaker()

Any help is appreciated.

Thomas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 6085 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20170711/b26d4613/attachment.bin>

From steveo at mcroberts.org  Tue Jul 11 12:02:35 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Tue, 11 Jul 2017 13:02:35 -0500
Subject: [Twisted-Python] Need help with SSHUserAuthClient keyfile and
	passphrase
Message-ID: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>

My auth code works for a public keyfile on my local servers but I can't get it to work with a private key.

***Here's an ssh debug list when I login at the console (not twisted):
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Trying private key: /home/sten/.ssh/mcroberts.org-rsa
debug1: key_load_private_type: incorrect passphrase supplied to decrypt private key
Enter passphrase for key '/home/sten/.ssh/myserver.com-rsa': 
debug1: Authentication succeeded (publickey).

***Here's my twisted log:
2017-07-11 12:47:03-0500 [] can continue with: ['publickey', 'password']
2017-07-11 12:47:03-0500 [] trying to auth with publickey
2017-07-11 12:47:03-0500 [] KeyFileAuth.getPublicKey
2017-07-11 12:47:03-0500 []    pubkeyfile=None
2017-07-11 12:47:03-0500 [] KeyFileAuth.getPrivateKey
2017-07-11 12:47:03-0500 []    /home/steve/.ssh/mcroberts.org-rsa is encrypted - looking for passphrase
2017-07-11 12:47:03-0500 [] trying to auth with password

Note that they both only ask for  ['publickey', 'password']. My following code attempts the same but fails.
Here's my source code. This is called from the SSHConnection class before starting service. The verify host is already done.

class KeyFileAuth(userauth.SSHUserAuthClient):
    #https://twistedmatrix.com/documents/current/api/twisted.conch.ssh.userauth.SSHUserAuthClient.html
    #http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.keys.Key.html

    def __init__(self, config, user, instance):
        self.config = config
        self.user = user
        log.msg("KeyFileAuth - requesting auth for user %s @ %s" % (user,config.get('host')), level=logging.DEBUG)
        userauth.SSHUserAuthClient.__init__(self,user,instance)
    
    #--------------------------
    def getPublicKey(self):
        log.msg("KeyFileAuth.getPublicKey", level=logging.DEBUG)
        kf = self.config.get('pubkeyfile')
        log.msg("   pubkeyfile=%s" % (kf), level=logging.DEBUG)
        if kf is not None:
            try:
                if kf.startswith('~'):
                    kf = os.path.expanduser(kf)
                if not os.path.exists(kf):
                    msg = "   No such pubkeyfile=%s" % (kf)
                    return defer.fail(msg)
            except Exception as e:
                log.err("   provided pubkeyfile=%s raised %s" % (kf,e))
                return defer.fail(msg)
        #
        # no apparent public keyfile in config
        # private keyfile - this is the way ssh -v shows it done as in:
        #     debug1: Authentications that can continue: publickey,password
        #     debug1: Next authentication method: publickey
        #     debug1: Trying private key: /home/steve/.ssh/awebsite.com-rsa
        #
        elif self.config.get('keyfile') is not None:
            return self.getPrivateKey()
        return defer.fail("KeyFileAuth.getPublicKey out of options")
    
    #--------------------------
    def getPrivateKey(self):
        log.msg("KeyFileAuth.getPrivateKey", level=logging.DEBUG)
        kf = self.config.get('keyfile')
        if kf is not None:
            try:
                if kf.startswith('~'):
                    kf = os.path.expanduser(kf)
                if not os.path.exists(kf):
                    msg = "   No such keyfile=%s" % (kf)
                    return defer.fail(msg)
            except Exception as e:
                msg = "   provided keyfile=%s raised %s" % (kf,e)
                return defer.fail(msg)
        try:
            return defer.succeed(keys.Key.fromFile(kf))
        except keys.EncryptedKeyError:
            log.msg("   %s is encrypted - looking for passphrase" % (kf), level=logging.INFO)
            if self.config.get('passphrase'):
                passphrase = self.config.get('passphrase')
                return defer.succeed(keys.Key.fromFile(kf, passphrase))
            else:
                msg = "   No passphrase found for keyfile=%s" % (kf)
                return defer.fail(msg)
        except Exception as e:
            msg = "   keyfile=%s raised %s" % (kf,e)
            return defer.fail(msg)
        return defer.fail("KeyFileAuth.getPrivateKey out of options")



From dansut at gmail.com  Tue Jul 11 17:39:55 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Tue, 11 Jul 2017 19:39:55 -0400
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
In-Reply-To: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
References: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
Message-ID: <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>

On Tue, Jul 11, 2017 at 11:04 AM, Thomas Westfeld
<thomas.westfeld at currenta.de> wrote:
> I am experiencing an issue with my twistd plugin. It is in a project_plugin.py
> file in the twisted/plugins directory of my project.
>
> Calling "twistd --help" works fine up to twistd version 16.3.2 but in 16.4.0
> the plugin is not recognized anymore.

This is a PYTHONPATH thing if I remember correctly.
'.' was removed from the path as a side effect of making twistd a
'console script' and this was seen as a good/safer thing.

I believe the proper solution is to install the Python package that
contains your twisted/plugins/ directory.

Here's a link to a mentioning email on this mailing list back then:
  https://twistedmatrix.com/pipermail/twisted-python/2016-September/030782.html

Hope this helps,
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From steveo at mcroberts.org  Wed Jul 12 10:09:00 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Wed, 12 Jul 2017 11:09:00 -0500
Subject: [Twisted-Python] Need help with SSHUserAuthClient keyfile and
 passphrase
In-Reply-To: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>
References: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>
Message-ID: <4CAB837B-23B8-40E7-8388-85B852D06AC5@mcroberts.org>

In case some other lost person stumbles upon this question...
It's a lot of wizardry to me but here's how I got it to work.

    1. Generate a public key from private key with:
        ssh-keygen -f ~/.ssh/myserver.com-rsa -y -P old_passphrase -N new_passphrase > ~/.ssh/myserver.com-rsa.pub
    2. Put the public key in authorized_keys
        cat ~/.ssh/myserver.com-rsa.pub  >> ~/.ssh/authorized_keys

Now when getPublicKey is called, it calls getPrivateKey and all is well. You can retrieve the passphrase however you want but I made an SSHAuthOptions class to hold the keyfile and passphrase. Look at https://github.com/twisted/twisted/blob/twisted-17.5.0/src/twisted/conch/client/default.py and copy relevant parts from getPrivateKey and substitute your passphrase.

Take this for what you paid for it. I don't know much abut SSH2 and don't have the interest to learn so my methods may be called into question.

From dansut at gmail.com  Wed Jul 12 16:36:46 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Wed, 12 Jul 2017 18:36:46 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
Message-ID: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>

I'm getting this report under pypy2 5.8.0 running Twisted trunk from github:
===============================================================================
[FAIL]
Traceback (most recent call last):
  File "/opt/twisted/src/twisted/test/test_plugin.py", line 566, in
test_freshPyReplacesStalePyc
    self.assertIn('one', self.getAllPlugins())
  File "/opt/twisted/src/twisted/trial/_synctest.py", line 492, in assertIn
    % (containee, container))
twisted.trial.unittest.FailTest: 'one' not in ['dev', 'app']

twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/opt/twisted/src/twisted/plugin.py", line 171, in getCache
    provider = pluginModule.load()
  File "/opt/twisted/src/twisted/python/modules.py", line 392, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "/opt/twisted/src/twisted/python/reflect.py", line 312, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'stale'

twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
-------------------------------------------------------------------------------
I'm not sure yet if it works under pypy3.

My initial tracings seem to suggest this is somehow due to __import__
under pypy not finding the stale.pyc where no stale.py exists ... but
I have to admit that at this point if this is actually expected, all I
know is the test passes under python 2.7.13 and if I comment out the
mypath.remove() on line 562...

Willing to do more work to get to the bottom of this, just thought I'd
put this out there to see if I could get any clues from the more
experienced before I dive in. There seem to be some old tickets that
could vaguely relate...

Am I correct in the fact that Twisted doesn't have Travis-CI builds on PyPy?
Maybe there's a reason for this I'm missing...

Thanks in advance for any info or clues,
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From rodrigc at crodrigues.org  Wed Jul 12 17:31:14 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 12 Jul 2017 16:31:14 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
Message-ID: <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>

On Wed, Jul 12, 2017 at 3:36 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:

>
> Am I correct in the fact that Twisted doesn't have Travis-CI builds on
> PyPy?
>

There are two builders which do PyPy:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5
https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5-benchmark

and one here:

http://speed.twistedmatrix.com/

Some of the tests are constantly failing, so if you could investigate and
help fix some of the Pypy issues, that would be much appreciated.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170712/ec7e69bd/attachment.html>

From glyph at twistedmatrix.com  Thu Jul 13 01:58:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Jul 2017 00:58:18 -0700
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
 <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
Message-ID: <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>


> On Jul 11, 2017, at 3:41 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Do you see particular similarities between boto/boto3 and txAWS?  Do you think there is something to be gained by explicitly mirroring something done in those libraries?

The major thing to be gained by mimicking boto3, specifically (not boto 2) is its usage of botocore, which is a bunch of structured, static data describing the parameters used by various AWS APIs.  This could potentially increase the coverage of APIs that txAWS supports.

(boto2 had quite a bit of high-level convenience functionality that I wish boto3 had kept though; I don't think the "nothing but botocore wrappers" approach is necessarily something that should be copied)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/09a46f65/attachment.html>

From exarkun at twistedmatrix.com  Thu Jul 13 04:45:06 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 13 Jul 2017 06:45:06 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
 <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
 <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>
Message-ID: <CAEeXt4PdCOu81vy_jhLMup3APb5v1YG_E=Oh6Nv77nRGy1J86A@mail.gmail.com>

On Thu, Jul 13, 2017 at 3:58 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jul 11, 2017, at 3:41 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Do you see particular similarities between boto/boto3 and txAWS?  Do you
> think there is something to be gained by explicitly mirroring something
> done in those libraries?
>
>
> The major thing to be gained by mimicking boto3, specifically (*not* boto
> 2) is its usage of botocore, which is a bunch of structured, static data
> describing the parameters used by various AWS APIs.  This could potentially
> increase the coverage of APIs that txAWS supports.
>
> (boto2 had quite a bit of high-level convenience functionality that I wish
> boto3 had kept though; I don't think the "nothing but botocore wrappers"
> approach is necessarily something that should be copied)
>
>
Ah.  Yea.  I would like it if someone would do some work on that.
https://github.com/twisted/txaws/issues/13

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/d61464f2/attachment.html>

From dansut at gmail.com  Thu Jul 13 06:57:49 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Thu, 13 Jul 2017 08:57:49 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
Message-ID: <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>

Craig, thanks for the pointers - I should have known about these
really useful resources as I've been lurking a while but for some
reason was focussed on the Travis-CI and Appveyor builds.

I see now the Twisted Development Wiki page
https://twistedmatrix.com/trac/wiki/TwistedDevelopment has links to
the buildbot so I have even less excuse for not being more aware.

On Wed, Jul 12, 2017 at 3:36 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> Am I correct in the fact that Twisted doesn't have Travis-CI builds on
>> PyPy?

On Wed, Jul 12, 2017 at 7:31 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> There are two builders which do PyPy:
>
> https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5

Interestingly although there is also an ERROR here for
twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
it is different to the one I am getting:

[ERROR]
Traceback (most recent call last):
  File "/buildslave/ubuntu16.04-pypy5/Twisted/build/pypy-alldeps-nocov-posix/site-packages/twisted/test/test_plugin.py",
line 560, in test_freshPyReplacesStalePyc
    os.utime(pyc.path, (x, x))
exceptions.OSError: [Errno 2] No such file or directory:
'/buildslave/ubuntu16.04-pypy5/Twisted/_trial_temp/twisted.test.test_plugin/DeveloperSetupTests/test_freshPyReplacesStalePyc/HBEKNc/temp/application_path/plugindummy/plugins/stale.pyc'

Vs mine:

[ERROR]
Traceback (most recent call last):
  File "/usr/src/twisted/src/twisted/plugin.py", line 171, in getCache
    provider = pluginModule.load()
  File "/usr/src/twisted/src/twisted/python/modules.py", line 392, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "/usr/src/twisted/src/twisted/python/reflect.py", line 312, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'stale'

There is also no FAIL in the buildbot build for the same test, mine:

[FAIL]
Traceback (most recent call last):
  File "/usr/src/twisted/src/twisted/test/test_plugin.py", line 566,
in test_freshPyReplacesStalePyc
    self.assertIn('one', self.getAllPlugins())
  File "/usr/src/twisted/src/twisted/trial/_synctest.py", line 492, in assertIn
    % (containee, container))
twisted.trial.unittest.FailTest: 'one' not in ['dev', 'app']

These are different from orig report as now in Docker container
jamiehewland/alpine-pypy:2 (possibly my goal platform) the original
was in a squeaky_pl's portable-pypy 2.7 build of 5.7 pypy. I'm next
going to try the official pypy:2 Docker container as this would seem
to be possibly the most standard platform to try and support in this
day and age...

I'm sure I'll get to the bottom of this but any clues or thoughts from
the more experienced would be appreciated - it seems to me that there
might be some mileage in breaking this problem test up a bit as I
gradually understand more about what it is trying to do... ?

> https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5-benchmark
>
> and one here:
> http://speed.twistedmatrix.com/

I had noted this speed comparison when Hawkowl posted it here the
other week - should have thought to poke further looking for related
builds too as that's what you originally asked about.

On a related point; PyPy has entered a strange phase as their 5.8.0
release now is available as CPython 2.7 or 3.5 compatible builds -
slightly confusing but I see wheels are tagged something like pp258
pp358 - maybe the Twisted project needs also to somehow differentiate
the two. Especially as although the 3.5 builds are still labeled as
beta I get the feeling the impetus (sponsorship) is behind removing
this designation sooner rather than later. Just a thought

> Some of the tests are constantly failing, so if you could investigate and
> help fix some of the Pypy issues, that would be much appreciated.

I shall do my best as my intention is to use Twisted in a live
environment with PyPy so it would be great if the project viewed these
builds as required to be clean sometime in the future. This was just
the first ERROR I attacked, it was always my intention to look into
the others too, which I am also seeing.

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From rodrigc at crodrigues.org  Thu Jul 13 09:31:47 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 13 Jul 2017 08:31:47 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
Message-ID: <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>

On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>
> I shall do my best as my intention is to use Twisted in a live
> environment with PyPy so it would be great if the project viewed these
> builds as required to be clean sometime in the future. This was just
> the first ERROR I attacked, it was always my intention to look into
> the others too, which I am also seeing.
>
>
Thanks for your motivation.  Please keep going, and share your findings on
the mailing list.

Last year, Mark Williams worked on fixing many Twisted unit tests to either
pass or skip on Pypy,
and even found one issue with Pypy itself (
https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
).

If you feel there are improvements or additions to the buildbot jobs using
Pypy, please share
your thoughts.  The builbot master.cfg file is at
https://github.com/twisted-infra/braid/tree/master/services/buildbot/master

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/e33aed1d/attachment.html>

From dansut at gmail.com  Thu Jul 13 17:22:10 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Thu, 13 Jul 2017 19:22:10 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
Message-ID: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>

> On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> I shall do my best as my intention is to use Twisted in a live
>> environment with PyPy so it would be great if the project viewed these
>> builds as required to be clean sometime in the future. This was just
>> the first ERROR I attacked, it was always my intention to look into
>> the others too, which I am also seeing.

On Thu, Jul 13, 2017 at 11:31 AM, Craig Rodrigues
<rodrigc at crodrigues.org> wrote:
> Thanks for your motivation.

No problem, this is one of the few ways I can give back to the Twisted
project that is ultimately helping me achieve my goals;
besides getting to the bottom of these type of things is a fun
learning exercise for me :)

> Please keep going, and share your findings on the mailing list.
>
> Last year, Mark Williams worked on fixing many Twisted unit tests to either
> pass or skip on Pypy, and even found one issue with Pypy itself (
> https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
> ).

This one is likely to fall on deaf ears in the PyPy project...
The reason for the ERROR and then FAIL is as I originally thought,
that __import__() under pypy is not loading .pyc files where the .py
is missing and:
  http://doc.pypy.org/en/latest/config/objspace.lonepycfiles.html
tl;dr - they view it as dangerous due to pyc binary variations and
only allow by build time configuration option.

So the next question I guess is how to deal with this:

- presumably my first step is to log a bug in Trac as any change will
require one, I had only held off from doing this until I was more sure
of the cause of the issue.

- the FAIL goes away if the .py is not removed from the plugins dir
and it seems to me that the .py removal is not actually required to
strictly test what
twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
purports to be testing - so that could fix this test

- the fact that the test ERRORs and then carries on and FAILs later in
a strange fashion is due to the fact twisted.plugin.getCache() simply
does a log.err() on encountering the odd situation - so maybe this
could be dealt with better knowing that PyPy does different things
than CPython here... ?

Could the more experienced please advise :)

> If you feel there are improvements or additions to the buildbot jobs using
> Pypy, please share your thoughts.  The buildbot master.cfg file is at
> https://github.com/twisted-infra/braid/tree/master/services/buildbot/master

I have not looked into why buildbot comes up with a different error to
the one I did on various platforms - fix for my situation and see if
it fixes the pypy buildbot before investigating?

The other error that I and the buildbot see on pypy is 12x (always) of
  Failure: twisted.internet.defer.TimeoutError
for
  twisted.protocols.test.test_tls.TLSMemoryBIOTests.test_hugeWrite_TLSv1_1
which is odd as if I run this test on its own it succeeds every time...
Thoughts on this appreciated but probably should start a new thread for that...

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From glyph at twistedmatrix.com  Thu Jul 13 20:14:28 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Jul 2017 19:14:28 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
Message-ID: <1499998468.3369087.1040428288.3CEB1C37@webmail.messagingengine.com>



On Thu, Jul 13, 2017, at 04:22 PM, Daniel Sutcliffe wrote:
> > On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
> >> I shall do my best as my intention is to use Twisted in a live
> >> environment with PyPy so it would be great if the project viewed these
> >> builds as required to be clean sometime in the future. This was just
> >> the first ERROR I attacked, it was always my intention to look into
> >> the others too, which I am also seeing.
> 
> On Thu, Jul 13, 2017 at 11:31 AM, Craig Rodrigues
> <rodrigc at crodrigues.org> wrote:
> > Thanks for your motivation.
> 
> No problem, this is one of the few ways I can give back to the Twisted
> project that is ultimately helping me achieve my goals;
> besides getting to the bottom of these type of things is a fun
> learning exercise for me :)
> 
> > Please keep going, and share your findings on the mailing list.
> >
> > Last year, Mark Williams worked on fixing many Twisted unit tests to either
> > pass or skip on Pypy, and even found one issue with Pypy itself (
> > https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
> > ).
> 
> This one is likely to fall on deaf ears in the PyPy project...
> The reason for the ERROR and then FAIL is as I originally thought,
> that __import__() under pypy is not loading .pyc files where the .py
> is missing and:
>   http://doc.pypy.org/en/latest/config/objspace.lonepycfiles.html
> tl;dr - they view it as dangerous due to pyc binary variations and
> only allow by build time configuration option.
> 
> So the next question I guess is how to deal with this:
> 
> - presumably my first step is to log a bug in Trac as any change will
> require one, I had only held off from doing this until I was more sure
> of the cause of the issue.
> 
> - the FAIL goes away if the .py is not removed from the plugins dir
> and it seems to me that the .py removal is not actually required to
> strictly test what
> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
> purports to be testing - so that could fix this test
> 
> - the fact that the test ERRORs and then carries on and FAILs later in
> a strange fashion is due to the fact twisted.plugin.getCache() simply
> does a log.err() on encountering the odd situation - so maybe this
> could be dealt with better knowing that PyPy does different things
> than CPython here... ?
> 
> Could the more experienced please advise :)

It is totally fine to skip this test on PyPy.  It's testing the ability
to interact with a particular feature of the CPython interpreter, which
is intentionally absent on PyPy.  Ideally, the implementation would not
enumerate that module on PyPy since it isn't going to be importable as a
module.

In fact, many of the failing tests are for obscure corner cases which
can and should be skipped so that we can declare PyPy a supported
platform, then work on fixing them after the fact :-).

> > If you feel there are improvements or additions to the buildbot jobs using
> > Pypy, please share your thoughts.  The buildbot master.cfg file is at
> > https://github.com/twisted-infra/braid/tree/master/services/buildbot/master
> 
> I have not looked into why buildbot comes up with a different error to
> the one I did on various platforms - fix for my situation and see if
> it fixes the pypy buildbot before investigating?
> 
> The other error that I and the buildbot see on pypy is 12x (always) of
>   Failure: twisted.internet.defer.TimeoutError
> for
>   twisted.protocols.test.test_tls.TLSMemoryBIOTests.test_hugeWrite_TLSv1_1
> which is odd as if I run this test on its own it succeeds every time...
> Thoughts on this appreciated but probably should start a new thread for
> that...
> 
> Cheers
> /dan
> -- 
> Daniel Sutcliffe <dansut at gmail.com>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From rodrigc at crodrigues.org  Fri Jul 14 00:22:59 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 13 Jul 2017 23:22:59 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
Message-ID: <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>
>
> - the FAIL goes away if the .py is not removed from the plugins dir
> and it seems to me that the .py removal is not actually required to
> strictly test what
> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
> purports to be testing - so that could fix this test



OK.  Based on your analysis, and also Glyph's recommendation,
I think it is OK for this test to skip if Pypy is used.

Can you submit a patch for this test to skip on Pypy?
I think you can get things rolling if you do something like:

(1)  Learn the procedure to submit a patch by reading:
https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
      There are a number of steps, but really it is not that bad.

(2)   Submit a patch that does the following:
        - modify twisted/test/test_plugin.py so that you:
        (a)  import _PYPY from twisted.python.compat
        (b) and then do something like:

         if _PYPY:
             test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"

I can help review the change to get it in.

Thanks!
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/1b521e6b/attachment.html>

From dansut at gmail.com  Fri Jul 14 09:47:22 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Fri, 14 Jul 2017 11:47:22 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
 <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
Message-ID: <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> - the FAIL goes away if the .py is not removed from the plugins dir
>> and it seems to me that the .py removal is not actually required to
>> strictly test what
>> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
>> purports to be testing - so that could fix this test

On Thu, Jul 13, 2017 at 10:14 PM Glyph <glyph at twistedmatrix.com> wrote:
> It is totally fine to skip this test on PyPy.  It's testing the ability
> to interact with a particular feature of the CPython interpreter, which
> is intentionally absent on PyPy.  Ideally, the implementation would not
> enumerate that module on PyPy since it isn't going to be importable as a
> module.

On Fri, Jul 14, 2017 at 2:22 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> OK.  Based on your analysis, and also Glyph's recommendation,
> I think it is OK for this test to skip if Pypy is used.
>
> Can you submit a patch for this test to skip on Pypy?
> I think you can get things rolling if you do something like:
>
> (1)  Learn the procedure to submit a patch by reading:
> https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
>       There are a number of steps, but really it is not that bad.

Created a ticket to get this ball rolling:
https://twistedmatrix.com/trac/ticket/9219
This will be my second PR, but first for actual code, and have been
lurking for some while so already have some familiarity with the
process - let's see how badly I can screw it up though ;)

> (2)   Submit a patch that does the following:
>         - modify twisted/test/test_plugin.py so that you:
>         (a)  import _PYPY from twisted.python.compat
>         (b) and then do something like:
>
>          if _PYPY:
>              test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"

I have an idea for a PR that goes a little bit further than this -
I'll submit to see if acceptable and if not I'll fall back to this
approach.

> I can help review the change to get it in.

Thanks Craig, appreciated.

Glyph wrote:
> In fact, many of the failing tests are for obscure corner cases which
> can and should be skipped so that we can declare PyPy a supported
> platform, then work on fixing them after the fact :-).

My intention is to look at each issue in turn if I can get this one
through - hoping to see PyPy declared as 'supported' sooner rather
than later :)

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From dansut at gmail.com  Fri Jul 14 17:20:25 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Fri, 14 Jul 2017 19:20:25 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
 <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
 <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>
Message-ID: <CADzPF4tqz+YvP+6pDmPv2LKJReXZYcRKy208QDAu=za_tgTEXg@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>>> - the FAIL goes away if the .py is not removed from the plugins dir
>>> and it seems to me that the .py removal is not actually required to
>>> strictly test what
>>> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
>>> purports to be testing - so that could fix this test
>
> On Thu, Jul 13, 2017 at 10:14 PM Glyph <glyph at twistedmatrix.com> wrote:
>> It is totally fine to skip this test on PyPy.  It's testing the ability
>> to interact with a particular feature of the CPython interpreter, which
>> is intentionally absent on PyPy.  Ideally, the implementation would not
>> enumerate that module on PyPy since it isn't going to be importable as a
>> module.
>
> On Fri, Jul 14, 2017 at 2:22 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> OK.  Based on your analysis, and also Glyph's recommendation,
>> I think it is OK for this test to skip if Pypy is used.
>>
>> Can you submit a patch for this test to skip on Pypy?
>> I think you can get things rolling if you do something like:
>>
>> (1)  Learn the procedure to submit a patch by reading:
>> https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
>>       There are a number of steps, but really it is not that bad.

On Fri, Jul 14, 2017 at 11:47 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
> Created a ticket to get this ball rolling:
> https://twistedmatrix.com/trac/ticket/9219
> This will be my second PR, but first for actual code, and have been
> lurking for some while so already have some familiarity with the
> process - let's see how badly I can screw it up though ;)

PR now exists: https://github.com/twisted/twisted/pull/837

>> (2)   Submit a patch that does the following:
>>         - modify twisted/test/test_plugin.py so that you:
>>         (a)  import _PYPY from twisted.python.compat
>>         (b) and then do something like:
>>
>>          if _PYPY:
>>              test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"
>
> I have an idea for a PR that goes a little bit further than this -
> I'll submit to see if acceptable and if not I'll fall back to this
> approach.

I ended up just doing the disabling - after playing around with trying
to improve testing in this area I decided that I was getting in over
my experience level and thought the basics was a a better first step.

I will say though, I think there is some mileage in actually changing the
  test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
to be more of a
  test_plugin.test_freshPyReplacesCached
could remove the need to mess around with the idea of knowing there is
the .pyc (with PY3 legacy required) and dropin.cache involved at all
and making this test more of a 'unit' test.

Then more tests can be created to deal with specific cases, such as
test_lonePycLoads can be created (and skipped more meaningfully for
PyPy2) ... just a thought, and I don't mind doing if it is thought
useful.

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>


From trac at twistedmatrix.com  Sun Jul 16 00:05:27 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Jul 2017 06:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1500185127.12.4960803751498996563@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170716/de4f1af5/attachment.html>

From thomas.westfeld at currenta.de  Mon Jul 17 09:42:14 2017
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Mon, 17 Jul 2017 15:42:14 +0000
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
In-Reply-To: <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>
References: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
 <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>
Message-ID: <0b1d2a4653fe4ca8b7891ff83800c25d@BYEX35.de.bayer.cnb>

Hello Daniel,

Indeed you were correct, the PYTHONPATH made the difference.

Thank you!
Thomas


This is a PYTHONPATH thing if I remember correctly.
'.' was removed from the path as a side effect of making twistd a
'console script' and this was seen as a good/safer thing.

I believe the proper solution is to install the Python package that
contains your twisted/plugins/ directory.


From fehrist at codeghar.com  Mon Jul 17 11:08:08 2017
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 17 Jul 2017 10:08:08 -0700
Subject: [Twisted-Python] Using Twisted with pytest fixtures
Message-ID: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>

I use pytest[0] to write integration test automation. If the tests are stripped
down to their core, they are basically using different network connections and
protocols to drive multiple applications. Tests use the following Python
libraries:

* paramiko[2]
* docker[3]
* requests[4]
* pychef[5]
* pymongo[6]
* python-qpid-proton[7]
* websocket-client[8]

I use pytest fixtures[1] heavily. Each of the aforementioned libraries is used
such that each connection (say SSH) is provided to tests through that fixture.
This makes writing tests quite simple as a single object can be used to
maintain a network connection that can be reused across multiple tests in the
same session. In case the connection needs to be re-established, the class has
methods to hide that detail from the tests and things just work.

Sample code is presented below:

    # In conftest.py
    from path_to_lib.ssh import SSH
    @pytest.fixture(scope="session")
    def ssh_fixture():
        return SSH(
            host=hostname_,
            port=22,
            username=username_,
            pem=path_to_pem)


    # In path_to_lib/ssh.py
    import paramiko
    class SSH(object):
        def __init__(self, host, port, username, pem):
            self.host = host
            self.port = port
            self.username = username
            self.pem = pem
            self.client = paramiko.SSHClient()
            self.client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            self.transport = None

        def _connect(self):
            self.client.connect(
                hostname=self.host,
                username=self.username,
                key_filename=self.pem,
                port=self.port)

        def exec_cmd(self, cmd):
            try:
                _, stdout, stderr = self.client.exec_command(
                    cmd,
                    get_pty=True)
            except:
                self._connect()
                _, stdout, stderr = self.client.exec_command(
                    cmd,
                    get_pty=True)
            return stdout, stderr

    # In path_to_tests/test_foo.py
    def test_foo(ssh_fixture):
        cmd = "hostname"
        stdo, stde = ssh_fixture.exec_cmd(cmd)
        assert stdo

    # In path_to_tests/test_blah.py
    def test_blah(ssh_fixture):
        cmd = "ls /"
        stdo, stde = ssh_fixture.exec_cmd(cmd)
        assert stdo

The above sample code is essentially how all other libraries (say for Mongo)
are used in my tests. Each type of protocol is presented to tests through a
fixture and tests only need to call certain methods without having to know
the gory details behind them.

This method provides very readable code. It also makes writing tests much
easier.

In addition to using these libraries sometimes I need to use the socket library
to talk to proprietary services using TCP and/or UDP that don't have open
source libraries available.

The problem is that I have a *lot* of these integration tests that can run for
a long time (anywhere from 2 hours to 12 hours based on the test set selected)
(I need to test a *lot* of services and components). This is causing some
issues when I get my hands dirty with the socket library.

Instead of writing a custom and badly implemented Twisted alternative I thought
I could use Twisted to replace a bunch of these libraries. Of course, I can't
replace all of them at once today but I'd much rather start on the path.

As I started getting familiar with the official and community docs I realized
that most of them deal with writing servers (and sometimes clients). I can't
find any docs on how people in my situation use Twisted.

>From what I understand -- forgive my beginner-level grasp of the subject
matter -- once the reactor starts no more listenTCP() or connectTCP()
(for example) can be added. And until the reactor stops code execution does not
progress beyond ``reactor.run()``. For example, in the code below, _Done_ is
not printed until there's a ``reactor.stop()`` somewhere above it.

    blah ...
    reactor.run()
    print("Done")




My questions for the community:

* How can I use Twisted that fits the way my tests are written?
* If I have to rewrite my tests to fit the Twisted model, do I start the
  reactor every time for each test and stop it at the end?
* Are there any known issues with start/stop reactor multiple times in a
  single, long-running process?
* Are there any good examples of using Twisted in integration tests that I
  have failed to find?




[0] https://docs.pytest.org/en/latest/
[1] https://docs.pytest.org/en/latest/fixture.html
[2] https://pypi.org/project/paramiko/
[3] https://pypi.org/project/docker/
[4] https://pypi.org/project/requests/
[5] https://pypi.org/project/PyChef/
[6] https://pypi.org/project/pymongo/
[7] https://pypi.org/project/python-qpid-proton/
[8] https://pypi.org/project/websocket-client/


Thanks in advance.

Hamza Sheikh
Twitter: @aikchar


From meejah at meejah.ca  Mon Jul 17 12:08:09 2017
From: meejah at meejah.ca (meejah)
Date: Mon, 17 Jul 2017 22:08:09 +0400
Subject: [Twisted-Python] Using Twisted with pytest fixtures
In-Reply-To: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
 (Hamza Sheikh's message of "Mon, 17 Jul 2017 10:08:08 -0700")
References: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
Message-ID: <86r2xfx7g6.fsf@atlantis.meejah.ca>

Hamza Sheikh <fehrist at codeghar.com> writes:

> From what I understand -- forgive my beginner-level grasp of the
> subject matter -- once the reactor starts no more listenTCP() or
> connectTCP() (for example) can be added.

You can call these methods after the reactor starts with no problems.

> And until the reactor stops code execution does not progress beyond
> ``reactor.run()``.

Yes, this is true.

> * How can I use Twisted that fits the way my tests are written?
> * If I have to rewrite my tests to fit the Twisted model, do I start the
>   reactor every time for each test and stop it at the end?

No, I would use a "session"-scoped "reactor" fixture that starts the
reactor once, and stops it once. This is also what the function
twisted.internet.task.react does for you (but probably not appropriate
for pytest tests).

> * Are there any known issues with start/stop reactor multiple times in a
>   single, long-running process?

You cannot re-start the reactor.

> * Are there any good examples of using Twisted in integration tests that I
>   have failed to find?

I have a blog post on this, outlining some integration tests that I
wrote for Tahoe-LAFS (which uses Twisted) and which also starts a
25-node Tor test network.

   https://meejah.ca/blog/pytest-integration-testing

You probably also want the pytest-twisted extension for pytest.  I'm
often around in #twisted or #tahoe-lafs on Freenode IRC if you'd like to
discuss.

-- 
meejah


From trac at twistedmatrix.com  Sun Jul 23 00:05:23 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Jul 2017 06:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1500789923.15.234126202041052932@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170723/fc03c88b/attachment.html>

From glyph at twistedmatrix.com  Sun Jul 23 22:39:50 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 23 Jul 2017 21:39:50 -0700
Subject: [Twisted-Python] quality of non-member reviews
Message-ID: <8AE1B95C-AA4C-422E-A6AF-4F71A97D6CE9@twistedmatrix.com>

Hello Twisted Project Members (i.e.: committers, people with repo:write access),

Whenever you get a code review from a non-member, it's important to always[1] ensure that they remove the 'review' keyword.  This is not really important in and of itself, but it is very important for other reasons, which I will attempt to explain, since I think I may not have properly laid this out sufficient detail before.

The goal of allowing non-project-members (i.e.: external contributors) to review changes in Twisted is to provide a pipeline for folks to become developers of the project; to allow people to gain experience with reviewing, so they can proceed to being full reviewers, without requiring that they already be project members before they can practice.  In other words, it is a process to train reviewers so that we can have higher code-review throughput in general in the future, not a shortcut to get changes reviewed more quickly.

It is therefore the responsibility of the developer accepting the code review to ensure that the reviewer is following directions and has given sufficient attention to the review, and to provide feedback on those reviews to ensure that the new contributors are learning how to look for the things that help us maintain Twisted's quality.

Sometimes, the only code review you need is a "thumbs up, looks good", because everything really is fine, the fix is simple, and there's nothing much the reviewer could say.  Ideally, all changes are small, and obvious, and reviewers can just give that review regularly.

However, such a review is always suspicious, because it's very easy for a reviewer, especially an external reviewer with little understanding of the project, to just rubber-stamp a fix they want to see merged quickly without giving it any real analysis.

As such, it's very important that when accepting a very short review that you use whatever clues you have at your disposal that  the reviewer has actually reviewed the code in some detail.

One potential proxy for this is that our process requires some small peculiarities, such as attaching and removing the 'review' keyword in Trac[2].  If a contributor has not even read the instructions carefully enough to know that they need to remove this keyword, it is virtually impossible for them to have dedicated the attention and care required by https://twistedmatrix.com/trac/wiki/ReviewProcess#Howtobeagoodreviewer <https://twistedmatrix.com/trac/wiki/ReviewProcess#Howtobeagoodreviewer> to do a full review and consider everything that cannot be automatically verified, such as impact to Twisted's public interface, the legibility of documentation, duplication of features, et cetera.

If the contributor has demonstrated their attention to detail in some other way, by giving a thorough review and writing some analysis of the change's implications (even if it's not actionable, just something like "I read over the narrative documentation to ensure it didn't need any changes and it looks like we're good") then it might be acceptable to gently point out the small process mistake of not updating trac.  But if the change is just a Github comment saying "LGTM" with nothing else associated, it is important not to accept the review and to explain that the reviewer should re-read the directions explaining how to give a review.

As you might have guessed, I have seen "LGTM" changes landing on trunk recently whose reviews looked somewhat suspicious to me.  I, and a few other long-time Twisted developers, have complained about this before, but in re-reading those complaints in preparation for writing this message, it occurred to me that I may not have spelled out exactly what I was concerned with and why, so, in the spirit if blameless post-mortems, I don't want to call out anyone specifically[3].

Pascal's apology applies; I haven't had much time to edit.

Thanks for reading,

-glyph


Endnotes:

[1]: Iron-clad process rigidity is not the goal here. Sometimes there are legitimate reasons to need to move things along a little faster than a full thorough review requires.  For example, if there's a pressing security issue, or all the CI infrastructure is failing due to a bug in one of our dependencies.  There are also cases where the important thing that needs to be done in a review is a highly specialized analysis, like; for example, if we need a GPS expert to verify that some change to twisted.positioning is correct, and beyond the domain knowledge the code change is otherwise trivial.  In these cases it might be fine to accept a "LGTM", if the question posed in the review is highly specific, but in that case, it's important to leave a comment explaining what exactly has transpired: "I'm removing the review keyword myself because I needed a domain expert to review this, and XXX YYY was helpful enough to have a look but is not familiar with our process." or whatever the case may be.

In general, putting more thorough comments on tickets is always a good thing.  However clear that you as a Twisted project insider think a thing is, chances are it is about 1/4 that clear to anyone trying to understand project direction from the outside.  I'm certainly guilty of under-documenting myself :-).

[2]: we are not preserving Trac purely as a shibboleth to check on people installing the directions; software development is hard enough without extra roadblocks thrown in the way.  There are just too many tools connected to the 'review' keyword right now that are hard to connect to Github automatically.  Whatever our process, however, it's important to verify that reviewers are following it carefully.

[3]: I realize that there are too many bits of identifying information here to be meaningfully anonymous, so some folks will immediately know the specific ticket that precipitated this, but don't be a jerk and dig up someone's name from the trac timeline because you can; the goal here is not (and should not) be to throw anyone under the bus, but to improve communication around project policy.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170723/24fca52b/attachment.html>

From mithrandi at mithrandi.net  Wed Jul 26 12:46:27 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Jul 2017 18:46:27 +0000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
Message-ID: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>

Hi all,

I've uploaded a prerelease of Nevow 0.14.3 to PyPI[1]. This contains a fix
for some Athena client-side timeout behaviour (or more specifically, the
lack of one) and removes use of FilePath.getmtime.

If you are using Athena, please a) let me know! and b) give this prerelease
a try to see if anything breaks. As the de facto Nevow release manager, and
one of its last users, I'd like to avoid going overboard on release
engineering if it isn't necessary, but I'd also like to avoid making life
worse for any other remaining users, so it would be useful to hear from any
of you out there still using Nevow.

[1] https://pypi.python.org/pypi/Nevow/0.14.3rc1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170726/8f080893/attachment.html>

From werner at thieprojects.ch  Wed Jul 26 13:35:59 2017
From: werner at thieprojects.ch (Werner Thie)
Date: Wed, 26 Jul 2017 09:35:59 -1000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
In-Reply-To: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
References: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
Message-ID: <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>

Aloha Tristan

still using Athena in production, will be able to test tomorrow.

And just to mention it, still one of the best pieces of software (and 
probably also one of the most under documented) I've ever used.

Mahalo, Werner

On 7/26/17 8:46 AM, Tristan Seligmann wrote:
> Hi all,
> 
> I've uploaded a prerelease of Nevow 0.14.3 to PyPI[1]. This contains a 
> fix for some Athena client-side timeout behaviour (or more specifically, 
> the lack of one) and removes use of FilePath.getmtime.
> 
> If you are using Athena, please a) let me know! and b) give this 
> prerelease a try to see if anything breaks. As the de facto Nevow 
> release manager, and one of its last users, I'd like to avoid going 
> overboard on release engineering if it isn't necessary, but I'd also 
> like to avoid making life worse for any other remaining users, so it 
> would be useful to hear from any of you out there still using Nevow.
> 
> [1] https://pypi.python.org/pypi/Nevow/0.14.3rc1
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


From mithrandi at mithrandi.net  Wed Jul 26 15:10:44 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Jul 2017 21:10:44 +0000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
In-Reply-To: <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>
References: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
 <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>
Message-ID: <CAMcKhMTuzU95SO3iy1ZV8HGjvEp3Fiq8n5y-aZtDK+Q3LFarZA@mail.gmail.com>

On Wed, 26 Jul 2017 at 21:36 Werner Thie <werner at thieprojects.ch> wrote:

> Aloha Tristan
>
> still using Athena in production, will be able to test tomorrow.
>

Great!

Note that there's an rc2 now, because there were some problems with the
version number handling in rc1; pip install --pre nevow should get you the
latest prerelease though.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170726/ada7c90c/attachment.html>

From trac at twistedmatrix.com  Sun Jul 30 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Jul 2017 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1501394720.22.4794125336040473656@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170730/0b950a77/attachment.html>

From fehrist at codeghar.com  Mon Jul 31 10:22:00 2017
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 31 Jul 2017 09:22:00 -0700
Subject: [Twisted-Python] Using Twisted with pytest fixtures
In-Reply-To: <86r2xfx7g6.fsf@atlantis.meejah.ca>
References: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
 <86r2xfx7g6.fsf@atlantis.meejah.ca>
Message-ID: <CABJ3qSPxGsZYyQwifsR7KPbNt+1NqbiDd3QnijWNwrA=RNeGAQ@mail.gmail.com>

On Mon, Jul 17, 2017 at 11:08 AM, meejah <meejah at meejah.ca> wrote:
> I have a blog post on this, outlining some integration tests that I
> wrote for Tahoe-LAFS (which uses Twisted) and which also starts a
> 25-node Tor test network.
>
>    https://meejah.ca/blog/pytest-integration-testing
>
> You probably also want the pytest-twisted extension for pytest.  I'm
> often around in #twisted or #tahoe-lafs on Freenode IRC if you'd like to
> discuss.

Thank you for sharing this information. I'll try it out.


From trac at twistedmatrix.com  Sun Jul  2 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Jul 2017 06:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1498975521.42.8656629329782046613@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170702/eaa4a8e8/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jul  3 05:44:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 04:44:52 -0700
Subject: [Twisted-Python] Custom log "files" with twisted.logger
In-Reply-To: <CAEeXt4OtOPKjBgwXbGyuwH5ukFE3P8199xSgyrLxFSZ1X4_0TQ@mail.gmail.com>
References: <CAEeXt4OtOPKjBgwXbGyuwH5ukFE3P8199xSgyrLxFSZ1X4_0TQ@mail.gmail.com>
Message-ID: <7F2A1F31-E889-4724-B6AA-8E6731E542E4@twistedmatrix.com>


> On Jun 14, 2017, at 5:53 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I would like to be able to send events from the new logging system (twisted.logger) to a remote log collection system.  If I'm using twist then it seems options for configuring this part of logging are limited.  The choices appear to be logging to stdout, stdout, or a file on the filesystem.

This is definitely a desirable goal, something that I am also wrestling with.

> If I write my own command-line entrypoint then I can probably do whatever I want by writing a custom observer and hooking it up appropriately.  I'd rather not have to do that, though.
> 
> I could also go back to twistd and use --logger.  But since interest in twistd appears to be on the decline, in favor of twist, I'd rather avoid that as well.

The hope is that `twist` can fully supplant it, yes.

> It seems like the idea would be something like --logger for twist, perhaps replacing the --log-file option.  If there were a way to pass some arguments that would be pretty nice as well.

This looks like a pretty reasonable idea.

>     twist --logger myapp.something:x=y,a=b
>   twist --logger twisted.logger.FileLogObserver.fromPath:path=/foo/bar
> 
> (Actual syntax not that important to me; consistency with endpoint syntax would have some advantages; something that deals with the necessities of quoting and nesting would be better, of course.   Also, I know everyone hates Twisted's plugins but they would make for a nicer UI than FQPNs here.)

I don't hate Twisted's plugins.

> The first thing I'm likely to do with this is bridge twisted.logger events to Eliot.  I think this will provide the most useful logs (at least some of the logs from Twisted will have a meaningful Eliot context, though certainly nowhere near all).  Also I already have a system for configuring Eliot log destinations (which supports passing along arguments, so I can already tell Eliot where my remote log collector is with a command-line argument).
> 
> What are the chances of getting support for this scenario into twist itself?

I take it that Eliot "log destinations" are sufficient for the purposes of remotely transmitting your logs to a collection system, so you're mainly asking about the extension point, and not any particular collector?

I'd say that chances are extremely good that this could be accepted.  I'd really like log configuration generally to be more robust.

Another thing that might be germane to this (or maybe it's just "another thing that would be nice for twist to have on its command line somewhere") - https://twistedmatrix.com/documents/current/api/twisted.logger.LogLevelFilterPredicate.html <https://twistedmatrix.com/documents/current/api/twisted.logger.LogLevelFilterPredicate.html> and https://twistedmatrix.com/documents/current/api/twisted.logger.FilteringLogObserver.html <https://twistedmatrix.com/documents/current/api/twisted.logger.FilteringLogObserver.html> might be something that you would want to put in front of your remote log collectors.  Ideally not every single message in the world needs to be transmitted.

Also, possibly the hypothetical "+" plugin which has come up a few times (i.e. "a command line syntax for running more than one plugin in the same process") would be an interesting idea here.  'twist + eliot --to=<some eliot place> + web --port le:certificates:tcp:443' might be a way to express this without any specific logging support from `twist`; the "eliot" plugin could just add a global log observer when it starts.

-glyph

P.S.: Sorry for the long delay on the response, I would like to refer everyone back to https://twistedmatrix.com/pipermail/twisted-python/2017-April/031396.html <https://twistedmatrix.com/pipermail/twisted-python/2017-April/031396.html> which is getting more relevant by the day.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170703/c4971f11/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jul  3 06:08:07 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 05:08:07 -0700
Subject: [Twisted-Python] 'ok to merge' label in github?
Message-ID: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>

Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.

I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

(I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)

-g


From contact at evilham.com  Mon Jul  3 06:24:03 2017
From: contact at evilham.com (Evilham)
Date: Mon, 3 Jul 2017 14:24:03 +0200
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
Message-ID: <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>

Hi Glyph,

Am 03/07/2017 um 14:08 schrieb Glyph:
> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
> 
> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

If those are GitHub labels and only modifiable by repo owners, it sounds
like a sane thing to do.

One thing that would worry me though, is that more commits could come to
that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
guess such a tag should be associated with the last commit but I'm not
too sure that's possible out of the box with GitHub.

> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)

Maybe a bot could figure out the last reviewed commit and remove the
label if it detects new (not reviewed) commits in that PR.

I... would actually be interested in taking a look at it, got any
pointers / are there already some bots for the twisted project running?
-- 
Evilham



From contact at evilham.com  Mon Jul  3 06:45:40 2017
From: contact at evilham.com (Evilham)
Date: Mon, 3 Jul 2017 14:45:40 +0200
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
 <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
Message-ID: <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>



Am 03/07/2017 um 14:24 schrieb Evilham:
> Hi Glyph,
> 
> Am 03/07/2017 um 14:08 schrieb Glyph:
>> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
>>
>> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?

Isn't this exactly what you want Glyph? (maybe I missed sth :-D)
https://help.github.com/articles/about-required-reviews-for-pull-requests/

It could affect the workflow of people with write-access though.

> If those are GitHub labels and only modifiable by repo owners, it sounds
> like a sane thing to do.
> 
> One thing that would worry me though, is that more commits could come to
> that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
> guess such a tag should be associated with the last commit but I'm not
> too sure that's possible out of the box with GitHub.
> 
>> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)
> 
> Maybe a bot could figure out the last reviewed commit and remove the
> label if it detects new (not reviewed) commits in that PR.
> 
> I... would actually be interested in taking a look at it, got any
> pointers / are there already some bots for the twisted project running?
> 

-- 
Evilham



From glyph at twistedmatrix.com  Mon Jul  3 06:47:14 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 3 Jul 2017 05:47:14 -0700
Subject: [Twisted-Python] 'ok to merge' label in github?
In-Reply-To: <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>
References: <258A5D39-929B-4FEB-BC05-5BFCABAFB8CA@twistedmatrix.com>
 <0ce321fd-a25e-df96-35ca-584e749fd7ee@evilham.com>
 <2e143fb9-470a-2c02-1f8b-174c9286092d@evilham.com>
Message-ID: <B640D7B7-01DE-4950-9493-FA1382D659EE@twistedmatrix.com>


> On Jul 3, 2017, at 5:45 AM, Evilham <contact at evilham.com> wrote:
> 
> 
> 
> Am 03/07/2017 um 14:24 schrieb Evilham:
>> Hi Glyph,
>> 
>> Am 03/07/2017 um 14:08 schrieb Glyph:
>>> Unfortunately, our CI runs can be quite lengthy.  When doing a quick code review, it can often be quite demoralizing to see an hour or two worth of appveyor backlog that needs to run before a ticket can be merged.
>>> 
>>> I have been thinking about adding a specific "OK to merge" label to PRs that indicates that they've been submitted to pr_as_branch, they've been reviewed, and if the CI results or positive they should be merged, so that someone other than the reviewer might come along and do the actual merge later.  Does anyone else think this would be a good idea?
> 
> Isn't this exactly what you want Glyph? (maybe I missed sth :-D)
> https://help.github.com/articles/about-required-reviews-for-pull-requests/ <https://help.github.com/articles/about-required-reviews-for-pull-requests/>

No, this just prevents you from merging if you don't have a review; it doesn't automatically merge if you do have one.

> 
> It could affect the workflow of people with write-access though.
> 
>> If those are GitHub labels and only modifiable by repo owners, it sounds
>> like a sane thing to do.
>> 
>> One thing that would worry me though, is that more commits could come to
>> that PR after the reviewer (repo owner) sets the 'OK to merge' tag, I
>> guess such a tag should be associated with the last commit but I'm not
>> too sure that's possible out of the box with GitHub.
>> 
>>> (I know that there are ways that bots can facilitate this, and if someone else would like to set that up, that would be great.)
>> 
>> Maybe a bot could figure out the last reviewed commit and remove the
>> label if it detects new (not reviewed) commits in that PR.
>> 
>> I... would actually be interested in taking a look at it, got any
>> pointers / are there already some bots for the twisted project running?
>> 
> 
> -- 
> Evilham
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170703/4a8c6497/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jul  4 05:30:11 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 4 Jul 2017 07:30:11 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
Message-ID: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>

Hello all,

I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library for
interacting with Amazon Web Services (AWS) using Twisted.

You can download the release from PyPI <https://pypi.python.org/pypi/txAWS>.

txAWS development uses GitHub for issues and source control
<https://github.com/twisted/txaws>.

Since the last release, the following enhancements have been made:

Bugfixes
--------

- txaws now correctly signs requests with paths that require urlencoding.
(#20)


Features
--------

- The Route53 client now recognizes all of the basic resource record types.
  (#50)
- txaws now supports reading the AWS_SHARED_CREDENTIALS_FILE and environment
  variable. (#52)
- txAWS now raises a CredentialsNotFoundError when it cannot locate
  credentials. Catching the previously-raised ValueError is now deprecated.
  (#53)
- txaws.credentials.AWSCredentials now supports loading different sets of
  credentials via AWS_PROFILE. (#54)

Thanks to everyone who contributed and to Least Authority Enterprises
<https://leastauthority.com/> for sponsoring my work on this release.

Jean-Paul Calderone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170704/0422cd4a/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Jul  4 14:08:35 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Jul 2017 13:08:35 -0700
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
Message-ID: <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>


> On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello all,
> 
> I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library for interacting with Amazon Web Services (AWS) using Twisted.

Woohoo!

This reminds me; I have a question about txAWS: if I have an EC2 instance or ECS instance with a machine role, will txAWS pick up the ambient credentials from ... I guess it's the metadata server that provides them?

-glyph



From exarkun at twistedmatrix.com  Tue Jul  4 14:27:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 4 Jul 2017 16:27:53 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
Message-ID: <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>

On Tue, Jul 4, 2017 at 4:08 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> > On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
> >
> > Hello all,
> >
> > I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library
> for interacting with Amazon Web Services (AWS) using Twisted.
>
> Woohoo!
>
> This reminds me; I have a question about txAWS: if I have an EC2 instance
> or ECS instance with a machine role, will txAWS pick up the ambient
> credentials from ... I guess it's the metadata server that provides them?
>
>
Nope, it totally won't.  There's been some progress recently in improving
the way credentials are supplied to txAWS.  I hope there's some more soon
to add these kinds of capabilities.

Jean-Paul



> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170704/ec55b872/attachment-0002.html>

From adi at roiban.ro  Wed Jul  5 03:29:25 2017
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 5 Jul 2017 10:29:25 +0100
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders for
	merge
Message-ID: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>

Hi,

I did not had to much time to follow twisted-infra activity lately,
sorry if the following question is obvious for all the others.

Why the OSX build was removed from Travis and forced on buildbot?

I think that for contributor without write access to the main repo,
this is a big handicap as they can't get a good coverage report ...
and merging such branches needs extra work as you need to create a new
branch, push it wait for results...(maybe create a new PR)... etc

---------

Is the list of builders marked in GitHub as "required" the official
list of tests which need to be green in order to merge?

I am reading this page, but is not clear which tests need to be green:
 https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk

Thanks!
-- 
Adi Roiban



From barry.scott at forcepoint.com  Wed Jul  5 03:32:52 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Wed, 5 Jul 2017 10:32:52 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
Message-ID: <4348076.WLXFC0nInn@barry-scott-desktop>

I am interested in using Twisted with a couple of technologies: WebSockets and 
QUIC. I'm researching what is already available.

I found the autobahn-python for WebSockets, are there other projects that 
provide WebSockets that I have missed?

I could not find references to any projects supporting the QUIC protocol for 
python. I did find the libquic project. Do you know of any work going on for 
this protocol for Twisted?

Barry





From rodrigc at crodrigues.org  Wed Jul  5 13:24:01 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 5 Jul 2017 12:24:01 -0700
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders
 for merge
In-Reply-To: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
References: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
Message-ID: <CAG=rPVfTYs5=cESfhzXa10=7XKSOVY97UPGvLXDvVvF+jKp5og@mail.gmail.com>

On Wed, Jul 5, 2017 at 2:29 AM, Adi Roiban <adi at roiban.ro> wrote:

>
> Why the OSX build was removed from Travis and forced on buildbot?
>
>
At the time that Glyph did this, the OSX builders on Travis were overloaded
from all projects (not just Twisted)
and took a long time to run.  This slowed down the whole CI process for
Twisted.

I don't know the answers to your other questions.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/e2d9008a/attachment-0002.html>

From rodrigc at crodrigues.org  Wed Jul  5 13:26:38 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 5 Jul 2017 12:26:38 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
Message-ID: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>

Hi,

This builder:
https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio

seems to now be failing with:

cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to
use this library.

Can someone upgrade pypy on this builder?

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/de5fba7e/attachment-0002.html>

From steveo at mcroberts.org  Wed Jul  5 16:00:40 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Wed, 5 Jul 2017 17:00:40 -0500
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
Message-ID: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>

I'm looking for suggestions why the channel key would be missing after it was just opened.
I use persistent connections with a timeout but the timer is reset every call so it stays open.

Here's some of my logs:

2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
--- (snipped traceback for clarity) ---
File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
   channel = self.channels[localChannel]
   exceptions.KeyError: 4

The same connection instance will work later on the next channel so it seems the connection is fine.

Any suggestions on what would cause this behavior?

Is this behavior typical?


From glyph at twistedmatrix.com  Wed Jul  5 20:41:37 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:41:37 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
Message-ID: <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>


> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
> 
> seems to now be failing with:
> 
> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
> 
> Can someone upgrade pypy on this builder?

Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.

We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.

Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/df941a11/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Jul  5 20:54:52 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:54:52 -0700
Subject: [Twisted-Python] buildbot/osx10.10-py2.7 and required builders
 for	merge
In-Reply-To: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
References: <CAFycZ9d-hor75__Rm+pyJVaN_2sMJ1XHihMcxdNpKFiSkjG-2w@mail.gmail.com>
Message-ID: <7E7FE9D6-4309-49F4-BD9F-A9C7855AEC40@twistedmatrix.com>


> On Jul 5, 2017, at 2:29 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I did not had to much time to follow twisted-infra activity lately,
> sorry if the following question is obvious for all the others.
> 
> Why the OSX build was removed from Travis and forced on buildbot?

As Craig said: it was slow.

Of course, the entire CI process is slow, so just a little more slowness would not have been a reason.  It wasn't just slow, it was catastrophically slow: sometimes blocking builds for entire days at a time.

Not only was it an order of magnitude out from all other build slowness, it would also block other travis builds from completing promptly.

And finally, the frequent outages on Travis's infrastructure meant that not only was it slow, not only was it interfering with other resources, but it was also tremendously unpredictable: so sometimes it would be only a few minutes, sometimes 72 hours. Intermittent reinforcement is a form of psychological torture, so this was really the icing on this terrible cake.

> I think that for contributor without write access to the main repo,
> this is a big handicap as they can't get a good coverage report ...
> and merging such branches needs extra work as you need to create a new
> branch, push it wait for results...(maybe create a new PR)... etc

Yep, it's really annoying and I very much wish we could turn it back on.  What it comes down to is: would it be more useful for the contributors to get their Linux / Py2 / Py3 build results immediately automatically, or their macOS build results after 15 hours automatically?

But, loading https://www.traviscistatus.com <https://www.traviscistatus.com/> today, I see yet another effective outage on the OS X infra:



The frequency of outages that merit a formal incident report does seem to have gone down, but "you can't do a build for the entire working day because the infrastructure is regularly jammed up" is a level of availability that is more like a continuous outage :).

> Is the list of builders marked in GitHub as "required" the official
> list of tests which need to be green in order to merge?

Technically speaking all builders should pass.  Particularly, patch coverage in principle ought to be enforced.

However:

In some cases (such as trivial python 3 syntax transformations) there are patches which should be able to skip the coverage check, so it isn't enforced.  It would be better if these were all covered, but sometimes it makes more sense to get a module importing on py3 so that we can address coverage issues more easily.
Also, codecov itself is unreliable enough that making this mandatory would make us spend more time investigating issues with codecov than developing twisted.  (And other options, such as coveralls, seem to just be worse.)
Given the large number of builders in our fleet, it's likely that at least one will still fail with some intermittent issue that's irrelevant to the patch.  Until we have less activity on https://twistedmatrix.com/trac/ticket/8879 <https://twistedmatrix.com/trac/ticket/8879>, making these mechanically mandatory would still do more harm than good.  However… we have been making a lot of progress, and we certainly see a lot fewer intermittent failures than we used to!

> I am reading this page, but is not clear which tests need to be green:
> https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk <https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Howtomergethechangetotrunk>

Yeah, the documentation on this is a lot spottier than it should be.  Please feel free to propose some changes to that text based on this.  Thanks for raising this issue!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/4295f524/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.png
Type: image/png
Size: 30815 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20170705/4295f524/attachment-0002.png>

From glyph at twistedmatrix.com  Wed Jul  5 20:58:05 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 19:58:05 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <4348076.WLXFC0nInn@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
Message-ID: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>


> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com> wrote:
> 
> I am interested in using Twisted with a couple of technologies: WebSockets and 
> QUIC. I'm researching what is already available.

Why are you interested in QUIC? My understanding was that Google used this protocol as an experiment, but HTTP/2 is the successful termination of the experiment, and nobody should really be using it.  (For http2 support, `pip install twisted[tls,http2]`).

Investigating now I guess I can see https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02 <https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02> suggests that it has a future life as a transport for http2?

> I found the autobahn-python for WebSockets, are there other projects that 
> provide WebSockets that I have missed?

There's txWS... but autobahn is a lot more current and updated.

> I could not find references to any projects supporting the QUIC protocol for 
> python. I did find the libquic project. Do you know of any work going on for 
> this protocol for Twisted?

None that I know of.  Perhaps you could contribute it!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170705/b50ef8df/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Jul  5 21:01:37 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jul 2017 20:01:37 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <9F8677F2-FE1C-48F4-8F98-18F96B4BBFF5@twistedmatrix.com>


> On Jul 5, 2017, at 3:00 PM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.

Are you just using `twist conch`?  Is any of your own code involved?

> Here's some of my logs:
> 
> 2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
> 2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
> --- (snipped traceback for clarity) ---
> File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
>   channel = self.channels[localChannel]
>   exceptions.KeyError: 4
> 
> The same connection instance will work later on the next channel so it seems the connection is fine.
> 
> Any suggestions on what would cause this behavior?
> 
> Is this behavior typical?

I don't see an existing bug for it, but if you can provoke a traceback like this without monkeying around with any of Twisted's internal data structures, it's a bug.  Perhaps it will turn out that the only bug has to do with error reporting and it should be logging something other than a traceback, but nevertheless this is almost certainly a bug in conch itself.

-g



From mithrandi at mithrandi.net  Wed Jul  5 22:59:46 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 06 Jul 2017 04:59:46 +0000
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <CAMcKhMS1gOuNb4bEimq4QCay5evbohCcQ_7JywHVN4dZC3vnVQ@mail.gmail.com>

On Thu, 6 Jul 2017 at 04:58 Glyph <glyph at twistedmatrix.com> wrote:

> Why are you interested in QUIC? My understanding was that Google used this
> protocol as an experiment, but HTTP/2 is the successful termination of the
> experiment, and nobody should really be using it.  (For http2 support, `pip
> install twisted[tls,http2]`).
>

You're thinking of SPDY. QUIC is a UDP-based protocol that allows 0-rtt
connection setup (and is also implemented by Chrome / Google services).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170706/f88851d0/attachment-0002.html>

From cory at lukasa.co.uk  Thu Jul  6 01:36:29 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 6 Jul 2017 08:36:29 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <4348076.WLXFC0nInn@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
Message-ID: <E9393E9C-D0AB-4FE5-8BB2-58763AC8ADE4@lukasa.co.uk>


> On 5 Jul 2017, at 10:32, Barry Scott <barry.scott at forcepoint.com> wrote:
> 
> I am interested in using Twisted with a couple of technologies: WebSockets and 
> QUIC. I'm researching what is already available.
> 
> I found the autobahn-python for WebSockets, are there other projects that 
> provide WebSockets that I have missed?
> 
> I could not find references to any projects supporting the QUIC protocol for 
> python. I did find the libquic project. Do you know of any work going on for 
> this protocol for Twisted?

Right now QUIC is in its *very* early stages. For reference the current interop draft is -4, and the interop goal is literally just to be able to complete the handshake. None of the currently available OSS implementations have a goal at this stage to actually be able to transmit data amongst themselves. Even this goal is currently hard to reach due to disagreements about which TLS 1.3 draft version should be used (-18 or -20).

The upshot of this is that QUIC is at least a year away from being a serious proposition to deploy in the wild!

I am constantly keeping an eye on the landscape of OSS QUIC implementations that could be bound into Twisted. At this time there is nothing really useful. The two best options are ngtcp2 and quicly. Both of these are C libraries which can easily be bound by Twisted. However, both are currently not well suited for use with Twisted due to their insistence on using non-OpenSSL TLS backends (BoringSSL and pictols respectively). ngtcp2 will eventually support OpenSSL, which will make it the best option for Twisted, but until the difficulty about TLS 1.3 drafts is resolved it will stay on BoringSSL for the forseeable future.

I suppose the TL;DR here is that you can’t really deploy QUIC in the wild, so the absence of a Twisted implementation is not hugely meaningful. ;)

Cory


From adi at roiban.ro  Thu Jul  6 04:14:10 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 6 Jul 2017 11:14:10 +0100
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>

On 5 July 2017 at 23:00, Stephen McRoberts <steveo at mcroberts.org> wrote:
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.

[snip]

As suggested by Glyph.
Please provide a complete minimal example which can be used to
reproduce this behaviour.

http://sscce.org/

I am happy to help with any SSH related bugs.

-- 
Adi Roiban



From steveo at mcroberts.org  Thu Jul  6 09:19:05 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Thu, 6 Jul 2017 10:19:05 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
Message-ID: <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>

It already helps to know this isn't normal behavior.
My code is self-contained in a single file and I can add a main for testing.
However it's far from minimal. The problem doesn't occur right away - only after several channels have been opened/closed with a persistent connection.
I'll continue to work and try to minimally pin it down but as you know it's difficult with asynchronous operations on several hosts.
It can run 100's of channels on multiple hosts without a problem or the problem can occur in the first five minutes.
For now, I just add a canceller method on downstream deferreds and try again.

Steve

> On Jul 6, 2017, at 5:14 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 5 July 2017 at 23:00, Stephen McRoberts <steveo at mcroberts.org> wrote:
>> I'm looking for suggestions why the channel key would be missing after it was just opened.
>> I use persistent connections with a timeout but the timer is reset every call so it stays open.
> 
> [snip]
> 
> As suggested by Glyph.
> Please provide a complete minimal example which can be used to
> reproduce this behaviour.
> 
> http://sscce.org/
> 
> I am happy to help with any SSH related bugs.
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From adi at roiban.ro  Thu Jul  6 10:31:40 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 6 Jul 2017 17:31:40 +0100
Subject: [Twisted-Python] KeyError in
	SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <CAFycZ9cjFbFoxPKMnJ4vq951MWZmQwaY-ZKyfVb08nZhZWVKYA@mail.gmail.com>
 <E4FE59E1-69AD-41A0-9A34-3F6D90EBC3A3@mcroberts.org>
Message-ID: <CAFycZ9eK_S1Tqh0OLPDx6iung36GtZtxLnLoyh0qimFq56=d9w@mail.gmail.com>

On 6 July 2017 at 16:19, Stephen McRoberts <steveo at mcroberts.org> wrote:
> It already helps to know this isn't normal behavior.
> My code is self-contained in a single file and I can add a main for testing.

I don't know what your code is doing... so maybe is expected :)
You can share the single file together with a description of how to
run it and how to wait for the error.

Regards,
-- 
Adi Roiban



From steveo at mcroberts.org  Thu Jul  6 10:59:46 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Thu, 6 Jul 2017 11:59:46 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
Message-ID: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>

Do I just post it to the list?
I need to write up a little as there needs to be configuration dicts for the logins to remotes.
I also need to put copyright data in the code. Some of it is mine and some came under apache license (really never intended any other eyes to see it).

> On Jul 5, 2017, at 5:00 PM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> I'm looking for suggestions why the channel key would be missing after it was just opened.
> I use persistent connections with a timeout but the timer is reset every call so it stays open.
> 
> Here's some of my logs:
> 
> 2017-07-05 15:26:45-0500 [-] opening channel 4 with 65536 32768
> 2017-07-05 15:36:45-0500  [SSHService 'ssh-connection' on ClientTransport,client] Unhandled Error
> --- (snipped traceback for clarity) ---
> File "/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/connection.py", line 180, in ssh_CHANNEL_OPEN_CONFIRMATION
>   channel = self.channels[localChannel]
>   exceptions.KeyError: 4
> 
> The same connection instance will work later on the next channel so it seems the connection is fine.
> 
> Any suggestions on what would cause this behavior?
> 
> Is this behavior typical?
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From p.mayers at imperial.ac.uk  Fri Jul  7 04:59:30 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 7 Jul 2017 11:59:30 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>

On 06/07/17 03:58, Glyph wrote:
> 
>> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com 
>> <mailto:barry.scott at forcepoint.com>> wrote:
>>
>> I am interested in using Twisted with a couple of technologies: 
>> WebSockets and
>> QUIC. I'm researching what is already available.
> 
> Why are you interested in QUIC? My understanding was that Google used 
> this protocol as an experiment, but HTTP/2 is the successful termination 
> of the experiment, and nobody should really be using it.  (For http2 
> support, `pip install twisted[tls,http2]`).

QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was 
the easiest first step, but as you've noted there's substantial interest 
in running HTTP/2 over better-than-TCP transport (UDP being the only 
practical alternative in the near term, what with middleboxes being so 
horribly omnipresent).

As someone else noted, maybe you're thinking of SPDY?

Ironically the goals of QUIC are, I believe, similar to Vertex ;o)



From barry.scott at forcepoint.com  Fri Jul  7 06:14:53 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Fri, 7 Jul 2017 13:14:53 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
Message-ID: <214206674.tzngfghdHU@barry-scott-desktop>

On Thursday, 6 July 2017 03:58:05 BST Glyph wrote:
> > On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com>
> > wrote:
> > 
> > I am interested in using Twisted with a couple of technologies: WebSockets
> > and QUIC. I'm researching what is already available.
> 
> Why are you interested in QUIC? My understanding was that Google used this
> protocol as an experiment, but HTTP/2 is the successful termination of the
> experiment, and nobody should really be using it.  (For http2 support, `pip
> install twisted[tls,http2]`).

My management is looking to the future and wanted to know if support for QUIC
was in Twisted. We use twisted in our cloud services and may need QUIC support 
if it is adopeted more widely.

> 
> Investigating now I guess I can see
> https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02
> <https://tools.ietf.org/html/draft-tsvwg-quic-protocol-02> suggests that it
> has a future life as a transport for http2?
> > I found the autobahn-python for WebSockets, are there other projects that
> > provide WebSockets that I have missed?
> 
> There's txWS... but autobahn is a lot more current and updated.
> 
> > I could not find references to any projects supporting the QUIC protocol
> > for python. I did find the libquic project. Do you know of any work going
> > on for this protocol for Twisted?
> 
> None that I know of.  Perhaps you could contribute it!

That is a possibility.

Barry

> 
> -glyph




From barry.scott at forcepoint.com  Fri Jul  7 06:17:40 2017
From: barry.scott at forcepoint.com (Barry Scott)
Date: Fri, 7 Jul 2017 13:17:40 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
Message-ID: <1855869.VS3c9gT4sU@barry-scott-desktop>

On Friday, 7 July 2017 11:59:30 BST Phil Mayers wrote:
> On 06/07/17 03:58, Glyph wrote:
> >> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com
> >> <mailto:barry.scott at forcepoint.com>> wrote:
> >> 
> >> I am interested in using Twisted with a couple of technologies:
> >> WebSockets and
> >> QUIC. I'm researching what is already available.
> > 
> > Why are you interested in QUIC? My understanding was that Google used
> > this protocol as an experiment, but HTTP/2 is the successful termination
> > of the experiment, and nobody should really be using it.  (For http2
> > support, `pip install twisted[tls,http2]`).
> 
> QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was
> the easiest first step, but as you've noted there's substantial interest
> in running HTTP/2 over better-than-TCP transport (UDP being the only
> practical alternative in the near term, what with middleboxes being so
> horribly omnipresent).
> 
> As someone else noted, maybe you're thinking of SPDY?

I know abnout SPDY, it is indeed QUIC that I'm researching into.

I read on the ATS (apache traffic server) list that there is a IETF QUIC
being worked on and that ATS is aiming for end 2018 for QUIC support.

Barry

> 
> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Fri Jul  7 07:15:39 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 7 Jul 2017 14:15:39 +0100
Subject: [Twisted-Python] COMMERCIAL:Re: WebSockets and QUIC for Twisted
In-Reply-To: <1855869.VS3c9gT4sU@barry-scott-desktop>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <1855869.VS3c9gT4sU@barry-scott-desktop>
Message-ID: <66c07d65-68b2-7595-e99a-d79b3726c3ee@imperial.ac.uk>

On 07/07/17 13:17, Barry Scott wrote:

>> As someone else noted, maybe you're thinking of SPDY?
> 
> I know abnout SPDY, it is indeed QUIC that I'm researching into.

I was talking to Glyph ;o) Sorry for any confusion.



From steveo at mcroberts.org  Fri Jul  7 10:55:56 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Fri, 7 Jul 2017 11:55:56 -0500
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
Message-ID: <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>

 I made a minimal single-file.py app to perform test runs and never had the issue. Observer altered reality?

Then I realized there are a couple of threads in the application which were there before moving to twisted a long time ago. They never manifested themselves in any other way.

I removed the python threads and now it's running without the channel problem. (As a side note, I had overcome the channel problem by sending deferreds to a point where I could re-start the channel open and it would work but I'm glad to have that work-around out of the code.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/cecfae33/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jul  7 20:58:16 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 19:58:16 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
Message-ID: <F3B91C5D-4D2D-408C-9D55-3B109966EAE1@twistedmatrix.com>


> On Jul 6, 2017, at 9:59 AM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
> Do I just post it to the list?

If the list is where you're asking for help, yes :).

> I need to write up a little as there needs to be configuration dicts for the logins to remotes.
> I also need to put copyright data in the code. Some of it is mine and some came under apache license (really never intended any other eyes to see it).

Sure, all the usual stuff from http://sscce.org <http://sscce.org/> applies.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/2bc55c51/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jul  7 20:59:05 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 19:59:05 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
Message-ID: <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>


> On Jul 7, 2017, at 3:59 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 06/07/17 03:58, Glyph wrote:
>>> On Jul 5, 2017, at 2:32 AM, Barry Scott <barry.scott at forcepoint.com <mailto:barry.scott at forcepoint.com>> wrote:
>>> 
>>> I am interested in using Twisted with a couple of technologies: WebSockets and
>>> QUIC. I'm researching what is already available.
>> Why are you interested in QUIC? My understanding was that Google used this protocol as an experiment, but HTTP/2 is the successful termination of the experiment, and nobody should really be using it.  (For http2 support, `pip install twisted[tls,http2]`).
> 
> QUIC is definitely not dead. HTTP/2 is a clear win over HTTP/1 and was the easiest first step, but as you've noted there's substantial interest in running HTTP/2 over better-than-TCP transport (UDP being the only practical alternative in the near term, what with middleboxes being so horribly omnipresent).
> 
> As someone else noted, maybe you're thinking of SPDY?

I think I was actually thinking of the somewhat confusingly-named "QUIC Crypto", which is actually dead, and we should either use TLS 1.3, or, as QUIC apparently does now, DTLS.

> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)

Really?  How so?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/bb7360f8/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jul  7 21:06:20 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 7 Jul 2017 20:06:20 -0700
Subject: [Twisted-Python] KeyError in
 SSHConnection.ssh_CHANNEL_OPEN_CONFIRMATION
In-Reply-To: <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>
References: <024EF13C-D797-4F8D-831B-38D74CFC95B9@mcroberts.org>
 <6F5BA943-83A0-45C6-A042-1902DA8F2EBE@mcroberts.org>
 <3DAC0C34-5D24-4523-A7DE-48BBAD3B3317@mcroberts.org>
Message-ID: <47204E81-11A5-40AA-AFA3-812655C2C72F@twistedmatrix.com>


> On Jul 7, 2017, at 9:55 AM, Stephen McRoberts <steveo at mcroberts.org> wrote:
> 
>  I made a minimal single-file.py app to perform test runs and never had the issue. Observer altered reality?
> 
> Then I realized there are a couple of threads in the application which were there before moving to twisted a long time ago. They never manifested themselves in any other way.
> 
> I removed the python threads and now it's running without the channel problem. (As a side note, I had overcome the channel problem by sending deferreds to a point where I could re-start the channel open and it would work but I'm glad to have that work-around out of the code.)
> 
Hooray, glad you managed to track it down (sort of)!  Unfortunately it's quite difficult for us to automatically reject usage of Twisted APIs from threads without catastrophically terrible performance :-\.  But this is the cause of a lot of "how could this possibly happen" reports from users.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170707/c3cb4234/attachment-0002.html>

From p.mayers at imperial.ac.uk  Sat Jul  8 02:47:50 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 8 Jul 2017 09:47:50 +0100
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
Message-ID: <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>

On 08/07/17 03:59, Glyph wrote:

>> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
>
> Really?  How so?

Sorry, memory not serving me well. I'm thinking of the PTCP bits, I'd 
managed to remember that, but forget about all the rest!

So no, not similar - my mistake.



From hawkowl at atleastfornow.net  Sat Jul  8 21:30:06 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 9 Jul 2017 13:30:06 +1000
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
 <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
Message-ID: <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>


> On 6 Jul 2017, at 12:41, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>> 
>> Hi,
>> 
>> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
>> 
>> seems to now be failing with:
>> 
>> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
>> 
>> Can someone upgrade pypy on this builder?
> 
> Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.
> 
> We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.
> 
> Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?
> 
> -glyph

This is done. PyPy graces https://speed.twistedmatrix.com/comparison/ <https://speed.twistedmatrix.com/comparison/> once again, and the unsupported build works.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/f372e98f/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170709/f372e98f/attachment-0002.sig>

From hawkowl at atleastfornow.net  Sat Jul  8 21:32:38 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sun, 9 Jul 2017 13:32:38 +1000
Subject: [Twisted-Python] Buildbot Updates: Addition of Debian 9,
	Removal of Ubuntu 12.04
Message-ID: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>

Hello everyone,

I've just updated the Twisted buildbots to add the newest Debian release (with Python 2.7 and 3.5 as supported Python versions), and removed the now-EOL Ubuntu 12.04 buildbots, which ran Python 2.7.

The next version of Twisted will now correspondingly support Debian 9, and not support Ubuntu 12.04.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170709/bc051919/attachment-0002.sig>

From trac at twistedmatrix.com  Sun Jul  9 00:05:21 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Jul 2017 06:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1499580321.74.1720457896187295711@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/face36fc/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:21:44 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:21:44 -0700
Subject: [Twisted-Python] WebSockets and QUIC for Twisted
In-Reply-To: <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>
References: <4348076.WLXFC0nInn@barry-scott-desktop>
 <F3ABCA06-8655-4AC3-AC3E-3FEA11953FE8@twistedmatrix.com>
 <c138d5fd-3a89-648a-4981-6e87e93d4322@imperial.ac.uk>
 <811FCEE4-68D1-4B8A-B31A-91E552D4684F@twistedmatrix.com>
 <fa581d55-0440-4213-8b28-44b96a94920a@imperial.ac.uk>
Message-ID: <863D1CD5-5A6E-4FD7-8E7D-EB61431C159F@twistedmatrix.com>


> On Jul 8, 2017, at 1:47 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 08/07/17 03:59, Glyph wrote:
> 
>>> Ironically the goals of QUIC are, I believe, similar to Vertex ;o)
>> 
>> Really?  How so?
> 
> Sorry, memory not serving me well. I'm thinking of the PTCP bits, I'd managed to remember that, but forget about all the rest!
> 
> So no, not similar - my mistake.

In a way, PTCP is much less ambitious, as well: it is just TCP over UDP in order to get connection-initiations through firewalls.

My understanding of QUIC is that it has very different goals: it's not the thing you'd use for peer-to-peer connectivity (that would be something like RTMP) but rather it's over UDP so it can have slightly different guarantees and performance characteristics than TCP itself.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/863265a0/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:35:00 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:35:00 -0700
Subject: [Twisted-Python] Newer Pypy on buildbot?
In-Reply-To: <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>
References: <CAG=rPVdtRLviLWvisYjDtqoQ7Cg=KLzVRqCPGPU0iOpoot=BQg@mail.gmail.com>
 <2F520F9D-D70A-4D9E-A616-61DC3C194D28@twistedmatrix.com>
 <521AC4D0-09C4-4767-B158-6776D3109B24@atleastfornow.net>
Message-ID: <5AF43248-F1E5-4951-A476-471E6CBD819D@twistedmatrix.com>


> On Jul 8, 2017, at 8:30 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> 
>> On 6 Jul 2017, at 12:41, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> 
>>> On Jul 5, 2017, at 12:26 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at crodrigues.org>> wrote:
>>> 
>>> Hi,
>>> 
>>> This builder: https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5/builds/86/steps/select/logs/stdio>
>>> 
>>> seems to now be failing with:
>>> 
>>> cryptography 1.9 is not compatible with PyPy < 5.3. Please upgrade PyPy to use this library.
>>> 
>>> Can someone upgrade pypy on this builder?
>> 
>> Technically speaking I have access to this via our cloud control panel, but the SSH key isn't recorded anywhere that I can see, and it doesn't have my public keys on it, so it would be pretty labor-intensive for me to reset passwords and/or reprovision these machines to do this upgrade.
>> 
>> We should probably have some kind of official root at twistedmatrix.com <mailto:root at twistedmatrix.com> key file someplace to make it easier to sync up all our provisioned machines and keep access control up to date.
>> 
>> Until then though - hawkie, can you upgrade pypy on the relevant cloud machines?
>> 
>> -glyph
> 
> This is done. PyPy graces https://speed.twistedmatrix.com/comparison/ <https://speed.twistedmatrix.com/comparison/> once again, and the unsupported build works.

Thanks Amber!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170709/51359be1/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jul  9 22:35:20 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 9 Jul 2017 21:35:20 -0700
Subject: [Twisted-Python] Buildbot Updates: Addition of Debian 9,
 Removal of Ubuntu 12.04
In-Reply-To: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>
References: <53FA0D34-A074-4761-8C86-E4AB7A63AEEE@atleastfornow.net>
Message-ID: <3D79EFD4-80BE-48CE-8283-1546773F1966@twistedmatrix.com>


> On Jul 8, 2017, at 8:32 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> Hello everyone,
> 
> I've just updated the Twisted buildbots to add the newest Debian release (with Python 2.7 and 3.5 as supported Python versions), and removed the now-EOL Ubuntu 12.04 buildbots, which ran Python 2.7.
> 
> The next version of Twisted will now correspondingly support Debian 9, and not support Ubuntu 12.04.
> 
> - Amber

Yay builder maintenance!

-g



From yeh at uda.co.il  Tue Jul 11 01:44:51 2017
From: yeh at uda.co.il (Yehuda Deutsch)
Date: Tue, 11 Jul 2017 07:44:51 +0000
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
Message-ID: <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>

Hi,

This is great, I am building new deployment tools for my company's
infrastructure, since we host on AWS this will be most useful.
If i am not wrong, you are following the boto design, if so why not base on
the boto3 design?

On Tue, Jul 4, 2017 at 11:28 PM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Tue, Jul 4, 2017 at 4:08 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> > On Jul 4, 2017, at 4:30 AM, Jean-Paul Calderone <
>> exarkun at twistedmatrix.com> wrote:
>> >
>> > Hello all,
>> >
>> > I'm pleased to announce the release of txAWS 0.4.0.  txAWS is a library
>> for interacting with Amazon Web Services (AWS) using Twisted.
>>
>> Woohoo!
>>
>> This reminds me; I have a question about txAWS: if I have an EC2 instance
>> or ECS instance with a machine role, will txAWS pick up the ambient
>> credentials from ... I guess it's the metadata server that provides them?
>>
>>
> Nope, it totally won't.  There's been some progress recently in improving
> the way credentials are supplied to txAWS.  I hope there's some more soon
> to add these kinds of capabilities.
>
> Jean-Paul
>
>
>
>> -glyph
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170711/5ff0f51b/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jul 11 04:41:15 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 11 Jul 2017 06:41:15 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
Message-ID: <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>

On Tue, Jul 11, 2017 at 3:44 AM, Yehuda Deutsch <yeh at uda.co.il> wrote:

> Hi,
>
> This is great, I am building new deployment tools for my company's
> infrastructure, since we host on AWS this will be most useful.
>

Cool!  Glad to hear it's of use. :)


> If i am not wrong, you are following the boto design, if so why not base
> on the boto3 design?
>

If this was an original design decision about txaws (which was around for a
long time before I got involved with it), I'm not aware of it.  For my
part, with the recent Route 53 work, I've just been looking that AWS API
documentation and trying to expose the APIs in the most straightforward way
possible.

Do you see particular similarities between boto/boto3 and txAWS?  Do you
think there is something to be gained by explicitly mirroring something
done in those libraries?

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170711/502343d3/attachment-0002.html>

From thomas.westfeld at currenta.de  Tue Jul 11 09:04:38 2017
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Tue, 11 Jul 2017 15:04:38 +0000
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
Message-ID: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>

Dear all,

I am experiencing an issue with my twistd plugin. It is in a project_plugin.py 
file in the twisted/plugins directory of my project.

Calling "twistd --help" works fine up to twistd version 16.3.2 but in 16.4.0 
the plugin is not recognized anymore.

This is how it looks like:

from zope.interface import implementer

from twisted.application.service import IServiceMaker
from twisted.application import internet
from twisted.plugin import IPlugin
from twisted.python import usage

from myfile import MyFactory

class Options(usage.Options):
	optParameters = [["port", "p", 8000, "The port number to listen on."],
                         ["my-hostname", "l", "", "the hostname of other 
server"],
                         ["my-port", "i", 9000,"the port of the other 
server"]]

@implementer(IServiceMaker, IPlugin)
class MyServiceMaker(object):
        tapname = "myserver"
        description = ""
        options = Options

        def makeService(self, options):
            return internet.TCPServer(int(options["port"]), 
MyFactory(options["my-hostname"], options["my-port"]))

serviceMaker = MyServiceMaker()

Any help is appreciated.

Thomas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 6085 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20170711/b26d4613/attachment-0002.bin>

From steveo at mcroberts.org  Tue Jul 11 12:02:35 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Tue, 11 Jul 2017 13:02:35 -0500
Subject: [Twisted-Python] Need help with SSHUserAuthClient keyfile and
	passphrase
Message-ID: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>

My auth code works for a public keyfile on my local servers but I can't get it to work with a private key.

***Here's an ssh debug list when I login at the console (not twisted):
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Trying private key: /home/sten/.ssh/mcroberts.org-rsa
debug1: key_load_private_type: incorrect passphrase supplied to decrypt private key
Enter passphrase for key '/home/sten/.ssh/myserver.com-rsa': 
debug1: Authentication succeeded (publickey).

***Here's my twisted log:
2017-07-11 12:47:03-0500 [] can continue with: ['publickey', 'password']
2017-07-11 12:47:03-0500 [] trying to auth with publickey
2017-07-11 12:47:03-0500 [] KeyFileAuth.getPublicKey
2017-07-11 12:47:03-0500 []    pubkeyfile=None
2017-07-11 12:47:03-0500 [] KeyFileAuth.getPrivateKey
2017-07-11 12:47:03-0500 []    /home/steve/.ssh/mcroberts.org-rsa is encrypted - looking for passphrase
2017-07-11 12:47:03-0500 [] trying to auth with password

Note that they both only ask for  ['publickey', 'password']. My following code attempts the same but fails.
Here's my source code. This is called from the SSHConnection class before starting service. The verify host is already done.

class KeyFileAuth(userauth.SSHUserAuthClient):
    #https://twistedmatrix.com/documents/current/api/twisted.conch.ssh.userauth.SSHUserAuthClient.html
    #http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.keys.Key.html

    def __init__(self, config, user, instance):
        self.config = config
        self.user = user
        log.msg("KeyFileAuth - requesting auth for user %s @ %s" % (user,config.get('host')), level=logging.DEBUG)
        userauth.SSHUserAuthClient.__init__(self,user,instance)
    
    #--------------------------
    def getPublicKey(self):
        log.msg("KeyFileAuth.getPublicKey", level=logging.DEBUG)
        kf = self.config.get('pubkeyfile')
        log.msg("   pubkeyfile=%s" % (kf), level=logging.DEBUG)
        if kf is not None:
            try:
                if kf.startswith('~'):
                    kf = os.path.expanduser(kf)
                if not os.path.exists(kf):
                    msg = "   No such pubkeyfile=%s" % (kf)
                    return defer.fail(msg)
            except Exception as e:
                log.err("   provided pubkeyfile=%s raised %s" % (kf,e))
                return defer.fail(msg)
        #
        # no apparent public keyfile in config
        # private keyfile - this is the way ssh -v shows it done as in:
        #     debug1: Authentications that can continue: publickey,password
        #     debug1: Next authentication method: publickey
        #     debug1: Trying private key: /home/steve/.ssh/awebsite.com-rsa
        #
        elif self.config.get('keyfile') is not None:
            return self.getPrivateKey()
        return defer.fail("KeyFileAuth.getPublicKey out of options")
    
    #--------------------------
    def getPrivateKey(self):
        log.msg("KeyFileAuth.getPrivateKey", level=logging.DEBUG)
        kf = self.config.get('keyfile')
        if kf is not None:
            try:
                if kf.startswith('~'):
                    kf = os.path.expanduser(kf)
                if not os.path.exists(kf):
                    msg = "   No such keyfile=%s" % (kf)
                    return defer.fail(msg)
            except Exception as e:
                msg = "   provided keyfile=%s raised %s" % (kf,e)
                return defer.fail(msg)
        try:
            return defer.succeed(keys.Key.fromFile(kf))
        except keys.EncryptedKeyError:
            log.msg("   %s is encrypted - looking for passphrase" % (kf), level=logging.INFO)
            if self.config.get('passphrase'):
                passphrase = self.config.get('passphrase')
                return defer.succeed(keys.Key.fromFile(kf, passphrase))
            else:
                msg = "   No passphrase found for keyfile=%s" % (kf)
                return defer.fail(msg)
        except Exception as e:
            msg = "   keyfile=%s raised %s" % (kf,e)
            return defer.fail(msg)
        return defer.fail("KeyFileAuth.getPrivateKey out of options")




From dansut at gmail.com  Tue Jul 11 17:39:55 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Tue, 11 Jul 2017 19:39:55 -0400
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
In-Reply-To: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
References: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
Message-ID: <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>

On Tue, Jul 11, 2017 at 11:04 AM, Thomas Westfeld
<thomas.westfeld at currenta.de> wrote:
> I am experiencing an issue with my twistd plugin. It is in a project_plugin.py
> file in the twisted/plugins directory of my project.
>
> Calling "twistd --help" works fine up to twistd version 16.3.2 but in 16.4.0
> the plugin is not recognized anymore.

This is a PYTHONPATH thing if I remember correctly.
'.' was removed from the path as a side effect of making twistd a
'console script' and this was seen as a good/safer thing.

I believe the proper solution is to install the Python package that
contains your twisted/plugins/ directory.

Here's a link to a mentioning email on this mailing list back then:
  https://twistedmatrix.com/pipermail/twisted-python/2016-September/030782.html

Hope this helps,
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From steveo at mcroberts.org  Wed Jul 12 10:09:00 2017
From: steveo at mcroberts.org (Stephen McRoberts)
Date: Wed, 12 Jul 2017 11:09:00 -0500
Subject: [Twisted-Python] Need help with SSHUserAuthClient keyfile and
 passphrase
In-Reply-To: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>
References: <7A3740D8-88A9-4C45-B540-F419EA76EF4F@mcroberts.org>
Message-ID: <4CAB837B-23B8-40E7-8388-85B852D06AC5@mcroberts.org>

In case some other lost person stumbles upon this question...
It's a lot of wizardry to me but here's how I got it to work.

    1. Generate a public key from private key with:
        ssh-keygen -f ~/.ssh/myserver.com-rsa -y -P old_passphrase -N new_passphrase > ~/.ssh/myserver.com-rsa.pub
    2. Put the public key in authorized_keys
        cat ~/.ssh/myserver.com-rsa.pub  >> ~/.ssh/authorized_keys

Now when getPublicKey is called, it calls getPrivateKey and all is well. You can retrieve the passphrase however you want but I made an SSHAuthOptions class to hold the keyfile and passphrase. Look at https://github.com/twisted/twisted/blob/twisted-17.5.0/src/twisted/conch/client/default.py and copy relevant parts from getPrivateKey and substitute your passphrase.

Take this for what you paid for it. I don't know much abut SSH2 and don't have the interest to learn so my methods may be called into question.


From dansut at gmail.com  Wed Jul 12 16:36:46 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Wed, 12 Jul 2017 18:36:46 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
Message-ID: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>

I'm getting this report under pypy2 5.8.0 running Twisted trunk from github:
===============================================================================
[FAIL]
Traceback (most recent call last):
  File "/opt/twisted/src/twisted/test/test_plugin.py", line 566, in
test_freshPyReplacesStalePyc
    self.assertIn('one', self.getAllPlugins())
  File "/opt/twisted/src/twisted/trial/_synctest.py", line 492, in assertIn
    % (containee, container))
twisted.trial.unittest.FailTest: 'one' not in ['dev', 'app']

twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/opt/twisted/src/twisted/plugin.py", line 171, in getCache
    provider = pluginModule.load()
  File "/opt/twisted/src/twisted/python/modules.py", line 392, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "/opt/twisted/src/twisted/python/reflect.py", line 312, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'stale'

twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
-------------------------------------------------------------------------------
I'm not sure yet if it works under pypy3.

My initial tracings seem to suggest this is somehow due to __import__
under pypy not finding the stale.pyc where no stale.py exists ... but
I have to admit that at this point if this is actually expected, all I
know is the test passes under python 2.7.13 and if I comment out the
mypath.remove() on line 562...

Willing to do more work to get to the bottom of this, just thought I'd
put this out there to see if I could get any clues from the more
experienced before I dive in. There seem to be some old tickets that
could vaguely relate...

Am I correct in the fact that Twisted doesn't have Travis-CI builds on PyPy?
Maybe there's a reason for this I'm missing...

Thanks in advance for any info or clues,
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From rodrigc at crodrigues.org  Wed Jul 12 17:31:14 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Wed, 12 Jul 2017 16:31:14 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
Message-ID: <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>

On Wed, Jul 12, 2017 at 3:36 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:

>
> Am I correct in the fact that Twisted doesn't have Travis-CI builds on
> PyPy?
>

There are two builders which do PyPy:

https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5
https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5-benchmark

and one here:

http://speed.twistedmatrix.com/

Some of the tests are constantly failing, so if you could investigate and
help fix some of the Pypy issues, that would be much appreciated.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170712/ec7e69bd/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jul 13 01:58:18 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Jul 2017 00:58:18 -0700
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
 <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
Message-ID: <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>


> On Jul 11, 2017, at 3:41 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Do you see particular similarities between boto/boto3 and txAWS?  Do you think there is something to be gained by explicitly mirroring something done in those libraries?

The major thing to be gained by mimicking boto3, specifically (not boto 2) is its usage of botocore, which is a bunch of structured, static data describing the parameters used by various AWS APIs.  This could potentially increase the coverage of APIs that txAWS supports.

(boto2 had quite a bit of high-level convenience functionality that I wish boto3 had kept though; I don't think the "nothing but botocore wrappers" approach is necessarily something that should be copied)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/09a46f65/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jul 13 04:45:06 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 13 Jul 2017 06:45:06 -0400
Subject: [Twisted-Python] [ANN] txAWS 0.4.0
In-Reply-To: <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>
References: <CAEeXt4PO16uT-FT8TachUCZ-oG4ZmmRo6Wyz=UiDNLh-yscdfw@mail.gmail.com>
 <B2BE946D-0E5B-4FF9-929B-9C35DC5A3079@twistedmatrix.com>
 <CAEeXt4PzoxFoNO8LFEnxgik-xTd3SMyQT0mYxt3AFDJTgCxdBQ@mail.gmail.com>
 <CAAnGLd1oN+CAMuS-rNaSVm_8z2fZUoYUxy3cmL2iNXB_eDbvuw@mail.gmail.com>
 <CAEeXt4MZFc7zCvDaJVvfC9hKOjtpCiwL8S_oZ9=YyOEF51gVng@mail.gmail.com>
 <1127AEA9-4546-4381-86D9-814CD63041B7@twistedmatrix.com>
Message-ID: <CAEeXt4PdCOu81vy_jhLMup3APb5v1YG_E=Oh6Nv77nRGy1J86A@mail.gmail.com>

On Thu, Jul 13, 2017 at 3:58 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Jul 11, 2017, at 3:41 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Do you see particular similarities between boto/boto3 and txAWS?  Do you
> think there is something to be gained by explicitly mirroring something
> done in those libraries?
>
>
> The major thing to be gained by mimicking boto3, specifically (*not* boto
> 2) is its usage of botocore, which is a bunch of structured, static data
> describing the parameters used by various AWS APIs.  This could potentially
> increase the coverage of APIs that txAWS supports.
>
> (boto2 had quite a bit of high-level convenience functionality that I wish
> boto3 had kept though; I don't think the "nothing but botocore wrappers"
> approach is necessarily something that should be copied)
>
>
Ah.  Yea.  I would like it if someone would do some work on that.
https://github.com/twisted/txaws/issues/13

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/d61464f2/attachment-0002.html>

From dansut at gmail.com  Thu Jul 13 06:57:49 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Thu, 13 Jul 2017 08:57:49 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
Message-ID: <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>

Craig, thanks for the pointers - I should have known about these
really useful resources as I've been lurking a while but for some
reason was focussed on the Travis-CI and Appveyor builds.

I see now the Twisted Development Wiki page
https://twistedmatrix.com/trac/wiki/TwistedDevelopment has links to
the buildbot so I have even less excuse for not being more aware.

On Wed, Jul 12, 2017 at 3:36 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> Am I correct in the fact that Twisted doesn't have Travis-CI builds on
>> PyPy?

On Wed, Jul 12, 2017 at 7:31 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> There are two builders which do PyPy:
>
> https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5

Interestingly although there is also an ERROR here for
twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
it is different to the one I am getting:

[ERROR]
Traceback (most recent call last):
  File "/buildslave/ubuntu16.04-pypy5/Twisted/build/pypy-alldeps-nocov-posix/site-packages/twisted/test/test_plugin.py",
line 560, in test_freshPyReplacesStalePyc
    os.utime(pyc.path, (x, x))
exceptions.OSError: [Errno 2] No such file or directory:
'/buildslave/ubuntu16.04-pypy5/Twisted/_trial_temp/twisted.test.test_plugin/DeveloperSetupTests/test_freshPyReplacesStalePyc/HBEKNc/temp/application_path/plugindummy/plugins/stale.pyc'

Vs mine:

[ERROR]
Traceback (most recent call last):
  File "/usr/src/twisted/src/twisted/plugin.py", line 171, in getCache
    provider = pluginModule.load()
  File "/usr/src/twisted/src/twisted/python/modules.py", line 392, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "/usr/src/twisted/src/twisted/python/reflect.py", line 312, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'stale'

There is also no FAIL in the buildbot build for the same test, mine:

[FAIL]
Traceback (most recent call last):
  File "/usr/src/twisted/src/twisted/test/test_plugin.py", line 566,
in test_freshPyReplacesStalePyc
    self.assertIn('one', self.getAllPlugins())
  File "/usr/src/twisted/src/twisted/trial/_synctest.py", line 492, in assertIn
    % (containee, container))
twisted.trial.unittest.FailTest: 'one' not in ['dev', 'app']

These are different from orig report as now in Docker container
jamiehewland/alpine-pypy:2 (possibly my goal platform) the original
was in a squeaky_pl's portable-pypy 2.7 build of 5.7 pypy. I'm next
going to try the official pypy:2 Docker container as this would seem
to be possibly the most standard platform to try and support in this
day and age...

I'm sure I'll get to the bottom of this but any clues or thoughts from
the more experienced would be appreciated - it seems to me that there
might be some mileage in breaking this problem test up a bit as I
gradually understand more about what it is trying to do... ?

> https://buildbot.twistedmatrix.com/builders/ubuntu16.04-pypy5-benchmark
>
> and one here:
> http://speed.twistedmatrix.com/

I had noted this speed comparison when Hawkowl posted it here the
other week - should have thought to poke further looking for related
builds too as that's what you originally asked about.

On a related point; PyPy has entered a strange phase as their 5.8.0
release now is available as CPython 2.7 or 3.5 compatible builds -
slightly confusing but I see wheels are tagged something like pp258
pp358 - maybe the Twisted project needs also to somehow differentiate
the two. Especially as although the 3.5 builds are still labeled as
beta I get the feeling the impetus (sponsorship) is behind removing
this designation sooner rather than later. Just a thought

> Some of the tests are constantly failing, so if you could investigate and
> help fix some of the Pypy issues, that would be much appreciated.

I shall do my best as my intention is to use Twisted in a live
environment with PyPy so it would be great if the project viewed these
builds as required to be clean sometime in the future. This was just
the first ERROR I attacked, it was always my intention to look into
the others too, which I am also seeing.

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From rodrigc at crodrigues.org  Thu Jul 13 09:31:47 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 13 Jul 2017 08:31:47 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
Message-ID: <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>

On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>
> I shall do my best as my intention is to use Twisted in a live
> environment with PyPy so it would be great if the project viewed these
> builds as required to be clean sometime in the future. This was just
> the first ERROR I attacked, it was always my intention to look into
> the others too, which I am also seeing.
>
>
Thanks for your motivation.  Please keep going, and share your findings on
the mailing list.

Last year, Mark Williams worked on fixing many Twisted unit tests to either
pass or skip on Pypy,
and even found one issue with Pypy itself (
https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
).

If you feel there are improvements or additions to the buildbot jobs using
Pypy, please share
your thoughts.  The builbot master.cfg file is at
https://github.com/twisted-infra/braid/tree/master/services/buildbot/master

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/e33aed1d/attachment-0002.html>

From dansut at gmail.com  Thu Jul 13 17:22:10 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Thu, 13 Jul 2017 19:22:10 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
Message-ID: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>

> On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> I shall do my best as my intention is to use Twisted in a live
>> environment with PyPy so it would be great if the project viewed these
>> builds as required to be clean sometime in the future. This was just
>> the first ERROR I attacked, it was always my intention to look into
>> the others too, which I am also seeing.

On Thu, Jul 13, 2017 at 11:31 AM, Craig Rodrigues
<rodrigc at crodrigues.org> wrote:
> Thanks for your motivation.

No problem, this is one of the few ways I can give back to the Twisted
project that is ultimately helping me achieve my goals;
besides getting to the bottom of these type of things is a fun
learning exercise for me :)

> Please keep going, and share your findings on the mailing list.
>
> Last year, Mark Williams worked on fixing many Twisted unit tests to either
> pass or skip on Pypy, and even found one issue with Pypy itself (
> https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
> ).

This one is likely to fall on deaf ears in the PyPy project...
The reason for the ERROR and then FAIL is as I originally thought,
that __import__() under pypy is not loading .pyc files where the .py
is missing and:
  http://doc.pypy.org/en/latest/config/objspace.lonepycfiles.html
tl;dr - they view it as dangerous due to pyc binary variations and
only allow by build time configuration option.

So the next question I guess is how to deal with this:

- presumably my first step is to log a bug in Trac as any change will
require one, I had only held off from doing this until I was more sure
of the cause of the issue.

- the FAIL goes away if the .py is not removed from the plugins dir
and it seems to me that the .py removal is not actually required to
strictly test what
twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
purports to be testing - so that could fix this test

- the fact that the test ERRORs and then carries on and FAILs later in
a strange fashion is due to the fact twisted.plugin.getCache() simply
does a log.err() on encountering the odd situation - so maybe this
could be dealt with better knowing that PyPy does different things
than CPython here... ?

Could the more experienced please advise :)

> If you feel there are improvements or additions to the buildbot jobs using
> Pypy, please share your thoughts.  The buildbot master.cfg file is at
> https://github.com/twisted-infra/braid/tree/master/services/buildbot/master

I have not looked into why buildbot comes up with a different error to
the one I did on various platforms - fix for my situation and see if
it fixes the pypy buildbot before investigating?

The other error that I and the buildbot see on pypy is 12x (always) of
  Failure: twisted.internet.defer.TimeoutError
for
  twisted.protocols.test.test_tls.TLSMemoryBIOTests.test_hugeWrite_TLSv1_1
which is odd as if I run this test on its own it succeeds every time...
Thoughts on this appreciated but probably should start a new thread for that...

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From glyph at twistedmatrix.com  Thu Jul 13 20:14:28 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Jul 2017 19:14:28 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
Message-ID: <1499998468.3369087.1040428288.3CEB1C37@webmail.messagingengine.com>



On Thu, Jul 13, 2017, at 04:22 PM, Daniel Sutcliffe wrote:
> > On Thu, Jul 13, 2017 at 5:57 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
> >> I shall do my best as my intention is to use Twisted in a live
> >> environment with PyPy so it would be great if the project viewed these
> >> builds as required to be clean sometime in the future. This was just
> >> the first ERROR I attacked, it was always my intention to look into
> >> the others too, which I am also seeing.
> 
> On Thu, Jul 13, 2017 at 11:31 AM, Craig Rodrigues
> <rodrigc at crodrigues.org> wrote:
> > Thanks for your motivation.
> 
> No problem, this is one of the few ways I can give back to the Twisted
> project that is ultimately helping me achieve my goals;
> besides getting to the bottom of these type of things is a fun
> learning exercise for me :)
> 
> > Please keep going, and share your findings on the mailing list.
> >
> > Last year, Mark Williams worked on fixing many Twisted unit tests to either
> > pass or skip on Pypy, and even found one issue with Pypy itself (
> > https://bitbucket.org/pypy/pypy/issues/2335/maximum-recursion-depth-exceeded-with
> > ).
> 
> This one is likely to fall on deaf ears in the PyPy project...
> The reason for the ERROR and then FAIL is as I originally thought,
> that __import__() under pypy is not loading .pyc files where the .py
> is missing and:
>   http://doc.pypy.org/en/latest/config/objspace.lonepycfiles.html
> tl;dr - they view it as dangerous due to pyc binary variations and
> only allow by build time configuration option.
> 
> So the next question I guess is how to deal with this:
> 
> - presumably my first step is to log a bug in Trac as any change will
> require one, I had only held off from doing this until I was more sure
> of the cause of the issue.
> 
> - the FAIL goes away if the .py is not removed from the plugins dir
> and it seems to me that the .py removal is not actually required to
> strictly test what
> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
> purports to be testing - so that could fix this test
> 
> - the fact that the test ERRORs and then carries on and FAILs later in
> a strange fashion is due to the fact twisted.plugin.getCache() simply
> does a log.err() on encountering the odd situation - so maybe this
> could be dealt with better knowing that PyPy does different things
> than CPython here... ?
> 
> Could the more experienced please advise :)

It is totally fine to skip this test on PyPy.  It's testing the ability
to interact with a particular feature of the CPython interpreter, which
is intentionally absent on PyPy.  Ideally, the implementation would not
enumerate that module on PyPy since it isn't going to be importable as a
module.

In fact, many of the failing tests are for obscure corner cases which
can and should be skipped so that we can declare PyPy a supported
platform, then work on fixing them after the fact :-).

> > If you feel there are improvements or additions to the buildbot jobs using
> > Pypy, please share your thoughts.  The buildbot master.cfg file is at
> > https://github.com/twisted-infra/braid/tree/master/services/buildbot/master
> 
> I have not looked into why buildbot comes up with a different error to
> the one I did on various platforms - fix for my situation and see if
> it fixes the pypy buildbot before investigating?
> 
> The other error that I and the buildbot see on pypy is 12x (always) of
>   Failure: twisted.internet.defer.TimeoutError
> for
>   twisted.protocols.test.test_tls.TLSMemoryBIOTests.test_hugeWrite_TLSv1_1
> which is odd as if I run this test on its own it succeeds every time...
> Thoughts on this appreciated but probably should start a new thread for
> that...
> 
> Cheers
> /dan
> -- 
> Daniel Sutcliffe <dansut at gmail.com>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From rodrigc at crodrigues.org  Fri Jul 14 00:22:59 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 13 Jul 2017 23:22:59 -0700
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
Message-ID: <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>
>
> - the FAIL goes away if the .py is not removed from the plugins dir
> and it seems to me that the .py removal is not actually required to
> strictly test what
> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
> purports to be testing - so that could fix this test



OK.  Based on your analysis, and also Glyph's recommendation,
I think it is OK for this test to skip if Pypy is used.

Can you submit a patch for this test to skip on Pypy?
I think you can get things rolling if you do something like:

(1)  Learn the procedure to submit a patch by reading:
https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
      There are a number of steps, but really it is not that bad.

(2)   Submit a patch that does the following:
        - modify twisted/test/test_plugin.py so that you:
        (a)  import _PYPY from twisted.python.compat
        (b) and then do something like:

         if _PYPY:
             test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"

I can help review the change to get it in.

Thanks!
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170713/1b521e6b/attachment-0002.html>

From dansut at gmail.com  Fri Jul 14 09:47:22 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Fri, 14 Jul 2017 11:47:22 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
 <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
Message-ID: <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>> - the FAIL goes away if the .py is not removed from the plugins dir
>> and it seems to me that the .py removal is not actually required to
>> strictly test what
>> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
>> purports to be testing - so that could fix this test

On Thu, Jul 13, 2017 at 10:14 PM Glyph <glyph at twistedmatrix.com> wrote:
> It is totally fine to skip this test on PyPy.  It's testing the ability
> to interact with a particular feature of the CPython interpreter, which
> is intentionally absent on PyPy.  Ideally, the implementation would not
> enumerate that module on PyPy since it isn't going to be importable as a
> module.

On Fri, Jul 14, 2017 at 2:22 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> OK.  Based on your analysis, and also Glyph's recommendation,
> I think it is OK for this test to skip if Pypy is used.
>
> Can you submit a patch for this test to skip on Pypy?
> I think you can get things rolling if you do something like:
>
> (1)  Learn the procedure to submit a patch by reading:
> https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
>       There are a number of steps, but really it is not that bad.

Created a ticket to get this ball rolling:
https://twistedmatrix.com/trac/ticket/9219
This will be my second PR, but first for actual code, and have been
lurking for some while so already have some familiarity with the
process - let's see how badly I can screw it up though ;)

> (2)   Submit a patch that does the following:
>         - modify twisted/test/test_plugin.py so that you:
>         (a)  import _PYPY from twisted.python.compat
>         (b) and then do something like:
>
>          if _PYPY:
>              test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"

I have an idea for a PR that goes a little bit further than this -
I'll submit to see if acceptable and if not I'll fall back to this
approach.

> I can help review the change to get it in.

Thanks Craig, appreciated.

Glyph wrote:
> In fact, many of the failing tests are for obscure corner cases which
> can and should be skipped so that we can declare PyPy a supported
> platform, then work on fixing them after the fact :-).

My intention is to look at each issue in turn if I can get this one
through - hoping to see PyPy declared as 'supported' sooner rather
than later :)

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From dansut at gmail.com  Fri Jul 14 17:20:25 2017
From: dansut at gmail.com (Daniel Sutcliffe)
Date: Fri, 14 Jul 2017 19:20:25 -0400
Subject: [Twisted-Python] Failure of
 twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
 under pypy2
In-Reply-To: <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>
References: <CADzPF4tKkUv-3Z5Z6HXxbEXURAhFi_oyp+0pUaeHccoTOurhcw@mail.gmail.com>
 <CAG=rPVdmFoHwduGCktx36BsipvLBui1okkxcGGjcwWSGzpUcYQ@mail.gmail.com>
 <CADzPF4tVOXFYHssVsNEeOEkhcFcw0-2NZ2z8ejGFhKyph4q+pw@mail.gmail.com>
 <CAG=rPVcO777o8rsW6QE-3auZ6-_jNR9820tZy8W8pmzgWGt7AQ@mail.gmail.com>
 <CADzPF4uwRSHgikBmvmSPmfjrHz=FCxfrHaYE_5hndrwD7xWp_Q@mail.gmail.com>
 <CAG=rPVeY_7kqQL8CS0nZcBMebtXt3yi6x+gebEf=0dFbXeMNAg@mail.gmail.com>
 <CADzPF4tOX99Da94929Zm0BFCPVMG37uZvZcKBGYKMMnkHMFF6Q@mail.gmail.com>
Message-ID: <CADzPF4tqz+YvP+6pDmPv2LKJReXZYcRKy208QDAu=za_tgTEXg@mail.gmail.com>

On Thu, Jul 13, 2017 at 4:22 PM, Daniel Sutcliffe <dansut at gmail.com> wrote:
>>> - the FAIL goes away if the .py is not removed from the plugins dir
>>> and it seems to me that the .py removal is not actually required to
>>> strictly test what
>>> twisted.test.test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
>>> purports to be testing - so that could fix this test
>
> On Thu, Jul 13, 2017 at 10:14 PM Glyph <glyph at twistedmatrix.com> wrote:
>> It is totally fine to skip this test on PyPy.  It's testing the ability
>> to interact with a particular feature of the CPython interpreter, which
>> is intentionally absent on PyPy.  Ideally, the implementation would not
>> enumerate that module on PyPy since it isn't going to be importable as a
>> module.
>
> On Fri, Jul 14, 2017 at 2:22 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>> OK.  Based on your analysis, and also Glyph's recommendation,
>> I think it is OK for this test to skip if Pypy is used.
>>
>> Can you submit a patch for this test to skip on Pypy?
>> I think you can get things rolling if you do something like:
>>
>> (1)  Learn the procedure to submit a patch by reading:
>> https://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch .
>>       There are a number of steps, but really it is not that bad.

On Fri, Jul 14, 2017 at 11:47 AM, Daniel Sutcliffe <dansut at gmail.com> wrote:
> Created a ticket to get this ball rolling:
> https://twistedmatrix.com/trac/ticket/9219
> This will be my second PR, but first for actual code, and have been
> lurking for some while so already have some familiarity with the
> process - let's see how badly I can screw it up though ;)

PR now exists: https://github.com/twisted/twisted/pull/837

>> (2)   Submit a patch that does the following:
>>         - modify twisted/test/test_plugin.py so that you:
>>         (a)  import _PYPY from twisted.python.compat
>>         (b) and then do something like:
>>
>>          if _PYPY:
>>              test_freshPyReplacesStalePyc.skip = "Does not work on PYPY"
>
> I have an idea for a PR that goes a little bit further than this -
> I'll submit to see if acceptable and if not I'll fall back to this
> approach.

I ended up just doing the disabling - after playing around with trying
to improve testing in this area I decided that I was getting in over
my experience level and thought the basics was a a better first step.

I will say though, I think there is some mileage in actually changing the
  test_plugin.DeveloperSetupTests.test_freshPyReplacesStalePyc
to be more of a
  test_plugin.test_freshPyReplacesCached
could remove the need to mess around with the idea of knowing there is
the .pyc (with PY3 legacy required) and dropin.cache involved at all
and making this test more of a 'unit' test.

Then more tests can be created to deal with specific cases, such as
test_lonePycLoads can be created (and skipped more meaningfully for
PyPy2) ... just a thought, and I don't mind doing if it is thought
useful.

Cheers
/dan
-- 
Daniel Sutcliffe <dansut at gmail.com>



From trac at twistedmatrix.com  Sun Jul 16 00:05:27 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Jul 2017 06:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1500185127.12.4960803751498996563@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170716/de4f1af5/attachment-0002.html>

From thomas.westfeld at currenta.de  Mon Jul 17 09:42:14 2017
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Mon, 17 Jul 2017 15:42:14 +0000
Subject: [Twisted-Python] Incompatible changes to twistd 16.3.2 to 16.4.0
In-Reply-To: <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>
References: <95658a3427ce4ed7bc67210a8e285bbc@BYEX35.de.bayer.cnb>
 <CADzPF4vKU2rT0iVXAOC1hnapB25JOwrK+prkmL28hNCaeqJj+w@mail.gmail.com>
Message-ID: <0b1d2a4653fe4ca8b7891ff83800c25d@BYEX35.de.bayer.cnb>

Hello Daniel,

Indeed you were correct, the PYTHONPATH made the difference.

Thank you!
Thomas


This is a PYTHONPATH thing if I remember correctly.
'.' was removed from the path as a side effect of making twistd a
'console script' and this was seen as a good/safer thing.

I believe the proper solution is to install the Python package that
contains your twisted/plugins/ directory.


From fehrist at codeghar.com  Mon Jul 17 11:08:08 2017
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 17 Jul 2017 10:08:08 -0700
Subject: [Twisted-Python] Using Twisted with pytest fixtures
Message-ID: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>

I use pytest[0] to write integration test automation. If the tests are stripped
down to their core, they are basically using different network connections and
protocols to drive multiple applications. Tests use the following Python
libraries:

* paramiko[2]
* docker[3]
* requests[4]
* pychef[5]
* pymongo[6]
* python-qpid-proton[7]
* websocket-client[8]

I use pytest fixtures[1] heavily. Each of the aforementioned libraries is used
such that each connection (say SSH) is provided to tests through that fixture.
This makes writing tests quite simple as a single object can be used to
maintain a network connection that can be reused across multiple tests in the
same session. In case the connection needs to be re-established, the class has
methods to hide that detail from the tests and things just work.

Sample code is presented below:

    # In conftest.py
    from path_to_lib.ssh import SSH
    @pytest.fixture(scope="session")
    def ssh_fixture():
        return SSH(
            host=hostname_,
            port=22,
            username=username_,
            pem=path_to_pem)


    # In path_to_lib/ssh.py
    import paramiko
    class SSH(object):
        def __init__(self, host, port, username, pem):
            self.host = host
            self.port = port
            self.username = username
            self.pem = pem
            self.client = paramiko.SSHClient()
            self.client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            self.transport = None

        def _connect(self):
            self.client.connect(
                hostname=self.host,
                username=self.username,
                key_filename=self.pem,
                port=self.port)

        def exec_cmd(self, cmd):
            try:
                _, stdout, stderr = self.client.exec_command(
                    cmd,
                    get_pty=True)
            except:
                self._connect()
                _, stdout, stderr = self.client.exec_command(
                    cmd,
                    get_pty=True)
            return stdout, stderr

    # In path_to_tests/test_foo.py
    def test_foo(ssh_fixture):
        cmd = "hostname"
        stdo, stde = ssh_fixture.exec_cmd(cmd)
        assert stdo

    # In path_to_tests/test_blah.py
    def test_blah(ssh_fixture):
        cmd = "ls /"
        stdo, stde = ssh_fixture.exec_cmd(cmd)
        assert stdo

The above sample code is essentially how all other libraries (say for Mongo)
are used in my tests. Each type of protocol is presented to tests through a
fixture and tests only need to call certain methods without having to know
the gory details behind them.

This method provides very readable code. It also makes writing tests much
easier.

In addition to using these libraries sometimes I need to use the socket library
to talk to proprietary services using TCP and/or UDP that don't have open
source libraries available.

The problem is that I have a *lot* of these integration tests that can run for
a long time (anywhere from 2 hours to 12 hours based on the test set selected)
(I need to test a *lot* of services and components). This is causing some
issues when I get my hands dirty with the socket library.

Instead of writing a custom and badly implemented Twisted alternative I thought
I could use Twisted to replace a bunch of these libraries. Of course, I can't
replace all of them at once today but I'd much rather start on the path.

As I started getting familiar with the official and community docs I realized
that most of them deal with writing servers (and sometimes clients). I can't
find any docs on how people in my situation use Twisted.

>From what I understand -- forgive my beginner-level grasp of the subject
matter -- once the reactor starts no more listenTCP() or connectTCP()
(for example) can be added. And until the reactor stops code execution does not
progress beyond ``reactor.run()``. For example, in the code below, _Done_ is
not printed until there's a ``reactor.stop()`` somewhere above it.

    blah ...
    reactor.run()
    print("Done")




My questions for the community:

* How can I use Twisted that fits the way my tests are written?
* If I have to rewrite my tests to fit the Twisted model, do I start the
  reactor every time for each test and stop it at the end?
* Are there any known issues with start/stop reactor multiple times in a
  single, long-running process?
* Are there any good examples of using Twisted in integration tests that I
  have failed to find?




[0] https://docs.pytest.org/en/latest/
[1] https://docs.pytest.org/en/latest/fixture.html
[2] https://pypi.org/project/paramiko/
[3] https://pypi.org/project/docker/
[4] https://pypi.org/project/requests/
[5] https://pypi.org/project/PyChef/
[6] https://pypi.org/project/pymongo/
[7] https://pypi.org/project/python-qpid-proton/
[8] https://pypi.org/project/websocket-client/


Thanks in advance.

Hamza Sheikh
Twitter: @aikchar



From meejah at meejah.ca  Mon Jul 17 12:08:09 2017
From: meejah at meejah.ca (meejah)
Date: Mon, 17 Jul 2017 22:08:09 +0400
Subject: [Twisted-Python] Using Twisted with pytest fixtures
In-Reply-To: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
 (Hamza Sheikh's message of "Mon, 17 Jul 2017 10:08:08 -0700")
References: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
Message-ID: <86r2xfx7g6.fsf@atlantis.meejah.ca>

Hamza Sheikh <fehrist at codeghar.com> writes:

> From what I understand -- forgive my beginner-level grasp of the
> subject matter -- once the reactor starts no more listenTCP() or
> connectTCP() (for example) can be added.

You can call these methods after the reactor starts with no problems.

> And until the reactor stops code execution does not progress beyond
> ``reactor.run()``.

Yes, this is true.

> * How can I use Twisted that fits the way my tests are written?
> * If I have to rewrite my tests to fit the Twisted model, do I start the
>   reactor every time for each test and stop it at the end?

No, I would use a "session"-scoped "reactor" fixture that starts the
reactor once, and stops it once. This is also what the function
twisted.internet.task.react does for you (but probably not appropriate
for pytest tests).

> * Are there any known issues with start/stop reactor multiple times in a
>   single, long-running process?

You cannot re-start the reactor.

> * Are there any good examples of using Twisted in integration tests that I
>   have failed to find?

I have a blog post on this, outlining some integration tests that I
wrote for Tahoe-LAFS (which uses Twisted) and which also starts a
25-node Tor test network.

   https://meejah.ca/blog/pytest-integration-testing

You probably also want the pytest-twisted extension for pytest.  I'm
often around in #twisted or #tahoe-lafs on Freenode IRC if you'd like to
discuss.

-- 
meejah



From trac at twistedmatrix.com  Sun Jul 23 00:05:23 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Jul 2017 06:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1500789923.15.234126202041052932@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170723/fc03c88b/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Jul 23 22:39:50 2017
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 23 Jul 2017 21:39:50 -0700
Subject: [Twisted-Python] quality of non-member reviews
Message-ID: <8AE1B95C-AA4C-422E-A6AF-4F71A97D6CE9@twistedmatrix.com>

Hello Twisted Project Members (i.e.: committers, people with repo:write access),

Whenever you get a code review from a non-member, it's important to always[1] ensure that they remove the 'review' keyword.  This is not really important in and of itself, but it is very important for other reasons, which I will attempt to explain, since I think I may not have properly laid this out sufficient detail before.

The goal of allowing non-project-members (i.e.: external contributors) to review changes in Twisted is to provide a pipeline for folks to become developers of the project; to allow people to gain experience with reviewing, so they can proceed to being full reviewers, without requiring that they already be project members before they can practice.  In other words, it is a process to train reviewers so that we can have higher code-review throughput in general in the future, not a shortcut to get changes reviewed more quickly.

It is therefore the responsibility of the developer accepting the code review to ensure that the reviewer is following directions and has given sufficient attention to the review, and to provide feedback on those reviews to ensure that the new contributors are learning how to look for the things that help us maintain Twisted's quality.

Sometimes, the only code review you need is a "thumbs up, looks good", because everything really is fine, the fix is simple, and there's nothing much the reviewer could say.  Ideally, all changes are small, and obvious, and reviewers can just give that review regularly.

However, such a review is always suspicious, because it's very easy for a reviewer, especially an external reviewer with little understanding of the project, to just rubber-stamp a fix they want to see merged quickly without giving it any real analysis.

As such, it's very important that when accepting a very short review that you use whatever clues you have at your disposal that  the reviewer has actually reviewed the code in some detail.

One potential proxy for this is that our process requires some small peculiarities, such as attaching and removing the 'review' keyword in Trac[2].  If a contributor has not even read the instructions carefully enough to know that they need to remove this keyword, it is virtually impossible for them to have dedicated the attention and care required by https://twistedmatrix.com/trac/wiki/ReviewProcess#Howtobeagoodreviewer <https://twistedmatrix.com/trac/wiki/ReviewProcess#Howtobeagoodreviewer> to do a full review and consider everything that cannot be automatically verified, such as impact to Twisted's public interface, the legibility of documentation, duplication of features, et cetera.

If the contributor has demonstrated their attention to detail in some other way, by giving a thorough review and writing some analysis of the change's implications (even if it's not actionable, just something like "I read over the narrative documentation to ensure it didn't need any changes and it looks like we're good") then it might be acceptable to gently point out the small process mistake of not updating trac.  But if the change is just a Github comment saying "LGTM" with nothing else associated, it is important not to accept the review and to explain that the reviewer should re-read the directions explaining how to give a review.

As you might have guessed, I have seen "LGTM" changes landing on trunk recently whose reviews looked somewhat suspicious to me.  I, and a few other long-time Twisted developers, have complained about this before, but in re-reading those complaints in preparation for writing this message, it occurred to me that I may not have spelled out exactly what I was concerned with and why, so, in the spirit if blameless post-mortems, I don't want to call out anyone specifically[3].

Pascal's apology applies; I haven't had much time to edit.

Thanks for reading,

-glyph


Endnotes:

[1]: Iron-clad process rigidity is not the goal here. Sometimes there are legitimate reasons to need to move things along a little faster than a full thorough review requires.  For example, if there's a pressing security issue, or all the CI infrastructure is failing due to a bug in one of our dependencies.  There are also cases where the important thing that needs to be done in a review is a highly specialized analysis, like; for example, if we need a GPS expert to verify that some change to twisted.positioning is correct, and beyond the domain knowledge the code change is otherwise trivial.  In these cases it might be fine to accept a "LGTM", if the question posed in the review is highly specific, but in that case, it's important to leave a comment explaining what exactly has transpired: "I'm removing the review keyword myself because I needed a domain expert to review this, and XXX YYY was helpful enough to have a look but is not familiar with our process." or whatever the case may be.

In general, putting more thorough comments on tickets is always a good thing.  However clear that you as a Twisted project insider think a thing is, chances are it is about 1/4 that clear to anyone trying to understand project direction from the outside.  I'm certainly guilty of under-documenting myself :-).

[2]: we are not preserving Trac purely as a shibboleth to check on people installing the directions; software development is hard enough without extra roadblocks thrown in the way.  There are just too many tools connected to the 'review' keyword right now that are hard to connect to Github automatically.  Whatever our process, however, it's important to verify that reviewers are following it carefully.

[3]: I realize that there are too many bits of identifying information here to be meaningfully anonymous, so some folks will immediately know the specific ticket that precipitated this, but don't be a jerk and dig up someone's name from the trac timeline because you can; the goal here is not (and should not) be to throw anyone under the bus, but to improve communication around project policy.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170723/24fca52b/attachment-0002.html>

From mithrandi at mithrandi.net  Wed Jul 26 12:46:27 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Jul 2017 18:46:27 +0000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
Message-ID: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>

Hi all,

I've uploaded a prerelease of Nevow 0.14.3 to PyPI[1]. This contains a fix
for some Athena client-side timeout behaviour (or more specifically, the
lack of one) and removes use of FilePath.getmtime.

If you are using Athena, please a) let me know! and b) give this prerelease
a try to see if anything breaks. As the de facto Nevow release manager, and
one of its last users, I'd like to avoid going overboard on release
engineering if it isn't necessary, but I'd also like to avoid making life
worse for any other remaining users, so it would be useful to hear from any
of you out there still using Nevow.

[1] https://pypi.python.org/pypi/Nevow/0.14.3rc1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170726/8f080893/attachment-0002.html>

From werner at thieprojects.ch  Wed Jul 26 13:35:59 2017
From: werner at thieprojects.ch (Werner Thie)
Date: Wed, 26 Jul 2017 09:35:59 -1000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
In-Reply-To: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
References: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
Message-ID: <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>

Aloha Tristan

still using Athena in production, will be able to test tomorrow.

And just to mention it, still one of the best pieces of software (and 
probably also one of the most under documented) I've ever used.

Mahalo, Werner

On 7/26/17 8:46 AM, Tristan Seligmann wrote:
> Hi all,
> 
> I've uploaded a prerelease of Nevow 0.14.3 to PyPI[1]. This contains a 
> fix for some Athena client-side timeout behaviour (or more specifically, 
> the lack of one) and removes use of FilePath.getmtime.
> 
> If you are using Athena, please a) let me know! and b) give this 
> prerelease a try to see if anything breaks. As the de facto Nevow 
> release manager, and one of its last users, I'd like to avoid going 
> overboard on release engineering if it isn't necessary, but I'd also 
> like to avoid making life worse for any other remaining users, so it 
> would be useful to hear from any of you out there still using Nevow.
> 
> [1] https://pypi.python.org/pypi/Nevow/0.14.3rc1
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From mithrandi at mithrandi.net  Wed Jul 26 15:10:44 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 26 Jul 2017 21:10:44 +0000
Subject: [Twisted-Python] Nevow 0.14.3rc1 released
In-Reply-To: <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>
References: <CAMcKhMR3fD0a0YmDLq9ekzjjRkLpmuZnmVBz-TyOFn+p2m7EMw@mail.gmail.com>
 <cb0391b2-7760-0639-e2d7-d75a2237842e@thieprojects.ch>
Message-ID: <CAMcKhMTuzU95SO3iy1ZV8HGjvEp3Fiq8n5y-aZtDK+Q3LFarZA@mail.gmail.com>

On Wed, 26 Jul 2017 at 21:36 Werner Thie <werner at thieprojects.ch> wrote:

> Aloha Tristan
>
> still using Athena in production, will be able to test tomorrow.
>

Great!

Note that there's an rc2 now, because there were some problems with the
version number handling in rc1; pip install --pre nevow should get you the
latest prerelease though.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170726/ada7c90c/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jul 30 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Jul 2017 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1501394720.22.4794125336040473656@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170730/0b950a77/attachment-0002.html>

From fehrist at codeghar.com  Mon Jul 31 10:22:00 2017
From: fehrist at codeghar.com (Hamza Sheikh)
Date: Mon, 31 Jul 2017 09:22:00 -0700
Subject: [Twisted-Python] Using Twisted with pytest fixtures
In-Reply-To: <86r2xfx7g6.fsf@atlantis.meejah.ca>
References: <CABJ3qSOtfnPnu94yiX7gdjc0a4RCzCrgiNPHx=Z=XYfTm19FYQ@mail.gmail.com>
 <86r2xfx7g6.fsf@atlantis.meejah.ca>
Message-ID: <CABJ3qSPxGsZYyQwifsR7KPbNt+1NqbiDd3QnijWNwrA=RNeGAQ@mail.gmail.com>

On Mon, Jul 17, 2017 at 11:08 AM, meejah <meejah at meejah.ca> wrote:
> I have a blog post on this, outlining some integration tests that I
> wrote for Tahoe-LAFS (which uses Twisted) and which also starts a
> 25-node Tor test network.
>
>    https://meejah.ca/blog/pytest-integration-testing
>
> You probably also want the pytest-twisted extension for pytest.  I'm
> often around in #twisted or #tahoe-lafs on Freenode IRC if you'd like to
> discuss.

Thank you for sharing this information. I'll try it out.



