From _ at lvh.cc  Fri Jul  1 06:29:01 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 12:29:01 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere nicer
Message-ID: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>

Hi,


As some of you may already know (either through a backchannel or because you
talked to me at Europython), there has been some talk about moving Twisted
way from Trac+SVN to somewhere that isn't Trac+SVN.

A lot of the devs do like SVN. My guess is that that's mainly because they
don't actually use SVN, they use Combinator, or something. On the other
hand, I do think that Trac is pretty universally loathed, and it would be a
good idea to get away from it.

There's a few existing hosting solutions:

   1. Launchpad (+ Bazaar as the default vcs)
   2. Bitbucket (+ Mercurial as the default vcs)
   3. Github (+ Git as the default vcs)

Although I've hated git for a long while (and I still don't like it very
much), I firmly believe Github is the right thing for Twisted. My incredibly
unscientific poll amongst people who like Twisted but aren't devs is that
they all love or at least like Github, and a surprising number has a
distaste for Launchpad (unfamiliarity with Bazaar, perceived
developer-unfriendly UI, slowness).

Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
transition? :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/663e220e/attachment.htm 

From jml at mumak.net  Fri Jul  1 06:42:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 11:42:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>

On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
...
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

I support Twisted moving to a DVCS and to something better than Trac.
I personally would prefer Twisted to use Launchpad.

Some points:
 * Launchpad is much faster now that it was six months ago
 * Its code review system works well with UQDS
 * Launchpad is open source & therefore patchable

However, I won't argue too hard about it.

jml


From mithrandi at mithrandi.net  Fri Jul  1 06:48:37 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 1 Jul 2011 12:48:37 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

I'm not sure I understand what you mean by "aren't devs". Do you mean
"aren't Twisted developers"? I don't see why someone who isn't a
developer would particularly care what development tools Twisted uses.

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)

My personal preference would definitely be Launchpad+bzr >
Bitbucket+hg > Github+git. There are also a fair number of
Twisted-related projects already on Launchpad.

On the other hand, I'm not sure this is a constructive way to approach
this issue.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From _ at lvh.cc  Fri Jul  1 06:57:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 12:57:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
Message-ID: <BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:48 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

>  I'm not sure I understand what you mean by "aren't devs". Do you mean
> "aren't Twisted developers"? I don't see why someone who isn't a
> developer would particularly care what development tools Twisted uses.
>

Yes, this is what I meant.


>  > Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> BAD
> > PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning
> the
> > transition? :)
>
> My personal preference would definitely be Launchpad+bzr >
> Bitbucket+hg > Github+git. There are also a fair number of
> Twisted-related projects already on Launchpad.
>

Is the reason you would prefer bitbucket over github related to bitbucket
and github, or git and hg?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/0a03be93/attachment.htm 

From screwtape at froup.com  Fri Jul  1 06:59:32 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 20:59:32 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <20110701105932.GA21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 12:29:01PM +0200, Laurens Van Houtven wrote:
> There's a few existing hosting solutions:
> 
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)

As a very-occasional Twisted contributor (but a long-time fan!) I'll
vote for option 3. I'm not particularly a fan of Github[1], but Git is the
DVCS I know best, and I'd be more than happy for Twisted Labs to make
it easier for me (and people like me) to contribute.

On the other hand, using git would probably complicate the build/review
process: since Github repositories are (as far as I know) owned by
individuals, you might not be able to set up access for multiple people,
and hence the current scheme of "push your changes to a branch on the
central server, tell the buildbots to build it" might not be possible.

Tim.

[1] In fact, I'm vaguely uneasy about "distributed version control"
being so centralised  on a single piece of commercially-owned
infrastructure. On the other hand, the only hosted alternative would be
Gitorious, and it doesn't have a lot of the shiny features Github has,
like bug-tracking.


From rlotun at gmail.com  Fri Jul  1 07:00:16 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 1 Jul 2011 12:00:16 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>

Hi,

On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).
>
>
I vote for GitHub too. Git's a pain but powerful (no need for combinator),
and GitHub has a pretty good API into everything - low level repo innards,
to issues/tickets. Also, GitHub's webhook system can easily integrate with
buildbot (we used to do it at TweetDeck). Code review is doable by pull
requests too. You can even map twistedmatrix.com to a github hosted website,
which itself would be a repo. Oh, and the wikis are git repos too.

Given all these tools, I see mappings for all of Twisted's bits and pieces
(unless I'm missing something).

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/da6c64d4/attachment.htm 

From screwtape at froup.com  Fri Jul  1 07:01:18 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 21:01:18 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
Message-ID: <20110701110118.GB21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 12:48:37PM +0200, Tristan Seligmann wrote:
> On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> > Although I've hated git for a long while (and I still don't like it very
> > much), I firmly believe Github is the right thing for Twisted. My incredibly
> > unscientific poll amongst people who like Twisted but aren't devs is that
> > they all love or at least like Github, and a surprising number has a
> > distaste for Launchpad (unfamiliarity with Bazaar, perceived
> > developer-unfriendly UI, slowness).
> 
> I'm not sure I understand what you mean by "aren't devs". Do you mean
> "aren't Twisted developers"? I don't see why someone who isn't a
> developer would particularly care what development tools Twisted uses.

Perhaps "potential Twisted developers who haven't decided to contribute
yet"?


From _ at lvh.cc  Fri Jul  1 07:06:30 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 13:06:30 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110701105932.GA21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<20110701105932.GA21836@boombah.thristian.org>
Message-ID: <BANLkTi=H-A2WvPvZxhhoY3Z0pwP_m0emUA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:59 PM, Tim Allen <screwtape at froup.com> wrote:

> On the other hand, using git would probably complicate the build/review
> process: since Github repositories are (as far as I know) owned by
> individuals, you might not be able to set up access for multiple people,
> and hence the current scheme of "push your changes to a branch on the
> central server, tell the buildbots to build it" might not be possible.
>

No, this is not a problem, Github has the concept of "organisations" which
Glyph has already set up, so we can have this done properly :)

Also Github has well supported API notification support for when new commits
come in. Not so much for issues, but I'm working on a solution for that...


> Tim.
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/f8cf8154/attachment.htm 

From ilja.livenson at gmail.com  Fri Jul  1 07:09:57 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 1 Jul 2011 14:09:57 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110701110118.GB21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
	<20110701110118.GB21836@boombah.thristian.org>
Message-ID: <BANLkTikRg9CaKzzTqbFmzwDUCMaK2E5xag@mail.gmail.com>

On 1 July 2011 14:01, Tim Allen <screwtape at froup.com> wrote:
> On Fri, Jul 01, 2011 at 12:48:37PM +0200, Tristan Seligmann wrote:
>> On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
>> > Although I've hated git for a long while (and I still don't like it very
>> > much), I firmly believe Github is the right thing for Twisted. My incredibly
>> > unscientific poll amongst people who like Twisted but aren't devs is that
>> > they all love or at least like Github, and a surprising number has a
>> > distaste for Launchpad (unfamiliarity with Bazaar, perceived
>> > developer-unfriendly UI, slowness).
>>
>> I'm not sure I understand what you mean by "aren't devs". Do you mean
>> "aren't Twisted developers"? I don't see why someone who isn't a
>> developer would particularly care what development tools Twisted uses.
>
> Perhaps "potential Twisted developers who haven't decided to contribute
> yet"?
>

I'd  support github. I'm somewhat new to twisted community, no code
contributions so far (using twisted in my own projects), but github
makes 3rd party commits to a project much easier.

Ilja


From therve at free.fr  Fri Jul  1 07:16:54 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 13:16:54 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <4E0DACA6.50108@free.fr>

Le 01/07/2011 12:29, Laurens Van Houtven a ?crit :
> Hi,
> 
> 
> As some of you may already know (either through a backchannel or because you
> talked to me at Europython), there has been some talk about moving Twisted
> way from Trac+SVN to somewhere that isn't Trac+SVN.
> 
> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.
> 
> There's a few existing hosting solutions:
> 
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)
> 
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

Hi Laurens,

Thanks for pushing this. Personally, I would prefer Launchpad and Bzr,
but we've been thinking about using it for the past 3 years, and nothing
really happened. What I really care about is that we move away from Trac
(for bugs at least) and SVN.

As I told you in Florence, if you come with a nice migration plan *and*
you're ready to take on the burden, that's awesome and you have all my
support for moving to Github. But, if somebody else is ready to do the
same thing for Launchpad, I'll support him first. It seems unlikely though.

-- 
Thomas


From mithrandi at mithrandi.net  Fri Jul  1 07:45:23 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 1 Jul 2011 13:45:23 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
	<BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>
Message-ID: <CAMcKhMQ39udVsaDkL4TftbVeEvt+RF-SPY7Tszw+moFWLkp8qQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:57 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Is the reason you would prefer bitbucket over github related to bitbucket
> and github, or git and hg?

The latter. Launchpad+bzr is at the top of my list because of
Launchpad; Bitbucket+hg ranks over Github+git because of hg. (Or
because of git, depending on how you look at it...)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From itamar at itamarst.org  Fri Jul  1 08:14:19 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 08:14:19 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <1309522459.13270.29.camel@blake>

On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
> planning the transition? :)

Unless I'm mistaken, Github is a proprietary system, which means I'm
unhappy about hosting our project there. At the minimum I'd want a very
good story about how we can get all our data out if we need to. And even
then I'd probably be against it. What's more, we can switch to
git/bzr/hg without switching to a hosted system (e.g. trac with
GitPlugin, and redmine has builtin integration for all of those.). Why
does git imply github?

In my opinion the biggest barrier to new developers is not whether we
use git or subversion or what have you, but the high quality of code
required (coding standard, tests, passing code review). A DVCS may well
encourage more users, but I'm skeptical it will have a major impact.

-Itamar



From anshul.singhle at gmail.com  Fri Jul  1 08:14:31 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 17:44:31 +0530
Subject: [Twisted-Python] Conch Testing server and client
Message-ID: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>

Hi,
I have to write tests for a custom conch server. My approach is to make a
test client and then connect it to my server in my testcase. I have been
able to create a client that can interface with my server, but i'm not able
to do it from within the test case.
What I'm trying is :
class TestAccountStatus(unittest.TestCase):
     def setUp(self):
         ssh_server = Server()
         self.server = reactor.listenTCP(ssh_server.port,
                      ssh_server.application(),
                      interface=ssh_server.interface)
     def tearDown(self):
         server, self.server = self.server,None
         return server.stopListening()
     def test_1(self):
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         return d
The transport SimpleTransport is my custom transport.SSHClientTransport
instance. The class Server() is a wrapper around an SSHFactory insatance.
The problem I'm facing is that after this line >
d = protocol.ClientCreator(reactor, SimpleTransport).connectTCP('localhost',
self.server.getHost().port)
I have to write reactor.run(), otherwise the client is not starting. If I
write reactor.run() the test doesn't stop (understandable since the reactor
isn't being stopped).
Basically I want to know how I can start the client without running
reactor.run()

Thanks in Advance!!
Anshul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/973071e9/attachment.htm 

From jml at mumak.net  Fri Jul  1 08:34:03 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 13:34:03 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DACA6.50108@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<4E0DACA6.50108@free.fr>
Message-ID: <BANLkTikumPNFSYf3F_Cse7FWzu4gbWM5iQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:16 PM, Thomas Herv? <therve at free.fr> wrote:
...
> Thanks for pushing this. Personally, I would prefer Launchpad and Bzr,
> but we've been thinking about using it for the past 3 years, and nothing
> really happened. What I really care about is that we move away from Trac
> (for bugs at least) and SVN.

FWIW, I started trying to migrate to Bazaar a while ago, while still
keeping us on Trac. (Back then, Launchpad was ruled out on account of
being proprietary). It would be much easier to move to Bazaar *and*
Launchpad at the same time. I do not believe that it has seriously
been attempted by anyone involved in Twisted.

jml


From exarkun at twistedmatrix.com  Fri Jul  1 08:42:55 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Jul 2011 12:42:55 -0000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
Message-ID: <20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>

On 12:14 pm, anshul.singhle at gmail.com wrote:
>Hi,
>I have to write tests for a custom conch server. My approach is to make 
>a
>test client and then connect it to my server in my testcase. I have 
>been
>able to create a client that can interface with my server, but i'm not 
>able
>to do it from within the test case.
>What I'm trying is :
>class TestAccountStatus(unittest.TestCase):
>     def setUp(self):
>         ssh_server = Server()
>         self.server = reactor.listenTCP(ssh_server.port,
>                      ssh_server.application(),
>                      interface=ssh_server.interface)
>     def tearDown(self):
>         server, self.server = self.server,None
>         return server.stopListening()
>     def test_1(self):
>         d = protocol.ClientCreator(reactor,
>SimpleTransport).connectTCP('localhost', self.server.getHost().port)
>         return d
>The transport SimpleTransport is my custom transport.SSHClientTransport
>instance. The class Server() is a wrapper around an SSHFactory 
>insatance.
>The problem I'm facing is that after this line >
>d = protocol.ClientCreator(reactor, 
>SimpleTransport).connectTCP('localhost',
>self.server.getHost().port)
>I have to write reactor.run(), otherwise the client is not starting. If 
>I
>write reactor.run() the test doesn't stop (understandable since the 
>reactor
>isn't being stopped).
>Basically I want to know how I can start the client without running
>reactor.run()

The reactor should be started for you, automatically.

Jean-Paul


From screwtape at froup.com  Fri Jul  1 08:57:44 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 22:57:44 +1000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
Message-ID: <20110701125744.GC21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 05:44:31PM +0530, Anshul Singhle wrote:
> What I'm trying is :
> class TestAccountStatus(unittest.TestCase):

Is that the Python standard library's unittest.TestCase, or
twisted.trial.unittest.TestCase? As Jean-Paul says, Twisted's TestCase
should automatically handle the reactor for you; that's why it exists.
:)


From _ at lvh.cc  Fri Jul  1 08:57:39 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 14:57:39 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <BANLkTi=ka4iCHHta0G-Z79O2n3G+v_wGKQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:14 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:
>
> > Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> > BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
> > planning the transition? :)
>
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to.


Github has a much nicer API for pulling out all of your data than, say, Trac
does. I know this because I'm drafting out sketches for getting something to
port Trac's wikis and tickets to the other's...


> ...then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>

git implies github because nobody, not even me, thinks git is worth using
when you don't have github super powers to back it up. The point here isn't
switching to git, it's switching to github. They've worked very hard to make
contribution really easy to do, and I'd say they've succeeded.

trac's git-plugin is not something I would work on transitioning, because
part of the point is to get rid of Trac. Redmine *is* a much better system
than trac (both in terms of maintenance and UX), but has other issues. For
example, last time I tried the Bzr plugin for it it was pretty unusable.
(Only supports a single branch? *Really*?).

Redmine+git might be on the table but a) nobody really likes git that much
b) we wouldn't get something as sexy as pull requests/merge proposals like
we would on LP or Github. AFAICT there are no code review tools for Redmine
that are quite as good. There are two code review plugins for Redmine.
They've tried both at Markus, and the conclusion was "use review board".
That gives us more moving parts to maintain.

A huge advantage of using Github, IMHO, is the pull requests. You don't need
to ask permission for a commit bit before you can start pushing to branches.
You just fork and do your thing. This makes for a very low threshold for
contribution. With Redmine, you'd still have to send patches in, which I
think is a far less pleasant story than pull requests. (This paragraph
applies equally well to Launchpad's merge proposals.)

In Pull Requests, you see a timeline with both comments and commits, so it's
very easy to check if comments passed in review have been addressed or not.

In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.
>

The reason I'd prefer Github is only partially the DVCS (and, like you said,
any DVCS would do), but to a much larger extent the community on Github.


>
> -Itamar
>
> --
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/a5878aa8/attachment-0001.htm 

From rlotun at gmail.com  Fri Jul  1 08:58:05 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 1 Jul 2011 13:58:05 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <BANLkTi=_Uc0fuZP6=PzGHBG0=SAMNa9Yjg@mail.gmail.com>

Hi,

On Fri, Jul 1, 2011 at 1:14 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:
>
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>

True, GitHub is proprietary, but it's free for open source projects. There
are many high-quality open-source projects hosted on it:

 * Erlang/OTP (https://github.com/erlang/otp)
 * Redis (https://github.com/antirez/redis)
 * Jquery (https://github.com/jquery)
 * RabbitMQ (https://github.com/rabbitmq)
 * Ruby on Rails (https://github.com/rails)
 * Node.js (https://github.com/joyent/node)
 * Tornado (https://github.com/facebook/tornado)

to name a few. GitHub also has an extensive API to programmatically
access/backup all information around your project (like tickets and wikis),
and it has integrated code review which allows you to comment on individual
lines of code (this could be better, but generally works well).

I suppose the main reason to even suggest it, given its proprietary nature
and use of git, is that's currently where a lot of developer activity is,
and its growing. GitHub makes it easy to contribute patches to projects and
keep track of progress. It also has a nice way to keep track of related
repositories (via 'organizations').

And, well, it looks better than Launchpad and is bit more mature than
Bitbucket.

Given the past involvement in Launchpad and its use of Twisted though, I
understand why that would be an obvious choice. I just want to make sure all
sides of the argument are represented.

In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.


I think you're right in that code quality is the most important factor here.
However, as a small point, a DVCS surely should be able give the project a
better ability to maintain high quality code though - isn't Combinator just
tool over subversion to make branching easier? At least with most DVCS's
branching is cheap, so there wouldn't need to be yet another tool to setup
to get the development process started for new developers.

Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/3019166d/attachment.htm 

From anshul.singhle at gmail.com  Fri Jul  1 08:59:12 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 18:29:12 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
Message-ID: <BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>

I understand that. The problem I'm facing is that unless I write
"reactor.run()" my client isn't starting up. From what I understood in the
trial documentation, I should simply call the connectTCP method and then
return a deferred. However, if I do that, the client isn't starting. I'll
post some of the client code for you info :
class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth('webchick',
                SimpleConnection()))

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed("Thai1mil3ahb")
    def getPublicKey(self):
        print "trying public key"
        path = os.path.expanduser('~/.ssh/id_rsa')
        # this works with rsa too
        # just change the name here and in getPrivateKey
        if not os.path.exists(path) or self.lastPublicKey:
            # the file doesn't exist, or we've tried a public key
            return
        return
keys.Key.fromFile(filename=path+'.pub',passphrase='pikachu').blob()

    def getPrivateKey(self):
        path = os.path.expanduser('~/.ssh/id_rsa')
        return
defer.succeed(keys.Key.fromFile(path,passphrase='pikachu').keyObject)
Now , in my test case :
def test_1(self):
         def got_data(data):
             self.assertEquals(data,"a")
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         d.addCallback(got_data)
         return d
The callback is firing, but the client is not started and *data* is a
SimpleTransport Instance.
Any thoughts on why this is happening and what I am doing wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/6f06970b/attachment.htm 

From anshul.singhle at gmail.com  Fri Jul  1 09:03:18 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 18:33:18 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701125744.GC21836@boombah.thristian.org>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701125744.GC21836@boombah.thristian.org>
Message-ID: <BANLkTiknNhO0pW7Z6E8=8f9r-n+oP9SFrg@mail.gmail.com>

> Is that the Python standard library's unittest.TestCase, or
> twisted.trial.unittest.TestCase? As Jean-Paul says, Twisted's TestCase
> should automatically handle the reactor for you; that's why it exists.
> :)
>
It is Twisted's TestCase( twisted.trial.unittest.TestCase)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/d2844230/attachment.htm 

From _ at lvh.cc  Fri Jul  1 09:08:53 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:08:53 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
Message-ID: <BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:

> I support Twisted moving to a DVCS and to something better than Trac.
> I personally would prefer Twisted to use Launchpad.
>
> Some points:
>  * Launchpad is much faster now that it was six months ago
>

Launchpad's definitely getting faster, but it's still not in the same
ballpark. bzr, too, seems a lot slower on many operations (although I'm not
sure how much of this is due to lp, and how much is due to git) despite
having been sped up a lot over the years.

Here's my incredibly unscientific (maybe these do significantly different
amounts of work, I'm not sure) test for checking out Twisted using
lp:twisted and github's powdahound/twisted:

bzr: 63.29s user 2.80s system 1:43.32 total
git: 6.93s user 3.28s system 0:45.75 total

That data is skewed in bzr's favour because someone started downloading
something huge halfway the git test. My point is that git's pretty fast, not
even particularly so for clone (because the slowest part there is the
network). Most of the work I've ever done on Twisted has been using bzr-svn,
and it has been at times noticeably slow. (but not quite frustratingly so).

Either way, I think this is probably the wrong discussion. Most of the time
I hear "Launchpad's UX is bad for coders, and it's slow", not "Launchpad is
slow and it's UX is bad".

  * Its code review system works well with UQDS
>

True, but I don't see how it works better than github's pull requests.


>  * Launchpad is open source & therefore patchable
>

Yes, that's a good point. I like that it's open source (although it has an
unfortunate license). Is the patching of Launchpad by third parties followed
by those patches landing in production a common occurrence?

However, I won't argue too hard about it.
>
> jml
>


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/e560ee1c/attachment.htm 

From jml at mumak.net  Fri Jul  1 09:17:53 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:17:53 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
Message-ID: <BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:08 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:
...
>> ?* Launchpad is open source & therefore patchable
>
> Yes, that's a good point. I like that it's open source (although it has an
> unfortunate license). Is the patching of Launchpad by third parties followed
> by those patches landing in production a common occurrence?

Launchpad doesn't get a lot of external contributors, but their
patches almost always land in production promptly. I suspect Launchpad
is comparable to Twisted in this regard.

<https://dev.launchpad.net/Contributions> miscategorizes some people,
but gives some idea.

jml


From exarkun at twistedmatrix.com  Fri Jul  1 09:21:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Jul 2011 13:21:39 -0000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
Message-ID: <20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>

On 12:59 pm, anshul.singhle at gmail.com wrote:
>I understand that. The problem I'm facing is that unless I write
>"reactor.run()" my client isn't starting up. From what I understood in 
>the
>trial documentation, I should simply call the connectTCP method and 
>then
>return a deferred. However, if I do that, the client isn't starting. 
>I'll
>post some of the client code for you info :
>
>[snip]

Complicated, incomplete code snippets aren't very useful.  Always follow 
http://sscce.org/ when sharing code.  For example:

    from twisted.trial.unittest import TestCase
    from twisted.internet.defer import Deferred
    from twisted.internet import reactor

    class ReactorIsRunningTests(TestCase):
        def test_isTheReactorRunning(self):
            d = Deferred()
            reactor.callLater(1, d.callback, None)
            return d

The output I expect from this, when run with trial, is one test method 
which takes 1 second to complete, and then succeeds.  The output I get 
is:

    reactortests
      ReactorIsRunningTests
        test_isTheReactorRunning ... 
[OK]

-----------------------------------------------------------------------
    Ran 1 tests in 1.003s

    PASSED (successes=1)

In other words, it behaves as I expect.

Jean-Paul


From therve at free.fr  Fri Jul  1 09:23:44 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 15:23:44 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <4E0DCA60.7040200@free.fr>

Le 01/07/2011 14:14, Itamar Turner-Trauring a ?crit :
> On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:
> 
>> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
>> BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
>> planning the transition? :)
> 
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?

I think there are 2 sides though here: we want to move away from Trac as
well as from SVN. And, the main reason for me is that we don't have to
maintain Trac. So redmine wouldn't solve the whole problem.

As Laurens said as well, the main attraction for git is using github. I
don't think switching to git alone makes a ton of sense.

One thing that concerns me is that Trac supposedly supports bzr, and we
tried to use bzr, but never made the move completely. Why do you think
it will change? Is it just that we didn't take any decisions? Or that
nobody stepped up?

> In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.

Well, even not thinking about new developers, a DVCS will make the life
of current ones easier. Even though we can start to use bzr, it's a bit
clumsy IMHO.

-- 
Thomas


From _ at lvh.cc  Fri Jul  1 09:23:59 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:23:59 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
Message-ID: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>

On Fri, Jul 1, 2011 at 3:17 PM, Jonathan Lange <jml at mumak.net> wrote:

> On Fri, Jul 1, 2011 at 2:08 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> > On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:
> ...
> >>  * Launchpad is open source & therefore patchable
> >
> > Yes, that's a good point. I like that it's open source (although it has
> an
> > unfortunate license). Is the patching of Launchpad by third parties
> followed
> > by those patches landing in production a common occurrence?
>
> Launchpad doesn't get a lot of external contributors, but their
> patches almost always land in production promptly. I suspect Launchpad
> is comparable to Twisted in this regard.
>

Well, part of the hypothesis of the effects of moving to Github is that a)
the clear separation between "core contributor" and "random contributor"
because a bit more subtle, b) it becomes easier for external contributors to
contribute. So yeah, I guess it is, but it'd be cool if it became a bit more
open to contributions from the more general public :)


> <https://dev.launchpad.net/Contributions> miscategorizes some people,
> but gives some idea.
>

Cool, thanks for the link. I had no idea there were that many.


>
> jml
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/c4e8a7d4/attachment.htm 

From _ at lvh.cc  Fri Jul  1 09:29:44 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:29:44 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DCA60.7040200@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake> <4E0DCA60.7040200@free.fr>
Message-ID: <BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 3:23 PM, Thomas Herv? <therve at free.fr> wrote:

> Well, even not thinking about new developers, a DVCS will make the life
> of current ones easier. Even though we can start to use bzr, it's a bit
> clumsy IMHO.
>

Also, apparently there are ways of using bzr-svn that confuse the hell out
of Combinator or some other tools, and it'll spew metadata everywhere, or
something. I don't remember what the conditions were, but I do remember that
it was the obvious way of doing it, and glyph yelling at me for it after I
tried ;-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/5aeb4f45/attachment.htm 

From anshul.singhle at gmail.com  Fri Jul  1 09:41:33 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 19:11:33 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
Message-ID: <BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>

Ok, here goes :
The test code :

from twisted.trial import unittest
from twisted.internet import defer, protocol, reactor
class TestAccountStatus(unittest.TestCase):
     def setUp(self):
         ssh_server = Server()
         self.server = reactor.listenTCP(ssh_server.port,
                      ssh_server.application(),
                      interface=ssh_server.interface)
         return self.server
     def tearDown(self):
         server, self.server = self.server,None
         return server.stopListening()
     def test_1(self):
         def got_data(data):
             self.assertEquals(data,"a")
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         d.addCallback(got_data)
         return d

The client code :
from twisted.conch.ssh import transport, userauth, connection, common, keys,
channel
from twisted.internet import defer, protocol, reactor
class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth('webchick',
                SimpleConnection()))

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        print "Get Password called"
        return defer.succeed("Thai1mil3ahb")

When I run the test I expect :
  tests
  TestAccountStatus
    test_1 ... Get Password called

followed by some errors , but atleast this much should be printed if the
client code is being called properly.
Instead I get:

[FAIL]: tests.TestAccountStatus.test_1

Traceback (most recent call last):
  File "tests.py", line 92, in got_data
    self.assertEquals(data,"a")
twisted.trial.unittest.FailTest: not equal:
a = <tests.SimpleTransport instance at 0x1024aa128>
b = 'a'

Instead of running the client the deferred is just returning an instance of
the Client Transport used by me  (SimpleTransport). Any ideas why this is
happening? Is this becuse I'm not using a ClientFactory or am I using the
deferred all wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/a5584c9b/attachment.htm 

From johan.rydberg at edgeware.tv  Fri Jul  1 09:43:03 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Fri, 01 Jul 2011 15:43:03 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<1309522459.13270.29.camel@blake>
	<4E0DCA60.7040200@free.fr>
	<BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>
Message-ID: <4E0DCEE7.5070600@edgeware.tv>

+1 for github.  The user experience of bitbucket and LP is
secondary compared to github.



From itamar at itamarst.org  Fri Jul  1 09:44:15 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:44:15 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
Message-ID: <1309527855.13270.37.camel@blake>

On Fri, 2011-07-01 at 15:23 +0200, Laurens Van Houtven wrote:


> Well, part of the hypothesis of the effects of moving to Github is
> that a) the clear separation between "core contributor" and "random
> contributor" because a bit more subtle, b) it becomes easier for
> external contributors to contribute. So yeah, I guess it is, but it'd
> be cool if it became a bit more open to contributions from the more
> general public :)

I'm not sure getting more patches should be our main goal, for now.
(It's a good *long term* goal!).

We have a large number of uncommitted third-party patches in tickets. We
have a large number of half-finished developer branches (I'm working on
a couple, since it's an easy way to get things done). These were not
left uncommitted or unfinished because of tool problems, but because of
other issues. Dealing with this seems to me to be higher priority than
getting even more patches we won't get around to incorporating.

If you want more contributions, improving the processes so abandonment
is less likely to happen is the first step. I can certainly think of
ways in which e.g. github might help with that, but this is not a
*technical* problem, it's an organizational and social problem, and at
the very least you should think about how to solve it before redoing all
the technical infrastructure. For example, making sure all reviewable
tickets get reviewed within 7 days, and all new tickets get an answer
within 3 days.

If a switch github is super-successful in getting us more patches, and
then those patches sit in limbo forever, all we've done is alienate
potential developers.




From itamar at itamarst.org  Fri Jul  1 09:46:58 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:46:58 -0400
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
	<BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
Message-ID: <1309528018.13270.39.camel@blake>

On Fri, 2011-07-01 at 19:11 +0530, Anshul Singhle wrote:

>      def test_1(self):
>          def got_data(data):
>              self.assertEquals(data,"a")
>          d = protocol.ClientCreator(reactor,
> SimpleTransport).connectTCP('localhost', self.server.getHost().port)
>          d.addCallback(got_data)
>          return d

ClientCreator.connectTCP returns a Deferred that fires with a Protocol
instance (in this case, a SimpleTransport instance), which you are then
comparing with a string in got_data(). This fails, as one would expect.



From itamar at itamarst.org  Fri Jul  1 09:50:12 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:50:12 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <1309528212.13270.41.camel@blake>

This, I believe, is the real problem -- tickets which were reviewed but
never closed:

http://twistedmatrix.com/trac/report/16

That is a very sad list.



From jml at mumak.net  Fri Jul  1 09:54:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:54:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
Message-ID: <BANLkTimUe=2U8o8v+6E5oBbZnZUkzO3Otg@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:23 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
...

> Well, part of the hypothesis of the effects of moving to Github is that a)
> the clear separation between "core contributor" and "random contributor"
> because a bit more subtle, b) it becomes easier for external contributors to
> contribute. So yeah, I guess it is, but it'd be cool if it became a bit more
> open to contributions from the more general public :)
>

I'm sure the Launchpad project would gladly accept your help with
getting new contributors... unless your help was to advise them to
switch to Github ;)

jml


From anshul.singhle at gmail.com  Fri Jul  1 09:56:30 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 19:26:30 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <1309528018.13270.39.camel@blake>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
	<BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
	<1309528018.13270.39.camel@blake>
Message-ID: <BANLkTikct2fb3S+Tbb-5gKHGA3nXJdhYmg@mail.gmail.com>

> ClientCreator.connectTCP returns a Deferred that fires with a Protocol
> instance (in this case, a SimpleTransport instance), which you are then
> comparing with a string in got_data(). This fails, as one would expect.
>
> So then how do i get the protocol to run? and how do i get the data
received by the protocol? Do I need to create my own deferred that is fired
when the result is retrieved or  is their already such a deferred which I
can callback?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/f22b8856/attachment.htm 

From jml at mumak.net  Fri Jul  1 09:56:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:56:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DCA60.7040200@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake> <4E0DCA60.7040200@free.fr>
Message-ID: <BANLkTimXewg27crFh-dad1Kex_neBLF-Ew@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:23 PM, Thomas Herv? <therve at free.fr> wrote:
...
> One thing that concerns me is that Trac supposedly supports bzr, and we
> tried to use bzr, but never made the move completely. Why do you think
> it will change? Is it just that we didn't take any decisions? Or that
> nobody stepped up?
>

For me, the biggest external blocker was not being sure what the
requirements were for moving. The internal blockers of time &
motivation probably dominated.

jml


From therve at free.fr  Fri Jul  1 10:31:16 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 16:31:16 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <4E0DDA34.2080007@free.fr>

Le 01/07/2011 15:44, Itamar Turner-Trauring a ?crit :
> On Fri, 2011-07-01 at 15:23 +0200, Laurens Van Houtven wrote:
> 
> 
>> Well, part of the hypothesis of the effects of moving to Github is
>> that a) the clear separation between "core contributor" and "random
>> contributor" because a bit more subtle, b) it becomes easier for
>> external contributors to contribute. So yeah, I guess it is, but it'd
>> be cool if it became a bit more open to contributions from the more
>> general public :)
> 
> I'm not sure getting more patches should be our main goal, for now.
> (It's a good *long term* goal!).

At least personally, moving away from SVN and Trac is not to directly
get more patches. It's mainly that I want as a contributor to use better
tools. Also, I don't want us to maintain the infrastructure; for
example, moving to a more recent Trac cost me personally a good amount
of time; we also have that problem with spam.


> We have a large number of uncommitted third-party patches in tickets. We
> have a large number of half-finished developer branches (I'm working on
> a couple, since it's an easy way to get things done). These were not
> left uncommitted or unfinished because of tool problems, but because of
> other issues. Dealing with this seems to me to be higher priority than
> getting even more patches we won't get around to incorporating.
> 
> If you want more contributions, improving the processes so abandonment
> is less likely to happen is the first step. I can certainly think of
> ways in which e.g. github might help with that, but this is not a
> *technical* problem, it's an organizational and social problem, and at
> the very least you should think about how to solve it before redoing all
> the technical infrastructure. For example, making sure all reviewable
> tickets get reviewed within 7 days, and all new tickets get an answer
> within 3 days.
> 
> If a switch github is super-successful in getting us more patches, and
> then those patches sit in limbo forever, all we've done is alienate
> potential developers.

Well, that logic is a bit flawed though: you're kind of saying that we
shouldn't use a better tool because it may bring us more contributors
than we can handle. At the end of the day, we would still use a better
tool though.

-- 
Thomas


From itamar at itamarst.org  Fri Jul  1 10:42:07 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 10:42:07 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <4E0DDA34.2080007@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
Message-ID: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>

> Well, that logic is a bit flawed though: you're kind of saying that we
> shouldn't use a better tool because it may bring us more contributors
> than we can handle. At the end of the day, we would still use a better
> tool though.

No, I'm saying that given limited resources, addressing the giant piles of
unused code we have (and figuring out how new code won't end up in the
attic) seems like a higher priority. Using better tools is always a good
idea, and if you'd like to argue that github means patches are less likely
to be abandoned that's a good argument to make.

I'm arguing for a broader look at what our development process problems
are, and that perhaps efforts should be directed elsewhere.



From luke-lists at hybrid-logic.co.uk  Fri Jul  1 10:56:54 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Fri, 01 Jul 2011 15:56:54 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
Message-ID: <1309532214.30844.27.camel@behemoth>

Hi all,

On Fri, 2011-07-01 at 12:00 +0100, Reza Lotun wrote:
> On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>         Although I've hated git for a long while (and I still don't
>         like it very much), I firmly believe Github is the right thing
>         for Twisted. My incredibly unscientific poll amongst people
>         who like Twisted but aren't devs is that they all love or at
>         least like Github, and a surprising number has a distaste for
>         Launchpad (unfamiliarity with Bazaar, perceived
>         developer-unfriendly UI, slowness).
> 
> I vote for GitHub too. Git's a pain but powerful (no need for
> combinator), and GitHub has a pretty good API into everything - low
> level repo innards, to issues/tickets. Also, GitHub's webhook system
> can easily integrate with buildbot (we used to do it at TweetDeck).
> Code review is doable by pull requests too. You can even map
> twistedmatrix.com to a github hosted website, which itself would be a
> repo. Oh, and the wikis are git repos too. 

> Given all these tools, I see mappings for all of Twisted's bits and
> pieces (unless I'm missing something).

I agree, possibly the biggest win with GitHub is the way it encourages
fellow users to fork a project and contribute patches via pull requests.
Popularity doesn't always equate to quality but in this case (amongst
developers) I think it *is* indicative that they've got something right.
Pull requests can be used to implement the Twisted review model as they
form a good centralised place to review a set of changes.  GitHub's
issue tracker used to be pretty shoddy but has had a big upgrade
recently and is almost good now.

Git is powerful, and while it can also be confusing at times
StackOverflow almost always has the answer ;-)  Also, managing branches
in git really is real pleasure compared to the mish-mash of merging
branches with SVN and various external scripts.  For example, to merge
'somebranch' into master (i.e. trunk) and push it to GitHub (the
'origin' remote), after committing to somebranch, it's just:

git checkout master; git merge somebranch; git push origin master

Addressing the concern of getting your data out of GitHub, since git is
a DVCS, every repository is a complete copy of the entire revision
history.  Therefore, GitHub cannot lock you in.  I suppose the issue
tracker might be a different story, but it has an API.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Mobile: +447791750420

www.hybrid-cluster.com - Cloud web hosting platform 



From _ at lvh.cc  Fri Jul  1 11:02:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 17:02:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309532214.30844.27.camel@behemoth>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
	<1309532214.30844.27.camel@behemoth>
Message-ID: <BANLkTinCY=oqzdSG_BF1sQs9rUWtGG-A1A@mail.gmail.com>

If the patch applies cleanly, pull requests can even be merged without
involving git directly at all, from the Github web UI.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/4592ac02/attachment.htm 

From _ at lvh.cc  Fri Jul  1 11:04:53 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 17:04:53 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>

Itamar makes an excellent point. That probably is one of the worst problems
we have right now. and it definitely needs to be addressed.

Figuring out how code could end up not-in-the-attic sounds like part of the
transition plan to me. I do, in fact, think Github means patches are less
likely to be abandoned. There's two reasons for that. First of all, you
don't have to deal with a patch: you deal with a pull request. That means
there's a branch with commits, and it's already in version control. Because
that version control lives on Github, it's very easy to pull into your own
checkout and work on it.

This lowers the barrier to entry further, and completely gets rid of the
distinction between committers and non-committers we currently have (where
non-committers don't get to use version control, basically, unless they use
bzr or something else, which again is a distinction between workflows for
people with and without commit bits).

The main problem I see in this transition is that Github tickets and pull
requests are distinct elements in the issue tracker, whereas reviews go on
the ticket in Trac/UQDS.

cheers,
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/134adc01/attachment.htm 

From itamar at itamarst.org  Fri Jul  1 12:08:49 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 12:08:49 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted and
	it never got in?
In-Reply-To: <BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
Message-ID: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>

In order to have at least some anecdotal evidence --

If you've submitted a patch to Twisted (or started a branch) and it never
made it in, how did that happen? I imagine reasons might include a review
request to write tests, redesign requests, getting distracted, "it works
for me", design discussions that never got anywhere... What happened in
your case?

(I'd also like someone -- lvh? -- to go through report 16 and see if we
can come up with a summary of how those tickets ended up where they are.)



From _ at lvh.cc  Fri Jul  1 12:18:33 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 18:18:33 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTim4h5QkoPYpNSvMfoq58o_gq9fwKQ@mail.gmail.com>

twisted.positioning never got in because I never finish anyth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/35bed590/attachment.htm 

From therve at free.fr  Fri Jul  1 12:24:50 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 18:24:50 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
Message-ID: <4E0DF4D2.4060604@free.fr>

Le 01/07/2011 16:42, Itamar Turner-Trauring a ?crit :
>> Well, that logic is a bit flawed though: you're kind of saying that we
>> shouldn't use a better tool because it may bring us more contributors
>> than we can handle. At the end of the day, we would still use a better
>> tool though.
> 
> No, I'm saying that given limited resources, addressing the giant piles of
> unused code we have (and figuring out how new code won't end up in the
> attic) seems like a higher priority. Using better tools is always a good
> idea, and if you'd like to argue that github means patches are less likely
> to be abandoned that's a good argument to make.
> 
> I'm arguing for a broader look at what our development process problems
> are, and that perhaps efforts should be directed elsewhere.

While I sympathize with what you're saying, this sounds kind of
orthogonal to me. Sure, we can do better at handling contributions. But
it's an opensource project, everybody does whatever he wants mostly (in
the frame that the project sets).

Saying to Laurens that we have limited "resources" and that he should do
something else doesn't mean that this second task will be done. But it
surely means that first one won't.

-- 
Thomas


From radix at twistedmatrix.com  Fri Jul  1 12:36:21 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 1 Jul 2011 11:36:21 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
>
>
First, I encourage everyone to take a look at (and update)
http://twistedmatrix.com/trac/wiki/WorkflowRequirements

It was created a while back and hasn't been updated in a long time.

Second:


>
>    1. Launchpad (+ Bazaar as the default vcs)
>
>
I'm curious about something: Is it yet possible to revert a merge in bzr
without doing annoying things?


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/4022c908/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Jul  1 12:36:43 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Jul 2011 17:36:43 +0100
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E0DF79B.5020800@imperial.ac.uk>

On 01/07/11 17:08, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?

I have submitted patches that went nowhere:

http://twistedmatrix.com/trac/ticket/4602
http://twistedmatrix.com/trac/ticket/4603
http://twistedmatrix.com/trac/ticket/4610
http://twistedmatrix.com/trac/ticket/4666

Some of them seemed to be:

"No, don't do it this way, do it that way". I'll be honest, that's just 
completely demoralising, when you're contributing new functionality.

On that topic, I don't think the Twisted process is as accessible as 
some of you guys think it is I'm afraid. I found the discussion about 
the IPv6 tickets a bit disheartening :o(


However, more constructively (less whiney!) some tickets languished in 
"make these tiny cleanups" and that's just incredibly painful in the 
current setup, with SVN and Trac mediating things.

I've got absolutely no interest in pulling SVN head, writing a patch, 
submitting it as an attachment via Trac and *then* being told "ok, I've 
created this branch. Go off and learn how to do branches in a crappy old 
centralised VCS, and in a way compatible with UQDS, re-do your patch in 
a branch, then send another diff in as a file"

Really? I mean, come on guys...

If it were git/github, then I'd simply make the incremental changes in 
my local git branch, re-push to github and re-submit the pull request.

I hate Launchpad, but I'm sure it's equivalent beats the crap out of SVN.

Please, for the love of god, adopt a DVCS which lets contributors 
develop continuously against a local branch and push changes!

Cheers,
Phil


From jasonjwwilliams at gmail.com  Fri Jul  1 12:39:38 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 10:39:38 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <90E92AC2-53BF-46B9-98F0-4B5CACCEC6BF@gmail.com>



On Jul 1, 2011, at 7:44, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> I'm not sure getting more patches should be our main goal, for now.
> (It's a good *long term* goal!).
> We have a large number of uncommitted third-party patches in tickets.

2 of those are mine. They're almost to the point of being accepted, but we're at that phase where there's a lot of roundtrips due to the code reviewing involved, and syncing SVN in that scenario is such a pain in the rear I've bogged down and gotten side tracked by other projects that have an easier system for contribution workflow ( Github or Bitbucket). I think you'd see the "wither on the vine" rate decline if Twisted moved to a system that made the workflow of contribution smoother. I like tools that make the work, rather than the tool, the focus of the job at hand...and that's definitely not SVN, Trac or LP. 

I'd advocate Git if only because it has the most number of integrations (that work well) with other VCSs, so devs can use the VCS/DVCS client they like best. 

I'd definitely vote for Github as well. The integration between the code, tickets and code review is by far the best I've worked with. 

Also, let's keep in mind the social aspect for visibility. When there's an interesting project, if it's on Github I'll hit the 'watch' button. This means I keep up-to-date on changes and activity for projects I want to use but may never contribute to. Github has opened my eyes to a number of projects that otherwise would have fallen off my radar...and I don't think that's an effect to dismiss lightly. 

-J

From jml at mumak.net  Fri Jul  1 12:41:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 17:41:01 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>
Message-ID: <BANLkTimUO24Ja4TPt5ersKLMKLknhA3Acw@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:36 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>
>> Hi,
>>
>
> First, I encourage everyone to take a look at (and
> update)?http://twistedmatrix.com/trac/wiki/WorkflowRequirements
> It was created a while back and hasn't been updated in a long time.
> Second:
>
>>
>> Launchpad (+ Bazaar as the default vcs)
>
> I'm curious about something: Is it yet possible to revert a merge in bzr
> without doing annoying things?

I'm sitting around with a bunch of Bazaar developers, and they say this::

On trunk:
  bzr merge -r $REVNO..$(REVNO - 1)
  bzr commit

The person with the failing branch, when they wish to resume development:
  bzr merge trunk
  bzr revert .
  bzr commit

(I'm assuming the case where someone has committed a change that
breaks the build and there may have been more commits to trunk since
then.)

jml


From p.mayers at imperial.ac.uk  Fri Jul  1 12:41:59 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Jul 2011 17:41:59 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <4E0DF8D7.70301@imperial.ac.uk>

On 01/07/11 11:29, Laurens Van Houtven wrote:
> Hi,
>
>
> As some of you may already know (either through a backchannel or because
> you talked to me at Europython), there has been some talk about moving
> Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
>
> A lot of the devs do like SVN. My guess is that that's mainly because
> they don't actually use SVN, they use Combinator, or something. On the

As per my other, longer email: for me, the current SVN/branch 
development model is hugely offputting for occasional contributions, and 
I suspect for people who want to submit 10-100 line changes.

For the love of god, pick a DVCS so that contributors can develop in 
local branches, and pick a DVCS with a good central "pull request" and 
patch review system/engine/site/app/whatever.

I like github and loathe Launchpad personally but really - pick 
anything. Just not SVN. And not Trac.


From _ at lvh.cc  Fri Jul  1 12:52:14 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 18:52:14 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DF4D2.4060604@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<4E0DF4D2.4060604@free.fr>
Message-ID: <BANLkTi=90Wqfm27yjs-yHmP6_ONEU6uZxw@mail.gmail.com>

On Fri, Jul 1, 2011 at 6:24 PM, Thomas Herv? <therve at free.fr> wrote:

> Le 01/07/2011 16:42, Itamar Turner-Trauring a ?crit :
> >> Well, that logic is a bit flawed though: you're kind of saying that we
> >> shouldn't use a better tool because it may bring us more contributors
> >> than we can handle. At the end of the day, we would still use a better
> >> tool though.
> >
> > No, I'm saying that given limited resources, addressing the giant piles
> of
> > unused code we have (and figuring out how new code won't end up in the
> > attic) seems like a higher priority. Using better tools is always a good
> > idea, and if you'd like to argue that github means patches are less
> likely
> > to be abandoned that's a good argument to make.
> >
> > I'm arguing for a broader look at what our development process problems
> > are, and that perhaps efforts should be directed elsewhere.
>
> While I sympathize with what you're saying, this sounds kind of
> orthogonal to me. Sure, we can do better at handling contributions. But
> it's an opensource project, everybody does whatever he wants mostly (in
> the frame that the project sets).
>
> Saying to Laurens that we have limited "resources" and that he should do
> something else doesn't mean that this second task will be done. But it
> surely means that first one won't.
>
> --
> Thomas
>

I'd say that's a safe bet.

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/5165d99c/attachment-0001.htm 

From chris at emerge-life.de  Fri Jul  1 13:08:33 2011
From: chris at emerge-life.de (chris)
Date: Fri, 01 Jul 2011 19:08:33 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <4E0DF79B.5020800@imperial.ac.uk>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk>
Message-ID: <4E0DFF11.2020400@emerge-life.de>

Hi all,

On 01.07.2011 18:36, Phil Mayers wrote:
> However, more constructively (less whiney!) some tickets languished in
> "make these tiny cleanups" and that's just incredibly painful in the
> current setup, with SVN and Trac mediating things.
>
> I've got absolutely no interest in pulling SVN head, writing a patch,
> submitting it as an attachment via Trac and *then* being told "ok, I've
> created this branch. Go off and learn how to do branches in a crappy old
> centralised VCS, and in a way compatible with UQDS, re-do your patch in
> a branch, then send another diff in as a file"

I absolutely agree with Phil here.
The twisted code and contribution standards are so high that patches 
from new contributors (like myself) are bound to be rejected/resubmitted 
at least once, maybe more. Don't get me wrong, I believe high standards 
are a good thing, but doing continuous development based on tools like 
svn and trac is really painful and it's really difficult to motivate 
yourself to work on a once rejected ticket.

That being said, I believe that the move to a DVCS is a smart move for 
any project looking for continuous community contribution, because IMHO 
they simply allow for a more developer friendly process for all 
involved, thus making the whole review process a more friendly and less 
discouraging thing.

Cheers,
Chris


From glyph at twistedmatrix.com  Fri Jul  1 13:38:33 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 13:38:33 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>


On Jul 1, 2011, at 6:29 AM, Laurens Van Houtven wrote:

> As some of you may already know (either through a backchannel or because you talked to me at Europython), there has been some talk about moving Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
> 
> A lot of the devs do like SVN. My guess is that that's mainly because they don't actually use SVN, they use Combinator, or something. On the other hand, I do think that Trac is pretty universally loathed, and it would be a good idea to get away from it.
> 
> There's a few existing hosting solutions:
> Launchpad (+ Bazaar as the default vcs)
> Bitbucket (+ Mercurial as the default vcs)
> Github (+ Git as the default vcs)
> Although I've hated git for a long while (and I still don't like it very much), I firmly believe Github is the right thing for Twisted. My incredibly unscientific poll amongst people who like Twisted but aren't devs is that they all love or at least like Github, and a surprising number has a distaste for Launchpad (unfamiliarity with Bazaar, perceived developer-unfriendly UI, slowness).
> 
> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the transition? :)

As Itamar has already suggested, I think that this is a solution in search of a problem.  Aside from occasionally saving a contributor the trouble of typing 'review' in the keywords field every so often, what is this actually going to accomplish?  We have too many pending patches already, with not enough sustained interest to either review them or fix them; what we need are more sustained contributors, more reviewers.  Is this going to help us sustain interest?  In my opinion, the main frustration with this process is simply responsiveness of the site.  I think a better investment to address those issues would be in faster hardware to run Trac on (and possibly to communicate the acceptability of using a DVCS mirror).

But, if you're going to contemplate a transition, here are a few prerequisites.  Perhaps some of this should be added to the WorkflowRequirements page for posterity.

If you want me to take this effort seriously, please finish twisted.positioning first and get it reviewed and landed on trunk.  That's just a patch, after all, a much smaller effort than a attempting to migrate the project onto entirely new infrastructure, with implications for testing, version control, and issue tracking. :-)

Less controversial, I think, would be to produce a viable official github *mirror*, a-la <https://github.com/django/django>, rather than a migration, since this is a necessary prerequisite and useful in its own right.  <https://github.com/twisted> still has no public repositories, and I've been bugging people (including you specifically, lvh) to take this over for the past couple of weeks.

If we migrate somewhere, I would like all the data to be mirrored and presented on twistedmatrix.com with a custom stylesheet.  Ideally, I would like to avoid Twisted's users interacting with a different site for issue tracking.  A heavily-used, custom-styled web presence was an important part of fundraising.  No, I don't have any strong empirical data to present to justify that sentiment, but salesmanship is an art, and when I was talking to potential sponsors I felt that our site made us look like a "serious" project that sponsors were comfortable contributing to. The only person who I think has done enough interacting with sponsors to credibly disagree with this is exarkun - although he may well do just that.  For me, tens of thousands of dollars of focused sponsored development is going to win over random patches from people on github for a loooong time coming.

The fact that Django still maintains their own Trac instance is a point in favor of this, as well.  Those guys know a thing or two about image management :-).

Of course, anyone may easily refute this point at any time by simply raising about $30,000 for the TSF.

Pages like <http://www.sitemeter.com/?a=stats&s=sm7twistedmatrix&r=19> give us interesting information about our developers, and have previously informed discussions about efforts put towards platform support.  None of the sites listed above appear to offer independent web analytics, or the ability to embed custom HTML.  This is not, strictly speaking, a requirement, but any potential advocate of migrating somewhere should be aware that this would be one of the things we'd lose with a hosted solution.

You'll need to port <http://twistedmatrix.com/highscores/> to whatever system we switch to, and hopefully also preserve the ease of development and experimentation with ticket data.

We will need a staging deployment so that the new system can be evaluated and any tools to migrate can be tested without actually switching to it.  This would appear to disqualify github immediately, as we can't run our own instance for testing, and I don't want people thinking that we've switched and starting to file bugs into a botched public test migration.  I echo Itamar's concerns about a proprietary, remote code host.

Even in the case of an open source host, there are practical considerations.  I have the utmost respect for the developers at Launchpad, but the UI for that site is, frankly, a horror.  Trac's bad, but it is at least simple, and fairly static, and reasonable to override when it's doing something silly, if you care enough.  Once we've got all of our data ported over to Launchpad, I don't have a lot of confidence that the workflow or the UI will become _more_ suitable to our purposes, and if it's changed to become worse, will we really have any recourse?  Will we have to update our project documentation?  Our front page is already bad enough, but I think it still presents more useful information to the average reader than <https://launchpad.net/twisted>'s "Series and milestones", "configuration progress", or "packages in distributions" sections.

Of course, you'll also need to rewrite all of the relevant wiki pages; ContributingToTwistedLabs, TwistedDevelopment, ReviewProcess.  (And it took like 5 years to get this right for our current setup.)

Finally, any code-hosting service should also have a good option for migrating away.  We currently control twistedmatrix.com and can easily change the links from our current tickets to a new URL scheme or domain.  But, when we decide that Github or Launchpad is no longer workable for whatever reason, will we be able to do the same with the ticket links under their control?  We inhabit a hell now, to be sure, but it is a hell of our own design which we may hypothetically escape at any moment.  I don't want to trade that for something slightly better that we could never leave.  What are the non-hosted contenders?  If trac is really so bad, where's the better, competitive software we could switch to?  (Don't say redmine, I already know about that trick.)

Sorry that this post is so long, but I've tried to incorporate the majority of my objections into this one post so that the discussion doesn't drag on too much.  I am hoping to abstain from much more participation unless something is really unclear.  My single biggest concern is the potential of this topic to waste a huge amount of core developer time, so I'll try to do my part and not fan the flames further.  Although, the other questions raised in this thread, about what parts of our workflow are problematic, are worth talking about separately.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/8ae9e228/attachment.htm 

From glyph at twistedmatrix.com  Fri Jul  1 13:41:48 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 13:41:48 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E0DFF11.2020400@emerge-life.de>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
Message-ID: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>


On Jul 1, 2011, at 1:08 PM, chris wrote:

> doing continuous development based on tools like 
> svn and trac is really painful and it's really difficult to motivate 
> yourself to work on a once rejected ticket

Can you be more specific, please?  What's painful?

Procedurally, it's almost the same number of clicks (except for the unfortunate need to type the word 'review') to do this on Github or Launchpad.  What part of the process is painful?  If you're not a committer, we're not going to let you run code on our buildbots either way without a cursory review (that's just a recipe for automated attacks) so it's not like you get past that step for free, either.

Plus, you can use the DVCS of your choice to actually author the patch.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/91e65989/attachment.htm 

From kevin.horn at gmail.com  Fri Jul  1 14:00:01 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:00:01 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
>
>
> As some of you may already know (either through a backchannel or because
> you talked to me at Europython), there has been some talk about moving
> Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
>
> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.
>
> There's a few existing hosting solutions:
>
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)
>
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).
>
> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)
>
> --
> cheers
> lvh
>
>
A bunch of thoughts after reading a lot of this thread:

 * any move to  any DVCS will need a well-defined
   workflow/branching model/whatever, and it needs to be _written down_ so
   that people can be referred to it

 * moving to a DVCS would make it easier to merge changes from contributors

 * moving to a DVCS would allow contributors to work on their contributions
   in version control...no more patch nonsense.

 * though at times, after dealing with SVN/Combinator, I have longed for the

   patch nonsense...

 * A move to _any_ DVCS would almost certainly be a win over SVN.  I've
   had to go back to using SVN at work for my day-to-day, and it is
   _painful_.

 * I've never had any huge problesm with Trac, though I can see that
   offloading admin responsibilities is a good thing.

 * Does Github's ticketing system have the kind of integration with Git
   that Twisted has built for Trac+SVN?  Bitbucket has some similar stuff,
   so I would be surprised if Github didn't, but I just don't know.

 * I've never liked Launchpad.  I find it confusing and hard to navigate.

 * Git is annoying.  It's a pretty horrible piece of software in my
   opinion, and made some bad design decisions.

 * Git essentially makes Windows a second-class environment (as did
   Combinator).  We already have trouble recruiting Windows people, and
   IMO one of Twisted's strengths is that you can usually run things on
   Linux/MacOSX/Windows with very few cahnges, if any.

 * Github almost makes up for Git's irritating-ness.

 * Github's extra features have never yet caused me to choose Git as a new
   project over Mercurial.

 * For me, Bitbucket has always been pretty comparable to Github.  I know
   others will disagree, and point out all kinds of features that Github
   has over Bitbucket, but apparently I never use those features.  Perhaps
   those features (whatever they are) are more important in projects
   of Twisted's size and/or history.

 * I have been told, but not actually experienced, that using the hg-git
   plugin for Mercurial makes using Git for your repository into "an
   implementation detail", and the user basicaly doesn't even really
   have to care that they aren't using Hg.  If true, this would make me
   pretty happy...but I'm not entirely sure that it _is_ true.

 * it is unclear how Github would work with UQDS with regards to having a
   ticket for all new work.  IMO this is even more important than code
   reviews.  Would we just say: no pull requests will be accepted unless

 * How would running buildbot over a git/bzr/hg branch work?  Would Github's

   hooks be able to drive this?  Would we be able to tell buildbot to "go
   run tests on this branch"?

 * Assuming a change like this would take place, what would the plan be
   for transition?  Would all the branches that are out there be
   migrate-able?  What about all the Trac tickets, wiki, etc?

 * How does this affect the Sphinx transition plan? (I don't really know
   that it would affect it at all...).

 * Since Twisted's current web presence _is_ a Trac site, who's going to
   step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
   a replacement for an actual "marketing" or "home page" type site.

Overall, this is probably a good plan, but it's going to bea harder and take

more work than people think.

Also, I agree with Itamar's comments that while switching to a DVCS might
ameliorate Twisted's social/organizational issues somewhat, but is unlikely
to wholly fix them. That stuff needs to be discussed and worked on as well.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/67a79158/attachment-0001.htm 

From tom at recursivedream.com  Fri Jul  1 14:06:35 2011
From: tom at recursivedream.com (Tom Davis)
Date: Fri, 1 Jul 2011 14:06:35 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>

On Jul 1, 2011, at 1:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> On Jul 1, 2011, at 1:08 PM, chris wrote:
> 
>> doing continuous development based on tools like 
>> svn and trac is really painful and it's really difficult to motivate 
>> yourself to work on a once rejected ticket
> 
> Can you be more specific, please?  What's painful?

I always found it especially irritating to come back to a patch later. If I don't already have a patched checkout of Twisted, I need to figure out what revision I was at before (or to actually be safe, make a HEAD checkout), then reapply my patch, hoping it is still valid.  

With a fork I can check it out any time, rebase to the current master (or branch I'm working on), having my changes reapplied for me. When I have made more changes I just push it up. No changes to tickets or switching keywords or watching Trac reject my patch file 10 times then clearing all my cookies or whatever.

I've always admired Twisted's standards and process; I think they have made it possible for such a huge project to maintain working order for so long. The tools could use an upgrade, though.

> 
> Procedurally, it's almost the same number of clicks (except for the unfortunate need to type the word 'review') to do this on Github or Launchpad.  What part of the process is painful?  If you're not a committer, we're not going to let you run code on our buildbots either way without a cursory review (that's just a recipe for automated attacks) so it's not like you get past that step for free, either.
> 
> Plus, you can use the DVCS of your choice to actually author the patch.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/98130c35/attachment.htm 

From jasonjwwilliams at gmail.com  Fri Jul  1 14:14:02 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 12:14:02 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
Message-ID: <91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>

> Although, the other questions raised in this thread, about what parts of our workflow are problematic, are worth talking about separately.

Moving from a manual patch-based process to a DVCS where branching is cheap and the workflow can be moved to push/pull would be a huge step in the right direction. 

Twisted has a very polite club-like culture where some are on the inside, most aren't and it's clear where on that line anyone is. Submitting to the pain of the current submission tools almost seems viewed as a kind of worthwhile hazing to weed out the unworthy.  A lot of the resistance to change on this issue over the last year has had a lot of that flavor to it. Itamar's logic on why Twisted shouldn't make contributing easier being a prime example. 

Twisted needs more friends not fewer. Given everyone here has day jobs in addition to contributing to Twisted, getting rid of the patch-hell that is the current review process would help everyone even if Trac is kept for issue tracking. 

-J

From _ at lvh.cc  Fri Jul  1 14:13:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 20:13:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
Message-ID: <BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:00 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

>  * Does Github's ticketing system have the kind of integration with Git
>    that Twisted has built for Trac+SVN?  Bitbucket has some similar stuff,
>    so I would be surprised if Github didn't, but I just don't know.
>

Stuff like refs/closes interacts with the ticketing system yes. You can have
as many hooks as you like for topfiles.


>  * Git is annoying.  It's a pretty horrible piece of software in my
>    opinion, and made some bad design decisions.
>

magit makes it a lot more pleasant if you use emacs, by the way.


>  * Git essentially makes Windows a second-class environment (as did
>    Combinator).  We already have trouble recruiting Windows people, and
>    IMO one of Twisted's strengths is that you can usually run things on
>    Linux/MacOSX/Windows with very few cahnges, if any.
>

I've been told this has *vastly* improved, but I don't know for sure since
I'm not a Windows user.


>  * For me, Bitbucket has always been pretty comparable to Github.  I know
>    others will disagree, and point out all kinds of features that Github
>    has over Bitbucket, but apparently I never use those features.  Perhaps
>    those features (whatever they are) are more important in projects
>    of Twisted's size and/or history.
>

Yes, many features are comparable, the main feature differences are polish,
but the killer difference is community size.


>  * I have been told, but not actually experienced, that using the hg-git
>    plugin for Mercurial makes using Git for your repository into "an
>    implementation detail", and the user basicaly doesn't even really
>    have to care that they aren't using Hg.  If true, this would make me
>    pretty happy...but I'm not entirely sure that it _is_ true.
>

Although I've never tried this, I've been assured this is the case.


>  * it is unclear how Github would work with UQDS with regards to having a
>    ticket for all new work.  IMO this is even more important than code
>    reviews.  Would we just say: no pull requests will be accepted unless
>

Your question got cut off. I think you wanted to say "there's a ticket for
that"?


>   * How would running buildbot over a git/bzr/hg branch work?  Would
> Github's
>    hooks be able to drive this?  Would we be able to tell buildbot to "go
>    run tests on this branch"?
>

Although I've never tried this, I've been assured this is the case.


>
>  * Assuming a change like this would take place, what would the plan be
>    for transition?  Would all the branches that are out there be
>    migrate-able?  What about all the Trac tickets, wiki, etc?
>

The first thing I thought right after I thought "we're going to need a trac
to markdown converter" is "khorn is going to jump off a cliff next" ;-)


>
>  * How does this affect the Sphinx transition plan? (I don't really know
>    that it would affect it at all...).
>

I don't see how it would.

>
>  * Since Twisted's current web presence _is_ a Trac site, who's going to
>    step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
>    a replacement for an actual "marketing" or "home page" type site.
>
> Absolutely not. I am *not* advocating replacing this site, simply having
something similar that isn't trac and isn't involved in the site
development. If anything, this separates the concerns of "home page style
site" and development site even clearer, IMO.


> Overall, this is probably a good plan, but it's going to bea harder and
> take
> more work than people think.
>
> Also, I agree with Itamar's comments that while switching to a DVCS might
> ameliorate Twisted's social/organizational issues somewhat, but is unlikely
>
> to wholly fix them. That stuff needs to be discussed and worked on as well.
>

There's no silver bullet. Not making new potential contributors bend over,
and having all contributions trivially easy to put in version control,
regardless of their contributor status, sounds like a good start.


>
> Kevin Horn
>
> cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/f412f971/attachment.htm 

From jasonjwwilliams at gmail.com  Fri Jul  1 14:20:38 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 12:20:38 -0600
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>



Sent via iPhone

Is your email Premiere?

On Jul 1, 2011, at 11:41, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> Can you be more specific, please?  What's painful?

Re-syncing whatever changes JP (just as an example of a reviewer) has made back into your local repo from SVN...which due to SVN's weakness on branch tracking makes merging fail frequently...then making your changes...generating a manual patch and finally uploading it to Trac. 

It would be far simpler to setup my DVCS to track JP's remote copy of my ticket's branch...then simply pull from that remote...make my changes and request he pull from me when he's ready to review. Automates the whole process quite a bit and reduces the round trip yak shaving. 

-J

From kevin.horn at gmail.com  Fri Jul  1 14:38:34 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:38:34 -0500
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTinpJ=qQgumRe82PMhHf3S0Mtb=-6w@mail.gmail.com>

On Fri, Jul 1, 2011 at 11:08 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?
>
> (I'd also like someone -- lvh? -- to go through report 16 and see if we
> can come up with a summary of how those tickets ended up where they are.)
>

I've had a few of these.  I've also worked on others, reviewed a few, tried
to resurrect some from abandonment, etc.

Reasons include:
- the finish line gets moved: A reviewer says "do this and then it'll be
good to go into trunk".  The contributor does "this" and then another
reviewer says "oh just one more thing...".  Rinse.  Repeat.  This is hugely
demotivational.  In many cases a better response from follow on reviewers
would be to land the ticket, and then create another ticket for whatever
other changes are needed.  This is not always possible but I think it should
be done where it is possible.

- compatibility with some other unfinished ticket: The reviewer insists on
compatibility with some other ticket, or waiting on some other ticket to
land.  This is not necessarily a bad thing, but if the other ticket takes 6
months to land...well, can we blame people for wandering off and/or
forgetting about things?  (to be fair, I think I've only seen this once, and
I can't recall what it was or find the ticket at the moment).

- I've seen a lot of tickets that "die" at the "this needs tests" phase.
Requiring tests is a good thing, though.  I think the only way to help this
problem is for reviewers to provide more guidance as to how exactly to
create those tests.  Even figuring out where to put the tests is sometimes
very difficult.  Exarkun has been pretty good about this in the last year or
so, IIRC.

(It might be worth it to create a Trac keyword for this situation, maybe
"needs-tests".  This would make it easy to find those tickets, which might
be a decent entry point for certain types of new contributors)

- Some people just seem to wander off.

- I can think of at least one ticket where the author stopped using Windows,
and it was a Windows ticket.

- That same Windows ticket is still open, though I tried to revive it.  It
basically tries to do 2 things.  One of them is pretty nice (makes the StdIO
protocol work on windows), but it's not even clear what the other one is
trying to do.  So the ticket is in limbo until someone has the time to
either figure it out or split the ticket in two.

- I recall one ticket that got stalled, because noone was entirely sure who
exactly had written the patch.  There was a third party who had contributed
it to Twisted.  This was easily resolved with a google search and an email.
Of course the ticket is still open because it needs tests...

- One ticket was stalled because it required a "merge forward".  Which is
not really obvious how to do, especially since the DIvmod site died.

I'm sure there are dozens of other reasons, but these are cases I can recall
off the top of my head.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/1b874d6b/attachment-0001.htm 

From kevin.horn at gmail.com  Fri Jul  1 14:47:48 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:47:48 -0500
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <BANLkTimbi2fjMbY=6KgKKRPaLHY9y+4ANA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 1, 2011, at 1:08 PM, chris wrote:
>
> doing continuous development based on tools like
> svn and trac is really painful and it's really difficult to motivate
> yourself to work on a once rejected ticket
>
>
> Can you be more specific, please?  What's painful?
>
> Procedurally, it's almost the same number of clicks (except for the
> unfortunate need to type the word 'review') to do this on Github or
> Launchpad.  What part of the process is painful?  If you're not a committer,
> we're not going to let you run code on our buildbots either way without a
> cursory review (that's just a recipe for automated attacks) so it's not like
> you get past that step for free, either.
>
>
For me the pain isn't Trac, it's SVN.  The more I use DVCS's the more I hate
it.

Also, Combinator does not work on Windows, and hasn't for years.  And before
you say "submit patches", I did.  They sat in the Divmod Trac instance for
over a year, I requested reviews of the relevant tickets _daily_ for 3
months on Divmod's IRC channel, and they were never merged, or even
reviewed, or even AFAIK put under version control.  Now they're gone with
the DIvmod site.

If the tickets are ever recoverable, they were tickets #3001-#3004.


> Plus, you can use the DVCS of your choice to actually author the patch.
>

In theory, yes, though it is not obvious how to do this in a way that is
compatible with Twisted's workflow and Combinator.

See http://twistedmatrix.com/trac/wiki/BazaarMirror for examples of some of
the caveats of using DVCS on top of Subversion.

Granted this works for just authoring a patch, which you then submit through
Trac or whatever, but that doesn't really buy you a lot, IMO (though it does
buy you something).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/0800445b/attachment.htm 

From kevin.horn at gmail.com  Fri Jul  1 14:56:12 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:56:12 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
	<BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>
Message-ID: <BANLkTikY0--iNtCjiS6GKdRavHm7o0h66w@mail.gmail.com>

On Fri, Jul 1, 2011 at 1:13 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Fri, Jul 1, 2011 at 8:00 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>
>>  * Git is annoying.  It's a pretty horrible piece of software in my
>>    opinion, and made some bad design decisions.
>>
>
> magit makes it a lot more pleasant if you use emacs, by the way.
>

I don't.  Emacs is also annoying.


>
>
>>  * Git essentially makes Windows a second-class environment (as did
>>    Combinator).  We already have trouble recruiting Windows people, and
>>    IMO one of Twisted's strengths is that you can usually run things on
>>    Linux/MacOSX/Windows with very few cahnges, if any.
>>
>
> I've been told this has *vastly* improved, but I don't know for sure since
> I'm not a Windows user.
>

I've heard the same thing, but if what exists now is a _vast_ improvement, I
shudder to think
what it was like before.


>
>
>>  * it is unclear how Github would work with UQDS with regards to having a
>>    ticket for all new work.  IMO this is even more important than code
>>    reviews.  Would we just say: no pull requests will be accepted unless
>>
>
> Your question got cut off. I think you wanted to say "there's a ticket for
> that"?
>

exactly.


>
>
>>  * Assuming a change like this would take place, what would the plan be
>>    for transition?  Would all the branches that are out there be
>>    migrate-able?  What about all the Trac tickets, wiki, etc?
>>
>
> The first thing I thought right after I thought "we're going to need a trac
> to markdown converter" is "khorn is going to jump off a cliff next" ;-)
>

_almost_ funny :)


>
>
>> .
>>
>
>>  * Since Twisted's current web presence _is_ a Trac site, who's going to
>>    step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
>>    a replacement for an actual "marketing" or "home page" type site.
>>
>> Absolutely not. I am *not* advocating replacing this site, simply having
> something similar that isn't trac and isn't involved in the site
> development. If anything, this separates the concerns of "home page style
> site" and development site even clearer, IMO.
>

Well, the site would _have_ to be replaced by something, if Trac were to go
away.  But I think I understand what you mean.


>
>
>> Kevin Horn
>>
>> cheers
> lvh
>
>
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/5ed93933/attachment.htm 

From itamar at itamarst.org  Fri Jul  1 14:59:24 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 14:59:24 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
Message-ID: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>

> It would be far simpler to setup my DVCS to track JP's remote copy of my
> ticket's branch...then simply pull from that remote...make my changes and
> request he pull from me when he's ready to review. Automates the whole
> process quite a bit and reduces the round trip yak shaving.

Any reason you can't do this with our git or bzr mirrors?

http://twistedmatrix.com/trac/wiki/BazaarMirror
http://twistedmatrix.com/trac/wiki/GitMirror

Or for that matter, you can include e.g. an github URL in the ticket
instead of attaching the patch.



From _ at lvh.cc  Fri Jul  1 15:11:34 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 21:11:34 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:59 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> > It would be far simpler to setup my DVCS to track JP's remote copy of my
> > ticket's branch...then simply pull from that remote...make my changes and
> > request he pull from me when he's ready to review. Automates the whole
> > process quite a bit and reduces the round trip yak shaving.
>
> Any reason you can't do this with our git or bzr mirrors?
>
> http://twistedmatrix.com/trac/wiki/BazaarMirror
> http://twistedmatrix.com/trac/wiki/GitMirror
>


From glyph at twistedmatrix.com  Fri Jul  1 15:14:13 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 15:14:13 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>
Message-ID: <647A1EB0-ACF5-42E7-A2D8-4ABADF03C507@twistedmatrix.com>


On Jul 1, 2011, at 2:06 PM, Tom Davis wrote:

> On Jul 1, 2011, at 1:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Jul 1, 2011, at 1:08 PM, chris wrote:
>> 
>>> doing continuous development based on tools like 
>>> svn and trac is really painful and it's really difficult to motivate 
>>> yourself to work on a once rejected ticket
>> 
>> Can you be more specific, please?  What's painful?
> 
> I always found it especially irritating to come back to a patch later. If I don't already have a patched checkout of Twisted, I need to figure out what revision I was at before (or to actually be safe, make a HEAD checkout), then reapply my patch, hoping it is still valid.  
> 
> With a fork I can check it out any time, rebase to the current master (or branch I'm working on), having my changes reapplied for me. When I have made more changes I just push it up. No changes to tickets or switching keywords or watching Trac reject my patch file 10 times then clearing all my cookies or whatever.

Wow, does that actually happen?  The rejecting the patchfile, I mean.  That's terrible.

In any case, that should not be important.  You _should_ be able to use the DVCS of your choice to work on Twisted.[1]  As I said in the previous message:

>> Plus, you can use the DVCS of your choice to actually author the patch.


Lots of people do submit patches using Git; I reviewed one earlier this week.

One thing I think this thread has inspired is a prompt move to make it clearer how to do this.  It would be great if you could help out lvh in producing some good copy for the various workflow-documentation pages so that it's clear to people how to use their favorite VCS if they already have one; the SVN-based diff-and-ptach instructions that are already there are meant for users who may not be familiar with _any_ kind of version control.  (Just to forestall any objections: this is a realistic audience, lots of Twisted contributors have been in secondary school when they started.)

> I've always admired Twisted's standards and process; I think they have made it possible for such a huge project to maintain working order for so long. The tools could use an upgrade, though.

Thanks for that :).  And my earlier post notwithstanding, I agree.  In fact, the tools have improved significantly, but many of them are things that contributors don't see (build system upgrades, release process improvements) but core developers, and therefore eventually users, do benefit from.

-glyph

[1]: Your choice, of course, should be Bazaar, as all other choices are wrong.  But we can work around your Git habit ;-).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/2fb1e244/attachment-0001.htm 

From itamar at itamarst.org  Fri Jul  1 15:24:38 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 15:24:38 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
Message-ID: <5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>

> Twisted has a very polite club-like culture where some are on the inside,
> most aren't and it's clear where on that line anyone is. Submitting to the
> pain of the current submission tools almost seems viewed as a kind of
> worthwhile hazing to weed out the unworthy.  A lot of the resistance to
> change on this issue over the last year has had a lot of that flavor to
> it. Itamar's logic on why Twisted shouldn't make contributing easier being
> a prime example.

I did not say contributing shouldn't be easier; I said getting more
contributions is pointless (and annoying to contributors!) if we can't
manage to get them incorporated into trunk. If DVCS will make code easier
to incorporate, by encouraging contributors to iterate on patches, then we
should certainly do so. Given the feedback you and others have given that
seems at least worth trying.

There are other additional things we should work on though, e.g. giving
better feedback to new developers.



From jasonjwwilliams at gmail.com  Fri Jul  1 17:56:01 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 15:56:01 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
	<5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTikFTEuNAUo7RFktqcBsshZUhoq1wQ@mail.gmail.com>

>
> I did not say contributing shouldn't be easier; I said getting more
> contributions is pointless (and annoying to contributors!) if we can't
> manage to get them incorporated into trunk. If DVCS will make code easier
> to incorporate, by encouraging contributors to iterate on patches, then we
> should certainly do so. Given the feedback you and others have given that
> seems at least worth trying.
>

My apologies if I misunderstood what you were saying. If we can make it
easier to iterate that would address 95% of my current frustrations with the
process of contributing.


> There are other additional things we should work on though, e.g. giving
> better feedback to new developers.


 No argument. But the Twisted code standards are high and usually have a
high number of iterations to get any fix in...if we can get out of the stone
age of shuffling patch files around and get to some form of push/pull system
that would reduce a lot of my heartburn about "do this...OK looks good...now
do this too and integrate with ticket XYZ...great almost there...I think you
should do this now too...".

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/577314bc/attachment.htm 

From jasonjwwilliams at gmail.com  Fri Jul  1 18:01:56 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 16:01:56 -0600
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:59 PM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> > It would be far simpler to setup my DVCS to track JP's remote copy of my
> > ticket's branch...then simply pull from that remote...make my changes and
> > request he pull from me when he's ready to review. Automates the whole
> > process quite a bit and reduces the round trip yak shaving.
>
> Any reason you can't do this with our git or bzr mirrors?
>

Because they don't always seem to track the ticket branch folders in a
timely manner. Especially, when JP (he seems to usually be my reviewer :) )
pushes a modification of my patch to the ticket branch. It's at this point
trying to merge in from SVN is usually a nightmare. My Git copy being tied
to an older SVN rev that my patch is based on. SVN just seems to lose it's
brains when my patch isn't in the SVN commit history, because SVN repo
doesn't allow me to commit in. DVCS would allow me to branch, commit to my
repo, and then let JP pull from my repo into his to review and push up to
the Twisted repo when he's happy with it...and all of the commit history is
sane from the original, to my patch to his changes, so when I go to pull
back down from the Twisted repo everything merges sanely.


> Or for that matter, you can include e.g. an github URL in the ticket
> instead of attaching the patch.
>

Honestly, the "process" documents are pretty clear you're supposed to attach
a patch so that's what I do...also even that wouldn't solve the issue
described above.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/7b4d8bc7/attachment.htm 

From dripton at ripton.net  Fri Jul  1 18:57:04 2011
From: dripton at ripton.net (David Ripton)
Date: Fri, 01 Jul 2011 18:57:04 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E0E50C0.808@ripton.net>

On 07/01/11 12:08, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?

I made it through the first several hurdles (working code, following 
coding standards, unit tests for everything) but then hit a legitimate 
reverse compatibility concern that kept my patches from landing. 
Someone eventually came up with a good solution, but the time gap meant 
that other things had changed and/or were about to change in Twisted, 
and gave more people a chance to bikeshed, which gave me less confidence 
that whatever I eventually finished would land.  So I punted and waited 
for someone with more political clout to take over.

Working with patches because you don't have svn commit rights is 
annoying, but this annoyance is a relatively minor fixed cost.  The real 
issue, for controversial features, is achieving consensus, and then 
getting your feature in before consensus is lost.

-- 
David Ripton    dripton at ripton.net


From glyph at twistedmatrix.com  Fri Jul  1 19:27:48 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 19:27:48 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E0E50C0.808@ripton.net>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
Message-ID: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>


On Jul 1, 2011, at 6:57 PM, David Ripton wrote:

> Working with patches because you don't have svn commit rights is annoying, but this annoyance is a relatively minor fixed cost.

It's still important for us to reduce this cost; even if it's not the bottleneck, we have to optimize first where we can optimize :).

> The real issue, for controversial features, is achieving consensus, and then getting your feature in before consensus is lost.

Yes, absolutely.  And there's are some important guidelines for reviewers that can be inferred from this:

Try to stick to coding-standard stuff as much as possible, especially if there's been a previous review.  Don't bring up "I think it would be better if..." things, except to say "file an additional ticket".
If there's a previous review, as much as possible, stick to the points brought up in the previous review.  Make sure they're addressed, and try not to add a pile of conflicting stylistic suggestions.
When you do a review, try to be as thorough as possible.  Don't ever do a review that says "update @since markers" or "2 blank lines between methods" and nothing else; at least, you need to say "... and then it will be ready to merge".  Remember that when you take it out of review, no other reviewer is going to look at it until the author fixes it and resubmits it, which may be quite a while.  If you feel like adding some partial commentary to help the next full reviewer, just add a comment, don't remove the review keyword.
Be explicit about what happens next, even if it's going to be redundant.  Always say "... and it will need another review" or "... and then merge".  Try not to voice a vague dissatisfaction with the architecture of something without an explicit suggestion about (A) what should be done, and (B) whether it needs to be done before the feature can be merged.

For contributors, one suggestion: make implementation details private as much as possible, so that the reviewer will have to consider the aesthetics of the implementation details less.  The smaller the public API of the contribution, the easier it is to avoid bikeshedding around method names and class placement :).

None of this would have helped in particular on the IPv6 stuff, but given that that affected an extremely core API, and had a ton of fiddly little details, I'm not sure much could have helped on that one...

I know I've broken these rules myself on occasion, and I'd like to encourage other reviewers to call me out on it when they notice it :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/2affcf23/attachment.htm 

From _ at lvh.cc  Fri Jul  1 19:34:04 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 2 Jul 2011 01:34:04 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
Message-ID: <CAE_Hg6ZFLfUXVNv5Jo8wP-P209vSh7=ApTDsK+k5nerOOWHe6w@mail.gmail.com>

On Sat, Jul 2, 2011 at 1:27 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
> When you do a review, try to be as thorough as possible.  Don't *ever* do
> a review that says "update @since markers" or "2 blank lines between
> methods" and nothing else
>

With Github's edit-this-file-on-the-web feature, it will effectively be
easier to just fix it than it is to complain about how someone else needs to
fix it.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110702/17aeeda2/attachment-0001.htm 

From exarkun at twistedmatrix.com  Fri Jul  1 21:06:48 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 02 Jul 2011 01:06:48 -0000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to
	Twisted	and it never got in?
In-Reply-To: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
Message-ID: <20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>

On 1 Jul, 11:27 pm, glyph at twistedmatrix.com wrote:
>
>On Jul 1, 2011, at 6:57 PM, David Ripton wrote:
>>Working with patches because you don't have svn commit rights is 
>>annoying, but this annoyance is a relatively minor fixed cost.
>
>It's still important for us to reduce this cost; even if it's not the 
>bottleneck, we have to optimize first where we can optimize :).
>>The real issue, for controversial features, is achieving consensus, 
>>and then getting your feature in before consensus is lost.
>
>Yes, absolutely.  And there's are some important guidelines for 
>reviewers that can be inferred from this:
>
>Try to stick to coding-standard stuff as much as possible, especially 
>if there's been a previous review.  Don't bring up "I think it would be 
>better if..." things, except to say "file an additional ticket".

We've disagreed about this in the past, so I don't think you'll be 
surprised if I say that I don't think this is a good idea. :)

If an earlier review misses *functional* issues with a change, then they 
need to be brought up.

Scope creep should be avoided at *all* stages of the process, but an 
incomplete first review doesn't exempt a change from the development 
requirements (and I don't think you think it should, even though it 
sounds like you're saying it here :).
>
>If there's a previous review, as much as possible, stick to the points 
>brought up in the previous review.  Make sure they're addressed, and 
>try not to add a pile of conflicting stylistic suggestions.

Stylistic issues should all be known in advance (read the coding 
standard, etc) and brought up in the first review (because the first 
reviewer should know them too).  Stylistic issues that aren't covered by 
the coding standard definitely shouldn't be sprung in a subsequent 
review (or the reviewer should address them himself or herself) - or 
even a first review, really.

This is a separate case from pointing out *functional* issues that the 
first review missed.
>
>When you do a review, try to be as thorough as possible.  Don't ever do 
>a review that says "update @since markers" or "2 blank lines between 
>methods" and nothing else; at least, you need to say "... and then it 
>will be ready to merge".  Remember that when you take it out of review, 
>no other reviewer is going to look at it until the author fixes it and 
>resubmits it, which may be quite a while.  If you feel like adding some 
>partial commentary to help the next full reviewer, just add a comment, 
>don't remove the review keyword.

This is very important, since it should reduce the instances in which a 
later review does have to introduce a new point.  I don't think anyone 
benefits from forgoing resolving functional issues that are detected 
after the first review but before the change actually lands.
>
>Be explicit about what happens next, even if it's going to be 
>redundant.  Always say "... and it will need another review" or "... 
>and then merge".  Try not to voice a vague dissatisfaction with the 
>architecture of something without an explicit suggestion about (A) what 
>should be done, and (B) whether it needs to be done before the feature 
>can be merged.
>
>For contributors, one suggestion: make implementation details private 
>as much as possible, so that the reviewer will have to consider the 
>aesthetics of the implementation details less.  The smaller the public 
>API of the contribution, the easier it is to avoid bikeshedding around 
>method names and class placement :).

There are plenty of issues on the contribution-accepting side which I 
don't want to minimize, but I think there's another thing contributors 
can do to help the overall process.  If a review results in more work 
than you're interested in doing, say so.  Make it clear that you're no 
longer taking responsibility for the ticket.  Then there's some chance 
that another contributor might take it the rest of the way (without 
waiting 5 years before deciding the original contributor has lost 
interest).
>
>None of this would have helped in particular on the IPv6 stuff, but 
>given that that affected an extremely core API, and had a ton of fiddly 
>little details, I'm not sure much could have helped on that one...

Sooooooo fiddly aarrrrghhghhhhh.
>
>I know I've broken these rules myself on occasion, and I'd like to 
>encourage other reviewers to call me out on it when they notice it :).

This raises another point, which is that the mailing list isn't a 
terribly useful place for these points to end up.  If anything is 
actually expected to change, then the need to update the review 
documentation (such as it is) and probably also get serious about meta- 
reviews.

Jean-Paul


From screwtape at froup.com  Fri Jul  1 22:23:12 2011
From: screwtape at froup.com (Tim Allen)
Date: Sat, 2 Jul 2011 12:23:12 +1000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
References: <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
Message-ID: <20110702022312.GD21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 09:11:34PM +0200, Laurens Van Houtven wrote:
> On Fri, Jul 1, 2011 at 8:59 PM, Itamar Turner-Trauring
> <itamar at itamarst.org>wrote:
> > Or for that matter, you can include e.g. an github URL in the ticket
> > instead of attaching the patch.
> 
> Only if there's a decent Github mirror to fork from, otherwise you're asking
> people to do a multi-hour operation (I know, because I'm doing it right now)
> to get a decent git repo,

Last time I tried (perhaps a year ago), a git-svn clone of the Twisted
SVN repo took the better part of a week. I seem to recall somebody
preparing a tarball of a git-svn-clone'd repository to help people
bootstrap, but my clone was already completed at that point so I didn't
investigate further.


From glyph at twistedmatrix.com  Fri Jul  1 23:09:57 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 23:09:57 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and it never got in?
In-Reply-To: <20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
	<20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>
Message-ID: <7D0D0DE4-6084-413C-B535-2DECDC2961B8@twistedmatrix.com>


On Jul 1, 2011, at 9:06 PM, exarkun at twistedmatrix.com wrote:

> On 1 Jul, 11:27 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Jul 1, 2011, at 6:57 PM, David Ripton wrote:
>>> Working with patches because you don't have svn commit rights is 
>>> annoying, but this annoyance is a relatively minor fixed cost.
>> 
>> It's still important for us to reduce this cost; even if it's not the 
>> bottleneck, we have to optimize first where we can optimize :).
>>> The real issue, for controversial features, is achieving consensus, 
>>> and then getting your feature in before consensus is lost.
>> 
>> Yes, absolutely.  And there's are some important guidelines for 
>> reviewers that can be inferred from this:
>> 
>> Try to stick to coding-standard stuff as much as possible, especially 
>> if there's been a previous review.  Don't bring up "I think it would be 
>> better if..." things, except to say "file an additional ticket".
> 
> We've disagreed about this in the past, so I don't think you'll be 
> surprised if I say that I don't think this is a good idea. :)
> 
> If an earlier review misses *functional* issues with a change, then they 
> need to be brought up.

I don't think I disagree, actually.  It's just a different emphasis.  Issues certainly need to be brought up.  I shouldn't have said otherwise.  They just need to be clearly separated into blocking/not-blocking.

> Scope creep should be avoided at *all* stages of the process, but an 
> incomplete first review doesn't exempt a change from the development 
> requirements (and I don't think you think it should, even though it 
> sounds like you're saying it here :).

You're right, on a subsequent reading, that's what it sounds like I was saying.  And I'm definitely not saying that; the review requirements are the same on every review.

>> If there's a previous review, as much as possible, stick to the points 
>> brought up in the previous review.  Make sure they're addressed, and 
>> try not to add a pile of conflicting stylistic suggestions.
> 
> Stylistic issues should all be known in advance (read the coding 
> standard, etc) and brought up in the first review (because the first 
> reviewer should know them too).  Stylistic issues that aren't covered by 
> the coding standard definitely shouldn't be sprung in a subsequent 
> review (or the reviewer should address them himself or herself) - or 
> even a first review, really.
> 
> This is a separate case from pointing out *functional* issues that the 
> first review missed.

The word "functional" is pretty broad, so let me be more specific.

Any change which is part of the coding standard or the review policy needs to be mentioned.  100% test coverage is a requirement.  Docstrings for public and private are a requirement.  No matter how many reviewers have missed these things, they need to be brought up and no feature which is missing them may land.  I think we are all pretty clear about that.

Beyond that there's an infinite spectrum of diversity of possible review comments, and I can't speak to all of them.  For example, maybe a change causes the performance characteristics of an existing, but un-benchmarked, change to regress.  Maybe the API is designed in such a way that it will be difficult or impossible to scale.  Perhaps something is treated as blocking where it should return a Deferred.  I can't say for sure whether one of these issues would or wouldn't be a blocker without a lot of context about that specific change.

But I think there's a general category of feedback that can be classified as "this is OK, but I can think of a way to do it better".  In this case, a change might meet all the formal requirements, have a reasonable API that works, and not raise compatibility issues, but the reviewer has an epiphany while reading it and realizes it might be simpler/faster/more flexible to do something else.

The reviewer should always feel free to communicate such an insight, of course, but I think that reviewers should all have a strong bias towards separating this out and making it optional - and making it clear that it's optional.  The best should not be the enemy of the better; if it's an improvement, and it works today, we should usually integrate it.  In many cases it's much better to defer the improvements until later and get the reasonable API in sooner.  I think this is true even if the improved version will have a totally different API, because it's possible nobody will have a chance to do the improvements for years.

Again, this is one that I know I'm guilty of, but I'd like to think that in recent reviews I've been really clear about the optionalness of my ideas :).

The purpose of the review process, as I see it, is not to produce the best possible implementation of everything always.  It's to produce an implementation that meets a certain quality standard and does not cause regressions (either in functionality or test coverage, although hopefully one day also in performance too).  I think there are cases where we have ended up with no implementation rather than an adequate but not awesome implementation because there have been too many competing ideas for how to do it "even better" rather than how to make it meet the required standard.

All that being said, I spent a long time looking at <http://twistedmatrix.com/trac/report/16>, and I can't find any tickets where comments like this are the only reason for blocking a ticket that's been through many round-trips; they all still have compliance issues.  The larger problem is cursory early reviews where the patch is obviously bad, and later reviews that get more detailed once it starts to shape up.  Apparently the more serious issue is that we just need to be more thorough earlier in the process.  (Although another way to look at that data is that we weren't terribly thorough 3 years ago, since old tickets necessarily have old initial reviews.)

>> When you do a review, try to be as thorough as possible.  Don't ever do 
>> a review that says "update @since markers" or "2 blank lines between 
>> methods" and nothing else; at least, you need to say "... and then it 
>> will be ready to merge".  Remember that when you take it out of review, 
>> no other reviewer is going to look at it until the author fixes it and 
>> resubmits it, which may be quite a while.  If you feel like adding some 
>> partial commentary to help the next full reviewer, just add a comment, 
>> don't remove the review keyword.
> 
> This is very important, since it should reduce the instances in which a 
> later review does have to introduce a new point.  I don't think anyone 
> benefits from forgoing resolving functional issues that are detected 
> after the first review but before the change actually lands.

If you're a new reviewer (or even if you're an old one who hasn't gotten much practice), it might be worthwhile to put a review comment on the ticket but ask a more experienced reviewer for a meta-review before getting rid of the 'review' keyword.  A meta-review is usually a lot easier than a review, so it should be easier to get one by just showing up in #twisted and asking; hopefully we won't need an elaborate meta-review tracker.

I hope this suggestion will make someone who has thus far been hesitant to do a review contemplate doing one with this set of training wheels.

>> Be explicit about what happens next, even if it's going to be 
>> redundant.  Always say "... and it will need another review" or "... 
>> and then merge".  Try not to voice a vague dissatisfaction with the 
>> architecture of something without an explicit suggestion about (A) what 
>> should be done, and (B) whether it needs to be done before the feature 
>> can be merged.
>> 
>> For contributors, one suggestion: make implementation details private 
>> as much as possible, so that the reviewer will have to consider the 
>> aesthetics of the implementation details less.  The smaller the public 
>> API of the contribution, the easier it is to avoid bikeshedding around 
>> method names and class placement :).
> 
> There are plenty of issues on the contribution-accepting side which I 
> don't want to minimize, but I think there's another thing contributors 
> can do to help the overall process.  If a review results in more work 
> than you're interested in doing, say so.  Make it clear that you're no 
> longer taking responsibility for the ticket.  Then there's some chance 
> that another contributor might take it the rest of the way (without 
> waiting 5 years before deciding the original contributor has lost 
> interest).

+1

>> None of this would have helped in particular on the IPv6 stuff, but 
>> given that that affected an extremely core API, and had a ton of fiddly 
>> little details, I'm not sure much could have helped on that one...
> 
> Sooooooo fiddly aarrrrghhghhhhh.
> 
>> I know I've broken these rules myself on occasion, and I'd like to 
>> encourage other reviewers to call me out on it when they notice it :).
> 
> This raises another point, which is that the mailing list isn't a 
> terribly useful place for these points to end up.  If anything is 
> actually expected to change, then the need to update the review 
> documentation (such as it is) and probably also get serious about meta- 
> reviews.

I do hope someone will volunteer to update the wiki as a result, and if not, I hope I remember to.  But the discussion has given me a couple of ideas I wouldn't have had otherwise; the meta-review comment above is a new(ish) idea.

Of course, the most useful place for this to end up would be as a tweet!  (Is everybody following @twistedmatrix yet?)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110701/78376971/attachment-0001.htm 

From ivan at ludios.org  Fri Jul  1 23:10:42 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 2 Jul 2011 03:10:42 +0000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <20110702022312.GD21836@boombah.thristian.org>
References: <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
	<20110702022312.GD21836@boombah.thristian.org>
Message-ID: <BANLkTik4K1PzBt+jVgPO1gH3FkfA3Lh63Q@mail.gmail.com>

On Sat, Jul 2, 2011 at 02:23, Tim Allen <screwtape at froup.com> wrote:
> On Fri, Jul 01, 2011 at 09:11:34PM +0200, Laurens Van Houtven wrote:
>> Only if there's a decent Github mirror to fork from, otherwise you're asking
>> people to do a multi-hour operation (I know, because I'm doing it right now)
>> to get a decent git repo,
>
> Last time I tried (perhaps a year ago), a git-svn clone of the Twisted
> SVN repo took the better part of a week. I seem to recall somebody
> preparing a tarball of a git-svn-clone'd repository to help people
> bootstrap, but my clone was already completed at that point so I didn't
> investigate further.

I update the tarball a few times a year at http://ludios.net/mirror/ -
see Twisted-checkout-README.txt for notes.

If you do it yourself, keep in mind that git svn clone has to restart
at r1 several times, for reasons I don't fully understand (due to
partial SVN branches?).  A few months back, a branch created by bzr
with an svn:mergeinfo property caused it to restart at r1 again.  This
adds about 27 hours to the git svn clone time, unfortunately.

Ivan


From termim at gmail.com  Sat Jul  2 00:31:19 2011
From: termim at gmail.com (Mikhail Terekhov)
Date: Sat, 2 Jul 2011 00:31:19 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>
Message-ID: <BANLkTikGeZAAikivTu6u_QUBas_yh_TbAw@mail.gmail.com>

On Fri, Jul 1, 2011 at 6:01 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Because they don't always seem to track the ticket branch folders in a
> timely manner. Especially, when JP (he seems to usually be my reviewer :) )
> pushes a modification of my patch to the ticket branch. It's at this point
> trying to merge in from SVN is usually a nightmare.
>

Why it is a nightmare? Just do svn checkout of "the ticket branch" and
continue your work and submit additional patches against it if needed.
The only problem here that I could see is if you have made some changes in
addition to your patch. But in this case kdiff3 makes it a snap to merge you
changes to the ticket branch checkout.


> My Git copy being tied to an older SVN rev that my patch is based on. SVN
> just seems to lose it's brains when my patch isn't in the SVN commit
> history, because SVN repo doesn't allow me to commit in.
>

I can't decipher this, could you elaborate?


> DVCS would allow me to branch, commit to my repo, and then let JP pull from
> my repo into his to review and push up to the Twisted repo when he's happy
> with it...and all of the commit history is sane from the original, to my
> patch to his changes, so when I go to pull back down from the Twisted repo
> everything merges sanely.
>

IMHO the common practice is to accept patches for review and potential
inclusion and pull only from a trusted "lieutenants" (like in Linux kernel
case) and creating patches is not very different in svn, git etc.

Regards,
Mikhail Terekhov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110702/ef82c539/attachment.htm 

From termim at gmail.com  Sat Jul  2 00:53:51 2011
From: termim at gmail.com (Mikhail Terekhov)
Date: Sat, 2 Jul 2011 00:53:51 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:14 AM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>
> In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.
>
> +1

-- 
Mikhail Terekhov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110702/f6418e1d/attachment.htm 

From jstpierre at mecheye.net  Sat Jul  2 01:09:45 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 2 Jul 2011 01:09:45 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
	<CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>
Message-ID: <CAAMt=zA9dMgynAve59wFyUqEMjLioNx82kzGp1XNuwpVr3=3Ug@mail.gmail.com>

What data do you care about? Wikis and code are in git repositories,
and they have a very exhaustive API[0] for pretty much everything
else.

On Sat, Jul 2, 2011 at 12:53 AM, Mikhail Terekhov <termim at gmail.com> wrote:
> On Fri, Jul 1, 2011 at 8:14 AM, Itamar Turner-Trauring <itamar at itamarst.org>
> wrote:
>>
>> Unless I'm mistaken, Github is a proprietary system, which means I'm
>> unhappy about hosting our project there. At the minimum I'd want a very
>> good story about how we can get all our data out if we need to. And even
>> then I'd probably be against it. What's more, we can switch to
>> git/bzr/hg without switching to a hosted system (e.g. trac with
>> GitPlugin, and redmine has builtin integration for all of those.). Why
>> does git imply github?
>>
>> In my opinion the biggest barrier to new developers is not whether we
>> use git or subversion or what have you, but the high quality of code
>> required (coding standard, tests, passing code review). A DVCS may well
>> encourage more users, but I'm skeptical it will have a major impact.
>>
> +1
>
> --
> Mikhail Terekhov
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

[0] http://developer.github.com/

-- 
?Jasper


From michaelnt at gmail.com  Sat Jul  2 13:07:21 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Sat, 2 Jul 2011 18:07:21 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
Message-ID: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>

On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> As Itamar has already suggested, I think that this is a solution in search
> of a problem. ?Aside from occasionally saving a contributor the trouble of
> typing 'review' in the keywords field every so often, what is this actually
> going to accomplish? ?We have too many pending patches already, with not
> enough sustained interest to either review them or fix them; what we need
> are more sustained contributors, more reviewers. ?Is this going to help us
> sustain interest?

I agree that there is a problem getting patches reviewed, I think git
provides a much better tool to reduce the effort and pain for a
reviewer in applying patches, and updating branches to HEAD. Github's
patch review tool, and the ability to get a diff to a patch reviewed
are big wins in my opinion.

I think github means less effort for the reviewer because they can
review commits, rather than a large diff. They can review changes
following a review. They can have a tool to make comments next to the
code and it is less effort to apply patches and update branches to
HEAD.

Small, documentation diffs, for instance can be reduced to a single
click for a core developer to merge the change to trunk.

Michael


From glyph at twistedmatrix.com  Sat Jul  2 17:27:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 2 Jul 2011 17:27:56 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
Message-ID: <A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>


On Jul 2, 2011, at 1:07 PM, Michael Thompson wrote:

> On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> I think github means less effort for the reviewer because they can
> review commits, rather than a large diff. They can review changes
> following a review.

I already review diffs this way, with a local bzr-svn branch using 'bzr merge; bzr qlog'.  Better yet I just sometimes do this on a plane :).

> They can have a tool to make comments next to the code and it is less effort to apply patches and update branches to HEAD.

This would be nice.  Is it easy for the reviewee to look at all the comments in an ordered list?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110702/fb84d7e3/attachment.htm 

From _ at lvh.cc  Sat Jul  2 17:37:05 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 2 Jul 2011 23:37:05 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
	<A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>
Message-ID: <CAE_Hg6Z8QA4cHTaRW8f1kRHnTBj+HYXccrwGWK5sHB+dCUPCJw@mail.gmail.com>

On Sat, Jul 2, 2011 at 11:27 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
> They can have a tool to make comments next to the code and it is less
> effort to apply patches and update branches to HEAD.
>
>
> This would be nice.  Is it easy for the reviewee to look at all the
> comments in an ordered list?
>
> Depends what ordering you want. Right now it's ascending line numbers, per
file they're in. You can also comment on an entire pull request if you want
to say things like "3 lines between classes".


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110702/50f5ed62/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jul  3 00:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Jul 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1309665924.78.284351704@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110703/c9b378be/attachment.htm 

From michaelnt at gmail.com  Sun Jul  3 06:43:30 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Sun, 3 Jul 2011 11:43:30 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
Message-ID: <CA+A=P1qWALmL1wv1MBKwUPJQEn+sN2sfuA7cQzGA4mBcqaioFw@mail.gmail.com>

On Jul 2, 2011 10:28 p.m., "Glyph Lefkowitz" <glyph at twistedmatrix.com>
wrote:
>
>
> On Jul 2, 2011, at 1:07 PM, Michael Thompson wrote:
>
>> On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>
>> I think github means less effort for the reviewer because they can
>> review commits, rather than a large diff. They can review changes
>> following a review.
>
>
> I already review diffs this way, with a local bzr-svn branch using 'bzr
merge; bzr qlog'.  Better yet I just sometimes do this on a plane :).
>

Is that reviewing Svn branches what about text patches?

If I address three review comments sending in three patch files seems like a
hassle for me and the reviewer and could lead to more delays in the review
process.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110703/6457324d/attachment-0001.htm 

From andrew at bemusement.org  Sun Jul  3 20:36:08 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 4 Jul 2011 10:36:08 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
Message-ID: <20110704003608.GT8823@aihal.home.puzzling.org>

Michael Thompson wrote:
[...]
> Small, documentation diffs, for instance can be reduced to a single
> click for a core developer to merge the change to trunk.

I doubt that single click writes a NEWS file, or tests that the diff as applied
to current trunk builds cleanly on a buildslave.  So this may be less useful
than you'd expect.

-Andrew.



From glyph at twistedmatrix.com  Mon Jul  4 19:06:50 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 4 Jul 2011 19:06:50 -0400
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
Message-ID: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>

Hello from the Twisted server operations team,

The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).

We will send another notice as soon as things are back to normal.

-glyph



From foom at fuhm.net  Mon Jul  4 19:49:10 2011
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Jul 2011 19:49:10 -0400
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
Message-ID: <350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>


On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:

> Hello from the Twisted server operations team,
> 
> The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).
> 
> We will send another notice as soon as things are back to normal.

I believe it should be functional now. Please advise if anything seems broken. :)

James

From johan.rydberg at edgeware.tv  Tue Jul  5 01:36:44 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 05 Jul 2011 07:36:44 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E12A2EC.7020906@edgeware.tv>

On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
I've had some patched rejected, probably on sound basis.  But the
experience always leave you with a feeling that you got stabbed.

Sometimes it _is_ be better to get some basic functionality in
place, instead of arguing about how things should be done "the
right way".

 From time to time you find a ticket that you want fixed, and start
working on it, but end up never submitting it since you already
know that even if it fixes the problem it will be shot down, since
it doesn't do it this or that way.


-- 
Johan Rydberg
Product Designer

Edgeware AB
M?ster Samuelsgatan 56
SE-111 21 Stockholm, Sweden



From techtonik at gmail.com  Tue Jul  5 02:41:12 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Tue, 5 Jul 2011 09:41:12 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>

On Fri, Jul 1, 2011 at 1:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
>
> As some of you may already know (either through a backchannel or because you
> talked to me at Europython), there has been some talk about moving Twisted
> way from Trac+SVN to somewhere that isn't Trac+SVN.

There are always talks about moving here of there, because people are
bored or it _seems_ to them that the other way of doing things is much
better, because everybody else praises it. It is hard to resist this
opinion. Some people even take it fundamentally - "I won't commit,
because its not in Git". The worst that it doesn't mean these people
will participate if the project is be in Git, but a small percentage
will.

Problem with Git/Bazaar/Mercurial and DVCS in general is much higher
contribution barrier. So, if you want to switch, you need to know
_exactly_ why, and more importantly - which features are you going to
miss. See below:

> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.

I believe nobody uses Combinator, because it is dead
http://divmod.org/trac/wiki/DivmodCombinator
SVN has one major flaw - you can not stack patches on your system
naturally when you don't have write access to repository. I believe
that's the major complain behind "DVCS is better". Second problem -
there in no _convenient_ way to share these patches to be reviewed and
incorporated upstream.

I do not think Trac is universally hated. It is the application one
level above Python API as Twisted itself. Trac has its own
architecture, different from standard OOP hierarchy. This architecture
is not obvious and may be inconvenient to debug and extend. It may be
that everybody is tired of Trac design, or Trac doesn't provide review
and push/pull integration, but it has some other awesome features.

> There's a few existing hosting solutions:
>
> Launchpad (+ Bazaar as the default vcs)
> Bitbucket (+ Mercurial as the default vcs)
> Github (+ Git as the default vcs)

I am not sure if the following possible with these services:
L  G  B
[ ] [ ] [ ] Project timeline with changes to wiki, tickets, commits etc,
[ ] [ ] [ ] Editable issue description (Google Code suxx at this)
[ ] [ ] [ ] Commit history navigation from patch view (next/prev buttons)
[ ] [ ] [ ] Colored blame history browser
[ ] [ ] [ ] Hook scripts for bots and other stuff
[ ] [ ] [ ] Full project data export

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)

To know if Github is terrible or not, you need some data - examples,
use cases. The first step in planning is to look at the current
workflow and gather a list of ways current Trac+SVN is used and see
where Github has advantages and where it suxx. Usually, people realize
the latter when it's too late.

As we are all mostly too busy, if you want people to participate in
discussions, it will be better to outline the features you need from
development workflow and separate discussion with some summary about
them into separate thread. Right now I see that there is a thread
about reviews and as a Rietveld user, I may have a lot to say about
that. =)
-- 
anatoly t.


From screwtape at froup.com  Tue Jul  5 02:49:33 2011
From: screwtape at froup.com (Tim Allen)
Date: Tue, 5 Jul 2011 16:49:33 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
Message-ID: <20110705064933.GJ21836@boombah.thristian.org>

On Tue, Jul 05, 2011 at 09:41:12AM +0300, anatoly techtonik wrote:
> To know if Github is terrible or not, you need some data - examples,
> use cases. The first step in planning is to look at the current
> workflow and gather a list of ways current Trac+SVN is used and see
> where Github has advantages and where it suxx. Usually, people realize
> the latter when it's too late.

As has been mentioned in earlier in this thread:

    http://twistedmatrix.com/trac/wiki/WorkflowRequirements

(which I have updated with some of the website requirements that Glyph
mentioned in one of his posts).


From tds333+tx at gmail.com  Tue Jul  5 03:31:15 2011
From: tds333+tx at gmail.com (Wolfgang)
Date: Tue, 5 Jul 2011 09:31:15 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>

Hi,

just to note. If a move is preferred I give

+1 for bitbucket (mercurial)

If you ever want someone contributing under Windows, github with git is not a
good solution. For Windows there are good clients for mercurial and bazzar.
Git is more a Unix only solution. Launchpad has a horrible and unusable web ui
so -1 on that.

Also python has moved to mercurial and bitbucket catched up in features to
github. Why should we move to a "no Python system" ?

Regards,

Wolfgang


From jstpierre at mecheye.net  Tue Jul  5 03:42:04 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 5 Jul 2011 03:42:04 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110705064933.GJ21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
Message-ID: <CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>

Pretty much all of those can be supported with GitHub: they can POST
to a generic website as a commit hook[0], along with a number of other
integrated services[1].

The only thing that I can think of is that GitHub issues doesn't have
hooks, so we'd have to poll if we wanted an IRC bot for GitHub issues.
Thankfully, they have an API for issues[2] that should make it easier.

re: Mercurial, I didn't like it when I used it. If someone can tell me
how to do this[3] in hg, I'd be more inclined to play along. And that
said, I think we'd get a much better reception and amount of
contributors if we're on GitHub, if only due to the scale compared to
LP/BB. I think we're all familiar with the "denied" story :).

On Tue, Jul 5, 2011 at 2:49 AM, Tim Allen <screwtape at froup.com> wrote:
> On Tue, Jul 05, 2011 at 09:41:12AM +0300, anatoly techtonik wrote:
>> To know if Github is terrible or not, you need some data - examples,
>> use cases. The first step in planning is to look at the current
>> workflow and gather a list of ways current Trac+SVN is used and see
>> where Github has advantages and where it suxx. Usually, people realize
>> the latter when it's too late.
>
> As has been mentioned in earlier in this thread:
>
> ? ?http://twistedmatrix.com/trac/wiki/WorkflowRequirements
>
> (which I have updated with some of the website requirements that Glyph
> mentioned in one of his posts).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

[0] http://help.github.com/post-receive-hooks/
[1] https://github.com/github/github-services
[2] http://developer.github.com/v3/issues/
[3] http://people.gnome.org/~federico/news-2008-08.html#git-rebase-interactive

-- 
?Jasper


From sandro at e-den.it  Tue Jul  5 05:02:50 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Tue, 5 Jul 2011 11:02:50 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
Message-ID: <20110705090250.GA14081@ubuntu>

On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
> re: Mercurial, I didn't like it when I used it. If someone can tell me
> how to do this[3] in hg, I'd be more inclined to play along. And that

I do this sort of things using mercurial queues. I pile up patches in a
queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
fold it with a later one (hg qfold fix_header2).

While the queue is not yet committed I can change the commit log of a patch
in a simple way.

   hg qnew -f fix1 -m "this fixed issue 1"
   hg qnew -I debian/control -m "fix control"
   hg qnew -f fix1.1 -m "forgot something in issue 1"
   hg qgoto fix1
   hg qfold fix1.1  # This concatenate the 2 comments"
   hg qrefresh -e   # fix your comment as you like it
   hg qpush
   hg qfinish -a   # commit all queues currently applied


sandro
*:-)

-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy


From orestis at orestis.gr  Tue Jul  5 05:05:33 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 5 Jul 2011 12:05:33 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>

On 5 Jul 2011, at 10:31, Wolfgang wrote:
> If you ever want someone contributing under Windows, github with git is not a
> good solution. For Windows there are good clients for mercurial and bazzar.
> Git is more a Unix only solution.

I have no vote on the whole moving off SVN, but as a former windows user I'd like to make it clear that git has absolutely no issues with Windows and it has been so for 3 years now. Either in cygwin or by using the (officially linked from the git home page) msysgit standalone package, you get a completely functional git CLI tool plus a completely functional and awesome gitk graphical interface. I've been using that for a full year (including git-svn) and it's been working completely fine. (Of course it may have other limitations that I'm not aware of, but I haven't come across them).

Finally, for what it's worth, for me as a potential contributor to Twisted (I still want to help with documentation) SVN is a much bigger barrier of entry than Trac. Even an official git mirror (complete with branches) that I could work against would be hugely beneficial. Git has a lot of local graphical tools that you can use to search, browse history, do diffs and so on, so that Trac+git can be a viable solution, even without Trac-git integration.

Orestis

From _ at lvh.cc  Tue Jul  5 06:15:24 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:15:24 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <CAE_Hg6bpoSz6+ivCMA78azn1b=YsY4CRvpTXWsyeCRs0bTPhYA@mail.gmail.com>

On Tue, Jul 5, 2011 at 9:31 AM, Wolfgang <tds333+tx at gmail.com> wrote:

> Hi,
>
> If you ever want someone contributing under Windows, github with git is not
> a
> good solution.
>

Why not? I know the reasons three years ago (and most of them were either
permissions or performance), but I have been assured multiple times that
this is no longer the case at all.


> Also python has moved to mercurial and bitbucket catched up in features to
> github. Why should we move to a "no Python system" ?
>

Because the community on Github is significantly larger.

At some point, this devolves into bikeshedding. Twisted devs would prefer
Launchpad, but many people hate Launchpad with a passion. Between Github and
Bitbucket, as you've said yourself, Bitbucket is playing feature catch-up
(whether they're doing that successfully or not is something I'm willing to
skip discussing). I don't think features are the thing to differentiate the
two on (even though I think Github wins because of polish). It's network
effects. Github has more following, so it's more interesting.

The thing is, it's not so much a vote. This is a do-ocracy. The breaks were
"I'll move it to Github, *or* someone stops me", not "I'll move it to
Github, or Bitbucket, or whatever else you folks think is a good idea". If
people are going to try and stop me from moving it to Github, I'm not going
to move it to Bitbucket or anything else. It's just going to stay Trac/SVN.

Regards,
> Wolfgang



cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/09a38283/attachment-0001.htm 

From _ at lvh.cc  Tue Jul  5 06:18:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:18:03 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
Message-ID: <CAE_Hg6aYc_2B3Ki95HGgWP2ZE2nAikdBUj=J0wC5=8Af4H75QQ@mail.gmail.com>

On Tue, Jul 5, 2011 at 11:05 AM, Orestis Markou <orestis at orestis.gr> wrote:

> Finally, for what it's worth, for me as a potential contributor to Twisted
> (I still want to help with documentation) SVN is a much bigger barrier of
> entry than Trac. Even an official git mirror (complete with branches) that I
> could work against would be hugely beneficial. Git has a lot of local
> graphical tools that you can use to search, browse history, do diffs and so
> on, so that Trac+git can be a viable solution, even without Trac-git
> integration.
>
> Orestis
>

Excellent!

It looks like the Github *mirror* is going to be a thing, so that will at
least make some of you happy.

Unfortunately, it looks like the *move* (including tickets etc) to Github is
never going to happen. I'm not going to elaborate. Someone else might.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/ea3aa655/attachment.htm 

From david at silveregg.co.jp  Tue Jul  5 06:22:25 2011
From: david at silveregg.co.jp (David)
Date: Tue, 05 Jul 2011 19:22:25 +0900
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
Message-ID: <4E12E5E1.7080309@silveregg.co.jp>

On 07/05/2011 06:05 PM, Orestis Markou wrote:
> On 5 Jul 2011, at 10:31, Wolfgang wrote:
>> If you ever want someone contributing under Windows, github with git is not a
>> good solution. For Windows there are good clients for mercurial and bazzar.
>> Git is more a Unix only solution.
>
> I have no vote on the whole moving off SVN, but as a former windows user I'd like to make it clear that git has absolutely no issues with Windows and it has been so for 3 years now. Either in cygwin or by using the (officially linked from the git home page) msysgit standalone package, you get a completely functional git CLI tool plus a completely functional and awesome gitk graphical interface. I've been using that for a full year (including git-svn) and it's been working completely fine. (Of course it may have other limitations that I'm not aware of, but I haven't come across them).

Most people who stay on windows do not find cygwin or even CLI tools an 
acceptable solution. I think it is fair to say that git is a very unixy 
tool, and windows not its strong point when compared against bzr or hg 
(and I say that as someone who find git UI significantly better and 
easier then either bzr or hg). The situation on windows is consistantly 
improving though, with tools like smartgit which feel much more native 
to the typical windows user/developer.

cheers,

David


From _ at lvh.cc  Tue Jul  5 06:31:31 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:31:31 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E12E5E1.7080309@silveregg.co.jp>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
Message-ID: <CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>

On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp> wrote:

> Most people who stay on windows do not find cygwin or even CLI tools an
> acceptable solution.
>

So, the argument isn't that git is worse on Windows than it is on *nix: it's
just that Windows users don't want to use CLI tools?


> cheers,
> David
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/b7c78a6e/attachment.htm 

From _ at lvh.cc  Tue Jul  5 08:18:18 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 14:18:18 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <4E12A2EC.7020906@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
Message-ID: <CAE_Hg6ZZ_1ghQE-NFQ43DWLu6in3+5ewZgRgWjr_vibnRdESHQ@mail.gmail.com>

On Tue, Jul 5, 2011 at 7:36 AM, Johan Rydberg <johan.rydberg at edgeware.tv>wrote:

> On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
> > In order to have at least some anecdotal evidence --
> I've had some patched rejected, probably on sound basis.  But the
> experience always leave you with a feeling that you got stabbed.
>

Yes, this is terrible. How can we fix it?


> Sometimes it _is_ be better to get some basic functionality in
> place, instead of arguing about how things should be done "the
> right way".
>
>  From time to time you find a ticket that you want fixed, and start
> working on it, but end up never submitting it since you already
> know that even if it fixes the problem it will be shot down, since
> it doesn't do it this or that way.
>

Well, I think everyone would agree that a system where it's easier to pick
up such a half-finished thing that just needs some love would be better,
regardless of whether that unfinished work should go into twisted or not.
Right?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/06e2c867/attachment.htm 

From _ at lvh.cc  Tue Jul  5 08:32:36 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 14:32:36 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
Message-ID: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>

Hi,


In doing twisted.positioning I find my self writing a bunch of code in ways
I would ordinarily write it differently, because we have to support 2.4
still (when is that going away? Isn't the most recent RHEL 2.6 already?).

Is there some way to register that so that as soon as we stop supporting
2.4, we can make a lot of code a lot prettier? For certain functions such as
any/all, perhaps a twisted.python._backports (with the explicit mention that
code in backports will go away as soon as the version it's built to work
around is no longer supported). That way, as soon as you support 2.5 (which
has any/all), you just remove it from _backports, see which tests break,
remove the imports, run tests again, commit. Woo!

Of course, _backports is obviously not a solution for everything, since not
every language feature can be fixed by defining a class or a function
somewhere.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/15d74c5b/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul  5 09:34:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 13:34:26 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>

On 12:32 pm, _ at lvh.cc wrote:
>Hi,
>
>
>In doing twisted.positioning I find my self writing a bunch of code in 
>ways
>I would ordinarily write it differently, because we have to support 2.4
>still (when is that going away? Isn't the most recent RHEL 2.6 
>already?).
>
>Is there some way to register that so that as soon as we stop 
>supporting
>2.4, we can make a lot of code a lot prettier? For certain functions 
>such as
>any/all, perhaps a twisted.python._backports (with the explicit mention 
>that
>code in backports will go away as soon as the version it's built to 
>work
>around is no longer supported). That way, as soon as you support 2.5 
>(which
>has any/all), you just remove it from _backports, see which tests 
>break,
>remove the imports, run tests again, commit. Woo!
>
>Of course, _backports is obviously not a solution for everything, since 
>not
>every language feature can be fixed by defining a class or a function
>somewhere.

Previously we've added things like this - socket.inet_pton, set, even 
dict long, long ago - to twisted.python.compat, which sounds similar to 
the _backports module you suggest.

I didn't think of the addition of such things to a module as 
"registration" or I would have mentioned this when you asked before on 
IRC. :)

Jean-Paul


From _ at lvh.cc  Tue Jul  5 09:41:25 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 15:41:25 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
Message-ID: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>

By "registration" I meant  stuff where we could put reminders that some code
can be cleaned up now.

Perhaps that means "ticket", if there's some way to mark a ticket as being
only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/9cbab09a/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul  5 10:01:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 14:01:29 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
	<CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
Message-ID: <20110705140129.3761.1218754888.divmod.xquotient.13@localhost.localdomain>

On 01:41 pm, _ at lvh.cc wrote:
>By "registration" I meant  stuff where we could put reminders that some 
>code
>can be cleaned up now.
>
>Perhaps that means "ticket", if there's some way to mark a ticket as 
>being
>only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?

In the past we haven't tried too hard to do this kind of tracking, 
because we have actually avoided going out of our way to break Twisted 
in lots of ways for older versions of Python after we stop supporting 
them.

Going through the codebase and making changing things to use Python 2.5 
features *just* because we don't have to make the code run on Python 2.4 
anymore is to be avoided.  Instead, code can be updated to Python 2.5 
syntax and APIs where changes are being made anyway and/or where the 
Python 2.5 version otherwise reduces the maintenance burden.  Otherwise, 
it's just busywork from which no one really benefits.

Jean-Paul


From itamar at itamarst.org  Tue Jul  5 10:03:40 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 05 Jul 2011 10:03:40 -0400
Subject: [Twisted-Python] Ways to register stuff only done for backwards
 compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <1309874620.13270.62.camel@blake>

On Tue, 2011-07-05 at 14:32 +0200, Laurens Van Houtven wrote:

> In doing twisted.positioning I find my self writing a bunch of code in
> ways I would ordinarily write it differently, because we have to
> support 2.4 still (when is that going away? Isn't the most recent RHEL
> 2.6 already?).

The plan was to drop 2.4 as of 11.2. At the rate things are going
(someone review #5118 so I can merge it and put up #5063 for review!) we
may not have 11.2 this year, only 11.1... in which case I'd be happy to
drop 2.4 in this release. Others may disagree - discuss it here:

http://twistedmatrix.com/trac/ticket/4962



From adi at roiban.ro  Tue Jul  5 13:51:24 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 05 Jul 2011 20:51:24 +0300
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
Message-ID: <1309888284.4006.16.camel@pp>

Hi,

I have been using Twisted for about 6 months and looking for ways in
which I could help the project.

I just read the announcement and I would like to volunteer for one of
the Twisted jobs.

I am familiar with bzr and git and for the beginning I would like to
start with maintaining the version control mirrors (bzr and git) and if
this will not consume all my free time, I would also like to take care
of buildbot master and slaves (or some other job that you consider is
more important).

Beside the job description, I was thinking that creating repositories
mirrors on Github/Gitorious could be useful. 
The Launchpad BZR mirror seems to be functional. 

Hoping that I can be useful, please let know if my application is
accepted.

Cheers,
--
Adi Roiban



From _ at lvh.cc  Tue Jul  5 13:56:18 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 19:56:18 +0200
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1309888284.4006.16.camel@pp>
References: <1309888284.4006.16.camel@pp>
Message-ID: <CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>

Hey,

Cool, thanks for offering to chip in!

I think buildbot management is more important, since I can manage github +
wolfwood git mirrors pretty much on my own, and the launchpad mirror looks
permanently up to snuff.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/8d0f38e2/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul  5 15:22:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 19:22:22 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
Message-ID: <20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>

On 05:56 pm, _ at lvh.cc wrote:
>Hey,
>
>Cool, thanks for offering to chip in!
>
>I think buildbot management is more important, since I can manage 
>github +
>wolfwood git mirrors pretty much on my own, and the launchpad mirror 
>looks
>permanently up to snuff.

*Keeping* the Launchpad bzr mirror up to date is still a job we're 
trying to assign (that's why it's on the jobs page).

Beyond that, it would be nice if more than just trunk were on Launchpad. 
As it is now, if you want to use Launchpad, you can't work on any 
branches people have made in svn.

Jean-Paul


From glyph at twistedmatrix.com  Tue Jul  5 16:28:26 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 5 Jul 2011 16:28:26 -0400
Subject: [Twisted-Python] [Bug 775213] pymsnt 0.11.3-5 fails to start
	due to broken python-twisted-words 10.2.0-1 (AttributeError:
	'module' object has no attribute '_parse')
In-Reply-To: <20110705014856.GC29199@myrada.ghic.org>
References: <20110501232153.18283.2482.malonedeb@soybean.canonical.com>
	<20110627201500.27313.75159.malone@chaenomeles.canonical.com>
	<20110629164918.GB10717@selthys.ghic.org>
	<9DE51782-4495-4826-9275-F953F9485EE2@twistedmatrix.com>
	<20110703080129.GA13029@myrada.ghic.org>
	<C1DC24D9-E8A9-4C8D-9C7D-9475C6AE2328@twistedmatrix.com>
	<20110705014856.GC29199@myrada.ghic.org>
Message-ID: <9A9CF765-905C-43D2-B7C0-EC47416F83F2@twistedmatrix.com>


On Jul 4, 2011, at 9:48 PM, Diane Trout wrote:

>> Almost - I should have mentioned <http://twistedmatrix.com/trac/wiki/TwistedDevelopment> and <http://twistedmatrix.com/trac/wiki/ReviewProcess> first.
>> 
>> When you put that branch on Launchpad, you'll need to put #4799 into review as well, as per that process; just link to the branch.  Also, make it clear that you've volunteered for this work somewhere public, ideally in a ticket comment.
>> 
>> Thanks again!  Please don't hesitate to get in touch if you need any further guidance.
> 
> Ok I have linked to my branch in http://twistedmatrix.com/trac/ticket/4799
> 
> Does that look right? is the next step to put "review" into 4799's keywords field?

The next step is actually to make a backported patch specifically for <http://tm.tl/4799>, and get that merged into a release branch.  The idea with the release ticket is that it's for the release notes and final QA; all the actual code should be complete in individual feature tickets first.

I'm sorry - now I'm noticing that the workflow on the linked tickets (for example <http://tm.tl/4786>) is actually wrong for a maintenance release, as there's no cloned bug to indicate the backport.  If I recall correctly, /branches/releases/release-10.2.0-4651-2 is the branch to merge things into for a 10.2.x maintenance release.

At this point it would probably be good to get on the mailing list <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python> and discuss these issues more publicly; someone else with more experience with the release toolchain can provide you more specific advice, and you'll get faster responses than from me personally.  I'm Cc:ing this message to that list so that there will be some context when the discussion starts.

I was going to recommend the IRC channel too, but I am told you've already been there; I hope I'll run into you there :).

> Also I don't know how to get the code changes out of launchpad and into your svn repository.

A committer will do that, based on your branch.  You may have to use our all-branches mirror to continue work, as Launchpad only mirrors trunk.  Or, you may become an committer; we normally ask that people fix a few smaller bugs first, but given that you're volunteering to manage a release we may expedite that process :).

> Diane

Once again I _really_ appreciate your time here.  As you can probably tell, we rarely have the contributor bandwidth to do maintenance releases and so we're somewhat rusty at it.  We like to provide a smooth upgrade process for our users though, so when we manage to get this pushed through it will be a big benefit to our XMPP users.

Thanks,

-glyph



From glyph at twistedmatrix.com  Tue Jul  5 16:36:35 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 5 Jul 2011 16:36:35 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E12A2EC.7020906@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
Message-ID: <772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>


On Jul 5, 2011, at 1:36 AM, Johan Rydberg wrote:

> On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
>> In order to have at least some anecdotal evidence --
> I've had some patched rejected, probably on sound basis.  But the
> experience always leave you with a feeling that you got stabbed.

We're always very grateful for contributions.  I'm very sad to hear that you feel like you "got stabbed".

> Sometimes it _is_ be better to get some basic functionality in place, instead of arguing about how things should be done "the right way".

Can you point to a specific ticket where you think this was the case?  I have this same general feeling, but pretty much all of the reviews I found when I went looking for specific examples included at least some significant coding-standard, documentation, and test coverage problems.  If we can find more specific examples, perhaps we can prevent this from recurring.

I do agree that we don't want to block every ticket on the absolute best possible implementation; but, allowing changes that don't have test and documentation coverage is a recipe for creating an unmaintainable mess.  Trust me, having dealt with Twisted in both modes, it's harder to get a patch into a release if the requirement is "demonstrate to everyone that it doesn't break everything without tests and documentation".  It's just that it moves the work from you, the contributor, to a special hell that the release manager inhabits for months of painful pre-release debugging, or users who notice that all their applications are broken and file lots of bugs.

> From time to time you find a ticket that you want fixed, and start working on it, but end up never submitting it since you already know that even if it fixes the problem it will be shot down, since it doesn't do it this or that way.

In these cases it would be best to file the ticket and describe your potential solution before implementing it.  You can even put the 'review' keyword on it to indicate that you want feedback from a contributor before proceeding.

-glyph



From ziga.seilnacht at gmail.com  Tue Jul  5 16:51:19 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Tue, 05 Jul 2011 22:51:19 +0200
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
Message-ID: <4E137947.9030806@gmail.com>

On 5.7.2011 1:49, James Y Knight wrote:
>
> On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:
>
>>  Hello from the Twisted server operations team,
>>
>>  The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).
>>
>>  We will send another notice as soon as things are back to normal.
>
> I believe it should be functional now. Please advise if anything seems broken. :)
>
> James
>

Hello,

It looks like the subversion commit mails to twisted-commits at twistedmatrix.com
list are not getting through for about a day. It would be great if they could
be restored, I find them convenient to keep up with the Twisted development.

Regards,
Ziga


From sean.m.ochoa at gmail.com  Tue Jul  5 17:51:50 2011
From: sean.m.ochoa at gmail.com (Sean Ochoa)
Date: Tue, 5 Jul 2011 14:51:50 -0700
Subject: [Twisted-Python] How do twisted and multiprocessing.Process create
	zombies?
Message-ID: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>

Using twisted loopingcall, multiprocessing.Process, and
multiprocessing.Queue; is it possible to create a zombie process. And, if
so, then how?

 -- bitcycle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/848f5170/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul  5 18:00:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 22:00:35 -0000
Subject: [Twisted-Python] How do twisted and multiprocessing.Process
	create	zombies?
In-Reply-To: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
References: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
Message-ID: <20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>

On 09:51 pm, sean.m.ochoa at gmail.com wrote:
>Using twisted loopingcall, multiprocessing.Process, and
>multiprocessing.Queue; is it possible to create a zombie process. And, 
>if
>so, then how?

Uh, why would you want to create zombies?

Since Twisted installs a SIGCHLD handler, it's not unlikely that non- 
cooperating libraries that create subprocesses, such as the 
multiprocessing module, will miss their exit notification, leaving a 
zombie.

If you *don't* want zombies, use reactor.spawnProcess (or a library on 
top of it, like Ampoule) instead.

Jean-Paul


From kevin.horn at gmail.com  Tue Jul  5 18:19:53 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 5 Jul 2011 17:19:53 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
Message-ID: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:31 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp> wrote:
>
>> Most people who stay on windows do not find cygwin or even CLI tools an
>> acceptable solution.
>>
>
> So, the argument isn't that git is worse on Windows than it is on *nix:
> it's just that Windows users don't want to use CLI tools?
>
>
>> cheers,
>> David
>>
>
> cheers
> lvh
>
>
Not in my opinion.  I find hg, bzr, and svn all easier to use on Windows
than git, and I use them all from the command line.

For me the problem is that, while bash is certainly a superior "language"
than Windows command language (a la cmd.exe),
bash does not always map to Windows concepts/assumptions very nicely.  This
often leads to things occurring in unexpected
(or at least unintuitive) ways (for Win32 users).  Even though I use bash
daily on Linux machines, I find using bash on Win32 painful
(yes, even more painful than cmd.exe, which is really saying something!).

Git requires bash.  This makes it painful for me (on Windows).

Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad as
it _used_ to be.  It's functional.  It works.  But it is difficult to deal
with,
and a lot of Windows users I have talked to (as well as myself, of course)
just don't like using it.

I'm not necessarily saying that that means Twisted shouldn't use Git.  But
it _should_ be considered as a factor.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/aebc2665/attachment-0001.htm 

From ivan at ludios.org  Tue Jul  5 18:26:28 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Tue, 5 Jul 2011 22:26:28 +0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>

On Tue, Jul 5, 2011 at 22:19, Kevin Horn <kevin.horn at gmail.com> wrote:
> Git requires bash.? This makes it painful for me (on Windows).

In what sense? You can run git from cmd.exe, without having to deal
with bash.  (You're not required to use 'Git Bash'.)

> Also, Git _is_ worse on Windows than it is on *nix.? It's just not as bad as
> it _used_ to be.? It's functional.? It works.? But it is difficult to deal
> with,
> and a lot of Windows users I have talked to (as well as myself, of course)
> just don't like using it.

Is there anything in specific that is difficult?  I haven't had
Windows-specific problems with Git on Windows, and I've been using it
a lot.

Ivan


From sean.m.ochoa at gmail.com  Tue Jul  5 18:36:25 2011
From: sean.m.ochoa at gmail.com (Sean Ochoa)
Date: Tue, 5 Jul 2011 15:36:25 -0700
Subject: [Twisted-Python] How do twisted and multiprocessing.Process
 create zombies?
In-Reply-To: <20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>
References: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
	<20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>
Message-ID: <CAFmVOAtkdeKSuM6_UQGYxQ+AV1DfXF+CvyVxkKbCXDL-wtE7jQ@mail.gmail.com>

I like glyph's answer.  :)

http://stackoverflow.com/questions/6589225/how-do-twisted-and-multiprocessing-process-create-zombies/6589440#6589440



On Tue, Jul 5, 2011 at 3:00 PM, <exarkun at twistedmatrix.com> wrote:

> On 09:51 pm, sean.m.ochoa at gmail.com wrote:
> >Using twisted loopingcall, multiprocessing.Process, and
> >multiprocessing.Queue; is it possible to create a zombie process. And,
> >if
> >so, then how?
>
> Uh, why would you want to create zombies?
>
> Since Twisted installs a SIGCHLD handler, it's not unlikely that non-
> cooperating libraries that create subprocesses, such as the
> multiprocessing module, will miss their exit notification, leaving a
> zombie.
>
> If you *don't* want zombies, use reactor.spawnProcess (or a library on
> top of it, like Ampoule) instead.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Sean | (206) 962-7954
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/4d734ee5/attachment.htm 

From kevin.horn at gmail.com  Tue Jul  5 21:57:38 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 5 Jul 2011 20:57:38 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>
Message-ID: <CA+U=zK3fz+cfWsktvDq5yFmN7Wq9NnBazsx15X1u9vPkfc-0Bw@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:26 PM, Ivan Kozik <ivan at ludios.org> wrote:

> On Tue, Jul 5, 2011 at 22:19, Kevin Horn <kevin.horn at gmail.com> wrote:
> > Git requires bash.  This makes it painful for me (on Windows).
>
> In what sense? You can run git from cmd.exe, without having to deal
> with bash.  (You're not required to use 'Git Bash'.)
>
>
Interesting.  I was told (and had read) that it _was_ required.  So I've
been
operating under that assumption.  If you can run it in a cmd.exe window that
_might_ relieve one of my pain points.


> > Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
> as
> > it _used_ to be.  It's functional.  It works.  But it is difficult to
> deal
> > with,
> > and a lot of Windows users I have talked to (as well as myself, of
> course)
> > just don't like using it.
>
> Is there anything in specific that is difficult?  I haven't had
> Windows-specific problems with Git on Windows, and I've been using it
> a lot.
>
> Ivan
>
>
Nothing terribly specific comes to mind, as I don't _use_ git very often.

Only one of the projects I have ever contributed to uses git, and they
just switched recently (from Mercurial, which makes very little sense to me
as they are just about feature-equivalent).  The others all use Mercurial,
with
the exception of Twisted.  So when I started learning about DVCS, Mercurial
was pretty much my introduction (aside: it seems to me that people in
general
seem to prefer whatever DVCS they were originally introduced to).

Every couple of months I pull down a "new" release of git or TortoiseGit or
whatever
and tinker around with it, but it just isn't very nice compared to
Mercurial.  Maybe
it will be someday.

And it's not that anything is particularly _difficult_, so much as annoying.
I find the CLI interface weird and clunky.  I recall thinking some of the
design
decisions were not particularly good (though it's been long enough that I
can't
recall what they were exactly...and I have some complaints about the design
of
pretty much every DVCS out there, so...). These aren't Windows-specific
issues
of course, but when you add the Windows-specific issues on top of them, it
just
makes git that much worse to deal with.

Of course, this is entirely subjective, and is totally my own opinion.
Maybe the
next time I update git it will annoy me less.

As far as specific Windows-related issues, here's what I can come up with.
These
are all pretty vague, I'm afraid...

- Let's start with installing.  It would be really nice to be able to go to
a website, download
a package or archive or something, read some instructions and install git.
Preferably with
Tortoise-X-like Explorer shell integration (though I can live without
that).  I have never been
able to do that.  Instead, it's try the above, have it not work, search
Google for a bunch of
tutorial-style blog posts, try a bunch of stuff, maybe edit or move some
files in whichever
of several distributions I've had to download, and spend at least a couple
of hours getting
things working.  At this point I'm already annoyed with git and I haven't
even started using it yet.

- Now I'm going to check things out.  OK, fine.  First hurdle is that
terminology is different from
what I'm used to, though that's hardly Git's fault, and I can deal with
that.  But in order to deal
with the change in terminology, coming from Mercurial, I'd really like to
see some nice online help.
Last I checked, git totally failed in this area, and was noticeably worse on
Windows than on *nix.
(This was maybe 3 or 4 months ago).  Ok, so now I'm having to search web/man
pages for how to
use git properly.  Admittedly, some of this is necessary anyway for
something as complex as
a DVCS system, but it shouldn't be necessary for basic commands.  I also
seem to recall being
annoyed by syntax for various commands actually being slightly _different_
on Windows than
on *nix, but I can't say definitely that that was the case now (it was a
long time ago, my
memory is hazy, and I may have just misunderstood something).  I have no
idea if this is
still a problem (assuming it ever really was).

- I definitely miss Mercurial's friendly little warnings about when I might
be about to screw
things up.  I doubt git will ever have anything like this.  It seems
antithetical to the git mindset.

- Git just seems like it's second class citizen in the git world (this is
true of a _huge_ number
of open source projects, so it isn't just git, but I have a whole other rant
about why this is a
Bad Thing [tm]  ).  A lot of complaints about git on Win32 (which I find to
be pretty valid
complaints) I see answered with a sneer and something like: "Oh sure, but
that's what you
get for using _Windows_."

To sum up, I use both Windows and Linux.  That is unlikely to change any
time soon.  I want my
tools to work nicely and be polished in both environments.  Git has not
impressed me as being
able to do this yet.  Even if it ever does get to this point, I still
probably won't like it as much as
Mercurial, just because hg is what I've become used to, and git doesn't
offer much that hg
doesn't already have.

Well, this is already way longer than I had intended it to be...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110705/dc73a9a5/attachment.htm 

From jstpierre at mecheye.net  Tue Jul  5 22:15:09 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 5 Jul 2011 22:15:09 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110705090250.GA14081@ubuntu>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
	<20110705090250.GA14081@ubuntu>
Message-ID: <CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:02 AM, Alessandro Dentella <sandro at e-den.it> wrote:
> On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
>> re: Mercurial, I didn't like it when I used it. If someone can tell me
>> how to do this[3] in hg, I'd be more inclined to play along. And that
>
> I do this sort of things using mercurial queues. I pile up patches in a
> queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
> fold it with a later one (hg qfold fix_header2).

Hm. So it's like quilt? Are patch queues real commits (changesets,
revisions, whatever), so I can log and blame and grep them while I'm
working?

> While the queue is not yet committed I can change the commit log of a patch
> in a simple way.
>
> ? hg qnew -f fix1 -m "this fixed issue 1"
> ? hg qnew -I debian/control -m "fix control"
> ? hg qnew -f fix1.1 -m "forgot something in issue 1"
> ? hg qgoto fix1
> ? hg qfold fix1.1 ?# This concatenate the 2 comments"
> ? hg qrefresh -e ? # fix your comment as you like it
> ? hg qpush
> ? hg qfinish -a ? # commit all queues currently applied

Neato. This requires me to be in a queue *before* I fix my patch, right?

> sandro
> *:-)
>
> --
> Sandro Dentella ?*:-)
> http://www.reteisi.org ? ? ? ? ? ? Soluzioni libere per le scuole
> http://sqlkit.argolinux.org ? ? ? ?SQLkit home page - PyGTK/python/sqlalchemy
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
?Jasper


From david at silveregg.co.jp  Wed Jul  6 03:18:58 2011
From: david at silveregg.co.jp (David)
Date: Wed, 06 Jul 2011 16:18:58 +0900
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <4E140C62.4000105@silveregg.co.jp>

On 07/06/2011 07:19 AM, Kevin Horn wrote:
> On Tue, Jul 5, 2011 at 5:31 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>
>     On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp
>     <mailto:david at silveregg.co.jp>> wrote:
>
>         Most people who stay on windows do not find cygwin or even CLI
>         tools an
>         acceptable solution.
>
>
>     So, the argument isn't that git is worse on Windows than it is on
>     *nix: it's just that Windows users don't want to use CLI tools?
>
>         cheers,
>         David
>
>     cheers
>     lvh
>
>
> Not in my opinion.  I find hg, bzr, and svn all easier to use on Windows
> than git, and I use them all from the command line.

But I think you will think the same on unix, that is you will prefer 
hg/bzr to git on unix as well.

I don't think someones will prefer hg over git on windows and prefer git 
over hg on unix, frankly. As for which is simpler, I think those 
differences are much more superficial than people want to think, and 
some concepts introduced in hg/bzr for simplicity sake actually harmful 
in the long term (e.g. natural revision number, especially as used in 
bzr). Git UI is not super consistent, but neither is hg as soon as you 
use e.g. named branches and bookmarks.

cheers,

David


From sandro at e-den.it  Wed Jul  6 05:03:14 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 6 Jul 2011 11:03:14 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
	<20110705090250.GA14081@ubuntu>
	<CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>
Message-ID: <20110706090314.GA2929@ubuntu>

On Tue, Jul 05, 2011 at 10:15:09PM -0400, Jasper St. Pierre wrote:
> On Tue, Jul 5, 2011 at 5:02 AM, Alessandro Dentella <sandro at e-den.it> wrote:
> > On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
> >> re: Mercurial, I didn't like it when I used it. If someone can tell me
> >> how to do this[3] in hg, I'd be more inclined to play along. And that
> >
> > I do this sort of things using mercurial queues. I pile up patches in a
> > queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
> > fold it with a later one (hg qfold fix_header2).
> 
> Hm. So it's like quilt? 

I think so

> Are patch queues real commits (changesets,
> revisions, whatever), so I can log and blame and grep them while I'm
> working?

yes for all 3 (log, blame, grep)

> > While the queue is not yet committed I can change the commit log of a patch
> > in a simple way.

if the patch is called my_patch1:

  $ hg goto my_patch1
  $ hg qrefresh -e (open editor to change edit log)

hg qrefresh alone would just incorporate all modification to working
directory in the patch, 

before committing you can anyhow keep all patches in a separate repository
(hg qinit will initialize it for you. I personally don't use it though).

If you use such a second repository I guess you can simply share that with
other people too, but I'm not using this workflow.

> >
> > ? hg qnew -f fix1 -m "this fixed issue 1"
> > ? hg qnew -I debian/control -m "fix control"
> > ? hg qnew -f fix1.1 -m "forgot something in issue 1"
> > ? hg qgoto fix1
> > ? hg qfold fix1.1 ?# This concatenate the 2 comments"
> > ? hg qrefresh -e ? # fix your comment as you like it
> > ? hg qpush
> > ? hg qfinish -a ? # commit all queues currently applied
> 
> Neato. This requires me to be in a queue *before* I fix my patch, right?

that's simpler. Otherwise you create a second patch and subsequently fold
them toghether.

Using a third part application called qct (that works also on git and some
other I believe) you can also cherry pick single diffs in a single patch to
be incorporated in a changeset. I use this a lot to keep the changeset as
clean as possible.


[disclaimer]
I'm not an expert of git, so my comparison should not be taken
seriously. It's true that all the time I use git I find it more convoluted than
mercurial, and I always thought it was an historical heritage.


sandro
*:-)


-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy


From _ at lvh.cc  Wed Jul  6 06:35:19 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 6 Jul 2011 12:35:19 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>

On Wed, Jul 6, 2011 at 12:19 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
> as it _used_ to be.  It's functional.  It works.  But it is difficult to
> deal with,
> and a lot of Windows users I have talked to (as well as myself, of course)
> just don't like using it.
>
> I'm not necessarily saying that that means Twisted shouldn't use Git.  But
> it _should_ be considered as a factor.
>
> Kevin Horn
>

Gotcha, thanks.

I've been told that hg is a lot more pleasant on Windows, (and you appear to
echo that), and hg-git manages to be a damn-near 1:1 mapping. Have you tried
that?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110706/a3989564/attachment.htm 

From jml at mumak.net  Wed Jul  6 06:43:57 2011
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 6 Jul 2011 11:43:57 +0100
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
	<CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
Message-ID: <CAHZ8tna3dBG6Vtn4qgYw6dr4maxH26YP0OY=wiJxQk7ffrxALA@mail.gmail.com>

On Tue, Jul 5, 2011 at 2:41 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> By "registration" I meant? stuff where we could put reminders that some code
> can be cleaned up now.
>
> Perhaps that means "ticket", if there's some way to mark a ticket as being
> only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?
>

Jp's excellent points aside, could we just use the code itself to do
this? Whenever you see something that looks overly complicated and it
turns out that that complexity is there to provide support for older
Pythons, add a comment saying so. "2.3" is fairly easy to grep for,
and it's almost always a good idea to explain the motive behind ugly
code.

jml


From johan.rydberg at edgeware.tv  Wed Jul  6 07:10:21 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 06 Jul 2011 13:10:21 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
Message-ID: <4E14429D.3060403@edgeware.tv>

On 7/5/11 10:36 PM, Glyph Lefkowitz wrote:
>
> Can you point to a specific ticket where you think this was the case?  I have this same general feeling, but pretty much all of the reviews I found when I went looking for specific examples included at least some significant coding-standard, documentation, and test coverage problems.  If we can find more specific examples, perhaps we can prevent this from recurring.
I was mostly thinking about the persistent connection functionality for
twisted.web.client.Agent.

Maybe Twisted would benefit more from having that functionality in place,
than having the super-perfect API between Agent and HTTP parser.

> I do agree that we don't want to block every ticket on the absolute best possible implementation; but, allowing changes that don't have test and documentation coverage is a recipe for creating an unmaintainable mess.
I agree.

-- 
Johan Rydberg
Product Designer

Edgeware AB
M?ster Samuelsgatan 56
SE-111 21 Stockholm, Sweden



From itamar at itamarst.org  Wed Jul  6 08:04:16 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 06 Jul 2011 08:04:16 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <4E14429D.3060403@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv>
Message-ID: <1309953856.13270.84.camel@blake>

On Wed, 2011-07-06 at 13:10 +0200, Johan Rydberg wrote:

> I was mostly thinking about the persistent connection functionality
> for twisted.web.client.Agent.

We definitely want this to get in, this was a large part of the
motivation for Agent in the first place.

> Maybe Twisted would benefit more from having that functionality in
> place, than having the super-perfect API between Agent and HTTP
> parser.

The goal is not so much a perfect API as something we won't have to
deprecate soon after because we realize there are some requirements that
can't be addressed in a backwards compatible way. In this case, the
cookie, proxy and other agent wrappers that have been created mean we
now have a better understanding of what the Agent API looks like from a
higher level, which should help.



From foom at fuhm.net  Wed Jul  6 10:48:43 2011
From: foom at fuhm.net (James Y Knight)
Date: Wed, 6 Jul 2011 10:48:43 -0400
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>


On Jul 5, 2011, at 8:32 AM, Laurens Van Houtven wrote:
> In doing twisted.positioning I find my self writing a bunch of code in ways I would ordinarily write it differently, because we have to support 2.4 still (when is that going away? Isn't the most recent RHEL 2.6 already?).
> 
> Is there some way to register that so that as soon as we stop supporting 2.4, we can make a lot of code a lot prettier? For certain functions such as any/all, perhaps a twisted.python._backports (with the explicit mention that code in backports will go away as soon as the version it's built to work around is no longer supported). That way, as soon as you support 2.5 (which has any/all), you just remove it from _backports, see which tests break, remove the imports, run tests again, commit. Woo!
> 
> Of course, _backports is obviously not a solution for everything, since not every language feature can be fixed by defining a class or a function somewhere.

Yes, we've done that many times before, in twisted.python.compat. (that should probably be an _ module now; it has always been treated as such, but it's not named appropriately.)

From kevin.horn at gmail.com  Wed Jul  6 15:08:36 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 6 Jul 2011 14:08:36 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
Message-ID: <CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>

On Wed, Jul 6, 2011 at 5:35 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Wed, Jul 6, 2011 at 12:19 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
>> as it _used_ to be.  It's functional.  It works.  But it is difficult to
>> deal with,
>> and a lot of Windows users I have talked to (as well as myself, of course)
>> just don't like using it.
>>
>> I'm not necessarily saying that that means Twisted shouldn't use Git.  But
>> it _should_ be considered as a factor.
>>
>> Kevin Horn
>>
>
> Gotcha, thanks.
>
> I've been told that hg is a lot more pleasant on Windows, (and you appear
> to echo that), and hg-git manages to be a damn-near 1:1 mapping. Have you
> tried that?
>
> cheers
> lvh
>
>
I've been told the same thing, by someone who _really_ didn't want to switch
a project to git and got overruled.  He indicated that using hg-git pretty
much fixed all his complaints.

I haven't used it myself, though if I ever need to do any serious work on a
large project using git, I certainly intend to.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110706/4bd25d4e/attachment.htm 

From exarkun at twistedmatrix.com  Wed Jul  6 15:44:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 06 Jul 2011 19:44:56 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1309888284.4006.16.camel@pp>
References: <1309888284.4006.16.camel@pp>
Message-ID: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>

On 5 Jul, 05:51 pm, adi at roiban.ro wrote:
>Hi,
>
>I have been using Twisted for about 6 months and looking for ways in
>which I could help the project.
>
>I just read the announcement and I would like to volunteer for one of
>the Twisted jobs.
>
>I am familiar with bzr and git and for the beginning I would like to
>start with maintaining the version control mirrors (bzr and git) and if
>this will not consume all my free time, I would also like to take care
>of buildbot master and slaves (or some other job that you consider is
>more important).
>
>Beside the job description, I was thinking that creating repositories
>mirrors on Github/Gitorious could be useful.
>The Launchpad BZR mirror seems to be functional.
>
>Hoping that I can be useful, please let know if my application is
>accepted.

Hi Adi,

Thanks for volunteering.  It seems like the git mirror is well in hand. 
Perhaps you could take on just the bzr mirror for now.

The buildbot related jobs are also still open. :)  Send me a private 
email, or find me on Freenode, and we'll talk more about the details.

Thanks!

Jean-Paul


From adi at roiban.ro  Wed Jul  6 15:51:52 2011
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 06 Jul 2011 22:51:52 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
	Volunteer)
In-Reply-To: <20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
Message-ID: <1309981912.17239.33.camel@pp>

Hi,

To move things forwards, I would like to discuss the next actions for
BZR mirror. After the BZR mirror is done, I will look at git.


Launchpad BZR mirror
----------------

AFAIK Launchpad can only import a single svn branch, so importing all
twisted in-development branches in Launchpad is not possible.

Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
and the last change is : 15922. By exarkun on 2011-06-14.

Maybe Launchpad can be configured to mirror the SVN trunk branch,
instead of the BZR branch.
In this way Launchpad mirror will not depend on Twisted BZR mirror
errors.

Jonathan Lange, do you think this is a good idea?


Twisted self hosted BZR mirror
------------------------------

In the following days I will look at the current state of BZR mirror
available here http://svn.twistedmatrix.com/bzr/Twisted/ , document the
tools used for maintaining the mirror and try to reproduce a mirror on
my server.


Cheers,
Adi


On Tue, 2011-07-05 at 19:22 +0000, exarkun at twistedmatrix.com wrote: 
> On 05:56 pm, _ at lvh.cc wrote:
> >Hey,
> >
> >Cool, thanks for offering to chip in!
> >
> >I think buildbot management is more important, since I can manage 
> >github +
> >wolfwood git mirrors pretty much on my own, and the launchpad mirror 
> >looks
> >permanently up to snuff.
> 
> *Keeping* the Launchpad bzr mirror up to date is still a job we're 
> trying to assign (that's why it's on the jobs page).
> 
> Beyond that, it would be nice if more than just trunk were on Launchpad. 
> As it is now, if you want to use Launchpad, you can't work on any 
> branches people have made in svn.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at twistedmatrix.com  Wed Jul  6 15:58:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 06 Jul 2011 19:58:26 -0000
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <4E137947.9030806@gmail.com>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
	<4E137947.9030806@gmail.com>
Message-ID: <20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>

On 5 Jul, 08:51 pm, ziga.seilnacht at gmail.com wrote:
>On 5.7.2011 1:49, James Y Knight wrote:
>>
>>On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:
>>>  Hello from the Twisted server operations team,
>>>
>>>  The Twisted SVN server has run into some minor unexpected trouble 
>>>during routine system maintenance.  For now, SVN is in read-only 
>>>mode.  However, this shouldn't affect Trac, so feel free to keep 
>>>doing reviews and submitting patches in the meanwhile.  Hopefully 
>>>many of you are working from DVCS mirrors and will hardly notice the 
>>>interruption :-).
>>>
>>>  We will send another notice as soon as things are back to normal.
>>
>>I believe it should be functional now. Please advise if anything seems 
>>broken. :)
>>
>>James
>
>Hello,
>
>It looks like the subversion commit mails to twisted- 
>commits at twistedmatrix.com
>list are not getting through for about a day. It would be great if they 
>could
>be restored, I find them convenient to keep up with the Twisted 
>development.

Thanks for pointing this out.  I think James has fixed the issue.

Jean-Paul


From glyph at twistedmatrix.com  Wed Jul  6 17:27:55 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 6 Jul 2011 17:27:55 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <1309953856.13270.84.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv> <1309953856.13270.84.camel@blake>
Message-ID: <261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>


On Jul 6, 2011, at 8:04 AM, Itamar Turner-Trauring wrote:

> On Wed, 2011-07-06 at 13:10 +0200, Johan Rydberg wrote:
> 
>> I was mostly thinking about the persistent connection functionality
>> for twisted.web.client.Agent.
> 
> We definitely want this to get in, this was a large part of the
> motivation for Agent in the first place.

Looking at http://twistedmatrix.com/trac/ticket/3420 now, I see reviews with lots of functional issues and spec-compliance/correctness issues raised.  There are a few notes on the API as well, but without addressing the reviews there, the patch would just have incorrect behavior.  The few notes that are purely API aesthetics are mostly "make this private by default", which should be a trivial search-and-replace to fix.

>> Maybe Twisted would benefit more from having that functionality in
>> place, than having the super-perfect API between Agent and HTTP
>> parser.
> 
> The goal is not so much a perfect API as something we won't have to
> deprecate soon after because we realize there are some requirements that
> can't be addressed in a backwards compatible way. In this case, the
> cookie, proxy and other agent wrappers that have been created mean we
> now have a better understanding of what the Agent API looks like from a
> higher level, which should help.


That does sound a little like "the perfect API" to me :).  And, I'd be inclined to argue - if I could find even one example of a functionally-correct patch with sufficient docs and tests that had actually been held up because of API issues :).

-glyph

From albert.brandl at weiermayer.com  Thu Jul  7 03:33:26 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Thu, 7 Jul 2011 09:33:26 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>
References: <1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv> <1309953856.13270.84.camel@blake>
	<261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>
Message-ID: <20110707073326.GA2283@weiermayer.com>

On Wed, Jul 06, 2011 at 05:27:55PM -0400, Glyph Lefkowitz wrote:

> Looking at http://twistedmatrix.com/trac/ticket/3420 now, I see 
> reviews with lots of functional issues and spec-compliance/correctness 
> issues raised.  There are a few notes on the API as well, but without 
> addressing the reviews there, the patch would just have incorrect 
> behavior.

This is also my experience. When fixing issue 4378, I received mostly 
constructive feedback. 

There is much knowledge how to "do things" when working on the codebase, 
some of it implicit or spread over multiple documents. During review, 
this knowledge was conveyed in a tangible way, using a concrete piece of 
code.

I have to admit that it was a little discouraging to receive a long list 
of change requests. But the reviewers did a very good job explaining why 
things should be changed. This helped me to adapt my patches to fulfill 
the standards for the codebase. And it was very satisfying to finally 
have the patch accepted :-).

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From _ at lvh.cc  Thu Jul  7 07:15:29 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 7 Jul 2011 13:15:29 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
Message-ID: <CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>

I hear tickets is how you get things done: http://tm.tl/5181
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110707/3bf454fd/attachment.htm 

From exarkun at twistedmatrix.com  Thu Jul  7 07:52:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 07 Jul 2011 11:52:25 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
	<CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>
Message-ID: <20110707115225.3761.1883014190.divmod.xquotient.50@localhost.localdomain>

On 11:15 am, _ at lvh.cc wrote:
>I hear tickets is how you get things done: http://tm.tl/5181

But not this.  If we want *new* backwards compatibility stuff to be 
private, then give it a private name.  The old stuff is public though, 
so it should be treated how we treat public stuff.

Jean-Paul


From p.mayers at imperial.ac.uk  Thu Jul  7 09:28:57 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 07 Jul 2011 14:28:57 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
Message-ID: <4E15B499.2030206@imperial.ac.uk>

On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:

> Thanks for volunteering.  It seems like the git mirror is well in hand.

If so, can someone update this:

http://twistedmatrix.com/trac/wiki/GitMirror


From adi at roiban.ro  Thu Jul  7 12:25:56 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 07 Jul 2011 19:25:56 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <1309981912.17239.33.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp>
Message-ID: <1310055956.17239.116.camel@pp>

Hi,


LP BZR Mirror status
--------------------

Martin Pool enabled trunk import directly from SVN repo and the branch
is available here:
https://code.launchpad.net/~vcs-imports/twisted/trunk

The mirror is refreshed about every 5 to 6 hours.
Only trunk is available.


Own BZR Mirror
--------------

I have hacked a quick and dirty script for pulling / creating / deleting
all Twisted svn branches.

The code is here: http://pastebin.ubuntu.com/639582/

Synchronizing all branches takes about 41 minutes on an Intel Xeon 2.8G
CPU. It does not uses to much memory since each branch is pulled using a
different bzr pull process.

Pulling a single branch takes about 15 seconds, so maybe we the SVN repo
can have some commit hooks to execute 'bzr pull' in the right branch.

-----

Please let me know what do you think should be the next action for
resolving the bzr mirror issues?

-----
Cheers,
Adi

On Wed, 2011-07-06 at 22:51 +0300, Adi Roiban wrote:
> Hi,
> 
> To move things forwards, I would like to discuss the next actions for
> BZR mirror. After the BZR mirror is done, I will look at git.
> 
> 
> Launchpad BZR mirror
> ----------------
> 
> AFAIK Launchpad can only import a single svn branch, so importing all
> twisted in-development branches in Launchpad is not possible.
> 
> Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
> and the last change is : 15922. By exarkun on 2011-06-14.
> 
> Maybe Launchpad can be configured to mirror the SVN trunk branch,
> instead of the BZR branch.
> In this way Launchpad mirror will not depend on Twisted BZR mirror
> errors.
> 
> Jonathan Lange, do you think this is a good idea?
> 
> 
> Twisted self hosted BZR mirror
> ------------------------------
> 
> In the following days I will look at the current state of BZR mirror
> available here http://svn.twistedmatrix.com/bzr/Twisted/ , document the
> tools used for maintaining the mirror and try to reproduce a mirror on
> my server.
> 
> 
> Cheers,
> Adi
> 
> 
> On Tue, 2011-07-05 at 19:22 +0000, exarkun at twistedmatrix.com wrote: 
> > On 05:56 pm, _ at lvh.cc wrote:
> > >Hey,
> > >
> > >Cool, thanks for offering to chip in!
> > >
> > >I think buildbot management is more important, since I can manage 
> > >github +
> > >wolfwood git mirrors pretty much on my own, and the launchpad mirror 
> > >looks
> > >permanently up to snuff.
> > 
> > *Keeping* the Launchpad bzr mirror up to date is still a job we're 
> > trying to assign (that's why it's on the jobs page).
> > 
> > Beyond that, it would be nice if more than just trunk were on Launchpad. 
> > As it is now, if you want to use Launchpad, you can't work on any 
> > branches people have made in svn.
> > 
> > Jean-Paul
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sparkytwobillion at gmail.com  Fri Jul  8 10:36:56 2011
From: sparkytwobillion at gmail.com (sparky gmail)
Date: Fri, 08 Jul 2011 07:36:56 -0700
Subject: [Twisted-Python] Project Jobs
Message-ID: <4E171608.6020609@gmail.com>

Hello,

I am going through the process of learning Twisted.

I recently have been hired at a company that allows me to work on my own 
projects one day/wk.

Looking at the Project Jobs list for twisted I notice that there is a 
request for someone to handle
Ticket Spam. If you are still looking for someone to fulfill that spot I 
am more than happy to volunteer.

If you are open to that please let me know what the next step should be.

Best

sparky


From exarkun at twistedmatrix.com  Fri Jul  8 12:20:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Jul 2011 16:20:06 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310055956.17239.116.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
Message-ID: <20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>

On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>Hi,
>
>
>LP BZR Mirror status
>--------------------
>
>Martin Pool enabled trunk import directly from SVN repo and the branch
>is available here:
>https://code.launchpad.net/~vcs-imports/twisted/trunk
>
>The mirror is refreshed about every 5 to 6 hours.
>Only trunk is available.

Cool.
>
>Own BZR Mirror
>--------------
>
>I have hacked a quick and dirty script for pulling / creating / 
>deleting
>all Twisted svn branches.
>
>The code is here: http://pastebin.ubuntu.com/639582/
>
>Synchronizing all branches takes about 41 minutes on an Intel Xeon 2.8G
>CPU. It does not uses to much memory since each branch is pulled using 
>a
>different bzr pull process.
>
>Pulling a single branch takes about 15 seconds, so maybe we the SVN 
>repo
>can have some commit hooks to execute 'bzr pull' in the right branch.

I think getting the right hook set up to update just the right branch is 
what we want to focus on.  Presently svn and bzr are hosted on the same 
machine, which perhaps we can continue since this should bring the 
overhead of mirroring down.  There is even a little code in lp:twisted- 
trac-integration for determining which branch a changeset is on (at 
least for the branch creation changeset) which might help.
>
>Please let me know what do you think should be the next action for
>resolving the bzr mirror issues?

Do you think you can put together something to run from an svn post- 
commit hook to update just the single corresponding bzr branch?

Meanwhile I can try your synchronization code to see if it has better 
results than the current bzr svn-import based approach.

Thanks,
Jean-Paul


From ziga.seilnacht at gmail.com  Sat Jul  9 06:28:00 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sat, 09 Jul 2011 12:28:00 +0200
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>	<4E137947.9030806@gmail.com>
	<20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>
Message-ID: <4E182D30.6090107@gmail.com>

On 6.7.2011 21:58, exarkun at twistedmatrix.com wrote:
>
> Thanks for pointing this out.  I think James has fixed the issue.
>
> Jean-Paul
>

Great, thanks!

Regards,
Ziga


From adi at roiban.ro  Sat Jul  9 06:46:34 2011
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 09 Jul 2011 13:46:34 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
Message-ID: <1310208394.1987.214.camel@pp>

On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
[snip]
> >Pulling a single branch takes about 15 seconds, so maybe we the SVN 
> >repo
> >can have some commit hooks to execute 'bzr pull' in the right branch.
> 
> I think getting the right hook set up to update just the right branch is 
> what we want to focus on.  Presently svn and bzr are hosted on the same 
> machine, which perhaps we can continue since this should bring the 
> overhead of mirroring down.  There is even a little code in lp:twisted- 
> trac-integration for determining which branch a changeset is on (at 
> least for the branch creation changeset) which might help.

> >Please let me know what do you think should be the next action for
> >resolving the bzr mirror issues?
> 
> Do you think you can put together something to run from an svn post- 
> commit hook to update just the single corresponding bzr branch?

Yes. I will write the svn hooks for creating, updating and deleting the
mirrored branches. 

> Meanwhile I can try your synchronization code to see if it has better 
> results than the current bzr svn-import based approach.

You can also try to run a 5 minutes cron job for pulling just the trunk,
and another job for pulling each branch.

--
Adi



From exarkun at twistedmatrix.com  Sun Jul 10 00:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Jul 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1310270724.66.1700097717@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110710/1f83adfc/attachment.htm 

From jml at mumak.net  Sun Jul 10 12:27:11 2011
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 10 Jul 2011 17:27:11 +0100
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
	Volunteer)
In-Reply-To: <1309981912.17239.33.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp>
Message-ID: <CAHZ8tnapXTaGsqZTDeEOHSydeQoJAr3cRqXz7LELYVmx-rhZyg@mail.gmail.com>

On Wed, Jul 6, 2011 at 8:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> Hi,
>
> To move things forwards, I would like to discuss the next actions for
> BZR mirror. After the BZR mirror is done, I will look at git.
>
>
> Launchpad BZR mirror
> ----------------
>
> AFAIK Launchpad can only import a single svn branch, so importing all
> twisted in-development branches in Launchpad is not possible.
>
> Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
> and the last change is : 15922. By exarkun on 2011-06-14.
>
> Maybe Launchpad can be configured to mirror the SVN trunk branch,
> instead of the BZR branch.
> In this way Launchpad mirror will not depend on Twisted BZR mirror
> errors.
>
> Jonathan Lange, do you think this is a good idea?
>

I'm pretty sure that you can mirror arbitrary branches from a
Subversion repository.

One thing you could do is have a post_commit hook in the Twisted SVN
repo that creates import branches on Launchpad when needed and tells
Launchpad when branches have changed.

Oh, and yes I think it's a good idea.

Thanks for volunteering!

jml


From exarkun at twistedmatrix.com  Mon Jul 11 07:23:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 11 Jul 2011 11:23:25 -0000
Subject: [Twisted-Python] Project Jobs
In-Reply-To: <4E171608.6020609@gmail.com>
References: <4E171608.6020609@gmail.com>
Message-ID: <20110711112325.3761.2097913221.divmod.xquotient.756@localhost.localdomain>

On 8 Jul, 02:36 pm, sparkytwobillion at gmail.com wrote:
>Hello,
>
>I am going through the process of learning Twisted.
>
>I recently have been hired at a company that allows me to work on my 
>own
>projects one day/wk.
>
>Looking at the Project Jobs list for twisted I notice that there is a
>request for someone to handle
>Ticket Spam. If you are still looking for someone to fulfill that spot 
>I
>am more than happy to volunteer.
>
>If you are open to that please let me know what the next step should 
>be.

Hi sparky,

Yes, this job is still untaken.  Thanks very much for volunteering! :)

Let me know what your trac username is and I'll set you up with the 
appropriate permissions.  Then you can also edit the project jobs page 
and fill in your info for the spam handling job.

Thanks again,
Jean-Paul


From exarkun at twistedmatrix.com  Mon Jul 11 07:30:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 11 Jul 2011 11:30:07 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310208394.1987.214.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
Message-ID: <20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>

On 9 Jul, 10:46 am, adi at roiban.ro wrote:
>On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
>>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>[snip]
>> >Pulling a single branch takes about 15 seconds, so maybe we the SVN
>> >repo
>> >can have some commit hooks to execute 'bzr pull' in the right branch.
>>
>>I think getting the right hook set up to update just the right branch 
>>is
>>what we want to focus on.  Presently svn and bzr are hosted on the 
>>same
>>machine, which perhaps we can continue since this should bring the
>>overhead of mirroring down.  There is even a little code in 
>>lp:twisted-
>>trac-integration for determining which branch a changeset is on (at
>>least for the branch creation changeset) which might help.
>
>> >Please let me know what do you think should be the next action for
>> >resolving the bzr mirror issues?
>>
>>Do you think you can put together something to run from an svn post-
>>commit hook to update just the single corresponding bzr branch?
>
>Yes. I will write the svn hooks for creating, updating and deleting the
>mirrored branches.
>>Meanwhile I can try your synchronization code to see if it has better
>>results than the current bzr svn-import based approach.
>
>You can also try to run a 5 minutes cron job for pulling just the 
>trunk,
>and another job for pulling each branch.

I ran this (all-branches version) a few times over the weekend.  The 
first time, when there was lots of catching up to do, took about 3.5 
hours.  After that, it was about 30 minutes per run.  This does seem 
fast enough to do nightly, so I'll set that up until we have the push- 
based version.

Thanks,
Jean-Paul


From ilja.livenson at gmail.com  Tue Jul 12 03:38:08 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Tue, 12 Jul 2011 10:38:08 +0300
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
Message-ID: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>

Hi,

basically, $subj. I really like the DeferredStore concept introduced
in storm/twisted-integration, but it seems that that branch is lagging
behind on merging (for 2 years now). Any inside info, perhaps?

thanks,
Ilja


From jkakar at kakar.ca  Tue Jul 12 07:02:43 2011
From: jkakar at kakar.ca (Jamu Kakar)
Date: Tue, 12 Jul 2011 13:02:43 +0200
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
In-Reply-To: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
References: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
Message-ID: <CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>

Hi Ilja,

On Tue, Jul 12, 2011 at 9:38 AM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
> basically, $subj. I really like the DeferredStore concept introduced
> in storm/twisted-integration, but it seems that that branch is lagging
> behind on merging (for 2 years now). Any inside info, perhaps?

The branch is not being actively maintained, though I do believe some
folks are using it in production systems.  The way we've been
recommending people use Storm with Twisted is by running transactions
in threads with deferToThread.  Free recently landed some code in
storm.twisted.transact that makes pursuing this model, with a thread
pool, fairly straightforward.

Thanks,
J.


From adi at roiban.ro  Tue Jul 12 08:11:56 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 12 Jul 2011 15:11:56 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
Message-ID: <1310472716.1993.21.camel@pp>

On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
> On 9 Jul, 10:46 am, adi at roiban.ro wrote:
> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
> >[snip]
[snip]

> I ran this (all-branches version) a few times over the weekend.  The 
> first time, when there was lots of catching up to do, took about 3.5 
> hours.  After that, it was about 30 minutes per run.  This does seem 
> fast enough to do nightly, so I'll set that up until we have the push- 
> based version.

I have created a script that can be used together with a svn post-commit
hook to keep an bzr mirror in sync.


The sample usage in a post-commit hook can be found at the following
url.
The standard output is redirected into a file, and error messages will
be displayed in the client console.
 
http://paste.ubuntu.com/642581/

The actual script is here:
http://paste.ubuntu.com/642587/

Let me know if the script is not documented enough and more
documentation is required.

Cheers,

--
Adi



From bino at indoakses-online.com  Tue Jul 12 21:08:04 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Wed, 13 Jul 2011 08:08:04 +0700
Subject: [Twisted-Python] question : Twistar
Message-ID: <4E1CEFF4.90506@indoakses-online.com>

Dear All ..

Base on a need, I need to build a JSON-RPC to Postgres "bridge".
For now, I try to take the ORM way, so I'm looking for ORM "engine" that 
work well with Twisted and support for Postgres as it's backend.

First try I look into SqlAlchemy ... but there is a lot of talk that 
SqlAlchemy did not work well with Twisted.
I found that Twistar have a support for postgres backend.

All sample script I found only look like this :
for MySQL driver
---Start----
from twisted.enterprise import adbapi
from twistar.registry import Registry

Registry.DBPOOL = adbapi.ConnectionPool('MySQLdb', user="twistar", 
passwd="apass", db="twistar")
---Stop----

and I thing for postgres it will be like :
---Start----
from twisted.enterprise import adbapi
from twistar.registry import Registry

Registry.DBPOOL = adbapi.ConnectionPool('psycopg2', user="twistar", 
passwd="apass", db="twistar")
---Stop----

Is that right ?
If So ... where to put the db server ip address (i.e : my Postgres 
server is at 192.168.10.232) ?

Sincerely
-bino-


From _ at lvh.cc  Wed Jul 13 08:03:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 13 Jul 2011 14:03:03 +0200
Subject: [Twisted-Python] Async-pep (again)
Message-ID: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>

Hey!


So, some of you might remember my async-pep post a while ago. Some people
correctly complained there was no code or text. There's some code and quite
a bit of text now. In fact, it even has a PEP number (3153)! So I'm
soliciting feedback again.

There's an issue tracker that ideally describes what needs to be done:
https://github.com/lvh/async-pep/issues

Specifically, #21: https://github.com/lvh/async-pep/issues/21 (a basic
implementation of an async api compatible protocol) and #22:
https://github.com/lvh/async-pep/issues/22 (a trivial implementation of a
backend using just the stdlib). If anyone has any thoughts on those, please
chime in.

cheers and thanks in advance
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110713/348b2c4e/attachment.htm 

From screwtape at froup.com  Thu Jul 14 02:48:37 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 16:48:37 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
Message-ID: <20110714064837.GP21836@boombah.thristian.org>

On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
> So, some of you might remember my async-pep post a while ago. Some people
> correctly complained there was no code or text. There's some code and quite
> a bit of text now. In fact, it even has a PEP number (3153)! So I'm
> soliciting feedback again.

The idea of Protocols implementing Transports is vaguely gestured at as
a Useful Thing, but not much detail is given. I think it would be useful
for the final PEP to address that topic more rigorously - partially
because it's good to have a firm basis on which to model SOCKS and SSH
libraries, but mostly because figuring out how SSL should interact with
TCP is going to give people headaches. Twisted, so far as I can see,
just sort of punts and says "Yeah, SSL is just another transport like
TCP", but then you have to make the SSL transport support all the same
options that the TCP transport supports (socket options? IPv6?), but
then what if you want to run SSL over a serial port or a SOCKS
connection... AAAAAAAAAAAAA!

In practice, it might be simpler because "SSL" means "whatever subset of
TCP functionality we can coax OpenSSL into providing" rather than
a fully stackable protocol-providing-a-transport.

The thing with Consumers and Producers seems... very abstract. If I'm
sitting down to retrieve email via POP3 (to pick a random protocol),
'transports' and 'protocols' are tools that nestle very comfortably in
my mental model of the task in front of me; "consumers" and "producers"
are not. Are they concepts that should be handled by transport
implementors? Protocol implementors? Protocol users? Should they be
mapped onto XON/XOFF or RTS/CTS by serial transports?

At least in Twisted, transports and protocols do not exist in a vacuum;
they have to be hooked up via the reactor. Will this PEP define
a (skeletal) API to be implemented by potential reactors, or is that
going to left entirely unspecified, like WSGI?


From _ at lvh.cc  Thu Jul 14 04:05:00 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 14 Jul 2011 10:05:00 +0200
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714064837.GP21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
Message-ID: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>

On Thu, Jul 14, 2011 at 8:48 AM, Tim Allen <screwtape at froup.com> wrote:

> On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
> > So, some of you might remember my async-pep post a while ago. Some people
> > correctly complained there was no code or text. There's some code and
> quite
> > a bit of text now. In fact, it even has a PEP number (3153)! So I'm
> > soliciting feedback again.
>
> The idea of Protocols implementing Transports is vaguely gestured at as
> a Useful Thing, but not much detail is given. I think it would be useful
> for the final PEP to address that topic more rigorously - partially
> because it's good to have a firm basis on which to model SOCKS and SSH
> libraries, but mostly because figuring out how SSL should interact with
> TCP is going to give people headaches. Twisted, so far as I can see,
> just sort of punts and says "Yeah, SSL is just another transport like
> TCP", but then you have to make the SSL transport support all the same
> options that the TCP transport supports (socket options? IPv6?), but
> then what if you want to run SSL over a serial port or a SOCKS
> connection... AAAAAAAAAAAAA!
>
> In practice, it might be simpler because "SSL" means "whatever subset of
> TCP functionality we can coax OpenSSL into providing" rather than
> a fully stackable protocol-providing-a-transport.
>


Cool. Can I shove those 2 paragraphs into a ticket or will the copyright
monster haunt me?


>
> The thing with Consumers and Producers seems... very abstract. If I'm
> sitting down to retrieve email via POP3 (to pick a random protocol),
> 'transports' and 'protocols' are tools that nestle very comfortably in
> my mental model of the task in front of me; "consumers" and "producers"
> are not. Are they concepts that should be handled by transport
> implementors? Protocol implementors? Protocol users? Should they be
> mapped onto XON/XOFF or RTS/CTS by serial transports?
>

Yes, Consumers and Producers are about flow control, and most Transports
probably are producers.


>
> At least in Twisted, transports and protocols do not exist in a vacuum;
> they have to be hooked up via the reactor. Will this PEP define
> a (skeletal) API to be implemented by potential reactors, or is that
> going to left entirely unspecified, like WSGI?
>

Entirely unspecified, because different implementations have to do pretty
different things.


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110714/6216150e/attachment.htm 

From screwtape at froup.com  Thu Jul 14 05:05:38 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 19:05:38 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
Message-ID: <20110714090538.GQ21836@boombah.thristian.org>

On Thu, Jul 14, 2011 at 10:05:00AM +0200, Laurens Van Houtven wrote:
> On Thu, Jul 14, 2011 at 8:48 AM, Tim Allen <screwtape at froup.com> wrote:
> > The idea of Protocols implementing Transports is vaguely gestured at as
> > a Useful Thing, but not much detail is given. I think it would be useful
> > for the final PEP to address that topic more rigorously - partially
> > because it's good to have a firm basis on which to model SOCKS and SSH
> > libraries, but mostly because figuring out how SSL should interact with
> > TCP is going to give people headaches. Twisted, so far as I can see,
> > just sort of punts and says "Yeah, SSL is just another transport like
> > TCP", but then you have to make the SSL transport support all the same
> > options that the TCP transport supports (socket options? IPv6?), but
> > then what if you want to run SSL over a serial port or a SOCKS
> > connection... AAAAAAAAAAAAA!
> >
> > In practice, it might be simpler because "SSL" means "whatever subset of
> > TCP functionality we can coax OpenSSL into providing" rather than
> > a fully stackable protocol-providing-a-transport.
> 
> Cool. Can I shove those 2 paragraphs into a ticket or will the copyright
> monster haunt me?

Go right ahead! I guess most of these things should be tickets, but
I don't have a GitHub account and I'm not particularly looking to
register on more websites at the moment.

> > The thing with Consumers and Producers seems... very abstract. If I'm
> > sitting down to retrieve email via POP3 (to pick a random protocol),
> > 'transports' and 'protocols' are tools that nestle very comfortably in
> > my mental model of the task in front of me; "consumers" and "producers"
> > are not. Are they concepts that should be handled by transport
> > implementors? Protocol implementors? Protocol users? Should they be
> > mapped onto XON/XOFF or RTS/CTS by serial transports?
> 
> Yes, Consumers and Producers are about flow control, and most Transports
> probably are producers.

Having looked at the issues list after sending that message, I see this
is basically issue 13, "Why are producers/consumers important, how are
they different from protocols/transports?"

If your PEP includes producers and consumers (and I note that the
current example code doesn't, it just has a "FlowControl" class), you'll
want to have an example Protocol that uses producers and consumers in
some useful, illustrative fashion.

> > At least in Twisted, transports and protocols do not exist in a vacuum;
> > they have to be hooked up via the reactor. Will this PEP define
> > a (skeletal) API to be implemented by potential reactors, or is that
> > going to left entirely unspecified, like WSGI?
> 
> Entirely unspecified, because different implementations have to do pretty
> different things.

I guess the selection of available Transports is up to the hosting
event-loop, too - it might be worth noting that in the section on
"Transports". Unless, of course, the Transport in question is
implemented by another Protocol, in which case I guess it's anybody's
guess how you might hook your Protocol up.

I almost think that, for pedagogy's sake, there should be an additional
Encapsulator or Framer abstract class, that inherits from Protocol, but
adds a .connectProtocol() method that takes another Protocol instance,
and hooks itself up as that Protocol's transport. Sure, anyone who
understands what's going on should be able to figure out what's going
on, but I think an extra class would make it blindingly obvious, and
I like APIs that save me from having to think too hard.

While there's still people listening to my half-formed opinions:

- Issue 7 seems to have settled on removing support for half_closing
  transports. I seem to recall somebody mentioning support for
  half-close as being one of those weird-corner cases that nobody thinks
  they need until they're trying to figure out why their SSH sessions
  always die with "broken pipe" errors. While it probably would
  complicate the documentation to include it, I'd hope that many
  frameworks that implement this PEP would want to include support for
  half-closing transports, and it'd be nice if there was a standard API
  for it instead of everybody adding their own methods with their own
  semantics. Perhaps there could be an HalfClosableTransport(Transport)
  ABC, that's optional in the same way that, say, DB-API's
  "connection.rollback()" method is defined but optional.

- For issue 6 ("Scatter/gather IO API doesn't make sense yet"), I can't
  see much of a use for readv/scatter, because I imagine the benefits
  come from having a bunch of pre-allocated buffers lying around, and
  even if the Python VM had such buffers, they probably wouldn't be
  visible or useful to running Python code. On the other hand, I can
  easily imagine Python code having a bunch of independently-generated
  buffers that need to be written in a particular order (framing data
  and framed data, for example), and being able to avoid ''.join() could
  be a big win. Again, perhaps this could be an optional extension
  provided by hosting frameworks that want to implement it - although it
  should be pretty easy to emulate on top of the regular .write()
  method.

- You might also want to create an optional Transport method to wrap the
  sendfile(2) and/or splice(2) functions. Without OS support, it'd just
  be a convenient way to tell the host framework to do the grunt-work of
  shunting bytes around; with OS support it should be a good deal more
  efficient than doing the same operations manually.
  
Tim.


From screwtape at froup.com  Thu Jul 14 06:26:50 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 20:26:50 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714090538.GQ21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
	<20110714090538.GQ21836@boombah.thristian.org>
Message-ID: <20110714102650.GR21836@boombah.thristian.org>

On Thu, Jul 14, 2011 at 07:05:38PM +1000, Tim Allen wrote:
> - You might also want to create an optional Transport method to wrap the
>   sendfile(2) and/or splice(2) functions.

I suggested this not knowing whether Python would ever grow support for
sendfile(), since it seemed like the sort of thing that
performance-oriented async-io frameworks might want to set up with
ctypes or similar. However, I've just discovered that os.sendfile() will
be in Python 3.3:

    http://docs.python.org/dev/library/os.html#os.sendfile

Since your PEP has a 3000-series number anyway, os.sendfile() might
potentially be quite useful.


From exarkun at twistedmatrix.com  Thu Jul 14 07:04:43 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 14 Jul 2011 11:04:43 -0000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714102650.GR21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
	<20110714090538.GQ21836@boombah.thristian.org>
	<20110714102650.GR21836@boombah.thristian.org>
Message-ID: <20110714110443.3761.1470202303.divmod.xquotient.903@localhost.localdomain>

On 10:26 am, screwtape at froup.com wrote:
>On Thu, Jul 14, 2011 at 07:05:38PM +1000, Tim Allen wrote:
>>- You might also want to create an optional Transport method to wrap 
>>the
>>   sendfile(2) and/or splice(2) functions.
>
>I suggested this not knowing whether Python would ever grow support for
>sendfile(), since it seemed like the sort of thing that
>performance-oriented async-io frameworks might want to set up with
>ctypes or similar. However, I've just discovered that os.sendfile() 
>will
>be in Python 3.3:
>
>    http://docs.python.org/dev/library/os.html#os.sendfile
>
>Since your PEP has a 3000-series number anyway, os.sendfile() might
>potentially be quite useful.

Since this non-trivially complicates the implementation of a transport, 
I suggest that it be an optional extension proposed separately.

Jean-Paul


From free at 64studio.com  Thu Jul 14 08:33:49 2011
From: free at 64studio.com (Free Ekanayaka)
Date: Thu, 14 Jul 2011 14:33:49 +0200
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
In-Reply-To: <CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>
	(Jamu Kakar's message of "Tue, 12 Jul 2011 13:02:43 +0200")
References: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
	<CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>
Message-ID: <87ei1tdosy.fsf@64studio.com>

Hi Ilja,

|--==> On Tue, 12 Jul 2011 13:02:43 +0200, Jamu Kakar <jkakar at kakar.ca> said:

  JK> Hi Ilja,
  JK> On Tue, Jul 12, 2011 at 9:38 AM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
  >>basically, $subj. I really like the DeferredStore concept introduced
  >>in storm/twisted-integration, but it seems that that branch is lagging
  >>behind on merging (for 2 years now). Any inside info, perhaps?

  JK> The branch is not being actively maintained, though I do believe some
  JK> folks are using it in production systems.  The way we've been
  JK> recommending people use Storm with Twisted is by running transactions
  JK> in threads with deferToThread.  Free recently landed some code in
  JK> storm.twisted.transact that makes pursuing this model, with a thread
  JK> pool, fairly straightforward.

What Jamu said. Considering that the branch you're mentioning does use
threads as well, the storm.twisted.transact is probably easier and
virtually identical as far as performance goes.

Cheers,

Free


From alberto.donato at gmail.com  Thu Jul 14 09:54:22 2011
From: alberto.donato at gmail.com (Alberto Donato)
Date: Thu, 14 Jul 2011 15:54:22 +0200
Subject: [Twisted-Python] FilesystemLock/DeferredFilesystemLock with NFS and
	multiple processes
Message-ID: <CAPCHgyKZOGTNBmdNEZ+RitF+xJtV424otRoNFVbOFkvX4Pvn7Q@mail.gmail.com>

Hi,
  I have a scenario in which I need to use a lock file to prevent
multiple processes to run on the same directory concurrently.
The processes could run on the same machine or on different machine,
with a NFS filesystem.

If I understand correctly FilesystemLock works fine with different
processes on the same machine, but since it uses a symlink to PIDs to
identify the lock owner, it is not guaranteed to be safe on NFS.
Is this the only issue with this scenario? In this case I guess it
could be fixed by adding a machine identifier (hostname or some hash)
to the name.
Also, is there any possible concurrency problem with NFS atomicity?

Thanks,

Alberto


From dynamicgl at gmail.com  Thu Jul 14 14:05:01 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 15 Jul 2011 02:05:01 +0800
Subject: [Twisted-Python] how to implement a perspective broker client with
	reconnection
Message-ID: <CABkOF6SkYosFPEMKd1Y-wqgZ-ivZHnxvy-fhLV-oAgoCve7Sqg@mail.gmail.com>

Hi All

    I plan to use pb to communicate between my processes. The question is
how i am able to implement a pb client with some degrees of reliability.
What i want is when getRootObject() fail sometimes, it can retry several
times automatically. It seems docs doesn't mention this problem and I didn't
find any hint from source code.


Thanks

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110715/e7cdf9c7/attachment.htm 

From glyph at twistedmatrix.com  Thu Jul 14 19:28:03 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 14 Jul 2011 19:28:03 -0400
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714064837.GP21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
Message-ID: <D4CAE32E-E1FF-42C0-9C83-22112D5DF535@twistedmatrix.com>


On Jul 14, 2011, at 2:48 AM, Tim Allen wrote:

> On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
>> So, some of you might remember my async-pep post a while ago. Some people
>> correctly complained there was no code or text. There's some code and quite
>> a bit of text now. In fact, it even has a PEP number (3153)! So I'm
>> soliciting feedback again.
> 
> The idea of Protocols implementing Transports is vaguely gestured at as
> a Useful Thing, but not much detail is given. I think it would be useful
> for the final PEP to address that topic more rigorously - partially
> because it's good to have a firm basis on which to model SOCKS and SSH
> libraries, but mostly because figuring out how SSL should interact with
> TCP is going to give people headaches. Twisted, so far as I can see,
> just sort of punts and says "Yeah, SSL is just another transport like
> TCP", but then you have to make the SSL transport support all the same
> options that the TCP transport supports (socket options? IPv6?), but
> then what if you want to run SSL over a serial port or a SOCKS
> connection... AAAAAAAAAAAAA!

> In practice, it might be simpler because "SSL" means "whatever subset of
> TCP functionality we can coax OpenSSL into providing" rather than
> a fully stackable protocol-providing-a-transport.

Actually, you might be interested in <http://tm.tl/4854>.  This will be in 11.1.  TLS _is_ a protocol-that-is-a-transport now (in trunk).  This was the case in 11.0, too, but only for the IOCP reactor.  We've been smoothing out some interesting quirks that occurred as a result, mostly test-related, but it's looking good for the release; more robust, actually, because it's easier to test the stacked version than to try to trick sockets into returning specific values in C.

> The thing with Consumers and Producers seems... very abstract. If I'm
> sitting down to retrieve email via POP3 (to pick a random protocol),
> 'transports' and 'protocols' are tools that nestle very comfortably in
> my mental model of the task in front of me; "consumers" and "producers"
> are not.

The APIs definitely aren't as nice, and that's where I predict the most discussion in the PEP.

> Are they concepts that should be handled by transport implementors?

Yes, pretty much always.

> Protocol implementors?

Yes, if you need them.

> Protocol users?

It depends.  Ideally you should be able to rely on the protocol providing a reasonable stream-friendly API.  (You probably only care about this if you're writing a proxy.)

> Should they be mapped onto XON/XOFF or RTS/CTS by serial transports?

Either or.  Probably an option to the serial transport.

From glyph at twistedmatrix.com  Thu Jul 14 19:28:54 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 14 Jul 2011 19:28:54 -0400
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
Message-ID: <89D279EB-7C03-4AE0-957D-BB72856FA626@twistedmatrix.com>


On Jul 14, 2011, at 4:05 AM, Laurens Van Houtven wrote:

> At least in Twisted, transports and protocols do not exist in a vacuum;
> they have to be hooked up via the reactor. Will this PEP define
> a (skeletal) API to be implemented by potential reactors, or is that
> going to left entirely unspecified, like WSGI?
> 
> Entirely unspecified, because different implementations have to do pretty different things.

I thought the idea was to include an asyncore reactor interface?  My assumption was that we'd provide an adapter around the Twisted reactor which would provide some basic functionality, like listenTCP, connectTCP, and callLater.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110714/a20be1f9/attachment.htm 

From dynamicgl at gmail.com  Fri Jul 15 12:58:07 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 16 Jul 2011 00:58:07 +0800
Subject: [Twisted-Python] question : Twistar
In-Reply-To: <4E1CEFF4.90506@indoakses-online.com>
References: <4E1CEFF4.90506@indoakses-online.com>
Message-ID: <CABkOF6TB42t4YynSZ-2rYVZ+AvjFtC1nPWCGsT_WGgtE7cEz8Q@mail.gmail.com>

hi...

  you can try to use host to indicate which server you want to connect
with.. like:

adbapi.ConnectionPool('xxx', host='localhost', user='twww',pwd='eee')



On Wed, Jul 13, 2011 at 9:08 AM, bino oetomo <bino at indoakses-online.com>wrote:

> Dear All ..
>
> Base on a need, I need to build a JSON-RPC to Postgres "bridge".
> For now, I try to take the ORM way, so I'm looking for ORM "engine" that
> work well with Twisted and support for Postgres as it's backend.
>
> First try I look into SqlAlchemy ... but there is a lot of talk that
> SqlAlchemy did not work well with Twisted.
> I found that Twistar have a support for postgres backend.
>
> All sample script I found only look like this :
> for MySQL driver
> ---Start----
> from twisted.enterprise import adbapi
> from twistar.registry import Registry
>
> Registry.DBPOOL = adbapi.ConnectionPool('MySQLdb', user="twistar",
> passwd="apass", db="twistar")
> ---Stop----
>
> and I thing for postgres it will be like :
> ---Start----
> from twisted.enterprise import adbapi
> from twistar.registry import Registry
>
> Registry.DBPOOL = adbapi.ConnectionPool('psycopg2', user="twistar",
> passwd="apass", db="twistar")
> ---Stop----
>
> Is that right ?
> If So ... where to put the db server ip address (i.e : my Postgres
> server is at 192.168.10.232) ?
>
> Sincerely
> -bino-
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110716/8520576a/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jul 17 00:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Jul 2011 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1310875528.24.1130214540@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110717/32b58034/attachment.htm 

From happybrowndog at hotmail.com  Tue Jul 19 03:37:24 2011
From: happybrowndog at hotmail.com (hbd666)
Date: Tue, 19 Jul 2011 00:37:24 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
Message-ID: <j03c7k$nl6$1@dough.gmane.org>

I have a simple xmlrpc server written using Twisted.  Every time I get a 
request to it, stdout spits out something like the following:

2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - - 
[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-" 
"xmlrpclib.py/1.0.1 (by www.pythonware.com)"


How do I prevent this from happening?  I also do not want this going to 
a log file either.

Thanks anybody for your help!




From rlotun at gmail.com  Tue Jul 19 05:51:27 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 19 Jul 2011 10:51:27 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
Message-ID: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>

Hi All,

I just wanted to fire a note about our experiences testing Twisted trunk
(after _newtls.py landed) on some servers in our cluster, on PyOpenSSL
0.12.

In our application (a twisted.web REST api endpoint), we make a lot of https
calls to a SimpleDB Amazon AWS endpoint (sdb.amazonaws.com). At some point
after a deployed test on some of our machines, we started getting our
internel DNS requests to the sdb endpoint throttled (resulting in failures
in most of our requests). Since every call to SimpleDB was made to the sdb
endpoint, each call would be resolved, bombarding amazon's dns servers with
requests. After diving in, I learned all Twisted connect* calls go through
socket.gethostbyname, which apparently does not do any DNS caching (much to
my surprise) unless something like nscd or a local caching nameserver is
running (we ended up using BIND).

Now, since we never ran a local caching nameserver before I wondered what
changed. Could it have been that using the _newtls code (with PyOpenSSL
0.12) removed some element of DNS caching that OpenSSL was performing behind
the scene? Is this possible? If so, then I just wanted to make sure everyone
was aware that if you make a lot of DNS calls in a Twisted server running
this code, you too could experience problems if you're not running a local
caching nameserver.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110719/c30a0c52/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 19 07:16:21 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 19 Jul 2011 12:16:21 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
Message-ID: <4E256785.7090500@imperial.ac.uk>

On 07/19/2011 10:51 AM, Reza Lotun wrote:

> would be resolved, bombarding amazon's dns servers with requests. After
> diving in, I learned all Twisted connect* calls go through
> socket.gethostbyname, which apparently does not do any DNS caching (much
> to my surprise) unless something like nscd or a local caching nameserver
> is running (we ended up using BIND).

socket.gethostbyname is just a wrapper around the libc implementation, 
and you're correct that it does no caching unless the NSS layer does, or 
the DNS query you're talking to does.

>
> Now, since we never ran a local caching nameserver before I wondered

How did anything work then if you had no local DNS?

> what changed. Could it have been that using the _newtls code (with
> PyOpenSSL 0.12) removed some element of DNS caching that OpenSSL was
> performing behind the scene? Is this possible? If so, then I just wanted

A quick 10-line connectSSL script on my box running 10.1 does a DNS 
lookup per-connection. Are you sure this behaviour has changed?

> to make sure everyone was aware that if you make a lot of DNS calls in a
> Twisted server running this code, you too could experience problems if
> you're not running a local caching nameserver.

Well, TBH if you're not running a local caching nameserver, I am failing 
to see how anything works!


From exarkun at twistedmatrix.com  Tue Jul 19 07:37:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 19 Jul 2011 11:37:28 -0000
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j03c7k$nl6$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
Message-ID: <20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>

On 07:37 am, happybrowndog at hotmail.com wrote:
>I have a simple xmlrpc server written using Twisted.  Every time I get 
>a
>request to it, stdout spits out something like the following:
>
>2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>"xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>
>
>How do I prevent this from happening?  I also do not want this going to
>a log file either.
>
>Thanks anybody for your help!

If not for the logfile rotation that twisted.web.server.Site wants to 
do, you could pass os.devnull as a logPath to Site's initializer. 
However, log rotation will like causes this to do something bad.

There's a private method that Site overrides (from HTTPFactory) that 
controls part of this behavior.  It might be useful to have a public API 
for that instead.

Would you like to file an enhancement ticket in the issue tracker 
describing the use case?

Jean-Paul


From rlotun at gmail.com  Tue Jul 19 08:36:39 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 19 Jul 2011 13:36:39 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <4E256785.7090500@imperial.ac.uk>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
	<4E256785.7090500@imperial.ac.uk>
Message-ID: <CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>

On Tue, Jul 19, 2011 at 12:16 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Well, TBH if you're not running a local caching nameserver, I am failing
> to see how anything works!
>

Hmm, it turns out I may have been a bit too hasty in blaming the newtls code
perhaps. We're running tests on resolver calls on the old setup vs. the new
one, and the behaviour is the same on on our pre-trunk (standard) config. We
may have just hit some threshold where it has suddenly started to matter, I
suppose.

Anyway, I suppose the real lesson is the non-caching of gethostbyname calls.
Not being a DNS guru, I had no idea calls weren't cached locally. Let that
be a lesson, I guess.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110719/e8593d14/attachment.htm 

From ddwiggins at advpubtech.com  Tue Jul 19 13:18:02 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 19 Jul 2011 10:18:02 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>
References: <j03c7k$nl6$1@dough.gmane.org>
	<20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>
Message-ID: <j04e8a$nts$1@dough.gmane.org>

On 7/19/2011 4:37 AM, exarkun at twistedmatrix.com wrote:
> If not for the logfile rotation that twisted.web.server.Site wants to 
> do, you could pass os.devnull as a logPath to Site's initializer.
> However, log rotation will like causes this to do something bad.
>
> There's a private method that Site overrides (from HTTPFactory) that controls part of this behavior.  It might be useful to have a public API for that instead.
>
> Would you like to file an enhancement ticket in the issue tracker describing the use case?
>
> Jean-Paul

Yes, I'm interested in this as well.  Somewhat different from the OP, 
I'd like to have a way to turn this logging on and off, and if on, a way 
to specify the content of the message (in particular, the method and 
arguments).

I've submitted Ticket #5200.

-- 

Don Dwiggins
Advanced Publishing Technology




From glyph at twistedmatrix.com  Tue Jul 19 13:23:41 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Jul 2011 13:23:41 -0400
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
	<4E256785.7090500@imperial.ac.uk>
	<CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>
Message-ID: <4D572508-9AA4-404F-9388-0719E768C043@twistedmatrix.com>


On Jul 19, 2011, at 8:36 AM, Reza Lotun wrote:

> Anyway, I suppose the real lesson is the non-caching of gethostbyname calls. Not being a DNS guru, I had no idea calls weren't cached locally. Let that be a lesson, I guess.

You were probably confused by the fact that glibc caches /etc/resolv.conf in each process and doesn't always reload it when it should.  Depending on what patches your platform has decided to include in its libc, you may or may not have to call res_init() to get an up-to-date resolv.conf.  It doesn't ever cache the results of name lookups themselves though, that would lead to all kinds of mayhem.

False alarm or not, thanks for testing trunk versions of Twisted against your application. It's great to get these kinds of issues investigated _before_ a release :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110719/720ded68/attachment.htm 

From spongelavapaul at googlemail.com  Tue Jul 19 14:11:52 2011
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Tue, 19 Jul 2011 19:11:52 +0100
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j03c7k$nl6$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
Message-ID: <B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>

As a quick fix, 

class QuietSite(server.Site):
    """Like a Site but quieter"""
    def log(self, request):
        pass

Then use QuietSite instead of server.Site

p.
On 19 Jul 2011, at 08:37, hbd666 wrote:

> I have a simple xmlrpc server written using Twisted.  Every time I get a 
> request to it, stdout spits out something like the following:
> 
> 2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - - 
> [19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-" 
> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
> 
> 
> How do I prevent this from happening?  I also do not want this going to 
> a log file either.
> 
> Thanks anybody for your help!
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From happybrowndog at hotmail.com  Tue Jul 19 14:57:41 2011
From: happybrowndog at hotmail.com (hbd666)
Date: Tue, 19 Jul 2011 11:57:41 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
References: <j03c7k$nl6$1@dough.gmane.org>
	<B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
Message-ID: <j04k35$uoa$1@dough.gmane.org>

On 7/19/2011 11:11 AM, Paul Thomas wrote:
> As a quick fix,
>
> class QuietSite(server.Site):
>      """Like a Site but quieter"""
>      def log(self, request):
>          pass
>
> Then use QuietSite instead of server.Site
>
> p.
> On 19 Jul 2011, at 08:37, hbd666 wrote:
>
>> I have a simple xmlrpc server written using Twisted.  Every time I get a
>> request to it, stdout spits out something like the following:
>>
>> 2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>> [19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>>
>>
>> How do I prevent this from happening?  I also do not want this going to
>> a log file either.
>>
>> Thanks anybody for your help!
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Thanks, that worked for my application.
Though I still do see a need to modify the API as suggested earlier, 
because it would be more specific to the XMLRPC, and just in case there 
is more than one protocol for a server site for an application - 
wouldn't want to kill logging for all protocols.



From exarkun at twistedmatrix.com  Tue Jul 19 21:39:04 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 20 Jul 2011 01:39:04 -0000
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j04k35$uoa$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
	<B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
	<j04k35$uoa$1@dough.gmane.org>
Message-ID: <20110720013904.3761.664732319.divmod.xquotient.922@localhost.localdomain>

On 19 Jul, 06:57 pm, happybrowndog at hotmail.com wrote:
>On 7/19/2011 11:11 AM, Paul Thomas wrote:
>>As a quick fix,
>>
>>class QuietSite(server.Site):
>>      """Like a Site but quieter"""
>>      def log(self, request):
>>          pass
>>
>>Then use QuietSite instead of server.Site
>>
>>p.
>>On 19 Jul 2011, at 08:37, hbd666 wrote:
>>>I have a simple xmlrpc server written using Twisted.  Every time I 
>>>get a
>>>request to it, stdout spits out something like the following:
>>>
>>>2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>>>[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>>>"xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>>>
>>>
>>>How do I prevent this from happening?  I also do not want this going 
>>>to
>>>a log file either.
>>>
>>>Thanks anybody for your help!
>>>
>>>
>>>
>>>_______________________________________________
>>>Twisted-Python mailing list
>>>Twisted-Python at twistedmatrix.com
>>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>Thanks, that worked for my application.
>Though I still do see a need to modify the API as suggested earlier,
>because it would be more specific to the XMLRPC, and just in case there
>is more than one protocol for a server site for an application -
>wouldn't want to kill logging for all protocols.

Hmmm.  Site is a factory for HTTP.  XML-RPC runs over HTTP.  There isn't 
really a different protocol here.  It sounds more like you want to 
disable logging for certain request URLs, perhaps.  You can do that by 
writing a suitable log method, eg:

    class SiteWithoutXMLRPCLogging(Site):
        def log(self, request):
            if request.uri.startswith('/RPC2') and request.method == 
'POST':
                return
            return Site.log(self, request)


It might be nicer if the response was also available, though 
(particularly since the request isn't logged until the response is 
generated).  Then you could avoid encoding the "/RPC2" string (which 
often isn't actually used) and do something like an isinstance(resource, 
XMLRPC).

Jean-Paul


From exarkun at twistedmatrix.com  Sun Jul 24 00:05:21 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Jul 2011 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1311480321.15.900656631@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110724/cc860761/attachment.htm 

From _ at lvh.cc  Sun Jul 24 11:36:00 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 24 Jul 2011 17:36:00 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
Message-ID: <CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>

I've been looking at this again recently and honestly it's beginning to feel
like I'm reimplementing large parts of web2. Does that mean I'm doing it
wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110724/c965e689/attachment.htm 

From foom at fuhm.net  Sun Jul 24 14:13:39 2011
From: foom at fuhm.net (James Y Knight)
Date: Sun, 24 Jul 2011 14:13:39 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
Message-ID: <672A3A32-B463-4012-8125-483539AE3444@fuhm.net>

On Jul 24, 2011, at 11:36 AM, Laurens Van Houtven wrote:

> I've been looking at this again recently and honestly it's beginning to feel like I'm reimplementing large parts of web2. Does that mean I'm doing it wrong?

Either that or that web2 was doing it right...

Of course, you don't really need to reimplement it, just copy the existing implementation from before it was removed, and s/web2/web/. :)

J




From glyph at twistedmatrix.com  Sun Jul 24 19:22:04 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 24 Jul 2011 19:22:04 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
	<672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
Message-ID: <5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>


On Jul 24, 2011, at 2:13 PM, James Y Knight wrote:

> On Jul 24, 2011, at 11:36 AM, Laurens Van Houtven wrote:
> 
>> I've been looking at this again recently and honestly it's beginning to feel like I'm reimplementing large parts of web2. Does that mean I'm doing it wrong?
> 
> Either that or that web2 was doing it right...
> 
> Of course, you don't really need to reimplement it, just copy the existing implementation from before it was removed, and s/web2/web/. :)

The main thing that web2 did wrong was introducing a new namespace and thereby confusion, not any particular detail of its implementation.

The web2 resource model was in most ways a nice upgrade from twisted.web.  It even had a halfway decent compatibility layer.  You should feel free to copy its implementation liberally (with the exception of the IStream interface, which has been discussed to death elsewhere).  However, since web2 was half-baked in some regards, you may need to add test coverage, improve docstrings, or handle some corner cases in order to pass review.

But, in terms of implementation details, web2 was in fact "doing it right" for the most part.

-glyph



From itamar at itamarst.org  Sun Jul 24 22:51:08 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 24 Jul 2011 22:51:08 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
Message-ID: <1311562268.1645.14.camel@blake>

I'm going to merge #5063 next time I have a few minutes when I'm more
awake, which will mean my yak stack[1] is empty and I can go back to
working on abortConnection(). As explained in
http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
loseConnection(), except it doesn't wait until buffers are written out,
it closes the connection immediately. The question is, how immediately?

My current implementation, a bit like one of the half-close code paths,
ends up calling connectionLost directly. That means you can have a call
stack that looks like this:

MyProtocol.dataReceived
TCPConnection.abortConnection
...
MyProtocol.connectionLost

This can lead to re-entrancy bugs. I am tempted to suggest a policy of
No Reactor Reentrancy, but that is currently violated by one of the TCP
half-close code paths, and producers if I'm not mistaken.

Some options:

(a) Leave abortConnection() reentrant.
(b) Make abortConnection() non-reentrant, don't change any current APIs.
(c) Make all reactor APIs non-reentrant.

(Since there's a ticket for documenting the reentrancy policy, you will
notice I've added another yak to my stack. I'll finish #78 someday!)

Thoughts?


References:
[1] https://secure.wikimedia.org/wiktionary/en/wiki/yak_shaving



From itamar at itamarst.org  Mon Jul 25 07:57:02 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 25 Jul 2011 07:57:02 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <1311562268.1645.14.camel@blake>
References: <1311562268.1645.14.camel@blake>
Message-ID: <1311595022.1645.16.camel@blake>

On Sun, 2011-07-24 at 22:51 -0400, Itamar Turner-Trauring wrote:

> This can lead to re-entrancy bugs. I am tempted to suggest a policy of
> No Reactor Reentrancy, but that is currently violated by one of the TCP
> half-close code paths, and producers if I'm not mistaken.

Instead of "No Reactor Re-entrancy", I meant "No Protocol Re-entrancy",
i.e. the reactor only ever calls into a protocol once in a given call
stack.



From itamar at itamarst.org  Mon Jul 25 08:27:03 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 25 Jul 2011 08:27:03 -0400
Subject: [Twisted-Python] Do you use producers with SSL or TLS?
Message-ID: <1311596823.1645.18.camel@blake>

If so, I'd appreciate if if you could test your application against
trunk Twisted (make sure you have a recent version of pyOpenSSL). I just
landed some fixes to the new TLS implementation's producer code, and
catching any problems before we release 11.1 would be good.

Thanks!



From _ at lvh.cc  Mon Jul 25 15:43:31 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 25 Jul 2011 21:43:31 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
	<672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
	<5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>
Message-ID: <CAE_Hg6Z-0EbUa6RavAxR1tRb5bRu846vjkYi3SeLaPYrMEfEeQ@mail.gmail.com>

On Mon, Jul 25, 2011 at 1:22 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> The main thing that web2 did wrong was introducing a new namespace and
> thereby confusion, not any particular detail of its implementation.
>

Well, my thing would introduce some namespaces (like "entity")-- just not
one in the toplevel twisted package.


> The web2 resource model was in most ways a nice upgrade from twisted.web.
>  It even had a halfway decent compatibility layer.  You should feel free to
> copy its implementation liberally (with the exception of the IStream
> interface, which has been discussed to death elsewhere).  However, since
> web2 was half-baked in some regards, you may need to add test coverage,
> improve docstrings, or handle some corner cases in order to pass review.
>
>
Of course -- I'd end up doing that anyway because I wouldn't feel confident
I understand the code otherwise.



> But, in terms of implementation details, web2 was in fact "doing it right"
> for the most part.
>

Glad to know it's not just my mangled mind.


>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110725/7d75c13e/attachment.htm 

From itamar at itamarst.org  Tue Jul 26 08:39:46 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 26 Jul 2011 08:39:46 -0400
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and other
 users of the global reactor
Message-ID: <1311683986.1645.35.camel@blake>

Deep within the bowels of the new TLS code, cooperate() is used.
Unfortunately, that uses the global reactor... which means it breaks in
tests that create a new reactor instance. Should I just change the new
TLS code to take in a reactor instance and pass it everywhere? Or, as
part of the test framework, have runReactor override the global reactor
instance?

-Itamar



From _ at lvh.cc  Tue Jul 26 08:57:48 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 26 Jul 2011 14:57:48 +0200
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and
 other users of the global reactor
In-Reply-To: <1311683986.1645.35.camel@blake>
References: <1311683986.1645.35.camel@blake>
Message-ID: <CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>

Gut feeling says change the new TLS code to take in a reactor instance and
pass it everywhere.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110726/069264bf/attachment.htm 

From glyph at twistedmatrix.com  Wed Jul 27 17:06:20 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:06:20 -0400
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and
	other users of the global reactor
In-Reply-To: <CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>
References: <1311683986.1645.35.camel@blake>
	<CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>
Message-ID: <D6F5E537-E69B-452F-8F8B-BB31C6079991@twistedmatrix.com>


On Jul 26, 2011, at 8:57 AM, Laurens Van Houtven wrote:

> Gut feeling says change the new TLS code to take in a reactor instance and pass it everywhere.

I agree.  Passing parameters explicitly is the way to go.  Especially in the new TLS code, whose primary benefit is the sterner separation of concerns between TLS and reactor socket shenanigans.



From glyph at twistedmatrix.com  Wed Jul 27 17:08:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:08:19 -0400
Subject: [Twisted-Python] Do you use producers with SSL or TLS?
In-Reply-To: <1311596823.1645.18.camel@blake>
References: <1311596823.1645.18.camel@blake>
Message-ID: <2B5CC89D-39DC-44B2-A304-A97A4BE8CB73@twistedmatrix.com>


On Jul 25, 2011, at 8:27 AM, Itamar Turner-Trauring wrote:

> If so, I'd appreciate if if you could test your application against
> trunk Twisted (make sure you have a recent version of pyOpenSSL). I just
> landed some fixes to the new TLS implementation's producer code, and
> catching any problems before we release 11.1 would be good.

Current trunk passes the Calendar Server test suite, which includes some rather torturous actually-doing-TLS-with-the-reactor stuff that has caused many previous iteration of this branch and its friends to break.  This is not quite conclusive, but I'd say it's a good indication :).




From glyph at twistedmatrix.com  Wed Jul 27 17:10:21 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:10:21 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <1311562268.1645.14.camel@blake>
References: <1311562268.1645.14.camel@blake>
Message-ID: <AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>


On Jul 24, 2011, at 10:51 PM, Itamar Turner-Trauring wrote:

> I'm going to merge #5063 next time I have a few minutes when I'm more
> awake, which will mean my yak stack[1] is empty and I can go back to
> working on abortConnection(). As explained in
> http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
> loseConnection(), except it doesn't wait until buffers are written out,
> it closes the connection immediately. The question is, how immediately?
> 
> My current implementation, a bit like one of the half-close code paths,
> ends up calling connectionLost directly. That means you can have a call
> stack that looks like this:
> 
> MyProtocol.dataReceived
> TCPConnection.abortConnection
> ...
> MyProtocol.connectionLost
> 
> This can lead to re-entrancy bugs. I am tempted to suggest a policy of
> No Reactor Reentrancy, but that is currently violated by one of the TCP
> half-close code paths, and producers if I'm not mistaken.
> 
> Some options:
> 
> (a) Leave abortConnection() reentrant.
> (b) Make abortConnection() non-reentrant, don't change any current APIs.
> (c) Make all reactor APIs non-reentrant.
> 
> (Since there's a ticket for documenting the reentrancy policy, you will
> notice I've added another yak to my stack. I'll finish #78 someday!)
> 
> Thoughts?

My main thought here is that protocol reentrancy is bad, and nobody really expects it even if they think it should be fine.

However, I do believe it would be best (easier to test, in particular) to immediately call connectionLost within doRead (or doWrite) after dataReceived exits, rather than callLater(0)-ing it or otherwise placing it into a global call queue.

-glyph

From exarkun at twistedmatrix.com  Wed Jul 27 17:41:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 27 Jul 2011 21:41:58 -0000
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
Message-ID: <20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>

On 09:10 pm, glyph at twistedmatrix.com wrote:
>
>On Jul 24, 2011, at 10:51 PM, Itamar Turner-Trauring wrote:
>>I'm going to merge #5063 next time I have a few minutes when I'm more
>>awake, which will mean my yak stack[1] is empty and I can go back to
>>working on abortConnection(). As explained in
>>http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
>>loseConnection(), except it doesn't wait until buffers are written 
>>out,
>>it closes the connection immediately. The question is, how 
>>immediately?
>>
>>My current implementation, a bit like one of the half-close code 
>>paths,
>>ends up calling connectionLost directly. That means you can have a 
>>call
>>stack that looks like this:
>>
>>MyProtocol.dataReceived
>>TCPConnection.abortConnection
>>...
>>MyProtocol.connectionLost
>>
>>This can lead to re-entrancy bugs. I am tempted to suggest a policy of
>>No Reactor Reentrancy, but that is currently violated by one of the 
>>TCP
>>half-close code paths, and producers if I'm not mistaken.
>>
>>Some options:
>>
>>(a) Leave abortConnection() reentrant.
>>(b) Make abortConnection() non-reentrant, don't change any current 
>>APIs.
>>(c) Make all reactor APIs non-reentrant.
>>
>>(Since there's a ticket for documenting the reentrancy policy, you 
>>will
>>notice I've added another yak to my stack. I'll finish #78 someday!)
>>
>>Thoughts?
>
>My main thought here is that protocol reentrancy is bad, and nobody 
>really expects it even if they think it should be fine.
>
>However, I do believe it would be best (easier to test, in particular) 
>to immediately call connectionLost within doRead (or doWrite) after 
>dataReceived exits, rather than callLater(0)-ing it or otherwise 
>placing it into a global call queue.

Probably not easier to test, nor easier to get right.  A single 
generalized solution to avoid re-entrancy is probably the only way to 
avoid a perpetual sequence of accidental re-entrant calls in obscure 
untested cases in each different reactor implementation.

Perhaps the solution doesn't need to be `reactor.callLater(0, ...)`, but 
I think various implementations will be better if they put tasks into 
some kind of queue, perhaps checked at the end of the iteration instead 
of in the next iteration, rather than special casing each possible re- 
entrant event in each possible event dispatcher.

Jean-Paul


From glyph at twistedmatrix.com  Wed Jul 27 18:10:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 18:10:59 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
	<20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
Message-ID: <835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>


On Jul 27, 2011, at 5:41 PM, exarkun at twistedmatrix.com wrote:

>> My main thought here is that protocol reentrancy is bad, and nobody 
>> really expects it even if they think it should be fine.
>> 
>> However, I do believe it would be best (easier to test, in particular) 
>> to immediately call connectionLost within doRead (or doWrite) after 
>> dataReceived exits, rather than callLater(0)-ing it or otherwise 
>> placing it into a global call queue.
> 
> Probably not easier to test, nor easier to get right.  A single 
> generalized solution to avoid re-entrancy is probably the only way to 
> avoid a perpetual sequence of accidental re-entrant calls in obscure 
> untested cases in each different reactor implementation.

Fair point; upon reflection of all the previous ad-hoc non-reentrancy stuff I've seen in the reactor, I retract my suggestion.  For testing, it's easy enough to plug a Clock() in there and iterate it once.

> Perhaps the solution doesn't need to be `reactor.callLater(0, ...)`, but 
> I think various implementations will be better if they put tasks into 
> some kind of queue, perhaps checked at the end of the iteration instead 
> of in the next iteration, rather than special casing each possible re- 
> entrant event in each possible event dispatcher.

What would be the point of adding another task queue to the reactor?  This sounds like a solution to a non-problem.  (Although I might have suggested the same thing myself if I hadn't thought about it too much first.)

The answer that comes to mind when I think about this question is that an end-of-iteration queue would avoid unnecessary additional invocations of whatever multiplexing system call the reactor needs to make.  But there are several points on the down side:

it's more code to maintain
it's more interfaces for users, or at least maintainers, to learn
it's an optimization, and so we should produce a benchmark indicating that the optimization makes sense and is effective before doing it
the optimization could be applied to callLater as it stands; any callLater(0) calls could be executed before the next reactor tick

Mostly though, an additional queue for non-reentrancy would be an ad-hoc special-case solution to one tiny part of the more general problem that reactor event ordering is a complete accident with unforseen consequences.  If there were a more general scheduling mechanism, we could schedule events in a better order overall.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110727/1f81ad96/attachment.htm 

From itamar at itamarst.org  Wed Jul 27 21:42:22 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 27 Jul 2011 21:42:22 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
	<20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
	<835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>
Message-ID: <1311817342.1645.40.camel@blake>

On Wed, 2011-07-27 at 18:10 -0400, Glyph Lefkowitz wrote:


> Mostly though, an additional queue for non-reentrancy would be an
> ad-hoc special-case solution to one tiny part of the more general
> problem that reactor event ordering is a complete accident with
> unforseen consequences.  If there were a more general scheduling
> mechanism, we could schedule events in a better order overall.

We already have a queue, for reactor.callFromThread. We could add, say,
reactor.runInABit, and make reactor.callFromThread that just adds a
waker notification after calling that.




From exarkun at twistedmatrix.com  Sun Jul 31 00:05:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Jul 2011 04:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1312085126.51.796725699@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110731/55316759/attachment.htm 

From xfrost11 at yahoo.com  Sun Jul 31 01:01:06 2011
From: xfrost11 at yahoo.com (Justin Frost)
Date: Sat, 30 Jul 2011 22:01:06 -0700 (PDT)
Subject: [Twisted-Python] Adding introspection to xlmrpc server
Message-ID: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>

I'm trying the example found at:
http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
And it doesn't seem to be working. ?The following test code fails:
import xmlrpclibs = xmlrpclib.ServerProxy("http://localhost:8080")print s.listMethods()
The error says that the listMethods method isn't defined. ?If I create an xmrpc server without twisted and add introspection, it works fine. ?Is there a problem with the example or am I doing something wrong?
Thanks,Justin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110730/94f4d235/attachment.htm 

From rene at klootwijk.org  Sun Jul 31 17:45:39 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Sun, 31 Jul 2011 23:45:39 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
Message-ID: <00e301cc4fcb$30a5cf30$91f16d90$@org>

I have written several daemons that listen to the serialport. Everything
works well, however the serial port connections are actually USB connections
over IP (using an USB network hub). This means the connection is lost once
in a while which is detected and triggers the connectionLost method of the
protocol. I tried numerous things to reconnect to the serial port but
without success. When I reconnect to the serial port I doubt what to do with
the reactor parameter, when I specify the current reactor, I am able to
reconnect to the serial  port, the connectionMade method of the protocol is
triggered, but it will never trigger dataReceived although I know data is
arriving. Does any body have a glue how you can reconnect to the serial port
within a running reactor loop?

--

Rene

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110731/eed25ae1/attachment.htm 

From andrew at bemusement.org  Sun Jul 31 19:00:38 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 1 Aug 2011 09:00:38 +1000
Subject: [Twisted-Python] Adding introspection to xlmrpc server
In-Reply-To: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
References: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
Message-ID: <20110731230038.GC6944@aihal.home.puzzling.org>

Justin Frost wrote:
>    I'm trying the example found at:
>    [1]http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
>    And it doesn't seem to be working. ?The following test code fails:
>    import xmlrpclib
>    s = xmlrpclib.ServerProxy("http://localhost:8080")
>    print s.listMethods()
>    The error says that the listMethods method isn't defined. ?If I create an
>    xmrpc server without twisted and add introspection, it works fine. ?Is
>    there a problem with the example or am I doing something wrong?

Try:

    print s.system.listMethods()

-Andrew.



From glyph at twistedmatrix.com  Sun Jul 31 19:02:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Jul 2011 19:02:38 -0400
Subject: [Twisted-Python] Adding introspection to xlmrpc server
In-Reply-To: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
References: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
Message-ID: <4368EF74-8E70-4413-AE1B-D1A823643B69@twistedmatrix.com>


On Jul 31, 2011, at 1:01 AM, Justin Frost wrote:

> I'm trying the example found at:
> 
> http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
> 
> And it doesn't seem to be working.  The following test code fails:
> 
> import xmlrpclib
> s = xmlrpclib.ServerProxy("http://localhost:8080")
> print s.listMethods()
> 
> The error says that the listMethods method isn't defined.  If I create an xmrpc server without twisted and add introspection, it works fine.  Is there a problem with the example or am I doing something wrong?
> 
> Thanks,
> Justin

As per the XML-RPC introspection specification <http://xmlrpc-c.sourceforge.net/introspection.html>, the method you're looking for is 'system.listMethods', not 'listMethods'.

You can fix your client example by doing 'print s.system.listMethods()' instead of 'print s.listMethods()'.

I'm assuming that the "xmlrpc server without Twisted" is violating the spec for convenience; you can always make an xmlrpc_listMethods yourself which calls the introspection object's listMethods.

Hope this helps,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110731/f24d45fc/attachment.htm 

From _ at lvh.cc  Sun Jul 31 19:37:17 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Aug 2011 01:37:17 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <00e301cc4fcb$30a5cf30$91f16d90$@org>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
Message-ID: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110801/012b4f39/attachment.htm 

From _ at lvh.cc  Fri Jul  1 04:29:01 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 12:29:01 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere nicer
Message-ID: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>

Hi,


As some of you may already know (either through a backchannel or because you
talked to me at Europython), there has been some talk about moving Twisted
way from Trac+SVN to somewhere that isn't Trac+SVN.

A lot of the devs do like SVN. My guess is that that's mainly because they
don't actually use SVN, they use Combinator, or something. On the other
hand, I do think that Trac is pretty universally loathed, and it would be a
good idea to get away from it.

There's a few existing hosting solutions:

   1. Launchpad (+ Bazaar as the default vcs)
   2. Bitbucket (+ Mercurial as the default vcs)
   3. Github (+ Git as the default vcs)

Although I've hated git for a long while (and I still don't like it very
much), I firmly believe Github is the right thing for Twisted. My incredibly
unscientific poll amongst people who like Twisted but aren't devs is that
they all love or at least like Github, and a surprising number has a
distaste for Launchpad (unfamiliarity with Bazaar, perceived
developer-unfriendly UI, slowness).

Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
transition? :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/663e220e/attachment.html>

From jml at mumak.net  Fri Jul  1 04:42:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 11:42:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>

On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
...
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

I support Twisted moving to a DVCS and to something better than Trac.
I personally would prefer Twisted to use Launchpad.

Some points:
 * Launchpad is much faster now that it was six months ago
 * Its code review system works well with UQDS
 * Launchpad is open source & therefore patchable

However, I won't argue too hard about it.

jml



From mithrandi at mithrandi.net  Fri Jul  1 04:48:37 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 1 Jul 2011 12:48:37 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

I'm not sure I understand what you mean by "aren't devs". Do you mean
"aren't Twisted developers"? I don't see why someone who isn't a
developer would particularly care what development tools Twisted uses.

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)

My personal preference would definitely be Launchpad+bzr >
Bitbucket+hg > Github+git. There are also a fair number of
Twisted-related projects already on Launchpad.

On the other hand, I'm not sure this is a constructive way to approach
this issue.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From _ at lvh.cc  Fri Jul  1 04:57:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 12:57:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
Message-ID: <BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:48 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

>  I'm not sure I understand what you mean by "aren't devs". Do you mean
> "aren't Twisted developers"? I don't see why someone who isn't a
> developer would particularly care what development tools Twisted uses.
>

Yes, this is what I meant.


>  > Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> BAD
> > PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning
> the
> > transition? :)
>
> My personal preference would definitely be Launchpad+bzr >
> Bitbucket+hg > Github+git. There are also a fair number of
> Twisted-related projects already on Launchpad.
>

Is the reason you would prefer bitbucket over github related to bitbucket
and github, or git and hg?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/0a03be93/attachment.html>

From screwtape at froup.com  Fri Jul  1 04:59:32 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 20:59:32 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <20110701105932.GA21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 12:29:01PM +0200, Laurens Van Houtven wrote:
> There's a few existing hosting solutions:
> 
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)

As a very-occasional Twisted contributor (but a long-time fan!) I'll
vote for option 3. I'm not particularly a fan of Github[1], but Git is the
DVCS I know best, and I'd be more than happy for Twisted Labs to make
it easier for me (and people like me) to contribute.

On the other hand, using git would probably complicate the build/review
process: since Github repositories are (as far as I know) owned by
individuals, you might not be able to set up access for multiple people,
and hence the current scheme of "push your changes to a branch on the
central server, tell the buildbots to build it" might not be possible.

Tim.

[1] In fact, I'm vaguely uneasy about "distributed version control"
being so centralised  on a single piece of commercially-owned
infrastructure. On the other hand, the only hosted alternative would be
Gitorious, and it doesn't have a lot of the shiny features Github has,
like bug-tracking.



From rlotun at gmail.com  Fri Jul  1 05:00:16 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 1 Jul 2011 12:00:16 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>

Hi,

On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).
>
>
I vote for GitHub too. Git's a pain but powerful (no need for combinator),
and GitHub has a pretty good API into everything - low level repo innards,
to issues/tickets. Also, GitHub's webhook system can easily integrate with
buildbot (we used to do it at TweetDeck). Code review is doable by pull
requests too. You can even map twistedmatrix.com to a github hosted website,
which itself would be a repo. Oh, and the wikis are git repos too.

Given all these tools, I see mappings for all of Twisted's bits and pieces
(unless I'm missing something).

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/da6c64d4/attachment.html>

From screwtape at froup.com  Fri Jul  1 05:01:18 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 21:01:18 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
Message-ID: <20110701110118.GB21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 12:48:37PM +0200, Tristan Seligmann wrote:
> On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> > Although I've hated git for a long while (and I still don't like it very
> > much), I firmly believe Github is the right thing for Twisted. My incredibly
> > unscientific poll amongst people who like Twisted but aren't devs is that
> > they all love or at least like Github, and a surprising number has a
> > distaste for Launchpad (unfamiliarity with Bazaar, perceived
> > developer-unfriendly UI, slowness).
> 
> I'm not sure I understand what you mean by "aren't devs". Do you mean
> "aren't Twisted developers"? I don't see why someone who isn't a
> developer would particularly care what development tools Twisted uses.

Perhaps "potential Twisted developers who haven't decided to contribute
yet"?



From _ at lvh.cc  Fri Jul  1 05:06:30 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 13:06:30 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110701105932.GA21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<20110701105932.GA21836@boombah.thristian.org>
Message-ID: <BANLkTi=H-A2WvPvZxhhoY3Z0pwP_m0emUA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:59 PM, Tim Allen <screwtape at froup.com> wrote:

> On the other hand, using git would probably complicate the build/review
> process: since Github repositories are (as far as I know) owned by
> individuals, you might not be able to set up access for multiple people,
> and hence the current scheme of "push your changes to a branch on the
> central server, tell the buildbots to build it" might not be possible.
>

No, this is not a problem, Github has the concept of "organisations" which
Glyph has already set up, so we can have this done properly :)

Also Github has well supported API notification support for when new commits
come in. Not so much for issues, but I'm working on a solution for that...


> Tim.
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/f8cf8154/attachment.html>

From ilja.livenson at gmail.com  Fri Jul  1 05:09:57 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 1 Jul 2011 14:09:57 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110701110118.GB21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
	<20110701110118.GB21836@boombah.thristian.org>
Message-ID: <BANLkTikRg9CaKzzTqbFmzwDUCMaK2E5xag@mail.gmail.com>

On 1 July 2011 14:01, Tim Allen <screwtape at froup.com> wrote:
> On Fri, Jul 01, 2011 at 12:48:37PM +0200, Tristan Seligmann wrote:
>> On Fri, Jul 1, 2011 at 12:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
>> > Although I've hated git for a long while (and I still don't like it very
>> > much), I firmly believe Github is the right thing for Twisted. My incredibly
>> > unscientific poll amongst people who like Twisted but aren't devs is that
>> > they all love or at least like Github, and a surprising number has a
>> > distaste for Launchpad (unfamiliarity with Bazaar, perceived
>> > developer-unfriendly UI, slowness).
>>
>> I'm not sure I understand what you mean by "aren't devs". Do you mean
>> "aren't Twisted developers"? I don't see why someone who isn't a
>> developer would particularly care what development tools Twisted uses.
>
> Perhaps "potential Twisted developers who haven't decided to contribute
> yet"?
>

I'd  support github. I'm somewhat new to twisted community, no code
contributions so far (using twisted in my own projects), but github
makes 3rd party commits to a project much easier.

Ilja



From therve at free.fr  Fri Jul  1 05:16:54 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 13:16:54 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <4E0DACA6.50108@free.fr>

Le 01/07/2011 12:29, Laurens Van Houtven a écrit :
> Hi,
> 
> 
> As some of you may already know (either through a backchannel or because you
> talked to me at Europython), there has been some talk about moving Twisted
> way from Trac+SVN to somewhere that isn't Trac+SVN.
> 
> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.
> 
> There's a few existing hosting solutions:
> 
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)
> 
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).

Hi Laurens,

Thanks for pushing this. Personally, I would prefer Launchpad and Bzr,
but we've been thinking about using it for the past 3 years, and nothing
really happened. What I really care about is that we move away from Trac
(for bugs at least) and SVN.

As I told you in Florence, if you come with a nice migration plan *and*
you're ready to take on the burden, that's awesome and you have all my
support for moving to Github. But, if somebody else is ready to do the
same thing for Launchpad, I'll support him first. It seems unlikely though.

-- 
Thomas



From mithrandi at mithrandi.net  Fri Jul  1 05:45:23 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 1 Jul 2011 13:45:23 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAMcKhMT49ffEpj0K43uO1kfDUuTH51Oa1n66Ud2JnV-KHU55HQ@mail.gmail.com>
	<BANLkTimCkra-y3K9_C-Qqtr2kT5ROMxwmA@mail.gmail.com>
Message-ID: <CAMcKhMQ39udVsaDkL4TftbVeEvt+RF-SPY7Tszw+moFWLkp8qQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:57 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Is the reason you would prefer bitbucket over github related to bitbucket
> and github, or git and hg?

The latter. Launchpad+bzr is at the top of my list because of
Launchpad; Bitbucket+hg ranks over Github+git because of hg. (Or
because of git, depending on how you look at it...)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From itamar at itamarst.org  Fri Jul  1 06:14:19 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 08:14:19 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <1309522459.13270.29.camel@blake>

On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
> planning the transition? :)

Unless I'm mistaken, Github is a proprietary system, which means I'm
unhappy about hosting our project there. At the minimum I'd want a very
good story about how we can get all our data out if we need to. And even
then I'd probably be against it. What's more, we can switch to
git/bzr/hg without switching to a hosted system (e.g. trac with
GitPlugin, and redmine has builtin integration for all of those.). Why
does git imply github?

In my opinion the biggest barrier to new developers is not whether we
use git or subversion or what have you, but the high quality of code
required (coding standard, tests, passing code review). A DVCS may well
encourage more users, but I'm skeptical it will have a major impact.

-Itamar




From anshul.singhle at gmail.com  Fri Jul  1 06:14:31 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 17:44:31 +0530
Subject: [Twisted-Python] Conch Testing server and client
Message-ID: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>

Hi,
I have to write tests for a custom conch server. My approach is to make a
test client and then connect it to my server in my testcase. I have been
able to create a client that can interface with my server, but i'm not able
to do it from within the test case.
What I'm trying is :
class TestAccountStatus(unittest.TestCase):
     def setUp(self):
         ssh_server = Server()
         self.server = reactor.listenTCP(ssh_server.port,
                      ssh_server.application(),
                      interface=ssh_server.interface)
     def tearDown(self):
         server, self.server = self.server,None
         return server.stopListening()
     def test_1(self):
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         return d
The transport SimpleTransport is my custom transport.SSHClientTransport
instance. The class Server() is a wrapper around an SSHFactory insatance.
The problem I'm facing is that after this line >
d = protocol.ClientCreator(reactor, SimpleTransport).connectTCP('localhost',
self.server.getHost().port)
I have to write reactor.run(), otherwise the client is not starting. If I
write reactor.run() the test doesn't stop (understandable since the reactor
isn't being stopped).
Basically I want to know how I can start the client without running
reactor.run()

Thanks in Advance!!
Anshul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/973071e9/attachment.html>

From jml at mumak.net  Fri Jul  1 06:34:03 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 13:34:03 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DACA6.50108@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<4E0DACA6.50108@free.fr>
Message-ID: <BANLkTikumPNFSYf3F_Cse7FWzu4gbWM5iQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:16 PM, Thomas Hervé <therve at free.fr> wrote:
...
> Thanks for pushing this. Personally, I would prefer Launchpad and Bzr,
> but we've been thinking about using it for the past 3 years, and nothing
> really happened. What I really care about is that we move away from Trac
> (for bugs at least) and SVN.

FWIW, I started trying to migrate to Bazaar a while ago, while still
keeping us on Trac. (Back then, Launchpad was ruled out on account of
being proprietary). It would be much easier to move to Bazaar *and*
Launchpad at the same time. I do not believe that it has seriously
been attempted by anyone involved in Twisted.

jml



From exarkun at twistedmatrix.com  Fri Jul  1 06:42:55 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Jul 2011 12:42:55 -0000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
Message-ID: <20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>

On 12:14 pm, anshul.singhle at gmail.com wrote:
>Hi,
>I have to write tests for a custom conch server. My approach is to make 
>a
>test client and then connect it to my server in my testcase. I have 
>been
>able to create a client that can interface with my server, but i'm not 
>able
>to do it from within the test case.
>What I'm trying is :
>class TestAccountStatus(unittest.TestCase):
>     def setUp(self):
>         ssh_server = Server()
>         self.server = reactor.listenTCP(ssh_server.port,
>                      ssh_server.application(),
>                      interface=ssh_server.interface)
>     def tearDown(self):
>         server, self.server = self.server,None
>         return server.stopListening()
>     def test_1(self):
>         d = protocol.ClientCreator(reactor,
>SimpleTransport).connectTCP('localhost', self.server.getHost().port)
>         return d
>The transport SimpleTransport is my custom transport.SSHClientTransport
>instance. The class Server() is a wrapper around an SSHFactory 
>insatance.
>The problem I'm facing is that after this line >
>d = protocol.ClientCreator(reactor, 
>SimpleTransport).connectTCP('localhost',
>self.server.getHost().port)
>I have to write reactor.run(), otherwise the client is not starting. If 
>I
>write reactor.run() the test doesn't stop (understandable since the 
>reactor
>isn't being stopped).
>Basically I want to know how I can start the client without running
>reactor.run()

The reactor should be started for you, automatically.

Jean-Paul



From screwtape at froup.com  Fri Jul  1 06:57:44 2011
From: screwtape at froup.com (Tim Allen)
Date: Fri, 1 Jul 2011 22:57:44 +1000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
Message-ID: <20110701125744.GC21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 05:44:31PM +0530, Anshul Singhle wrote:
> What I'm trying is :
> class TestAccountStatus(unittest.TestCase):

Is that the Python standard library's unittest.TestCase, or
twisted.trial.unittest.TestCase? As Jean-Paul says, Twisted's TestCase
should automatically handle the reactor for you; that's why it exists.
:)



From _ at lvh.cc  Fri Jul  1 06:57:39 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 14:57:39 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <BANLkTi=ka4iCHHta0G-Z79O2n3G+v_wGKQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:14 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:
>
> > Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
> > BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
> > planning the transition? :)
>
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to.


Github has a much nicer API for pulling out all of your data than, say, Trac
does. I know this because I'm drafting out sketches for getting something to
port Trac's wikis and tickets to the other's...


> ...then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>

git implies github because nobody, not even me, thinks git is worth using
when you don't have github super powers to back it up. The point here isn't
switching to git, it's switching to github. They've worked very hard to make
contribution really easy to do, and I'd say they've succeeded.

trac's git-plugin is not something I would work on transitioning, because
part of the point is to get rid of Trac. Redmine *is* a much better system
than trac (both in terms of maintenance and UX), but has other issues. For
example, last time I tried the Bzr plugin for it it was pretty unusable.
(Only supports a single branch? *Really*?).

Redmine+git might be on the table but a) nobody really likes git that much
b) we wouldn't get something as sexy as pull requests/merge proposals like
we would on LP or Github. AFAICT there are no code review tools for Redmine
that are quite as good. There are two code review plugins for Redmine.
They've tried both at Markus, and the conclusion was "use review board".
That gives us more moving parts to maintain.

A huge advantage of using Github, IMHO, is the pull requests. You don't need
to ask permission for a commit bit before you can start pushing to branches.
You just fork and do your thing. This makes for a very low threshold for
contribution. With Redmine, you'd still have to send patches in, which I
think is a far less pleasant story than pull requests. (This paragraph
applies equally well to Launchpad's merge proposals.)

In Pull Requests, you see a timeline with both comments and commits, so it's
very easy to check if comments passed in review have been addressed or not.

In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.
>

The reason I'd prefer Github is only partially the DVCS (and, like you said,
any DVCS would do), but to a much larger extent the community on Github.


>
> -Itamar
>
> --
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/a5878aa8/attachment.html>

From rlotun at gmail.com  Fri Jul  1 06:58:05 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 1 Jul 2011 13:58:05 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <BANLkTi=_Uc0fuZP6=PzGHBG0=SAMNa9Yjg@mail.gmail.com>

Hi,

On Fri, Jul 1, 2011 at 1:14 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:
>
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>

True, GitHub is proprietary, but it's free for open source projects. There
are many high-quality open-source projects hosted on it:

 * Erlang/OTP (https://github.com/erlang/otp)
 * Redis (https://github.com/antirez/redis)
 * Jquery (https://github.com/jquery)
 * RabbitMQ (https://github.com/rabbitmq)
 * Ruby on Rails (https://github.com/rails)
 * Node.js (https://github.com/joyent/node)
 * Tornado (https://github.com/facebook/tornado)

to name a few. GitHub also has an extensive API to programmatically
access/backup all information around your project (like tickets and wikis),
and it has integrated code review which allows you to comment on individual
lines of code (this could be better, but generally works well).

I suppose the main reason to even suggest it, given its proprietary nature
and use of git, is that's currently where a lot of developer activity is,
and its growing. GitHub makes it easy to contribute patches to projects and
keep track of progress. It also has a nice way to keep track of related
repositories (via 'organizations').

And, well, it looks better than Launchpad and is bit more mature than
Bitbucket.

Given the past involvement in Launchpad and its use of Twisted though, I
understand why that would be an obvious choice. I just want to make sure all
sides of the argument are represented.

In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.


I think you're right in that code quality is the most important factor here.
However, as a small point, a DVCS surely should be able give the project a
better ability to maintain high quality code though - isn't Combinator just
tool over subversion to make branching easier? At least with most DVCS's
branching is cheap, so there wouldn't need to be yet another tool to setup
to get the development process started for new developers.

Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/3019166d/attachment.html>

From anshul.singhle at gmail.com  Fri Jul  1 06:59:12 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 18:29:12 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
Message-ID: <BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>

I understand that. The problem I'm facing is that unless I write
"reactor.run()" my client isn't starting up. From what I understood in the
trial documentation, I should simply call the connectTCP method and then
return a deferred. However, if I do that, the client isn't starting. I'll
post some of the client code for you info :
class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth('webchick',
                SimpleConnection()))

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed("Thai1mil3ahb")
    def getPublicKey(self):
        print "trying public key"
        path = os.path.expanduser('~/.ssh/id_rsa')
        # this works with rsa too
        # just change the name here and in getPrivateKey
        if not os.path.exists(path) or self.lastPublicKey:
            # the file doesn't exist, or we've tried a public key
            return
        return
keys.Key.fromFile(filename=path+'.pub',passphrase='pikachu').blob()

    def getPrivateKey(self):
        path = os.path.expanduser('~/.ssh/id_rsa')
        return
defer.succeed(keys.Key.fromFile(path,passphrase='pikachu').keyObject)
Now , in my test case :
def test_1(self):
         def got_data(data):
             self.assertEquals(data,"a")
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         d.addCallback(got_data)
         return d
The callback is firing, but the client is not started and *data* is a
SimpleTransport Instance.
Any thoughts on why this is happening and what I am doing wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/6f06970b/attachment.html>

From anshul.singhle at gmail.com  Fri Jul  1 07:03:18 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 18:33:18 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701125744.GC21836@boombah.thristian.org>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701125744.GC21836@boombah.thristian.org>
Message-ID: <BANLkTiknNhO0pW7Z6E8=8f9r-n+oP9SFrg@mail.gmail.com>

> Is that the Python standard library's unittest.TestCase, or
> twisted.trial.unittest.TestCase? As Jean-Paul says, Twisted's TestCase
> should automatically handle the reactor for you; that's why it exists.
> :)
>
It is Twisted's TestCase( twisted.trial.unittest.TestCase)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/d2844230/attachment.html>

From _ at lvh.cc  Fri Jul  1 07:08:53 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:08:53 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
Message-ID: <BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:

> I support Twisted moving to a DVCS and to something better than Trac.
> I personally would prefer Twisted to use Launchpad.
>
> Some points:
>  * Launchpad is much faster now that it was six months ago
>

Launchpad's definitely getting faster, but it's still not in the same
ballpark. bzr, too, seems a lot slower on many operations (although I'm not
sure how much of this is due to lp, and how much is due to git) despite
having been sped up a lot over the years.

Here's my incredibly unscientific (maybe these do significantly different
amounts of work, I'm not sure) test for checking out Twisted using
lp:twisted and github's powdahound/twisted:

bzr: 63.29s user 2.80s system 1:43.32 total
git: 6.93s user 3.28s system 0:45.75 total

That data is skewed in bzr's favour because someone started downloading
something huge halfway the git test. My point is that git's pretty fast, not
even particularly so for clone (because the slowest part there is the
network). Most of the work I've ever done on Twisted has been using bzr-svn,
and it has been at times noticeably slow. (but not quite frustratingly so).

Either way, I think this is probably the wrong discussion. Most of the time
I hear "Launchpad's UX is bad for coders, and it's slow", not "Launchpad is
slow and it's UX is bad".

  * Its code review system works well with UQDS
>

True, but I don't see how it works better than github's pull requests.


>  * Launchpad is open source & therefore patchable
>

Yes, that's a good point. I like that it's open source (although it has an
unfortunate license). Is the patching of Launchpad by third parties followed
by those patches landing in production a common occurrence?

However, I won't argue too hard about it.
>
> jml
>


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/e560ee1c/attachment.html>

From jml at mumak.net  Fri Jul  1 07:17:53 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:17:53 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
Message-ID: <BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:08 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:
...
>>  * Launchpad is open source & therefore patchable
>
> Yes, that's a good point. I like that it's open source (although it has an
> unfortunate license). Is the patching of Launchpad by third parties followed
> by those patches landing in production a common occurrence?

Launchpad doesn't get a lot of external contributors, but their
patches almost always land in production promptly. I suspect Launchpad
is comparable to Twisted in this regard.

<https://dev.launchpad.net/Contributions> miscategorizes some people,
but gives some idea.

jml



From exarkun at twistedmatrix.com  Fri Jul  1 07:21:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Jul 2011 13:21:39 -0000
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
Message-ID: <20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>

On 12:59 pm, anshul.singhle at gmail.com wrote:
>I understand that. The problem I'm facing is that unless I write
>"reactor.run()" my client isn't starting up. From what I understood in 
>the
>trial documentation, I should simply call the connectTCP method and 
>then
>return a deferred. However, if I do that, the client isn't starting. 
>I'll
>post some of the client code for you info :
>
>[snip]

Complicated, incomplete code snippets aren't very useful.  Always follow 
http://sscce.org/ when sharing code.  For example:

    from twisted.trial.unittest import TestCase
    from twisted.internet.defer import Deferred
    from twisted.internet import reactor

    class ReactorIsRunningTests(TestCase):
        def test_isTheReactorRunning(self):
            d = Deferred()
            reactor.callLater(1, d.callback, None)
            return d

The output I expect from this, when run with trial, is one test method 
which takes 1 second to complete, and then succeeds.  The output I get 
is:

    reactortests
      ReactorIsRunningTests
        test_isTheReactorRunning ... 
[OK]

-----------------------------------------------------------------------
    Ran 1 tests in 1.003s

    PASSED (successes=1)

In other words, it behaves as I expect.

Jean-Paul



From therve at free.fr  Fri Jul  1 07:23:44 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 15:23:44 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <4E0DCA60.7040200@free.fr>

Le 01/07/2011 14:14, Itamar Turner-Trauring a écrit :
> On Fri, 2011-07-01 at 12:29 +0200, Laurens Van Houtven wrote:
> 
>> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A
>> BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about
>> planning the transition? :)
> 
> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?

I think there are 2 sides though here: we want to move away from Trac as
well as from SVN. And, the main reason for me is that we don't have to
maintain Trac. So redmine wouldn't solve the whole problem.

As Laurens said as well, the main attraction for git is using github. I
don't think switching to git alone makes a ton of sense.

One thing that concerns me is that Trac supposedly supports bzr, and we
tried to use bzr, but never made the move completely. Why do you think
it will change? Is it just that we didn't take any decisions? Or that
nobody stepped up?

> In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.

Well, even not thinking about new developers, a DVCS will make the life
of current ones easier. Even though we can start to use bzr, it's a bit
clumsy IMHO.

-- 
Thomas



From _ at lvh.cc  Fri Jul  1 07:23:59 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:23:59 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
Message-ID: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>

On Fri, Jul 1, 2011 at 3:17 PM, Jonathan Lange <jml at mumak.net> wrote:

> On Fri, Jul 1, 2011 at 2:08 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> > On Fri, Jul 1, 2011 at 12:42 PM, Jonathan Lange <jml at mumak.net> wrote:
> ...
> >>  * Launchpad is open source & therefore patchable
> >
> > Yes, that's a good point. I like that it's open source (although it has
> an
> > unfortunate license). Is the patching of Launchpad by third parties
> followed
> > by those patches landing in production a common occurrence?
>
> Launchpad doesn't get a lot of external contributors, but their
> patches almost always land in production promptly. I suspect Launchpad
> is comparable to Twisted in this regard.
>

Well, part of the hypothesis of the effects of moving to Github is that a)
the clear separation between "core contributor" and "random contributor"
because a bit more subtle, b) it becomes easier for external contributors to
contribute. So yeah, I guess it is, but it'd be cool if it became a bit more
open to contributions from the more general public :)


> <https://dev.launchpad.net/Contributions> miscategorizes some people,
> but gives some idea.
>

Cool, thanks for the link. I had no idea there were that many.


>
> jml
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/c4e8a7d4/attachment.html>

From _ at lvh.cc  Fri Jul  1 07:29:44 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 15:29:44 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DCA60.7040200@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake> <4E0DCA60.7040200@free.fr>
Message-ID: <BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 3:23 PM, Thomas Hervé <therve at free.fr> wrote:

> Well, even not thinking about new developers, a DVCS will make the life
> of current ones easier. Even though we can start to use bzr, it's a bit
> clumsy IMHO.
>

Also, apparently there are ways of using bzr-svn that confuse the hell out
of Combinator or some other tools, and it'll spew metadata everywhere, or
something. I don't remember what the conditions were, but I do remember that
it was the obvious way of doing it, and glyph yelling at me for it after I
tried ;-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/5aeb4f45/attachment.html>

From anshul.singhle at gmail.com  Fri Jul  1 07:41:33 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 19:11:33 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
Message-ID: <BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>

Ok, here goes :
The test code :

from twisted.trial import unittest
from twisted.internet import defer, protocol, reactor
class TestAccountStatus(unittest.TestCase):
     def setUp(self):
         ssh_server = Server()
         self.server = reactor.listenTCP(ssh_server.port,
                      ssh_server.application(),
                      interface=ssh_server.interface)
         return self.server
     def tearDown(self):
         server, self.server = self.server,None
         return server.stopListening()
     def test_1(self):
         def got_data(data):
             self.assertEquals(data,"a")
         d = protocol.ClientCreator(reactor,
SimpleTransport).connectTCP('localhost', self.server.getHost().port)
         d.addCallback(got_data)
         return d

The client code :
from twisted.conch.ssh import transport, userauth, connection, common, keys,
channel
from twisted.internet import defer, protocol, reactor
class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth('webchick',
                SimpleConnection()))

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        print "Get Password called"
        return defer.succeed("Thai1mil3ahb")

When I run the test I expect :
  tests
  TestAccountStatus
    test_1 ... Get Password called

followed by some errors , but atleast this much should be printed if the
client code is being called properly.
Instead I get:

[FAIL]: tests.TestAccountStatus.test_1

Traceback (most recent call last):
  File "tests.py", line 92, in got_data
    self.assertEquals(data,"a")
twisted.trial.unittest.FailTest: not equal:
a = <tests.SimpleTransport instance at 0x1024aa128>
b = 'a'

Instead of running the client the deferred is just returning an instance of
the Client Transport used by me  (SimpleTransport). Any ideas why this is
happening? Is this becuse I'm not using a ClientFactory or am I using the
deferred all wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/a5584c9b/attachment.html>

From johan.rydberg at edgeware.tv  Fri Jul  1 07:43:03 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Fri, 01 Jul 2011 15:43:03 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<1309522459.13270.29.camel@blake>
	<4E0DCA60.7040200@free.fr>
	<BANLkTin_4M_Jzx=fJWFJtJshqscY2L=PvQ@mail.gmail.com>
Message-ID: <4E0DCEE7.5070600@edgeware.tv>

+1 for github.  The user experience of bitbucket and LP is
secondary compared to github.




From itamar at itamarst.org  Fri Jul  1 07:44:15 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:44:15 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
Message-ID: <1309527855.13270.37.camel@blake>

On Fri, 2011-07-01 at 15:23 +0200, Laurens Van Houtven wrote:


> Well, part of the hypothesis of the effects of moving to Github is
> that a) the clear separation between "core contributor" and "random
> contributor" because a bit more subtle, b) it becomes easier for
> external contributors to contribute. So yeah, I guess it is, but it'd
> be cool if it became a bit more open to contributions from the more
> general public :)

I'm not sure getting more patches should be our main goal, for now.
(It's a good *long term* goal!).

We have a large number of uncommitted third-party patches in tickets. We
have a large number of half-finished developer branches (I'm working on
a couple, since it's an easy way to get things done). These were not
left uncommitted or unfinished because of tool problems, but because of
other issues. Dealing with this seems to me to be higher priority than
getting even more patches we won't get around to incorporating.

If you want more contributions, improving the processes so abandonment
is less likely to happen is the first step. I can certainly think of
ways in which e.g. github might help with that, but this is not a
*technical* problem, it's an organizational and social problem, and at
the very least you should think about how to solve it before redoing all
the technical infrastructure. For example, making sure all reviewable
tickets get reviewed within 7 days, and all new tickets get an answer
within 3 days.

If a switch github is super-successful in getting us more patches, and
then those patches sit in limbo forever, all we've done is alienate
potential developers.





From itamar at itamarst.org  Fri Jul  1 07:46:58 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:46:58 -0400
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
	<BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
Message-ID: <1309528018.13270.39.camel@blake>

On Fri, 2011-07-01 at 19:11 +0530, Anshul Singhle wrote:

>      def test_1(self):
>          def got_data(data):
>              self.assertEquals(data,"a")
>          d = protocol.ClientCreator(reactor,
> SimpleTransport).connectTCP('localhost', self.server.getHost().port)
>          d.addCallback(got_data)
>          return d

ClientCreator.connectTCP returns a Deferred that fires with a Protocol
instance (in this case, a SimpleTransport instance), which you are then
comparing with a string in got_data(). This fails, as one would expect.




From itamar at itamarst.org  Fri Jul  1 07:50:12 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 01 Jul 2011 09:50:12 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <1309528212.13270.41.camel@blake>

This, I believe, is the real problem -- tickets which were reviewed but
never closed:

http://twistedmatrix.com/trac/report/16

That is a very sad list.




From jml at mumak.net  Fri Jul  1 07:54:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:54:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
Message-ID: <BANLkTimUe=2U8o8v+6E5oBbZnZUkzO3Otg@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:23 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
...

> Well, part of the hypothesis of the effects of moving to Github is that a)
> the clear separation between "core contributor" and "random contributor"
> because a bit more subtle, b) it becomes easier for external contributors to
> contribute. So yeah, I guess it is, but it'd be cool if it became a bit more
> open to contributions from the more general public :)
>

I'm sure the Launchpad project would gladly accept your help with
getting new contributors... unless your help was to advise them to
switch to Github ;)

jml



From anshul.singhle at gmail.com  Fri Jul  1 07:56:30 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 1 Jul 2011 19:26:30 +0530
Subject: [Twisted-Python] Conch Testing server and client
In-Reply-To: <1309528018.13270.39.camel@blake>
References: <BANLkTimM9j2GJ5Fjzgrpq0pE13onCSS37g@mail.gmail.com>
	<20110701124255.1894.820551434.divmod.xquotient.1740@localhost.localdomain>
	<BANLkTikBTmZ17mh6x-oHy_S71LW_VT6Wig@mail.gmail.com>
	<20110701132139.1894.579455052.divmod.xquotient.1747@localhost.localdomain>
	<BANLkTinNcUA=zBHfDzM00M2Te3pqkrv4CA@mail.gmail.com>
	<1309528018.13270.39.camel@blake>
Message-ID: <BANLkTikct2fb3S+Tbb-5gKHGA3nXJdhYmg@mail.gmail.com>

> ClientCreator.connectTCP returns a Deferred that fires with a Protocol
> instance (in this case, a SimpleTransport instance), which you are then
> comparing with a string in got_data(). This fails, as one would expect.
>
> So then how do i get the protocol to run? and how do i get the data
received by the protocol? Do I need to create my own deferred that is fired
when the result is retrieved or  is their already such a deferred which I
can callback?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/f22b8856/attachment-0001.html>

From jml at mumak.net  Fri Jul  1 07:56:39 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 14:56:39 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DCA60.7040200@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake> <4E0DCA60.7040200@free.fr>
Message-ID: <BANLkTimXewg27crFh-dad1Kex_neBLF-Ew@mail.gmail.com>

On Fri, Jul 1, 2011 at 2:23 PM, Thomas Hervé <therve at free.fr> wrote:
...
> One thing that concerns me is that Trac supposedly supports bzr, and we
> tried to use bzr, but never made the move completely. Why do you think
> it will change? Is it just that we didn't take any decisions? Or that
> nobody stepped up?
>

For me, the biggest external blocker was not being sure what the
requirements were for moving. The internal blockers of time &
motivation probably dominated.

jml



From therve at free.fr  Fri Jul  1 08:31:16 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 16:31:16 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <4E0DDA34.2080007@free.fr>

Le 01/07/2011 15:44, Itamar Turner-Trauring a écrit :
> On Fri, 2011-07-01 at 15:23 +0200, Laurens Van Houtven wrote:
> 
> 
>> Well, part of the hypothesis of the effects of moving to Github is
>> that a) the clear separation between "core contributor" and "random
>> contributor" because a bit more subtle, b) it becomes easier for
>> external contributors to contribute. So yeah, I guess it is, but it'd
>> be cool if it became a bit more open to contributions from the more
>> general public :)
> 
> I'm not sure getting more patches should be our main goal, for now.
> (It's a good *long term* goal!).

At least personally, moving away from SVN and Trac is not to directly
get more patches. It's mainly that I want as a contributor to use better
tools. Also, I don't want us to maintain the infrastructure; for
example, moving to a more recent Trac cost me personally a good amount
of time; we also have that problem with spam.


> We have a large number of uncommitted third-party patches in tickets. We
> have a large number of half-finished developer branches (I'm working on
> a couple, since it's an easy way to get things done). These were not
> left uncommitted or unfinished because of tool problems, but because of
> other issues. Dealing with this seems to me to be higher priority than
> getting even more patches we won't get around to incorporating.
> 
> If you want more contributions, improving the processes so abandonment
> is less likely to happen is the first step. I can certainly think of
> ways in which e.g. github might help with that, but this is not a
> *technical* problem, it's an organizational and social problem, and at
> the very least you should think about how to solve it before redoing all
> the technical infrastructure. For example, making sure all reviewable
> tickets get reviewed within 7 days, and all new tickets get an answer
> within 3 days.
> 
> If a switch github is super-successful in getting us more patches, and
> then those patches sit in limbo forever, all we've done is alienate
> potential developers.

Well, that logic is a bit flawed though: you're kind of saying that we
shouldn't use a better tool because it may bring us more contributors
than we can handle. At the end of the day, we would still use a better
tool though.

-- 
Thomas



From itamar at itamarst.org  Fri Jul  1 08:42:07 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 10:42:07 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <4E0DDA34.2080007@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
Message-ID: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>

> Well, that logic is a bit flawed though: you're kind of saying that we
> shouldn't use a better tool because it may bring us more contributors
> than we can handle. At the end of the day, we would still use a better
> tool though.

No, I'm saying that given limited resources, addressing the giant piles of
unused code we have (and figuring out how new code won't end up in the
attic) seems like a higher priority. Using better tools is always a good
idea, and if you'd like to argue that github means patches are less likely
to be abandoned that's a good argument to make.

I'm arguing for a broader look at what our development process problems
are, and that perhaps efforts should be directed elsewhere.




From luke-lists at hybrid-logic.co.uk  Fri Jul  1 08:56:54 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Fri, 01 Jul 2011 15:56:54 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
Message-ID: <1309532214.30844.27.camel@behemoth>

Hi all,

On Fri, 2011-07-01 at 12:00 +0100, Reza Lotun wrote:
> On Fri, Jul 1, 2011 at 11:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>         Although I've hated git for a long while (and I still don't
>         like it very much), I firmly believe Github is the right thing
>         for Twisted. My incredibly unscientific poll amongst people
>         who like Twisted but aren't devs is that they all love or at
>         least like Github, and a surprising number has a distaste for
>         Launchpad (unfamiliarity with Bazaar, perceived
>         developer-unfriendly UI, slowness).
> 
> I vote for GitHub too. Git's a pain but powerful (no need for
> combinator), and GitHub has a pretty good API into everything - low
> level repo innards, to issues/tickets. Also, GitHub's webhook system
> can easily integrate with buildbot (we used to do it at TweetDeck).
> Code review is doable by pull requests too. You can even map
> twistedmatrix.com to a github hosted website, which itself would be a
> repo. Oh, and the wikis are git repos too. 

> Given all these tools, I see mappings for all of Twisted's bits and
> pieces (unless I'm missing something).

I agree, possibly the biggest win with GitHub is the way it encourages
fellow users to fork a project and contribute patches via pull requests.
Popularity doesn't always equate to quality but in this case (amongst
developers) I think it *is* indicative that they've got something right.
Pull requests can be used to implement the Twisted review model as they
form a good centralised place to review a set of changes.  GitHub's
issue tracker used to be pretty shoddy but has had a big upgrade
recently and is almost good now.

Git is powerful, and while it can also be confusing at times
StackOverflow almost always has the answer ;-)  Also, managing branches
in git really is real pleasure compared to the mish-mash of merging
branches with SVN and various external scripts.  For example, to merge
'somebranch' into master (i.e. trunk) and push it to GitHub (the
'origin' remote), after committing to somebranch, it's just:

git checkout master; git merge somebranch; git push origin master

Addressing the concern of getting your data out of GitHub, since git is
a DVCS, every repository is a complete copy of the entire revision
history.  Therefore, GitHub cannot lock you in.  I suppose the issue
tracker might be a different story, but it has an API.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Mobile: +447791750420

www.hybrid-cluster.com - Cloud web hosting platform 




From _ at lvh.cc  Fri Jul  1 09:02:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 17:02:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309532214.30844.27.camel@behemoth>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=a9ho4E_YJTxpy8ezpdtjgNezgPw@mail.gmail.com>
	<1309532214.30844.27.camel@behemoth>
Message-ID: <BANLkTinCY=oqzdSG_BF1sQs9rUWtGG-A1A@mail.gmail.com>

If the patch applies cleanly, pull requests can even be merged without
involving git directly at all, from the Github web UI.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/4592ac02/attachment.html>

From _ at lvh.cc  Fri Jul  1 09:04:53 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 17:04:53 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>

Itamar makes an excellent point. That probably is one of the worst problems
we have right now. and it definitely needs to be addressed.

Figuring out how code could end up not-in-the-attic sounds like part of the
transition plan to me. I do, in fact, think Github means patches are less
likely to be abandoned. There's two reasons for that. First of all, you
don't have to deal with a patch: you deal with a pull request. That means
there's a branch with commits, and it's already in version control. Because
that version control lives on Github, it's very easy to pull into your own
checkout and work on it.

This lowers the barrier to entry further, and completely gets rid of the
distinction between committers and non-committers we currently have (where
non-committers don't get to use version control, basically, unless they use
bzr or something else, which again is a distinction between workflows for
people with and without commit bits).

The main problem I see in this transition is that Github tickets and pull
requests are distinct elements in the issue tracker, whereas reviews go on
the ticket in Trac/UQDS.

cheers,
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/134adc01/attachment.html>

From itamar at itamarst.org  Fri Jul  1 10:08:49 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 12:08:49 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted and
	it never got in?
In-Reply-To: <BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
Message-ID: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>

In order to have at least some anecdotal evidence --

If you've submitted a patch to Twisted (or started a branch) and it never
made it in, how did that happen? I imagine reasons might include a review
request to write tests, redesign requests, getting distracted, "it works
for me", design discussions that never got anywhere... What happened in
your case?

(I'd also like someone -- lvh? -- to go through report 16 and see if we
can come up with a summary of how those tickets ended up where they are.)




From _ at lvh.cc  Fri Jul  1 10:18:33 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 18:18:33 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTim4h5QkoPYpNSvMfoq58o_gq9fwKQ@mail.gmail.com>

twisted.positioning never got in because I never finish anyth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/35bed590/attachment.html>

From therve at free.fr  Fri Jul  1 10:24:50 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 01 Jul 2011 18:24:50 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
Message-ID: <4E0DF4D2.4060604@free.fr>

Le 01/07/2011 16:42, Itamar Turner-Trauring a écrit :
>> Well, that logic is a bit flawed though: you're kind of saying that we
>> shouldn't use a better tool because it may bring us more contributors
>> than we can handle. At the end of the day, we would still use a better
>> tool though.
> 
> No, I'm saying that given limited resources, addressing the giant piles of
> unused code we have (and figuring out how new code won't end up in the
> attic) seems like a higher priority. Using better tools is always a good
> idea, and if you'd like to argue that github means patches are less likely
> to be abandoned that's a good argument to make.
> 
> I'm arguing for a broader look at what our development process problems
> are, and that perhaps efforts should be directed elsewhere.

While I sympathize with what you're saying, this sounds kind of
orthogonal to me. Sure, we can do better at handling contributions. But
it's an opensource project, everybody does whatever he wants mostly (in
the frame that the project sets).

Saying to Laurens that we have limited "resources" and that he should do
something else doesn't mean that this second task will be done. But it
surely means that first one won't.

-- 
Thomas



From radix at twistedmatrix.com  Fri Jul  1 10:36:21 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 1 Jul 2011 11:36:21 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
>
>
First, I encourage everyone to take a look at (and update)
http://twistedmatrix.com/trac/wiki/WorkflowRequirements

It was created a while back and hasn't been updated in a long time.

Second:


>
>    1. Launchpad (+ Bazaar as the default vcs)
>
>
I'm curious about something: Is it yet possible to revert a merge in bzr
without doing annoying things?


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/4022c908/attachment.html>

From p.mayers at imperial.ac.uk  Fri Jul  1 10:36:43 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Jul 2011 17:36:43 +0100
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E0DF79B.5020800@imperial.ac.uk>

On 01/07/11 17:08, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?

I have submitted patches that went nowhere:

http://twistedmatrix.com/trac/ticket/4602
http://twistedmatrix.com/trac/ticket/4603
http://twistedmatrix.com/trac/ticket/4610
http://twistedmatrix.com/trac/ticket/4666

Some of them seemed to be:

"No, don't do it this way, do it that way". I'll be honest, that's just 
completely demoralising, when you're contributing new functionality.

On that topic, I don't think the Twisted process is as accessible as 
some of you guys think it is I'm afraid. I found the discussion about 
the IPv6 tickets a bit disheartening :o(


However, more constructively (less whiney!) some tickets languished in 
"make these tiny cleanups" and that's just incredibly painful in the 
current setup, with SVN and Trac mediating things.

I've got absolutely no interest in pulling SVN head, writing a patch, 
submitting it as an attachment via Trac and *then* being told "ok, I've 
created this branch. Go off and learn how to do branches in a crappy old 
centralised VCS, and in a way compatible with UQDS, re-do your patch in 
a branch, then send another diff in as a file"

Really? I mean, come on guys...

If it were git/github, then I'd simply make the incremental changes in 
my local git branch, re-push to github and re-submit the pull request.

I hate Launchpad, but I'm sure it's equivalent beats the crap out of SVN.

Please, for the love of god, adopt a DVCS which lets contributors 
develop continuously against a local branch and push changes!

Cheers,
Phil



From jasonjwwilliams at gmail.com  Fri Jul  1 10:39:38 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 10:39:38 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309527855.13270.37.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>
Message-ID: <90E92AC2-53BF-46B9-98F0-4B5CACCEC6BF@gmail.com>



On Jul 1, 2011, at 7:44, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> I'm not sure getting more patches should be our main goal, for now.
> (It's a good *long term* goal!).
> We have a large number of uncommitted third-party patches in tickets.

2 of those are mine. They're almost to the point of being accepted, but we're at that phase where there's a lot of roundtrips due to the code reviewing involved, and syncing SVN in that scenario is such a pain in the rear I've bogged down and gotten side tracked by other projects that have an easier system for contribution workflow ( Github or Bitbucket). I think you'd see the "wither on the vine" rate decline if Twisted moved to a system that made the workflow of contribution smoother. I like tools that make the work, rather than the tool, the focus of the job at hand...and that's definitely not SVN, Trac or LP. 

I'd advocate Git if only because it has the most number of integrations (that work well) with other VCSs, so devs can use the VCS/DVCS client they like best. 

I'd definitely vote for Github as well. The integration between the code, tickets and code review is by far the best I've worked with. 

Also, let's keep in mind the social aspect for visibility. When there's an interesting project, if it's on Github I'll hit the 'watch' button. This means I keep up-to-date on changes and activity for projects I want to use but may never contribute to. Github has opened my eyes to a number of projects that otherwise would have fallen off my radar...and I don't think that's an effect to dismiss lightly. 

-J


From jml at mumak.net  Fri Jul  1 10:41:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Jul 2011 17:41:01 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik8dnJe6NunNv4EXg5WeiskTBz2fg@mail.gmail.com>
Message-ID: <BANLkTimUO24Ja4TPt5ersKLMKLknhA3Acw@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:36 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>
>> Hi,
>>
>
> First, I encourage everyone to take a look at (and
> update) http://twistedmatrix.com/trac/wiki/WorkflowRequirements
> It was created a while back and hasn't been updated in a long time.
> Second:
>
>>
>> Launchpad (+ Bazaar as the default vcs)
>
> I'm curious about something: Is it yet possible to revert a merge in bzr
> without doing annoying things?

I'm sitting around with a bunch of Bazaar developers, and they say this::

On trunk:
  bzr merge -r $REVNO..$(REVNO - 1)
  bzr commit

The person with the failing branch, when they wish to resume development:
  bzr merge trunk
  bzr revert .
  bzr commit

(I'm assuming the case where someone has committed a change that
breaks the build and there may have been more commits to trunk since
then.)

jml



From p.mayers at imperial.ac.uk  Fri Jul  1 10:41:59 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Jul 2011 17:41:59 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <4E0DF8D7.70301@imperial.ac.uk>

On 01/07/11 11:29, Laurens Van Houtven wrote:
> Hi,
>
>
> As some of you may already know (either through a backchannel or because
> you talked to me at Europython), there has been some talk about moving
> Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
>
> A lot of the devs do like SVN. My guess is that that's mainly because
> they don't actually use SVN, they use Combinator, or something. On the

As per my other, longer email: for me, the current SVN/branch 
development model is hugely offputting for occasional contributions, and 
I suspect for people who want to submit 10-100 line changes.

For the love of god, pick a DVCS so that contributors can develop in 
local branches, and pick a DVCS with a good central "pull request" and 
patch review system/engine/site/app/whatever.

I like github and loathe Launchpad personally but really - pick 
anything. Just not SVN. And not Trac.



From _ at lvh.cc  Fri Jul  1 10:52:14 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 18:52:14 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E0DF4D2.4060604@free.fr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<4E0DF4D2.4060604@free.fr>
Message-ID: <BANLkTi=90Wqfm27yjs-yHmP6_ONEU6uZxw@mail.gmail.com>

On Fri, Jul 1, 2011 at 6:24 PM, Thomas Hervé <therve at free.fr> wrote:

> Le 01/07/2011 16:42, Itamar Turner-Trauring a écrit :
> >> Well, that logic is a bit flawed though: you're kind of saying that we
> >> shouldn't use a better tool because it may bring us more contributors
> >> than we can handle. At the end of the day, we would still use a better
> >> tool though.
> >
> > No, I'm saying that given limited resources, addressing the giant piles
> of
> > unused code we have (and figuring out how new code won't end up in the
> > attic) seems like a higher priority. Using better tools is always a good
> > idea, and if you'd like to argue that github means patches are less
> likely
> > to be abandoned that's a good argument to make.
> >
> > I'm arguing for a broader look at what our development process problems
> > are, and that perhaps efforts should be directed elsewhere.
>
> While I sympathize with what you're saying, this sounds kind of
> orthogonal to me. Sure, we can do better at handling contributions. But
> it's an opensource project, everybody does whatever he wants mostly (in
> the frame that the project sets).
>
> Saying to Laurens that we have limited "resources" and that he should do
> something else doesn't mean that this second task will be done. But it
> surely means that first one won't.
>
> --
> Thomas
>

I'd say that's a safe bet.

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/5165d99c/attachment.html>

From chris at emerge-life.de  Fri Jul  1 11:08:33 2011
From: chris at emerge-life.de (chris)
Date: Fri, 01 Jul 2011 19:08:33 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <4E0DF79B.5020800@imperial.ac.uk>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk>
Message-ID: <4E0DFF11.2020400@emerge-life.de>

Hi all,

On 01.07.2011 18:36, Phil Mayers wrote:
> However, more constructively (less whiney!) some tickets languished in
> "make these tiny cleanups" and that's just incredibly painful in the
> current setup, with SVN and Trac mediating things.
>
> I've got absolutely no interest in pulling SVN head, writing a patch,
> submitting it as an attachment via Trac and *then* being told "ok, I've
> created this branch. Go off and learn how to do branches in a crappy old
> centralised VCS, and in a way compatible with UQDS, re-do your patch in
> a branch, then send another diff in as a file"

I absolutely agree with Phil here.
The twisted code and contribution standards are so high that patches 
from new contributors (like myself) are bound to be rejected/resubmitted 
at least once, maybe more. Don't get me wrong, I believe high standards 
are a good thing, but doing continuous development based on tools like 
svn and trac is really painful and it's really difficult to motivate 
yourself to work on a once rejected ticket.

That being said, I believe that the move to a DVCS is a smart move for 
any project looking for continuous community contribution, because IMHO 
they simply allow for a more developer friendly process for all 
involved, thus making the whole review process a more friendly and less 
discouraging thing.

Cheers,
Chris



From glyph at twistedmatrix.com  Fri Jul  1 11:38:33 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 13:38:33 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>


On Jul 1, 2011, at 6:29 AM, Laurens Van Houtven wrote:

> As some of you may already know (either through a backchannel or because you talked to me at Europython), there has been some talk about moving Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
> 
> A lot of the devs do like SVN. My guess is that that's mainly because they don't actually use SVN, they use Combinator, or something. On the other hand, I do think that Trac is pretty universally loathed, and it would be a good idea to get away from it.
> 
> There's a few existing hosting solutions:
> Launchpad (+ Bazaar as the default vcs)
> Bitbucket (+ Mercurial as the default vcs)
> Github (+ Git as the default vcs)
> Although I've hated git for a long while (and I still don't like it very much), I firmly believe Github is the right thing for Twisted. My incredibly unscientific poll amongst people who like Twisted but aren't devs is that they all love or at least like Github, and a surprising number has a distaste for Launchpad (unfamiliarity with Bazaar, perceived developer-unfriendly UI, slowness).
> 
> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the transition? :)

As Itamar has already suggested, I think that this is a solution in search of a problem.  Aside from occasionally saving a contributor the trouble of typing 'review' in the keywords field every so often, what is this actually going to accomplish?  We have too many pending patches already, with not enough sustained interest to either review them or fix them; what we need are more sustained contributors, more reviewers.  Is this going to help us sustain interest?  In my opinion, the main frustration with this process is simply responsiveness of the site.  I think a better investment to address those issues would be in faster hardware to run Trac on (and possibly to communicate the acceptability of using a DVCS mirror).

But, if you're going to contemplate a transition, here are a few prerequisites.  Perhaps some of this should be added to the WorkflowRequirements page for posterity.

If you want me to take this effort seriously, please finish twisted.positioning first and get it reviewed and landed on trunk.  That's just a patch, after all, a much smaller effort than a attempting to migrate the project onto entirely new infrastructure, with implications for testing, version control, and issue tracking. :-)

Less controversial, I think, would be to produce a viable official github *mirror*, a-la <https://github.com/django/django>, rather than a migration, since this is a necessary prerequisite and useful in its own right.  <https://github.com/twisted> still has no public repositories, and I've been bugging people (including you specifically, lvh) to take this over for the past couple of weeks.

If we migrate somewhere, I would like all the data to be mirrored and presented on twistedmatrix.com with a custom stylesheet.  Ideally, I would like to avoid Twisted's users interacting with a different site for issue tracking.  A heavily-used, custom-styled web presence was an important part of fundraising.  No, I don't have any strong empirical data to present to justify that sentiment, but salesmanship is an art, and when I was talking to potential sponsors I felt that our site made us look like a "serious" project that sponsors were comfortable contributing to. The only person who I think has done enough interacting with sponsors to credibly disagree with this is exarkun - although he may well do just that.  For me, tens of thousands of dollars of focused sponsored development is going to win over random patches from people on github for a loooong time coming.

The fact that Django still maintains their own Trac instance is a point in favor of this, as well.  Those guys know a thing or two about image management :-).

Of course, anyone may easily refute this point at any time by simply raising about $30,000 for the TSF.

Pages like <http://www.sitemeter.com/?a=stats&s=sm7twistedmatrix&r=19> give us interesting information about our developers, and have previously informed discussions about efforts put towards platform support.  None of the sites listed above appear to offer independent web analytics, or the ability to embed custom HTML.  This is not, strictly speaking, a requirement, but any potential advocate of migrating somewhere should be aware that this would be one of the things we'd lose with a hosted solution.

You'll need to port <http://twistedmatrix.com/highscores/> to whatever system we switch to, and hopefully also preserve the ease of development and experimentation with ticket data.

We will need a staging deployment so that the new system can be evaluated and any tools to migrate can be tested without actually switching to it.  This would appear to disqualify github immediately, as we can't run our own instance for testing, and I don't want people thinking that we've switched and starting to file bugs into a botched public test migration.  I echo Itamar's concerns about a proprietary, remote code host.

Even in the case of an open source host, there are practical considerations.  I have the utmost respect for the developers at Launchpad, but the UI for that site is, frankly, a horror.  Trac's bad, but it is at least simple, and fairly static, and reasonable to override when it's doing something silly, if you care enough.  Once we've got all of our data ported over to Launchpad, I don't have a lot of confidence that the workflow or the UI will become _more_ suitable to our purposes, and if it's changed to become worse, will we really have any recourse?  Will we have to update our project documentation?  Our front page is already bad enough, but I think it still presents more useful information to the average reader than <https://launchpad.net/twisted>'s "Series and milestones", "configuration progress", or "packages in distributions" sections.

Of course, you'll also need to rewrite all of the relevant wiki pages; ContributingToTwistedLabs, TwistedDevelopment, ReviewProcess.  (And it took like 5 years to get this right for our current setup.)

Finally, any code-hosting service should also have a good option for migrating away.  We currently control twistedmatrix.com and can easily change the links from our current tickets to a new URL scheme or domain.  But, when we decide that Github or Launchpad is no longer workable for whatever reason, will we be able to do the same with the ticket links under their control?  We inhabit a hell now, to be sure, but it is a hell of our own design which we may hypothetically escape at any moment.  I don't want to trade that for something slightly better that we could never leave.  What are the non-hosted contenders?  If trac is really so bad, where's the better, competitive software we could switch to?  (Don't say redmine, I already know about that trick.)

Sorry that this post is so long, but I've tried to incorporate the majority of my objections into this one post so that the discussion doesn't drag on too much.  I am hoping to abstain from much more participation unless something is really unclear.  My single biggest concern is the potential of this topic to waste a huge amount of core developer time, so I'll try to do my part and not fan the flames further.  Although, the other questions raised in this thread, about what parts of our workflow are problematic, are worth talking about separately.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/8ae9e228/attachment.html>

From glyph at twistedmatrix.com  Fri Jul  1 11:41:48 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 13:41:48 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E0DFF11.2020400@emerge-life.de>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
Message-ID: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>


On Jul 1, 2011, at 1:08 PM, chris wrote:

> doing continuous development based on tools like 
> svn and trac is really painful and it's really difficult to motivate 
> yourself to work on a once rejected ticket

Can you be more specific, please?  What's painful?

Procedurally, it's almost the same number of clicks (except for the unfortunate need to type the word 'review') to do this on Github or Launchpad.  What part of the process is painful?  If you're not a committer, we're not going to let you run code on our buildbots either way without a cursory review (that's just a recipe for automated attacks) so it's not like you get past that step for free, either.

Plus, you can use the DVCS of your choice to actually author the patch.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/91e65989/attachment.html>

From kevin.horn at gmail.com  Fri Jul  1 12:00:01 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:00:01 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>

On Fri, Jul 1, 2011 at 5:29 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
>
>
> As some of you may already know (either through a backchannel or because
> you talked to me at Europython), there has been some talk about moving
> Twisted way from Trac+SVN to somewhere that isn't Trac+SVN.
>
> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.
>
> There's a few existing hosting solutions:
>
>    1. Launchpad (+ Bazaar as the default vcs)
>    2. Bitbucket (+ Mercurial as the default vcs)
>    3. Github (+ Git as the default vcs)
>
> Although I've hated git for a long while (and I still don't like it very
> much), I firmly believe Github is the right thing for Twisted. My incredibly
> unscientific poll amongst people who like Twisted but aren't devs is that
> they all love or at least like Github, and a surprising number has a
> distaste for Launchpad (unfamiliarity with Bazaar, perceived
> developer-unfriendly UI, slowness).
>
> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)
>
> --
> cheers
> lvh
>
>
A bunch of thoughts after reading a lot of this thread:

 * any move to  any DVCS will need a well-defined
   workflow/branching model/whatever, and it needs to be _written down_ so
   that people can be referred to it

 * moving to a DVCS would make it easier to merge changes from contributors

 * moving to a DVCS would allow contributors to work on their contributions
   in version control...no more patch nonsense.

 * though at times, after dealing with SVN/Combinator, I have longed for the

   patch nonsense...

 * A move to _any_ DVCS would almost certainly be a win over SVN.  I've
   had to go back to using SVN at work for my day-to-day, and it is
   _painful_.

 * I've never had any huge problesm with Trac, though I can see that
   offloading admin responsibilities is a good thing.

 * Does Github's ticketing system have the kind of integration with Git
   that Twisted has built for Trac+SVN?  Bitbucket has some similar stuff,
   so I would be surprised if Github didn't, but I just don't know.

 * I've never liked Launchpad.  I find it confusing and hard to navigate.

 * Git is annoying.  It's a pretty horrible piece of software in my
   opinion, and made some bad design decisions.

 * Git essentially makes Windows a second-class environment (as did
   Combinator).  We already have trouble recruiting Windows people, and
   IMO one of Twisted's strengths is that you can usually run things on
   Linux/MacOSX/Windows with very few cahnges, if any.

 * Github almost makes up for Git's irritating-ness.

 * Github's extra features have never yet caused me to choose Git as a new
   project over Mercurial.

 * For me, Bitbucket has always been pretty comparable to Github.  I know
   others will disagree, and point out all kinds of features that Github
   has over Bitbucket, but apparently I never use those features.  Perhaps
   those features (whatever they are) are more important in projects
   of Twisted's size and/or history.

 * I have been told, but not actually experienced, that using the hg-git
   plugin for Mercurial makes using Git for your repository into "an
   implementation detail", and the user basicaly doesn't even really
   have to care that they aren't using Hg.  If true, this would make me
   pretty happy...but I'm not entirely sure that it _is_ true.

 * it is unclear how Github would work with UQDS with regards to having a
   ticket for all new work.  IMO this is even more important than code
   reviews.  Would we just say: no pull requests will be accepted unless

 * How would running buildbot over a git/bzr/hg branch work?  Would Github's

   hooks be able to drive this?  Would we be able to tell buildbot to "go
   run tests on this branch"?

 * Assuming a change like this would take place, what would the plan be
   for transition?  Would all the branches that are out there be
   migrate-able?  What about all the Trac tickets, wiki, etc?

 * How does this affect the Sphinx transition plan? (I don't really know
   that it would affect it at all...).

 * Since Twisted's current web presence _is_ a Trac site, who's going to
   step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
   a replacement for an actual "marketing" or "home page" type site.

Overall, this is probably a good plan, but it's going to bea harder and take

more work than people think.

Also, I agree with Itamar's comments that while switching to a DVCS might
ameliorate Twisted's social/organizational issues somewhat, but is unlikely
to wholly fix them. That stuff needs to be discussed and worked on as well.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/67a79158/attachment.html>

From tom at recursivedream.com  Fri Jul  1 12:06:35 2011
From: tom at recursivedream.com (Tom Davis)
Date: Fri, 1 Jul 2011 14:06:35 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>

On Jul 1, 2011, at 1:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> On Jul 1, 2011, at 1:08 PM, chris wrote:
> 
>> doing continuous development based on tools like 
>> svn and trac is really painful and it's really difficult to motivate 
>> yourself to work on a once rejected ticket
> 
> Can you be more specific, please?  What's painful?

I always found it especially irritating to come back to a patch later. If I don't already have a patched checkout of Twisted, I need to figure out what revision I was at before (or to actually be safe, make a HEAD checkout), then reapply my patch, hoping it is still valid.  

With a fork I can check it out any time, rebase to the current master (or branch I'm working on), having my changes reapplied for me. When I have made more changes I just push it up. No changes to tickets or switching keywords or watching Trac reject my patch file 10 times then clearing all my cookies or whatever.

I've always admired Twisted's standards and process; I think they have made it possible for such a huge project to maintain working order for so long. The tools could use an upgrade, though.

> 
> Procedurally, it's almost the same number of clicks (except for the unfortunate need to type the word 'review') to do this on Github or Launchpad.  What part of the process is painful?  If you're not a committer, we're not going to let you run code on our buildbots either way without a cursory review (that's just a recipe for automated attacks) so it's not like you get past that step for free, either.
> 
> Plus, you can use the DVCS of your choice to actually author the patch.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/98130c35/attachment.html>

From jasonjwwilliams at gmail.com  Fri Jul  1 12:14:02 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 12:14:02 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
Message-ID: <91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>

> Although, the other questions raised in this thread, about what parts of our workflow are problematic, are worth talking about separately.

Moving from a manual patch-based process to a DVCS where branching is cheap and the workflow can be moved to push/pull would be a huge step in the right direction. 

Twisted has a very polite club-like culture where some are on the inside, most aren't and it's clear where on that line anyone is. Submitting to the pain of the current submission tools almost seems viewed as a kind of worthwhile hazing to weed out the unworthy.  A lot of the resistance to change on this issue over the last year has had a lot of that flavor to it. Itamar's logic on why Twisted shouldn't make contributing easier being a prime example. 

Twisted needs more friends not fewer. Given everyone here has day jobs in addition to contributing to Twisted, getting rid of the patch-hell that is the current review process would help everyone even if Trac is kept for issue tracking. 

-J


From _ at lvh.cc  Fri Jul  1 12:13:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 20:13:56 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
Message-ID: <BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:00 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

>  * Does Github's ticketing system have the kind of integration with Git
>    that Twisted has built for Trac+SVN?  Bitbucket has some similar stuff,
>    so I would be surprised if Github didn't, but I just don't know.
>

Stuff like refs/closes interacts with the ticketing system yes. You can have
as many hooks as you like for topfiles.


>  * Git is annoying.  It's a pretty horrible piece of software in my
>    opinion, and made some bad design decisions.
>

magit makes it a lot more pleasant if you use emacs, by the way.


>  * Git essentially makes Windows a second-class environment (as did
>    Combinator).  We already have trouble recruiting Windows people, and
>    IMO one of Twisted's strengths is that you can usually run things on
>    Linux/MacOSX/Windows with very few cahnges, if any.
>

I've been told this has *vastly* improved, but I don't know for sure since
I'm not a Windows user.


>  * For me, Bitbucket has always been pretty comparable to Github.  I know
>    others will disagree, and point out all kinds of features that Github
>    has over Bitbucket, but apparently I never use those features.  Perhaps
>    those features (whatever they are) are more important in projects
>    of Twisted's size and/or history.
>

Yes, many features are comparable, the main feature differences are polish,
but the killer difference is community size.


>  * I have been told, but not actually experienced, that using the hg-git
>    plugin for Mercurial makes using Git for your repository into "an
>    implementation detail", and the user basicaly doesn't even really
>    have to care that they aren't using Hg.  If true, this would make me
>    pretty happy...but I'm not entirely sure that it _is_ true.
>

Although I've never tried this, I've been assured this is the case.


>  * it is unclear how Github would work with UQDS with regards to having a
>    ticket for all new work.  IMO this is even more important than code
>    reviews.  Would we just say: no pull requests will be accepted unless
>

Your question got cut off. I think you wanted to say "there's a ticket for
that"?


>   * How would running buildbot over a git/bzr/hg branch work?  Would
> Github's
>    hooks be able to drive this?  Would we be able to tell buildbot to "go
>    run tests on this branch"?
>

Although I've never tried this, I've been assured this is the case.


>
>  * Assuming a change like this would take place, what would the plan be
>    for transition?  Would all the branches that are out there be
>    migrate-able?  What about all the Trac tickets, wiki, etc?
>

The first thing I thought right after I thought "we're going to need a trac
to markdown converter" is "khorn is going to jump off a cliff next" ;-)


>
>  * How does this affect the Sphinx transition plan? (I don't really know
>    that it would affect it at all...).
>

I don't see how it would.

>
>  * Since Twisted's current web presence _is_ a Trac site, who's going to
>    step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
>    a replacement for an actual "marketing" or "home page" type site.
>
> Absolutely not. I am *not* advocating replacing this site, simply having
something similar that isn't trac and isn't involved in the site
development. If anything, this separates the concerns of "home page style
site" and development site even clearer, IMO.


> Overall, this is probably a good plan, but it's going to bea harder and
> take
> more work than people think.
>
> Also, I agree with Itamar's comments that while switching to a DVCS might
> ameliorate Twisted's social/organizational issues somewhat, but is unlikely
>
> to wholly fix them. That stuff needs to be discussed and worked on as well.
>

There's no silver bullet. Not making new potential contributors bend over,
and having all contributions trivially easy to put in version control,
regardless of their contributor status, sounds like a good start.


>
> Kevin Horn
>
> cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/f412f971/attachment.html>

From jasonjwwilliams at gmail.com  Fri Jul  1 12:20:38 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 12:20:38 -0600
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>



Sent via iPhone

Is your email Premiere?

On Jul 1, 2011, at 11:41, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> 
> Can you be more specific, please?  What's painful?

Re-syncing whatever changes JP (just as an example of a reviewer) has made back into your local repo from SVN...which due to SVN's weakness on branch tracking makes merging fail frequently...then making your changes...generating a manual patch and finally uploading it to Trac. 

It would be far simpler to setup my DVCS to track JP's remote copy of my ticket's branch...then simply pull from that remote...make my changes and request he pull from me when he's ready to review. Automates the whole process quite a bit and reduces the round trip yak shaving. 

-J


From kevin.horn at gmail.com  Fri Jul  1 12:38:34 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:38:34 -0500
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTinpJ=qQgumRe82PMhHf3S0Mtb=-6w@mail.gmail.com>

On Fri, Jul 1, 2011 at 11:08 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?
>
> (I'd also like someone -- lvh? -- to go through report 16 and see if we
> can come up with a summary of how those tickets ended up where they are.)
>

I've had a few of these.  I've also worked on others, reviewed a few, tried
to resurrect some from abandonment, etc.

Reasons include:
- the finish line gets moved: A reviewer says "do this and then it'll be
good to go into trunk".  The contributor does "this" and then another
reviewer says "oh just one more thing...".  Rinse.  Repeat.  This is hugely
demotivational.  In many cases a better response from follow on reviewers
would be to land the ticket, and then create another ticket for whatever
other changes are needed.  This is not always possible but I think it should
be done where it is possible.

- compatibility with some other unfinished ticket: The reviewer insists on
compatibility with some other ticket, or waiting on some other ticket to
land.  This is not necessarily a bad thing, but if the other ticket takes 6
months to land...well, can we blame people for wandering off and/or
forgetting about things?  (to be fair, I think I've only seen this once, and
I can't recall what it was or find the ticket at the moment).

- I've seen a lot of tickets that "die" at the "this needs tests" phase.
Requiring tests is a good thing, though.  I think the only way to help this
problem is for reviewers to provide more guidance as to how exactly to
create those tests.  Even figuring out where to put the tests is sometimes
very difficult.  Exarkun has been pretty good about this in the last year or
so, IIRC.

(It might be worth it to create a Trac keyword for this situation, maybe
"needs-tests".  This would make it easy to find those tickets, which might
be a decent entry point for certain types of new contributors)

- Some people just seem to wander off.

- I can think of at least one ticket where the author stopped using Windows,
and it was a Windows ticket.

- That same Windows ticket is still open, though I tried to revive it.  It
basically tries to do 2 things.  One of them is pretty nice (makes the StdIO
protocol work on windows), but it's not even clear what the other one is
trying to do.  So the ticket is in limbo until someone has the time to
either figure it out or split the ticket in two.

- I recall one ticket that got stalled, because noone was entirely sure who
exactly had written the patch.  There was a third party who had contributed
it to Twisted.  This was easily resolved with a google search and an email.
Of course the ticket is still open because it needs tests...

- One ticket was stalled because it required a "merge forward".  Which is
not really obvious how to do, especially since the DIvmod site died.

I'm sure there are dozens of other reasons, but these are cases I can recall
off the top of my head.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/1b874d6b/attachment.html>

From kevin.horn at gmail.com  Fri Jul  1 12:47:48 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:47:48 -0500
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
Message-ID: <BANLkTimbi2fjMbY=6KgKKRPaLHY9y+4ANA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 1, 2011, at 1:08 PM, chris wrote:
>
> doing continuous development based on tools like
> svn and trac is really painful and it's really difficult to motivate
> yourself to work on a once rejected ticket
>
>
> Can you be more specific, please?  What's painful?
>
> Procedurally, it's almost the same number of clicks (except for the
> unfortunate need to type the word 'review') to do this on Github or
> Launchpad.  What part of the process is painful?  If you're not a committer,
> we're not going to let you run code on our buildbots either way without a
> cursory review (that's just a recipe for automated attacks) so it's not like
> you get past that step for free, either.
>
>
For me the pain isn't Trac, it's SVN.  The more I use DVCS's the more I hate
it.

Also, Combinator does not work on Windows, and hasn't for years.  And before
you say "submit patches", I did.  They sat in the Divmod Trac instance for
over a year, I requested reviews of the relevant tickets _daily_ for 3
months on Divmod's IRC channel, and they were never merged, or even
reviewed, or even AFAIK put under version control.  Now they're gone with
the DIvmod site.

If the tickets are ever recoverable, they were tickets #3001-#3004.


> Plus, you can use the DVCS of your choice to actually author the patch.
>

In theory, yes, though it is not obvious how to do this in a way that is
compatible with Twisted's workflow and Combinator.

See http://twistedmatrix.com/trac/wiki/BazaarMirror for examples of some of
the caveats of using DVCS on top of Subversion.

Granted this works for just authoring a patch, which you then submit through
Trac or whatever, but that doesn't really buy you a lot, IMO (though it does
buy you something).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/0800445b/attachment.html>

From kevin.horn at gmail.com  Fri Jul  1 12:56:12 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 1 Jul 2011 13:56:12 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTi=TccQ0M=LKOX2DGQDx5VDX9EPcFQ@mail.gmail.com>
	<BANLkTi=mNsUOwA=DJne5rD+9Hd7zhokwKA@mail.gmail.com>
Message-ID: <BANLkTikY0--iNtCjiS6GKdRavHm7o0h66w@mail.gmail.com>

On Fri, Jul 1, 2011 at 1:13 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Fri, Jul 1, 2011 at 8:00 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>
>>  * Git is annoying.  It's a pretty horrible piece of software in my
>>    opinion, and made some bad design decisions.
>>
>
> magit makes it a lot more pleasant if you use emacs, by the way.
>

I don't.  Emacs is also annoying.


>
>
>>  * Git essentially makes Windows a second-class environment (as did
>>    Combinator).  We already have trouble recruiting Windows people, and
>>    IMO one of Twisted's strengths is that you can usually run things on
>>    Linux/MacOSX/Windows with very few cahnges, if any.
>>
>
> I've been told this has *vastly* improved, but I don't know for sure since
> I'm not a Windows user.
>

I've heard the same thing, but if what exists now is a _vast_ improvement, I
shudder to think
what it was like before.


>
>
>>  * it is unclear how Github would work with UQDS with regards to having a
>>    ticket for all new work.  IMO this is even more important than code
>>    reviews.  Would we just say: no pull requests will be accepted unless
>>
>
> Your question got cut off. I think you wanted to say "there's a ticket for
> that"?
>

exactly.


>
>
>>  * Assuming a change like this would take place, what would the plan be
>>    for transition?  Would all the branches that are out there be
>>    migrate-able?  What about all the Trac tickets, wiki, etc?
>>
>
> The first thing I thought right after I thought "we're going to need a trac
> to markdown converter" is "khorn is going to jump off a cliff next" ;-)
>

_almost_ funny :)


>
>
>> .
>>
>
>>  * Since Twisted's current web presence _is_ a Trac site, who's going to
>>    step up and build a new website?  Github/Bitbucket/Launchpad is _NOT_
>>    a replacement for an actual "marketing" or "home page" type site.
>>
>> Absolutely not. I am *not* advocating replacing this site, simply having
> something similar that isn't trac and isn't involved in the site
> development. If anything, this separates the concerns of "home page style
> site" and development site even clearer, IMO.
>

Well, the site would _have_ to be replaced by something, if Trac were to go
away.  But I think I understand what you mean.


>
>
>> Kevin Horn
>>
>> cheers
> lvh
>
>
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/5ed93933/attachment.html>

From itamar at itamarst.org  Fri Jul  1 12:59:24 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 14:59:24 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
Message-ID: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>

> It would be far simpler to setup my DVCS to track JP's remote copy of my
> ticket's branch...then simply pull from that remote...make my changes and
> request he pull from me when he's ready to review. Automates the whole
> process quite a bit and reduces the round trip yak shaving.

Any reason you can't do this with our git or bzr mirrors?

http://twistedmatrix.com/trac/wiki/BazaarMirror
http://twistedmatrix.com/trac/wiki/GitMirror

Or for that matter, you can include e.g. an github URL in the ticket
instead of attaching the patch.




From _ at lvh.cc  Fri Jul  1 13:11:34 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 1 Jul 2011 21:11:34 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:59 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> > It would be far simpler to setup my DVCS to track JP's remote copy of my
> > ticket's branch...then simply pull from that remote...make my changes and
> > request he pull from me when he's ready to review. Automates the whole
> > process quite a bit and reduces the round trip yak shaving.
>
> Any reason you can't do this with our git or bzr mirrors?
>
> http://twistedmatrix.com/trac/wiki/BazaarMirror
> http://twistedmatrix.com/trac/wiki/GitMirror
>

>From a fresh checkout of the Git mirror:

lvh at hayek ~/tmp/Twisted ±master » git log -1
commit 936493c676c424f459bee93270f3a2870b68e8e5
Author: exarkun <exarkun at bbbe8e31-12d6-0310-92fd-ac37d47ddeeb>
Date:   Tue Mar 29 14:00:14 2011 +0000
------------------snipsnipsnip------------------

Yeah. Mar 29? That's not quite right, is it?


>
> Or for that matter, you can include e.g. an github URL in the ticket
> instead of attaching the patch.
>

Only if there's a decent Github mirror to fork from, otherwise you're asking
people to do a multi-hour operation (I know, because I'm doing it right now)
to get a decent git repo, followed by a large push to Github, and then maybe
you can start doing some work. There is a seemingly good mirror maintained
by powdahound, but it's not official and as such is not recorded anywhere.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/46c71ca4/attachment.html>

From glyph at twistedmatrix.com  Fri Jul  1 13:14:13 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 15:14:13 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<ED7FAA1E-3794-45FF-BD12-2AA0D8E85BC3@recursivedream.com>
Message-ID: <647A1EB0-ACF5-42E7-A2D8-4ABADF03C507@twistedmatrix.com>


On Jul 1, 2011, at 2:06 PM, Tom Davis wrote:

> On Jul 1, 2011, at 1:41 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
>> 
>> On Jul 1, 2011, at 1:08 PM, chris wrote:
>> 
>>> doing continuous development based on tools like 
>>> svn and trac is really painful and it's really difficult to motivate 
>>> yourself to work on a once rejected ticket
>> 
>> Can you be more specific, please?  What's painful?
> 
> I always found it especially irritating to come back to a patch later. If I don't already have a patched checkout of Twisted, I need to figure out what revision I was at before (or to actually be safe, make a HEAD checkout), then reapply my patch, hoping it is still valid.  
> 
> With a fork I can check it out any time, rebase to the current master (or branch I'm working on), having my changes reapplied for me. When I have made more changes I just push it up. No changes to tickets or switching keywords or watching Trac reject my patch file 10 times then clearing all my cookies or whatever.

Wow, does that actually happen?  The rejecting the patchfile, I mean.  That's terrible.

In any case, that should not be important.  You _should_ be able to use the DVCS of your choice to work on Twisted.[1]  As I said in the previous message:

>> Plus, you can use the DVCS of your choice to actually author the patch.


Lots of people do submit patches using Git; I reviewed one earlier this week.

One thing I think this thread has inspired is a prompt move to make it clearer how to do this.  It would be great if you could help out lvh in producing some good copy for the various workflow-documentation pages so that it's clear to people how to use their favorite VCS if they already have one; the SVN-based diff-and-ptach instructions that are already there are meant for users who may not be familiar with _any_ kind of version control.  (Just to forestall any objections: this is a realistic audience, lots of Twisted contributors have been in secondary school when they started.)

> I've always admired Twisted's standards and process; I think they have made it possible for such a huge project to maintain working order for so long. The tools could use an upgrade, though.

Thanks for that :).  And my earlier post notwithstanding, I agree.  In fact, the tools have improved significantly, but many of them are things that contributors don't see (build system upgrades, release process improvements) but core developers, and therefore eventually users, do benefit from.

-glyph

[1]: Your choice, of course, should be Bazaar, as all other choices are wrong.  But we can work around your Git habit ;-).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/2fb1e244/attachment.html>

From itamar at itamarst.org  Fri Jul  1 13:24:38 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 1 Jul 2011 15:24:38 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
Message-ID: <5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>

> Twisted has a very polite club-like culture where some are on the inside,
> most aren't and it's clear where on that line anyone is. Submitting to the
> pain of the current submission tools almost seems viewed as a kind of
> worthwhile hazing to weed out the unworthy.  A lot of the resistance to
> change on this issue over the last year has had a lot of that flavor to
> it. Itamar's logic on why Twisted shouldn't make contributing easier being
> a prime example.

I did not say contributing shouldn't be easier; I said getting more
contributions is pointless (and annoying to contributors!) if we can't
manage to get them incorporated into trunk. If DVCS will make code easier
to incorporate, by encouraging contributors to iterate on patches, then we
should certainly do so. Given the feedback you and others have given that
seems at least worth trying.

There are other additional things we should work on though, e.g. giving
better feedback to new developers.




From jasonjwwilliams at gmail.com  Fri Jul  1 15:56:01 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 15:56:01 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<91EC3219-7411-43A3-A65A-B05941CB7D28@gmail.com>
	<5c540ca3b0969e514d260fd78b943f1b.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTikFTEuNAUo7RFktqcBsshZUhoq1wQ@mail.gmail.com>

>
> I did not say contributing shouldn't be easier; I said getting more
> contributions is pointless (and annoying to contributors!) if we can't
> manage to get them incorporated into trunk. If DVCS will make code easier
> to incorporate, by encouraging contributors to iterate on patches, then we
> should certainly do so. Given the feedback you and others have given that
> seems at least worth trying.
>

My apologies if I misunderstood what you were saying. If we can make it
easier to iterate that would address 95% of my current frustrations with the
process of contributing.


> There are other additional things we should work on though, e.g. giving
> better feedback to new developers.


 No argument. But the Twisted code standards are high and usually have a
high number of iterations to get any fix in...if we can get out of the stone
age of shuffling patch files around and get to some form of push/pull system
that would reduce a lot of my heartburn about "do this...OK looks good...now
do this too and integrate with ticket XYZ...great almost there...I think you
should do this now too...".

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/577314bc/attachment.html>

From jasonjwwilliams at gmail.com  Fri Jul  1 16:01:56 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Jul 2011 16:01:56 -0600
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>

On Fri, Jul 1, 2011 at 12:59 PM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> > It would be far simpler to setup my DVCS to track JP's remote copy of my
> > ticket's branch...then simply pull from that remote...make my changes and
> > request he pull from me when he's ready to review. Automates the whole
> > process quite a bit and reduces the round trip yak shaving.
>
> Any reason you can't do this with our git or bzr mirrors?
>

Because they don't always seem to track the ticket branch folders in a
timely manner. Especially, when JP (he seems to usually be my reviewer :) )
pushes a modification of my patch to the ticket branch. It's at this point
trying to merge in from SVN is usually a nightmare. My Git copy being tied
to an older SVN rev that my patch is based on. SVN just seems to lose it's
brains when my patch isn't in the SVN commit history, because SVN repo
doesn't allow me to commit in. DVCS would allow me to branch, commit to my
repo, and then let JP pull from my repo into his to review and push up to
the Twisted repo when he's happy with it...and all of the commit history is
sane from the original, to my patch to his changes, so when I go to pull
back down from the Twisted repo everything merges sanely.


> Or for that matter, you can include e.g. an github URL in the ticket
> instead of attaching the patch.
>

Honestly, the "process" documents are pretty clear you're supposed to attach
a patch so that's what I do...also even that wouldn't solve the issue
described above.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/7b4d8bc7/attachment.html>

From dripton at ripton.net  Fri Jul  1 16:57:04 2011
From: dripton at ripton.net (David Ripton)
Date: Fri, 01 Jul 2011 18:57:04 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E0E50C0.808@ripton.net>

On 07/01/11 12:08, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
>
> If you've submitted a patch to Twisted (or started a branch) and it never
> made it in, how did that happen? I imagine reasons might include a review
> request to write tests, redesign requests, getting distracted, "it works
> for me", design discussions that never got anywhere... What happened in
> your case?

I made it through the first several hurdles (working code, following 
coding standards, unit tests for everything) but then hit a legitimate 
reverse compatibility concern that kept my patches from landing. 
Someone eventually came up with a good solution, but the time gap meant 
that other things had changed and/or were about to change in Twisted, 
and gave more people a chance to bikeshed, which gave me less confidence 
that whatever I eventually finished would land.  So I punted and waited 
for someone with more political clout to take over.

Working with patches because you don't have svn commit rights is 
annoying, but this annoyance is a relatively minor fixed cost.  The real 
issue, for controversial features, is achieving consensus, and then 
getting your feature in before consensus is lost.

-- 
David Ripton    dripton at ripton.net



From glyph at twistedmatrix.com  Fri Jul  1 17:27:48 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 19:27:48 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E0E50C0.808@ripton.net>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
Message-ID: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>


On Jul 1, 2011, at 6:57 PM, David Ripton wrote:

> Working with patches because you don't have svn commit rights is annoying, but this annoyance is a relatively minor fixed cost.

It's still important for us to reduce this cost; even if it's not the bottleneck, we have to optimize first where we can optimize :).

> The real issue, for controversial features, is achieving consensus, and then getting your feature in before consensus is lost.

Yes, absolutely.  And there's are some important guidelines for reviewers that can be inferred from this:

Try to stick to coding-standard stuff as much as possible, especially if there's been a previous review.  Don't bring up "I think it would be better if..." things, except to say "file an additional ticket".
If there's a previous review, as much as possible, stick to the points brought up in the previous review.  Make sure they're addressed, and try not to add a pile of conflicting stylistic suggestions.
When you do a review, try to be as thorough as possible.  Don't ever do a review that says "update @since markers" or "2 blank lines between methods" and nothing else; at least, you need to say "... and then it will be ready to merge".  Remember that when you take it out of review, no other reviewer is going to look at it until the author fixes it and resubmits it, which may be quite a while.  If you feel like adding some partial commentary to help the next full reviewer, just add a comment, don't remove the review keyword.
Be explicit about what happens next, even if it's going to be redundant.  Always say "... and it will need another review" or "... and then merge".  Try not to voice a vague dissatisfaction with the architecture of something without an explicit suggestion about (A) what should be done, and (B) whether it needs to be done before the feature can be merged.

For contributors, one suggestion: make implementation details private as much as possible, so that the reviewer will have to consider the aesthetics of the implementation details less.  The smaller the public API of the contribution, the easier it is to avoid bikeshedding around method names and class placement :).

None of this would have helped in particular on the IPv6 stuff, but given that that affected an extremely core API, and had a ton of fiddly little details, I'm not sure much could have helped on that one...

I know I've broken these rules myself on occasion, and I'd like to encourage other reviewers to call me out on it when they notice it :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/2affcf23/attachment.html>

From _ at lvh.cc  Fri Jul  1 17:34:04 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 2 Jul 2011 01:34:04 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
Message-ID: <CAE_Hg6ZFLfUXVNv5Jo8wP-P209vSh7=ApTDsK+k5nerOOWHe6w@mail.gmail.com>

On Sat, Jul 2, 2011 at 1:27 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
> When you do a review, try to be as thorough as possible.  Don't *ever* do
> a review that says "update @since markers" or "2 blank lines between
> methods" and nothing else
>

With Github's edit-this-file-on-the-web feature, it will effectively be
easier to just fix it than it is to complain about how someone else needs to
fix it.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110702/17aeeda2/attachment.html>

From exarkun at twistedmatrix.com  Fri Jul  1 19:06:48 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 02 Jul 2011 01:06:48 -0000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to
	Twisted	and it never got in?
In-Reply-To: <D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
Message-ID: <20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>

On 1 Jul, 11:27 pm, glyph at twistedmatrix.com wrote:
>
>On Jul 1, 2011, at 6:57 PM, David Ripton wrote:
>>Working with patches because you don't have svn commit rights is 
>>annoying, but this annoyance is a relatively minor fixed cost.
>
>It's still important for us to reduce this cost; even if it's not the 
>bottleneck, we have to optimize first where we can optimize :).
>>The real issue, for controversial features, is achieving consensus, 
>>and then getting your feature in before consensus is lost.
>
>Yes, absolutely.  And there's are some important guidelines for 
>reviewers that can be inferred from this:
>
>Try to stick to coding-standard stuff as much as possible, especially 
>if there's been a previous review.  Don't bring up "I think it would be 
>better if..." things, except to say "file an additional ticket".

We've disagreed about this in the past, so I don't think you'll be 
surprised if I say that I don't think this is a good idea. :)

If an earlier review misses *functional* issues with a change, then they 
need to be brought up.

Scope creep should be avoided at *all* stages of the process, but an 
incomplete first review doesn't exempt a change from the development 
requirements (and I don't think you think it should, even though it 
sounds like you're saying it here :).
>
>If there's a previous review, as much as possible, stick to the points 
>brought up in the previous review.  Make sure they're addressed, and 
>try not to add a pile of conflicting stylistic suggestions.

Stylistic issues should all be known in advance (read the coding 
standard, etc) and brought up in the first review (because the first 
reviewer should know them too).  Stylistic issues that aren't covered by 
the coding standard definitely shouldn't be sprung in a subsequent 
review (or the reviewer should address them himself or herself) - or 
even a first review, really.

This is a separate case from pointing out *functional* issues that the 
first review missed.
>
>When you do a review, try to be as thorough as possible.  Don't ever do 
>a review that says "update @since markers" or "2 blank lines between 
>methods" and nothing else; at least, you need to say "... and then it 
>will be ready to merge".  Remember that when you take it out of review, 
>no other reviewer is going to look at it until the author fixes it and 
>resubmits it, which may be quite a while.  If you feel like adding some 
>partial commentary to help the next full reviewer, just add a comment, 
>don't remove the review keyword.

This is very important, since it should reduce the instances in which a 
later review does have to introduce a new point.  I don't think anyone 
benefits from forgoing resolving functional issues that are detected 
after the first review but before the change actually lands.
>
>Be explicit about what happens next, even if it's going to be 
>redundant.  Always say "... and it will need another review" or "... 
>and then merge".  Try not to voice a vague dissatisfaction with the 
>architecture of something without an explicit suggestion about (A) what 
>should be done, and (B) whether it needs to be done before the feature 
>can be merged.
>
>For contributors, one suggestion: make implementation details private 
>as much as possible, so that the reviewer will have to consider the 
>aesthetics of the implementation details less.  The smaller the public 
>API of the contribution, the easier it is to avoid bikeshedding around 
>method names and class placement :).

There are plenty of issues on the contribution-accepting side which I 
don't want to minimize, but I think there's another thing contributors 
can do to help the overall process.  If a review results in more work 
than you're interested in doing, say so.  Make it clear that you're no 
longer taking responsibility for the ticket.  Then there's some chance 
that another contributor might take it the rest of the way (without 
waiting 5 years before deciding the original contributor has lost 
interest).
>
>None of this would have helped in particular on the IPv6 stuff, but 
>given that that affected an extremely core API, and had a ton of fiddly 
>little details, I'm not sure much could have helped on that one...

Sooooooo fiddly aarrrrghhghhhhh.
>
>I know I've broken these rules myself on occasion, and I'd like to 
>encourage other reviewers to call me out on it when they notice it :).

This raises another point, which is that the mailing list isn't a 
terribly useful place for these points to end up.  If anything is 
actually expected to change, then the need to update the review 
documentation (such as it is) and probably also get serious about meta- 
reviews.

Jean-Paul



From screwtape at froup.com  Fri Jul  1 20:23:12 2011
From: screwtape at froup.com (Tim Allen)
Date: Sat, 2 Jul 2011 12:23:12 +1000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
References: <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
Message-ID: <20110702022312.GD21836@boombah.thristian.org>

On Fri, Jul 01, 2011 at 09:11:34PM +0200, Laurens Van Houtven wrote:
> On Fri, Jul 1, 2011 at 8:59 PM, Itamar Turner-Trauring
> <itamar at itamarst.org>wrote:
> > Or for that matter, you can include e.g. an github URL in the ticket
> > instead of attaching the patch.
> 
> Only if there's a decent Github mirror to fork from, otherwise you're asking
> people to do a multi-hour operation (I know, because I'm doing it right now)
> to get a decent git repo,

Last time I tried (perhaps a year ago), a git-svn clone of the Twisted
SVN repo took the better part of a week. I seem to recall somebody
preparing a tarball of a git-svn-clone'd repository to help people
bootstrap, but my clone was already completed at that point so I didn't
investigate further.



From glyph at twistedmatrix.com  Fri Jul  1 21:09:57 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 1 Jul 2011 23:09:57 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and it never got in?
In-Reply-To: <20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0E50C0.808@ripton.net>
	<D7C84CF3-4130-4511-AA35-8E11C1589A77@twistedmatrix.com>
	<20110702010648.1894.1355972045.divmod.xquotient.1785@localhost.localdomain>
Message-ID: <7D0D0DE4-6084-413C-B535-2DECDC2961B8@twistedmatrix.com>


On Jul 1, 2011, at 9:06 PM, exarkun at twistedmatrix.com wrote:

> On 1 Jul, 11:27 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Jul 1, 2011, at 6:57 PM, David Ripton wrote:
>>> Working with patches because you don't have svn commit rights is 
>>> annoying, but this annoyance is a relatively minor fixed cost.
>> 
>> It's still important for us to reduce this cost; even if it's not the 
>> bottleneck, we have to optimize first where we can optimize :).
>>> The real issue, for controversial features, is achieving consensus, 
>>> and then getting your feature in before consensus is lost.
>> 
>> Yes, absolutely.  And there's are some important guidelines for 
>> reviewers that can be inferred from this:
>> 
>> Try to stick to coding-standard stuff as much as possible, especially 
>> if there's been a previous review.  Don't bring up "I think it would be 
>> better if..." things, except to say "file an additional ticket".
> 
> We've disagreed about this in the past, so I don't think you'll be 
> surprised if I say that I don't think this is a good idea. :)
> 
> If an earlier review misses *functional* issues with a change, then they 
> need to be brought up.

I don't think I disagree, actually.  It's just a different emphasis.  Issues certainly need to be brought up.  I shouldn't have said otherwise.  They just need to be clearly separated into blocking/not-blocking.

> Scope creep should be avoided at *all* stages of the process, but an 
> incomplete first review doesn't exempt a change from the development 
> requirements (and I don't think you think it should, even though it 
> sounds like you're saying it here :).

You're right, on a subsequent reading, that's what it sounds like I was saying.  And I'm definitely not saying that; the review requirements are the same on every review.

>> If there's a previous review, as much as possible, stick to the points 
>> brought up in the previous review.  Make sure they're addressed, and 
>> try not to add a pile of conflicting stylistic suggestions.
> 
> Stylistic issues should all be known in advance (read the coding 
> standard, etc) and brought up in the first review (because the first 
> reviewer should know them too).  Stylistic issues that aren't covered by 
> the coding standard definitely shouldn't be sprung in a subsequent 
> review (or the reviewer should address them himself or herself) - or 
> even a first review, really.
> 
> This is a separate case from pointing out *functional* issues that the 
> first review missed.

The word "functional" is pretty broad, so let me be more specific.

Any change which is part of the coding standard or the review policy needs to be mentioned.  100% test coverage is a requirement.  Docstrings for public and private are a requirement.  No matter how many reviewers have missed these things, they need to be brought up and no feature which is missing them may land.  I think we are all pretty clear about that.

Beyond that there's an infinite spectrum of diversity of possible review comments, and I can't speak to all of them.  For example, maybe a change causes the performance characteristics of an existing, but un-benchmarked, change to regress.  Maybe the API is designed in such a way that it will be difficult or impossible to scale.  Perhaps something is treated as blocking where it should return a Deferred.  I can't say for sure whether one of these issues would or wouldn't be a blocker without a lot of context about that specific change.

But I think there's a general category of feedback that can be classified as "this is OK, but I can think of a way to do it better".  In this case, a change might meet all the formal requirements, have a reasonable API that works, and not raise compatibility issues, but the reviewer has an epiphany while reading it and realizes it might be simpler/faster/more flexible to do something else.

The reviewer should always feel free to communicate such an insight, of course, but I think that reviewers should all have a strong bias towards separating this out and making it optional - and making it clear that it's optional.  The best should not be the enemy of the better; if it's an improvement, and it works today, we should usually integrate it.  In many cases it's much better to defer the improvements until later and get the reasonable API in sooner.  I think this is true even if the improved version will have a totally different API, because it's possible nobody will have a chance to do the improvements for years.

Again, this is one that I know I'm guilty of, but I'd like to think that in recent reviews I've been really clear about the optionalness of my ideas :).

The purpose of the review process, as I see it, is not to produce the best possible implementation of everything always.  It's to produce an implementation that meets a certain quality standard and does not cause regressions (either in functionality or test coverage, although hopefully one day also in performance too).  I think there are cases where we have ended up with no implementation rather than an adequate but not awesome implementation because there have been too many competing ideas for how to do it "even better" rather than how to make it meet the required standard.

All that being said, I spent a long time looking at <http://twistedmatrix.com/trac/report/16>, and I can't find any tickets where comments like this are the only reason for blocking a ticket that's been through many round-trips; they all still have compliance issues.  The larger problem is cursory early reviews where the patch is obviously bad, and later reviews that get more detailed once it starts to shape up.  Apparently the more serious issue is that we just need to be more thorough earlier in the process.  (Although another way to look at that data is that we weren't terribly thorough 3 years ago, since old tickets necessarily have old initial reviews.)

>> When you do a review, try to be as thorough as possible.  Don't ever do 
>> a review that says "update @since markers" or "2 blank lines between 
>> methods" and nothing else; at least, you need to say "... and then it 
>> will be ready to merge".  Remember that when you take it out of review, 
>> no other reviewer is going to look at it until the author fixes it and 
>> resubmits it, which may be quite a while.  If you feel like adding some 
>> partial commentary to help the next full reviewer, just add a comment, 
>> don't remove the review keyword.
> 
> This is very important, since it should reduce the instances in which a 
> later review does have to introduce a new point.  I don't think anyone 
> benefits from forgoing resolving functional issues that are detected 
> after the first review but before the change actually lands.

If you're a new reviewer (or even if you're an old one who hasn't gotten much practice), it might be worthwhile to put a review comment on the ticket but ask a more experienced reviewer for a meta-review before getting rid of the 'review' keyword.  A meta-review is usually a lot easier than a review, so it should be easier to get one by just showing up in #twisted and asking; hopefully we won't need an elaborate meta-review tracker.

I hope this suggestion will make someone who has thus far been hesitant to do a review contemplate doing one with this set of training wheels.

>> Be explicit about what happens next, even if it's going to be 
>> redundant.  Always say "... and it will need another review" or "... 
>> and then merge".  Try not to voice a vague dissatisfaction with the 
>> architecture of something without an explicit suggestion about (A) what 
>> should be done, and (B) whether it needs to be done before the feature 
>> can be merged.
>> 
>> For contributors, one suggestion: make implementation details private 
>> as much as possible, so that the reviewer will have to consider the 
>> aesthetics of the implementation details less.  The smaller the public 
>> API of the contribution, the easier it is to avoid bikeshedding around 
>> method names and class placement :).
> 
> There are plenty of issues on the contribution-accepting side which I 
> don't want to minimize, but I think there's another thing contributors 
> can do to help the overall process.  If a review results in more work 
> than you're interested in doing, say so.  Make it clear that you're no 
> longer taking responsibility for the ticket.  Then there's some chance 
> that another contributor might take it the rest of the way (without 
> waiting 5 years before deciding the original contributor has lost 
> interest).

+1

>> None of this would have helped in particular on the IPv6 stuff, but 
>> given that that affected an extremely core API, and had a ton of fiddly 
>> little details, I'm not sure much could have helped on that one...
> 
> Sooooooo fiddly aarrrrghhghhhhh.
> 
>> I know I've broken these rules myself on occasion, and I'd like to 
>> encourage other reviewers to call me out on it when they notice it :).
> 
> This raises another point, which is that the mailing list isn't a 
> terribly useful place for these points to end up.  If anything is 
> actually expected to change, then the need to update the review 
> documentation (such as it is) and probably also get serious about meta- 
> reviews.

I do hope someone will volunteer to update the wiki as a result, and if not, I hope I remember to.  But the discussion has given me a couple of ideas I wouldn't have had otherwise; the meta-review comment above is a new(ish) idea.

Of course, the most useful place for this to end up would be as a tweet!  (Is everybody following @twistedmatrix yet?)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110701/78376971/attachment.html>

From ivan at ludios.org  Fri Jul  1 21:10:42 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 2 Jul 2011 03:10:42 +0000
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <20110702022312.GD21836@boombah.thristian.org>
References: <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTinw7XtHOMSt5ihGSZQZM8SD5Nb18g@mail.gmail.com>
	<20110702022312.GD21836@boombah.thristian.org>
Message-ID: <BANLkTik4K1PzBt+jVgPO1gH3FkfA3Lh63Q@mail.gmail.com>

On Sat, Jul 2, 2011 at 02:23, Tim Allen <screwtape at froup.com> wrote:
> On Fri, Jul 01, 2011 at 09:11:34PM +0200, Laurens Van Houtven wrote:
>> Only if there's a decent Github mirror to fork from, otherwise you're asking
>> people to do a multi-hour operation (I know, because I'm doing it right now)
>> to get a decent git repo,
>
> Last time I tried (perhaps a year ago), a git-svn clone of the Twisted
> SVN repo took the better part of a week. I seem to recall somebody
> preparing a tarball of a git-svn-clone'd repository to help people
> bootstrap, but my clone was already completed at that point so I didn't
> investigate further.

I update the tarball a few times a year at http://ludios.net/mirror/ -
see Twisted-checkout-README.txt for notes.

If you do it yourself, keep in mind that git svn clone has to restart
at r1 several times, for reasons I don't fully understand (due to
partial SVN branches?).  A few months back, a branch created by bzr
with an svn:mergeinfo property caused it to restart at r1 again.  This
adds about 27 hours to the git svn clone time, unfortunately.

Ivan



From termim at gmail.com  Fri Jul  1 22:31:19 2011
From: termim at gmail.com (Mikhail Terekhov)
Date: Sat, 2 Jul 2011 00:31:19 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E0DF79B.5020800@imperial.ac.uk> <4E0DFF11.2020400@emerge-life.de>
	<866D1C59-9F1E-4D1E-A382-11DD7C75EFC3@twistedmatrix.com>
	<6F8C10AC-3890-4F53-895E-FE751558BE61@gmail.com>
	<c25bc92e4a3c5b5f44486db31a6f6178.squirrel@webmail.zoteca.com>
	<BANLkTim5fsKWLuUbJMfox=2UOm09jau4oA@mail.gmail.com>
Message-ID: <BANLkTikGeZAAikivTu6u_QUBas_yh_TbAw@mail.gmail.com>

On Fri, Jul 1, 2011 at 6:01 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Because they don't always seem to track the ticket branch folders in a
> timely manner. Especially, when JP (he seems to usually be my reviewer :) )
> pushes a modification of my patch to the ticket branch. It's at this point
> trying to merge in from SVN is usually a nightmare.
>

Why it is a nightmare? Just do svn checkout of "the ticket branch" and
continue your work and submit additional patches against it if needed.
The only problem here that I could see is if you have made some changes in
addition to your patch. But in this case kdiff3 makes it a snap to merge you
changes to the ticket branch checkout.


> My Git copy being tied to an older SVN rev that my patch is based on. SVN
> just seems to lose it's brains when my patch isn't in the SVN commit
> history, because SVN repo doesn't allow me to commit in.
>

I can't decipher this, could you elaborate?


> DVCS would allow me to branch, commit to my repo, and then let JP pull from
> my repo into his to review and push up to the Twisted repo when he's happy
> with it...and all of the commit history is sane from the original, to my
> patch to his changes, so when I go to pull back down from the Twisted repo
> everything merges sanely.
>

IMHO the common practice is to accept patches for review and potential
inclusion and pull only from a trusted "lieutenants" (like in Linux kernel
case) and creating patches is not very different in svn, git etc.

Regards,
Mikhail Terekhov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110702/ef82c539/attachment-0001.html>

From termim at gmail.com  Fri Jul  1 22:53:51 2011
From: termim at gmail.com (Mikhail Terekhov)
Date: Sat, 2 Jul 2011 00:53:51 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <1309522459.13270.29.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
Message-ID: <CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>

On Fri, Jul 1, 2011 at 8:14 AM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

> Unless I'm mistaken, Github is a proprietary system, which means I'm
> unhappy about hosting our project there. At the minimum I'd want a very
> good story about how we can get all our data out if we need to. And even
> then I'd probably be against it. What's more, we can switch to
> git/bzr/hg without switching to a hosted system (e.g. trac with
> GitPlugin, and redmine has builtin integration for all of those.). Why
> does git imply github?
>
> In my opinion the biggest barrier to new developers is not whether we
> use git or subversion or what have you, but the high quality of code
> required (coding standard, tests, passing code review). A DVCS may well
> encourage more users, but I'm skeptical it will have a major impact.
>
> +1

-- 
Mikhail Terekhov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110702/f6418e1d/attachment.html>

From jstpierre at mecheye.net  Fri Jul  1 23:09:45 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 2 Jul 2011 01:09:45 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<1309522459.13270.29.camel@blake>
	<CALCsMPS=+4jZJcHEyHYGkGLMpd_JYne-NRanwNKx+4Ob=7Wz1A@mail.gmail.com>
Message-ID: <CAAMt=zA9dMgynAve59wFyUqEMjLioNx82kzGp1XNuwpVr3=3Ug@mail.gmail.com>

What data do you care about? Wikis and code are in git repositories,
and they have a very exhaustive API[0] for pretty much everything
else.

On Sat, Jul 2, 2011 at 12:53 AM, Mikhail Terekhov <termim at gmail.com> wrote:
> On Fri, Jul 1, 2011 at 8:14 AM, Itamar Turner-Trauring <itamar at itamarst.org>
> wrote:
>>
>> Unless I'm mistaken, Github is a proprietary system, which means I'm
>> unhappy about hosting our project there. At the minimum I'd want a very
>> good story about how we can get all our data out if we need to. And even
>> then I'd probably be against it. What's more, we can switch to
>> git/bzr/hg without switching to a hosted system (e.g. trac with
>> GitPlugin, and redmine has builtin integration for all of those.). Why
>> does git imply github?
>>
>> In my opinion the biggest barrier to new developers is not whether we
>> use git or subversion or what have you, but the high quality of code
>> required (coding standard, tests, passing code review). A DVCS may well
>> encourage more users, but I'm skeptical it will have a major impact.
>>
> +1
>
> --
> Mikhail Terekhov
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

[0] http://developer.github.com/

-- 
 Jasper



From michaelnt at gmail.com  Sat Jul  2 11:07:21 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Sat, 2 Jul 2011 18:07:21 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
Message-ID: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>

On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> As Itamar has already suggested, I think that this is a solution in search
> of a problem.  Aside from occasionally saving a contributor the trouble of
> typing 'review' in the keywords field every so often, what is this actually
> going to accomplish?  We have too many pending patches already, with not
> enough sustained interest to either review them or fix them; what we need
> are more sustained contributors, more reviewers.  Is this going to help us
> sustain interest?

I agree that there is a problem getting patches reviewed, I think git
provides a much better tool to reduce the effort and pain for a
reviewer in applying patches, and updating branches to HEAD. Github's
patch review tool, and the ability to get a diff to a patch reviewed
are big wins in my opinion.

I think github means less effort for the reviewer because they can
review commits, rather than a large diff. They can review changes
following a review. They can have a tool to make comments next to the
code and it is less effort to apply patches and update branches to
HEAD.

Small, documentation diffs, for instance can be reduced to a single
click for a core developer to merge the change to trunk.

Michael



From glyph at twistedmatrix.com  Sat Jul  2 15:27:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 2 Jul 2011 17:27:56 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
Message-ID: <A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>


On Jul 2, 2011, at 1:07 PM, Michael Thompson wrote:

> On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> I think github means less effort for the reviewer because they can
> review commits, rather than a large diff. They can review changes
> following a review.

I already review diffs this way, with a local bzr-svn branch using 'bzr merge; bzr qlog'.  Better yet I just sometimes do this on a plane :).

> They can have a tool to make comments next to the code and it is less effort to apply patches and update branches to HEAD.

This would be nice.  Is it easy for the reviewee to look at all the comments in an ordered list?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110702/fb84d7e3/attachment.html>

From _ at lvh.cc  Sat Jul  2 15:37:05 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 2 Jul 2011 23:37:05 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
	<A95CA43B-6A73-411C-83AA-826CB5D00454@twistedmatrix.com>
Message-ID: <CAE_Hg6Z8QA4cHTaRW8f1kRHnTBj+HYXccrwGWK5sHB+dCUPCJw@mail.gmail.com>

On Sat, Jul 2, 2011 at 11:27 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
> They can have a tool to make comments next to the code and it is less
> effort to apply patches and update branches to HEAD.
>
>
> This would be nice.  Is it easy for the reviewee to look at all the
> comments in an ordered list?
>
> Depends what ordering you want. Right now it's ascending line numbers, per
file they're in. You can also comment on an entire pull request if you want
to say things like "3 lines between classes".


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110702/50f5ed62/attachment.html>

From exarkun at twistedmatrix.com  Sat Jul  2 22:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Jul 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1309665924.78.284351704@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110703/c9b378be/attachment.html>

From michaelnt at gmail.com  Sun Jul  3 04:43:30 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Sun, 3 Jul 2011 11:43:30 +0100
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
Message-ID: <CA+A=P1qWALmL1wv1MBKwUPJQEn+sN2sfuA7cQzGA4mBcqaioFw@mail.gmail.com>

On Jul 2, 2011 10:28 p.m., "Glyph Lefkowitz" <glyph at twistedmatrix.com>
wrote:
>
>
> On Jul 2, 2011, at 1:07 PM, Michael Thompson wrote:
>
>> On 1 July 2011 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>
>> I think github means less effort for the reviewer because they can
>> review commits, rather than a large diff. They can review changes
>> following a review.
>
>
> I already review diffs this way, with a local bzr-svn branch using 'bzr
merge; bzr qlog'.  Better yet I just sometimes do this on a plane :).
>

Is that reviewing Svn branches what about text patches?

If I address three review comments sending in three patch files seems like a
hassle for me and the reviewer and could lead to more delays in the review
process.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110703/6457324d/attachment.html>

From andrew at bemusement.org  Sun Jul  3 18:36:08 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 4 Jul 2011 10:36:08 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<43375495-6D7C-4C29-B158-94CCC02EBEBA@twistedmatrix.com>
	<CA+A=P1p4-p0Jpr-xpWyGG-fSayPSoLJFrViA1jU5QP5_j-_8zg@mail.gmail.com>
Message-ID: <20110704003608.GT8823@aihal.home.puzzling.org>

Michael Thompson wrote:
[...]
> Small, documentation diffs, for instance can be reduced to a single
> click for a core developer to merge the change to trunk.

I doubt that single click writes a NEWS file, or tests that the diff as applied
to current trunk builds cleanly on a buildslave.  So this may be less useful
than you'd expect.

-Andrew.




From glyph at twistedmatrix.com  Mon Jul  4 17:06:50 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 4 Jul 2011 19:06:50 -0400
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
Message-ID: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>

Hello from the Twisted server operations team,

The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).

We will send another notice as soon as things are back to normal.

-glyph




From foom at fuhm.net  Mon Jul  4 17:49:10 2011
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Jul 2011 19:49:10 -0400
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
Message-ID: <350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>


On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:

> Hello from the Twisted server operations team,
> 
> The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).
> 
> We will send another notice as soon as things are back to normal.

I believe it should be functional now. Please advise if anything seems broken. :)

James


From johan.rydberg at edgeware.tv  Mon Jul  4 23:36:44 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 05 Jul 2011 07:36:44 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
Message-ID: <4E12A2EC.7020906@edgeware.tv>

On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
> In order to have at least some anecdotal evidence --
I've had some patched rejected, probably on sound basis.  But the
experience always leave you with a feeling that you got stabbed.

Sometimes it _is_ be better to get some basic functionality in
place, instead of arguing about how things should be done "the
right way".

 From time to time you find a ticket that you want fixed, and start
working on it, but end up never submitting it since you already
know that even if it fixes the problem it will be shot down, since
it doesn't do it this or that way.


-- 
Johan Rydberg
Product Designer

Edgeware AB
Mäster Samuelsgatan 56
SE-111 21 Stockholm, Sweden




From techtonik at gmail.com  Tue Jul  5 00:41:12 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Tue, 5 Jul 2011 09:41:12 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>

On Fri, Jul 1, 2011 at 1:29 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
>
> As some of you may already know (either through a backchannel or because you
> talked to me at Europython), there has been some talk about moving Twisted
> way from Trac+SVN to somewhere that isn't Trac+SVN.

There are always talks about moving here of there, because people are
bored or it _seems_ to them that the other way of doing things is much
better, because everybody else praises it. It is hard to resist this
opinion. Some people even take it fundamentally - "I won't commit,
because its not in Git". The worst that it doesn't mean these people
will participate if the project is be in Git, but a small percentage
will.

Problem with Git/Bazaar/Mercurial and DVCS in general is much higher
contribution barrier. So, if you want to switch, you need to know
_exactly_ why, and more importantly - which features are you going to
miss. See below:

> A lot of the devs do like SVN. My guess is that that's mainly because they
> don't actually use SVN, they use Combinator, or something. On the other
> hand, I do think that Trac is pretty universally loathed, and it would be a
> good idea to get away from it.

I believe nobody uses Combinator, because it is dead
http://divmod.org/trac/wiki/DivmodCombinator
SVN has one major flaw - you can not stack patches on your system
naturally when you don't have write access to repository. I believe
that's the major complain behind "DVCS is better". Second problem -
there in no _convenient_ way to share these patches to be reviewed and
incorporated upstream.

I do not think Trac is universally hated. It is the application one
level above Python API as Twisted itself. Trac has its own
architecture, different from standard OOP hierarchy. This architecture
is not obvious and may be inconvenient to debug and extend. It may be
that everybody is tired of Trac design, or Trac doesn't provide review
and push/pull integration, but it has some other awesome features.

> There's a few existing hosting solutions:
>
> Launchpad (+ Bazaar as the default vcs)
> Bitbucket (+ Mercurial as the default vcs)
> Github (+ Git as the default vcs)

I am not sure if the following possible with these services:
L  G  B
[ ] [ ] [ ] Project timeline with changes to wiki, tickets, commits etc,
[ ] [ ] [ ] Editable issue description (Google Code suxx at this)
[ ] [ ] [ ] Commit history navigation from patch view (next/prev buttons)
[ ] [ ] [ ] Colored blame history browser
[ ] [ ] [ ] Hook scripts for bots and other stuff
[ ] [ ] [ ] Full project data export

> Unless someone is going to go all "NO GITHUB IS TERRIBLE AND YOU ARE A BAD
> PERSON FOR EVEN SUGGESTING IT" on me, maybe we can talk about planning the
> transition? :)

To know if Github is terrible or not, you need some data - examples,
use cases. The first step in planning is to look at the current
workflow and gather a list of ways current Trac+SVN is used and see
where Github has advantages and where it suxx. Usually, people realize
the latter when it's too late.

As we are all mostly too busy, if you want people to participate in
discussions, it will be better to outline the features you need from
development workflow and separate discussion with some summary about
them into separate thread. Right now I see that there is a thread
about reviews and as a Rietveld user, I may have a lot to say about
that. =)
-- 
anatoly t.



From screwtape at froup.com  Tue Jul  5 00:49:33 2011
From: screwtape at froup.com (Tim Allen)
Date: Tue, 5 Jul 2011 16:49:33 +1000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
Message-ID: <20110705064933.GJ21836@boombah.thristian.org>

On Tue, Jul 05, 2011 at 09:41:12AM +0300, anatoly techtonik wrote:
> To know if Github is terrible or not, you need some data - examples,
> use cases. The first step in planning is to look at the current
> workflow and gather a list of ways current Trac+SVN is used and see
> where Github has advantages and where it suxx. Usually, people realize
> the latter when it's too late.

As has been mentioned in earlier in this thread:

    http://twistedmatrix.com/trac/wiki/WorkflowRequirements

(which I have updated with some of the website requirements that Glyph
mentioned in one of his posts).



From tds333+tx at gmail.com  Tue Jul  5 01:31:15 2011
From: tds333+tx at gmail.com (Wolfgang)
Date: Tue, 5 Jul 2011 09:31:15 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
Message-ID: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>

Hi,

just to note. If a move is preferred I give

+1 for bitbucket (mercurial)

If you ever want someone contributing under Windows, github with git is not a
good solution. For Windows there are good clients for mercurial and bazzar.
Git is more a Unix only solution. Launchpad has a horrible and unusable web ui
so -1 on that.

Also python has moved to mercurial and bitbucket catched up in features to
github. Why should we move to a "no Python system" ?

Regards,

Wolfgang



From jstpierre at mecheye.net  Tue Jul  5 01:42:04 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 5 Jul 2011 03:42:04 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110705064933.GJ21836@boombah.thristian.org>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
Message-ID: <CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>

Pretty much all of those can be supported with GitHub: they can POST
to a generic website as a commit hook[0], along with a number of other
integrated services[1].

The only thing that I can think of is that GitHub issues doesn't have
hooks, so we'd have to poll if we wanted an IRC bot for GitHub issues.
Thankfully, they have an API for issues[2] that should make it easier.

re: Mercurial, I didn't like it when I used it. If someone can tell me
how to do this[3] in hg, I'd be more inclined to play along. And that
said, I think we'd get a much better reception and amount of
contributors if we're on GitHub, if only due to the scale compared to
LP/BB. I think we're all familiar with the "denied" story :).

On Tue, Jul 5, 2011 at 2:49 AM, Tim Allen <screwtape at froup.com> wrote:
> On Tue, Jul 05, 2011 at 09:41:12AM +0300, anatoly techtonik wrote:
>> To know if Github is terrible or not, you need some data - examples,
>> use cases. The first step in planning is to look at the current
>> workflow and gather a list of ways current Trac+SVN is used and see
>> where Github has advantages and where it suxx. Usually, people realize
>> the latter when it's too late.
>
> As has been mentioned in earlier in this thread:
>
>    http://twistedmatrix.com/trac/wiki/WorkflowRequirements
>
> (which I have updated with some of the website requirements that Glyph
> mentioned in one of his posts).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

[0] http://help.github.com/post-receive-hooks/
[1] https://github.com/github/github-services
[2] http://developer.github.com/v3/issues/
[3] http://people.gnome.org/~federico/news-2008-08.html#git-rebase-interactive

-- 
 Jasper



From sandro at e-den.it  Tue Jul  5 03:02:50 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Tue, 5 Jul 2011 11:02:50 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
Message-ID: <20110705090250.GA14081@ubuntu>

On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
> re: Mercurial, I didn't like it when I used it. If someone can tell me
> how to do this[3] in hg, I'd be more inclined to play along. And that

I do this sort of things using mercurial queues. I pile up patches in a
queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
fold it with a later one (hg qfold fix_header2).

While the queue is not yet committed I can change the commit log of a patch
in a simple way.

   hg qnew -f fix1 -m "this fixed issue 1"
   hg qnew -I debian/control -m "fix control"
   hg qnew -f fix1.1 -m "forgot something in issue 1"
   hg qgoto fix1
   hg qfold fix1.1  # This concatenate the 2 comments"
   hg qrefresh -e   # fix your comment as you like it
   hg qpush
   hg qfinish -a   # commit all queues currently applied


sandro
*:-)

-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy



From orestis at orestis.gr  Tue Jul  5 03:05:33 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 5 Jul 2011 12:05:33 +0300
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>

On 5 Jul 2011, at 10:31, Wolfgang wrote:
> If you ever want someone contributing under Windows, github with git is not a
> good solution. For Windows there are good clients for mercurial and bazzar.
> Git is more a Unix only solution.

I have no vote on the whole moving off SVN, but as a former windows user I'd like to make it clear that git has absolutely no issues with Windows and it has been so for 3 years now. Either in cygwin or by using the (officially linked from the git home page) msysgit standalone package, you get a completely functional git CLI tool plus a completely functional and awesome gitk graphical interface. I've been using that for a full year (including git-svn) and it's been working completely fine. (Of course it may have other limitations that I'm not aware of, but I haven't come across them).

Finally, for what it's worth, for me as a potential contributor to Twisted (I still want to help with documentation) SVN is a much bigger barrier of entry than Trac. Even an official git mirror (complete with branches) that I could work against would be hugely beneficial. Git has a lot of local graphical tools that you can use to search, browse history, do diffs and so on, so that Trac+git can be a viable solution, even without Trac-git integration.

Orestis


From _ at lvh.cc  Tue Jul  5 04:15:24 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:15:24 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <CAE_Hg6bpoSz6+ivCMA78azn1b=YsY4CRvpTXWsyeCRs0bTPhYA@mail.gmail.com>

On Tue, Jul 5, 2011 at 9:31 AM, Wolfgang <tds333+tx at gmail.com> wrote:

> Hi,
>
> If you ever want someone contributing under Windows, github with git is not
> a
> good solution.
>

Why not? I know the reasons three years ago (and most of them were either
permissions or performance), but I have been assured multiple times that
this is no longer the case at all.


> Also python has moved to mercurial and bitbucket catched up in features to
> github. Why should we move to a "no Python system" ?
>

Because the community on Github is significantly larger.

At some point, this devolves into bikeshedding. Twisted devs would prefer
Launchpad, but many people hate Launchpad with a passion. Between Github and
Bitbucket, as you've said yourself, Bitbucket is playing feature catch-up
(whether they're doing that successfully or not is something I'm willing to
skip discussing). I don't think features are the thing to differentiate the
two on (even though I think Github wins because of polish). It's network
effects. Github has more following, so it's more interesting.

The thing is, it's not so much a vote. This is a do-ocracy. The breaks were
"I'll move it to Github, *or* someone stops me", not "I'll move it to
Github, or Bitbucket, or whatever else you folks think is a good idea". If
people are going to try and stop me from moving it to Github, I'm not going
to move it to Bitbucket or anything else. It's just going to stay Trac/SVN.

Regards,
> Wolfgang



cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/09a38283/attachment.html>

From _ at lvh.cc  Tue Jul  5 04:18:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:18:03 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
Message-ID: <CAE_Hg6aYc_2B3Ki95HGgWP2ZE2nAikdBUj=J0wC5=8Af4H75QQ@mail.gmail.com>

On Tue, Jul 5, 2011 at 11:05 AM, Orestis Markou <orestis at orestis.gr> wrote:

> Finally, for what it's worth, for me as a potential contributor to Twisted
> (I still want to help with documentation) SVN is a much bigger barrier of
> entry than Trac. Even an official git mirror (complete with branches) that I
> could work against would be hugely beneficial. Git has a lot of local
> graphical tools that you can use to search, browse history, do diffs and so
> on, so that Trac+git can be a viable solution, even without Trac-git
> integration.
>
> Orestis
>

Excellent!

It looks like the Github *mirror* is going to be a thing, so that will at
least make some of you happy.

Unfortunately, it looks like the *move* (including tickets etc) to Github is
never going to happen. I'm not going to elaborate. Someone else might.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/ea3aa655/attachment.html>

From david at silveregg.co.jp  Tue Jul  5 04:22:25 2011
From: david at silveregg.co.jp (David)
Date: Tue, 05 Jul 2011 19:22:25 +0900
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
Message-ID: <4E12E5E1.7080309@silveregg.co.jp>

On 07/05/2011 06:05 PM, Orestis Markou wrote:
> On 5 Jul 2011, at 10:31, Wolfgang wrote:
>> If you ever want someone contributing under Windows, github with git is not a
>> good solution. For Windows there are good clients for mercurial and bazzar.
>> Git is more a Unix only solution.
>
> I have no vote on the whole moving off SVN, but as a former windows user I'd like to make it clear that git has absolutely no issues with Windows and it has been so for 3 years now. Either in cygwin or by using the (officially linked from the git home page) msysgit standalone package, you get a completely functional git CLI tool plus a completely functional and awesome gitk graphical interface. I've been using that for a full year (including git-svn) and it's been working completely fine. (Of course it may have other limitations that I'm not aware of, but I haven't come across them).

Most people who stay on windows do not find cygwin or even CLI tools an 
acceptable solution. I think it is fair to say that git is a very unixy 
tool, and windows not its strong point when compared against bzr or hg 
(and I say that as someone who find git UI significantly better and 
easier then either bzr or hg). The situation on windows is consistantly 
improving though, with tools like smartgit which feel much more native 
to the typical windows user/developer.

cheers,

David



From _ at lvh.cc  Tue Jul  5 04:31:31 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 12:31:31 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <4E12E5E1.7080309@silveregg.co.jp>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
Message-ID: <CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>

On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp> wrote:

> Most people who stay on windows do not find cygwin or even CLI tools an
> acceptable solution.
>

So, the argument isn't that git is worse on Windows than it is on *nix: it's
just that Windows users don't want to use CLI tools?


> cheers,
> David
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/b7c78a6e/attachment.html>

From _ at lvh.cc  Tue Jul  5 06:18:18 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 14:18:18 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and it never got in?
In-Reply-To: <4E12A2EC.7020906@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
Message-ID: <CAE_Hg6ZZ_1ghQE-NFQ43DWLu6in3+5ewZgRgWjr_vibnRdESHQ@mail.gmail.com>

On Tue, Jul 5, 2011 at 7:36 AM, Johan Rydberg <johan.rydberg at edgeware.tv>wrote:

> On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
> > In order to have at least some anecdotal evidence --
> I've had some patched rejected, probably on sound basis.  But the
> experience always leave you with a feeling that you got stabbed.
>

Yes, this is terrible. How can we fix it?


> Sometimes it _is_ be better to get some basic functionality in
> place, instead of arguing about how things should be done "the
> right way".
>
>  From time to time you find a ticket that you want fixed, and start
> working on it, but end up never submitting it since you already
> know that even if it fixes the problem it will be shot down, since
> it doesn't do it this or that way.
>

Well, I think everyone would agree that a system where it's easier to pick
up such a half-finished thing that just needs some love would be better,
regardless of whether that unfinished work should go into twisted or not.
Right?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/06e2c867/attachment.html>

From _ at lvh.cc  Tue Jul  5 06:32:36 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 14:32:36 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
Message-ID: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>

Hi,


In doing twisted.positioning I find my self writing a bunch of code in ways
I would ordinarily write it differently, because we have to support 2.4
still (when is that going away? Isn't the most recent RHEL 2.6 already?).

Is there some way to register that so that as soon as we stop supporting
2.4, we can make a lot of code a lot prettier? For certain functions such as
any/all, perhaps a twisted.python._backports (with the explicit mention that
code in backports will go away as soon as the version it's built to work
around is no longer supported). That way, as soon as you support 2.5 (which
has any/all), you just remove it from _backports, see which tests break,
remove the imports, run tests again, commit. Woo!

Of course, _backports is obviously not a solution for everything, since not
every language feature can be fixed by defining a class or a function
somewhere.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/15d74c5b/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul  5 07:34:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 13:34:26 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>

On 12:32 pm, _ at lvh.cc wrote:
>Hi,
>
>
>In doing twisted.positioning I find my self writing a bunch of code in 
>ways
>I would ordinarily write it differently, because we have to support 2.4
>still (when is that going away? Isn't the most recent RHEL 2.6 
>already?).
>
>Is there some way to register that so that as soon as we stop 
>supporting
>2.4, we can make a lot of code a lot prettier? For certain functions 
>such as
>any/all, perhaps a twisted.python._backports (with the explicit mention 
>that
>code in backports will go away as soon as the version it's built to 
>work
>around is no longer supported). That way, as soon as you support 2.5 
>(which
>has any/all), you just remove it from _backports, see which tests 
>break,
>remove the imports, run tests again, commit. Woo!
>
>Of course, _backports is obviously not a solution for everything, since 
>not
>every language feature can be fixed by defining a class or a function
>somewhere.

Previously we've added things like this - socket.inet_pton, set, even 
dict long, long ago - to twisted.python.compat, which sounds similar to 
the _backports module you suggest.

I didn't think of the addition of such things to a module as 
"registration" or I would have mentioned this when you asked before on 
IRC. :)

Jean-Paul



From _ at lvh.cc  Tue Jul  5 07:41:25 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 15:41:25 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
Message-ID: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>

By "registration" I meant  stuff where we could put reminders that some code
can be cleaned up now.

Perhaps that means "ticket", if there's some way to mark a ticket as being
only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/9cbab09a/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul  5 08:01:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 14:01:29 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
	<CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
Message-ID: <20110705140129.3761.1218754888.divmod.xquotient.13@localhost.localdomain>

On 01:41 pm, _ at lvh.cc wrote:
>By "registration" I meant  stuff where we could put reminders that some 
>code
>can be cleaned up now.
>
>Perhaps that means "ticket", if there's some way to mark a ticket as 
>being
>only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?

In the past we haven't tried too hard to do this kind of tracking, 
because we have actually avoided going out of our way to break Twisted 
in lots of ways for older versions of Python after we stop supporting 
them.

Going through the codebase and making changing things to use Python 2.5 
features *just* because we don't have to make the code run on Python 2.4 
anymore is to be avoided.  Instead, code can be updated to Python 2.5 
syntax and APIs where changes are being made anyway and/or where the 
Python 2.5 version otherwise reduces the maintenance burden.  Otherwise, 
it's just busywork from which no one really benefits.

Jean-Paul



From itamar at itamarst.org  Tue Jul  5 08:03:40 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 05 Jul 2011 10:03:40 -0400
Subject: [Twisted-Python] Ways to register stuff only done for backwards
 compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <1309874620.13270.62.camel@blake>

On Tue, 2011-07-05 at 14:32 +0200, Laurens Van Houtven wrote:

> In doing twisted.positioning I find my self writing a bunch of code in
> ways I would ordinarily write it differently, because we have to
> support 2.4 still (when is that going away? Isn't the most recent RHEL
> 2.6 already?).

The plan was to drop 2.4 as of 11.2. At the rate things are going
(someone review #5118 so I can merge it and put up #5063 for review!) we
may not have 11.2 this year, only 11.1... in which case I'd be happy to
drop 2.4 in this release. Others may disagree - discuss it here:

http://twistedmatrix.com/trac/ticket/4962




From adi at roiban.ro  Tue Jul  5 11:51:24 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 05 Jul 2011 20:51:24 +0300
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
Message-ID: <1309888284.4006.16.camel@pp>

Hi,

I have been using Twisted for about 6 months and looking for ways in
which I could help the project.

I just read the announcement and I would like to volunteer for one of
the Twisted jobs.

I am familiar with bzr and git and for the beginning I would like to
start with maintaining the version control mirrors (bzr and git) and if
this will not consume all my free time, I would also like to take care
of buildbot master and slaves (or some other job that you consider is
more important).

Beside the job description, I was thinking that creating repositories
mirrors on Github/Gitorious could be useful. 
The Launchpad BZR mirror seems to be functional. 

Hoping that I can be useful, please let know if my application is
accepted.

Cheers,
--
Adi Roiban




From _ at lvh.cc  Tue Jul  5 11:56:18 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 5 Jul 2011 19:56:18 +0200
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1309888284.4006.16.camel@pp>
References: <1309888284.4006.16.camel@pp>
Message-ID: <CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>

Hey,

Cool, thanks for offering to chip in!

I think buildbot management is more important, since I can manage github +
wolfwood git mirrors pretty much on my own, and the launchpad mirror looks
permanently up to snuff.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/8d0f38e2/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul  5 13:22:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 19:22:22 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
Message-ID: <20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>

On 05:56 pm, _ at lvh.cc wrote:
>Hey,
>
>Cool, thanks for offering to chip in!
>
>I think buildbot management is more important, since I can manage 
>github +
>wolfwood git mirrors pretty much on my own, and the launchpad mirror 
>looks
>permanently up to snuff.

*Keeping* the Launchpad bzr mirror up to date is still a job we're 
trying to assign (that's why it's on the jobs page).

Beyond that, it would be nice if more than just trunk were on Launchpad. 
As it is now, if you want to use Launchpad, you can't work on any 
branches people have made in svn.

Jean-Paul



From glyph at twistedmatrix.com  Tue Jul  5 14:28:26 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 5 Jul 2011 16:28:26 -0400
Subject: [Twisted-Python] [Bug 775213] pymsnt 0.11.3-5 fails to start
	due to broken python-twisted-words 10.2.0-1 (AttributeError:
	'module' object has no attribute '_parse')
In-Reply-To: <20110705014856.GC29199@myrada.ghic.org>
References: <20110501232153.18283.2482.malonedeb@soybean.canonical.com>
	<20110627201500.27313.75159.malone@chaenomeles.canonical.com>
	<20110629164918.GB10717@selthys.ghic.org>
	<9DE51782-4495-4826-9275-F953F9485EE2@twistedmatrix.com>
	<20110703080129.GA13029@myrada.ghic.org>
	<C1DC24D9-E8A9-4C8D-9C7D-9475C6AE2328@twistedmatrix.com>
	<20110705014856.GC29199@myrada.ghic.org>
Message-ID: <9A9CF765-905C-43D2-B7C0-EC47416F83F2@twistedmatrix.com>


On Jul 4, 2011, at 9:48 PM, Diane Trout wrote:

>> Almost - I should have mentioned <http://twistedmatrix.com/trac/wiki/TwistedDevelopment> and <http://twistedmatrix.com/trac/wiki/ReviewProcess> first.
>> 
>> When you put that branch on Launchpad, you'll need to put #4799 into review as well, as per that process; just link to the branch.  Also, make it clear that you've volunteered for this work somewhere public, ideally in a ticket comment.
>> 
>> Thanks again!  Please don't hesitate to get in touch if you need any further guidance.
> 
> Ok I have linked to my branch in http://twistedmatrix.com/trac/ticket/4799
> 
> Does that look right? is the next step to put "review" into 4799's keywords field?

The next step is actually to make a backported patch specifically for <http://tm.tl/4799>, and get that merged into a release branch.  The idea with the release ticket is that it's for the release notes and final QA; all the actual code should be complete in individual feature tickets first.

I'm sorry - now I'm noticing that the workflow on the linked tickets (for example <http://tm.tl/4786>) is actually wrong for a maintenance release, as there's no cloned bug to indicate the backport.  If I recall correctly, /branches/releases/release-10.2.0-4651-2 is the branch to merge things into for a 10.2.x maintenance release.

At this point it would probably be good to get on the mailing list <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python> and discuss these issues more publicly; someone else with more experience with the release toolchain can provide you more specific advice, and you'll get faster responses than from me personally.  I'm Cc:ing this message to that list so that there will be some context when the discussion starts.

I was going to recommend the IRC channel too, but I am told you've already been there; I hope I'll run into you there :).

> Also I don't know how to get the code changes out of launchpad and into your svn repository.

A committer will do that, based on your branch.  You may have to use our all-branches mirror to continue work, as Launchpad only mirrors trunk.  Or, you may become an committer; we normally ask that people fix a few smaller bugs first, but given that you're volunteering to manage a release we may expedite that process :).

> Diane

Once again I _really_ appreciate your time here.  As you can probably tell, we rarely have the contributor bandwidth to do maintenance releases and so we're somewhat rusty at it.  We like to provide a smooth upgrade process for our users though, so when we manage to get this pushed through it will be a big benefit to our XMPP users.

Thanks,

-glyph




From glyph at twistedmatrix.com  Tue Jul  5 14:36:35 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 5 Jul 2011 16:36:35 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <4E12A2EC.7020906@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>
	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
Message-ID: <772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>


On Jul 5, 2011, at 1:36 AM, Johan Rydberg wrote:

> On 7/1/11 6:08 PM, Itamar Turner-Trauring wrote:
>> In order to have at least some anecdotal evidence --
> I've had some patched rejected, probably on sound basis.  But the
> experience always leave you with a feeling that you got stabbed.

We're always very grateful for contributions.  I'm very sad to hear that you feel like you "got stabbed".

> Sometimes it _is_ be better to get some basic functionality in place, instead of arguing about how things should be done "the right way".

Can you point to a specific ticket where you think this was the case?  I have this same general feeling, but pretty much all of the reviews I found when I went looking for specific examples included at least some significant coding-standard, documentation, and test coverage problems.  If we can find more specific examples, perhaps we can prevent this from recurring.

I do agree that we don't want to block every ticket on the absolute best possible implementation; but, allowing changes that don't have test and documentation coverage is a recipe for creating an unmaintainable mess.  Trust me, having dealt with Twisted in both modes, it's harder to get a patch into a release if the requirement is "demonstrate to everyone that it doesn't break everything without tests and documentation".  It's just that it moves the work from you, the contributor, to a special hell that the release manager inhabits for months of painful pre-release debugging, or users who notice that all their applications are broken and file lots of bugs.

> From time to time you find a ticket that you want fixed, and start working on it, but end up never submitting it since you already know that even if it fixes the problem it will be shot down, since it doesn't do it this or that way.

In these cases it would be best to file the ticket and describe your potential solution before implementing it.  You can even put the 'review' keyword on it to indicate that you want feedback from a contributor before proceeding.

-glyph




From ziga.seilnacht at gmail.com  Tue Jul  5 14:51:19 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Tue, 05 Jul 2011 22:51:19 +0200
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
Message-ID: <4E137947.9030806@gmail.com>

On 5.7.2011 1:49, James Y Knight wrote:
>
> On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:
>
>>  Hello from the Twisted server operations team,
>>
>>  The Twisted SVN server has run into some minor unexpected trouble during routine system maintenance.  For now, SVN is in read-only mode.  However, this shouldn't affect Trac, so feel free to keep doing reviews and submitting patches in the meanwhile.  Hopefully many of you are working from DVCS mirrors and will hardly notice the interruption :-).
>>
>>  We will send another notice as soon as things are back to normal.
>
> I believe it should be functional now. Please advise if anything seems broken. :)
>
> James
>

Hello,

It looks like the subversion commit mails to twisted-commits at twistedmatrix.com
list are not getting through for about a day. It would be great if they could
be restored, I find them convenient to keep up with the Twisted development.

Regards,
Ziga



From sean.m.ochoa at gmail.com  Tue Jul  5 15:51:50 2011
From: sean.m.ochoa at gmail.com (Sean Ochoa)
Date: Tue, 5 Jul 2011 14:51:50 -0700
Subject: [Twisted-Python] How do twisted and multiprocessing.Process create
	zombies?
Message-ID: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>

Using twisted loopingcall, multiprocessing.Process, and
multiprocessing.Queue; is it possible to create a zombie process. And, if
so, then how?

 -- bitcycle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/848f5170/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul  5 16:00:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 05 Jul 2011 22:00:35 -0000
Subject: [Twisted-Python] How do twisted and multiprocessing.Process
	create	zombies?
In-Reply-To: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
References: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
Message-ID: <20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>

On 09:51 pm, sean.m.ochoa at gmail.com wrote:
>Using twisted loopingcall, multiprocessing.Process, and
>multiprocessing.Queue; is it possible to create a zombie process. And, 
>if
>so, then how?

Uh, why would you want to create zombies?

Since Twisted installs a SIGCHLD handler, it's not unlikely that non- 
cooperating libraries that create subprocesses, such as the 
multiprocessing module, will miss their exit notification, leaving a 
zombie.

If you *don't* want zombies, use reactor.spawnProcess (or a library on 
top of it, like Ampoule) instead.

Jean-Paul



From kevin.horn at gmail.com  Tue Jul  5 16:19:53 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 5 Jul 2011 17:19:53 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
Message-ID: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:31 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp> wrote:
>
>> Most people who stay on windows do not find cygwin or even CLI tools an
>> acceptable solution.
>>
>
> So, the argument isn't that git is worse on Windows than it is on *nix:
> it's just that Windows users don't want to use CLI tools?
>
>
>> cheers,
>> David
>>
>
> cheers
> lvh
>
>
Not in my opinion.  I find hg, bzr, and svn all easier to use on Windows
than git, and I use them all from the command line.

For me the problem is that, while bash is certainly a superior "language"
than Windows command language (a la cmd.exe),
bash does not always map to Windows concepts/assumptions very nicely.  This
often leads to things occurring in unexpected
(or at least unintuitive) ways (for Win32 users).  Even though I use bash
daily on Linux machines, I find using bash on Win32 painful
(yes, even more painful than cmd.exe, which is really saying something!).

Git requires bash.  This makes it painful for me (on Windows).

Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad as
it _used_ to be.  It's functional.  It works.  But it is difficult to deal
with,
and a lot of Windows users I have talked to (as well as myself, of course)
just don't like using it.

I'm not necessarily saying that that means Twisted shouldn't use Git.  But
it _should_ be considered as a factor.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/aebc2665/attachment.html>

From ivan at ludios.org  Tue Jul  5 16:26:28 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Tue, 5 Jul 2011 22:26:28 +0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>

On Tue, Jul 5, 2011 at 22:19, Kevin Horn <kevin.horn at gmail.com> wrote:
> Git requires bash.  This makes it painful for me (on Windows).

In what sense? You can run git from cmd.exe, without having to deal
with bash.  (You're not required to use 'Git Bash'.)

> Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad as
> it _used_ to be.  It's functional.  It works.  But it is difficult to deal
> with,
> and a lot of Windows users I have talked to (as well as myself, of course)
> just don't like using it.

Is there anything in specific that is difficult?  I haven't had
Windows-specific problems with Git on Windows, and I've been using it
a lot.

Ivan



From sean.m.ochoa at gmail.com  Tue Jul  5 16:36:25 2011
From: sean.m.ochoa at gmail.com (Sean Ochoa)
Date: Tue, 5 Jul 2011 15:36:25 -0700
Subject: [Twisted-Python] How do twisted and multiprocessing.Process
 create zombies?
In-Reply-To: <20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>
References: <CAFmVOAviRW1q9CLMkv3pXQsz0+0z+kXLuyGF4LK5EK3xe2nmYg@mail.gmail.com>
	<20110705220035.3761.1904642149.divmod.xquotient.19@localhost.localdomain>
Message-ID: <CAFmVOAtkdeKSuM6_UQGYxQ+AV1DfXF+CvyVxkKbCXDL-wtE7jQ@mail.gmail.com>

I like glyph's answer.  :)

http://stackoverflow.com/questions/6589225/how-do-twisted-and-multiprocessing-process-create-zombies/6589440#6589440



On Tue, Jul 5, 2011 at 3:00 PM, <exarkun at twistedmatrix.com> wrote:

> On 09:51 pm, sean.m.ochoa at gmail.com wrote:
> >Using twisted loopingcall, multiprocessing.Process, and
> >multiprocessing.Queue; is it possible to create a zombie process. And,
> >if
> >so, then how?
>
> Uh, why would you want to create zombies?
>
> Since Twisted installs a SIGCHLD handler, it's not unlikely that non-
> cooperating libraries that create subprocesses, such as the
> multiprocessing module, will miss their exit notification, leaving a
> zombie.
>
> If you *don't* want zombies, use reactor.spawnProcess (or a library on
> top of it, like Ampoule) instead.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Sean | (206) 962-7954
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/4d734ee5/attachment.html>

From kevin.horn at gmail.com  Tue Jul  5 19:57:38 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 5 Jul 2011 20:57:38 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAKynti+KqC8rejdW07qi=GUxD0a-7eVrCn_2N7Z7hdFN=z-8cw@mail.gmail.com>
Message-ID: <CA+U=zK3fz+cfWsktvDq5yFmN7Wq9NnBazsx15X1u9vPkfc-0Bw@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:26 PM, Ivan Kozik <ivan at ludios.org> wrote:

> On Tue, Jul 5, 2011 at 22:19, Kevin Horn <kevin.horn at gmail.com> wrote:
> > Git requires bash.  This makes it painful for me (on Windows).
>
> In what sense? You can run git from cmd.exe, without having to deal
> with bash.  (You're not required to use 'Git Bash'.)
>
>
Interesting.  I was told (and had read) that it _was_ required.  So I've
been
operating under that assumption.  If you can run it in a cmd.exe window that
_might_ relieve one of my pain points.


> > Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
> as
> > it _used_ to be.  It's functional.  It works.  But it is difficult to
> deal
> > with,
> > and a lot of Windows users I have talked to (as well as myself, of
> course)
> > just don't like using it.
>
> Is there anything in specific that is difficult?  I haven't had
> Windows-specific problems with Git on Windows, and I've been using it
> a lot.
>
> Ivan
>
>
Nothing terribly specific comes to mind, as I don't _use_ git very often.

Only one of the projects I have ever contributed to uses git, and they
just switched recently (from Mercurial, which makes very little sense to me
as they are just about feature-equivalent).  The others all use Mercurial,
with
the exception of Twisted.  So when I started learning about DVCS, Mercurial
was pretty much my introduction (aside: it seems to me that people in
general
seem to prefer whatever DVCS they were originally introduced to).

Every couple of months I pull down a "new" release of git or TortoiseGit or
whatever
and tinker around with it, but it just isn't very nice compared to
Mercurial.  Maybe
it will be someday.

And it's not that anything is particularly _difficult_, so much as annoying.
I find the CLI interface weird and clunky.  I recall thinking some of the
design
decisions were not particularly good (though it's been long enough that I
can't
recall what they were exactly...and I have some complaints about the design
of
pretty much every DVCS out there, so...). These aren't Windows-specific
issues
of course, but when you add the Windows-specific issues on top of them, it
just
makes git that much worse to deal with.

Of course, this is entirely subjective, and is totally my own opinion.
Maybe the
next time I update git it will annoy me less.

As far as specific Windows-related issues, here's what I can come up with.
These
are all pretty vague, I'm afraid...

- Let's start with installing.  It would be really nice to be able to go to
a website, download
a package or archive or something, read some instructions and install git.
Preferably with
Tortoise-X-like Explorer shell integration (though I can live without
that).  I have never been
able to do that.  Instead, it's try the above, have it not work, search
Google for a bunch of
tutorial-style blog posts, try a bunch of stuff, maybe edit or move some
files in whichever
of several distributions I've had to download, and spend at least a couple
of hours getting
things working.  At this point I'm already annoyed with git and I haven't
even started using it yet.

- Now I'm going to check things out.  OK, fine.  First hurdle is that
terminology is different from
what I'm used to, though that's hardly Git's fault, and I can deal with
that.  But in order to deal
with the change in terminology, coming from Mercurial, I'd really like to
see some nice online help.
Last I checked, git totally failed in this area, and was noticeably worse on
Windows than on *nix.
(This was maybe 3 or 4 months ago).  Ok, so now I'm having to search web/man
pages for how to
use git properly.  Admittedly, some of this is necessary anyway for
something as complex as
a DVCS system, but it shouldn't be necessary for basic commands.  I also
seem to recall being
annoyed by syntax for various commands actually being slightly _different_
on Windows than
on *nix, but I can't say definitely that that was the case now (it was a
long time ago, my
memory is hazy, and I may have just misunderstood something).  I have no
idea if this is
still a problem (assuming it ever really was).

- I definitely miss Mercurial's friendly little warnings about when I might
be about to screw
things up.  I doubt git will ever have anything like this.  It seems
antithetical to the git mindset.

- Git just seems like it's second class citizen in the git world (this is
true of a _huge_ number
of open source projects, so it isn't just git, but I have a whole other rant
about why this is a
Bad Thing [tm]  ).  A lot of complaints about git on Win32 (which I find to
be pretty valid
complaints) I see answered with a sneer and something like: "Oh sure, but
that's what you
get for using _Windows_."

To sum up, I use both Windows and Linux.  That is unlikely to change any
time soon.  I want my
tools to work nicely and be polished in both environments.  Git has not
impressed me as being
able to do this yet.  Even if it ever does get to this point, I still
probably won't like it as much as
Mercurial, just because hg is what I've become used to, and git doesn't
offer much that hg
doesn't already have.

Well, this is already way longer than I had intended it to be...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110705/dc73a9a5/attachment.html>

From jstpierre at mecheye.net  Tue Jul  5 20:15:09 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 5 Jul 2011 22:15:09 -0400
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <20110705090250.GA14081@ubuntu>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
	<20110705090250.GA14081@ubuntu>
Message-ID: <CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>

On Tue, Jul 5, 2011 at 5:02 AM, Alessandro Dentella <sandro at e-den.it> wrote:
> On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
>> re: Mercurial, I didn't like it when I used it. If someone can tell me
>> how to do this[3] in hg, I'd be more inclined to play along. And that
>
> I do this sort of things using mercurial queues. I pile up patches in a
> queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
> fold it with a later one (hg qfold fix_header2).

Hm. So it's like quilt? Are patch queues real commits (changesets,
revisions, whatever), so I can log and blame and grep them while I'm
working?

> While the queue is not yet committed I can change the commit log of a patch
> in a simple way.
>
>   hg qnew -f fix1 -m "this fixed issue 1"
>   hg qnew -I debian/control -m "fix control"
>   hg qnew -f fix1.1 -m "forgot something in issue 1"
>   hg qgoto fix1
>   hg qfold fix1.1  # This concatenate the 2 comments"
>   hg qrefresh -e   # fix your comment as you like it
>   hg qpush
>   hg qfinish -a   # commit all queues currently applied

Neato. This requires me to be in a queue *before* I fix my patch, right?

> sandro
> *:-)
>
> --
> Sandro Dentella  *:-)
> http://www.reteisi.org             Soluzioni libere per le scuole
> http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
 Jasper



From david at silveregg.co.jp  Wed Jul  6 01:18:58 2011
From: david at silveregg.co.jp (David)
Date: Wed, 06 Jul 2011 16:18:58 +0900
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <4E140C62.4000105@silveregg.co.jp>

On 07/06/2011 07:19 AM, Kevin Horn wrote:
> On Tue, Jul 5, 2011 at 5:31 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>
>     On Tue, Jul 5, 2011 at 12:22 PM, David <david at silveregg.co.jp
>     <mailto:david at silveregg.co.jp>> wrote:
>
>         Most people who stay on windows do not find cygwin or even CLI
>         tools an
>         acceptable solution.
>
>
>     So, the argument isn't that git is worse on Windows than it is on
>     *nix: it's just that Windows users don't want to use CLI tools?
>
>         cheers,
>         David
>
>     cheers
>     lvh
>
>
> Not in my opinion.  I find hg, bzr, and svn all easier to use on Windows
> than git, and I use them all from the command line.

But I think you will think the same on unix, that is you will prefer 
hg/bzr to git on unix as well.

I don't think someones will prefer hg over git on windows and prefer git 
over hg on unix, frankly. As for which is simpler, I think those 
differences are much more superficial than people want to think, and 
some concepts introduced in hg/bzr for simplicity sake actually harmful 
in the long term (e.g. natural revision number, especially as used in 
bzr). Git UI is not super consistent, but neither is hg as soon as you 
use e.g. named branches and bookmarks.

cheers,

David



From sandro at e-den.it  Wed Jul  6 03:03:14 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 6 Jul 2011 11:03:14 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
 nicer
In-Reply-To: <CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAPkN8xKkDsdtZrwyc_d6vEMU4CFdtkvnYPJhnJ7fJcrEwQVY8w@mail.gmail.com>
	<20110705064933.GJ21836@boombah.thristian.org>
	<CAAMt=zAPUkDvMcHrpfomBC3u4CVKBGfHp09r2ZxhbPx8Qw2VAA@mail.gmail.com>
	<20110705090250.GA14081@ubuntu>
	<CAAMt=zBn4n=7BZbv14kZz541g1cP5cTqC8_cuUu==utXW+sW4w@mail.gmail.com>
Message-ID: <20110706090314.GA2929@ubuntu>

On Tue, Jul 05, 2011 at 10:15:09PM -0400, Jasper St. Pierre wrote:
> On Tue, Jul 5, 2011 at 5:02 AM, Alessandro Dentella <sandro at e-den.it> wrote:
> > On Tue, Jul 05, 2011 at 03:42:04AM -0400, Jasper St. Pierre wrote:
> >> re: Mercurial, I didn't like it when I used it. If someone can tell me
> >> how to do this[3] in hg, I'd be more inclined to play along. And that
> >
> > I do this sort of things using mercurial queues. I pile up patches in a
> > queue and can subsequently navigate in the queue (hg qgoto fix_header1) and
> > fold it with a later one (hg qfold fix_header2).
> 
> Hm. So it's like quilt? 

I think so

> Are patch queues real commits (changesets,
> revisions, whatever), so I can log and blame and grep them while I'm
> working?

yes for all 3 (log, blame, grep)

> > While the queue is not yet committed I can change the commit log of a patch
> > in a simple way.

if the patch is called my_patch1:

  $ hg goto my_patch1
  $ hg qrefresh -e (open editor to change edit log)

hg qrefresh alone would just incorporate all modification to working
directory in the patch, 

before committing you can anyhow keep all patches in a separate repository
(hg qinit will initialize it for you. I personally don't use it though).

If you use such a second repository I guess you can simply share that with
other people too, but I'm not using this workflow.

> >
> >   hg qnew -f fix1 -m "this fixed issue 1"
> >   hg qnew -I debian/control -m "fix control"
> >   hg qnew -f fix1.1 -m "forgot something in issue 1"
> >   hg qgoto fix1
> >   hg qfold fix1.1  # This concatenate the 2 comments"
> >   hg qrefresh -e   # fix your comment as you like it
> >   hg qpush
> >   hg qfinish -a   # commit all queues currently applied
> 
> Neato. This requires me to be in a queue *before* I fix my patch, right?

that's simpler. Otherwise you create a second patch and subsequently fold
them toghether.

Using a third part application called qct (that works also on git and some
other I believe) you can also cherry pick single diffs in a single patch to
be incorporated in a changeset. I use this a lot to keep the changeset as
clean as possible.


[disclaimer]
I'm not an expert of git, so my comparison should not be taken
seriously. It's true that all the time I use git I find it more convoluted than
mercurial, and I always thought it was an historical heritage.


sandro
*:-)


-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy



From _ at lvh.cc  Wed Jul  6 04:35:19 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 6 Jul 2011 12:35:19 +0200
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
Message-ID: <CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>

On Wed, Jul 6, 2011 at 12:19 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
> as it _used_ to be.  It's functional.  It works.  But it is difficult to
> deal with,
> and a lot of Windows users I have talked to (as well as myself, of course)
> just don't like using it.
>
> I'm not necessarily saying that that means Twisted shouldn't use Git.  But
> it _should_ be considered as a factor.
>
> Kevin Horn
>

Gotcha, thanks.

I've been told that hg is a lot more pleasant on Windows, (and you appear to
echo that), and hg-git manages to be a damn-near 1:1 mapping. Have you tried
that?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110706/a3989564/attachment-0001.html>

From jml at mumak.net  Wed Jul  6 04:43:57 2011
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 6 Jul 2011 11:43:57 +0100
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<20110705133426.3761.1243893227.divmod.xquotient.3@localhost.localdomain>
	<CAE_Hg6Zw4Z2vAL1PfqL8O1qJ1Cou=H=QwchSrKS90tMLXOR+zQ@mail.gmail.com>
Message-ID: <CAHZ8tna3dBG6Vtn4qgYw6dr4maxH26YP0OY=wiJxQk7ffrxALA@mail.gmail.com>

On Tue, Jul 5, 2011 at 2:41 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> By "registration" I meant  stuff where we could put reminders that some code
> can be cleaned up now.
>
> Perhaps that means "ticket", if there's some way to mark a ticket as being
> only relevant when we stop supporting $PYTHON_VERSION_WHATEVER?
>

Jp's excellent points aside, could we just use the code itself to do
this? Whenever you see something that looks overly complicated and it
turns out that that complexity is there to provide support for older
Pythons, add a comment saying so. "2.3" is fairly easy to grep for,
and it's almost always a good idea to explain the motive behind ugly
code.

jml



From johan.rydberg at edgeware.tv  Wed Jul  6 05:10:21 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 06 Jul 2011 13:10:21 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
Message-ID: <4E14429D.3060403@edgeware.tv>

On 7/5/11 10:36 PM, Glyph Lefkowitz wrote:
>
> Can you point to a specific ticket where you think this was the case?  I have this same general feeling, but pretty much all of the reviews I found when I went looking for specific examples included at least some significant coding-standard, documentation, and test coverage problems.  If we can find more specific examples, perhaps we can prevent this from recurring.
I was mostly thinking about the persistent connection functionality for
twisted.web.client.Agent.

Maybe Twisted would benefit more from having that functionality in place,
than having the super-perfect API between Agent and HTTP parser.

> I do agree that we don't want to block every ticket on the absolute best possible implementation; but, allowing changes that don't have test and documentation coverage is a recipe for creating an unmaintainable mess.
I agree.

-- 
Johan Rydberg
Product Designer

Edgeware AB
Mäster Samuelsgatan 56
SE-111 21 Stockholm, Sweden




From itamar at itamarst.org  Wed Jul  6 06:04:16 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 06 Jul 2011 08:04:16 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <4E14429D.3060403@edgeware.tv>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv>
Message-ID: <1309953856.13270.84.camel@blake>

On Wed, 2011-07-06 at 13:10 +0200, Johan Rydberg wrote:

> I was mostly thinking about the persistent connection functionality
> for twisted.web.client.Agent.

We definitely want this to get in, this was a large part of the
motivation for Agent in the first place.

> Maybe Twisted would benefit more from having that functionality in
> place, than having the super-perfect API between Agent and HTTP
> parser.

The goal is not so much a perfect API as something we won't have to
deprecate soon after because we realize there are some requirements that
can't be addressed in a backwards compatible way. In this case, the
cookie, proxy and other agent wrappers that have been created mean we
now have a better understanding of what the Agent API looks like from a
higher level, which should help.




From foom at fuhm.net  Wed Jul  6 08:48:43 2011
From: foom at fuhm.net (James Y Knight)
Date: Wed, 6 Jul 2011 10:48:43 -0400
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
Message-ID: <FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>


On Jul 5, 2011, at 8:32 AM, Laurens Van Houtven wrote:
> In doing twisted.positioning I find my self writing a bunch of code in ways I would ordinarily write it differently, because we have to support 2.4 still (when is that going away? Isn't the most recent RHEL 2.6 already?).
> 
> Is there some way to register that so that as soon as we stop supporting 2.4, we can make a lot of code a lot prettier? For certain functions such as any/all, perhaps a twisted.python._backports (with the explicit mention that code in backports will go away as soon as the version it's built to work around is no longer supported). That way, as soon as you support 2.5 (which has any/all), you just remove it from _backports, see which tests break, remove the imports, run tests again, commit. Woo!
> 
> Of course, _backports is obviously not a solution for everything, since not every language feature can be fixed by defining a class or a function somewhere.

Yes, we've done that many times before, in twisted.python.compat. (that should probably be an _ module now; it has always been treated as such, but it's not named appropriately.)


From kevin.horn at gmail.com  Wed Jul  6 13:08:36 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 6 Jul 2011 14:08:36 -0500
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
Message-ID: <CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>

On Wed, Jul 6, 2011 at 5:35 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Wed, Jul 6, 2011 at 12:19 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> Also, Git _is_ worse on Windows than it is on *nix.  It's just not as bad
>> as it _used_ to be.  It's functional.  It works.  But it is difficult to
>> deal with,
>> and a lot of Windows users I have talked to (as well as myself, of course)
>> just don't like using it.
>>
>> I'm not necessarily saying that that means Twisted shouldn't use Git.  But
>> it _should_ be considered as a factor.
>>
>> Kevin Horn
>>
>
> Gotcha, thanks.
>
> I've been told that hg is a lot more pleasant on Windows, (and you appear
> to echo that), and hg-git manages to be a damn-near 1:1 mapping. Have you
> tried that?
>
> cheers
> lvh
>
>
I've been told the same thing, by someone who _really_ didn't want to switch
a project to git and got overruled.  He indicated that using hg-git pretty
much fixed all his complaints.

I haven't used it myself, though if I ever need to do any serious work on a
large project using git, I certainly intend to.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110706/4bd25d4e/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Jul  6 13:44:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 06 Jul 2011 19:44:56 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1309888284.4006.16.camel@pp>
References: <1309888284.4006.16.camel@pp>
Message-ID: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>

On 5 Jul, 05:51 pm, adi at roiban.ro wrote:
>Hi,
>
>I have been using Twisted for about 6 months and looking for ways in
>which I could help the project.
>
>I just read the announcement and I would like to volunteer for one of
>the Twisted jobs.
>
>I am familiar with bzr and git and for the beginning I would like to
>start with maintaining the version control mirrors (bzr and git) and if
>this will not consume all my free time, I would also like to take care
>of buildbot master and slaves (or some other job that you consider is
>more important).
>
>Beside the job description, I was thinking that creating repositories
>mirrors on Github/Gitorious could be useful.
>The Launchpad BZR mirror seems to be functional.
>
>Hoping that I can be useful, please let know if my application is
>accepted.

Hi Adi,

Thanks for volunteering.  It seems like the git mirror is well in hand. 
Perhaps you could take on just the bzr mirror for now.

The buildbot related jobs are also still open. :)  Send me a private 
email, or find me on Freenode, and we'll talk more about the details.

Thanks!

Jean-Paul



From adi at roiban.ro  Wed Jul  6 13:51:52 2011
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 06 Jul 2011 22:51:52 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
	Volunteer)
In-Reply-To: <20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
Message-ID: <1309981912.17239.33.camel@pp>

Hi,

To move things forwards, I would like to discuss the next actions for
BZR mirror. After the BZR mirror is done, I will look at git.


Launchpad BZR mirror
----------------

AFAIK Launchpad can only import a single svn branch, so importing all
twisted in-development branches in Launchpad is not possible.

Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
and the last change is : 15922. By exarkun on 2011-06-14.

Maybe Launchpad can be configured to mirror the SVN trunk branch,
instead of the BZR branch.
In this way Launchpad mirror will not depend on Twisted BZR mirror
errors.

Jonathan Lange, do you think this is a good idea?


Twisted self hosted BZR mirror
------------------------------

In the following days I will look at the current state of BZR mirror
available here http://svn.twistedmatrix.com/bzr/Twisted/ , document the
tools used for maintaining the mirror and try to reproduce a mirror on
my server.


Cheers,
Adi


On Tue, 2011-07-05 at 19:22 +0000, exarkun at twistedmatrix.com wrote: 
> On 05:56 pm, _ at lvh.cc wrote:
> >Hey,
> >
> >Cool, thanks for offering to chip in!
> >
> >I think buildbot management is more important, since I can manage 
> >github +
> >wolfwood git mirrors pretty much on my own, and the launchpad mirror 
> >looks
> >permanently up to snuff.
> 
> *Keeping* the Launchpad bzr mirror up to date is still a job we're 
> trying to assign (that's why it's on the jobs page).
> 
> Beyond that, it would be nice if more than just trunk were on Launchpad. 
> As it is now, if you want to use Launchpad, you can't work on any 
> branches people have made in svn.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python







From exarkun at twistedmatrix.com  Wed Jul  6 13:58:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 06 Jul 2011 19:58:26 -0000
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <4E137947.9030806@gmail.com>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>
	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>
	<4E137947.9030806@gmail.com>
Message-ID: <20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>

On 5 Jul, 08:51 pm, ziga.seilnacht at gmail.com wrote:
>On 5.7.2011 1:49, James Y Knight wrote:
>>
>>On Jul 4, 2011, at 7:06 PM, Glyph Lefkowitz wrote:
>>>  Hello from the Twisted server operations team,
>>>
>>>  The Twisted SVN server has run into some minor unexpected trouble 
>>>during routine system maintenance.  For now, SVN is in read-only 
>>>mode.  However, this shouldn't affect Trac, so feel free to keep 
>>>doing reviews and submitting patches in the meanwhile.  Hopefully 
>>>many of you are working from DVCS mirrors and will hardly notice the 
>>>interruption :-).
>>>
>>>  We will send another notice as soon as things are back to normal.
>>
>>I believe it should be functional now. Please advise if anything seems 
>>broken. :)
>>
>>James
>
>Hello,
>
>It looks like the subversion commit mails to twisted- 
>commits at twistedmatrix.com
>list are not getting through for about a day. It would be great if they 
>could
>be restored, I find them convenient to keep up with the Twisted 
>development.

Thanks for pointing this out.  I think James has fixed the issue.

Jean-Paul



From glyph at twistedmatrix.com  Wed Jul  6 15:27:55 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 6 Jul 2011 17:27:55 -0400
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
	and	it never got in?
In-Reply-To: <1309953856.13270.84.camel@blake>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<BANLkTik=D1j-S4ed7RLoqH0y2VTY5vZxeg@mail.gmail.com>
	<BANLkTin1Rg73C2pdvtfC5dz+KUnFsSJxRQ@mail.gmail.com>
	<BANLkTikBKOa0YYEa9SWG+aa5x9eJtfqLtg@mail.gmail.com>
	<BANLkTi=aoM+ADKXx1g2SgYid3g+-f4UCHw@mail.gmail.com>
	<1309527855.13270.37.camel@blake>	<4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv> <1309953856.13270.84.camel@blake>
Message-ID: <261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>


On Jul 6, 2011, at 8:04 AM, Itamar Turner-Trauring wrote:

> On Wed, 2011-07-06 at 13:10 +0200, Johan Rydberg wrote:
> 
>> I was mostly thinking about the persistent connection functionality
>> for twisted.web.client.Agent.
> 
> We definitely want this to get in, this was a large part of the
> motivation for Agent in the first place.

Looking at http://twistedmatrix.com/trac/ticket/3420 now, I see reviews with lots of functional issues and spec-compliance/correctness issues raised.  There are a few notes on the API as well, but without addressing the reviews there, the patch would just have incorrect behavior.  The few notes that are purely API aesthetics are mostly "make this private by default", which should be a trivial search-and-replace to fix.

>> Maybe Twisted would benefit more from having that functionality in
>> place, than having the super-perfect API between Agent and HTTP
>> parser.
> 
> The goal is not so much a perfect API as something we won't have to
> deprecate soon after because we realize there are some requirements that
> can't be addressed in a backwards compatible way. In this case, the
> cookie, proxy and other agent wrappers that have been created mean we
> now have a better understanding of what the Agent API looks like from a
> higher level, which should help.


That does sound a little like "the perfect API" to me :).  And, I'd be inclined to argue - if I could find even one example of a functionally-correct patch with sufficient docs and tests that had actually been held up because of API issues :).

-glyph


From albert.brandl at weiermayer.com  Thu Jul  7 01:33:26 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Thu, 7 Jul 2011 09:33:26 +0200
Subject: [Twisted-Python] SURVEY: Have you submitted a patch to Twisted
 and	it never got in?
In-Reply-To: <261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>
References: <1309527855.13270.37.camel@blake> <4E0DDA34.2080007@free.fr>
	<7c008ddffbab04f14ea5d56be0d7a8eb.squirrel@webmail.zoteca.com>
	<BANLkTimiiZF0cOTj9_ODtCz+NHpSzSxoBQ@mail.gmail.com>
	<1b16c42419e69277e4a184ce1d199602.squirrel@webmail.zoteca.com>
	<4E12A2EC.7020906@edgeware.tv>
	<772139F6-51EB-402C-8B72-3EE7809C606B@twistedmatrix.com>
	<4E14429D.3060403@edgeware.tv> <1309953856.13270.84.camel@blake>
	<261C1239-6EE2-4FBF-85B7-B66A76121001@twistedmatrix.com>
Message-ID: <20110707073326.GA2283@weiermayer.com>

On Wed, Jul 06, 2011 at 05:27:55PM -0400, Glyph Lefkowitz wrote:

> Looking at http://twistedmatrix.com/trac/ticket/3420 now, I see 
> reviews with lots of functional issues and spec-compliance/correctness 
> issues raised.  There are a few notes on the API as well, but without 
> addressing the reviews there, the patch would just have incorrect 
> behavior.

This is also my experience. When fixing issue 4378, I received mostly 
constructive feedback. 

There is much knowledge how to "do things" when working on the codebase, 
some of it implicit or spread over multiple documents. During review, 
this knowledge was conveyed in a tangible way, using a concrete piece of 
code.

I have to admit that it was a little discouraging to receive a long list 
of change requests. But the reviewers did a very good job explaining why 
things should be changed. This helped me to adapt my patches to fulfill 
the standards for the codebase. And it was very satisfying to finally 
have the patch accepted :-).

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From _ at lvh.cc  Thu Jul  7 05:15:29 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 7 Jul 2011 13:15:29 +0200
Subject: [Twisted-Python] Ways to register stuff only done for backwards
	compatibility
In-Reply-To: <FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
Message-ID: <CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>

I hear tickets is how you get things done: http://tm.tl/5181
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110707/3bf454fd/attachment.html>

From exarkun at twistedmatrix.com  Thu Jul  7 05:52:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 07 Jul 2011 11:52:25 -0000
Subject: [Twisted-Python] Ways to register stuff only done for
	backwards	compatibility
In-Reply-To: <CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>
References: <CAE_Hg6Y18at7EVk=6Nhfybm6ZgoE3azsitx9ppdCG5uCr7beNw@mail.gmail.com>
	<FEDC9EAF-60E7-4D5F-8E95-5665978A813E@fuhm.net>
	<CAE_Hg6Y-8+NZKtjo46_S8A_33x0qGPwEioZGj7=pGL49W4N8tg@mail.gmail.com>
Message-ID: <20110707115225.3761.1883014190.divmod.xquotient.50@localhost.localdomain>

On 11:15 am, _ at lvh.cc wrote:
>I hear tickets is how you get things done: http://tm.tl/5181

But not this.  If we want *new* backwards compatibility stuff to be 
private, then give it a private name.  The old stuff is public though, 
so it should be treated how we treat public stuff.

Jean-Paul



From p.mayers at imperial.ac.uk  Thu Jul  7 07:28:57 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 07 Jul 2011 14:28:57 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
Message-ID: <4E15B499.2030206@imperial.ac.uk>

On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:

> Thanks for volunteering.  It seems like the git mirror is well in hand.

If so, can someone update this:

http://twistedmatrix.com/trac/wiki/GitMirror



From adi at roiban.ro  Thu Jul  7 10:25:56 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 07 Jul 2011 19:25:56 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <1309981912.17239.33.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp>
Message-ID: <1310055956.17239.116.camel@pp>

Hi,


LP BZR Mirror status
--------------------

Martin Pool enabled trunk import directly from SVN repo and the branch
is available here:
https://code.launchpad.net/~vcs-imports/twisted/trunk

The mirror is refreshed about every 5 to 6 hours.
Only trunk is available.


Own BZR Mirror
--------------

I have hacked a quick and dirty script for pulling / creating / deleting
all Twisted svn branches.

The code is here: http://pastebin.ubuntu.com/639582/

Synchronizing all branches takes about 41 minutes on an Intel Xeon 2.8G
CPU. It does not uses to much memory since each branch is pulled using a
different bzr pull process.

Pulling a single branch takes about 15 seconds, so maybe we the SVN repo
can have some commit hooks to execute 'bzr pull' in the right branch.

-----

Please let me know what do you think should be the next action for
resolving the bzr mirror issues?

-----
Cheers,
Adi

On Wed, 2011-07-06 at 22:51 +0300, Adi Roiban wrote:
> Hi,
> 
> To move things forwards, I would like to discuss the next actions for
> BZR mirror. After the BZR mirror is done, I will look at git.
> 
> 
> Launchpad BZR mirror
> ----------------
> 
> AFAIK Launchpad can only import a single svn branch, so importing all
> twisted in-development branches in Launchpad is not possible.
> 
> Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
> and the last change is : 15922. By exarkun on 2011-06-14.
> 
> Maybe Launchpad can be configured to mirror the SVN trunk branch,
> instead of the BZR branch.
> In this way Launchpad mirror will not depend on Twisted BZR mirror
> errors.
> 
> Jonathan Lange, do you think this is a good idea?
> 
> 
> Twisted self hosted BZR mirror
> ------------------------------
> 
> In the following days I will look at the current state of BZR mirror
> available here http://svn.twistedmatrix.com/bzr/Twisted/ , document the
> tools used for maintaining the mirror and try to reproduce a mirror on
> my server.
> 
> 
> Cheers,
> Adi
> 
> 
> On Tue, 2011-07-05 at 19:22 +0000, exarkun at twistedmatrix.com wrote: 
> > On 05:56 pm, _ at lvh.cc wrote:
> > >Hey,
> > >
> > >Cool, thanks for offering to chip in!
> > >
> > >I think buildbot management is more important, since I can manage 
> > >github +
> > >wolfwood git mirrors pretty much on my own, and the launchpad mirror 
> > >looks
> > >permanently up to snuff.
> > 
> > *Keeping* the Launchpad bzr mirror up to date is still a job we're 
> > trying to assign (that's why it's on the jobs page).
> > 
> > Beyond that, it would be nice if more than just trunk were on Launchpad. 
> > As it is now, if you want to use Launchpad, you can't work on any 
> > branches people have made in svn.
> > 
> > Jean-Paul
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From sparkytwobillion at gmail.com  Fri Jul  8 08:36:56 2011
From: sparkytwobillion at gmail.com (sparky gmail)
Date: Fri, 08 Jul 2011 07:36:56 -0700
Subject: [Twisted-Python] Project Jobs
Message-ID: <4E171608.6020609@gmail.com>

Hello,

I am going through the process of learning Twisted.

I recently have been hired at a company that allows me to work on my own 
projects one day/wk.

Looking at the Project Jobs list for twisted I notice that there is a 
request for someone to handle
Ticket Spam. If you are still looking for someone to fulfill that spot I 
am more than happy to volunteer.

If you are open to that please let me know what the next step should be.

Best

sparky



From exarkun at twistedmatrix.com  Fri Jul  8 10:20:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Jul 2011 16:20:06 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310055956.17239.116.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
Message-ID: <20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>

On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>Hi,
>
>
>LP BZR Mirror status
>--------------------
>
>Martin Pool enabled trunk import directly from SVN repo and the branch
>is available here:
>https://code.launchpad.net/~vcs-imports/twisted/trunk
>
>The mirror is refreshed about every 5 to 6 hours.
>Only trunk is available.

Cool.
>
>Own BZR Mirror
>--------------
>
>I have hacked a quick and dirty script for pulling / creating / 
>deleting
>all Twisted svn branches.
>
>The code is here: http://pastebin.ubuntu.com/639582/
>
>Synchronizing all branches takes about 41 minutes on an Intel Xeon 2.8G
>CPU. It does not uses to much memory since each branch is pulled using 
>a
>different bzr pull process.
>
>Pulling a single branch takes about 15 seconds, so maybe we the SVN 
>repo
>can have some commit hooks to execute 'bzr pull' in the right branch.

I think getting the right hook set up to update just the right branch is 
what we want to focus on.  Presently svn and bzr are hosted on the same 
machine, which perhaps we can continue since this should bring the 
overhead of mirroring down.  There is even a little code in lp:twisted- 
trac-integration for determining which branch a changeset is on (at 
least for the branch creation changeset) which might help.
>
>Please let me know what do you think should be the next action for
>resolving the bzr mirror issues?

Do you think you can put together something to run from an svn post- 
commit hook to update just the single corresponding bzr branch?

Meanwhile I can try your synchronization code to see if it has better 
results than the current bzr svn-import based approach.

Thanks,
Jean-Paul



From ziga.seilnacht at gmail.com  Sat Jul  9 04:28:00 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Sat, 09 Jul 2011 12:28:00 +0200
Subject: [Twisted-Python] server issues; SVN in read-only, but Trac isn't
In-Reply-To: <20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>
References: <40D97AD8-D0CC-4377-B2F7-A7335A726190@twistedmatrix.com>	<350E668C-EA3C-4161-B6B7-FE1C86559411@fuhm.net>	<4E137947.9030806@gmail.com>
	<20110706195826.3761.2075336151.divmod.xquotient.48@localhost.localdomain>
Message-ID: <4E182D30.6090107@gmail.com>

On 6.7.2011 21:58, exarkun at twistedmatrix.com wrote:
>
> Thanks for pointing this out.  I think James has fixed the issue.
>
> Jean-Paul
>

Great, thanks!

Regards,
Ziga



From adi at roiban.ro  Sat Jul  9 04:46:34 2011
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 09 Jul 2011 13:46:34 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
Message-ID: <1310208394.1987.214.camel@pp>

On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
[snip]
> >Pulling a single branch takes about 15 seconds, so maybe we the SVN 
> >repo
> >can have some commit hooks to execute 'bzr pull' in the right branch.
> 
> I think getting the right hook set up to update just the right branch is 
> what we want to focus on.  Presently svn and bzr are hosted on the same 
> machine, which perhaps we can continue since this should bring the 
> overhead of mirroring down.  There is even a little code in lp:twisted- 
> trac-integration for determining which branch a changeset is on (at 
> least for the branch creation changeset) which might help.

> >Please let me know what do you think should be the next action for
> >resolving the bzr mirror issues?
> 
> Do you think you can put together something to run from an svn post- 
> commit hook to update just the single corresponding bzr branch?

Yes. I will write the svn hooks for creating, updating and deleting the
mirrored branches. 

> Meanwhile I can try your synchronization code to see if it has better 
> results than the current bzr svn-import based approach.

You can also try to run a 5 minutes cron job for pulling just the trunk,
and another job for pulling each branch.

--
Adi




From exarkun at twistedmatrix.com  Sat Jul  9 22:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Jul 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1310270724.66.1700097717@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110710/1f83adfc/attachment-0001.html>

From jml at mumak.net  Sun Jul 10 10:27:11 2011
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 10 Jul 2011 17:27:11 +0100
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
	Volunteer)
In-Reply-To: <1309981912.17239.33.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp>
Message-ID: <CAHZ8tnapXTaGsqZTDeEOHSydeQoJAr3cRqXz7LELYVmx-rhZyg@mail.gmail.com>

On Wed, Jul 6, 2011 at 8:51 PM, Adi Roiban <adi at roiban.ro> wrote:
> Hi,
>
> To move things forwards, I would like to discuss the next actions for
> BZR mirror. After the BZR mirror is done, I will look at git.
>
>
> Launchpad BZR mirror
> ----------------
>
> AFAIK Launchpad can only import a single svn branch, so importing all
> twisted in-development branches in Launchpad is not possible.
>
> Right now, Twisted trunk is mirrored into Launchpad using the bzr mirror
> and the last change is : 15922. By exarkun on 2011-06-14.
>
> Maybe Launchpad can be configured to mirror the SVN trunk branch,
> instead of the BZR branch.
> In this way Launchpad mirror will not depend on Twisted BZR mirror
> errors.
>
> Jonathan Lange, do you think this is a good idea?
>

I'm pretty sure that you can mirror arbitrary branches from a
Subversion repository.

One thing you could do is have a post_commit hook in the Twisted SVN
repo that creates import branches on Launchpad when needed and tells
Launchpad when branches have changed.

Oh, and yes I think it's a good idea.

Thanks for volunteering!

jml



From exarkun at twistedmatrix.com  Mon Jul 11 05:23:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 11 Jul 2011 11:23:25 -0000
Subject: [Twisted-Python] Project Jobs
In-Reply-To: <4E171608.6020609@gmail.com>
References: <4E171608.6020609@gmail.com>
Message-ID: <20110711112325.3761.2097913221.divmod.xquotient.756@localhost.localdomain>

On 8 Jul, 02:36 pm, sparkytwobillion at gmail.com wrote:
>Hello,
>
>I am going through the process of learning Twisted.
>
>I recently have been hired at a company that allows me to work on my 
>own
>projects one day/wk.
>
>Looking at the Project Jobs list for twisted I notice that there is a
>request for someone to handle
>Ticket Spam. If you are still looking for someone to fulfill that spot 
>I
>am more than happy to volunteer.
>
>If you are open to that please let me know what the next step should 
>be.

Hi sparky,

Yes, this job is still untaken.  Thanks very much for volunteering! :)

Let me know what your trac username is and I'll set you up with the 
appropriate permissions.  Then you can also edit the project jobs page 
and fill in your info for the spam handling job.

Thanks again,
Jean-Paul



From exarkun at twistedmatrix.com  Mon Jul 11 05:30:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 11 Jul 2011 11:30:07 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310208394.1987.214.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
Message-ID: <20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>

On 9 Jul, 10:46 am, adi at roiban.ro wrote:
>On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
>>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>[snip]
>> >Pulling a single branch takes about 15 seconds, so maybe we the SVN
>> >repo
>> >can have some commit hooks to execute 'bzr pull' in the right branch.
>>
>>I think getting the right hook set up to update just the right branch 
>>is
>>what we want to focus on.  Presently svn and bzr are hosted on the 
>>same
>>machine, which perhaps we can continue since this should bring the
>>overhead of mirroring down.  There is even a little code in 
>>lp:twisted-
>>trac-integration for determining which branch a changeset is on (at
>>least for the branch creation changeset) which might help.
>
>> >Please let me know what do you think should be the next action for
>> >resolving the bzr mirror issues?
>>
>>Do you think you can put together something to run from an svn post-
>>commit hook to update just the single corresponding bzr branch?
>
>Yes. I will write the svn hooks for creating, updating and deleting the
>mirrored branches.
>>Meanwhile I can try your synchronization code to see if it has better
>>results than the current bzr svn-import based approach.
>
>You can also try to run a 5 minutes cron job for pulling just the 
>trunk,
>and another job for pulling each branch.

I ran this (all-branches version) a few times over the weekend.  The 
first time, when there was lots of catching up to do, took about 3.5 
hours.  After that, it was about 30 minutes per run.  This does seem 
fast enough to do nightly, so I'll set that up until we have the push- 
based version.

Thanks,
Jean-Paul



From ilja.livenson at gmail.com  Tue Jul 12 01:38:08 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Tue, 12 Jul 2011 10:38:08 +0300
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
Message-ID: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>

Hi,

basically, $subj. I really like the DeferredStore concept introduced
in storm/twisted-integration, but it seems that that branch is lagging
behind on merging (for 2 years now). Any inside info, perhaps?

thanks,
Ilja



From jkakar at kakar.ca  Tue Jul 12 05:02:43 2011
From: jkakar at kakar.ca (Jamu Kakar)
Date: Tue, 12 Jul 2011 13:02:43 +0200
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
In-Reply-To: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
References: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
Message-ID: <CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>

Hi Ilja,

On Tue, Jul 12, 2011 at 9:38 AM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
> basically, $subj. I really like the DeferredStore concept introduced
> in storm/twisted-integration, but it seems that that branch is lagging
> behind on merging (for 2 years now). Any inside info, perhaps?

The branch is not being actively maintained, though I do believe some
folks are using it in production systems.  The way we've been
recommending people use Storm with Twisted is by running transactions
in threads with deferToThread.  Free recently landed some code in
storm.twisted.transact that makes pursuing this model, with a thread
pool, fairly straightforward.

Thanks,
J.



From adi at roiban.ro  Tue Jul 12 06:11:56 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 12 Jul 2011 15:11:56 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
Message-ID: <1310472716.1993.21.camel@pp>

On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
> On 9 Jul, 10:46 am, adi at roiban.ro wrote:
> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
> >[snip]
[snip]

> I ran this (all-branches version) a few times over the weekend.  The 
> first time, when there was lots of catching up to do, took about 3.5 
> hours.  After that, it was about 30 minutes per run.  This does seem 
> fast enough to do nightly, so I'll set that up until we have the push- 
> based version.

I have created a script that can be used together with a svn post-commit
hook to keep an bzr mirror in sync.


The sample usage in a post-commit hook can be found at the following
url.
The standard output is redirected into a file, and error messages will
be displayed in the client console.
 
http://paste.ubuntu.com/642581/

The actual script is here:
http://paste.ubuntu.com/642587/

Let me know if the script is not documented enough and more
documentation is required.

Cheers,

--
Adi




From bino at indoakses-online.com  Tue Jul 12 19:08:04 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Wed, 13 Jul 2011 08:08:04 +0700
Subject: [Twisted-Python] question : Twistar
Message-ID: <4E1CEFF4.90506@indoakses-online.com>

Dear All ..

Base on a need, I need to build a JSON-RPC to Postgres "bridge".
For now, I try to take the ORM way, so I'm looking for ORM "engine" that 
work well with Twisted and support for Postgres as it's backend.

First try I look into SqlAlchemy ... but there is a lot of talk that 
SqlAlchemy did not work well with Twisted.
I found that Twistar have a support for postgres backend.

All sample script I found only look like this :
for MySQL driver
---Start----
from twisted.enterprise import adbapi
from twistar.registry import Registry

Registry.DBPOOL = adbapi.ConnectionPool('MySQLdb', user="twistar", 
passwd="apass", db="twistar")
---Stop----

and I thing for postgres it will be like :
---Start----
from twisted.enterprise import adbapi
from twistar.registry import Registry

Registry.DBPOOL = adbapi.ConnectionPool('psycopg2', user="twistar", 
passwd="apass", db="twistar")
---Stop----

Is that right ?
If So ... where to put the db server ip address (i.e : my Postgres 
server is at 192.168.10.232) ?

Sincerely
-bino-



From _ at lvh.cc  Wed Jul 13 06:03:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 13 Jul 2011 14:03:03 +0200
Subject: [Twisted-Python] Async-pep (again)
Message-ID: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>

Hey!


So, some of you might remember my async-pep post a while ago. Some people
correctly complained there was no code or text. There's some code and quite
a bit of text now. In fact, it even has a PEP number (3153)! So I'm
soliciting feedback again.

There's an issue tracker that ideally describes what needs to be done:
https://github.com/lvh/async-pep/issues

Specifically, #21: https://github.com/lvh/async-pep/issues/21 (a basic
implementation of an async api compatible protocol) and #22:
https://github.com/lvh/async-pep/issues/22 (a trivial implementation of a
backend using just the stdlib). If anyone has any thoughts on those, please
chime in.

cheers and thanks in advance
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110713/348b2c4e/attachment-0001.html>

From screwtape at froup.com  Thu Jul 14 00:48:37 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 16:48:37 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
Message-ID: <20110714064837.GP21836@boombah.thristian.org>

On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
> So, some of you might remember my async-pep post a while ago. Some people
> correctly complained there was no code or text. There's some code and quite
> a bit of text now. In fact, it even has a PEP number (3153)! So I'm
> soliciting feedback again.

The idea of Protocols implementing Transports is vaguely gestured at as
a Useful Thing, but not much detail is given. I think it would be useful
for the final PEP to address that topic more rigorously - partially
because it's good to have a firm basis on which to model SOCKS and SSH
libraries, but mostly because figuring out how SSL should interact with
TCP is going to give people headaches. Twisted, so far as I can see,
just sort of punts and says "Yeah, SSL is just another transport like
TCP", but then you have to make the SSL transport support all the same
options that the TCP transport supports (socket options? IPv6?), but
then what if you want to run SSL over a serial port or a SOCKS
connection... AAAAAAAAAAAAA!

In practice, it might be simpler because "SSL" means "whatever subset of
TCP functionality we can coax OpenSSL into providing" rather than
a fully stackable protocol-providing-a-transport.

The thing with Consumers and Producers seems... very abstract. If I'm
sitting down to retrieve email via POP3 (to pick a random protocol),
'transports' and 'protocols' are tools that nestle very comfortably in
my mental model of the task in front of me; "consumers" and "producers"
are not. Are they concepts that should be handled by transport
implementors? Protocol implementors? Protocol users? Should they be
mapped onto XON/XOFF or RTS/CTS by serial transports?

At least in Twisted, transports and protocols do not exist in a vacuum;
they have to be hooked up via the reactor. Will this PEP define
a (skeletal) API to be implemented by potential reactors, or is that
going to left entirely unspecified, like WSGI?



From _ at lvh.cc  Thu Jul 14 02:05:00 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 14 Jul 2011 10:05:00 +0200
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714064837.GP21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
Message-ID: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>

On Thu, Jul 14, 2011 at 8:48 AM, Tim Allen <screwtape at froup.com> wrote:

> On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
> > So, some of you might remember my async-pep post a while ago. Some people
> > correctly complained there was no code or text. There's some code and
> quite
> > a bit of text now. In fact, it even has a PEP number (3153)! So I'm
> > soliciting feedback again.
>
> The idea of Protocols implementing Transports is vaguely gestured at as
> a Useful Thing, but not much detail is given. I think it would be useful
> for the final PEP to address that topic more rigorously - partially
> because it's good to have a firm basis on which to model SOCKS and SSH
> libraries, but mostly because figuring out how SSL should interact with
> TCP is going to give people headaches. Twisted, so far as I can see,
> just sort of punts and says "Yeah, SSL is just another transport like
> TCP", but then you have to make the SSL transport support all the same
> options that the TCP transport supports (socket options? IPv6?), but
> then what if you want to run SSL over a serial port or a SOCKS
> connection... AAAAAAAAAAAAA!
>
> In practice, it might be simpler because "SSL" means "whatever subset of
> TCP functionality we can coax OpenSSL into providing" rather than
> a fully stackable protocol-providing-a-transport.
>


Cool. Can I shove those 2 paragraphs into a ticket or will the copyright
monster haunt me?


>
> The thing with Consumers and Producers seems... very abstract. If I'm
> sitting down to retrieve email via POP3 (to pick a random protocol),
> 'transports' and 'protocols' are tools that nestle very comfortably in
> my mental model of the task in front of me; "consumers" and "producers"
> are not. Are they concepts that should be handled by transport
> implementors? Protocol implementors? Protocol users? Should they be
> mapped onto XON/XOFF or RTS/CTS by serial transports?
>

Yes, Consumers and Producers are about flow control, and most Transports
probably are producers.


>
> At least in Twisted, transports and protocols do not exist in a vacuum;
> they have to be hooked up via the reactor. Will this PEP define
> a (skeletal) API to be implemented by potential reactors, or is that
> going to left entirely unspecified, like WSGI?
>

Entirely unspecified, because different implementations have to do pretty
different things.


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110714/6216150e/attachment.html>

From screwtape at froup.com  Thu Jul 14 03:05:38 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 19:05:38 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
Message-ID: <20110714090538.GQ21836@boombah.thristian.org>

On Thu, Jul 14, 2011 at 10:05:00AM +0200, Laurens Van Houtven wrote:
> On Thu, Jul 14, 2011 at 8:48 AM, Tim Allen <screwtape at froup.com> wrote:
> > The idea of Protocols implementing Transports is vaguely gestured at as
> > a Useful Thing, but not much detail is given. I think it would be useful
> > for the final PEP to address that topic more rigorously - partially
> > because it's good to have a firm basis on which to model SOCKS and SSH
> > libraries, but mostly because figuring out how SSL should interact with
> > TCP is going to give people headaches. Twisted, so far as I can see,
> > just sort of punts and says "Yeah, SSL is just another transport like
> > TCP", but then you have to make the SSL transport support all the same
> > options that the TCP transport supports (socket options? IPv6?), but
> > then what if you want to run SSL over a serial port or a SOCKS
> > connection... AAAAAAAAAAAAA!
> >
> > In practice, it might be simpler because "SSL" means "whatever subset of
> > TCP functionality we can coax OpenSSL into providing" rather than
> > a fully stackable protocol-providing-a-transport.
> 
> Cool. Can I shove those 2 paragraphs into a ticket or will the copyright
> monster haunt me?

Go right ahead! I guess most of these things should be tickets, but
I don't have a GitHub account and I'm not particularly looking to
register on more websites at the moment.

> > The thing with Consumers and Producers seems... very abstract. If I'm
> > sitting down to retrieve email via POP3 (to pick a random protocol),
> > 'transports' and 'protocols' are tools that nestle very comfortably in
> > my mental model of the task in front of me; "consumers" and "producers"
> > are not. Are they concepts that should be handled by transport
> > implementors? Protocol implementors? Protocol users? Should they be
> > mapped onto XON/XOFF or RTS/CTS by serial transports?
> 
> Yes, Consumers and Producers are about flow control, and most Transports
> probably are producers.

Having looked at the issues list after sending that message, I see this
is basically issue 13, "Why are producers/consumers important, how are
they different from protocols/transports?"

If your PEP includes producers and consumers (and I note that the
current example code doesn't, it just has a "FlowControl" class), you'll
want to have an example Protocol that uses producers and consumers in
some useful, illustrative fashion.

> > At least in Twisted, transports and protocols do not exist in a vacuum;
> > they have to be hooked up via the reactor. Will this PEP define
> > a (skeletal) API to be implemented by potential reactors, or is that
> > going to left entirely unspecified, like WSGI?
> 
> Entirely unspecified, because different implementations have to do pretty
> different things.

I guess the selection of available Transports is up to the hosting
event-loop, too - it might be worth noting that in the section on
"Transports". Unless, of course, the Transport in question is
implemented by another Protocol, in which case I guess it's anybody's
guess how you might hook your Protocol up.

I almost think that, for pedagogy's sake, there should be an additional
Encapsulator or Framer abstract class, that inherits from Protocol, but
adds a .connectProtocol() method that takes another Protocol instance,
and hooks itself up as that Protocol's transport. Sure, anyone who
understands what's going on should be able to figure out what's going
on, but I think an extra class would make it blindingly obvious, and
I like APIs that save me from having to think too hard.

While there's still people listening to my half-formed opinions:

- Issue 7 seems to have settled on removing support for half_closing
  transports. I seem to recall somebody mentioning support for
  half-close as being one of those weird-corner cases that nobody thinks
  they need until they're trying to figure out why their SSH sessions
  always die with "broken pipe" errors. While it probably would
  complicate the documentation to include it, I'd hope that many
  frameworks that implement this PEP would want to include support for
  half-closing transports, and it'd be nice if there was a standard API
  for it instead of everybody adding their own methods with their own
  semantics. Perhaps there could be an HalfClosableTransport(Transport)
  ABC, that's optional in the same way that, say, DB-API's
  "connection.rollback()" method is defined but optional.

- For issue 6 ("Scatter/gather IO API doesn't make sense yet"), I can't
  see much of a use for readv/scatter, because I imagine the benefits
  come from having a bunch of pre-allocated buffers lying around, and
  even if the Python VM had such buffers, they probably wouldn't be
  visible or useful to running Python code. On the other hand, I can
  easily imagine Python code having a bunch of independently-generated
  buffers that need to be written in a particular order (framing data
  and framed data, for example), and being able to avoid ''.join() could
  be a big win. Again, perhaps this could be an optional extension
  provided by hosting frameworks that want to implement it - although it
  should be pretty easy to emulate on top of the regular .write()
  method.

- You might also want to create an optional Transport method to wrap the
  sendfile(2) and/or splice(2) functions. Without OS support, it'd just
  be a convenient way to tell the host framework to do the grunt-work of
  shunting bytes around; with OS support it should be a good deal more
  efficient than doing the same operations manually.
  
Tim.



From screwtape at froup.com  Thu Jul 14 04:26:50 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 14 Jul 2011 20:26:50 +1000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714090538.GQ21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
	<20110714090538.GQ21836@boombah.thristian.org>
Message-ID: <20110714102650.GR21836@boombah.thristian.org>

On Thu, Jul 14, 2011 at 07:05:38PM +1000, Tim Allen wrote:
> - You might also want to create an optional Transport method to wrap the
>   sendfile(2) and/or splice(2) functions.

I suggested this not knowing whether Python would ever grow support for
sendfile(), since it seemed like the sort of thing that
performance-oriented async-io frameworks might want to set up with
ctypes or similar. However, I've just discovered that os.sendfile() will
be in Python 3.3:

    http://docs.python.org/dev/library/os.html#os.sendfile

Since your PEP has a 3000-series number anyway, os.sendfile() might
potentially be quite useful.



From exarkun at twistedmatrix.com  Thu Jul 14 05:04:43 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 14 Jul 2011 11:04:43 -0000
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714102650.GR21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
	<20110714090538.GQ21836@boombah.thristian.org>
	<20110714102650.GR21836@boombah.thristian.org>
Message-ID: <20110714110443.3761.1470202303.divmod.xquotient.903@localhost.localdomain>

On 10:26 am, screwtape at froup.com wrote:
>On Thu, Jul 14, 2011 at 07:05:38PM +1000, Tim Allen wrote:
>>- You might also want to create an optional Transport method to wrap 
>>the
>>   sendfile(2) and/or splice(2) functions.
>
>I suggested this not knowing whether Python would ever grow support for
>sendfile(), since it seemed like the sort of thing that
>performance-oriented async-io frameworks might want to set up with
>ctypes or similar. However, I've just discovered that os.sendfile() 
>will
>be in Python 3.3:
>
>    http://docs.python.org/dev/library/os.html#os.sendfile
>
>Since your PEP has a 3000-series number anyway, os.sendfile() might
>potentially be quite useful.

Since this non-trivially complicates the implementation of a transport, 
I suggest that it be an optional extension proposed separately.

Jean-Paul



From free at 64studio.com  Thu Jul 14 06:33:49 2011
From: free at 64studio.com (Free Ekanayaka)
Date: Thu, 14 Jul 2011 14:33:49 +0200
Subject: [Twisted-Python] what is the status of storm integration with
	twisted?
In-Reply-To: <CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>
	(Jamu Kakar's message of "Tue, 12 Jul 2011 13:02:43 +0200")
References: <CAF8QyE_=40D=01SorrJbxGKjYHCCH1pHL6SxspszOvGfRHiP4Q@mail.gmail.com>
	<CALWnh8rLBcBVsqGyX3PehPgqvTTKC6XNgjR-V103RYMO8RnQsA@mail.gmail.com>
Message-ID: <87ei1tdosy.fsf@64studio.com>

Hi Ilja,

|--==> On Tue, 12 Jul 2011 13:02:43 +0200, Jamu Kakar <jkakar at kakar.ca> said:

  JK> Hi Ilja,
  JK> On Tue, Jul 12, 2011 at 9:38 AM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
  >>basically, $subj. I really like the DeferredStore concept introduced
  >>in storm/twisted-integration, but it seems that that branch is lagging
  >>behind on merging (for 2 years now). Any inside info, perhaps?

  JK> The branch is not being actively maintained, though I do believe some
  JK> folks are using it in production systems.  The way we've been
  JK> recommending people use Storm with Twisted is by running transactions
  JK> in threads with deferToThread.  Free recently landed some code in
  JK> storm.twisted.transact that makes pursuing this model, with a thread
  JK> pool, fairly straightforward.

What Jamu said. Considering that the branch you're mentioning does use
threads as well, the storm.twisted.transact is probably easier and
virtually identical as far as performance goes.

Cheers,

Free



From alberto.donato at gmail.com  Thu Jul 14 07:54:22 2011
From: alberto.donato at gmail.com (Alberto Donato)
Date: Thu, 14 Jul 2011 15:54:22 +0200
Subject: [Twisted-Python] FilesystemLock/DeferredFilesystemLock with NFS and
	multiple processes
Message-ID: <CAPCHgyKZOGTNBmdNEZ+RitF+xJtV424otRoNFVbOFkvX4Pvn7Q@mail.gmail.com>

Hi,
  I have a scenario in which I need to use a lock file to prevent
multiple processes to run on the same directory concurrently.
The processes could run on the same machine or on different machine,
with a NFS filesystem.

If I understand correctly FilesystemLock works fine with different
processes on the same machine, but since it uses a symlink to PIDs to
identify the lock owner, it is not guaranteed to be safe on NFS.
Is this the only issue with this scenario? In this case I guess it
could be fixed by adding a machine identifier (hostname or some hash)
to the name.
Also, is there any possible concurrency problem with NFS atomicity?

Thanks,

Alberto



From dynamicgl at gmail.com  Thu Jul 14 12:05:01 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 15 Jul 2011 02:05:01 +0800
Subject: [Twisted-Python] how to implement a perspective broker client with
	reconnection
Message-ID: <CABkOF6SkYosFPEMKd1Y-wqgZ-ivZHnxvy-fhLV-oAgoCve7Sqg@mail.gmail.com>

Hi All

    I plan to use pb to communicate between my processes. The question is
how i am able to implement a pb client with some degrees of reliability.
What i want is when getRootObject() fail sometimes, it can retry several
times automatically. It seems docs doesn't mention this problem and I didn't
find any hint from source code.


Thanks

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110715/e7cdf9c7/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Jul 14 17:28:03 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 14 Jul 2011 19:28:03 -0400
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <20110714064837.GP21836@boombah.thristian.org>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
Message-ID: <D4CAE32E-E1FF-42C0-9C83-22112D5DF535@twistedmatrix.com>


On Jul 14, 2011, at 2:48 AM, Tim Allen wrote:

> On Wed, Jul 13, 2011 at 02:03:03PM +0200, Laurens Van Houtven wrote:
>> So, some of you might remember my async-pep post a while ago. Some people
>> correctly complained there was no code or text. There's some code and quite
>> a bit of text now. In fact, it even has a PEP number (3153)! So I'm
>> soliciting feedback again.
> 
> The idea of Protocols implementing Transports is vaguely gestured at as
> a Useful Thing, but not much detail is given. I think it would be useful
> for the final PEP to address that topic more rigorously - partially
> because it's good to have a firm basis on which to model SOCKS and SSH
> libraries, but mostly because figuring out how SSL should interact with
> TCP is going to give people headaches. Twisted, so far as I can see,
> just sort of punts and says "Yeah, SSL is just another transport like
> TCP", but then you have to make the SSL transport support all the same
> options that the TCP transport supports (socket options? IPv6?), but
> then what if you want to run SSL over a serial port or a SOCKS
> connection... AAAAAAAAAAAAA!

> In practice, it might be simpler because "SSL" means "whatever subset of
> TCP functionality we can coax OpenSSL into providing" rather than
> a fully stackable protocol-providing-a-transport.

Actually, you might be interested in <http://tm.tl/4854>.  This will be in 11.1.  TLS _is_ a protocol-that-is-a-transport now (in trunk).  This was the case in 11.0, too, but only for the IOCP reactor.  We've been smoothing out some interesting quirks that occurred as a result, mostly test-related, but it's looking good for the release; more robust, actually, because it's easier to test the stacked version than to try to trick sockets into returning specific values in C.

> The thing with Consumers and Producers seems... very abstract. If I'm
> sitting down to retrieve email via POP3 (to pick a random protocol),
> 'transports' and 'protocols' are tools that nestle very comfortably in
> my mental model of the task in front of me; "consumers" and "producers"
> are not.

The APIs definitely aren't as nice, and that's where I predict the most discussion in the PEP.

> Are they concepts that should be handled by transport implementors?

Yes, pretty much always.

> Protocol implementors?

Yes, if you need them.

> Protocol users?

It depends.  Ideally you should be able to rely on the protocol providing a reasonable stream-friendly API.  (You probably only care about this if you're writing a proxy.)

> Should they be mapped onto XON/XOFF or RTS/CTS by serial transports?

Either or.  Probably an option to the serial transport.


From glyph at twistedmatrix.com  Thu Jul 14 17:28:54 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 14 Jul 2011 19:28:54 -0400
Subject: [Twisted-Python] Async-pep (again)
In-Reply-To: <CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
References: <CAE_Hg6ZutiUF7RdRMC_d8wj=Y6Xs5bonhoYqr3MtNjpz9gFJ0g@mail.gmail.com>
	<20110714064837.GP21836@boombah.thristian.org>
	<CAE_Hg6ZkuxsrAFn6s6p5ew7GeVUptOr=wW_9QAdZ03p0xmYm2Q@mail.gmail.com>
Message-ID: <89D279EB-7C03-4AE0-957D-BB72856FA626@twistedmatrix.com>


On Jul 14, 2011, at 4:05 AM, Laurens Van Houtven wrote:

> At least in Twisted, transports and protocols do not exist in a vacuum;
> they have to be hooked up via the reactor. Will this PEP define
> a (skeletal) API to be implemented by potential reactors, or is that
> going to left entirely unspecified, like WSGI?
> 
> Entirely unspecified, because different implementations have to do pretty different things.

I thought the idea was to include an asyncore reactor interface?  My assumption was that we'd provide an adapter around the Twisted reactor which would provide some basic functionality, like listenTCP, connectTCP, and callLater.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110714/a20be1f9/attachment.html>

From dynamicgl at gmail.com  Fri Jul 15 10:58:07 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 16 Jul 2011 00:58:07 +0800
Subject: [Twisted-Python] question : Twistar
In-Reply-To: <4E1CEFF4.90506@indoakses-online.com>
References: <4E1CEFF4.90506@indoakses-online.com>
Message-ID: <CABkOF6TB42t4YynSZ-2rYVZ+AvjFtC1nPWCGsT_WGgtE7cEz8Q@mail.gmail.com>

hi...

  you can try to use host to indicate which server you want to connect
with.. like:

adbapi.ConnectionPool('xxx', host='localhost', user='twww',pwd='eee')



On Wed, Jul 13, 2011 at 9:08 AM, bino oetomo <bino at indoakses-online.com>wrote:

> Dear All ..
>
> Base on a need, I need to build a JSON-RPC to Postgres "bridge".
> For now, I try to take the ORM way, so I'm looking for ORM "engine" that
> work well with Twisted and support for Postgres as it's backend.
>
> First try I look into SqlAlchemy ... but there is a lot of talk that
> SqlAlchemy did not work well with Twisted.
> I found that Twistar have a support for postgres backend.
>
> All sample script I found only look like this :
> for MySQL driver
> ---Start----
> from twisted.enterprise import adbapi
> from twistar.registry import Registry
>
> Registry.DBPOOL = adbapi.ConnectionPool('MySQLdb', user="twistar",
> passwd="apass", db="twistar")
> ---Stop----
>
> and I thing for postgres it will be like :
> ---Start----
> from twisted.enterprise import adbapi
> from twistar.registry import Registry
>
> Registry.DBPOOL = adbapi.ConnectionPool('psycopg2', user="twistar",
> passwd="apass", db="twistar")
> ---Stop----
>
> Is that right ?
> If So ... where to put the db server ip address (i.e : my Postgres
> server is at 192.168.10.232) ?
>
> Sincerely
> -bino-
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110716/8520576a/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Jul 16 22:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Jul 2011 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1310875528.24.1130214540@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110717/32b58034/attachment-0001.html>

From happybrowndog at hotmail.com  Tue Jul 19 01:37:24 2011
From: happybrowndog at hotmail.com (hbd666)
Date: Tue, 19 Jul 2011 00:37:24 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
Message-ID: <j03c7k$nl6$1@dough.gmane.org>

I have a simple xmlrpc server written using Twisted.  Every time I get a 
request to it, stdout spits out something like the following:

2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - - 
[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-" 
"xmlrpclib.py/1.0.1 (by www.pythonware.com)"


How do I prevent this from happening?  I also do not want this going to 
a log file either.

Thanks anybody for your help!





From rlotun at gmail.com  Tue Jul 19 03:51:27 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 19 Jul 2011 10:51:27 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
Message-ID: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>

Hi All,

I just wanted to fire a note about our experiences testing Twisted trunk
(after _newtls.py landed) on some servers in our cluster, on PyOpenSSL
0.12.

In our application (a twisted.web REST api endpoint), we make a lot of https
calls to a SimpleDB Amazon AWS endpoint (sdb.amazonaws.com). At some point
after a deployed test on some of our machines, we started getting our
internel DNS requests to the sdb endpoint throttled (resulting in failures
in most of our requests). Since every call to SimpleDB was made to the sdb
endpoint, each call would be resolved, bombarding amazon's dns servers with
requests. After diving in, I learned all Twisted connect* calls go through
socket.gethostbyname, which apparently does not do any DNS caching (much to
my surprise) unless something like nscd or a local caching nameserver is
running (we ended up using BIND).

Now, since we never ran a local caching nameserver before I wondered what
changed. Could it have been that using the _newtls code (with PyOpenSSL
0.12) removed some element of DNS caching that OpenSSL was performing behind
the scene? Is this possible? If so, then I just wanted to make sure everyone
was aware that if you make a lot of DNS calls in a Twisted server running
this code, you too could experience problems if you're not running a local
caching nameserver.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110719/c30a0c52/attachment-0001.html>

From p.mayers at imperial.ac.uk  Tue Jul 19 05:16:21 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 19 Jul 2011 12:16:21 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
Message-ID: <4E256785.7090500@imperial.ac.uk>

On 07/19/2011 10:51 AM, Reza Lotun wrote:

> would be resolved, bombarding amazon's dns servers with requests. After
> diving in, I learned all Twisted connect* calls go through
> socket.gethostbyname, which apparently does not do any DNS caching (much
> to my surprise) unless something like nscd or a local caching nameserver
> is running (we ended up using BIND).

socket.gethostbyname is just a wrapper around the libc implementation, 
and you're correct that it does no caching unless the NSS layer does, or 
the DNS query you're talking to does.

>
> Now, since we never ran a local caching nameserver before I wondered

How did anything work then if you had no local DNS?

> what changed. Could it have been that using the _newtls code (with
> PyOpenSSL 0.12) removed some element of DNS caching that OpenSSL was
> performing behind the scene? Is this possible? If so, then I just wanted

A quick 10-line connectSSL script on my box running 10.1 does a DNS 
lookup per-connection. Are you sure this behaviour has changed?

> to make sure everyone was aware that if you make a lot of DNS calls in a
> Twisted server running this code, you too could experience problems if
> you're not running a local caching nameserver.

Well, TBH if you're not running a local caching nameserver, I am failing 
to see how anything works!



From exarkun at twistedmatrix.com  Tue Jul 19 05:37:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 19 Jul 2011 11:37:28 -0000
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j03c7k$nl6$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
Message-ID: <20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>

On 07:37 am, happybrowndog at hotmail.com wrote:
>I have a simple xmlrpc server written using Twisted.  Every time I get 
>a
>request to it, stdout spits out something like the following:
>
>2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>"xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>
>
>How do I prevent this from happening?  I also do not want this going to
>a log file either.
>
>Thanks anybody for your help!

If not for the logfile rotation that twisted.web.server.Site wants to 
do, you could pass os.devnull as a logPath to Site's initializer. 
However, log rotation will like causes this to do something bad.

There's a private method that Site overrides (from HTTPFactory) that 
controls part of this behavior.  It might be useful to have a public API 
for that instead.

Would you like to file an enhancement ticket in the issue tracker 
describing the use case?

Jean-Paul



From rlotun at gmail.com  Tue Jul 19 06:36:39 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 19 Jul 2011 13:36:39 +0100
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <4E256785.7090500@imperial.ac.uk>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
	<4E256785.7090500@imperial.ac.uk>
Message-ID: <CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>

On Tue, Jul 19, 2011 at 12:16 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Well, TBH if you're not running a local caching nameserver, I am failing
> to see how anything works!
>

Hmm, it turns out I may have been a bit too hasty in blaming the newtls code
perhaps. We're running tests on resolver calls on the old setup vs. the new
one, and the behaviour is the same on on our pre-trunk (standard) config. We
may have just hit some threshold where it has suddenly started to matter, I
suppose.

Anyway, I suppose the real lesson is the non-caching of gethostbyname calls.
Not being a DNS guru, I had no idea calls weren't cached locally. Let that
be a lesson, I guess.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110719/e8593d14/attachment.html>

From ddwiggins at advpubtech.com  Tue Jul 19 11:18:02 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 19 Jul 2011 10:18:02 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>
References: <j03c7k$nl6$1@dough.gmane.org>
	<20110719113728.3761.335449180.divmod.xquotient.911@localhost.localdomain>
Message-ID: <j04e8a$nts$1@dough.gmane.org>

On 7/19/2011 4:37 AM, exarkun at twistedmatrix.com wrote:
> If not for the logfile rotation that twisted.web.server.Site wants to 
> do, you could pass os.devnull as a logPath to Site's initializer.
> However, log rotation will like causes this to do something bad.
>
> There's a private method that Site overrides (from HTTPFactory) that controls part of this behavior.  It might be useful to have a public API for that instead.
>
> Would you like to file an enhancement ticket in the issue tracker describing the use case?
>
> Jean-Paul

Yes, I'm interested in this as well.  Somewhat different from the OP, 
I'd like to have a way to turn this logging on and off, and if on, a way 
to specify the content of the message (in particular, the method and 
arguments).

I've submitted Ticket #5200.

-- 

Don Dwiggins
Advanced Publishing Technology





From glyph at twistedmatrix.com  Tue Jul 19 11:23:41 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 19 Jul 2011 13:23:41 -0400
Subject: [Twisted-Python] New TLS Code *Could* Cause Problems
In-Reply-To: <CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>
References: <CAFJezo0EvSn6+soA_M8mYVixmEt6CrermHqsHDeX=ddDvUVNgg@mail.gmail.com>
	<4E256785.7090500@imperial.ac.uk>
	<CAFJezo2pnpd8vyo3apt2jG6+zBpM_n7Q2T9hEGH86bj1PZ_=tA@mail.gmail.com>
Message-ID: <4D572508-9AA4-404F-9388-0719E768C043@twistedmatrix.com>


On Jul 19, 2011, at 8:36 AM, Reza Lotun wrote:

> Anyway, I suppose the real lesson is the non-caching of gethostbyname calls. Not being a DNS guru, I had no idea calls weren't cached locally. Let that be a lesson, I guess.

You were probably confused by the fact that glibc caches /etc/resolv.conf in each process and doesn't always reload it when it should.  Depending on what patches your platform has decided to include in its libc, you may or may not have to call res_init() to get an up-to-date resolv.conf.  It doesn't ever cache the results of name lookups themselves though, that would lead to all kinds of mayhem.

False alarm or not, thanks for testing trunk versions of Twisted against your application. It's great to get these kinds of issues investigated _before_ a release :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110719/720ded68/attachment-0001.html>

From spongelavapaul at googlemail.com  Tue Jul 19 12:11:52 2011
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Tue, 19 Jul 2011 19:11:52 +0100
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j03c7k$nl6$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
Message-ID: <B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>

As a quick fix, 

class QuietSite(server.Site):
    """Like a Site but quieter"""
    def log(self, request):
        pass

Then use QuietSite instead of server.Site

p.
On 19 Jul 2011, at 08:37, hbd666 wrote:

> I have a simple xmlrpc server written using Twisted.  Every time I get a 
> request to it, stdout spits out something like the following:
> 
> 2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - - 
> [19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-" 
> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
> 
> 
> How do I prevent this from happening?  I also do not want this going to 
> a log file either.
> 
> Thanks anybody for your help!
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From happybrowndog at hotmail.com  Tue Jul 19 12:57:41 2011
From: happybrowndog at hotmail.com (hbd666)
Date: Tue, 19 Jul 2011 11:57:41 -0700
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
References: <j03c7k$nl6$1@dough.gmane.org>
	<B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
Message-ID: <j04k35$uoa$1@dough.gmane.org>

On 7/19/2011 11:11 AM, Paul Thomas wrote:
> As a quick fix,
>
> class QuietSite(server.Site):
>      """Like a Site but quieter"""
>      def log(self, request):
>          pass
>
> Then use QuietSite instead of server.Site
>
> p.
> On 19 Jul 2011, at 08:37, hbd666 wrote:
>
>> I have a simple xmlrpc server written using Twisted.  Every time I get a
>> request to it, stdout spits out something like the following:
>>
>> 2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>> [19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>>
>>
>> How do I prevent this from happening?  I also do not want this going to
>> a log file either.
>>
>> Thanks anybody for your help!
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Thanks, that worked for my application.
Though I still do see a need to modify the API as suggested earlier, 
because it would be more specific to the XMLRPC, and just in case there 
is more than one protocol for a server site for an application - 
wouldn't want to kill logging for all protocols.




From exarkun at twistedmatrix.com  Tue Jul 19 19:39:04 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 20 Jul 2011 01:39:04 -0000
Subject: [Twisted-Python] XMLRPC, how to prevent stdout on post and get?
In-Reply-To: <j04k35$uoa$1@dough.gmane.org>
References: <j03c7k$nl6$1@dough.gmane.org>
	<B2C291A4-DE6B-4840-9DF3-3A6C73EA60B4@googlemail.com>
	<j04k35$uoa$1@dough.gmane.org>
Message-ID: <20110720013904.3761.664732319.divmod.xquotient.922@localhost.localdomain>

On 19 Jul, 06:57 pm, happybrowndog at hotmail.com wrote:
>On 7/19/2011 11:11 AM, Paul Thomas wrote:
>>As a quick fix,
>>
>>class QuietSite(server.Site):
>>      """Like a Site but quieter"""
>>      def log(self, request):
>>          pass
>>
>>Then use QuietSite instead of server.Site
>>
>>p.
>>On 19 Jul 2011, at 08:37, hbd666 wrote:
>>>I have a simple xmlrpc server written using Twisted.  Every time I 
>>>get a
>>>request to it, stdout spits out something like the following:
>>>
>>>2011-07-19 00:33:39-0700 [HTTPChannel,332,127.0.0.1] 127.0.0.1 - -
>>>[19/Jul/2011:07:33:38 +0000] "POST / HTTP/1.0" 200 128 "-"
>>>"xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>>>
>>>
>>>How do I prevent this from happening?  I also do not want this going 
>>>to
>>>a log file either.
>>>
>>>Thanks anybody for your help!
>>>
>>>
>>>
>>>_______________________________________________
>>>Twisted-Python mailing list
>>>Twisted-Python at twistedmatrix.com
>>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>Thanks, that worked for my application.
>Though I still do see a need to modify the API as suggested earlier,
>because it would be more specific to the XMLRPC, and just in case there
>is more than one protocol for a server site for an application -
>wouldn't want to kill logging for all protocols.

Hmmm.  Site is a factory for HTTP.  XML-RPC runs over HTTP.  There isn't 
really a different protocol here.  It sounds more like you want to 
disable logging for certain request URLs, perhaps.  You can do that by 
writing a suitable log method, eg:

    class SiteWithoutXMLRPCLogging(Site):
        def log(self, request):
            if request.uri.startswith('/RPC2') and request.method == 
'POST':
                return
            return Site.log(self, request)


It might be nicer if the response was also available, though 
(particularly since the request isn't logged until the response is 
generated).  Then you could avoid encoding the "/RPC2" string (which 
often isn't actually used) and do something like an isinstance(resource, 
XMLRPC).

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jul 23 22:05:21 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Jul 2011 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1311480321.15.900656631@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110724/cc860761/attachment-0001.html>

From _ at lvh.cc  Sun Jul 24 09:36:00 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 24 Jul 2011 17:36:00 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
Message-ID: <CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>

I've been looking at this again recently and honestly it's beginning to feel
like I'm reimplementing large parts of web2. Does that mean I'm doing it
wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110724/c965e689/attachment.html>

From foom at fuhm.net  Sun Jul 24 12:13:39 2011
From: foom at fuhm.net (James Y Knight)
Date: Sun, 24 Jul 2011 14:13:39 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
Message-ID: <672A3A32-B463-4012-8125-483539AE3444@fuhm.net>

On Jul 24, 2011, at 11:36 AM, Laurens Van Houtven wrote:

> I've been looking at this again recently and honestly it's beginning to feel like I'm reimplementing large parts of web2. Does that mean I'm doing it wrong?

Either that or that web2 was doing it right...

Of course, you don't really need to reimplement it, just copy the existing implementation from before it was removed, and s/web2/web/. :)

J





From glyph at twistedmatrix.com  Sun Jul 24 17:22:04 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 24 Jul 2011 19:22:04 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
	<672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
Message-ID: <5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>


On Jul 24, 2011, at 2:13 PM, James Y Knight wrote:

> On Jul 24, 2011, at 11:36 AM, Laurens Van Houtven wrote:
> 
>> I've been looking at this again recently and honestly it's beginning to feel like I'm reimplementing large parts of web2. Does that mean I'm doing it wrong?
> 
> Either that or that web2 was doing it right...
> 
> Of course, you don't really need to reimplement it, just copy the existing implementation from before it was removed, and s/web2/web/. :)

The main thing that web2 did wrong was introducing a new namespace and thereby confusion, not any particular detail of its implementation.

The web2 resource model was in most ways a nice upgrade from twisted.web.  It even had a halfway decent compatibility layer.  You should feel free to copy its implementation liberally (with the exception of the IStream interface, which has been discussed to death elsewhere).  However, since web2 was half-baked in some regards, you may need to add test coverage, improve docstrings, or handle some corner cases in order to pass review.

But, in terms of implementation details, web2 was in fact "doing it right" for the most part.

-glyph




From itamar at itamarst.org  Sun Jul 24 20:51:08 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 24 Jul 2011 22:51:08 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
Message-ID: <1311562268.1645.14.camel@blake>

I'm going to merge #5063 next time I have a few minutes when I'm more
awake, which will mean my yak stack[1] is empty and I can go back to
working on abortConnection(). As explained in
http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
loseConnection(), except it doesn't wait until buffers are written out,
it closes the connection immediately. The question is, how immediately?

My current implementation, a bit like one of the half-close code paths,
ends up calling connectionLost directly. That means you can have a call
stack that looks like this:

MyProtocol.dataReceived
TCPConnection.abortConnection
...
MyProtocol.connectionLost

This can lead to re-entrancy bugs. I am tempted to suggest a policy of
No Reactor Reentrancy, but that is currently violated by one of the TCP
half-close code paths, and producers if I'm not mistaken.

Some options:

(a) Leave abortConnection() reentrant.
(b) Make abortConnection() non-reentrant, don't change any current APIs.
(c) Make all reactor APIs non-reentrant.

(Since there's a ticket for documenting the reentrancy policy, you will
notice I've added another yak to my stack. I'll finish #78 someday!)

Thoughts?


References:
[1] https://secure.wikimedia.org/wiktionary/en/wiki/yak_shaving




From itamar at itamarst.org  Mon Jul 25 05:57:02 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 25 Jul 2011 07:57:02 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <1311562268.1645.14.camel@blake>
References: <1311562268.1645.14.camel@blake>
Message-ID: <1311595022.1645.16.camel@blake>

On Sun, 2011-07-24 at 22:51 -0400, Itamar Turner-Trauring wrote:

> This can lead to re-entrancy bugs. I am tempted to suggest a policy of
> No Reactor Reentrancy, but that is currently violated by one of the TCP
> half-close code paths, and producers if I'm not mistaken.

Instead of "No Reactor Re-entrancy", I meant "No Protocol Re-entrancy",
i.e. the reactor only ever calls into a protocol once in a given call
stack.




From itamar at itamarst.org  Mon Jul 25 06:27:03 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 25 Jul 2011 08:27:03 -0400
Subject: [Twisted-Python] Do you use producers with SSL or TLS?
Message-ID: <1311596823.1645.18.camel@blake>

If so, I'd appreciate if if you could test your application against
trunk Twisted (make sure you have a recent version of pyOpenSSL). I just
landed some fixes to the new TLS implementation's producer code, and
catching any problems before we release 11.1 would be good.

Thanks!




From _ at lvh.cc  Mon Jul 25 13:43:31 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 25 Jul 2011 21:43:31 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>
	<CAE_Hg6Yuy6RdwVeHMxv1JUEcRsB=SWOYRQLwgrNfH9VD2u+GJA@mail.gmail.com>
	<672A3A32-B463-4012-8125-483539AE3444@fuhm.net>
	<5CD4CEB5-1A9E-4CD1-B0E2-CDD2A2B88322@twistedmatrix.com>
Message-ID: <CAE_Hg6Z-0EbUa6RavAxR1tRb5bRu846vjkYi3SeLaPYrMEfEeQ@mail.gmail.com>

On Mon, Jul 25, 2011 at 1:22 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> The main thing that web2 did wrong was introducing a new namespace and
> thereby confusion, not any particular detail of its implementation.
>

Well, my thing would introduce some namespaces (like "entity")-- just not
one in the toplevel twisted package.


> The web2 resource model was in most ways a nice upgrade from twisted.web.
>  It even had a halfway decent compatibility layer.  You should feel free to
> copy its implementation liberally (with the exception of the IStream
> interface, which has been discussed to death elsewhere).  However, since
> web2 was half-baked in some regards, you may need to add test coverage,
> improve docstrings, or handle some corner cases in order to pass review.
>
>
Of course -- I'd end up doing that anyway because I wouldn't feel confident
I understand the code otherwise.



> But, in terms of implementation details, web2 was in fact "doing it right"
> for the most part.
>

Glad to know it's not just my mangled mind.


>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110725/7d75c13e/attachment-0001.html>

From itamar at itamarst.org  Tue Jul 26 06:39:46 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 26 Jul 2011 08:39:46 -0400
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and other
 users of the global reactor
Message-ID: <1311683986.1645.35.camel@blake>

Deep within the bowels of the new TLS code, cooperate() is used.
Unfortunately, that uses the global reactor... which means it breaks in
tests that create a new reactor instance. Should I just change the new
TLS code to take in a reactor instance and pass it everywhere? Or, as
part of the test framework, have runReactor override the global reactor
instance?

-Itamar




From _ at lvh.cc  Tue Jul 26 06:57:48 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 26 Jul 2011 14:57:48 +0200
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and
 other users of the global reactor
In-Reply-To: <1311683986.1645.35.camel@blake>
References: <1311683986.1645.35.camel@blake>
Message-ID: <CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>

Gut feeling says change the new TLS code to take in a reactor instance and
pass it everywhere.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110726/069264bf/attachment.html>

From glyph at twistedmatrix.com  Wed Jul 27 15:06:20 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:06:20 -0400
Subject: [Twisted-Python] runReactor tests vs. t.i.task.cooperate and
	other users of the global reactor
In-Reply-To: <CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>
References: <1311683986.1645.35.camel@blake>
	<CAE_Hg6aCAHMmSrg86L6D_j_WuDH7zTUwFn8YmKyy6k+wBJaVXQ@mail.gmail.com>
Message-ID: <D6F5E537-E69B-452F-8F8B-BB31C6079991@twistedmatrix.com>


On Jul 26, 2011, at 8:57 AM, Laurens Van Houtven wrote:

> Gut feeling says change the new TLS code to take in a reactor instance and pass it everywhere.

I agree.  Passing parameters explicitly is the way to go.  Especially in the new TLS code, whose primary benefit is the sterner separation of concerns between TLS and reactor socket shenanigans.




From glyph at twistedmatrix.com  Wed Jul 27 15:08:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:08:19 -0400
Subject: [Twisted-Python] Do you use producers with SSL or TLS?
In-Reply-To: <1311596823.1645.18.camel@blake>
References: <1311596823.1645.18.camel@blake>
Message-ID: <2B5CC89D-39DC-44B2-A304-A97A4BE8CB73@twistedmatrix.com>


On Jul 25, 2011, at 8:27 AM, Itamar Turner-Trauring wrote:

> If so, I'd appreciate if if you could test your application against
> trunk Twisted (make sure you have a recent version of pyOpenSSL). I just
> landed some fixes to the new TLS implementation's producer code, and
> catching any problems before we release 11.1 would be good.

Current trunk passes the Calendar Server test suite, which includes some rather torturous actually-doing-TLS-with-the-reactor stuff that has caused many previous iteration of this branch and its friends to break.  This is not quite conclusive, but I'd say it's a good indication :).





From glyph at twistedmatrix.com  Wed Jul 27 15:10:21 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 17:10:21 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <1311562268.1645.14.camel@blake>
References: <1311562268.1645.14.camel@blake>
Message-ID: <AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>


On Jul 24, 2011, at 10:51 PM, Itamar Turner-Trauring wrote:

> I'm going to merge #5063 next time I have a few minutes when I'm more
> awake, which will mean my yak stack[1] is empty and I can go back to
> working on abortConnection(). As explained in
> http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
> loseConnection(), except it doesn't wait until buffers are written out,
> it closes the connection immediately. The question is, how immediately?
> 
> My current implementation, a bit like one of the half-close code paths,
> ends up calling connectionLost directly. That means you can have a call
> stack that looks like this:
> 
> MyProtocol.dataReceived
> TCPConnection.abortConnection
> ...
> MyProtocol.connectionLost
> 
> This can lead to re-entrancy bugs. I am tempted to suggest a policy of
> No Reactor Reentrancy, but that is currently violated by one of the TCP
> half-close code paths, and producers if I'm not mistaken.
> 
> Some options:
> 
> (a) Leave abortConnection() reentrant.
> (b) Make abortConnection() non-reentrant, don't change any current APIs.
> (c) Make all reactor APIs non-reentrant.
> 
> (Since there's a ticket for documenting the reentrancy policy, you will
> notice I've added another yak to my stack. I'll finish #78 someday!)
> 
> Thoughts?

My main thought here is that protocol reentrancy is bad, and nobody really expects it even if they think it should be fine.

However, I do believe it would be best (easier to test, in particular) to immediately call connectionLost within doRead (or doWrite) after dataReceived exits, rather than callLater(0)-ing it or otherwise placing it into a global call queue.

-glyph


From exarkun at twistedmatrix.com  Wed Jul 27 15:41:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 27 Jul 2011 21:41:58 -0000
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
Message-ID: <20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>

On 09:10 pm, glyph at twistedmatrix.com wrote:
>
>On Jul 24, 2011, at 10:51 PM, Itamar Turner-Trauring wrote:
>>I'm going to merge #5063 next time I have a few minutes when I'm more
>>awake, which will mean my yak stack[1] is empty and I can go back to
>>working on abortConnection(). As explained in
>>http://twistedmatrix.com/trac/ticket/78,  abortConnection() is like
>>loseConnection(), except it doesn't wait until buffers are written 
>>out,
>>it closes the connection immediately. The question is, how 
>>immediately?
>>
>>My current implementation, a bit like one of the half-close code 
>>paths,
>>ends up calling connectionLost directly. That means you can have a 
>>call
>>stack that looks like this:
>>
>>MyProtocol.dataReceived
>>TCPConnection.abortConnection
>>...
>>MyProtocol.connectionLost
>>
>>This can lead to re-entrancy bugs. I am tempted to suggest a policy of
>>No Reactor Reentrancy, but that is currently violated by one of the 
>>TCP
>>half-close code paths, and producers if I'm not mistaken.
>>
>>Some options:
>>
>>(a) Leave abortConnection() reentrant.
>>(b) Make abortConnection() non-reentrant, don't change any current 
>>APIs.
>>(c) Make all reactor APIs non-reentrant.
>>
>>(Since there's a ticket for documenting the reentrancy policy, you 
>>will
>>notice I've added another yak to my stack. I'll finish #78 someday!)
>>
>>Thoughts?
>
>My main thought here is that protocol reentrancy is bad, and nobody 
>really expects it even if they think it should be fine.
>
>However, I do believe it would be best (easier to test, in particular) 
>to immediately call connectionLost within doRead (or doWrite) after 
>dataReceived exits, rather than callLater(0)-ing it or otherwise 
>placing it into a global call queue.

Probably not easier to test, nor easier to get right.  A single 
generalized solution to avoid re-entrancy is probably the only way to 
avoid a perpetual sequence of accidental re-entrant calls in obscure 
untested cases in each different reactor implementation.

Perhaps the solution doesn't need to be `reactor.callLater(0, ...)`, but 
I think various implementations will be better if they put tasks into 
some kind of queue, perhaps checked at the end of the iteration instead 
of in the next iteration, rather than special casing each possible re- 
entrant event in each possible event dispatcher.

Jean-Paul



From glyph at twistedmatrix.com  Wed Jul 27 16:10:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 27 Jul 2011 18:10:59 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
	<20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
Message-ID: <835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>


On Jul 27, 2011, at 5:41 PM, exarkun at twistedmatrix.com wrote:

>> My main thought here is that protocol reentrancy is bad, and nobody 
>> really expects it even if they think it should be fine.
>> 
>> However, I do believe it would be best (easier to test, in particular) 
>> to immediately call connectionLost within doRead (or doWrite) after 
>> dataReceived exits, rather than callLater(0)-ing it or otherwise 
>> placing it into a global call queue.
> 
> Probably not easier to test, nor easier to get right.  A single 
> generalized solution to avoid re-entrancy is probably the only way to 
> avoid a perpetual sequence of accidental re-entrant calls in obscure 
> untested cases in each different reactor implementation.

Fair point; upon reflection of all the previous ad-hoc non-reentrancy stuff I've seen in the reactor, I retract my suggestion.  For testing, it's easy enough to plug a Clock() in there and iterate it once.

> Perhaps the solution doesn't need to be `reactor.callLater(0, ...)`, but 
> I think various implementations will be better if they put tasks into 
> some kind of queue, perhaps checked at the end of the iteration instead 
> of in the next iteration, rather than special casing each possible re- 
> entrant event in each possible event dispatcher.

What would be the point of adding another task queue to the reactor?  This sounds like a solution to a non-problem.  (Although I might have suggested the same thing myself if I hadn't thought about it too much first.)

The answer that comes to mind when I think about this question is that an end-of-iteration queue would avoid unnecessary additional invocations of whatever multiplexing system call the reactor needs to make.  But there are several points on the down side:

it's more code to maintain
it's more interfaces for users, or at least maintainers, to learn
it's an optimization, and so we should produce a benchmark indicating that the optimization makes sense and is effective before doing it
the optimization could be applied to callLater as it stands; any callLater(0) calls could be executed before the next reactor tick

Mostly though, an additional queue for non-reentrancy would be an ad-hoc special-case solution to one tiny part of the more general problem that reactor event ordering is a complete accident with unforseen consequences.  If there were a more general scheduling mechanism, we could schedule events in a better order overall.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110727/1f81ad96/attachment-0001.html>

From itamar at itamarst.org  Wed Jul 27 19:42:22 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 27 Jul 2011 21:42:22 -0400
Subject: [Twisted-Python] Re-entrancy policy for the reactor
In-Reply-To: <835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>
References: <1311562268.1645.14.camel@blake>
	<AFF5D96D-5C94-4F68-8CAB-B8B3AA9BF374@twistedmatrix.com>
	<20110727214158.2280.1598575144.divmod.xquotient.212@localhost.localdomain>
	<835E7990-97E9-4CC3-8C00-E20F2816F501@twistedmatrix.com>
Message-ID: <1311817342.1645.40.camel@blake>

On Wed, 2011-07-27 at 18:10 -0400, Glyph Lefkowitz wrote:


> Mostly though, an additional queue for non-reentrancy would be an
> ad-hoc special-case solution to one tiny part of the more general
> problem that reactor event ordering is a complete accident with
> unforseen consequences.  If there were a more general scheduling
> mechanism, we could schedule events in a better order overall.

We already have a queue, for reactor.callFromThread. We could add, say,
reactor.runInABit, and make reactor.callFromThread that just adds a
waker notification after calling that.





From exarkun at twistedmatrix.com  Sat Jul 30 22:05:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Jul 2011 04:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1312085126.51.796725699@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110731/55316759/attachment-0001.html>

From xfrost11 at yahoo.com  Sat Jul 30 23:01:06 2011
From: xfrost11 at yahoo.com (Justin Frost)
Date: Sat, 30 Jul 2011 22:01:06 -0700 (PDT)
Subject: [Twisted-Python] Adding introspection to xlmrpc server
Message-ID: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>

I'm trying the example found at:
http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
And it doesn't seem to be working.  The following test code fails:
import xmlrpclibs = xmlrpclib.ServerProxy("http://localhost:8080")print s.listMethods()
The error says that the listMethods method isn't defined.  If I create an xmrpc server without twisted and add introspection, it works fine.  Is there a problem with the example or am I doing something wrong?
Thanks,Justin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110730/94f4d235/attachment.html>

From rene at klootwijk.org  Sun Jul 31 15:45:39 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Sun, 31 Jul 2011 23:45:39 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
Message-ID: <00e301cc4fcb$30a5cf30$91f16d90$@org>

I have written several daemons that listen to the serialport. Everything
works well, however the serial port connections are actually USB connections
over IP (using an USB network hub). This means the connection is lost once
in a while which is detected and triggers the connectionLost method of the
protocol. I tried numerous things to reconnect to the serial port but
without success. When I reconnect to the serial port I doubt what to do with
the reactor parameter, when I specify the current reactor, I am able to
reconnect to the serial  port, the connectionMade method of the protocol is
triggered, but it will never trigger dataReceived although I know data is
arriving. Does any body have a glue how you can reconnect to the serial port
within a running reactor loop?

--

Rene

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110731/eed25ae1/attachment.html>

From andrew at bemusement.org  Sun Jul 31 17:00:38 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 1 Aug 2011 09:00:38 +1000
Subject: [Twisted-Python] Adding introspection to xlmrpc server
In-Reply-To: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
References: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
Message-ID: <20110731230038.GC6944@aihal.home.puzzling.org>

Justin Frost wrote:
>    I'm trying the example found at:
>    [1]http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
>    And it doesn't seem to be working.  The following test code fails:
>    import xmlrpclib
>    s = xmlrpclib.ServerProxy("http://localhost:8080")
>    print s.listMethods()
>    The error says that the listMethods method isn't defined.  If I create an
>    xmrpc server without twisted and add introspection, it works fine.  Is
>    there a problem with the example or am I doing something wrong?

Try:

    print s.system.listMethods()

-Andrew.




From glyph at twistedmatrix.com  Sun Jul 31 17:02:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Jul 2011 19:02:38 -0400
Subject: [Twisted-Python] Adding introspection to xlmrpc server
In-Reply-To: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
References: <1312088466.41977.YahooMailClassic@web112506.mail.gq1.yahoo.com>
Message-ID: <4368EF74-8E70-4413-AE1B-D1A823643B69@twistedmatrix.com>


On Jul 31, 2011, at 1:01 AM, Justin Frost wrote:

> I'm trying the example found at:
> 
> http://twistedmatrix.com/documents/current/web/howto/xmlrpc.html#auto3
> 
> And it doesn't seem to be working.  The following test code fails:
> 
> import xmlrpclib
> s = xmlrpclib.ServerProxy("http://localhost:8080")
> print s.listMethods()
> 
> The error says that the listMethods method isn't defined.  If I create an xmrpc server without twisted and add introspection, it works fine.  Is there a problem with the example or am I doing something wrong?
> 
> Thanks,
> Justin

As per the XML-RPC introspection specification <http://xmlrpc-c.sourceforge.net/introspection.html>, the method you're looking for is 'system.listMethods', not 'listMethods'.

You can fix your client example by doing 'print s.system.listMethods()' instead of 'print s.listMethods()'.

I'm assuming that the "xmlrpc server without Twisted" is violating the spec for convenience; you can always make an xmlrpc_listMethods yourself which calls the introspection object's listMethods.

Hope this helps,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110731/f24d45fc/attachment.html>

From _ at lvh.cc  Sun Jul 31 17:37:17 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Aug 2011 01:37:17 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <00e301cc4fcb$30a5cf30$91f16d90$@org>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
Message-ID: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110801/012b4f39/attachment.html>

