From exarkun at twistedmatrix.com  Wed Feb  1 01:01:44 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 01 Feb 2012 06:01:44 -0000
Subject: [Twisted-Python] how to ensure writes to stdout via
 stdio.StandardIO are completed before we shutdown the reactor?
In-Reply-To: <CAMWA1_pGBmFoeYimm8WXJaCdNCDCmXVwF7xoBm8o83fWW_QTGQ@mail.gmail.com>
References: <CAMWA1_pGBmFoeYimm8WXJaCdNCDCmXVwF7xoBm8o83fWW_QTGQ@mail.gmail.com>
Message-ID: <20120201060144.4064.433011759.divmod.xquotient.16@localhost6.localdomain6>

On 03:59 am, rutt.4 at osu.edu wrote:
>Hi twisted community,
>
>What?s the best way to ensure writes to stdout via stdio.StandardIO
>are completed before we shutdown the reactor??? The use case is to
>emit an error message before we shutdown the reactor and stop our
>program.? Dummy code snippet:

If you call the transport's loseConnection method, then the protocol's 
connectionLost method will be called after the output buffer is 
completely written.

Jean-Paul


From tenth at twistedmatrix.com  Wed Feb  1 12:09:19 2012
From: tenth at twistedmatrix.com (Tenth)
Date: Wed, 1 Feb 2012 12:09:19 -0500
Subject: [Twisted-Python]  February Twisted Sprint
Message-ID: <CAKJpRM1TQkMDXsq++D6iQ_pZd5gV8wN4oNY6cS_vwqQCUzgTeg@mail.gmail.com>

Itamar has generously offered to host this month's Boston Twisted Sprint!

Thus it will be happening at his place, near Porter Square, on Saturday,
February 11th, from 1:00 PM to 9:00 PM.

An evite has gone out to the usual suspects, but if you'd like to be added
(or removed from) that list, or would like more information about this or
other Boston Sprints, let me know!

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120201/76fb602d/attachment.htm 

From yueyoum at gmail.com  Thu Feb  2 20:43:14 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Fri, 3 Feb 2012 09:43:14 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
Message-ID: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>

Hi, all

I'm a new guy for twisted,
I just study the example of finger14.tac
at this page :
http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html

But,  *startService* not called when program running.


Please help,  thanks.


Code like bellow:


class FingerService(service.Service):

...
def startService(self):

print 'start service'
self.test_call()
service.Service.startService(self)



Noting output ,and test_call()  not called.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120203/221ff0cf/attachment.htm 

From exarkun at twistedmatrix.com  Thu Feb  2 22:05:06 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Feb 2012 03:05:06 -0000
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
Message-ID: <20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>

On 01:43 am, yueyoum at gmail.com wrote:
>Hi, all
>
>I'm a new guy for twisted,
>I just study the example of finger14.tac
>at this page :
>http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html
>
>But,  *startService* not called when program running.

Services are only started if they're added to the application object. 
Did you use setServiceParent to make the application object the parent 
of your service?

Jean-Paul


From yueyoum at gmail.com  Fri Feb  3 01:11:46 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Fri, 3 Feb 2012 14:11:46 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
Message-ID: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>

Thanks for reply

Yes, of course.

I followed the turotial ,




_______________________________


class FingerService(service.Service):
    ...
    def startService(self):
        print 'start service'
        ....

application = service.Application('finger')
f = FingerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(9000, f.get_FingerFactory()
                            ).setServiceParent(serviceCollection)






2012/2/3 <exarkun at twistedmatrix.com>

> On 01:43 am, yueyoum at gmail.com wrote:
> >Hi, all
> >
> >I'm a new guy for twisted,
> >I just study the example of finger14.tac
> >at this page :
> >
> http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html
> >
> >But,  *startService* not called when program running.
>
> Services are only started if they're added to the application object.
> Did you use setServiceParent to make the application object the parent
> of your service?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120203/6e1c20cb/attachment.htm 

From itamar at itamarst.org  Fri Feb  3 07:44:44 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 03 Feb 2012 07:44:44 -0500
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
Message-ID: <4F2BD6BC.6080709@itamarst.org>

On 02/03/2012 01:11 AM, ??? wrote:
> Thanks for reply
>
> Yes, of course.
>
> I followed the turotial ,
>

And you ran the file using "twistd -y finger14.tac"? If you did it like 
that, output may not be visible since the program is daemonized by 
default. -n option will keep it from daemonizing, and then you can see 
output on stdout.


From exarkun at twistedmatrix.com  Fri Feb  3 18:20:43 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Feb 2012 23:20:43 -0000
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
Message-ID: <20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>

On 06:11 am, yueyoum at gmail.com wrote:
>Thanks for reply
>
>Yes, of course.
>
>I followed the turotial ,
>
>class FingerService(service.Service):
>    ...
>    def startService(self):
>        print 'start service'
>        ....
>
>application = service.Application('finger')
>f = FingerService()
>serviceCollection = service.IServiceCollection(application)
>internet.TCPServer(9000, f.get_FingerFactory()
>                            ).setServiceParent(serviceCollection)

Notice that nowhere here does `f` get attached to `application`.  You 
need this:

    f.setServiceParent(application)

Jean-Paul


From yueyoum at gmail.com  Sat Feb  4 01:05:18 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Sat, 4 Feb 2012 14:05:18 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
	<20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
Message-ID: <CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>

Oh,  Thanks !
It works!


application = service.Application('finger')
f = FingerService()
f.setServiceParent(application)
internet.TCPServer(9000, f.get_FingerFactory())




2012/2/4 <exarkun at twistedmatrix.com>

> On 06:11 am, yueyoum at gmail.com wrote:
> >Thanks for reply
> >
> >Yes, of course.
> >
> >I followed the turotial ,
> >
> >class FingerService(service.Service):
> >    ...
> >    def startService(self):
> >        print 'start service'
> >        ....
> >
> >application = service.Application('finger')
> >f = FingerService()
> >serviceCollection = service.IServiceCollection(application)
> >internet.TCPServer(9000, f.get_FingerFactory()
> >                            ).setServiceParent(serviceCollection)
>
> Notice that nowhere here does `f` get attached to `application`.  You
> need this:
>
>    f.setServiceParent(application)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120204/099d177d/attachment.htm 

From yueyoum at gmail.com  Sat Feb  4 01:12:32 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Sat, 4 Feb 2012 14:12:32 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
	<20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
	<CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>
Message-ID: <CALZWPGiuihARTrA-qHjxgZbDoVczBBdkykgM=AUHw60F4+h6hQ@mail.gmail.com>

Sorry,

It should be this:


application = service.Application('finger')
f = FingerService()
f.setServiceParent(application)

serviceCollection = service.IServiceCollection(application)
internet.TCPServer(9000, f.get_FingerFactory()
                            ).setServiceParent(serviceCollection)


2012/2/4 ??? <yueyoum at gmail.com>

>
> Oh,  Thanks !
> It works!
>
>
> application = service.Application('finger')
> f = FingerService()
> f.setServiceParent(application)
> internet.TCPServer(9000, f.get_FingerFactory())
>
>
>
>
> 2012/2/4 <exarkun at twistedmatrix.com>
>
> On 06:11 am, yueyoum at gmail.com wrote:
>> >Thanks for reply
>> >
>> >Yes, of course.
>> >
>> >I followed the turotial ,
>> >
>> >class FingerService(service.Service):
>> >    ...
>> >    def startService(self):
>> >        print 'start service'
>> >        ....
>> >
>> >application = service.Application('finger')
>> >f = FingerService()
>> >serviceCollection = service.IServiceCollection(application)
>> >internet.TCPServer(9000, f.get_FingerFactory()
>> >                            ).setServiceParent(serviceCollection)
>>
>> Notice that nowhere here does `f` get attached to `application`.  You
>> need this:
>>
>>    f.setServiceParent(application)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120204/a3817097/attachment.htm 

From moijes12 at gmail.com  Sat Feb  4 02:37:42 2012
From: moijes12 at gmail.com (moses dsouza)
Date: Sat, 4 Feb 2012 13:07:42 +0530
Subject: [Twisted-Python] regarding #5412
Message-ID: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>

Hi

Is this #5412 valid ? I ask because there aren't any comments against this
bug. I'll provide a patch on confirmation.

regards
moijes12
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120204/d44b8054/attachment.htm 

From ivan at ludios.org  Sat Feb  4 03:31:55 2012
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 4 Feb 2012 08:31:55 +0000
Subject: [Twisted-Python] regarding #5412
In-Reply-To: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>
References: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>
Message-ID: <CAKynti+uTH7TGA5aD-Tw4bk0027cYLBdpnHbBWs88jv3o=zpfQ@mail.gmail.com>

On Sat, Feb 4, 2012 at 07:37, moses dsouza <moijes12 at gmail.com> wrote:
> Hi
>
> Is this #5412 valid ? I ask because there aren't any comments against this
> bug. I'll provide a patch on confirmation.

Rejecting unicode data earlier is almost always a good thing, so a
patch would be welcome.

Take a look at this if you haven't already:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Ivan


From exarkun at twistedmatrix.com  Sun Feb  5 00:05:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Feb 2012 05:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1328418326.22.997792749@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120205/a5f4d3eb/attachment.htm 

From jml at mumak.net  Mon Feb  6 10:48:01 2012
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 6 Feb 2012 15:48:01 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
Message-ID: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>

Hello,

I'm the nominal maintainer of Trial. I'm also an active maintainer of
testtools[1].

testtools is, roughly speaking, a base TestCase that works across a
bunch of Pythons and has a few nice features[2]. I started to prefer
it over Twisted's TestCase some time ago, and now use it pretty
consistently, even for my Twisted code.

testtools has a way of letting you run tests within the Twisted
reactor, without needing to use a particular base class. For example::

  class MyTests(TestCase):
    run_tests_with = AsynchronousDeferredRunTest

    def test_foo(self):
      ...
      return some_deferred

Or::

  class MyTests(TestCase):
    def test_ordinary_thing(self):
      ...
    @run_test_with(AsynchronousDeferredRunTest)
    def test_twisted_thing(self):
      ...
      return some_deferred

It doesn't behave exactly the way Trial does. Freed from backwards
compatibility constraints, I tightened up the implementation quite a
bit. There are options to make it emulate Trial's behaviour[3].

The documentation says that it's "highly experimental". This is not
strictly true any more, as it has been used in numerous projects and
has been found to be quite robust.

The key source code is at::
  http://bazaar.launchpad.net/~testtools-committers/testtools/trunk/view/head:/testtools/deferredruntest.py
  http://bazaar.launchpad.net/~testtools-committers/testtools/trunk/view/head:/testtools/_spinner.py

And you can get the code from PyPI or Launchpad[4].

testtools has had this feature for some time now. It's past time that
I officially informed the Twisted community about it. That's the main
reason for this email.

In my ideal world, Twisted's TestCase would inherit from testtools's
TestCase and would continue to provide the same API it does today.
This might not be everyone else's ideal though, and the path from here
to there is unclear to me. I welcome your thoughts.

cheers,
jml


[1] http://testtools.rtfd.org ; http://pypi.python.org/pypi/testtools
[2] http://testtools.readthedocs.org/en/latest/overview.html
[3] http://testtools.readthedocs.org/en/latest/for-test-authors.html#twisted-support
[4] bzr branch lp:testtools


From glyph at twistedmatrix.com  Mon Feb  6 13:37:50 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Feb 2012 13:37:50 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
Message-ID: <85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>

On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:

> In my ideal world, Twisted's TestCase would inherit from testtools's
> TestCase and would continue to provide the same API it does today.
> This might not be everyone else's ideal though, and the path from here
> to there is unclear to me. I welcome your thoughts.

Users still routinely struggle with the one dependency we allowed Twisted core to have - zope.interface. I do still think that's worth it, since it freed us from a significant and complex maintenance burden.  And I do sometimes wish that we could make it an optional or bundled dependency, to give users who have to download Twisted themselves a gentler on-ramp.  By your own admission, however, the person who should be doing maintenance on trial and the person doing maintenance on testtools are mostly the same guy :-).

While testtools' features are nice, and I will likely even elect to use myself it for testing some Twisted applications in the future, I would set the bar very high for making testtools a required dependency for Twisted's own test suite.  Just for starters, the Python packaging ecosystem disaster would need to be fixed; also, the name of the package should be changed to be more unique so that users wouldn't find things like <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when searching around the web for the contents of the inevitable packaging error message.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120206/a3d9d898/attachment.htm 

From jml at mumak.net  Mon Feb  6 14:01:30 2012
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 6 Feb 2012 19:01:30 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
Message-ID: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>

On Mon, Feb 6, 2012 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:
>
> In my ideal world, Twisted's TestCase would inherit from testtools's
> TestCase and would continue to provide the same API it does today.
> This might not be everyone else's ideal though, and the path from here
> to there is unclear to me. I welcome your thoughts.
>
>
...
> While testtools' features are nice, and I will likely even elect to use
> myself it for testing some Twisted applications in the future, I would set
> the bar very?high for making testtools a required dependency for Twisted's
> own test suite.

I highly recommend trying it out.

> ?Just for starters, the Python packaging ecosystem disaster
> would need to be fixed;

As much as I would like to see that happen, I am not ever going to do
anything about it.

> also, the name of the package should be changed to
> be more unique so that users wouldn't find things like
> <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when
> searching around the web for the contents of the inevitable packaging error
> message.
>

We've already renamed once (from pyunit3k). Would consider renaming
again if someone suggested something sufficiently good.

Thanks for the reply.

jml


From glyph at twistedmatrix.com  Mon Feb  6 14:54:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Feb 2012 14:54:54 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
Message-ID: <772B80F4-52CA-4EFA-98A8-88FE7973724E@twistedmatrix.com>


On Feb 6, 2012, at 2:01 PM, Jonathan Lange wrote:

> On Mon, Feb 6, 2012 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:
>> 
>> In my ideal world, Twisted's TestCase would inherit from testtools's
>> TestCase and would continue to provide the same API it does today.
>> This might not be everyone else's ideal though, and the path from here
>> to there is unclear to me. I welcome your thoughts.
>> 
>> 
> ...
>> While testtools' features are nice, and I will likely even elect to use
>> myself it for testing some Twisted applications in the future, I would set
>> the bar very high for making testtools a required dependency for Twisted's
>> own test suite.
> 
> I highly recommend trying it out.

In my copious spare time :).

>>  Just for starters, the Python packaging ecosystem disaster
>> would need to be fixed;
> 
> As much as I would like to see that happen, I am not ever going to do
> anything about it.

You and me both.

>> also, the name of the package should be changed to
>> be more unique so that users wouldn't find things like
>> <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when
>> searching around the web for the contents of the inevitable packaging error
>> message.
>> 
> 
> We've already renamed once (from pyunit3k). Would consider renaming
> again if someone suggested something sufficiently good.
> 
> Thanks for the reply.

No problem; thanks for your message!

From wolfgang at rohdewald.de  Mon Feb  6 15:07:25 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 06 Feb 2012 21:07:25 +0100
Subject: [Twisted-Python] CopyableFailure fails
Message-ID: <3290289.1zpldiYC5f@i5>

Hi, 

with twisted 11.0.0 and python 2.7, my error fails here:

  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-
x86_64.egg/twisted/spread/pb.py", line 407, in getStateToCopy
    state['value'] = str(self.value) # Exception instance
exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\u201e' 
in position 10: ordinal not in range(128)

this bug hides my own bug, giving me no useful backtrace.

simple fix:

--- x   2012-02-06 21:05:33.907228573 +0100
+++ pb.py       2012-02-06 21:05:36.923228461 +0100
@@ -404,7 +404,7 @@
         if isinstance(self.value, failure.Failure):
             state['value'] = failure2Copyable(self.value, 
self.unsafeTracebacks)
         else:
-            state['value'] = str(self.value) # Exception instance
+            state['value'] = repr(self.value) # Exception instance
         if isinstance(self.type, str):
             state['type'] = self.type
         else:


-- 
Wolfgang


From wolfgang at rohdewald.de  Mon Feb  6 16:29:26 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 06 Feb 2012 22:29:26 +0100
Subject: [Twisted-Python] safe_str is not safe
Message-ID: <1955085.3s00IEhm95@i5>

after patching CopyableFailure as written,

the stack trace now ends with the following lines. The correct
exception message is still not shown. It contains unicode chars
which reflect.py/safe_str cannot handle.

  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 170, in 
initRuleset
    raise Exception(m18n('ruleset "%1" not found', self.name))
exceptions.Exception: <Exception instance at 0x30e8b48 with str error:
 'Traceback (most recent call last):\n  File "/usr/local/lib/python2.7/dist-
packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/python/reflect.py", line 
546, in _safeFormat\n    return formatter(o)\nUnicodeEncodeError: \'ascii\' 
codec can\'t encode character u\'\\u201e\' in position 10: ordinal not in 
range(128)\n'>
Unhandled error in Deferred:


after replacing safe_str by safe_repr in twisted/python/failure.py,

I finally get a meaningful printout:
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 170, in 
initRuleset
    raise Exception(m18n('ruleset "%1" not found', self.name))
exceptions.Exception: Exception(u'Regelsatz 
\u201e55a8a17e29a1a087cc8df9cedb5590cd\u201c nicht gefunden',)
Unhandled error in Deferred:

of course a correct encoding would be even better...
my patch:

--- failure.org 2012-02-06 22:22:46.395065076 +0100
+++ failure.py  2012-02-06 22:22:51.259064816 +0100
@@ -472,7 +472,7 @@
         """Get a string of the exception which caused this Failure."""
         if isinstance(self.value, Failure):
             return self.value.getErrorMessage()
-        return reflect.safe_str(self.value)
+        return reflect.safe_repr(self.value)
 
     def getBriefTraceback(self):
         io = StringIO()
@@ -517,7 +517,7 @@
             w("%s: %s: %s\n" % (
                     hasFrames,
                     reflect.safe_str(self.type),
-                    reflect.safe_str(self.value)))
+                    reflect.safe_repr(self.value)))
         else:
             w( 'Traceback (most recent call last):\n')
 
@@ -542,7 +542,7 @@
                 w(self.type + "\n")
             else:
                 w("%s: %s\n" % (reflect.qual(self.type),
-                                reflect.safe_str(self.value)))
+                                reflect.safe_repr(self.value)))
         # chaining
         if isinstance(self.value, Failure):
             # TODO: indentation for chained failures?

-- 
Wolfgang


From exarkun at twistedmatrix.com  Mon Feb  6 18:12:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 06 Feb 2012 23:12:29 -0000
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <3290289.1zpldiYC5f@i5>
References: <3290289.1zpldiYC5f@i5>
Message-ID: <20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>

On 08:07 pm, wolfgang at rohdewald.de wrote:
>Hi,
>
>with twisted 11.0.0 and python 2.7, my error fails here:

Hello,

Please provide a minimal example reproducing the problem so we can 
discuss it.  See http://sscce.org/ for more details.

Thanks,
Jean-Paul


From wolfgang at rohdewald.de  Mon Feb  6 19:41:20 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 07 Feb 2012 01:41:20 +0100
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
References: <3290289.1zpldiYC5f@i5>
	<20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
Message-ID: <2425488.4tZL83B2Xu@i5>

Am Montag, 6. Februar 2012, 23:12:29 schrieb exarkun at twistedmatrix.com:
> On 08:07 pm, wolfgang at rohdewald.de wrote:
> >Hi,
> 
> >with twisted 11.0.0 and python 2.7, my error fails here:
> Hello,
> 
> Please provide a minimal example reproducing the problem so we can 
> discuss it.  See http://sscce.org/ for more details.

I was hoping it would be self-evident. Trimming this to a short example 
could be rather much work. I hope the full backtrace will help.

anyway I overlooked the fact that two backtraces are printed where
the first on gives me my own calling stack. But the second one
(UnicodeEncodeError) should not happen IMHO, and it does not with my patch.

Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 1348, in remote_respond
    d = self.portal.login(self, mind, IPerspective)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/cred/portal.py", line 116, in login
    ).addCallback(self.realm.requestAvatar, mind, *interfaces
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 297, in addCallback
    callbackKeywords=kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 286, in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 542, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 956, in requestAvatar
    avatar.attached(mind)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 908, in attached
    self.server.login(self)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 717, in login
    self.loadSuspendedTables(user)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 889, in loadSuspendedTables
    table = Table(self, None, Ruleset.cached(ruleset, used=True), playOpen, autoPlay=False, seed=seed)
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 77, in cached
    result = Ruleset(name, used)
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 110, in __init__
    self.initRuleset()
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 167, in initRuleset
    raise Exception(u'just one unicode char:?')
exceptions.Exception: Exception(u'just one unicode char:\xe4',)
fail: <twisted.spread.pb.CopyableFailure <type 'exceptions.Exception'>>
Unhandled error in Deferred:
Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 515, in expressionReceived
    method(*sexp[1:])
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 827, in proto_message
    self._recvMessage(self.localObjectForID, requestID, objectID, message, answerRequired, netArgs, netKw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 865, in _recvMessage
    callbackArgs=args, errbackArgs=args)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 286, in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 542, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 896, in _sendFailureOrError
    self._sendFailure(fail, requestID)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 905, in _sendFailure
    self._sendError(fail, requestID)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 921, in _sendError
    self.sendCall("error", requestID, self.serialize(fail))
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 764, in serialize
    return jelly(object, self.security, None, self)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/jelly.py", line 1122, in jelly
    return _Jellier(taster, persistentStore, invoker).jelly(object)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/jelly.py", line 475, in jelly
    return obj.jellyFor(self)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/flavors.py", line 299, in jellyFor
    state = self.getStateToCopyFor(p)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/flavors.py", line 267, in getStateToCopyFor
    return self.getStateToCopy()
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 407, in getStateToCopy
    state['value'] = str(self.value) # Exception instance
exceptions.UnicodeEncodeError: UnicodeEncodeError('ascii', u'just one unicode char:\xe4', 22, 23, 'ordinal not in range(128)')


-- 
Wolfgang


From free at 64studio.com  Tue Feb  7 15:49:54 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 07 Feb 2012 21:49:54 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	(Jonathan Lange's message of "Mon, 6 Feb 2012 19:01:30 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
Message-ID: <8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]

  JL> As much as I would like to see that happen, I am not ever going to do
  JL> anything about it.

So what position can the Twisted project realistically take? Keep using
trial for testing Twisted itself, but recommending projects based
on twisted to use testtools instead (and deprecating trial somehow)?

Also, from what I had heard it'd be technically not possible to provide
a compatibility layer, is that accurate?

Personally, if testtools ever becomes the blessed tool for testing
twisted-based projects, I would not mind at all to have to replace

from twisted.trial.unittest import TestCase

with something like

from testtools.trial import TestCase

in my tests (where testtools.trial.TestCase clearly provides a
compatibility layer with twisted.trial.unittest.TestCase implemented on
top of testtools). At least for getting me going, and maybe gradually
transition to pure testtools.

However it'd be good if Twisted took a clear position on this, because
the risk is to see trial languishing and testtools never really taking
off (assuming that testtools is the way to go, which is your thinking
afaiu).

Cheers,

Free


From penxiao at cisco.com  Tue Feb  7 21:04:48 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Wed, 8 Feb 2012 10:04:48 +0800
Subject: [Twisted-Python] How to Control Twisted Program through CLI
Message-ID: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>

Hi experts,

 

I have one twisted program, and it used to connected some servers through reactor.connectTCP(),

And now, when the program is running, I want to add another connection or disconnect one connection already has through reactor.connectTCP(), how can I do that?

 

Best

Regards,

 

Xiao Peng(??)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120208/fd8ffd1e/attachment.htm 

From glyph at twistedmatrix.com  Tue Feb  7 22:49:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Feb 2012 22:49:04 -0500
Subject: [Twisted-Python] How to Control Twisted Program through CLI
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>
Message-ID: <70155DE9-0870-4CAC-9F14-F022E602C8D8@twistedmatrix.com>


On Feb 7, 2012, at 9:04 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts,
>  
> I have one twisted program, and it used to connected some servers through reactor.connectTCP(),
> And now, when the program is running, I want to add another connection or disconnect one connection already has through reactor.connectTCP(), how can I do that?
>  

Call reactor.connectTCP() again to make a new connection.  This works at any time, not just before the reactor is run.

Call self.transport.loseConnection() to terminate a connection from within a Protocol class.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120207/8d16f0bb/attachment.htm 

From glyph at twistedmatrix.com  Wed Feb  8 02:05:22 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 8 Feb 2012 02:05:22 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>

On Feb 7, 2012, at 3:49 PM, Free Ekanayaka wrote:

> Hi Jonathan,
> 
> |--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:
> 
>  [...]
> 
>  JL> As much as I would like to see that happen, I am not ever going to do
>  JL> anything about it.
> 
> So what position can the Twisted project realistically take? Keep using
> trial for testing Twisted itself, but recommending projects based
> on twisted to use testtools instead (and deprecating trial somehow)?

The position that Twisted can take is that Trial is awesome and you should use Trial.  testtools is a separate project, and you may elect to use it to enhance your trial experience.

> Also, from what I had heard it'd be technically not possible to provide
> a compatibility layer, is that accurate?

It's already compatible, as Jonathan said.  You can just use the trial runner with testtools tests.

> Personally, if testtools ever becomes the blessed tool for testing
> twisted-based projects, I would not mind at all to have to replace

For a nominal donation to the project, someone from the Twisted project can come to your office, put on some ridiculous priest costume and sanctify whatever toolchain you want to use. ;-)

> However it'd be good if Twisted took a clear position on this,

Nope.  We write software, not position papers :).

> because the risk is to see trial languishing and testtools never really taking
> off (assuming that testtools is the way to go, which is your thinking
> afaiu).


Trial is a supported tool that is part of Twisted.  It works great for me every single day.  It can work great for you.  The fact that Jonathan is technically the "maintainer" and he hasn't been doing much work on it is irrelevant; other people have been working on it, bugs do get fixed, features do get added.  There's not a lot of personality-driven development on Twisted; every patch is at least a bit of a community effort.  (If someone else wanted to step forward and take the "maintainer" mantle I'm sure he'd be happy to give it up.)

There are lots of parts of trial which work great with testtools, too.  It has a plugin architecture, for example, which can do some interesting things (exarkun wrote a cool one called "merit" but I don't know if the code for that still exists anywhere...).  It would be good to provide better documentation for those kinds of things, and maybe some community tools, so the sorts of people who write Nose plugins could also write Twisted plugins.

Apropos of that, Trial's web page received some improved content a little while ago, in case anyone is interested in improving its presence on the web, and helping people understand what it can do: <http://twistedmatrix.com/trac/wiki/TwistedTrial>.

I think that the main risks to "languishing" or "not taking off" for both Trial and testtools are issues with their own documentation and promotional materials, not in any conflict with each other.  If you're worried about it, contribute code or documentation or blog-posts or what have you to one or both projects :).

-glyph



From jml at mumak.net  Wed Feb  8 03:32:27 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 08:32:27 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
Message-ID: <CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>

On Wed, Feb 8, 2012 at 7:05 AM, Glyph <glyph at twistedmatrix.com> wrote:
> On Feb 7, 2012, at 3:49 PM, Free Ekanayaka wrote:
>
>> Hi Jonathan,
>>
>> |--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:
>>
>> ?[...]
>>
>> ?JL> As much as I would like to see that happen, I am not ever going to do
>> ?JL> anything about it.
>>
>> So what position can the Twisted project realistically take? Keep using
>> trial for testing Twisted itself, but recommending projects based
>> on twisted to use testtools instead (and deprecating trial somehow)?
>
> The position that Twisted can take is that Trial is awesome and you should use Trial. ?testtools is a separate project, and you may elect to use it to enhance your trial experience.
>
>> Also, from what I had heard it'd be technically not possible to provide
>> a compatibility layer, is that accurate?
>
> It's already compatible, as Jonathan said. ?You can just use the trial runner with testtools tests.
>
>> Personally, if testtools ever becomes the blessed tool for testing
>> twisted-based projects, I would not mind at all to have to replace
>
> For a nominal donation to the project, someone from the Twisted project can come to your office, put on some ridiculous priest costume and sanctify whatever toolchain you want to use. ;-)
>
>> However it'd be good if Twisted took a clear position on this,
>
> Nope. ?We write software, not position papers :).
>
>> because the risk is to see trial languishing and testtools never really taking
>> off (assuming that testtools is the way to go, which is your thinking
>> afaiu).
>
>
> Trial is a supported tool that is part of Twisted. ?It works great for me every single day. ?It can work great for you. ?The fact that Jonathan is technically the "maintainer" and he hasn't been doing much work on it is irrelevant; other people have been working on it, bugs do get fixed, features do get added. ?There's not a lot of personality-driven development on Twisted; every patch is at least a bit of a community effort. ?(If someone else wanted to step forward and take the "maintainer" mantle I'm sure he'd be happy to give it up.)
>
> There are lots of parts of trial which work great with testtools, too. ?It has a plugin architecture, for example, which can do some interesting things (exarkun wrote a cool one called "merit" but I don't know if the code for that still exists anywhere...). ?It would be good to provide better documentation for those kinds of things, and maybe some community tools, so the sorts of people who write Nose plugins could also write Twisted plugins.
>
> Apropos of that, Trial's web page received some improved content a little while ago, in case anyone is interested in improving its presence on the web, and helping people understand what it can do: <http://twistedmatrix.com/trac/wiki/TwistedTrial>.
>
> I think that the main risks to "languishing" or "not taking off" for both Trial and testtools are issues with their own documentation and promotional materials, not in any conflict with each other. ?If you're worried about it, contribute code or documentation or blog-posts or what have you to one or both projects :).

I know it's bad form, but I endorse everything that Glyph said. Except
that I'd add that testtools is awesome and you should use that.

jml


From free at 64studio.com  Wed Feb  8 12:22:19 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 18:22:19 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Wed, 8 Feb 2012 02:05:22
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
Message-ID: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Wed, 8 Feb 2012 02:05:22 -0500, Glyph <glyph at twistedmatrix.com> said:

  [...]

  G> The position that Twisted can take is that Trial is awesome and you
  G> should use Trial.  testtools is a separate project, and you may
  G> elect to use it to enhance your trial experience.

That sounds good to me.

  >>Also, from what I had heard it'd be technically not possible to provide
  >>a compatibility layer, is that accurate?

  G> It's already compatible, as Jonathan said.  You can just use the
  G> trial runner with testtools tests.

Even those returning deferreds and using AsynchronousDeferredRunTest? I
presume so, just asking to be sure.

Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
too which I believe mimics more closely what trial currently does, so
I'm not sure what the difference between AsynchronousDeferredRunTest and
AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
run such tests.

I didn't really look into code tough.

  >>Personally, if testtools ever becomes the blessed tool for testing
  >>twisted-based projects, I would not mind at all to have to replace

  G> For a nominal donation to the project, someone from the Twisted
  G> project can come to your office, put on some ridiculous priest
  G> costume and sanctify whatever toolchain you want to use. ;-)

  >>However it'd be good if Twisted took a clear position on this,

  G> Nope.  We write software, not position papers :).

Okay maybe I used the wrong wording. I was asking for a "position"
because I got the impression that Jonathan is considering testtools a
sort of trial2 that provides improvements over trial, but that was not
likely going to replace only it because of compatibility reasons. Please
Jonathan correct me if it's not the case.

So *if* testtools is considered superior to trial for some reason, but
it's problematic for Twisted to internally drop trial in favor of
testtools, I was wondering if it was the case to (also) point people to
testtools from the Twisted website/documentaiton, or something along
those lines.

If it's not the case and it's just a matter of preference, than fine.

  G> Trial is a supported tool that is part of Twisted.  It works great
  G> for me every single day.  It can work great for you.

Sure, same here.

  [...]

  G> I think that the main risks to "languishing" or "not taking off"
  G> for both Trial and testtools are issues with their own
  G> documentation and promotional materials, not in any conflict with
  G> each other.  If you're worried about it, contribute code or
  G> documentation or blog-posts or what have you to one or both
  G> projects :).

Probably a good addition to the documentation of the two projects would
be to describe the differences between the two and if there is any
reason one should use one or the other, beside bare taste. I can surely
help with that when I have better picture myself.

Cheers,

Free


From free at 64studio.com  Wed Feb  8 12:24:03 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 18:24:03 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 08:32:27 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
Message-ID: <87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 08:32:27 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]

  JL> I know it's bad form, but I endorse everything that Glyph said. Except
  JL> that I'd add that testtools is awesome and you should use that.

Would you elaborate on that and explain why you come to prefer it over
trial for your new projects?

Cheers,

Free


From glyph at twistedmatrix.com  Wed Feb  8 12:30:14 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 8 Feb 2012 12:30:14 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>


On Feb 8, 2012, at 12:22 PM, Free Ekanayaka wrote:

> Probably a good addition to the documentation of the two projects would
> be to describe the differences between the two and if there is any
> reason one should use one or the other, beside bare taste. I can surely
> help with that when I have better picture myself.

I still disagree.  This is the job for some other website, to compare python testing tools.  After all, why not add in nose?  py.test?  They both also have Twisted support that works differently.  Trial's website and documentation should focus on how Trial works and how to use it, not on providing a comprehensive comparison matrix.

I'm not saying that such a comparison shouldn't exist, just that it shouldn't be the Twisted website's job and it's certainly not the Trial documentation's job.  So feel free to write one up!

(Plus, returning Deferreds should ideally be an edge case, even in the context of testing Twisted stuff - as much as possible, tests should run synchronously and simulate the events that cause asynchrony in the real world, so that they can test different orderings and edge cases and not just depend on random load variance on the build machines to get coverage of those cases.)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120208/2f618a96/attachment.htm 

From free at 64studio.com  Wed Feb  8 14:03:59 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 20:03:59 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Wed, 8 Feb 2012 12:30:14
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
Message-ID: <8762fh2lls.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Wed, 8 Feb 2012 12:30:14 -0500, Glyph <glyph at twistedmatrix.com> said:

  G> On Feb 8, 2012, at 12:22 PM, Free Ekanayaka wrote:
  >>Probably a good addition to the documentation of the two projects
  >>would be to describe the differences between the two and if there is
  >>any reason one should use one or the other, beside bare taste. I can
  >>surely help with that when I have better picture myself.

  G> I still disagree.  This is the job for some other website, to compare
  G> python testing tools.  After all, why not add in nose?  py.test?  They
  G> both also have Twisted support that works differently.  Trial's
  G> website and documentation should focus on how Trial works and how to
  G> use it, not on providing a comprehensive comparison matrix.

  G> I'm not saying that such a comparison shouldn't exist, just that it
  G> shouldn't be the Twisted website's job and it's certainly not the
  G> Trial documentation's job.  So feel free to write one up!

  G> (Plus, returning Deferreds should ideally be an edge case, even in the
  G> context of testing Twisted stuff - as much as possible, tests should
  G> run synchronously and simulate the events that cause asynchrony in the
  G> real world, so that they can test different orderings and edge cases
  G> and not just depend on random load variance on the build machines to
  G> get coverage of those cases.)

Both good points, agreed.

Cheers,

Free


From jml at mumak.net  Wed Feb  8 17:12:34 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:12:34 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:24 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Jonathan,
>
> |--==> On Wed, 8 Feb 2012 08:32:27 +0000, Jonathan Lange <jml at mumak.net> said:
>
> ?[...]
>
> ?JL> I know it's bad form, but I endorse everything that Glyph said. Except
> ?JL> that I'd add that testtools is awesome and you should use that.
>
> Would you elaborate on that and explain why you come to prefer it over
> trial for your new projects?

That's mostly documented here:

  http://testtools.readthedocs.org/en/latest/overview.html

and in the other docs. In a nutshell: details, fixtures, matchers, and
a bunch of unittest extensions that make it much more flexible, making
it easy to write things like parallel test runners and
AsynchronousDeferredRunTest.

Trial provides an excellent test runner, but for everything else is
pretty much standard.

I don't really have a summary of why ADRT is better than Trial's
deferred test support. It's largely because you get better debugging
information for failed tests (that's what "details" are all about) and
because reactor cleanup issues are more localized to individual tests
due to not having to support addCleanup and making no promises about
what happens outside of test execution.

jml


From jml at mumak.net  Wed Feb  8 17:15:18 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:15:18 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:22 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Glyph,
>
> |--==> On Wed, 8 Feb 2012 02:05:22 -0500, Glyph <glyph at twistedmatrix.com> said:
>
...
> ?G> It's already compatible, as Jonathan said. ?You can just use the
> ?G> trial runner with testtools tests.
>
> Even those returning deferreds and using AsynchronousDeferredRunTest? I
> presume so, just asking to be sure.
>

Yes.

(Also, you don't get sure from asking, you get sure from trying).

> Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
> too which I believe mimics more closely what trial currently does, so
> I'm not sure what the difference between AsynchronousDeferredRunTest and
> AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
> run such tests.
>


From jml at mumak.net  Wed Feb  8 17:16:50 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:16:50 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
Message-ID: <CAHZ8tnZw0EzK87H8D4owSk4jq1_P+gvCHxNUB1KzPqy06LxNgA@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:30 PM, Glyph <glyph at twistedmatrix.com> wrote:
...
> (Plus, returning Deferreds should ideally?be an edge case, even in the
> context of testing Twisted stuff - as much as possible, tests should run
> synchronously and simulate the events that cause asynchrony in the real
> world, so that they can test different orderings and edge cases and not just
> depend on random load variance on the build machines to get coverage of
> those cases.)
>

Agreed. That's one of the reasons I like explicitly declaring that a
test returns a Deferred using @run_test_with(ADRT).

jml


From exarkun at twistedmatrix.com  Wed Feb  8 19:30:49 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 00:30:49 -0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
Message-ID: <20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>

On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>
>> From the documentation:
>
>* Trial spins the reactor a couple of times before cleaning it up,
>  ``AsynchronousDeferredRunTest`` does not.  If you rely on this 
>behavior, use
>  ``AsynchronousDeferredRunTestForBrokenTwisted``.

I've expected for some time now that we would deprecate this behavior in 
twisted.trial.unittest.TestCase.  Just a matter of someone getting to 
it.

Jean-Paul


From itamar at itamarst.org  Wed Feb  8 21:15:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 08 Feb 2012 21:15:26 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
Message-ID: <4F332C3E.80401@itamarst.org>

Sign up is sometime soon, and before considering this it'd be good to 
know we'd be able to find mentors to help the students with their 
projects. Would any developers working on Twisted be interested in being 
mentors for a student over the summer?

-Itamar


From mostawesomedude at gmail.com  Thu Feb  9 00:08:24 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Wed, 8 Feb 2012 21:08:24 -0800
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F332C3E.80401@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
Message-ID: <CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>

On Wed, Feb 8, 2012 at 6:15 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> Sign up is sometime soon, and before considering this it'd be good to
> know we'd be able to find mentors to help the students with their
> projects. Would any developers working on Twisted be interested in being
> mentors for a student over the summer?

I've mentored for a couple organizations in past years, and would not
mind mentoring for Twisted.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From jml at mumak.net  Thu Feb  9 07:09:44 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Feb 2012 12:09:44 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
Message-ID: <CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>

On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
> On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>
>>> From the documentation:
>>
>>* Trial spins the reactor a couple of times before cleaning it up,
>> ?``AsynchronousDeferredRunTest`` does not. ?If you rely on this
>>behavior, use
>> ?``AsynchronousDeferredRunTestForBrokenTwisted``.
>
> I've expected for some time now that we would deprecate this behavior in
> twisted.trial.unittest.TestCase. ?Just a matter of someone getting to
> it.
>

Yeah. I think the last time I tried there were just too many broken
test cases in Twisted itself, which made the exercise quite daunting.

jml


From jessica.mckellar at gmail.com  Thu Feb  9 07:38:01 2012
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Thu, 9 Feb 2012 07:38:01 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
Message-ID: <CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>

I'm happy to mentor, deal with administrivia, help write our application, etc.

-Jessica


On Thu, Feb 9, 2012 at 12:08 AM, Corbin Simpson
<mostawesomedude at gmail.com> wrote:
> On Wed, Feb 8, 2012 at 6:15 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> Sign up is sometime soon, and before considering this it'd be good to
>> know we'd be able to find mentors to help the students with their
>> projects. Would any developers working on Twisted be interested in being
>> mentors for a student over the summer?
>
> I've mentored for a couple organizations in past years, and would not
> mind mentoring for Twisted.
>
> ~ C.
>
> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Thu Feb  9 08:52:15 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 13:52:15 -0000
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F332C3E.80401@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
Message-ID: <20120209135215.4064.1736596458.divmod.xquotient.118@localhost6.localdomain6>

On 02:15 am, itamar at itamarst.org wrote:
>Sign up is sometime soon, and before considering this it'd be good to
>know we'd be able to find mentors to help the students with their
>projects. Would any developers working on Twisted be interested in 
>being
>mentors for a student over the summer?

I'm happy to mentor as well (either solo or in concert with another 
mentor).

To diverge slightly from your question, though, I would also like to see 
potential students get involved in Twisted *now* to get familiar with 
the Twisted development project, get a feel for what part of Twisted 
they might be interested in working on, and to demonstrate their 
commitment to following through with the project.

Jean-Paul


From exarkun at twistedmatrix.com  Thu Feb  9 08:54:14 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 13:54:14 -0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
Message-ID: <20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>

On 12:09 pm, jml at mumak.net wrote:
>On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
>>On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>
>>>> From the documentation:
>>>
>>>* Trial spins the reactor a couple of times before cleaning it up,
>>>?``AsynchronousDeferredRunTest`` does not. ?If you rely on this
>>>behavior, use
>>>?``AsynchronousDeferredRunTestForBrokenTwisted``.
>>
>>I've expected for some time now that we would deprecate this behavior 
>>in
>>twisted.trial.unittest.TestCase. ?Just a matter of someone getting to
>>it.
>
>Yeah. I think the last time I tried there were just too many broken
>test cases in Twisted itself, which made the exercise quite daunting.

Fortunately it lends itself quite well to incremental change.  One can 
generally meaningfully fix a single unit test/test case at a time. :)

Jean-Paul


From jml at mumak.net  Thu Feb  9 08:57:52 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Feb 2012 13:57:52 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
Message-ID: <CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>

On Thu, Feb 9, 2012 at 1:54 PM,  <exarkun at twistedmatrix.com> wrote:
> On 12:09 pm, jml at mumak.net wrote:
>>On Thu, Feb 9, 2012 at 12:30 AM, ?<exarkun at twistedmatrix.com> wrote:
>>>On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>>
>>>>> From the documentation:
>>>>
>>>>* Trial spins the reactor a couple of times before cleaning it up,
>>>>?``AsynchronousDeferredRunTest`` does not. ?If you rely on this
>>>>behavior, use
>>>>?``AsynchronousDeferredRunTestForBrokenTwisted``.
>>>
>>>I've expected for some time now that we would deprecate this behavior
>>>in
>>>twisted.trial.unittest.TestCase. ?Just a matter of someone getting to
>>>it.
>>
>>Yeah. I think the last time I tried there were just too many broken
>>test cases in Twisted itself, which made the exercise quite daunting.
>
> Fortunately it lends itself quite well to incremental change. ?One can
> generally meaningfully fix a single unit test/test case at a time. :)
>

Right. At the time it was discouraging because I felt like there were
a hundred tests to fix one at a time, then add the deprecation warning
and then a year later get to my actual goal of removing the extra
iterates. I don't feel that way any more.

jml


From glyph at twistedmatrix.com  Thu Feb  9 16:20:37 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 9 Feb 2012 16:20:37 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
	<CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
Message-ID: <D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>


On Feb 9, 2012, at 8:57 AM, Jonathan Lange wrote:

> On Thu, Feb 9, 2012 at 1:54 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 12:09 pm, jml at mumak.net wrote:
>>> On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
>>>> On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>>> 
>>>>>> From the documentation:
>>>>> 
>>>>> * Trial spins the reactor a couple of times before cleaning it up,
>>>>>  ``AsynchronousDeferredRunTest`` does not.  If you rely on this
>>>>> behavior, use
>>>>>  ``AsynchronousDeferredRunTestForBrokenTwisted``.
>>>> 
>>>> I've expected for some time now that we would deprecate this behavior
>>>> in
>>>> twisted.trial.unittest.TestCase.  Just a matter of someone getting to
>>>> it.
>>> 
>>> Yeah. I think the last time I tried there were just too many broken
>>> test cases in Twisted itself, which made the exercise quite daunting.
>> 
>> Fortunately it lends itself quite well to incremental change.  One can
>> generally meaningfully fix a single unit test/test case at a time. :)
>> 
> 
> Right. At the time it was discouraging because I felt like there were
> a hundred tests to fix one at a time, then add the deprecation warning
> and then a year later get to my actual goal of removing the extra
> iterates. I don't feel that way any more.

This is also a great exercise for a Twisted contributing beginner, at least, if they have some help and guidance from a mentor familiar with the issues involved.  If anyone out there is on the fence about getting involved with the project and looking for an on-ramp that involves manageable chunks of work, test maintenance fixes like these are a great place to get started.

-glyph



From itamar at itamarst.org  Thu Feb  9 20:58:29 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 09 Feb 2012 20:58:29 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
Message-ID: <4F3479C5.7090600@itamarst.org>

On 02/09/2012 07:38 AM, Jessica McKellar wrote:
> I'm happy to mentor, deal with administrivia, help write our application, etc.
>
If you could help with that part, that would be awesome - the list of 
things Google wants to know is here:

http://www.google-melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply

Or we could do it together at the sprint.


For everyone who was interested, spending some time adding project ideas 
or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would 
be a good start.


From exarkun at twistedmatrix.com  Thu Feb  9 21:12:05 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 10 Feb 2012 02:12:05 -0000
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F3479C5.7090600@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
	<4F3479C5.7090600@itamarst.org>
Message-ID: <20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>

On 01:58 am, itamar at itamarst.org wrote:
>On 02/09/2012 07:38 AM, Jessica McKellar wrote:
>>I'm happy to mentor, deal with administrivia, help write our 
>>application, etc.
>If you could help with that part, that would be awesome - the list of
>things Google wants to know is here:
>
>http://www.google- 
>melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply
>
>Or we could do it together at the sprint.
>
>
>For everyone who was interested, spending some time adding project 
>ideas
>or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would
>be a good start.

Note also http://twistedmatrix.com/trac/wiki/SummerOfCode ;)

Jean-Paul


From glyph at twistedmatrix.com  Thu Feb  9 22:53:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 9 Feb 2012 22:53:54 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
	<4F3479C5.7090600@itamarst.org>
	<20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>
Message-ID: <B21581DF-6790-4F18-BF79-52EB497D3EEF@twistedmatrix.com>


On Feb 9, 2012, at 9:12 PM, exarkun at twistedmatrix.com wrote:

> On 01:58 am, itamar at itamarst.org wrote:
>> On 02/09/2012 07:38 AM, Jessica McKellar wrote:
>>> I'm happy to mentor, deal with administrivia, help write our 
>>> application, etc.
>> If you could help with that part, that would be awesome - the list of
>> things Google wants to know is here:
>> 
>> http://www.google- 
>> melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply
>> 
>> Or we could do it together at the sprint.
>> 
>> 
>> For everyone who was interested, spending some time adding project 
>> ideas
>> or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would
>> be a good start.
> 
> Note also http://twistedmatrix.com/trac/wiki/SummerOfCode ;)

Please note that that is several years old now.  (Although hey, some of those tickets never did get merged...)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120209/d38297e6/attachment.htm 

From free at 64studio.com  Fri Feb 10 03:29:15 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:29:15 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 22:15:18 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
Message-ID: <878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 22:15:18 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]
  >>Even those returning deferreds and using AsynchronousDeferredRunTest? I
  >>presume so, just asking to be sure.
  >>

  JL> Yes.

  JL> (Also, you don't get sure from asking, you get sure from trying).

True, I've taken some time to read the code and try a few experiments,
and it was an highly beneficial exercise.

I now understand that the logic that deals with tests returning
deferreds is all contained in twisted.trial.unittest.TestCase and
trial-the-test-runner doesn't basically have any knowledge in this
regards. So running a testtools.testscase.TestCase decorated with
AsynchronousDeferredRunTest is pretty much transparent.

This is a nice separation of concerns, I guess it was kind of obvious
but I had never really looked into this.

  >>Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
  >>too which I believe mimics more closely what trial currently does, so
  >>I'm not sure what the difference between AsynchronousDeferredRunTest and
  >>AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
  >>run such tests.
  >>

  JL> From the documentation:

  JL> * Trial spins the reactor a couple of times before cleaning it up,
  JL>   ``AsynchronousDeferredRunTest`` does not.  If you rely on this behavior, use
  JL>   ``AsynchronousDeferredRunTestForBrokenTwisted``.

I see, so if understand it correctly, the part that implements this
behavior in trial is the twisted.trial.util._Janitor._cleanPending
method that:

        # flush short-range timers
        reactor.iterate(0)
        reactor.iterate(0)

which I guess is always called no matter what, while in testtools this
is an optional behavior that you get by setting _OBLIGATORY_REACTOR_ITERATIONS
like AsynchronousDeferredRunTestForBrokenTwisted does.

Beside code organization/design is this the main substantial difference
between twisted.trial.unittest.TestCase and testtools.testcase.TestCase
plus AsynchronousDeferredRunTest?

Or put it in a stronger form, if there was a compatibility class inheriting
from testtools.testcase.TestCase/AsynchronousDeferredRunTestForBrokenTwisted
and providing the same API as twisted.trial.unittest.TestCase (like
assertFailure, getSkip, etc.) would it work as a seamless drop-in
replacement, at least in principle?

Cheers,

Free


From free at 64studio.com  Fri Feb 10 03:36:22 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:36:22 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Thu, 9 Feb 2012 16:20:37
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
	<CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
	<D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>
Message-ID: <874nuzdr09.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Thu, 9 Feb 2012 16:20:37 -0500, Glyph <glyph at twistedmatrix.com> said:

  [...]
  >>Right. At the time it was discouraging because I felt like there were
  >>a hundred tests to fix one at a time, then add the deprecation warning
  >>and then a year later get to my actual goal of removing the extra
  >>iterates. I don't feel that way any more.

  G> This is also a great exercise for a Twisted contributing beginner,
  G> at least, if they have some help and guidance from a mentor
  G> familiar with the issues involved.  If anyone out there is on the
  G> fence about getting involved with the project and looking for an
  G> on-ramp that involves manageable chunks of work, test maintenance
  G> fixes like these are a great place to get started.

It indeed sounds like a nice learning experience of Twisted internals,
and I presume fixing a test that relies on these reactor spins could be
tricky/fun sometimes.

If there are still hundreds of such tests this can be a long work and I
may not be able to complete it all, however if it's fine/makes sense
that I help fixing at least some of them, then I'll be glad to help.

Cheers,

Free


From free at 64studio.com  Fri Feb 10 03:43:03 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:43:03 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 22:12:34 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
Message-ID: <87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]
  >>Would you elaborate on that and explain why you come to prefer it over
  >>trial for your new projects?

  JL> That's mostly documented here:

  JL>   http://testtools.readthedocs.org/en/latest/overview.html

  JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
  JL> a bunch of unittest extensions that make it much more flexible, making
  JL> it easy to write things like parallel test runners

Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
maybe one could use all these features on top of trial's TestCase,
by using testtool's TestCase as a kind  of mixin. Not sure it'd work in
practice though.

  JL> I don't really have a summary of why ADRT is better than Trial's
  JL> deferred test support. It's largely because you get better debugging
  JL> information for failed tests (that's what "details" are all about) and
  JL> because reactor cleanup issues are more localized to individual tests
  JL> due to not having to support addCleanup and making no promises about
  JL> what happens outside of test execution.

Fair enough and good to know, thanks.

Cheers,

Free


From jml at mumak.net  Fri Feb 10 04:49:28 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 09:49:28 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnbzW+GgmQSSM-7dd3wSvZc+S5+-EDobbmuubUs+_8PAHA@mail.gmail.com>

On Fri, Feb 10, 2012 at 8:29 AM, Free Ekanayaka <free at 64studio.com> wrote:
...
> Beside code organization/design is this the main substantial difference
> between twisted.trial.unittest.TestCase and testtools.testcase.TestCase
> plus AsynchronousDeferredRunTest?
>
> Or put it in a stronger form, if there was a compatibility class inheriting
> from testtools.testcase.TestCase/AsynchronousDeferredRunTestForBrokenTwisted
> and providing the same API as twisted.trial.unittest.TestCase (like
> assertFailure, getSkip, etc.) would it work as a seamless drop-in
> replacement, at least in principle?
>

I don't see why not.

jml


From jml at mumak.net  Fri Feb 10 04:50:10 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 09:50:10 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>

On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Jonathan,
>
> |--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
>
> ?[...]
> ?>>Would you elaborate on that and explain why you come to prefer it over
> ?>>trial for your new projects?
>
> ?JL> That's mostly documented here:
>
> ?JL> ? http://testtools.readthedocs.org/en/latest/overview.html
>
> ?JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
> ?JL> a bunch of unittest extensions that make it much more flexible, making
> ?JL> it easy to write things like parallel test runners
>
> Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
> maybe one could use all these features on top of trial's TestCase,
> by using testtool's TestCase as a kind ?of mixin. Not sure it'd work in
> practice though.
>

Why would you want to?

jml


From free at 64studio.com  Fri Feb 10 06:21:57 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 12:21:57 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
	(Jonathan Lange's message of "Fri, 10 Feb 2012 09:50:10 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
Message-ID: <87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

|--==> On Fri, 10 Feb 2012 09:50:10 +0000, Jonathan Lange <jml at mumak.net> said:

  JL> On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
  >>Hi Jonathan,
  >>
  >>|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
  >>
  >>?[...]
  >>?>>Would you elaborate on that and explain why you come to prefer it over
  >>?>>trial for your new projects?
  >>
  >>?JL> That's mostly documented here:
  >>
  >>?JL> ? http://testtools.readthedocs.org/en/latest/overview.html
  >>
  >>?JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
  >>?JL> a bunch of unittest extensions that make it much more flexible, making
  >>?JL> it easy to write things like parallel test runners
  >>
  >>Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
  >>maybe one could use all these features on top of trial's TestCase,
  >>by using testtool's TestCase as a kind ?of mixin. Not sure it'd work in
  >>practice though.
  >>

  JL> Why would you want to?

Maybe be not really that, but I was mainly wondering, maybe Twisted's
trial machinery for handling tests returning deferreds could be factored
in a way that it can be re-used by AsynchronousDeferredRunTest (which
would just be glue code for integrating with testtool's TestCase). This
way testtool's twisted support would be based on twisted itself.

Not sure it's worth doing if this generalization/refactoring would lead
to more complex code, but I thought I'd mention it.


From jml at mumak.net  Fri Feb 10 06:32:17 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 11:32:17 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
	<87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnYx5mW=6O=bFWRZuh128CxU1Jceq_9u9SRJeR5kQ75Fdw@mail.gmail.com>

On Fri, Feb 10, 2012 at 11:21 AM, Free Ekanayaka <free at 64studio.com> wrote:
> |--==> On Fri, 10 Feb 2012 09:50:10 +0000, Jonathan Lange <jml at mumak.net> said:
>
> ?JL> On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
> ?>>Hi Jonathan,
> ?>>
> ?>>|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
> ?>>
> ?>>?[...]
> ?>>?>>Would you elaborate on that and explain why you come to prefer it over
> ?>>?>>trial for your new projects?
> ?>>
> ?>>?JL> That's mostly documented here:
> ?>>
> ?>>?JL> ? http://testtools.readthedocs.org/en/latest/overview.html
> ?>>
> ?>>?JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
> ?>>?JL> a bunch of unittest extensions that make it much more flexible, making
> ?>>?JL> it easy to write things like parallel test runners
> ?>>
> ?>>Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
> ?>>maybe one could use all these features on top of trial's TestCase,
> ?>>by using testtool's TestCase as a kind ?of mixin. Not sure it'd work in
> ?>>practice though.
> ?>>
>
> ?JL> Why would you want to?
>
> Maybe be not really that, but I was mainly wondering, maybe Twisted's
> trial machinery for handling tests returning deferreds could be factored
> in a way that it can be re-used by AsynchronousDeferredRunTest (which
> would just be glue code for integrating with testtool's TestCase). This
> way testtool's twisted support would be based on twisted itself.
>
> Not sure it's worth doing if this generalization/refactoring would lead
> to more complex code, but I thought I'd mention it.
>

testtools/_spinner.py could *probably* be moved into Twisted itself
without too much technical hassle. It would have to be a public API
for testtools to rely on it, but it would also have to be an API that
Twisted strongly warned against using.

Then, probably, Trial & testtools could use that. ADRT relies on the
RunTest layer of indirection that testtools has, and has code that is
genuinely useful to anyone running Twisted tests. Moving that into
Twisted would be trickier, since it would mean either duplicating or
depending on testtools.

jml


From tobias.oberstein at tavendo.de  Fri Feb 10 11:56:23 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 10 Feb 2012 08:56:23 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
Message-ID: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>

Hi there,

what is the most efficient/performant way of doing the following?

I have a short message prepared .. say a string of 100 octets.
I want to push out that _same_ string on 100k connected TCPs (on a server).

==

My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
just _once_, and then the kernel is only told to resend that buffer on the 100k
connected TCPs.

Does that make sense, is that even possible, with Twisted, or in general?

==

Currently I do the naive thing: transport.write(msg) x 100k times .. which I guess
involves quite some copying around and user to kernel space transitions ..

\Tobias


From mostawesomedude at gmail.com  Fri Feb 10 12:32:57 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 10 Feb 2012 09:32:57 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CALiqSLcRUytO+dC+eN0Kay-W16BfZkE3kj1XNi66c-sczGeeuw@mail.gmail.com>

AFAIK that's not possible in TCP, only in multicast, and the kernel
will make copies of that string no matter what, but I am highly
unknowledgeable in this area.

On 2/10/12, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> Hi there,
>
> what is the most efficient/performant way of doing the following?
>
> I have a short message prepared .. say a string of 100 octets.
> I want to push out that _same_ string on 100k connected TCPs (on a server).
>
> ==
>
> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC
> space
> just _once_, and then the kernel is only told to resend that buffer on the
> 100k
> connected TCPs.
>
> Does that make sense, is that even possible, with Twisted, or in general?
>
> ==
>
> Currently I do the naive thing: transport.write(msg) x 100k times .. which I
> guess
> involves quite some copying around and user to kernel space transitions ..
>
> \Tobias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From p.mayers at imperial.ac.uk  Fri Feb 10 12:49:26 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 10 Feb 2012 17:49:26 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F3558A6.7070008@imperial.ac.uk>

On 10/02/12 16:56, Tobias Oberstein wrote:
> Hi there,
>
> what is the most efficient/performant way of doing the following?
>
> I have a short message prepared .. say a string of 100 octets.
> I want to push out that _same_ string on 100k connected TCPs (on a server).
>
> ==
>
> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
> just _once_, and then the kernel is only told to resend that buffer on the 100k
> connected TCPs.
>
> Does that make sense, is that even possible, with Twisted, or in general?

Not really, no.

The problem is that TCP requires the sender of data to buffer so that it 
can re-send. The only way to store one copy of the data whilst doing 
this would be to store the socket buffer as a (fairly complex) linked 
list of reference-counted blocks, and use scatter-gather IO to the 
network card.

So the kernel would have to copy the data 100k times anyway, to store it 
in the per-socket buffer until it was ACKed, or maintain a large and 
complex data structure so that it could use one copy.

Therefore, by moving the work to the kernel, all you've done is consume 
valuable kernel memory, in return for saving the syscall overhead. 
Classic space/time tradeoff.

If you were using UDP, then in theory this might be possible, but there 
are no APIs that I know of, except for multicast (where you only send 
one copy of the data, and the network duplicates it).

In short; this kind of thing seems easy and desirable but actually it's 
really hard and not useful.


From tobias.oberstein at tavendo.de  Fri Feb 10 15:20:34 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 10 Feb 2012 12:20:34 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F3558A6.7070008@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>

> > what is the most efficient/performant way of doing the following?
> >
> > I have a short message prepared .. say a string of 100 octets.
> > I want to push out that _same_ string on 100k connected TCPs (on a server).
> >
> > ==
> >
> > My thinking was: ideally, the 100 bytes would be transferred to
> > kernel/NIC space just _once_, and then the kernel is only told to
> > resend that buffer on the 100k connected TCPs.
> >
> > Does that make sense, is that even possible, with Twisted, or in general?
> 
> Not really, no.
> 
> The problem is that TCP requires the sender of data to buffer so that it can re-
> send. The only way to store one copy of the data whilst doing this would be to

Resends -- oh, yes, right. Forgot about that.

> store the socket buffer as a (fairly complex) linked list of reference-counted
> blocks, and use scatter-gather IO to the network card.

Doesn't a (modern) kernel do something like that for virtual memory pages ie.?

For if processes mmap files or load shared objects, the kernel must keep track
of pages which are needed by active processes.

So in theory, if my message is 1 VM page, kernel could pin that page (make it
non-swappable etc) until all TCP ACKs have arrived ..

> In short; this kind of thing seems easy and desirable but actually it's really hard

Probably quite hard ..

> and not useful.

When using VM pages (_if_ that would be possible) and thus no data duplication,
then why not useful?

However I now can see that it's likely outside of what can be done with a stock
kernel .. if it can be done at all anyway ..

Thanks! 


From glyph at twistedmatrix.com  Fri Feb 10 16:54:54 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Feb 2012 16:54:54 -0500
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F3558A6.7070008@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
Message-ID: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>


On Feb 10, 2012, at 12:49 PM, Phil Mayers wrote:

> On 10/02/12 16:56, Tobias Oberstein wrote:
>> Hi there,
>> 
>> what is the most efficient/performant way of doing the following?
>> 
>> I have a short message prepared .. say a string of 100 octets.
>> I want to push out that _same_ string on 100k connected TCPs (on a server).
>> 
>> ==
>> 
>> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
>> just _once_, and then the kernel is only told to resend that buffer on the 100k
>> connected TCPs.
>> 
>> Does that make sense, is that even possible, with Twisted, or in general?
> 
> Not really, no.
> 
> The problem is that TCP requires the sender of data to buffer so that it 
> can re-send. The only way to store one copy of the data whilst doing 
> this would be to store the socket buffer as a (fairly complex) linked 
> list of reference-counted blocks, and use scatter-gather IO to the 
> network card.
> 
> So the kernel would have to copy the data 100k times anyway, to store it 
> in the per-socket buffer until it was ACKed, or maintain a large and 
> complex data structure so that it could use one copy.
> 
> Therefore, by moving the work to the kernel, all you've done is consume 
> valuable kernel memory, in return for saving the syscall overhead. 
> Classic space/time tradeoff.
> 
> If you were using UDP, then in theory this might be possible, but there 
> are no APIs that I know of, except for multicast (where you only send 
> one copy of the data, and the network duplicates it).
> 
> In short; this kind of thing seems easy and desirable but actually it's 
> really hard and not useful.

Not to mention the fact that inevitably, you probably are going to want some security on those connections, which means TLS, which means individual crypto connections.

I believe the best model for this kind of high-volume reliable-multicast-over-unicast is a spanning tree, like what IRC uses for server-to-server communication.  If you have 100,000 concurrent, active connections, you're already probably beyond the CPU constraints of a single machine.  So have your clients connect (via round-robin DNS, or whatever other mechanism makes sense) to a variety of different servers, then have the servers connected to each other in a pattern such that one server tells ten friends, and they each tell ten friends, and so on, until each server is only responsible for spewing out data to a reasonable number of connections (5000 maybe?).

-glyph



From myers at maski.org  Fri Feb 10 18:52:36 2012
From: myers at maski.org (Myers Carpenter)
Date: Fri, 10 Feb 2012 18:52:36 -0500
Subject: [Twisted-Python] I'm working on a SPDY implementation
Message-ID: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>

I'm working on a SPDY protocol implementation for Twisted.  I've been
keeping a hacking log here:

http://icepick.info/2012/02/10/txspdy-day-3-pyopenssl-done-now-python-code/

So far I've gotten the NPN methods added to pyopenssl, and I'm now working
on a protocol that parses the frames.

At the end of this project I hope to have a way to make a https + spdy Site
that serves up the same content for both protocols.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120210/2c92c03f/attachment.htm 

From p.mayers at imperial.ac.uk  Sat Feb 11 05:48:45 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2012 10:48:45 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
Message-ID: <4F36478D.5090905@imperial.ac.uk>

On 02/10/2012 09:54 PM, Glyph Lefkowitz wrote:

> I believe the best model for this kind of high-volume
> reliable-multicast-over-unicast is a spanning tree, like what IRC

For what it's worth, real IP multicast is quite commonly used for 
distributing short messages to many clients in realtime in some closed 
networks, such as financial trading systems. With good network equipment 
that can handle low- or zero-loss timely delivery, it does work very well.

Over the internet - less well, and even if your target networks are 
multicast-enabled, something like NORM or FEC is required to fill in the 
gaps, which inevitably adds latency.

Add to which the fact that you want your protocol to be 
congestion-control compatible, which is seriously challenging with real 
multicast, and if you want crypto you've got to have some kind of group 
ciphering system..

> uses for server-to-server communication.  If you have 100,000
> concurrent, active connections, you're already probably beyond the
> CPU constraints of a single machine.  So have your clients connect
> (via round-robin DNS, or whatever other mechanism makes sense) to a
> variety of different servers, then have the servers connected to each
> other in a pattern such that one server tells ten friends, and they
> each tell ten friends, and so on, until each server is only
> responsible for spewing out data to a reasonable number of
> connections (5000 maybe?).

I agree, this is probably the best model at the moment. It has the 
advantage that if you need to scale globally, you can push the "caching" 
nodes closer to the clients, and use geographical-aware routing to push 
clients onto closer nodes.


From _ at lvh.cc  Sat Feb 11 06:06:40 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 11 Feb 2012 12:06:40 +0100
Subject: [Twisted-Python] I'm working on a SPDY implementation
In-Reply-To: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>
References: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>
Message-ID: <CAE_Hg6bX+Pnf2ujPQKqfdLeyQ+yf35fJrs6apuE2oLkY=L4+2A@mail.gmail.com>

Woo, excellent :)

I am very excited by this project and your progress so far, keep up the
good work :)

On Sat, Feb 11, 2012 at 12:52 AM, Myers Carpenter <myers at maski.org> wrote:

> I'm working on a SPDY protocol implementation for Twisted.  I've been
> keeping a hacking log here:
>
> http://icepick.info/2012/02/10/txspdy-day-3-pyopenssl-done-now-python-code/
>
> So far I've gotten the NPN methods added to pyopenssl, and I'm now working
> on a protocol that parses the frames.
>
> At the end of this project I hope to have a way to make a https + spdy
> Site that serves up the same content for both protocols.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120211/b86ad76b/attachment.htm 

From p.mayers at imperial.ac.uk  Sat Feb 11 06:07:11 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2012 11:07:11 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>	<4F3558A6.7070008@imperial.ac.uk>
	<634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F364BDF.7080007@imperial.ac.uk>

On 02/10/2012 08:20 PM, Tobias Oberstein wrote:
>
>> store the socket buffer as a (fairly complex) linked list of reference-counted
>> blocks, and use scatter-gather IO to the network card.
>
> Doesn't a (modern) kernel do something like that for virtual memory pages ie.?

Possibly. My knowledge of kernel memory management is a lot more patchy 
than network stacks.

One option you could investigate, that I was going to suggest in my 
original reply but didn't have the time to write up, is the sendfile() 
API. If you write your message to a temporary file, you could call 
sendfile() on all 100k connections using the same file descriptor. So, 
something like:

  fd = os.open(PATH, os.O_RDWR)
  os.write(fd, message)
  os.unlink(PATH)
  for connection in biglist:
    connection.sendfile(fd, offset=0, len=100)
  os.close(fd)

Now, as I understand it, sendfile() will perform zero-copy IO; since the 
contents of the file will undoubtedly be in the page cache, it should in 
theory DMA the data straight from the (single copy of the) data in RAM 
to the NIC buffers.

It should also handle refcounting for you - you unlink the filename 
after obtaining a descriptor, and close() the FD once you've called 
sendfile, and the kernel *should* in theory free the inode and page 
containing file data once all TCP ACKs have been received.

You'll still have to make 100k syscalls, and you may find the kernel 
chooses to copy the data anyway.

However - AFAIK Twisted does not support sendfile(), and it can be 
tricky to make it work with non-blocking IO.

:o(

You may also want to look at the splice() vmsplice() and tee() syscalls 
added to recent Linux kernels. tee() in particular can copy data from 
pipe to pipe without consuming, so can be repeated multiple times. It 
may be possible to assemble something that will do this task efficiently 
from those building blocks, but the APIs aren't available in Twisted.

>> and not useful.
>
> When using VM pages (_if_ that would be possible) and thus no data duplication,
> then why not useful?

Sorry, I should have been more precise - it's probably not often useful. 
There are not very many applications where sending the same TCP stream 
to that many clients at the same time is helpful - realtime video/audio 
over TCP spring to mind, and typically those need to adapt to slow 
clients by dropping them to a lower rate i.e. not the same stream any more.

As Glyph has mentioned, encryption is also a factor in todays internet.

I'm kind of curious about what your application is!


From tobias.oberstein at tavendo.de  Sat Feb 11 07:00:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:00:42 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D597546D2@EXVMBX020-12.exch020.serverdata.net>

> Not to mention the fact that inevitably, you probably are going to want some
> security on those connections, which means TLS, which means individual crypto
> connections.

If there is a need for encryption, then yes, .. but it's not always needed

> 
> I believe the best model for this kind of high-volume reliable-multicast-over-
> unicast is a spanning tree, like what IRC uses for server-to-server

Ok. Makes sense. I see .. could have frontend nodes, which act as aggregators
condensing the messages on many incoming connections into 1 uplink TCP
connection to a backend node .. or a hierarchy.

This is quite interesting .. for I am now beginning to see why Google is
pushing the discussion on WebSocket multiplexing extension on Hybi;)

Until now, I thought that would be primarily because Chrome has a
process per tab design .. but that's probably only one reaon. The cloud
side being the other one ..

> communication.  If you have 100,000 concurrent, active connections, you're
> already probably beyond the CPU constraints of a single machine.  So have your

Not really. I've been testing up to 180k connections on a 2 core virtual machine
and when doing PubSub over those (dispatching 1 msg to all 180k) .. CPU load
isn't maxed out .. but I'm hitting a limit of around 20k/s dispatched msgs.

My suspicion is it's probably more interrupt/syscall overhead bound ..

> clients connect (via round-robin DNS, or whatever other mechanism makes
> sense) to a variety of different servers, then have the servers connected to each
> other in a pattern such that one server tells ten friends, and they each tell ten
> friends, and so on, until each server is only responsible for spewing out data to
> a reasonable number of connections (5000 maybe?).

5k is much too low .. would require too many servers. My target is 200k per node
and have as high as possible msgs/s dispatch rate.

Probably a design with frontend nodes aggregating TCP connections is inevitable ..

Thanks! 


From tobias.oberstein at tavendo.de  Sat Feb 11 07:05:29 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:05:29 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F36478D.5090905@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
	<4F36478D.5090905@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597546D3@EXVMBX020-12.exch020.serverdata.net>

> For what it's worth, real IP multicast is quite commonly used for distributing
> short messages to many clients in realtime in some closed networks, such as
> financial trading systems. With good network equipment that can handle low-
> or zero-loss timely delivery, it does work very well.

Emphasis on "good network equipment";) Yes, stuff that a) even supports IP
Multicast and b) as very low loss rate ..

If possible, I'd like to avoid IP Multicast .. just a gut feeling (have no experience
with that in practice) .. and apart from that, we currently just don't have IP Multicast
aware switches deployed ;(



From tobias.oberstein at tavendo.de  Sat Feb 11 07:37:38 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:37:38 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F364BDF.7080007@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
	<4F364BDF.7080007@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597546D4@EXVMBX020-12.exch020.serverdata.net>

> Now, as I understand it, sendfile() will perform zero-copy IO; since the contents
> of the file will undoubtedly be in the page cache, it should in theory DMA the
> data straight from the (single copy of the) data in RAM to the NIC buffers.
> 
> It should also handle refcounting for you - you unlink the filename after
> obtaining a descriptor, and close() the FD once you've called sendfile, and the
> kernel *should* in theory free the inode and page containing file data once all
> TCP ACKs have been received.
> 
> You'll still have to make 100k syscalls, and you may find the kernel chooses to
> copy the data anyway.

I see.

So using sendfile .. probably with message as file on RAMFS .. or using the Linux
syscalls you mention below, it _might_ be possible to avoid copy overhead,
but not context switching overhead .. ok.

> 
> However - AFAIK Twisted does not support sendfile(), and it can be tricky to
> make it work with non-blocking IO.

;(

Apart from that, we're on FreeBSD .. guess there are similar syscalls (maybe with
slightly different semantics) there also.

> 
> :o(
> 
> You may also want to look at the splice() vmsplice() and tee() syscalls added to
> recent Linux kernels. tee() in particular can copy data from pipe to pipe without
> consuming, so can be repeated multiple times. It may be possible to assemble
> something that will do this task efficiently from those building blocks, but the
> APIs aren't available in Twisted.

Thanks alot! This is all very interesting .. from the "tee" man page:

"""
Though we talk of copying, actual copies are generally avoided. The kernel does this by implementing a pipe buffer as a set of reference-counted pointers to pages of kernel memory. The kernel creates "copies" of pages in a buffer by creating new pointers (for the output buffer) referring to the pages, and increasing the reference counts for the pages: only pointers are copied, not the pages of the buffer. 
"""

Which sounds alot like in your other reply talking about refcounting etc .. 

For ref., these guys are talking about PACKET_MMAP

http://www.linuxquestions.org/questions/programming-9/vectored-write-to-many-sockets-with-tee-splice-915702/
http://dank.qemfd.net/dankwiki/index.php/Fast_UNIX_Servers

The former (very end of page) claims that it achieves zero-copy (which I get),
and also claims you could reduce context switch overheader for the 1 msg
TX to many clients case .. which I can't see how it's done.

> 
> >> and not useful.
> >
> > When using VM pages (_if_ that would be possible) and thus no data
> > duplication, then why not useful?
> 
> Sorry, I should have been more precise - it's probably not often useful.
> There are not very many applications where sending the same TCP stream to
> that many clients at the same time is helpful - realtime video/audio over TCP
> spring to mind, and typically those need to adapt to slow clients by dropping
> them to a lower rate i.e. not the same stream any more.
> 
> As Glyph has mentioned, encryption is also a factor in todays internet.
> 
> I'm kind of curious about what your application is!

The application is PubSub over WebSockets with massive numbers of clients ..

Application message payloads are short (<1k) and JSON/UTF-8. Those are then
framed into WebSocket messages (which basically means prepending a WS
frame header).

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From therve at free.fr  Sat Feb 11 08:35:15 2012
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Sat, 11 Feb 2012 14:35:15 +0100
Subject: [Twisted-Python] Twisted 12.0.0 released
Message-ID: <4F366E93.80804@free.fr>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 12.0.

47 tickets are closed by this release, among them:

  * A fix to the GTK2 reactor preventing unnecessary wake-ups

  * Preliminary support of IPV6 on the server side

  * Several fixes to the new protocol-based TLS implementation

  * Improved core documentation's main page

Twisted no longer supports Python 2.4, the latest supported version is 2.5.

For more information, see the NEWS file here:

  http://twistedmatrix.com/Releases/Twisted/12.0/NEWS.txt

Download it now from:

  http://pypi.python.org/packages/source/T/Twisted/Twisted-12.0.0.tar.bz2 or
 
http://pypi.python.org/packages/2.5/T/Twisted/Twisted-12.0.0.win32-py2.5.msi 
or
 
http://pypi.python.org/packages/2.6/T/Twisted/Twisted-12.0.0.win32-py2.6.msi 
or
 
http://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.0.0.win32-py2.7.msi

Thanks to the supporters of the Twisted Software Foundation and to the 
many contributors for this release.

-- 
Thomas



From dripton at ripton.net  Sat Feb 11 11:04:33 2012
From: dripton at ripton.net (David Ripton)
Date: Sat, 11 Feb 2012 11:04:33 -0500
Subject: [Twisted-Python] Twisted 12.0.0 released
In-Reply-To: <4F366E93.80804@free.fr>
References: <4F366E93.80804@free.fr>
Message-ID: <4F369191.4020006@ripton.net>

On 02/11/12 08:35, Thomas Herv? wrote:
> On behalf of Twisted Matrix Laboratories, I am honored to announce the
> release of Twisted 12.0.

Woot!  Thanks everyone.

> Twisted no longer supports Python 2.4, the latest supported version is 2.5.

s/latest/earliest/

12.0.0.pre1 has been rock solid for me for a couple of weeks, and now 
12.0.0 has been equally stable for me for a couple of minutes.

-- 
David Ripton    dripton at ripton.net


From sdl.web at gmail.com  Sat Feb 11 10:37:28 2012
From: sdl.web at gmail.com (Leo)
Date: Sat, 11 Feb 2012 23:37:28 +0800
Subject: [Twisted-Python] Twisted 12.0.0 released
References: <4F366E93.80804@free.fr>
Message-ID: <m1k43tcrev.fsf@gmail.com>

On 2012-02-11 21:35 +0800, Thomas Herv? wrote:
> On behalf of Twisted Matrix Laboratories, I am honored to announce the
> release of Twisted 12.0.

Many thanks for the hard work. I haven't started learning and using
twisted but I plan to.

Leo



From rutt.4 at osu.edu  Sat Feb 11 14:02:15 2012
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Sat, 11 Feb 2012 14:02:15 -0500
Subject: [Twisted-Python] how to ensure writes to stdout via
 stdio.StandardIO are completed before we shutdown the reactor?
In-Reply-To: <20120201060144.4064.433011759.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMWA1_pGBmFoeYimm8WXJaCdNCDCmXVwF7xoBm8o83fWW_QTGQ@mail.gmail.com>
	<20120201060144.4064.433011759.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <CAMWA1_pqDVOr-4kNoW0CyZns4bN=8QQR5SuwPF-VO1sAmDDAnA@mail.gmail.com>

That worked so well, that I was speechless for awhile.  Thanks!

On Wed, Feb 1, 2012 at 1:01 AM,  <exarkun at twistedmatrix.com> wrote:
> On 03:59 am, rutt.4 at osu.edu wrote:
>>Hi twisted community,
>>
>>What?s the best way to ensure writes to stdout via stdio.StandardIO
>>are completed before we shutdown the reactor??? The use case is to
>>emit an error message before we shutdown the reactor and stop our
>>program.? Dummy code snippet:
>
> If you call the transport's loseConnection method, then the protocol's
> connectionLost method will be called after the output buffer is
> completely written.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Benjamin Rutt


From donal.mcmullan at gmail.com  Sat Feb 11 23:13:29 2012
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 12 Feb 2012 17:13:29 +1300
Subject: [Twisted-Python] libusb-1 file descriptors
Message-ID: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>

I'm trying to integrate Twisted with libusb-1

The libusb-1 Python wrapper offers a USBPoller class to "allow
integration of USB event polling in a file-descriptor monitoring event
loop." The class expects to receive a 'poller' object, again quoting
from the documentation:

    poller is a polling instance implementing the following methods:
    - register(fd, event_flags)
      event_flags have the same meaning as in poll API (POLLIN & POLLOUT)
    - unregister(fd)
    - poll(timeout)
      timeout being a float in seconds, or None if there is no timeout.
      It must return a list of (descriptor, event) pairs.
    Note: USBPoller is itself a valid poller.

I feel like it should be obvious, but I can't see what would be the
correct way to integrate this with Twisted. My particular application
is to enable networking over the ANT+ protocol via a small USB key.

My approach is that I'm trying to write a transport. When that's
working I can start to build a Protocol. Is that sound?

Any pointers would be welcome. The USBPoller class can be viewed here:
https://github.com/vpelletier/python-libusb1/blob/master/usb1.py

Thanks

D?nal


From exarkun at twistedmatrix.com  Sun Feb 12 00:05:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Feb 2012 05:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1329023126.12.375763532@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120212/c80f05ac/attachment.htm 

From p.mayers at imperial.ac.uk  Sun Feb 12 06:10:48 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 12 Feb 2012 11:10:48 +0000
Subject: [Twisted-Python] libusb-1 file descriptors
In-Reply-To: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
References: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
Message-ID: <4F379E38.3040407@imperial.ac.uk>

On 02/12/2012 04:13 AM, Donal McMullan wrote:
> I'm trying to integrate Twisted with libusb-1
>
> The libusb-1 Python wrapper offers a USBPoller class to "allow
> integration of USB event polling in a file-descriptor monitoring event
> loop." The class expects to receive a 'poller' object, again quoting
> from the documentation:
>
>      poller is a polling instance implementing the following methods:
>      - register(fd, event_flags)
>        event_flags have the same meaning as in poll API (POLLIN&  POLLOUT)
>      - unregister(fd)
>      - poll(timeout)
>        timeout being a float in seconds, or None if there is no timeout.
>        It must return a list of (descriptor, event) pairs.
>      Note: USBPoller is itself a valid poller.
>
> I feel like it should be obvious, but I can't see what would be the
> correct way to integrate this with Twisted. My particular application
> is to enable networking over the ANT+ protocol via a small USB key.

I've only quickly scanned it, but actually it doesn't look obvious to me 
at all.

I *think* that you want to ignore USBPoller entirely; it looks like it's 
some sort of mini reactor thing, although it's not obvious to me how it 
ever DOES anything.

USBContext looks to be the "thing" that you plug in an event loop to.

However, I'm not certain (perhaps others will comment) that it makes 
sense to integrate it into the Twisted event loop - the file descriptor 
"ready" events don't seem to trigger corresponding "read" events, and 
the USB protocol implementation isn't accessible, so the Twisted model of:

  file ready event -> transport does read -> protocol dataReceived

...doesn't really apply.

It may be just as easy to write wrapper around your protocol in plain 
non-Twisted python, and talk to it from Twisted over a 
pipe/process/whatever.


From dynamicgl at gmail.com  Sun Feb 12 13:37:28 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 13 Feb 2012 02:37:28 +0800
Subject: [Twisted-Python] libusb-1 file descriptors
In-Reply-To: <4F379E38.3040407@imperial.ac.uk>
References: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
	<4F379E38.3040407@imperial.ac.uk>
Message-ID: <CABkOF6QsVmSaN1D4_G0PEZbnyij23iNUW8Gpj6qJkUwe9VeYSQ@mail.gmail.com>

On Sun, Feb 12, 2012 at 7:10 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 02/12/2012 04:13 AM, Donal McMullan wrote:
> > I'm trying to integrate Twisted with libusb-1
> >
> > The libusb-1 Python wrapper offers a USBPoller class to "allow
> > integration of USB event polling in a file-descriptor monitoring event
> > loop." The class expects to receive a 'poller' object, again quoting
> > from the documentation:
> >
> >      poller is a polling instance implementing the following methods:
> >      - register(fd, event_flags)
> >        event_flags have the same meaning as in poll API (POLLIN&
>  POLLOUT)
> >      - unregister(fd)
> >      - poll(timeout)
> >        timeout being a float in seconds, or None if there is no timeout.
> >        It must return a list of (descriptor, event) pairs.
> >      Note: USBPoller is itself a valid poller.
> >
> > I feel like it should be obvious, but I can't see what would be the
> > correct way to integrate this with Twisted. My particular application
> > is to enable networking over the ANT+ protocol via a small USB key.
>
> I've only quickly scanned it, but actually it doesn't look obvious to me
> at all.
>
> I *think* that you want to ignore USBPoller entirely; it looks like it's
> some sort of mini reactor thing, although it's not obvious to me how it
> ever DOES anything.
>
> USBContext looks to be the "thing" that you plug in an event loop to.
>
> However, I'm not certain (perhaps others will comment) that it makes
> sense to integrate it into the Twisted event loop - the file descriptor
> "ready" events don't seem to trigger corresponding "read" events, and
> the USB protocol implementation isn't accessible, so the Twisted model of:
>
>  file ready event -> transport does read -> protocol dataReceived
>
> ...doesn't really apply.
>
> It may be just as easy to write wrapper around your protocol in plain
> non-Twisted python, and talk to it from Twisted over a
> pipe/process/whatever.
>
>  the most simplest way is probably to use another thread to handle all
possible events and use twisted's thread functions to
leverage the whole system though it is inefficient.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120213/c20ab360/attachment.htm 

From tom.sheffler at gmail.com  Mon Feb 13 14:54:43 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 13 Feb 2012 11:54:43 -0800
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
Message-ID: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>

After performing a straight-forward install of pyOpenSSL I am getting the
following strange import error.  Suggestions appreciated!

# python
Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)
[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import OpenSSL
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "OpenSSL/__init__.py", line 40, in <module>
    from OpenSSL import crypto
ImportError: cannot import name crypto



Regards,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120213/c61e7bfb/attachment.htm 

From JOHN at egh.com  Mon Feb 13 15:44:50 2012
From: JOHN at egh.com (John Santos)
Date: Mon, 13 Feb 2012 15:44:50 -0500
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
In-Reply-To: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
Message-ID: <1120213152120.1057A-400000@Ives.egh.com>


Did you install pycrypto as well?  I think you need to "import Crypto" 
(uppercase "C")

I've got an application written in Twisted that uses pyOpenSSL.  It
also needs pyasn1, but I forget why.  I think the most recent version
of pycrypto required it.

My app is currently using:

  Python 2.7.1
  zope.interface-3.6.1
  Twisted 11.0.0
  pyOpenSSL-0.12
  pyasn1-0.0.11a
  pycrypto-2.3

(I'm about to try it with Twisted 12.0.0, and check for any updates of
the other packages, but it did work with at least some previous versions
of some of them.   I can try to track this down if you are stuck on an
older version of something.)

I installed them in that order.  It's running on Suse Linux Enterprise 
Server 10 SP1, if that turns out to matter.




-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539
-------------- next part --------------
After performing a straight-forward install of pyOpenSSL I am getting the

following strange import error.  Suggestions appreciated!



# python

Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)

[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2

Type "help", "copyright", "credits" or "license" for more information.

>>> import OpenSSL

Traceback (most recent call last):

  File "<stdin>", line 1, in <module>

  File "OpenSSL/__init__.py", line 40, in <module>

    from OpenSSL import crypto

ImportError: cannot import name crypto







Regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120213/96d1a066/attachment.htm 
-------------- next part --------------
_______________________________________________

Twisted-Python mailing list

Twisted-Python at twistedmatrix.com

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From George.Pajari at glentel.com  Mon Feb 13 18:30:31 2012
From: George.Pajari at glentel.com (George Pajari)
Date: Mon, 13 Feb 2012 15:30:31 -0800
Subject: [Twisted-Python] Problem with address-literals and SMTP
Message-ID: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>

We're deploying Zenoss and found that some of the email alert messages that were being delivered to Zenoss were not being properly handled. The problem turns out to be an omission in the Python Twisted SMTP class in that it cannot handle an email address that contains an address-literal (cf. Section 4.1.2 or RFC 5321), for example, zenoss@[10.100.1.192]

This is a valid mailbox address but the 8.1.0 version of the Twisted SMTP Class rejects such addresses with a "501 Syntax error". No idea if this has been fixed in more recent versions (and no time to find out for myself).

I am no Python programmer so I'm sure others can do better than this, but here is my fix for this problem:

*** smtp.py
--- smtp.py.original
***************
*** 412,423 ****
                  else:
                      # Now in domain
                      domain = ['']
-             elif atl[0] == '[':
-                 if not domain:
-                     raise AddressError, "[ encountered on LHS"
-                 elif atl[-1] != ']':
-                     raise AddressError, "Unbalanced []"
-                 atl = atl[1:-1]
              elif len(atl[0]) == 1 and not self.atomre.match(atl[0]) and atl[0] !=  '.':
                  raise AddressError, "Parse error at %r of %r" % (atl[0], (addr, atl))
              else:
--- 412,417 ----
***************
*** 627,633 ****

      # A string of quoted strings, backslash-escaped character or
      # atom characters + '@.,:'
!     qstring = r'("[^"]*"|\\.|' + atom + r'|[@.,:\[\]])+'

      mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
                           |<''' + qstring + r'''> # <addr>
--- 621,627 ----

      # A string of quoted strings, backslash-escaped character or
      # atom characters + '@.,:'
!     qstring = r'("[^"]*"|\\.|' + atom + r'|[@.,:])+'

      mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
                           |<''' + qstring + r'''> # <addr>

~~~~~
George Pajari - Glentel Inc.








From itamar at itamarst.org  Mon Feb 13 18:55:59 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 13 Feb 2012 18:55:59 -0500
Subject: [Twisted-Python] Problem with address-literals and SMTP
In-Reply-To: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
References: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
Message-ID: <4F39A30F.8010102@itamarst.org>

Could you file a ticket at twistedmatrix.com? Thanks!


From itamar at itamarst.org  Mon Feb 13 21:49:39 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 13 Feb 2012 21:49:39 -0500
Subject: [Twisted-Python] Have you had problems registering with
 twistedmatrix.com? It may be fixed now
Message-ID: <4F39CBC3.9020101@itamarst.org>

Please try it out and let me know if you can receive registration emails 
now.

-Itamar


From exarkun at twistedmatrix.com  Tue Feb 14 09:41:44 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Feb 2012 14:41:44 -0000
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
In-Reply-To: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
References: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
Message-ID: <20120214144144.4103.1680295761.divmod.xquotient.29@localhost6.localdomain6>

On 13 Feb, 07:54 pm, tom.sheffler at gmail.com wrote:
>After performing a straight-forward install of pyOpenSSL I am getting 
>the
>following strange import error.  Suggestions appreciated!
>
># python
>Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)
>[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2
>Type "help", "copyright", "credits" or "license" for more information.
>>>>import OpenSSL
>Traceback (most recent call last):
>  File "<stdin>", line 1, in <module>
>  File "OpenSSL/__init__.py", line 40, in <module>
>    from OpenSSL import crypto
>ImportError: cannot import name crypto

Notice that the complaint is about "OpenSSL/__init__.py" instead of 
something more sensible like "/usr/lib/python2.6/site- 
packages/OpenSSL/__init__.py".

You're probably testing this using a working directory inside the 
pyOpenSSL source directory, and thus getting the wrong version of the 
OpenSSL package (one that does not include the built extension modules).

Try testing in a different directory - or build the extension modules 
in-place using the -i option to distutils' build_ext command.

If this doesn't solve the problem, consider asking in a forum dedicated 
to CentOS 6 or pyOpenSSL, since the issue isn't really based on any 
software or other materials from the Twisted project.  Also, include 
more information when you do so, for example a full installation 
transcript and a manifest of installed files, otherwise it's not likely 
anyone will be able to provide a better answer.

Jean-Paul


From rogerdpack2 at gmail.com  Wed Feb 15 12:21:05 2012
From: rogerdpack2 at gmail.com (Roger Pack)
Date: Wed, 15 Feb 2012 10:21:05 -0700
Subject: [Twisted-Python] post aluminum donors
Message-ID: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>

Might be nice to post some "side page" for the aluminum level donors,
as well (not the main page, obviously).
Cheers!
-r


From glyph at twistedmatrix.com  Wed Feb 15 16:04:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 15 Feb 2012 16:04:20 -0500
Subject: [Twisted-Python] post aluminum donors
In-Reply-To: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
References: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
Message-ID: <E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>


On Feb 15, 2012, at 12:21 PM, Roger Pack wrote:

> Might be nice to post some "side page" for the aluminum level donors,
> as well (not the main page, obviously).
> Cheers!
> -r

Would you be interested in maintaining such a page? :)

-glyph


From rogerdpack2 at gmail.com  Wed Feb 15 16:20:53 2012
From: rogerdpack2 at gmail.com (Roger Pack)
Date: Wed, 15 Feb 2012 14:20:53 -0700
Subject: [Twisted-Python] post aluminum donors
In-Reply-To: <E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>
References: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
	<E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>
Message-ID: <CAL1QdWeeGNEj-fr=s7enbTj6qS6Uh5a5dV5CCBX9RF1sO4DPOg@mail.gmail.com>

> Would you be interested in maintaining such a page? :)

Are there many? Would it be hard?


From poisonoff at gmail.com  Fri Feb 17 10:16:51 2012
From: poisonoff at gmail.com (=?UTF-8?B?0JDRgNC60LDQtNC40Lkg0JvQtdCy0LjQvQ==?=)
Date: Fri, 17 Feb 2012 21:16:51 +0600
Subject: [Twisted-Python] Use epoll reactor in pypy
Message-ID: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>

Hi all, how install twisted with epoll reactor on pypy? OS Debian 6.0

Ex:

Python 2.7.1 (7773f8fc4223, Nov 18 2011, 18:47:11)
[PyPy 1.7.0 with GCC 4.4.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
And now for something completely different: ``in theory there is the Loop, in
practice there are bridges''
>>>> from twisted.internet import epollreactor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/usr/src/pypy-1.7/site-packages/Twisted-11.1.0_r33452-py2.7-linux-x86_64.egg/twisted/internet/epollreactor.py",
line 20, in <module>
    from twisted.python import log, _epoll
ImportError: cannot import name '_epoll'
>>>>


From mostawesomedude at gmail.com  Fri Feb 17 16:25:18 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 17 Feb 2012 13:25:18 -0800
Subject: [Twisted-Python] Use epoll reactor in pypy
In-Reply-To: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>
References: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>
Message-ID: <CALiqSLdVBAi5x8umvXa+mOjsM7z8+Zt3T-ZnN9bzSGKnbO6wiQ@mail.gmail.com>

The epoll extension isn't built on PyPy and so I think
http://twistedmatrix.com/trac/ticket/3114 needs to be fixed first.

2012/2/17 ??????? ????? <poisonoff at gmail.com>:
> Hi all, how install twisted with epoll reactor on pypy? OS Debian 6.0
>
> Ex:
>
> Python 2.7.1 (7773f8fc4223, Nov 18 2011, 18:47:11)
> [PyPy 1.7.0 with GCC 4.4.3] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> And now for something completely different: ``in theory there is the Loop, in
> practice there are bridges''
>>>>> from twisted.internet import epollreactor
> Traceback (most recent call last):
> ?File "<console>", line 1, in <module>
> ?File "/usr/src/pypy-1.7/site-packages/Twisted-11.1.0_r33452-py2.7-linux-x86_64.egg/twisted/internet/epollreactor.py",
> line 20, in <module>
> ? ?from twisted.python import log, _epoll
> ImportError: cannot import name '_epoll'
>>>>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From exarkun at twistedmatrix.com  Sat Feb 18 10:59:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 18 Feb 2012 15:59:31 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
Message-ID: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>

Hello all,

Since #4558 was merged, introducing "gi reactor" based on the new Python 
bindings for gobject, all testing of the Gtk2 reactor has been disabled, 
on all platforms.

This is a two-part problem.

The first part is the more damaging part, but fortunately also the more 
easily fixed part.  #4558 made it impossible to import 
`twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key. 
This seems to overlook the fact that even a *failed* import of the `gi` 
module adds such a key to that dictionary.  Since the test suite tries 
to test `gireactor`, there will always be such a key, so `gtk2reactor` 
can never be imported by the test suite.

The result is that gtk2reactor is no longer tested by buildbot on any 
platform.

The second part will show up once the first problem is fixed.  Once the 
check correctly ignores `sys.modules["gi"] == None`, it will still be 
impossible to test both gireactor and gtk2reactor in our current 
buildbot configuration.  One or the other will win, and the loser will 
be quietly skipped (apparently too quietly for most people to notice). 
Some new strategy is required so that we can test both of these reactors 
on all our supported platforms.

I hope someone will resolve the first issue quickly, perhaps this 
weekend, so that we don't drift too far away from a working gtk2reactor. 
If it isn't fixed soon, I suggest reverting the merge until the problem 
can be fixed in the #4558 branch.

Jean-Paul


From itamar at itamarst.org  Sat Feb 18 15:19:56 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 18 Feb 2012 15:19:56 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6
	>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
Message-ID: <c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>

I'll see what I can do Monday, starting with reenabling gtk2.

> Hello all,
>
> Since #4558 was merged, introducing "gi reactor" based on the new Python
> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
> on all platforms.
>
> This is a two-part problem.
>
> The first part is the more damaging part, but fortunately also the more
> easily fixed part.  #4558 made it impossible to import
> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
> This seems to overlook the fact that even a *failed* import of the `gi`
> module adds such a key to that dictionary.  Since the test suite tries
> to test `gireactor`, there will always be such a key, so `gtk2reactor`
> can never be imported by the test suite.
>
> The result is that gtk2reactor is no longer tested by buildbot on any
> platform.
>
> The second part will show up once the first problem is fixed.  Once the
> check correctly ignores `sys.modules["gi"] == None`, it will still be
> impossible to test both gireactor and gtk2reactor in our current
> buildbot configuration.  One or the other will win, and the loser will
> be quietly skipped (apparently too quietly for most people to notice).
> Some new strategy is required so that we can test both of these reactors
> on all our supported platforms.
>
> I hope someone will resolve the first issue quickly, perhaps this
> weekend, so that we don't drift too far away from a working gtk2reactor.
> If it isn't fixed soon, I suggest reverting the merge until the problem
> can be fixed in the #4558 branch.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From jstpierre at mecheye.net  Sat Feb 18 16:51:33 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 18 Feb 2012 16:51:33 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>
Message-ID: <CAA0H+QRUyoh-6C7=wjktOQ=XTNw3oJKCS4v6J-XpSxi8vQ=c3Q@mail.gmail.com>

The problem is that both modules cannot be imported simultaneously,
and that's not easily fixable (there's several barriers in there). To
test both you would have to run each test in a subprocess. Maybe you
can have a decorator to run a test in a subprocess.

On Sat, Feb 18, 2012 at 3:19 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> I'll see what I can do Monday, starting with reenabling gtk2.
>
>> Hello all,
>>
>> Since #4558 was merged, introducing "gi reactor" based on the new Python
>> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
>> on all platforms.
>>
>> This is a two-part problem.
>>
>> The first part is the more damaging part, but fortunately also the more
>> easily fixed part. ?#4558 made it impossible to import
>> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
>> This seems to overlook the fact that even a *failed* import of the `gi`
>> module adds such a key to that dictionary. ?Since the test suite tries
>> to test `gireactor`, there will always be such a key, so `gtk2reactor`
>> can never be imported by the test suite.
>>
>> The result is that gtk2reactor is no longer tested by buildbot on any
>> platform.
>>
>> The second part will show up once the first problem is fixed. ?Once the
>> check correctly ignores `sys.modules["gi"] == None`, it will still be
>> impossible to test both gireactor and gtk2reactor in our current
>> buildbot configuration. ?One or the other will win, and the loser will
>> be quietly skipped (apparently too quietly for most people to notice).
>> Some new strategy is required so that we can test both of these reactors
>> on all our supported platforms.
>>
>> I hope someone will resolve the first issue quickly, perhaps this
>> weekend, so that we don't drift too far away from a working gtk2reactor.
>> If it isn't fixed soon, I suggest reverting the merge until the problem
>> can be fixed in the #4558 branch.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
? Jasper


From exarkun at twistedmatrix.com  Sun Feb 19 00:05:38 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Feb 2012 05:05:38 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1329627938.65.2139476782@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120219/a6e92ef9/attachment.htm 

From Zoran.Bosnjak at sloveniacontrol.si  Sun Feb 19 11:49:23 2012
From: Zoran.Bosnjak at sloveniacontrol.si (=?Windows-1252?Q?Zoran_Bo=9Anjak?=)
Date: Sun, 19 Feb 2012 16:49:23 +0000
Subject: [Twisted-Python] accurate periodic call
Message-ID: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>

Hello all,
I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).

I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
- Is this monotonic_time implementation OK from python perspective?
- Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
- Does this patch have any negative influence to the rest of the reactor?
- How would you implement a periodic function call in twisted application (as accurate as possible)?
- Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?

Thanks a lot for your comments.

Zoran

#! /usr/bin/env python

from twisted.internet import task
from twisted.internet import reactor
import os
import time
import ctypes

# python MONOTONIC time, borrowed here
# http://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python
if os.name == 'posix':

    CLOCK_MONOTONIC = 1 # see <linux/time.h>

    class timespec(ctypes.Structure):
        _fields_ = [
            ('tv_sec', ctypes.c_long),
            ('tv_nsec', ctypes.c_long)
        ]

    librt = ctypes.CDLL('librt.so.1', use_errno=True)
    clock_gettime = librt.clock_gettime
    clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]

    def monotonic_time():
        t = timespec()
        if clock_gettime(CLOCK_MONOTONIC, ctypes.pointer(t)) != 0:
            errno_ = ctypes.get_errno()
            raise OSError(errno_, os.strerror(errno_))
        return t.tv_sec + t.tv_nsec * 1e-9

    # monkey patch the reactor
    reactor.seconds = monotonic_time

# TODO: check for other platforms!!
else:
    monotonic_time = time.time

def tick():
    """This function is suppose to execute once a second,
    regardless of the system time."""

    print 'tick', monotonic_time()

loop = task.LoopingCall(tick)
loop.start(1.0)

reactor.run()


From itamar at itamarst.org  Sun Feb 19 22:14:49 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Feb 2012 22:14:49 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
Message-ID: <4F41BAA9.5010709@itamarst.org>

On 02/18/2012 10:59 AM, exarkun at twistedmatrix.com wrote:
> Hello all,
>
> Since #4558 was merged, introducing "gi reactor" based on the new Python
> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
> on all platforms.
>
> This is a two-part problem.
>
> The first part is the more damaging part, but fortunately also the more
> easily fixed part.  #4558 made it impossible to import
> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
> This seems to overlook the fact that even a *failed* import of the `gi`
> module adds such a key to that dictionary.  Since the test suite tries
> to test `gireactor`, there will always be such a key, so `gtk2reactor`
> can never be imported by the test suite.
However, if you run with "trial -r gtk2" you *do* get the gtk2 tests to 
run...
> The result is that gtk2reactor is no longer tested by buildbot on any
> platform.
... and as a result the buildbot *would* be testing gtk2 except that, 
unfortunately, the fedora32-py2.5-reactors buildslave is down. Which I 
will follow up on if I can figure out who's running it.
> The second part will show up once the first problem is fixed.  Once the
> check correctly ignores `sys.modules["gi"] == None`, it will still be
> impossible to test both gireactor and gtk2reactor in our current
> buildbot configuration.  One or the other will win, and the loser will
> be quietly skipped (apparently too quietly for most people to notice).
> Some new strategy is required so that we can test both of these reactors
> on all our supported platforms.

The reactors buildslave is a reasonable strategy: have multiple runs 
with different reactors as the main trial reactor. Especially since, 
even in the absence of this problem, we'd want to continue to have full 
runs under the different reactors because the reactor mixin tests don't 
cover everything yet.



From itamar at itamarst.org  Sun Feb 19 23:14:14 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Feb 2012 23:14:14 -0500
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <4F41C896.1080401@itamarst.org>

On 02/19/2012 11:49 AM, Zoran Bo?njak wrote:
> Hello all,
> I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).
>
> I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
> - Is this monotonic_time implementation OK from python perspective?
I didn't read it in detail, but it seems vaguely plausible; overriding 
reactor.seconds is the thing to do.
> - Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
That's probably the easiest in this situation.
> - Does this patch have any negative influence to the rest of the reactor?
Everything is *supposed* to use reactor.seconds - grep for time.time and 
see if it shows up anywhere in twisted.internet.
> - How would you implement a periodic function call in twisted application (as accurate as possible)?
LoopingCall if you had this patch.
> - Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?
>
See http://twistedmatrix.com/trac/ticket/2424 - using ctypes is probably 
easier than the C extension the included patch provides.


From dynamicgl at gmail.com  Mon Feb 20 01:08:46 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 20 Feb 2012 14:08:46 +0800
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F41C896.1080401@itamarst.org>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org>
Message-ID: <CABkOF6QR+40_vu-3WvgzXqYiL55G1+QKF7ndd3mHoNz68rkP7Q@mail.gmail.com>

On Mon, Feb 20, 2012 at 12:14 PM, Itamar Turner-Trauring <
itamar at itamarst.org> wrote:

> On 02/19/2012 11:49 AM, Zoran Bo?njak wrote:
> > Hello all,
> > I was astonished to find out that looping call period depends on the
> system time by default. The periodic tick can even stall for a long time,
> if the system time jumps backwards during program execution. It turned out
> that this is in fact a python problem (not providing a monotonic time, at
> least not for posix).
> >
> > I urgently need accurate periodic call in my program and I've found the
> solution below that seems to be working. I kindly ask you for your comments:
> > - Is this monotonic_time implementation OK from python perspective?
> I didn't read it in detail, but it seems vaguely plausible; overriding
> reactor.seconds is the thing to do.
> > - Is monkey patch to the reactor OK or is there any other solution more
> appropriate in this case (I do not want to patch each looping call, but
> once in the application)?
> That's probably the easiest in this situation.
> > - Does this patch have any negative influence to the rest of the reactor?
> Everything is *supposed* to use reactor.seconds - grep for time.time and
> see if it shows up anywhere in twisted.internet.
> > - How would you implement a periodic function call in twisted
> application (as accurate as possible)?
> LoopingCall if you had this patch.
> > - Any chance to see something implemented inside twisted and/or python,
> so that applications don't need this kind of tricks?
> >
> See http://twistedmatrix.com/trac/ticket/2424 - using ctypes is probably
> easier than the C extension the included patch provides.
>
>
_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Does it work on windows??
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120220/252dc404/attachment.htm 

From solipsis at pitrou.net  Mon Feb 20 05:21:08 2012
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 20 Feb 2012 11:21:08 +0100
Subject: [Twisted-Python] accurate periodic call
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <20120220112108.6c9d7af8@pitrou.net>

On Sun, 19 Feb 2012 16:49:23 +0000
Zoran Bo?njak <Zoran.Bosnjak at sloveniacontrol.si> wrote:

> Hello all,
> I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).
> 
> I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
> - Is this monotonic_time implementation OK from python perspective?

For the record:
http://docs.python.org/dev/library/time.html#time.clock_gettime
http://docs.python.org/dev/library/time.html#time.monotonic

You'll have to fallback on the normal time when clock_gettime() fails
(which can happen if there is a mismatch between glibc version and
kernel version, for example).

clock_gettime() is a POSIX standard so you probably shouldn't use a
Linux-specific magic value for CLOCK_MONOTONIC.

Regards

Antoine.




From p.mayers at imperial.ac.uk  Mon Feb 20 07:09:28 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Feb 2012 12:09:28 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F41C896.1080401@itamarst.org>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org>
Message-ID: <4F4237F8.80408@imperial.ac.uk>

On 20/02/12 04:14, Itamar Turner-Trauring wrote:

> See http://twistedmatrix.com/trac/ticket/2424

I find that ticket disturbing reading.

The original description seems to claim there is a logic bug in 
LoopingCall that is triggered when the clock goes back, but subsequent 
discussion is all about the pros and cons of monotonic clocks.

Is there such a bug, and if so should there be a separate ticket for it?

Independent of monotonic clocks, it seems clear that LoopingCall 
stopping and never restarting is bad. Being called with the wrong 
interval is tedious, but far less serious, surely?


From exarkun at twistedmatrix.com  Mon Feb 20 09:29:56 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 14:29:56 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F4237F8.80408@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
Message-ID: <20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>

On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>See http://twistedmatrix.com/trac/ticket/2424
>
>I find that ticket disturbing reading.
>
>The original description seems to claim there is a logic bug in
>LoopingCall that is triggered when the clock goes back, but subsequent
>discussion is all about the pros and cons of monotonic clocks.
>
>Is there such a bug, and if so should there be a separate ticket for 
>it?

There is no such bug, as far as I am aware.

Jean-Paul


From exarkun at twistedmatrix.com  Mon Feb 20 10:10:05 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 15:10:05 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <4F41BAA9.5010709@itamarst.org>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
Message-ID: <20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>

On 03:14 am, itamar at itamarst.org wrote:
>On 02/18/2012 10:59 AM, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>Since #4558 was merged, introducing "gi reactor" based on the new 
>>Python
>>bindings for gobject, all testing of the Gtk2 reactor has been 
>>disabled,
>>on all platforms.
>>
>>This is a two-part problem.
>>
>>The first part is the more damaging part, but fortunately also the 
>>more
>>easily fixed part.  #4558 made it impossible to import
>>`twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
>>This seems to overlook the fact that even a *failed* import of the 
>>`gi`
>>module adds such a key to that dictionary.  Since the test suite tries
>>to test `gireactor`, there will always be such a key, so `gtk2reactor`
>>can never be imported by the test suite.
>However, if you run with "trial -r gtk2" you *do* get the gtk2 tests to
>run...
>>The result is that gtk2reactor is no longer tested by buildbot on any
>>platform.
>... and as a result the buildbot *would* be testing gtk2 except that,
>unfortunately, the fedora32-py2.5-reactors buildslave is down. Which I
>will follow up on if I can figure out who's running it.
>>The second part will show up once the first problem is fixed.  Once 
>>the
>>check correctly ignores `sys.modules["gi"] == None`, it will still be
>>impossible to test both gireactor and gtk2reactor in our current
>>buildbot configuration.  One or the other will win, and the loser will
>>be quietly skipped (apparently too quietly for most people to notice).
>>Some new strategy is required so that we can test both of these 
>>reactors
>>on all our supported platforms.
>
>The reactors buildslave is a reasonable strategy: have multiple runs
>with different reactors as the main trial reactor. Especially since,
>even in the absence of this problem, we'd want to continue to have full
>runs under the different reactors because the reactor mixin tests don't
>cover everything yet.

... with the caveat that *eventually* the mixin tests should cover 
everything, and then we will want to stop running trial with different 
-r arguments.  And perhaps the further caveat that we won't test both of 
these reactors on Windows, because we've already overloaded our Windows 
slave capacity and we can't really add more trial steps with different 
-r arguments.

Jean-Paul


From exarkun at twistedmatrix.com  Mon Feb 20 10:12:58 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 15:12:58 -0000
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <2425488.4tZL83B2Xu@i5>
References: <3290289.1zpldiYC5f@i5>
	<20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
	<2425488.4tZL83B2Xu@i5>
Message-ID: <20120220151258.3550.1316492892.divmod.xquotient.123@localhost6.localdomain6>

On 7 Feb, 12:41 am, wolfgang at rohdewald.de wrote:
>Am Montag, 6. Februar 2012, 23:12:29 schrieb exarkun at twistedmatrix.com:
>>On 08:07 pm, wolfgang at rohdewald.de wrote:
>> >Hi,
>>
>> >with twisted 11.0.0 and python 2.7, my error fails here:
>>Hello,
>>
>>Please provide a minimal example reproducing the problem so we can
>>discuss it.  See http://sscce.org/ for more details.
>
>I was hoping it would be self-evident. Trimming this to a short example
>could be rather much work. I hope the full backtrace will help.

Would anyone else like to try to construct a minimal example for this 
and file a ticket for it?  The problem *appears* to be due to the fact 
that `Exception` does not support conversion to a string when it is 
wrapped around unicode.  eg,

  >>> str(Exception(u'\N{SNOWMAN}'))
  Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
  UnicodeEncodeError: 'ascii' codec can't encode character u'\u2603' in 
position 0: ordinal not in range(128)
  >>>
Jean-Paul


From itamar at itamarst.org  Mon Feb 20 10:46:25 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 20 Feb 2012 10:46:25 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
	<20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
Message-ID: <4F426AD1.3030808@itamarst.org>

On 02/20/2012 10:10 AM, exarkun at twistedmatrix.com wrote:
> On 03:14 am, itamar at itamarst.org wrote:
>
>> The reactors buildslave is a reasonable strategy: have multiple runs
>> with different reactors as the main trial reactor. Especially since,
>> even in the absence of this problem, we'd want to continue to have full
>> runs under the different reactors because the reactor mixin tests don't
>> cover everything yet.
> ... with the caveat that *eventually* the mixin tests should cover
> everything, and then we will want to stop running trial with different
> -r arguments.  And perhaps the further caveat that we won't test both of
> these reactors on Windows, because we've already overloaded our Windows
> slave capacity and we can't really add more trial steps with different
> -r arguments.

While this is true up to a point, developers would still need to rely on 
Buildbot runs because if you're on Linux you can't test IOCP or kqueue 
locally even if ReactorMixin style tests had full coverage. So requiring 
one extra "trial -r" in a buildslave won't make a difference to 
developers; they will not be able to rely on local runs for full test 
coverage no matter what.


From nicolas.agius at lps-it.fr  Mon Feb 20 12:04:54 2012
From: nicolas.agius at lps-it.fr (Nicolas AGIUS)
Date: Mon, 20 Feb 2012 17:04:54 +0000 (GMT)
Subject: [Twisted-Python] Which mocker tool for trial ?
Message-ID: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>

Hi,

I'm writing unitests with Trial for my app.

I use Python Mocker (http://labix.org/mocker) for making stubs and mock. It work almost fine, but I have trouble mocking static methods.? It seems that Mocker does'nt work with static methods called from a callback.

Which tool are you using for mocking ?

Thanks,
Nicolas AGIUS
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120220/1487f96e/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Feb 20 12:52:09 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Feb 2012 17:52:09 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
Message-ID: <4F428849.5000906@imperial.ac.uk>

On 20/02/12 14:29, exarkun at twistedmatrix.com wrote:
> On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>> On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>> See http://twistedmatrix.com/trac/ticket/2424
>>
>> I find that ticket disturbing reading.
>>
>> The original description seems to claim there is a logic bug in
>> LoopingCall that is triggered when the clock goes back, but subsequent
>> discussion is all about the pros and cons of monotonic clocks.
>>
>> Is there such a bug, and if so should there be a separate ticket for
>> it?
>
> There is no such bug, as far as I am aware.

Phew! In which case, it's not disturbing. Thanks for the clarification.

Slightly confusing that the OP seemed to experience such a bug, but it 
was 6 years ago I guess...


From exarkun at twistedmatrix.com  Mon Feb 20 12:56:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 17:56:39 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <4F426AD1.3030808@itamarst.org>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
	<20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
	<4F426AD1.3030808@itamarst.org>
Message-ID: <20120220175639.3550.391559263.divmod.xquotient.132@localhost6.localdomain6>

On 03:46 pm, itamar at itamarst.org wrote:
>On 02/20/2012 10:10 AM, exarkun at twistedmatrix.com wrote:
>>On 03:14 am, itamar at itamarst.org wrote:
>>>The reactors buildslave is a reasonable strategy: have multiple runs
>>>with different reactors as the main trial reactor. Especially since,
>>>even in the absence of this problem, we'd want to continue to have 
>>>full
>>>runs under the different reactors because the reactor mixin tests 
>>>don't
>>>cover everything yet.
>>... with the caveat that *eventually* the mixin tests should cover
>>everything, and then we will want to stop running trial with different
>>-r arguments.  And perhaps the further caveat that we won't test both 
>>of
>>these reactors on Windows, because we've already overloaded our 
>>Windows
>>slave capacity and we can't really add more trial steps with different
>>-r arguments.
>
>While this is true up to a point, developers would still need to rely 
>on
>Buildbot runs because if you're on Linux you can't test IOCP or kqueue
>locally even if ReactorMixin style tests had full coverage.

Nor can you test them locally with "trial -r".  So... non sequitor?
>
>So requiring
>one extra "trial -r" in a buildslave won't make a difference to
>developers; they will not be able to rely on local runs for full test
>coverage no matter what.

Right.  It makes a difference to the BuildBot deployment, which may melt 
into slag under the weight of increased testing requirements.  Or, more 
seriously, it actually does make a difference to developers, because it 
extends the length of the "test on BuildBot" phase of the development 
process from 40 minutes to 80 minutes, or makes it impossible to 
complete sometimes because the extra load has knocked slaves offline, 
etc.

I feel we might be talking past each other, but I can't quite put my 
finger on how or why.  I hope this email expresses my concerns more 
clearly.

Jean-Paul


From exarkun at twistedmatrix.com  Mon Feb 20 15:13:56 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 20:13:56 -0000
Subject: [Twisted-Python] Which mocker tool for trial ?
In-Reply-To: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
References: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
Message-ID: <20120220201356.3550.73980670.divmod.xquotient.139@localhost6.localdomain6>

On 05:04 pm, nicolas.agius at lps-it.fr wrote:
>Hi,
>
>I'm writing unitests with Trial for my app.
>
>I use Python Mocker (http://labix.org/mocker) for making stubs and 
>mock. It work almost fine, but I have trouble mocking static methods. 
>It seems that Mocker does'nt work with static methods called from a 
>callback.

If Python Mocker is failing to handle some case, it's somewhat likely 
that it's not a problem caused by Twisted or Trial, but a problem with 
Python Mocker or a problem with the way you're using it.  Twisted is 
just a Python library, all of the normal Python rules still apply.
>
>Which tool are you using for mocking ?

I typically avoid mocking as a testing approach, preferring verified 
fakes due to their reduced maintenance overhead and the fewer 
metaprogramming tricks required to have them work.

Jean-Paul


From glyph at twistedmatrix.com  Mon Feb 20 15:32:19 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 20 Feb 2012 15:32:19 -0500
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F428849.5000906@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
Message-ID: <817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>


On Feb 20, 2012, at 12:52 PM, Phil Mayers wrote:

> On 20/02/12 14:29, exarkun at twistedmatrix.com wrote:
>> On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>>> On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>>> See http://twistedmatrix.com/trac/ticket/2424
>>> 
>>> I find that ticket disturbing reading.
>>> 
>>> The original description seems to claim there is a logic bug in
>>> LoopingCall that is triggered when the clock goes back, but subsequent
>>> discussion is all about the pros and cons of monotonic clocks.
>>> 
>>> Is there such a bug, and if so should there be a separate ticket for
>>> it?
>> 
>> There is no such bug, as far as I am aware.
> 
> Phew! In which case, it's not disturbing. Thanks for the clarification.
> 
> Slightly confusing that the OP seemed to experience such a bug, but it 
> was 6 years ago I guess...

Well, it depends on how you define a "bug".  LoopingCall's internal state remains consistent, but if you set your clock backwards, LoopingCall won't fire your callback again until the system clock catches up to where it previously was.  Any new LoopingCalls that are created will work fine, although they will probably report an incorrect skipCount if you set the clock forward again.

This can be quite dramatic if you change the date, of course, but if you're talking about adjustments like NTP slew it's unlikely you'll notice it.

-glyph

From johan.rydberg at edgeware.tv  Tue Feb 21 02:58:39 2012
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 21 Feb 2012 08:58:39 +0100
Subject: [Twisted-Python] Which mocker tool for trial ?
In-Reply-To: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
References: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
Message-ID: <33C438D9-4FAE-4148-B87C-E2CD15AFC716@edgeware.tv>

We're using python-mockito and it works pretty good.  I've also hacked it a bit
so that it works with zope interfaces.  See this post, which also contains a link
to the bitbucket project:

http://jrydberg.me/post/10519590583/strict-mocking-with-zope-interfaces

On Feb 20, 2012, at 6:04 PM, Nicolas AGIUS wrote:

> Which tool are you using for mocking ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120221/22966a7d/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Feb 21 06:05:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 21 Feb 2012 11:05:33 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
Message-ID: <4F437A7D.7050801@imperial.ac.uk>

On 20/02/12 20:32, Glyph wrote:

> Well, it depends on how you define a "bug".  LoopingCall's internal
> state remains consistent, but if you set your clock backwards,
> LoopingCall won't fire your callback again until the system clock
> catches up to where it previously was.  Any new LoopingCalls that are
> created will work fine, although they will probably report an
> incorrect skipCount if you set the clock forward again.

Ah. This doesn't jump out from the original ticket text; the way I read 
the text, it implies the LoopingCall stops being *scheduled* if the 
clock goes backwards.

If I'm understanding it correctly, the problem is actually that the 
callLater for the next run doesn't fire when expected, because it's 
scheduled in the "pre-change" timeframe (now the future). As opposed to 
being anything in the LoopingCall code?

I realise this is tricky to solve, but I'll note it's not impossible for 
really REALLY big clock skews to happen. For example: recently we had a 
server kernel panic and need a cold reboot. The machine booted and read 
it's time from the CMOS clock, which was way WAY out. A minute or two 
after the machine had booted, NTP slewed the clock back by months... 
Fortunately this box doesn't run any Twisted code that a) starts on boot 
and b) makes use of LoopingCall.

[I know this is horrible, but a lot of Unix distros don't sync system to 
hardware clock periodically - usually on shutdown only - and a lot of 
distros don't block boot until NTP has set the clock]

I realise it's an edge case; but at the very least, it is probably worth 
updating the LoopingCall/IReactorTime.callLater documentation to make 
this behaviour clear, because I certainly didn't appreciate this could 
occur. It's pretty obvious in hindsight, though.


From exarkun at twistedmatrix.com  Tue Feb 21 09:16:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Feb 2012 14:16:54 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F437A7D.7050801@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
	<4F437A7D.7050801@imperial.ac.uk>
Message-ID: <20120221141654.3550.1333974898.divmod.xquotient.144@localhost6.localdomain6>

On 11:05 am, p.mayers at imperial.ac.uk wrote:
>On 20/02/12 20:32, Glyph wrote:
>>Well, it depends on how you define a "bug".  LoopingCall's internal
>>state remains consistent, but if you set your clock backwards,
>>LoopingCall won't fire your callback again until the system clock
>>catches up to where it previously was.  Any new LoopingCalls that are
>>created will work fine, although they will probably report an
>>incorrect skipCount if you set the clock forward again.
>
>Ah. This doesn't jump out from the original ticket text; the way I read
>the text, it implies the LoopingCall stops being *scheduled* if the
>clock goes backwards.
>
>If I'm understanding it correctly, the problem is actually that the
>callLater for the next run doesn't fire when expected, because it's
>scheduled in the "pre-change" timeframe (now the future). As opposed to
>being anything in the LoopingCall code?
>
>I realise this is tricky to solve, but I'll note it's not impossible 
>for
>really REALLY big clock skews to happen. For example: recently we had a
>server kernel panic and need a cold reboot. The machine booted and read
>it's time from the CMOS clock, which was way WAY out. A minute or two
>after the machine had booted, NTP slewed the clock back by months...
>Fortunately this box doesn't run any Twisted code that a) starts on 
>boot
>and b) makes use of LoopingCall.

I've fixed this problem before by ensuring ntp gets to run before other 
time-sensitive services get to start.

Jean-Paul
>[I know this is horrible, but a lot of Unix distros don't sync system 
>to
>hardware clock periodically - usually on shutdown only - and a lot of
>distros don't block boot until NTP has set the clock]
>
>I realise it's an edge case; but at the very least, it is probably 
>worth
>updating the LoopingCall/IReactorTime.callLater documentation to make
>this behaviour clear, because I certainly didn't appreciate this could
>occur. It's pretty obvious in hindsight, though.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From mithrandi at mithrandi.net  Tue Feb 21 22:20:16 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 22 Feb 2012 05:20:16 +0200
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F437A7D.7050801@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
	<4F437A7D.7050801@imperial.ac.uk>
Message-ID: <CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>

On Tue, Feb 21, 2012 at 1:05 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I realise this is tricky to solve, but I'll note it's not impossible for
> really REALLY big clock skews to happen. For example: recently we had a
> server kernel panic and need a cold reboot. The machine booted and read
> it's time from the CMOS clock, which was way WAY out. A minute or two
> after the machine had booted, NTP slewed the clock back by months...

This is kind of a nitpick, but I think it's a fairly important one:
"slewing" the clock refers to a process where the clock frequency is
adjusted to make it run faster or slower in order to catch up or lose
a few seconds, without any discontinuities in the clock. This is a
relatively slow process, so "slewing" the clock by months would take
millennia; instead, beyond a certain threshold (I think a few
seconds?), ntp will always step the clock, not slew it, which is when
applications start running into difficulty as stepping introduces a
discontinuity in the clock.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From p.mayers at imperial.ac.uk  Wed Feb 22 04:21:45 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2012 09:21:45 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>	<4F41C896.1080401@itamarst.org>
	<4F4237F8.80408@imperial.ac.uk>	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>	<4F428849.5000906@imperial.ac.uk>	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>	<4F437A7D.7050801@imperial.ac.uk>
	<CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>
Message-ID: <4F44B3A9.9070901@imperial.ac.uk>

On 02/22/2012 03:20 AM, Tristan Seligmann wrote:
> On Tue, Feb 21, 2012 at 1:05 PM, Phil Mayers<p.mayers at imperial.ac.uk>  wrote:
>> I realise this is tricky to solve, but I'll note it's not impossible for
>> really REALLY big clock skews to happen. For example: recently we had a
>> server kernel panic and need a cold reboot. The machine booted and read
>> it's time from the CMOS clock, which was way WAY out. A minute or two
>> after the machine had booted, NTP slewed the clock back by months...
>
> This is kind of a nitpick, but I think it's a fairly important one:
> "slewing" the clock refers to a process where the clock frequency is

Sorry, you're quite right. Stepping, not slewing. Brain hiccup.


From jonathan+twisted at jsphere.com  Wed Feb 22 06:47:46 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Wed, 22 Feb 2012 13:47:46 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
Message-ID: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>

Hello,

I'm hoping to wrap up work on ticket #3844 [1] before the next release of Twisted, however there are a few quirks in the small DSL used for specifying text with attributes (see the ticket for some commentary on these.)

I decided to look more closely at what happens with Conch (which is where the DSL originally came from and has remained largely unchanged) in some of the places I was having problems with the IRC formatting. I was struck by something that looks like it is rather incorrect behaviour (on Twisted trunk as of 2012/2/22 and Twisted 11.0.0 on Debian):

>>> from twisted.conch.insults.helper import CharacterAttribute
>>> from twisted.conch.insults.text import flatten, attributes as A
>>> flatten(A.normal['hello', A.bold[' world '], 'quux'], CharacterAttribute())
'hello\x1b[1m world quux'

My expectations are that only " world " will be marked up with bold attributes, since it is the only piece of content in the "bold" attribute, while "hello" and "quux" both appear in normal text, i.e. without any additional markup. Looking at the output you can see that "hello" appears as normal text and then " world quux" appears in bold.

Is this the expected behaviour? There are no tests that actually test this particular case, as far as I can tell, except for twisted.conch.test.test_text.EfficiencyTestCase but that is marked as "todo" (the tests themselves do indeed fail.) While the name of this test case indicates tests for efficient markup, as far as I can tell these tests also assume (and fail) that the structure is flattened the same way I was expecting.

Any guidance would be appreciated.

Regards

[1] <http://twistedmatrix.com/trac/ticket/3844>

-- 
Jonathan




From screwtape at froup.com  Wed Feb 22 10:25:56 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 23 Feb 2012 02:25:56 +1100
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
Message-ID: <20120222152556.GO23050@boombah.thristian.org>

On Wed, Feb 22, 2012 at 01:47:46PM +0200, Jonathan Jacobs wrote:
> >>> from twisted.conch.insults.helper import CharacterAttribute
> >>> from twisted.conch.insults.text import flatten, attributes as A
> >>> flatten(A.normal['hello', A.bold[' world '], 'quux'], CharacterAttribute())
> 'hello\x1b[1m world quux'
> 
> My expectations are that only " world " will be marked up with bold
> attributes, since it is the only piece of content in the "bold"
> attribute, while "hello" and "quux" both appear in normal text, i.e.
> without any additional markup. Looking at the output you can see that
> "hello" appears as normal text and then " world quux" appears in bold.

Since it's in twisted.conch, I'm guessing that this character-attribute
stuff is designed to model the VT100 character attribute system, rather
than some generic tree-of-strings-and-attributes. For example, somebody
used to the way HTML works might want to nest bold and italics like
this:

    <i>hello <b>world</b> quux</i>

However, to achieve the same result on a traditional terminal (and using
the tput(1) command to produce the formatting codes), you'd have to do
something like this:

    tput sitm	    # enable italics
    echo -n "hello "
    tput bold	    # enable bold
    echo -n "world"
    tput sgr0	    # disable all special attributes
    tput sitm	    # enable italics again
    echo " quux"

...that is, there's no code for 'end bold' or 'end italics' (or blink, dim,
underline, invisible, any kind of colouring, etc.) just an 'end all
special attributes' code. Therefore it's reasonable for conch's helper
library to not handle nested formatting, since no terminal program will
produce such a thing, because it's impossible to represent in the
VT100/VT200 formatting language.

I guess an argument could be made that the helper function should track
which attributes are enabled at any particular point in the string, and
calculate the correct sequence of disable-everything/re-enable-the-
remaining-attributes codes, but evidently nobody's needed such a thing
before.


From jonathan+twisted at jsphere.com  Wed Feb 22 11:15:30 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Wed, 22 Feb 2012 18:15:30 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <20120222152556.GO23050@boombah.thristian.org>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
Message-ID: <CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>

On Wed, Feb 22, 2012 at 17:25, Tim Allen <screwtape at froup.com> wrote:
> ...that is, there's no code for 'end bold' or 'end italics' (or blink, dim,
> underline, invisible, any kind of colouring, etc.) just an 'end all
> special attributes' code. Therefore it's reasonable for conch's helper
> library to not handle nested formatting, since no terminal program will
> produce such a thing, because it's impossible to represent in the
> VT100/VT200 formatting language.

I understand this, but then what is the point of placing content into
A.bold in the first place? Why not just drop A.bold into a flat
stream: [foo, A.bold, bar]

What's more confusing is that there are a handful of tests that
describe this nesting and even test it, although none of them (except
for the one marked TODO, which fails because of the problem I've
described) actually test adding things to the parent level after
nesting an attribute.

> I guess an argument could be made that the helper function should track
> which attributes are enabled at any particular point in the string, and
> calculate the correct sequence of disable-everything/re-enable-the-
> remaining-attributes codes, but evidently nobody's needed such a thing
> before.

It's not actually even all that hard, there is nothing in particular
to additionally track if you don't mind being a little inefficient
about it, which is how the IRC code in #3844 does it.

-- 
Jonathan


From nicolas.agius at lps-it.fr  Wed Feb 22 17:15:58 2012
From: nicolas.agius at lps-it.fr (Nicolas AGIUS)
Date: Wed, 22 Feb 2012 22:15:58 +0000 (GMT)
Subject: [Twisted-Python] Which mocker tool for trial ?
Message-ID: <1329948958.70905.YahooMailClassic@web28411.mail.ukl.yahoo.com>

Thanks for the tips, Mockito work great with Trial.

But it's a bit lazy for my needs, I think I''ll try to use Mock (http://www.voidspace.org.uk/python/mock/)

Thx

--- En date de?: Mar 21.2.12, Johan Rydberg <johan.rydberg at edgeware.tv> a ?crit?:

De: Johan Rydberg <johan.rydberg at edgeware.tv>
Objet: Re: [Twisted-Python] Which mocker tool for trial ?
?: nicolas.agius at lps-it.fr, "Twisted general discussion" <twisted-python at twistedmatrix.com>
Date: Mardi 21 f?vrier 2012, 8h58

We're using python-mockito and it works pretty good. ?I've also hacked it a bitso that it works with zope interfaces. ?See this post, which also contains a linkto the bitbucket project:
http://jrydberg.me/post/10519590583/strict-mocking-with-zope-interfaces
On Feb 20, 2012, at 6:04 PM, Nicolas AGIUS wrote:
Which tool are you using for mocking ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120222/16a51cb1/attachment.htm 

From bino at indoakses-online.com  Thu Feb 23 04:22:31 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 23 Feb 2012 16:22:31 +0700
Subject: [Twisted-Python] Question : Failed to read gpsfake
Message-ID: <4F460557.8020300@indoakses-online.com>

Dear All ...

I try to simulate a gps with gpsfake.
gpsfake create virtual port at /dev/pts/4

my code is posted at : http://pastebin.com/j2wn1aXh

It's never reach the 'lineReceived' part.
I Got no error msg.

The log only said

2012-02-23 16:02:50+0700 [-] Log opened.
2012-02-23 16:02:50+0700 [-] twistd 11.1.0 (/usr/bin/python 2.6.6) 
starting up.
2012-02-23 16:02:50+0700 [-] reactor class: 
twisted.internet.pollreactor.PollReactor.
2012-02-23 16:02:50+0700 [-] debug : Serial Service start


Kindly please give me any enlightment about this problem

Sincerely
-bino-






From itamar at itamarst.org  Thu Feb 23 07:49:58 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 23 Feb 2012 07:49:58 -0500
Subject: [Twisted-Python] Question : Failed to read gpsfake
In-Reply-To: <4F460557.8020300@indoakses-online.com>
References: <4F460557.8020300@indoakses-online.com>
Message-ID: <4F4635F6.8040300@itamarst.org>

On 02/23/2012 04:22 AM, bino oetomo wrote:
> Dear All ...
>
> I try to simulate a gps with gpsfake.
> gpsfake create virtual port at /dev/pts/4
>
> my code is posted at : http://pastebin.com/j2wn1aXh
>
> It's never reach the 'lineReceived' part.
> I Got no error msg.
>
> The log only said
>
> 2012-02-23 16:02:50+0700 [-] Log opened.
> 2012-02-23 16:02:50+0700 [-] twistd 11.1.0 (/usr/bin/python 2.6.6)
> starting up.
> 2012-02-23 16:02:50+0700 [-] reactor class:
> twisted.internet.pollreactor.PollReactor.
> 2012-02-23 16:02:50+0700 [-] debug : Serial Service start
>
>
> Kindly please give me any enlightment about this problem

By default LineReceiver assumes you are receiving lines that end with 
'\r\n'. Are you sure that's what the fake serial port is sending? 
Possibly you want to just use a custom protocol and override 
dataReceived to begin with.


From exarkun at twistedmatrix.com  Thu Feb 23 09:12:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 14:12:26 -0000
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
	<CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
Message-ID: <20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>

On 22 Feb, 04:15 pm, jonathan+twisted at jsphere.com wrote:
>On Wed, Feb 22, 2012 at 17:25, Tim Allen <screwtape at froup.com> wrote:
>>...that is, there's no code for 'end bold' or 'end italics' (or blink, 
>>dim,
>>underline, invisible, any kind of colouring, etc.) just an 'end all
>>special attributes' code. Therefore it's reasonable for conch's helper
>>library to not handle nested formatting, since no terminal program 
>>will
>>produce such a thing, because it's impossible to represent in the
>>VT100/VT200 formatting language.
>
>I understand this, but then what is the point of placing content into
>A.bold in the first place? Why not just drop A.bold into a flat
>stream: [foo, A.bold, bar]

I think the behavior you observed is a bug in the implementation (I 
noticed it during our IRC conversation the other day as well, but wasn't 
sure if I'd made a mistake or misread something).  It should be fixed, 
and perhaps that TODO test made to pass. :)

Jean-Paul


From exarkun at twistedmatrix.com  Thu Feb 23 09:38:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 14:38:39 -0000
Subject: [Twisted-Python] Problem with address-literals and SMTP
In-Reply-To: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
References: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
Message-ID: <20120223143839.28567.1370135827.divmod.xquotient.22@localhost6.localdomain6>

On 13 Feb, 11:30 pm, george.pajari at glentel.com wrote:
>We're deploying Zenoss and found that some of the email alert messages 
>that were being delivered to Zenoss were not being properly handled. 
>The problem turns out to be an omission in the Python Twisted SMTP 
>class in that it cannot handle an email address that contains an 
>address-literal (cf. Section 4.1.2 or RFC 5321), for example, 
>zenoss@[10.100.1.192]
>
>This is a valid mailbox address but the 8.1.0 version of the Twisted 
>SMTP Class rejects such addresses with a "501 Syntax error". No idea if 
>this has been fixed in more recent versions (and no time to find out 
>for myself).
>
>I am no Python programmer so I'm sure others can do better than this, 
>but here is my fix for this problem:

Thanks.  I filed a ticket for this in our issue tracker, 
<http://tm.tl/5498>.

Jean-Paul


From jonathan+twisted at jsphere.com  Fri Feb 24 04:59:22 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Fri, 24 Feb 2012 11:59:22 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
	<CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
	<20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <CAM187SHcjBf=fhCA3rwxG=TVZi0M6u5Kz61ePHasdc2oXKOMzQ@mail.gmail.com>

On Thu, Feb 23, 2012 at 16:12,  <exarkun at twistedmatrix.com> wrote:
> I think the behavior you observed is a bug in the implementation (I
> noticed it during our IRC conversation the other day as well, but wasn't
> sure if I'd made a mistake or misread something). ?It should be fixed,
> and perhaps that TODO test made to pass. :)

Should I file a new ticket for this and do the work in a separate branch?

In terms of making the TODO test pass: Unless I'm mistaken it looks to
me that the render method (toVT102, toMIRCControlCode, etc.) will have
to be passed the current attribute state in order to determine what it
needs to emit to be most efficient. Do you see any better way to
achieve this?


From exarkun at twistedmatrix.com  Fri Feb 24 08:36:00 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Feb 2012 13:36:00 -0000
Subject: [Twisted-Python] Spam on http://twistedmatrix.com/trac/
Message-ID: <20120224133600.28567.455624195.divmod.xquotient.78@localhost6.localdomain6>

Hello all,

Just a reminder: if you see spam on the website, please let a site admin 
know about it.  Don't try to remove it unless you have proper 
administrative privileges to *completely* remove it.

Thanks!
Jean-Paul


From exarkun at twistedmatrix.com  Sun Feb 26 00:05:32 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Feb 2012 05:05:32 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1330232732.63.773941380@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120226/6e960b92/attachment.htm 

From brad.milne at devx.runthered.com  Mon Feb 27 20:48:18 2012
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Tue, 28 Feb 2012 14:48:18 +1300
Subject: [Twisted-Python] smtp sendmail DSN - NOTIFY
Message-ID: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>

Hi all

We're using the twisted.mail.smtp.sendmail(..) function to push emails. The
options one can pass to it are fairly limited. In particular I'm looking to
specify the DSN value NOTIFY=SUCCESS in the RCPT calls. Is
this implemented elsewhere in the smtp library?

(I can see mention of it missing in 2007
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015385.html)

Thanks
Brad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120228/98158d72/attachment.htm 

From exarkun at twistedmatrix.com  Tue Feb 28 08:24:09 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Feb 2012 13:24:09 -0000
Subject: [Twisted-Python] smtp sendmail DSN - NOTIFY
In-Reply-To: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>
References: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>
Message-ID: <20120228132409.4576.139118383.divmod.xquotient.43@localhost6.localdomain6>

On 01:48 am, brad.milne at devx.runthered.com wrote:
>Hi all
>
>We're using the twisted.mail.smtp.sendmail(..) function to push emails. 
>The
>options one can pass to it are fairly limited. In particular I'm 
>looking to
>specify the DSN value NOTIFY=SUCCESS in the RCPT calls. Is
>this implemented elsewhere in the smtp library?
>
>(I can see mention of it missing in 2007
>http://twistedmatrix.com/pipermail/twisted-python/2007-May/015385.html)

The SMTP protocol implementation does not yet support the DSN extension. 
Support for DSN would need to be added to the protocol, and then that 
support could be exposed via the higher-level APIs like `sendmail`.

I'm not very familiar with DSN, but I think the protocol-level 
requirements are fairly minimal - that is, most of the work of DSN does 
not happen in the SMTP conversation - so I wouldn't expect this to be a 
very difficult feature to add.  Interested in giving it a try?

Jean-Paul


From tobias.oberstein at tavendo.de  Tue Feb 28 18:42:32 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 28 Feb 2012 15:42:32 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
Message-ID: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>

I was wondering how I could protect a Twisted server from evil clients initiating,
but never completing a TLS handshake.

connectionMade is only called when the TLS handshake has completed, right?

When doing listenSSL, is there a hook which is fired right after the TCP handshake is
complete, before the TLS handshake begins, so that I can setup a callLater/dropConnection
timeout?

This is the piece I am missing, since for TCP-level protection (Syn floods etc), I can
use kernel parameters / kernel packet filtering, and for app-level protection
(I do WebSockets .. which also has a handshake) I can timeout that.

I like to do above without requiring a frontend TLS terminator / firewall ..

Thanks!

\Tobias


From itamar at itamarst.org  Tue Feb 28 21:04:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Feb 2012 21:04:12 -0500
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4D879C.4040908@itamarst.org>

On 02/28/2012 06:42 PM, Tobias Oberstein wrote:
> I was wondering how I could protect a Twisted server from evil clients initiating,
> but never completing a TLS handshake.
>
> connectionMade is only called when the TLS handshake has completed, right?
>
> When doing listenSSL, is there a hook which is fired right after the TCP handshake is
> complete, before the TLS handshake begins, so that I can setup a callLater/dropConnection
> timeout?
>
> This is the piece I am missing, since for TCP-level protection (Syn floods etc), I can
> use kernel parameters / kernel packet filtering, and for app-level protection
> (I do WebSockets .. which also has a handshake) I can timeout that.
>
> I like to do above without requiring a frontend TLS terminator / firewall ..
One thing to do (perhaps the easiest) is, instead of listenSSL, doing 
listenTCP and then startTLS in the protocol's connectionMade. This would 
let you set a timeout that calls abortConnection in connectionMade.


From mithrandi at mithrandi.net  Wed Feb 29 00:45:21 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 29 Feb 2012 07:45:21 +0200
Subject: [Twisted-Python] Buildslave upgrades
Message-ID: <CAMcKhMTC=H=tewuZn=rU2SF67KOaqpT_J-tmnC=Rj_PkMqzBZA@mail.gmail.com>

I'd like to upgrade bot-idnar-debian64 from Debian lenny (5.0) to
squeeze (6.0). I think this host was previously kept back to test
Python 2.4 support on Debian, but it looks like the only thing it's
doing now is building pyopenssl, and I don't think that particularly
needs to be tested on lenny. I'll probably wait a week or two, and if
nobody objects, go ahead with the upgrade the next time I remember
about the host.

I'm also looking into upgrading the buildbot version on both of my
slaves (bot-idnar-*) to 0.8.5.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From tobias.oberstein at tavendo.de  Wed Feb 29 03:56:23 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 29 Feb 2012 00:56:23 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <4F4D879C.4040908@itamarst.org>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<4F4D879C.4040908@itamarst.org>
Message-ID: <634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>

> > I was wondering how I could protect a Twisted server from evil clients
> > initiating, but never completing a TLS handshake.
> >
> > connectionMade is only called when the TLS handshake has completed, right?
> >
> > When doing listenSSL, is there a hook which is fired right after the
> > TCP handshake is complete, before the TLS handshake begins, so that I
> > can setup a callLater/dropConnection timeout?
> >
> > This is the piece I am missing, since for TCP-level protection (Syn
> > floods etc), I can use kernel parameters / kernel packet filtering,
> > and for app-level protection (I do WebSockets .. which also has a handshake) I
> can timeout that.
> >
> > I like to do above without requiring a frontend TLS terminator / firewall ..
> One thing to do (perhaps the easiest) is, instead of listenSSL, doing listenTCP
> and then startTLS in the protocol's connectionMade. This would let you set a
> timeout that calls abortConnection in connectionMade.

Thanks! That sounds reasonable and easy enough.

Also thanks for pointing to abortConnection() .. which is also a good thing in the context of DoS protection ..

\Tobias


From kmcintyre at greenchargenet.com  Wed Feb 29 19:16:01 2012
From: kmcintyre at greenchargenet.com (Kevin McIntyre)
Date: Wed, 29 Feb 2012 16:16:01 -0800
Subject: [Twisted-Python] ProcessMonitor stderr stdout
Message-ID: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>

Newbie question:

I'm calling addProcess and everything works well, but I'm trying to
understand how to capture/handle stderr stdout for that spawned process.

-- 

Kevin McIntyre | Software Engineer | *Green Charge Networks*

Cell 718-249-5058 | kmcintyre at greenchargenet.com | www.greenchargenet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120229/8a02cf5a/attachment.htm 

From ltaylor.volks at gmail.com  Wed Feb 29 20:49:49 2012
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 29 Feb 2012 18:49:49 -0700
Subject: [Twisted-Python] ProcessMonitor stderr stdout
In-Reply-To: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
References: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
Message-ID: <19C2A586-E256-4FDD-9676-AD8CA7D1BB62@gmail.com>


On Feb 29, 2012, at 5:16 PM, Kevin McIntyre wrote:

> Newbie question:
> 
> I'm calling addProcess and everything works well, but I'm trying to understand how to capture/handle stderr stdout for that spawned process.
> 

Look into subclassing ProcessMonitor and override startProcess to provide your own ProcessProtocol. The default implementation uses a LoggingProtocol which just logs stdout from the process.

The process howto should get you up to speed on what you can override in your ProcessProtocol (esp. outReceived() and errReceived())
http://twistedmatrix.com/documents/current/core/howto/process.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120229/e9875c16/attachment.htm 

From itamar at itamarst.org  Wed Feb 29 21:11:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 29 Feb 2012 21:11:51 -0500
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<4F4D879C.4040908@itamarst.org>
	<634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4EDAE7.9040104@itamarst.org>

On 02/29/2012 03:56 AM, Tobias Oberstein wrote:
> Thanks! That sounds reasonable and easy enough.
>
> Also thanks for pointing to abortConnection() .. which is also a good thing in the context of DoS protection ..
>
Although do note using abortConnection will restrict you to very new 
versions of Twisted.


From exarkun at twistedmatrix.com  Wed Feb 29 09:12:47 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 14:12:47 -0000
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>

On 28 Feb, 11:42 pm, tobias.oberstein at tavendo.de wrote:
>I was wondering how I could protect a Twisted server from evil clients 
>initiating,
>but never completing a TLS handshake.
>
>connectionMade is only called when the TLS handshake has completed, 
>right?

Actually, this is not right.  It's sort of a wart, but connectionMade is 
called when the underlying TCP connection is established.  The TLS 
handshake will always complete at some later time.

One reason we (or at least I) have not yet really tried to change this 
is that doing so would make it harder to address just the problem you're 
talking about.

Jean-Paul
>When doing listenSSL, is there a hook which is fired right after the 
>TCP handshake is
>complete, before the TLS handshake begins, so that I can setup a 
>callLater/dropConnection
>timeout?
>
>This is the piece I am missing, since for TCP-level protection (Syn 
>floods etc), I can
>use kernel parameters / kernel packet filtering, and for app-level 
>protection
>(I do WebSockets .. which also has a handshake) I can timeout that.
>
>I like to do above without requiring a frontend TLS terminator / 
>firewall ..
>
>Thanks!
>
>\Tobias


From tenth at twistedmatrix.com  Wed Feb  1 10:09:19 2012
From: tenth at twistedmatrix.com (Tenth)
Date: Wed, 1 Feb 2012 12:09:19 -0500
Subject: [Twisted-Python]  February Twisted Sprint
Message-ID: <CAKJpRM1TQkMDXsq++D6iQ_pZd5gV8wN4oNY6cS_vwqQCUzgTeg@mail.gmail.com>

Itamar has generously offered to host this month's Boston Twisted Sprint!

Thus it will be happening at his place, near Porter Square, on Saturday,
February 11th, from 1:00 PM to 9:00 PM.

An evite has gone out to the usual suspects, but if you'd like to be added
(or removed from) that list, or would like more information about this or
other Boston Sprints, let me know!

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120201/76fb602d/attachment-0001.html>

From yueyoum at gmail.com  Thu Feb  2 18:43:14 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Fri, 3 Feb 2012 09:43:14 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
Message-ID: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>

Hi, all

I'm a new guy for twisted,
I just study the example of finger14.tac
at this page :
http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html

But,  *startService* not called when program running.


Please help,  thanks.


Code like bellow:


class FingerService(service.Service):

...
def startService(self):

print 'start service'
self.test_call()
service.Service.startService(self)



Noting output ,and test_call()  not called.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120203/221ff0cf/attachment-0001.html>

From exarkun at twistedmatrix.com  Thu Feb  2 20:05:06 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Feb 2012 03:05:06 -0000
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
Message-ID: <20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>

On 01:43 am, yueyoum at gmail.com wrote:
>Hi, all
>
>I'm a new guy for twisted,
>I just study the example of finger14.tac
>at this page :
>http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html
>
>But,  *startService* not called when program running.

Services are only started if they're added to the application object. 
Did you use setServiceParent to make the application object the parent 
of your service?

Jean-Paul



From yueyoum at gmail.com  Thu Feb  2 23:11:46 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Fri, 3 Feb 2012 14:11:46 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
Message-ID: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>

Thanks for reply

Yes, of course.

I followed the turotial ,




_______________________________


class FingerService(service.Service):
    ...
    def startService(self):
        print 'start service'
        ....

application = service.Application('finger')
f = FingerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(9000, f.get_FingerFactory()
                            ).setServiceParent(serviceCollection)






2012/2/3 <exarkun at twistedmatrix.com>

> On 01:43 am, yueyoum at gmail.com wrote:
> >Hi, all
> >
> >I'm a new guy for twisted,
> >I just study the example of finger14.tac
> >at this page :
> >
> http://twistedmatrix.com/documents/current/core/howto/tutorial/protocol.html
> >
> >But,  *startService* not called when program running.
>
> Services are only started if they're added to the application object.
> Did you use setServiceParent to make the application object the parent
> of your service?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120203/6e1c20cb/attachment.html>

From itamar at itamarst.org  Fri Feb  3 05:44:44 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 03 Feb 2012 07:44:44 -0500
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
Message-ID: <4F2BD6BC.6080709@itamarst.org>

On 02/03/2012 01:11 AM, 月忧茗 wrote:
> Thanks for reply
>
> Yes, of course.
>
> I followed the turotial ,
>

And you ran the file using "twistd -y finger14.tac"? If you did it like 
that, output may not be visible since the program is daemonized by 
default. -n option will keep it from daemonizing, and then you can see 
output on stdout.



From exarkun at twistedmatrix.com  Fri Feb  3 16:20:43 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Feb 2012 23:20:43 -0000
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
Message-ID: <20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>

On 06:11 am, yueyoum at gmail.com wrote:
>Thanks for reply
>
>Yes, of course.
>
>I followed the turotial ,
>
>class FingerService(service.Service):
>    ...
>    def startService(self):
>        print 'start service'
>        ....
>
>application = service.Application('finger')
>f = FingerService()
>serviceCollection = service.IServiceCollection(application)
>internet.TCPServer(9000, f.get_FingerFactory()
>                            ).setServiceParent(serviceCollection)

Notice that nowhere here does `f` get attached to `application`.  You 
need this:

    f.setServiceParent(application)

Jean-Paul



From yueyoum at gmail.com  Fri Feb  3 23:05:18 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Sat, 4 Feb 2012 14:05:18 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
	<20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
Message-ID: <CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>

Oh,  Thanks !
It works!


application = service.Application('finger')
f = FingerService()
f.setServiceParent(application)
internet.TCPServer(9000, f.get_FingerFactory())




2012/2/4 <exarkun at twistedmatrix.com>

> On 06:11 am, yueyoum at gmail.com wrote:
> >Thanks for reply
> >
> >Yes, of course.
> >
> >I followed the turotial ,
> >
> >class FingerService(service.Service):
> >    ...
> >    def startService(self):
> >        print 'start service'
> >        ....
> >
> >application = service.Application('finger')
> >f = FingerService()
> >serviceCollection = service.IServiceCollection(application)
> >internet.TCPServer(9000, f.get_FingerFactory()
> >                            ).setServiceParent(serviceCollection)
>
> Notice that nowhere here does `f` get attached to `application`.  You
> need this:
>
>    f.setServiceParent(application)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120204/099d177d/attachment-0001.html>

From yueyoum at gmail.com  Fri Feb  3 23:12:32 2012
From: yueyoum at gmail.com (=?GB2312?B?1MLTx9z4?=)
Date: Sat, 4 Feb 2012 14:12:32 +0800
Subject: [Twisted-Python] help me on startService ( service.Service )
In-Reply-To: <CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>
References: <CALZWPGjzqnXbDOJnEogy4Ze72X4wG=At0mCT34+g2oMq9oB+Eg@mail.gmail.com>
	<20120203030506.4064.1501859852.divmod.xquotient.21@localhost6.localdomain6>
	<CALZWPGimqdXPT50D9ubOBXqdLO=CzSrcduYN0ZGCnuNbL62xEg@mail.gmail.com>
	<20120203232043.4064.1075428515.divmod.xquotient.26@localhost6.localdomain6>
	<CALZWPGiiZShiL1r1OYrULw-wT4KJZi7TdKkpfjqgfXQ9+N9Sng@mail.gmail.com>
Message-ID: <CALZWPGiuihARTrA-qHjxgZbDoVczBBdkykgM=AUHw60F4+h6hQ@mail.gmail.com>

Sorry,

It should be this:


application = service.Application('finger')
f = FingerService()
f.setServiceParent(application)

serviceCollection = service.IServiceCollection(application)
internet.TCPServer(9000, f.get_FingerFactory()
                            ).setServiceParent(serviceCollection)


2012/2/4 月忧茗 <yueyoum at gmail.com>

>
> Oh,  Thanks !
> It works!
>
>
> application = service.Application('finger')
> f = FingerService()
> f.setServiceParent(application)
> internet.TCPServer(9000, f.get_FingerFactory())
>
>
>
>
> 2012/2/4 <exarkun at twistedmatrix.com>
>
> On 06:11 am, yueyoum at gmail.com wrote:
>> >Thanks for reply
>> >
>> >Yes, of course.
>> >
>> >I followed the turotial ,
>> >
>> >class FingerService(service.Service):
>> >    ...
>> >    def startService(self):
>> >        print 'start service'
>> >        ....
>> >
>> >application = service.Application('finger')
>> >f = FingerService()
>> >serviceCollection = service.IServiceCollection(application)
>> >internet.TCPServer(9000, f.get_FingerFactory()
>> >                            ).setServiceParent(serviceCollection)
>>
>> Notice that nowhere here does `f` get attached to `application`.  You
>> need this:
>>
>>    f.setServiceParent(application)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120204/a3817097/attachment.html>

From moijes12 at gmail.com  Sat Feb  4 00:37:42 2012
From: moijes12 at gmail.com (moses dsouza)
Date: Sat, 4 Feb 2012 13:07:42 +0530
Subject: [Twisted-Python] regarding #5412
Message-ID: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>

Hi

Is this #5412 valid ? I ask because there aren't any comments against this
bug. I'll provide a patch on confirmation.

regards
moijes12
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120204/d44b8054/attachment.html>

From ivan at ludios.org  Sat Feb  4 01:31:55 2012
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 4 Feb 2012 08:31:55 +0000
Subject: [Twisted-Python] regarding #5412
In-Reply-To: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>
References: <CAKkXvcYaUb3P35xwm-LCzDcKvw91tUeGLnYWnz8w8A6N7RrBTg@mail.gmail.com>
Message-ID: <CAKynti+uTH7TGA5aD-Tw4bk0027cYLBdpnHbBWs88jv3o=zpfQ@mail.gmail.com>

On Sat, Feb 4, 2012 at 07:37, moses dsouza <moijes12 at gmail.com> wrote:
> Hi
>
> Is this #5412 valid ? I ask because there aren't any comments against this
> bug. I'll provide a patch on confirmation.

Rejecting unicode data earlier is almost always a good thing, so a
patch would be welcome.

Take a look at this if you haven't already:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Ivan



From exarkun at twistedmatrix.com  Sat Feb  4 22:05:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Feb 2012 05:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1328418326.22.997792749@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120205/a5f4d3eb/attachment-0001.html>

From jml at mumak.net  Mon Feb  6 08:48:01 2012
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 6 Feb 2012 15:48:01 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
Message-ID: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>

Hello,

I'm the nominal maintainer of Trial. I'm also an active maintainer of
testtools[1].

testtools is, roughly speaking, a base TestCase that works across a
bunch of Pythons and has a few nice features[2]. I started to prefer
it over Twisted's TestCase some time ago, and now use it pretty
consistently, even for my Twisted code.

testtools has a way of letting you run tests within the Twisted
reactor, without needing to use a particular base class. For example::

  class MyTests(TestCase):
    run_tests_with = AsynchronousDeferredRunTest

    def test_foo(self):
      ...
      return some_deferred

Or::

  class MyTests(TestCase):
    def test_ordinary_thing(self):
      ...
    @run_test_with(AsynchronousDeferredRunTest)
    def test_twisted_thing(self):
      ...
      return some_deferred

It doesn't behave exactly the way Trial does. Freed from backwards
compatibility constraints, I tightened up the implementation quite a
bit. There are options to make it emulate Trial's behaviour[3].

The documentation says that it's "highly experimental". This is not
strictly true any more, as it has been used in numerous projects and
has been found to be quite robust.

The key source code is at::
  http://bazaar.launchpad.net/~testtools-committers/testtools/trunk/view/head:/testtools/deferredruntest.py
  http://bazaar.launchpad.net/~testtools-committers/testtools/trunk/view/head:/testtools/_spinner.py

And you can get the code from PyPI or Launchpad[4].

testtools has had this feature for some time now. It's past time that
I officially informed the Twisted community about it. That's the main
reason for this email.

In my ideal world, Twisted's TestCase would inherit from testtools's
TestCase and would continue to provide the same API it does today.
This might not be everyone else's ideal though, and the path from here
to there is unclear to me. I welcome your thoughts.

cheers,
jml


[1] http://testtools.rtfd.org ; http://pypi.python.org/pypi/testtools
[2] http://testtools.readthedocs.org/en/latest/overview.html
[3] http://testtools.readthedocs.org/en/latest/for-test-authors.html#twisted-support
[4] bzr branch lp:testtools



From glyph at twistedmatrix.com  Mon Feb  6 11:37:50 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Feb 2012 13:37:50 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
Message-ID: <85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>

On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:

> In my ideal world, Twisted's TestCase would inherit from testtools's
> TestCase and would continue to provide the same API it does today.
> This might not be everyone else's ideal though, and the path from here
> to there is unclear to me. I welcome your thoughts.

Users still routinely struggle with the one dependency we allowed Twisted core to have - zope.interface. I do still think that's worth it, since it freed us from a significant and complex maintenance burden.  And I do sometimes wish that we could make it an optional or bundled dependency, to give users who have to download Twisted themselves a gentler on-ramp.  By your own admission, however, the person who should be doing maintenance on trial and the person doing maintenance on testtools are mostly the same guy :-).

While testtools' features are nice, and I will likely even elect to use myself it for testing some Twisted applications in the future, I would set the bar very high for making testtools a required dependency for Twisted's own test suite.  Just for starters, the Python packaging ecosystem disaster would need to be fixed; also, the name of the package should be changed to be more unique so that users wouldn't find things like <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when searching around the web for the contents of the inevitable packaging error message.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120206/a3d9d898/attachment.html>

From jml at mumak.net  Mon Feb  6 12:01:30 2012
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 6 Feb 2012 19:01:30 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
Message-ID: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>

On Mon, Feb 6, 2012 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:
>
> In my ideal world, Twisted's TestCase would inherit from testtools's
> TestCase and would continue to provide the same API it does today.
> This might not be everyone else's ideal though, and the path from here
> to there is unclear to me. I welcome your thoughts.
>
>
...
> While testtools' features are nice, and I will likely even elect to use
> myself it for testing some Twisted applications in the future, I would set
> the bar very high for making testtools a required dependency for Twisted's
> own test suite.

I highly recommend trying it out.

>  Just for starters, the Python packaging ecosystem disaster
> would need to be fixed;

As much as I would like to see that happen, I am not ever going to do
anything about it.

> also, the name of the package should be changed to
> be more unique so that users wouldn't find things like
> <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when
> searching around the web for the contents of the inevitable packaging error
> message.
>

We've already renamed once (from pyunit3k). Would consider renaming
again if someone suggested something sufficiently good.

Thanks for the reply.

jml



From glyph at twistedmatrix.com  Mon Feb  6 12:54:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 6 Feb 2012 14:54:54 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
Message-ID: <772B80F4-52CA-4EFA-98A8-88FE7973724E@twistedmatrix.com>


On Feb 6, 2012, at 2:01 PM, Jonathan Lange wrote:

> On Mon, Feb 6, 2012 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> On Feb 6, 2012, at 10:48 AM, Jonathan Lange wrote:
>> 
>> In my ideal world, Twisted's TestCase would inherit from testtools's
>> TestCase and would continue to provide the same API it does today.
>> This might not be everyone else's ideal though, and the path from here
>> to there is unclear to me. I welcome your thoughts.
>> 
>> 
> ...
>> While testtools' features are nice, and I will likely even elect to use
>> myself it for testing some Twisted applications in the future, I would set
>> the bar very high for making testtools a required dependency for Twisted's
>> own test suite.
> 
> I highly recommend trying it out.

In my copious spare time :).

>>  Just for starters, the Python packaging ecosystem disaster
>> would need to be fixed;
> 
> As much as I would like to see that happen, I am not ever going to do
> anything about it.

You and me both.

>> also, the name of the package should be changed to
>> be more unique so that users wouldn't find things like
>> <http://www.testtools.com/> and <https://github.com/ferruhy/testtools> when
>> searching around the web for the contents of the inevitable packaging error
>> message.
>> 
> 
> We've already renamed once (from pyunit3k). Would consider renaming
> again if someone suggested something sufficiently good.
> 
> Thanks for the reply.

No problem; thanks for your message!


From wolfgang at rohdewald.de  Mon Feb  6 13:07:25 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 06 Feb 2012 21:07:25 +0100
Subject: [Twisted-Python] CopyableFailure fails
Message-ID: <3290289.1zpldiYC5f@i5>

Hi, 

with twisted 11.0.0 and python 2.7, my error fails here:

  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-
x86_64.egg/twisted/spread/pb.py", line 407, in getStateToCopy
    state['value'] = str(self.value) # Exception instance
exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\u201e' 
in position 10: ordinal not in range(128)

this bug hides my own bug, giving me no useful backtrace.

simple fix:

--- x   2012-02-06 21:05:33.907228573 +0100
+++ pb.py       2012-02-06 21:05:36.923228461 +0100
@@ -404,7 +404,7 @@
         if isinstance(self.value, failure.Failure):
             state['value'] = failure2Copyable(self.value, 
self.unsafeTracebacks)
         else:
-            state['value'] = str(self.value) # Exception instance
+            state['value'] = repr(self.value) # Exception instance
         if isinstance(self.type, str):
             state['type'] = self.type
         else:


-- 
Wolfgang



From wolfgang at rohdewald.de  Mon Feb  6 14:29:26 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 06 Feb 2012 22:29:26 +0100
Subject: [Twisted-Python] safe_str is not safe
Message-ID: <1955085.3s00IEhm95@i5>

after patching CopyableFailure as written,

the stack trace now ends with the following lines. The correct
exception message is still not shown. It contains unicode chars
which reflect.py/safe_str cannot handle.

  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 170, in 
initRuleset
    raise Exception(m18n('ruleset "%1" not found', self.name))
exceptions.Exception: <Exception instance at 0x30e8b48 with str error:
 'Traceback (most recent call last):\n  File "/usr/local/lib/python2.7/dist-
packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/python/reflect.py", line 
546, in _safeFormat\n    return formatter(o)\nUnicodeEncodeError: \'ascii\' 
codec can\'t encode character u\'\\u201e\' in position 10: ordinal not in 
range(128)\n'>
Unhandled error in Deferred:


after replacing safe_str by safe_repr in twisted/python/failure.py,

I finally get a meaningful printout:
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 170, in 
initRuleset
    raise Exception(m18n('ruleset "%1" not found', self.name))
exceptions.Exception: Exception(u'Regelsatz 
\u201e55a8a17e29a1a087cc8df9cedb5590cd\u201c nicht gefunden',)
Unhandled error in Deferred:

of course a correct encoding would be even better...
my patch:

--- failure.org 2012-02-06 22:22:46.395065076 +0100
+++ failure.py  2012-02-06 22:22:51.259064816 +0100
@@ -472,7 +472,7 @@
         """Get a string of the exception which caused this Failure."""
         if isinstance(self.value, Failure):
             return self.value.getErrorMessage()
-        return reflect.safe_str(self.value)
+        return reflect.safe_repr(self.value)
 
     def getBriefTraceback(self):
         io = StringIO()
@@ -517,7 +517,7 @@
             w("%s: %s: %s\n" % (
                     hasFrames,
                     reflect.safe_str(self.type),
-                    reflect.safe_str(self.value)))
+                    reflect.safe_repr(self.value)))
         else:
             w( 'Traceback (most recent call last):\n')
 
@@ -542,7 +542,7 @@
                 w(self.type + "\n")
             else:
                 w("%s: %s\n" % (reflect.qual(self.type),
-                                reflect.safe_str(self.value)))
+                                reflect.safe_repr(self.value)))
         # chaining
         if isinstance(self.value, Failure):
             # TODO: indentation for chained failures?

-- 
Wolfgang



From exarkun at twistedmatrix.com  Mon Feb  6 16:12:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 06 Feb 2012 23:12:29 -0000
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <3290289.1zpldiYC5f@i5>
References: <3290289.1zpldiYC5f@i5>
Message-ID: <20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>

On 08:07 pm, wolfgang at rohdewald.de wrote:
>Hi,
>
>with twisted 11.0.0 and python 2.7, my error fails here:

Hello,

Please provide a minimal example reproducing the problem so we can 
discuss it.  See http://sscce.org/ for more details.

Thanks,
Jean-Paul



From wolfgang at rohdewald.de  Mon Feb  6 17:41:20 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 07 Feb 2012 01:41:20 +0100
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
References: <3290289.1zpldiYC5f@i5>
	<20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
Message-ID: <2425488.4tZL83B2Xu@i5>

Am Montag, 6. Februar 2012, 23:12:29 schrieb exarkun at twistedmatrix.com:
> On 08:07 pm, wolfgang at rohdewald.de wrote:
> >Hi,
> 
> >with twisted 11.0.0 and python 2.7, my error fails here:
> Hello,
> 
> Please provide a minimal example reproducing the problem so we can 
> discuss it.  See http://sscce.org/ for more details.

I was hoping it would be self-evident. Trimming this to a short example 
could be rather much work. I hope the full backtrace will help.

anyway I overlooked the fact that two backtraces are printed where
the first on gives me my own calling stack. But the second one
(UnicodeEncodeError) should not happen IMHO, and it does not with my patch.

Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 1348, in remote_respond
    d = self.portal.login(self, mind, IPerspective)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/cred/portal.py", line 116, in login
    ).addCallback(self.realm.requestAvatar, mind, *interfaces
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 297, in addCallback
    callbackKeywords=kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 286, in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 542, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 956, in requestAvatar
    avatar.attached(mind)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 908, in attached
    self.server.login(self)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 717, in login
    self.loadSuspendedTables(user)
  File "/hdd/pub/src/gitgames/kajongg/src/server.py", line 889, in loadSuspendedTables
    table = Table(self, None, Ruleset.cached(ruleset, used=True), playOpen, autoPlay=False, seed=seed)
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 77, in cached
    result = Ruleset(name, used)
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 110, in __init__
    self.initRuleset()
  File "/hdd/pub/src/gitgames/kajongg/src/scoringengine.py", line 167, in initRuleset
    raise Exception(u'just one unicode char:ä')
exceptions.Exception: Exception(u'just one unicode char:\xe4',)
fail: <twisted.spread.pb.CopyableFailure <type 'exceptions.Exception'>>
Unhandled error in Deferred:
Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 515, in expressionReceived
    method(*sexp[1:])
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 827, in proto_message
    self._recvMessage(self.localObjectForID, requestID, objectID, message, answerRequired, netArgs, netKw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 865, in _recvMessage
    callbackArgs=args, errbackArgs=args)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 286, in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/internet/defer.py", line 542, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 896, in _sendFailureOrError
    self._sendFailure(fail, requestID)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 905, in _sendFailure
    self._sendError(fail, requestID)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 921, in _sendError
    self.sendCall("error", requestID, self.serialize(fail))
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 764, in serialize
    return jelly(object, self.security, None, self)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/jelly.py", line 1122, in jelly
    return _Jellier(taster, persistentStore, invoker).jelly(object)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/jelly.py", line 475, in jelly
    return obj.jellyFor(self)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/flavors.py", line 299, in jellyFor
    state = self.getStateToCopyFor(p)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/flavors.py", line 267, in getStateToCopyFor
    return self.getStateToCopy()
  File "/usr/local/lib/python2.7/dist-packages/Twisted-11.0.0-py2.7-linux-x86_64.egg/twisted/spread/pb.py", line 407, in getStateToCopy
    state['value'] = str(self.value) # Exception instance
exceptions.UnicodeEncodeError: UnicodeEncodeError('ascii', u'just one unicode char:\xe4', 22, 23, 'ordinal not in range(128)')


-- 
Wolfgang



From free at 64studio.com  Tue Feb  7 13:49:54 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 07 Feb 2012 21:49:54 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	(Jonathan Lange's message of "Mon, 6 Feb 2012 19:01:30 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
Message-ID: <8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]

  JL> As much as I would like to see that happen, I am not ever going to do
  JL> anything about it.

So what position can the Twisted project realistically take? Keep using
trial for testing Twisted itself, but recommending projects based
on twisted to use testtools instead (and deprecating trial somehow)?

Also, from what I had heard it'd be technically not possible to provide
a compatibility layer, is that accurate?

Personally, if testtools ever becomes the blessed tool for testing
twisted-based projects, I would not mind at all to have to replace

from twisted.trial.unittest import TestCase

with something like

from testtools.trial import TestCase

in my tests (where testtools.trial.TestCase clearly provides a
compatibility layer with twisted.trial.unittest.TestCase implemented on
top of testtools). At least for getting me going, and maybe gradually
transition to pure testtools.

However it'd be good if Twisted took a clear position on this, because
the risk is to see trial languishing and testtools never really taking
off (assuming that testtools is the way to go, which is your thinking
afaiu).

Cheers,

Free



From penxiao at cisco.com  Tue Feb  7 19:04:48 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Wed, 8 Feb 2012 10:04:48 +0800
Subject: [Twisted-Python] How to Control Twisted Program through CLI
Message-ID: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>

Hi experts,

 

I have one twisted program, and it used to connected some servers through reactor.connectTCP(),

And now, when the program is running, I want to add another connection or disconnect one connection already has through reactor.connectTCP(), how can I do that?

 

Best

Regards,

 

Xiao Peng(肖鹏)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120208/fd8ffd1e/attachment.html>

From glyph at twistedmatrix.com  Tue Feb  7 20:49:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 7 Feb 2012 22:49:04 -0500
Subject: [Twisted-Python] How to Control Twisted Program through CLI
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20257D84F@XMB-HKG-41B.cisco.com>
Message-ID: <70155DE9-0870-4CAC-9F14-F022E602C8D8@twistedmatrix.com>


On Feb 7, 2012, at 9:04 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts,
>  
> I have one twisted program, and it used to connected some servers through reactor.connectTCP(),
> And now, when the program is running, I want to add another connection or disconnect one connection already has through reactor.connectTCP(), how can I do that?
>  

Call reactor.connectTCP() again to make a new connection.  This works at any time, not just before the reactor is run.

Call self.transport.loseConnection() to terminate a connection from within a Protocol class.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120207/8d16f0bb/attachment.html>

From glyph at twistedmatrix.com  Wed Feb  8 00:05:22 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 8 Feb 2012 02:05:22 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>

On Feb 7, 2012, at 3:49 PM, Free Ekanayaka wrote:

> Hi Jonathan,
> 
> |--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:
> 
>  [...]
> 
>  JL> As much as I would like to see that happen, I am not ever going to do
>  JL> anything about it.
> 
> So what position can the Twisted project realistically take? Keep using
> trial for testing Twisted itself, but recommending projects based
> on twisted to use testtools instead (and deprecating trial somehow)?

The position that Twisted can take is that Trial is awesome and you should use Trial.  testtools is a separate project, and you may elect to use it to enhance your trial experience.

> Also, from what I had heard it'd be technically not possible to provide
> a compatibility layer, is that accurate?

It's already compatible, as Jonathan said.  You can just use the trial runner with testtools tests.

> Personally, if testtools ever becomes the blessed tool for testing
> twisted-based projects, I would not mind at all to have to replace

For a nominal donation to the project, someone from the Twisted project can come to your office, put on some ridiculous priest costume and sanctify whatever toolchain you want to use. ;-)

> However it'd be good if Twisted took a clear position on this,

Nope.  We write software, not position papers :).

> because the risk is to see trial languishing and testtools never really taking
> off (assuming that testtools is the way to go, which is your thinking
> afaiu).


Trial is a supported tool that is part of Twisted.  It works great for me every single day.  It can work great for you.  The fact that Jonathan is technically the "maintainer" and he hasn't been doing much work on it is irrelevant; other people have been working on it, bugs do get fixed, features do get added.  There's not a lot of personality-driven development on Twisted; every patch is at least a bit of a community effort.  (If someone else wanted to step forward and take the "maintainer" mantle I'm sure he'd be happy to give it up.)

There are lots of parts of trial which work great with testtools, too.  It has a plugin architecture, for example, which can do some interesting things (exarkun wrote a cool one called "merit" but I don't know if the code for that still exists anywhere...).  It would be good to provide better documentation for those kinds of things, and maybe some community tools, so the sorts of people who write Nose plugins could also write Twisted plugins.

Apropos of that, Trial's web page received some improved content a little while ago, in case anyone is interested in improving its presence on the web, and helping people understand what it can do: <http://twistedmatrix.com/trac/wiki/TwistedTrial>.

I think that the main risks to "languishing" or "not taking off" for both Trial and testtools are issues with their own documentation and promotional materials, not in any conflict with each other.  If you're worried about it, contribute code or documentation or blog-posts or what have you to one or both projects :).

-glyph




From jml at mumak.net  Wed Feb  8 01:32:27 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 08:32:27 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
Message-ID: <CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>

On Wed, Feb 8, 2012 at 7:05 AM, Glyph <glyph at twistedmatrix.com> wrote:
> On Feb 7, 2012, at 3:49 PM, Free Ekanayaka wrote:
>
>> Hi Jonathan,
>>
>> |--==> On Mon, 6 Feb 2012 19:01:30 +0000, Jonathan Lange <jml at mumak.net> said:
>>
>>  [...]
>>
>>  JL> As much as I would like to see that happen, I am not ever going to do
>>  JL> anything about it.
>>
>> So what position can the Twisted project realistically take? Keep using
>> trial for testing Twisted itself, but recommending projects based
>> on twisted to use testtools instead (and deprecating trial somehow)?
>
> The position that Twisted can take is that Trial is awesome and you should use Trial.  testtools is a separate project, and you may elect to use it to enhance your trial experience.
>
>> Also, from what I had heard it'd be technically not possible to provide
>> a compatibility layer, is that accurate?
>
> It's already compatible, as Jonathan said.  You can just use the trial runner with testtools tests.
>
>> Personally, if testtools ever becomes the blessed tool for testing
>> twisted-based projects, I would not mind at all to have to replace
>
> For a nominal donation to the project, someone from the Twisted project can come to your office, put on some ridiculous priest costume and sanctify whatever toolchain you want to use. ;-)
>
>> However it'd be good if Twisted took a clear position on this,
>
> Nope.  We write software, not position papers :).
>
>> because the risk is to see trial languishing and testtools never really taking
>> off (assuming that testtools is the way to go, which is your thinking
>> afaiu).
>
>
> Trial is a supported tool that is part of Twisted.  It works great for me every single day.  It can work great for you.  The fact that Jonathan is technically the "maintainer" and he hasn't been doing much work on it is irrelevant; other people have been working on it, bugs do get fixed, features do get added.  There's not a lot of personality-driven development on Twisted; every patch is at least a bit of a community effort.  (If someone else wanted to step forward and take the "maintainer" mantle I'm sure he'd be happy to give it up.)
>
> There are lots of parts of trial which work great with testtools, too.  It has a plugin architecture, for example, which can do some interesting things (exarkun wrote a cool one called "merit" but I don't know if the code for that still exists anywhere...).  It would be good to provide better documentation for those kinds of things, and maybe some community tools, so the sorts of people who write Nose plugins could also write Twisted plugins.
>
> Apropos of that, Trial's web page received some improved content a little while ago, in case anyone is interested in improving its presence on the web, and helping people understand what it can do: <http://twistedmatrix.com/trac/wiki/TwistedTrial>.
>
> I think that the main risks to "languishing" or "not taking off" for both Trial and testtools are issues with their own documentation and promotional materials, not in any conflict with each other.  If you're worried about it, contribute code or documentation or blog-posts or what have you to one or both projects :).

I know it's bad form, but I endorse everything that Glyph said. Except
that I'd add that testtools is awesome and you should use that.

jml



From free at 64studio.com  Wed Feb  8 10:22:19 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 18:22:19 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Wed, 8 Feb 2012 02:05:22
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
Message-ID: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Wed, 8 Feb 2012 02:05:22 -0500, Glyph <glyph at twistedmatrix.com> said:

  [...]

  G> The position that Twisted can take is that Trial is awesome and you
  G> should use Trial.  testtools is a separate project, and you may
  G> elect to use it to enhance your trial experience.

That sounds good to me.

  >>Also, from what I had heard it'd be technically not possible to provide
  >>a compatibility layer, is that accurate?

  G> It's already compatible, as Jonathan said.  You can just use the
  G> trial runner with testtools tests.

Even those returning deferreds and using AsynchronousDeferredRunTest? I
presume so, just asking to be sure.

Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
too which I believe mimics more closely what trial currently does, so
I'm not sure what the difference between AsynchronousDeferredRunTest and
AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
run such tests.

I didn't really look into code tough.

  >>Personally, if testtools ever becomes the blessed tool for testing
  >>twisted-based projects, I would not mind at all to have to replace

  G> For a nominal donation to the project, someone from the Twisted
  G> project can come to your office, put on some ridiculous priest
  G> costume and sanctify whatever toolchain you want to use. ;-)

  >>However it'd be good if Twisted took a clear position on this,

  G> Nope.  We write software, not position papers :).

Okay maybe I used the wrong wording. I was asking for a "position"
because I got the impression that Jonathan is considering testtools a
sort of trial2 that provides improvements over trial, but that was not
likely going to replace only it because of compatibility reasons. Please
Jonathan correct me if it's not the case.

So *if* testtools is considered superior to trial for some reason, but
it's problematic for Twisted to internally drop trial in favor of
testtools, I was wondering if it was the case to (also) point people to
testtools from the Twisted website/documentaiton, or something along
those lines.

If it's not the case and it's just a matter of preference, than fine.

  G> Trial is a supported tool that is part of Twisted.  It works great
  G> for me every single day.  It can work great for you.

Sure, same here.

  [...]

  G> I think that the main risks to "languishing" or "not taking off"
  G> for both Trial and testtools are issues with their own
  G> documentation and promotional materials, not in any conflict with
  G> each other.  If you're worried about it, contribute code or
  G> documentation or blog-posts or what have you to one or both
  G> projects :).

Probably a good addition to the documentation of the two projects would
be to describe the differences between the two and if there is any
reason one should use one or the other, beside bare taste. I can surely
help with that when I have better picture myself.

Cheers,

Free



From free at 64studio.com  Wed Feb  8 10:24:03 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 18:24:03 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 08:32:27 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
Message-ID: <87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 08:32:27 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]

  JL> I know it's bad form, but I endorse everything that Glyph said. Except
  JL> that I'd add that testtools is awesome and you should use that.

Would you elaborate on that and explain why you come to prefer it over
trial for your new projects?

Cheers,

Free



From glyph at twistedmatrix.com  Wed Feb  8 10:30:14 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 8 Feb 2012 12:30:14 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>


On Feb 8, 2012, at 12:22 PM, Free Ekanayaka wrote:

> Probably a good addition to the documentation of the two projects would
> be to describe the differences between the two and if there is any
> reason one should use one or the other, beside bare taste. I can surely
> help with that when I have better picture myself.

I still disagree.  This is the job for some other website, to compare python testing tools.  After all, why not add in nose?  py.test?  They both also have Twisted support that works differently.  Trial's website and documentation should focus on how Trial works and how to use it, not on providing a comprehensive comparison matrix.

I'm not saying that such a comparison shouldn't exist, just that it shouldn't be the Twisted website's job and it's certainly not the Trial documentation's job.  So feel free to write one up!

(Plus, returning Deferreds should ideally be an edge case, even in the context of testing Twisted stuff - as much as possible, tests should run synchronously and simulate the events that cause asynchrony in the real world, so that they can test different orderings and edge cases and not just depend on random load variance on the build machines to get coverage of those cases.)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120208/2f618a96/attachment.html>

From free at 64studio.com  Wed Feb  8 12:03:59 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 08 Feb 2012 20:03:59 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Wed, 8 Feb 2012 12:30:14
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
Message-ID: <8762fh2lls.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Wed, 8 Feb 2012 12:30:14 -0500, Glyph <glyph at twistedmatrix.com> said:

  G> On Feb 8, 2012, at 12:22 PM, Free Ekanayaka wrote:
  >>Probably a good addition to the documentation of the two projects
  >>would be to describe the differences between the two and if there is
  >>any reason one should use one or the other, beside bare taste. I can
  >>surely help with that when I have better picture myself.

  G> I still disagree.  This is the job for some other website, to compare
  G> python testing tools.  After all, why not add in nose?  py.test?  They
  G> both also have Twisted support that works differently.  Trial's
  G> website and documentation should focus on how Trial works and how to
  G> use it, not on providing a comprehensive comparison matrix.

  G> I'm not saying that such a comparison shouldn't exist, just that it
  G> shouldn't be the Twisted website's job and it's certainly not the
  G> Trial documentation's job.  So feel free to write one up!

  G> (Plus, returning Deferreds should ideally be an edge case, even in the
  G> context of testing Twisted stuff - as much as possible, tests should
  G> run synchronously and simulate the events that cause asynchrony in the
  G> real world, so that they can test different orderings and edge cases
  G> and not just depend on random load variance on the build machines to
  G> get coverage of those cases.)

Both good points, agreed.

Cheers,

Free



From jml at mumak.net  Wed Feb  8 15:12:34 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:12:34 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:24 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Jonathan,
>
> |--==> On Wed, 8 Feb 2012 08:32:27 +0000, Jonathan Lange <jml at mumak.net> said:
>
>  [...]
>
>  JL> I know it's bad form, but I endorse everything that Glyph said. Except
>  JL> that I'd add that testtools is awesome and you should use that.
>
> Would you elaborate on that and explain why you come to prefer it over
> trial for your new projects?

That's mostly documented here:

  http://testtools.readthedocs.org/en/latest/overview.html

and in the other docs. In a nutshell: details, fixtures, matchers, and
a bunch of unittest extensions that make it much more flexible, making
it easy to write things like parallel test runners and
AsynchronousDeferredRunTest.

Trial provides an excellent test runner, but for everything else is
pretty much standard.

I don't really have a summary of why ADRT is better than Trial's
deferred test support. It's largely because you get better debugging
information for failed tests (that's what "details" are all about) and
because reactor cleanup issues are more localized to individual tests
due to not having to support addCleanup and making no promises about
what happens outside of test execution.

jml



From jml at mumak.net  Wed Feb  8 15:15:18 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:15:18 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:22 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Glyph,
>
> |--==> On Wed, 8 Feb 2012 02:05:22 -0500, Glyph <glyph at twistedmatrix.com> said:
>
...
>  G> It's already compatible, as Jonathan said.  You can just use the
>  G> trial runner with testtools tests.
>
> Even those returning deferreds and using AsynchronousDeferredRunTest? I
> presume so, just asking to be sure.
>

Yes.

(Also, you don't get sure from asking, you get sure from trying).

> Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
> too which I believe mimics more closely what trial currently does, so
> I'm not sure what the difference between AsynchronousDeferredRunTest and
> AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
> run such tests.
>

>From the documentation:

* Trial spins the reactor a couple of times before cleaning it up,
  ``AsynchronousDeferredRunTest`` does not.  If you rely on this behavior, use
  ``AsynchronousDeferredRunTestForBrokenTwisted``.

And the API documentation:

    """Test runner that works around Twisted brokenness re reactor junk.

    There are many APIs within Twisted itself where a Deferred fires but
    leaves cleanup work scheduled for the reactor to do.  Arguably, many of
    these are bugs.  This runner iterates the reactor event loop a number of
    times after every test, in order to shake out these buggy-but-commonplace
    events.
    """

>  >>However it'd be good if Twisted took a clear position on this,
>
>  G> Nope.  We write software, not position papers :).
>
> Okay maybe I used the wrong wording. I was asking for a "position"
> because I got the impression that Jonathan is considering testtools a
> sort of trial2 that provides improvements over trial, but that was not
> likely going to replace only it because of compatibility reasons. Please
> Jonathan correct me if it's not the case.
>
> So *if* testtools is considered superior to trial for some reason, but
> it's problematic for Twisted to internally drop trial in favor of
> testtools, I was wondering if it was the case to (also) point people to
> testtools from the Twisted website/documentaiton, or something along
> those lines.
>

The passive voice here is masking an ambiguity. I consider testtools
superior to trial in many ways. Some others disagree, or don't have
enough information to form an opinion.

Perhaps it's worth a mention in the Twisted documentation, but I
personally won't push too hard for that.

...
>  G> I think that the main risks to "languishing" or "not taking off"
>  G> for both Trial and testtools are issues with their own
>  G> documentation and promotional materials, not in any conflict with
>  G> each other.  If you're worried about it, contribute code or
>  G> documentation or blog-posts or what have you to one or both
>  G> projects :).
>
> Probably a good addition to the documentation of the two projects would
> be to describe the differences between the two and if there is any
> reason one should use one or the other, beside bare taste. I can surely
> help with that when I have better picture myself.
>

For testtools, we'd also have to do that for nose, nose2, unittest2,
zope.testing and py.test for it to make any sense. Heck, just listing
all of those makes me regret ever writing any test framework code in
the first place.

I'm not sure I'd want that documentation, to be honest. I would only
ever do work towards it if it meant that one test framework could be
killed, even if that ended up being testtools.

cheers,
jml



From jml at mumak.net  Wed Feb  8 15:16:50 2012
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Feb 2012 22:16:50 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<BC7EE897-8799-4267-9880-8C4F14E48F3D@twistedmatrix.com>
Message-ID: <CAHZ8tnZw0EzK87H8D4owSk4jq1_P+gvCHxNUB1KzPqy06LxNgA@mail.gmail.com>

On Wed, Feb 8, 2012 at 5:30 PM, Glyph <glyph at twistedmatrix.com> wrote:
...
> (Plus, returning Deferreds should ideally be an edge case, even in the
> context of testing Twisted stuff - as much as possible, tests should run
> synchronously and simulate the events that cause asynchrony in the real
> world, so that they can test different orderings and edge cases and not just
> depend on random load variance on the build machines to get coverage of
> those cases.)
>

Agreed. That's one of the reasons I like explicitly declaring that a
test returns a Deferred using @run_test_with(ADRT).

jml



From exarkun at twistedmatrix.com  Wed Feb  8 17:30:49 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 00:30:49 -0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
Message-ID: <20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>

On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>
>> From the documentation:
>
>* Trial spins the reactor a couple of times before cleaning it up,
>  ``AsynchronousDeferredRunTest`` does not.  If you rely on this 
>behavior, use
>  ``AsynchronousDeferredRunTestForBrokenTwisted``.

I've expected for some time now that we would deprecate this behavior in 
twisted.trial.unittest.TestCase.  Just a matter of someone getting to 
it.

Jean-Paul



From itamar at itamarst.org  Wed Feb  8 19:15:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 08 Feb 2012 21:15:26 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
Message-ID: <4F332C3E.80401@itamarst.org>

Sign up is sometime soon, and before considering this it'd be good to 
know we'd be able to find mentors to help the students with their 
projects. Would any developers working on Twisted be interested in being 
mentors for a student over the summer?

-Itamar



From mostawesomedude at gmail.com  Wed Feb  8 22:08:24 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Wed, 8 Feb 2012 21:08:24 -0800
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F332C3E.80401@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
Message-ID: <CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>

On Wed, Feb 8, 2012 at 6:15 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> Sign up is sometime soon, and before considering this it'd be good to
> know we'd be able to find mentors to help the students with their
> projects. Would any developers working on Twisted be interested in being
> mentors for a student over the summer?

I've mentored for a couple organizations in past years, and would not
mind mentoring for Twisted.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From jml at mumak.net  Thu Feb  9 05:09:44 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Feb 2012 12:09:44 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
Message-ID: <CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>

On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
> On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>
>>> From the documentation:
>>
>>* Trial spins the reactor a couple of times before cleaning it up,
>>  ``AsynchronousDeferredRunTest`` does not.  If you rely on this
>>behavior, use
>>  ``AsynchronousDeferredRunTestForBrokenTwisted``.
>
> I've expected for some time now that we would deprecate this behavior in
> twisted.trial.unittest.TestCase.  Just a matter of someone getting to
> it.
>

Yeah. I think the last time I tried there were just too many broken
test cases in Twisted itself, which made the exercise quite daunting.

jml



From jessica.mckellar at gmail.com  Thu Feb  9 05:38:01 2012
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Thu, 9 Feb 2012 07:38:01 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
Message-ID: <CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>

I'm happy to mentor, deal with administrivia, help write our application, etc.

-Jessica


On Thu, Feb 9, 2012 at 12:08 AM, Corbin Simpson
<mostawesomedude at gmail.com> wrote:
> On Wed, Feb 8, 2012 at 6:15 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> Sign up is sometime soon, and before considering this it'd be good to
>> know we'd be able to find mentors to help the students with their
>> projects. Would any developers working on Twisted be interested in being
>> mentors for a student over the summer?
>
> I've mentored for a couple organizations in past years, and would not
> mind mentoring for Twisted.
>
> ~ C.
>
> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Thu Feb  9 06:52:15 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 13:52:15 -0000
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F332C3E.80401@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
Message-ID: <20120209135215.4064.1736596458.divmod.xquotient.118@localhost6.localdomain6>

On 02:15 am, itamar at itamarst.org wrote:
>Sign up is sometime soon, and before considering this it'd be good to
>know we'd be able to find mentors to help the students with their
>projects. Would any developers working on Twisted be interested in 
>being
>mentors for a student over the summer?

I'm happy to mentor as well (either solo or in concert with another 
mentor).

To diverge slightly from your question, though, I would also like to see 
potential students get involved in Twisted *now* to get familiar with 
the Twisted development project, get a feel for what part of Twisted 
they might be interested in working on, and to demonstrate their 
commitment to following through with the project.

Jean-Paul



From exarkun at twistedmatrix.com  Thu Feb  9 06:54:14 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Feb 2012 13:54:14 -0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
Message-ID: <20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>

On 12:09 pm, jml at mumak.net wrote:
>On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
>>On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>
>>>> From the documentation:
>>>
>>>* Trial spins the reactor a couple of times before cleaning it up,
>>> ``AsynchronousDeferredRunTest`` does not.  If you rely on this
>>>behavior, use
>>> ``AsynchronousDeferredRunTestForBrokenTwisted``.
>>
>>I've expected for some time now that we would deprecate this behavior 
>>in
>>twisted.trial.unittest.TestCase.  Just a matter of someone getting to
>>it.
>
>Yeah. I think the last time I tried there were just too many broken
>test cases in Twisted itself, which made the exercise quite daunting.

Fortunately it lends itself quite well to incremental change.  One can 
generally meaningfully fix a single unit test/test case at a time. :)

Jean-Paul



From jml at mumak.net  Thu Feb  9 06:57:52 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Feb 2012 13:57:52 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
Message-ID: <CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>

On Thu, Feb 9, 2012 at 1:54 PM,  <exarkun at twistedmatrix.com> wrote:
> On 12:09 pm, jml at mumak.net wrote:
>>On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
>>>On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>>
>>>>> From the documentation:
>>>>
>>>>* Trial spins the reactor a couple of times before cleaning it up,
>>>> ``AsynchronousDeferredRunTest`` does not.  If you rely on this
>>>>behavior, use
>>>> ``AsynchronousDeferredRunTestForBrokenTwisted``.
>>>
>>>I've expected for some time now that we would deprecate this behavior
>>>in
>>>twisted.trial.unittest.TestCase.  Just a matter of someone getting to
>>>it.
>>
>>Yeah. I think the last time I tried there were just too many broken
>>test cases in Twisted itself, which made the exercise quite daunting.
>
> Fortunately it lends itself quite well to incremental change.  One can
> generally meaningfully fix a single unit test/test case at a time. :)
>

Right. At the time it was discouraging because I felt like there were
a hundred tests to fix one at a time, then add the deprecation warning
and then a year later get to my actual goal of removing the extra
iterates. I don't feel that way any more.

jml



From glyph at twistedmatrix.com  Thu Feb  9 14:20:37 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 9 Feb 2012 16:20:37 -0500
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
	<CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
Message-ID: <D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>


On Feb 9, 2012, at 8:57 AM, Jonathan Lange wrote:

> On Thu, Feb 9, 2012 at 1:54 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 12:09 pm, jml at mumak.net wrote:
>>> On Thu, Feb 9, 2012 at 12:30 AM,  <exarkun at twistedmatrix.com> wrote:
>>>> On 8 Feb, 10:15 pm, jml at mumak.net wrote:
>>>>> 
>>>>>> From the documentation:
>>>>> 
>>>>> * Trial spins the reactor a couple of times before cleaning it up,
>>>>>  ``AsynchronousDeferredRunTest`` does not.  If you rely on this
>>>>> behavior, use
>>>>>  ``AsynchronousDeferredRunTestForBrokenTwisted``.
>>>> 
>>>> I've expected for some time now that we would deprecate this behavior
>>>> in
>>>> twisted.trial.unittest.TestCase.  Just a matter of someone getting to
>>>> it.
>>> 
>>> Yeah. I think the last time I tried there were just too many broken
>>> test cases in Twisted itself, which made the exercise quite daunting.
>> 
>> Fortunately it lends itself quite well to incremental change.  One can
>> generally meaningfully fix a single unit test/test case at a time. :)
>> 
> 
> Right. At the time it was discouraging because I felt like there were
> a hundred tests to fix one at a time, then add the deprecation warning
> and then a year later get to my actual goal of removing the extra
> iterates. I don't feel that way any more.

This is also a great exercise for a Twisted contributing beginner, at least, if they have some help and guidance from a mentor familiar with the issues involved.  If anyone out there is on the fence about getting involved with the project and looking for an on-ramp that involves manageable chunks of work, test maintenance fixes like these are a great place to get started.

-glyph




From itamar at itamarst.org  Thu Feb  9 18:58:29 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 09 Feb 2012 20:58:29 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
Message-ID: <4F3479C5.7090600@itamarst.org>

On 02/09/2012 07:38 AM, Jessica McKellar wrote:
> I'm happy to mentor, deal with administrivia, help write our application, etc.
>
If you could help with that part, that would be awesome - the list of 
things Google wants to know is here:

http://www.google-melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply

Or we could do it together at the sprint.


For everyone who was interested, spending some time adding project ideas 
or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would 
be a good start.



From exarkun at twistedmatrix.com  Thu Feb  9 19:12:05 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 10 Feb 2012 02:12:05 -0000
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <4F3479C5.7090600@itamarst.org>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
	<4F3479C5.7090600@itamarst.org>
Message-ID: <20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>

On 01:58 am, itamar at itamarst.org wrote:
>On 02/09/2012 07:38 AM, Jessica McKellar wrote:
>>I'm happy to mentor, deal with administrivia, help write our 
>>application, etc.
>If you could help with that part, that would be awesome - the list of
>things Google wants to know is here:
>
>http://www.google- 
>melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply
>
>Or we could do it together at the sprint.
>
>
>For everyone who was interested, spending some time adding project 
>ideas
>or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would
>be a good start.

Note also http://twistedmatrix.com/trac/wiki/SummerOfCode ;)

Jean-Paul



From glyph at twistedmatrix.com  Thu Feb  9 20:53:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 9 Feb 2012 22:53:54 -0500
Subject: [Twisted-Python] Twisted in the Google Summer of Code?
In-Reply-To: <20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>
References: <4F332C3E.80401@itamarst.org>
	<CALiqSLdAaBR69STBS7Ws4jzTm6uEEoCC_g7qhFwPkmF=1ocWLg@mail.gmail.com>
	<CAKDZRchw=ywHOqkfbxMgVhK_qRd13H+R=zfM8KFsE1H72JBuMg@mail.gmail.com>
	<4F3479C5.7090600@itamarst.org>
	<20120210021205.4064.2119440531.divmod.xquotient.286@localhost6.localdomain6>
Message-ID: <B21581DF-6790-4F18-BF79-52EB497D3EEF@twistedmatrix.com>


On Feb 9, 2012, at 9:12 PM, exarkun at twistedmatrix.com wrote:

> On 01:58 am, itamar at itamarst.org wrote:
>> On 02/09/2012 07:38 AM, Jessica McKellar wrote:
>>> I'm happy to mentor, deal with administrivia, help write our 
>>> application, etc.
>> If you could help with that part, that would be awesome - the list of
>> things Google wants to know is here:
>> 
>> http://www.google- 
>> melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentoring_apply
>> 
>> Or we could do it together at the sprint.
>> 
>> 
>> For everyone who was interested, spending some time adding project 
>> ideas
>> or project areas to http://twistedmatrix.com/trac/wiki/GoogleSOC would
>> be a good start.
> 
> Note also http://twistedmatrix.com/trac/wiki/SummerOfCode ;)

Please note that that is several years old now.  (Although hey, some of those tickets never did get merged...)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120209/d38297e6/attachment.html>

From free at 64studio.com  Fri Feb 10 01:29:15 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:29:15 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 22:15:18 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
Message-ID: <878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 22:15:18 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]
  >>Even those returning deferreds and using AsynchronousDeferredRunTest? I
  >>presume so, just asking to be sure.
  >>

  JL> Yes.

  JL> (Also, you don't get sure from asking, you get sure from trying).

True, I've taken some time to read the code and try a few experiments,
and it was an highly beneficial exercise.

I now understand that the logic that deals with tests returning
deferreds is all contained in twisted.trial.unittest.TestCase and
trial-the-test-runner doesn't basically have any knowledge in this
regards. So running a testtools.testscase.TestCase decorated with
AsynchronousDeferredRunTest is pretty much transparent.

This is a nice separation of concerns, I guess it was kind of obvious
but I had never really looked into this.

  >>Also, testtools has an AsynchronousDeferredRunTestForBrokenTwisted class
  >>too which I believe mimics more closely what trial currently does, so
  >>I'm not sure what the difference between AsynchronousDeferredRunTest and
  >>AsynchronousDeferredRunTestForBrokenTwisted would be when using trial to
  >>run such tests.
  >>

  JL> From the documentation:

  JL> * Trial spins the reactor a couple of times before cleaning it up,
  JL>   ``AsynchronousDeferredRunTest`` does not.  If you rely on this behavior, use
  JL>   ``AsynchronousDeferredRunTestForBrokenTwisted``.

I see, so if understand it correctly, the part that implements this
behavior in trial is the twisted.trial.util._Janitor._cleanPending
method that:

        # flush short-range timers
        reactor.iterate(0)
        reactor.iterate(0)

which I guess is always called no matter what, while in testtools this
is an optional behavior that you get by setting _OBLIGATORY_REACTOR_ITERATIONS
like AsynchronousDeferredRunTestForBrokenTwisted does.

Beside code organization/design is this the main substantial difference
between twisted.trial.unittest.TestCase and testtools.testcase.TestCase
plus AsynchronousDeferredRunTest?

Or put it in a stronger form, if there was a compatibility class inheriting
from testtools.testcase.TestCase/AsynchronousDeferredRunTestForBrokenTwisted
and providing the same API as twisted.trial.unittest.TestCase (like
assertFailure, getSkip, etc.) would it work as a seamless drop-in
replacement, at least in principle?

Cheers,

Free



From free at 64studio.com  Fri Feb 10 01:36:22 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:36:22 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>
	(glyph@twistedmatrix.com's message of "Thu, 9 Feb 2012 16:20:37
	-0500")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<20120209003049.4064.238412567.divmod.xquotient.114@localhost6.localdomain6>
	<CAHZ8tnZ=4NDrLKP6iF=BDPHVkmZ4Kt2WOGZTJ1JxnmXqXkJD+g@mail.gmail.com>
	<20120209135414.4064.1393074194.divmod.xquotient.120@localhost6.localdomain6>
	<CAHZ8tna4h6NKqbFeu4uHSQgaAE8_vHMLvfvJZo_AZz6247NRAg@mail.gmail.com>
	<D72C2DED-ED33-4064-A36E-7EC78710B004@twistedmatrix.com>
Message-ID: <874nuzdr09.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Glyph,

|--==> On Thu, 9 Feb 2012 16:20:37 -0500, Glyph <glyph at twistedmatrix.com> said:

  [...]
  >>Right. At the time it was discouraging because I felt like there were
  >>a hundred tests to fix one at a time, then add the deprecation warning
  >>and then a year later get to my actual goal of removing the extra
  >>iterates. I don't feel that way any more.

  G> This is also a great exercise for a Twisted contributing beginner,
  G> at least, if they have some help and guidance from a mentor
  G> familiar with the issues involved.  If anyone out there is on the
  G> fence about getting involved with the project and looking for an
  G> on-ramp that involves manageable chunks of work, test maintenance
  G> fixes like these are a great place to get started.

It indeed sounds like a nice learning experience of Twisted internals,
and I presume fixing a test that relies on these reactor spins could be
tricky/fun sometimes.

If there are still hundreds of such tests this can be a long work and I
may not be able to complete it all, however if it's fine/makes sense
that I help fixing at least some of them, then I'll be glad to help.

Cheers,

Free



From free at 64studio.com  Fri Feb 10 01:43:03 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 09:43:03 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	(Jonathan Lange's message of "Wed, 8 Feb 2012 22:12:34 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
Message-ID: <87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi Jonathan,

|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:

  [...]
  >>Would you elaborate on that and explain why you come to prefer it over
  >>trial for your new projects?

  JL> That's mostly documented here:

  JL>   http://testtools.readthedocs.org/en/latest/overview.html

  JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
  JL> a bunch of unittest extensions that make it much more flexible, making
  JL> it easy to write things like parallel test runners

Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
maybe one could use all these features on top of trial's TestCase,
by using testtool's TestCase as a kind  of mixin. Not sure it'd work in
practice though.

  JL> I don't really have a summary of why ADRT is better than Trial's
  JL> deferred test support. It's largely because you get better debugging
  JL> information for failed tests (that's what "details" are all about) and
  JL> because reactor cleanup issues are more localized to individual tests
  JL> due to not having to support addCleanup and making no promises about
  JL> what happens outside of test execution.

Fair enough and good to know, thanks.

Cheers,

Free



From jml at mumak.net  Fri Feb 10 02:49:28 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 09:49:28 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<87ipjh2qb8.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnayYh+bUmRMU3E1WN2jPZWPNK9WoowmdKa9kXw2TDeSNQ@mail.gmail.com>
	<878vkbdrc4.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnbzW+GgmQSSM-7dd3wSvZc+S5+-EDobbmuubUs+_8PAHA@mail.gmail.com>

On Fri, Feb 10, 2012 at 8:29 AM, Free Ekanayaka <free at 64studio.com> wrote:
...
> Beside code organization/design is this the main substantial difference
> between twisted.trial.unittest.TestCase and testtools.testcase.TestCase
> plus AsynchronousDeferredRunTest?
>
> Or put it in a stronger form, if there was a compatibility class inheriting
> from testtools.testcase.TestCase/AsynchronousDeferredRunTestForBrokenTwisted
> and providing the same API as twisted.trial.unittest.TestCase (like
> assertFailure, getSkip, etc.) would it work as a seamless drop-in
> replacement, at least in principle?
>

I don't see why not.

jml



From jml at mumak.net  Fri Feb 10 02:50:10 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 09:50:10 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>

On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi Jonathan,
>
> |--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
>
>  [...]
>  >>Would you elaborate on that and explain why you come to prefer it over
>  >>trial for your new projects?
>
>  JL> That's mostly documented here:
>
>  JL>   http://testtools.readthedocs.org/en/latest/overview.html
>
>  JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
>  JL> a bunch of unittest extensions that make it much more flexible, making
>  JL> it easy to write things like parallel test runners
>
> Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
> maybe one could use all these features on top of trial's TestCase,
> by using testtool's TestCase as a kind  of mixin. Not sure it'd work in
> practice though.
>

Why would you want to?

jml



From free at 64studio.com  Fri Feb 10 04:21:57 2012
From: free at 64studio.com (Free Ekanayaka)
Date: Fri, 10 Feb 2012 12:21:57 +0100
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
	(Jonathan Lange's message of "Fri, 10 Feb 2012 09:50:10 +0000")
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
Message-ID: <87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

|--==> On Fri, 10 Feb 2012 09:50:10 +0000, Jonathan Lange <jml at mumak.net> said:

  JL> On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
  >>Hi Jonathan,
  >>
  >>|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
  >>
  >> [...]
  >> >>Would you elaborate on that and explain why you come to prefer it over
  >> >>trial for your new projects?
  >>
  >> JL> That's mostly documented here:
  >>
  >> JL>   http://testtools.readthedocs.org/en/latest/overview.html
  >>
  >> JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
  >> JL> a bunch of unittest extensions that make it much more flexible, making
  >> JL> it easy to write things like parallel test runners
  >>
  >>Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
  >>maybe one could use all these features on top of trial's TestCase,
  >>by using testtool's TestCase as a kind  of mixin. Not sure it'd work in
  >>practice though.
  >>

  JL> Why would you want to?

Maybe be not really that, but I was mainly wondering, maybe Twisted's
trial machinery for handling tests returning deferreds could be factored
in a way that it can be re-used by AsynchronousDeferredRunTest (which
would just be glue code for integrating with testtool's TestCase). This
way testtool's twisted support would be based on twisted itself.

Not sure it's worth doing if this generalization/refactoring would lead
to more complex code, but I thought I'd mention it.



From jml at mumak.net  Fri Feb 10 04:32:17 2012
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Feb 2012 11:32:17 +0000
Subject: [Twisted-Python] Running Twisted tests with testtools
In-Reply-To: <87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
References: <CAHZ8tnbVZEKqDDD61QfQ0tof-Mjm8+U4LB58ddkKFZ8NEnHXJQ@mail.gmail.com>
	<85402F0E-2795-42BB-85FE-636F2F1C59E8@twistedmatrix.com>
	<CAHZ8tnZ9GkrLgP6-Dp1eKceMNnVwFRSquhsBXwwxvhPGDqysrQ@mail.gmail.com>
	<8739amfjwt.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<EBAE48AB-D498-4E20-B035-E579F4B49EC5@twistedmatrix.com>
	<CAHZ8tna0MwOsSkqhzJ=pAJxv7vG515Fv=5sxnmP_qpyhP1P4ug@mail.gmail.com>
	<87ehu52q8c.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnb2H_=w0m5gcbkSz+eUTNWBn5tBRVMMyV7EfGDBrXnSyw@mail.gmail.com>
	<87zkcrcc4o.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
	<CAHZ8tnYniC9eMvkhVKud_cGodVjBuvGVd8pfSX=3CyZX4ZSkqA@mail.gmail.com>
	<87vcnfc4ru.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>
Message-ID: <CAHZ8tnYx5mW=6O=bFWRZuh128CxU1Jceq_9u9SRJeR5kQ75Fdw@mail.gmail.com>

On Fri, Feb 10, 2012 at 11:21 AM, Free Ekanayaka <free at 64studio.com> wrote:
> |--==> On Fri, 10 Feb 2012 09:50:10 +0000, Jonathan Lange <jml at mumak.net> said:
>
>  JL> On Fri, Feb 10, 2012 at 8:43 AM, Free Ekanayaka <free at 64studio.com> wrote:
>  >>Hi Jonathan,
>  >>
>  >>|--==> On Wed, 8 Feb 2012 22:12:34 +0000, Jonathan Lange <jml at mumak.net> said:
>  >>
>  >> [...]
>  >> >>Would you elaborate on that and explain why you come to prefer it over
>  >> >>trial for your new projects?
>  >>
>  >> JL> That's mostly documented here:
>  >>
>  >> JL>   http://testtools.readthedocs.org/en/latest/overview.html
>  >>
>  >> JL> and in the other docs. In a nutshell: details, fixtures, matchers, and
>  >> JL> a bunch of unittest extensions that make it much more flexible, making
>  >> JL> it easy to write things like parallel test runners
>  >>
>  >>Yeah, I like these features a lot too, but leaving out AsynchronousDeferredRunTest
>  >>maybe one could use all these features on top of trial's TestCase,
>  >>by using testtool's TestCase as a kind  of mixin. Not sure it'd work in
>  >>practice though.
>  >>
>
>  JL> Why would you want to?
>
> Maybe be not really that, but I was mainly wondering, maybe Twisted's
> trial machinery for handling tests returning deferreds could be factored
> in a way that it can be re-used by AsynchronousDeferredRunTest (which
> would just be glue code for integrating with testtool's TestCase). This
> way testtool's twisted support would be based on twisted itself.
>
> Not sure it's worth doing if this generalization/refactoring would lead
> to more complex code, but I thought I'd mention it.
>

testtools/_spinner.py could *probably* be moved into Twisted itself
without too much technical hassle. It would have to be a public API
for testtools to rely on it, but it would also have to be an API that
Twisted strongly warned against using.

Then, probably, Trial & testtools could use that. ADRT relies on the
RunTest layer of indirection that testtools has, and has code that is
genuinely useful to anyone running Twisted tests. Moving that into
Twisted would be trickier, since it would mean either duplicating or
depending on testtools.

jml



From tobias.oberstein at tavendo.de  Fri Feb 10 09:56:23 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 10 Feb 2012 08:56:23 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
Message-ID: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>

Hi there,

what is the most efficient/performant way of doing the following?

I have a short message prepared .. say a string of 100 octets.
I want to push out that _same_ string on 100k connected TCPs (on a server).

==

My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
just _once_, and then the kernel is only told to resend that buffer on the 100k
connected TCPs.

Does that make sense, is that even possible, with Twisted, or in general?

==

Currently I do the naive thing: transport.write(msg) x 100k times .. which I guess
involves quite some copying around and user to kernel space transitions ..

\Tobias



From mostawesomedude at gmail.com  Fri Feb 10 10:32:57 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 10 Feb 2012 09:32:57 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CALiqSLcRUytO+dC+eN0Kay-W16BfZkE3kj1XNi66c-sczGeeuw@mail.gmail.com>

AFAIK that's not possible in TCP, only in multicast, and the kernel
will make copies of that string no matter what, but I am highly
unknowledgeable in this area.

On 2/10/12, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> Hi there,
>
> what is the most efficient/performant way of doing the following?
>
> I have a short message prepared .. say a string of 100 octets.
> I want to push out that _same_ string on 100k connected TCPs (on a server).
>
> ==
>
> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC
> space
> just _once_, and then the kernel is only told to resend that buffer on the
> 100k
> connected TCPs.
>
> Does that make sense, is that even possible, with Twisted, or in general?
>
> ==
>
> Currently I do the naive thing: transport.write(msg) x 100k times .. which I
> guess
> involves quite some copying around and user to kernel space transitions ..
>
> \Tobias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From p.mayers at imperial.ac.uk  Fri Feb 10 10:49:26 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 10 Feb 2012 17:49:26 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F3558A6.7070008@imperial.ac.uk>

On 10/02/12 16:56, Tobias Oberstein wrote:
> Hi there,
>
> what is the most efficient/performant way of doing the following?
>
> I have a short message prepared .. say a string of 100 octets.
> I want to push out that _same_ string on 100k connected TCPs (on a server).
>
> ==
>
> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
> just _once_, and then the kernel is only told to resend that buffer on the 100k
> connected TCPs.
>
> Does that make sense, is that even possible, with Twisted, or in general?

Not really, no.

The problem is that TCP requires the sender of data to buffer so that it 
can re-send. The only way to store one copy of the data whilst doing 
this would be to store the socket buffer as a (fairly complex) linked 
list of reference-counted blocks, and use scatter-gather IO to the 
network card.

So the kernel would have to copy the data 100k times anyway, to store it 
in the per-socket buffer until it was ACKed, or maintain a large and 
complex data structure so that it could use one copy.

Therefore, by moving the work to the kernel, all you've done is consume 
valuable kernel memory, in return for saving the syscall overhead. 
Classic space/time tradeoff.

If you were using UDP, then in theory this might be possible, but there 
are no APIs that I know of, except for multicast (where you only send 
one copy of the data, and the network duplicates it).

In short; this kind of thing seems easy and desirable but actually it's 
really hard and not useful.



From tobias.oberstein at tavendo.de  Fri Feb 10 13:20:34 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 10 Feb 2012 12:20:34 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F3558A6.7070008@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>

> > what is the most efficient/performant way of doing the following?
> >
> > I have a short message prepared .. say a string of 100 octets.
> > I want to push out that _same_ string on 100k connected TCPs (on a server).
> >
> > ==
> >
> > My thinking was: ideally, the 100 bytes would be transferred to
> > kernel/NIC space just _once_, and then the kernel is only told to
> > resend that buffer on the 100k connected TCPs.
> >
> > Does that make sense, is that even possible, with Twisted, or in general?
> 
> Not really, no.
> 
> The problem is that TCP requires the sender of data to buffer so that it can re-
> send. The only way to store one copy of the data whilst doing this would be to

Resends -- oh, yes, right. Forgot about that.

> store the socket buffer as a (fairly complex) linked list of reference-counted
> blocks, and use scatter-gather IO to the network card.

Doesn't a (modern) kernel do something like that for virtual memory pages ie.?

For if processes mmap files or load shared objects, the kernel must keep track
of pages which are needed by active processes.

So in theory, if my message is 1 VM page, kernel could pin that page (make it
non-swappable etc) until all TCP ACKs have arrived ..

> In short; this kind of thing seems easy and desirable but actually it's really hard

Probably quite hard ..

> and not useful.

When using VM pages (_if_ that would be possible) and thus no data duplication,
then why not useful?

However I now can see that it's likely outside of what can be done with a stock
kernel .. if it can be done at all anyway ..

Thanks! 



From glyph at twistedmatrix.com  Fri Feb 10 14:54:54 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Feb 2012 16:54:54 -0500
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F3558A6.7070008@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
Message-ID: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>


On Feb 10, 2012, at 12:49 PM, Phil Mayers wrote:

> On 10/02/12 16:56, Tobias Oberstein wrote:
>> Hi there,
>> 
>> what is the most efficient/performant way of doing the following?
>> 
>> I have a short message prepared .. say a string of 100 octets.
>> I want to push out that _same_ string on 100k connected TCPs (on a server).
>> 
>> ==
>> 
>> My thinking was: ideally, the 100 bytes would be transferred to kernel/NIC space
>> just _once_, and then the kernel is only told to resend that buffer on the 100k
>> connected TCPs.
>> 
>> Does that make sense, is that even possible, with Twisted, or in general?
> 
> Not really, no.
> 
> The problem is that TCP requires the sender of data to buffer so that it 
> can re-send. The only way to store one copy of the data whilst doing 
> this would be to store the socket buffer as a (fairly complex) linked 
> list of reference-counted blocks, and use scatter-gather IO to the 
> network card.
> 
> So the kernel would have to copy the data 100k times anyway, to store it 
> in the per-socket buffer until it was ACKed, or maintain a large and 
> complex data structure so that it could use one copy.
> 
> Therefore, by moving the work to the kernel, all you've done is consume 
> valuable kernel memory, in return for saving the syscall overhead. 
> Classic space/time tradeoff.
> 
> If you were using UDP, then in theory this might be possible, but there 
> are no APIs that I know of, except for multicast (where you only send 
> one copy of the data, and the network duplicates it).
> 
> In short; this kind of thing seems easy and desirable but actually it's 
> really hard and not useful.

Not to mention the fact that inevitably, you probably are going to want some security on those connections, which means TLS, which means individual crypto connections.

I believe the best model for this kind of high-volume reliable-multicast-over-unicast is a spanning tree, like what IRC uses for server-to-server communication.  If you have 100,000 concurrent, active connections, you're already probably beyond the CPU constraints of a single machine.  So have your clients connect (via round-robin DNS, or whatever other mechanism makes sense) to a variety of different servers, then have the servers connected to each other in a pattern such that one server tells ten friends, and they each tell ten friends, and so on, until each server is only responsible for spewing out data to a reasonable number of connections (5000 maybe?).

-glyph




From myers at maski.org  Fri Feb 10 16:52:36 2012
From: myers at maski.org (Myers Carpenter)
Date: Fri, 10 Feb 2012 18:52:36 -0500
Subject: [Twisted-Python] I'm working on a SPDY implementation
Message-ID: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>

I'm working on a SPDY protocol implementation for Twisted.  I've been
keeping a hacking log here:

http://icepick.info/2012/02/10/txspdy-day-3-pyopenssl-done-now-python-code/

So far I've gotten the NPN methods added to pyopenssl, and I'm now working
on a protocol that parses the frames.

At the end of this project I hope to have a way to make a https + spdy Site
that serves up the same content for both protocols.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120210/2c92c03f/attachment.html>

From p.mayers at imperial.ac.uk  Sat Feb 11 03:48:45 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2012 10:48:45 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
Message-ID: <4F36478D.5090905@imperial.ac.uk>

On 02/10/2012 09:54 PM, Glyph Lefkowitz wrote:

> I believe the best model for this kind of high-volume
> reliable-multicast-over-unicast is a spanning tree, like what IRC

For what it's worth, real IP multicast is quite commonly used for 
distributing short messages to many clients in realtime in some closed 
networks, such as financial trading systems. With good network equipment 
that can handle low- or zero-loss timely delivery, it does work very well.

Over the internet - less well, and even if your target networks are 
multicast-enabled, something like NORM or FEC is required to fill in the 
gaps, which inevitably adds latency.

Add to which the fact that you want your protocol to be 
congestion-control compatible, which is seriously challenging with real 
multicast, and if you want crypto you've got to have some kind of group 
ciphering system..

> uses for server-to-server communication.  If you have 100,000
> concurrent, active connections, you're already probably beyond the
> CPU constraints of a single machine.  So have your clients connect
> (via round-robin DNS, or whatever other mechanism makes sense) to a
> variety of different servers, then have the servers connected to each
> other in a pattern such that one server tells ten friends, and they
> each tell ten friends, and so on, until each server is only
> responsible for spewing out data to a reasonable number of
> connections (5000 maybe?).

I agree, this is probably the best model at the moment. It has the 
advantage that if you need to scale globally, you can push the "caching" 
nodes closer to the clients, and use geographical-aware routing to push 
clients onto closer nodes.



From _ at lvh.cc  Sat Feb 11 04:06:40 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 11 Feb 2012 12:06:40 +0100
Subject: [Twisted-Python] I'm working on a SPDY implementation
In-Reply-To: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>
References: <CAP0+uSg6ZM5T=dMv_K=i4F-ysMYROhe21PiqddXsgwokqhU4rg@mail.gmail.com>
Message-ID: <CAE_Hg6bX+Pnf2ujPQKqfdLeyQ+yf35fJrs6apuE2oLkY=L4+2A@mail.gmail.com>

Woo, excellent :)

I am very excited by this project and your progress so far, keep up the
good work :)

On Sat, Feb 11, 2012 at 12:52 AM, Myers Carpenter <myers at maski.org> wrote:

> I'm working on a SPDY protocol implementation for Twisted.  I've been
> keeping a hacking log here:
>
> http://icepick.info/2012/02/10/txspdy-day-3-pyopenssl-done-now-python-code/
>
> So far I've gotten the NPN methods added to pyopenssl, and I'm now working
> on a protocol that parses the frames.
>
> At the end of this project I hope to have a way to make a https + spdy
> Site that serves up the same content for both protocols.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120211/b86ad76b/attachment.html>

From p.mayers at imperial.ac.uk  Sat Feb 11 04:07:11 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2012 11:07:11 +0000
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>	<4F3558A6.7070008@imperial.ac.uk>
	<634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F364BDF.7080007@imperial.ac.uk>

On 02/10/2012 08:20 PM, Tobias Oberstein wrote:
>
>> store the socket buffer as a (fairly complex) linked list of reference-counted
>> blocks, and use scatter-gather IO to the network card.
>
> Doesn't a (modern) kernel do something like that for virtual memory pages ie.?

Possibly. My knowledge of kernel memory management is a lot more patchy 
than network stacks.

One option you could investigate, that I was going to suggest in my 
original reply but didn't have the time to write up, is the sendfile() 
API. If you write your message to a temporary file, you could call 
sendfile() on all 100k connections using the same file descriptor. So, 
something like:

  fd = os.open(PATH, os.O_RDWR)
  os.write(fd, message)
  os.unlink(PATH)
  for connection in biglist:
    connection.sendfile(fd, offset=0, len=100)
  os.close(fd)

Now, as I understand it, sendfile() will perform zero-copy IO; since the 
contents of the file will undoubtedly be in the page cache, it should in 
theory DMA the data straight from the (single copy of the) data in RAM 
to the NIC buffers.

It should also handle refcounting for you - you unlink the filename 
after obtaining a descriptor, and close() the FD once you've called 
sendfile, and the kernel *should* in theory free the inode and page 
containing file data once all TCP ACKs have been received.

You'll still have to make 100k syscalls, and you may find the kernel 
chooses to copy the data anyway.

However - AFAIK Twisted does not support sendfile(), and it can be 
tricky to make it work with non-blocking IO.

:o(

You may also want to look at the splice() vmsplice() and tee() syscalls 
added to recent Linux kernels. tee() in particular can copy data from 
pipe to pipe without consuming, so can be repeated multiple times. It 
may be possible to assemble something that will do this task efficiently 
from those building blocks, but the APIs aren't available in Twisted.

>> and not useful.
>
> When using VM pages (_if_ that would be possible) and thus no data duplication,
> then why not useful?

Sorry, I should have been more precise - it's probably not often useful. 
There are not very many applications where sending the same TCP stream 
to that many clients at the same time is helpful - realtime video/audio 
over TCP spring to mind, and typically those need to adapt to slow 
clients by dropping them to a lower rate i.e. not the same stream any more.

As Glyph has mentioned, encryption is also a factor in todays internet.

I'm kind of curious about what your application is!



From tobias.oberstein at tavendo.de  Sat Feb 11 05:00:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:00:42 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D597546D2@EXVMBX020-12.exch020.serverdata.net>

> Not to mention the fact that inevitably, you probably are going to want some
> security on those connections, which means TLS, which means individual crypto
> connections.

If there is a need for encryption, then yes, .. but it's not always needed

> 
> I believe the best model for this kind of high-volume reliable-multicast-over-
> unicast is a spanning tree, like what IRC uses for server-to-server

Ok. Makes sense. I see .. could have frontend nodes, which act as aggregators
condensing the messages on many incoming connections into 1 uplink TCP
connection to a backend node .. or a hierarchy.

This is quite interesting .. for I am now beginning to see why Google is
pushing the discussion on WebSocket multiplexing extension on Hybi;)

Until now, I thought that would be primarily because Chrome has a
process per tab design .. but that's probably only one reaon. The cloud
side being the other one ..

> communication.  If you have 100,000 concurrent, active connections, you're
> already probably beyond the CPU constraints of a single machine.  So have your

Not really. I've been testing up to 180k connections on a 2 core virtual machine
and when doing PubSub over those (dispatching 1 msg to all 180k) .. CPU load
isn't maxed out .. but I'm hitting a limit of around 20k/s dispatched msgs.

My suspicion is it's probably more interrupt/syscall overhead bound ..

> clients connect (via round-robin DNS, or whatever other mechanism makes
> sense) to a variety of different servers, then have the servers connected to each
> other in a pattern such that one server tells ten friends, and they each tell ten
> friends, and so on, until each server is only responsible for spewing out data to
> a reasonable number of connections (5000 maybe?).

5k is much too low .. would require too many servers. My target is 200k per node
and have as high as possible msgs/s dispatch rate.

Probably a design with frontend nodes aggregating TCP connections is inevitable ..

Thanks! 



From tobias.oberstein at tavendo.de  Sat Feb 11 05:05:29 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:05:29 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F36478D.5090905@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<4425E4D4-BFB1-4F7F-B708-3C754AA77ED6@twistedmatrix.com>
	<4F36478D.5090905@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597546D3@EXVMBX020-12.exch020.serverdata.net>

> For what it's worth, real IP multicast is quite commonly used for distributing
> short messages to many clients in realtime in some closed networks, such as
> financial trading systems. With good network equipment that can handle low-
> or zero-loss timely delivery, it does work very well.

Emphasis on "good network equipment";) Yes, stuff that a) even supports IP
Multicast and b) as very low loss rate ..

If possible, I'd like to avoid IP Multicast .. just a gut feeling (have no experience
with that in practice) .. and apart from that, we currently just don't have IP Multicast
aware switches deployed ;(




From tobias.oberstein at tavendo.de  Sat Feb 11 05:37:38 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 11 Feb 2012 04:37:38 -0800
Subject: [Twisted-Python] pushing out same message on 100k TCPs
In-Reply-To: <4F364BDF.7080007@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D597544D3@EXVMBX020-12.exch020.serverdata.net>
	<4F3558A6.7070008@imperial.ac.uk>
	<634914A010D0B943A035D226786325D42D597545E2@EXVMBX020-12.exch020.serverdata.net>
	<4F364BDF.7080007@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D597546D4@EXVMBX020-12.exch020.serverdata.net>

> Now, as I understand it, sendfile() will perform zero-copy IO; since the contents
> of the file will undoubtedly be in the page cache, it should in theory DMA the
> data straight from the (single copy of the) data in RAM to the NIC buffers.
> 
> It should also handle refcounting for you - you unlink the filename after
> obtaining a descriptor, and close() the FD once you've called sendfile, and the
> kernel *should* in theory free the inode and page containing file data once all
> TCP ACKs have been received.
> 
> You'll still have to make 100k syscalls, and you may find the kernel chooses to
> copy the data anyway.

I see.

So using sendfile .. probably with message as file on RAMFS .. or using the Linux
syscalls you mention below, it _might_ be possible to avoid copy overhead,
but not context switching overhead .. ok.

> 
> However - AFAIK Twisted does not support sendfile(), and it can be tricky to
> make it work with non-blocking IO.

;(

Apart from that, we're on FreeBSD .. guess there are similar syscalls (maybe with
slightly different semantics) there also.

> 
> :o(
> 
> You may also want to look at the splice() vmsplice() and tee() syscalls added to
> recent Linux kernels. tee() in particular can copy data from pipe to pipe without
> consuming, so can be repeated multiple times. It may be possible to assemble
> something that will do this task efficiently from those building blocks, but the
> APIs aren't available in Twisted.

Thanks alot! This is all very interesting .. from the "tee" man page:

"""
Though we talk of copying, actual copies are generally avoided. The kernel does this by implementing a pipe buffer as a set of reference-counted pointers to pages of kernel memory. The kernel creates "copies" of pages in a buffer by creating new pointers (for the output buffer) referring to the pages, and increasing the reference counts for the pages: only pointers are copied, not the pages of the buffer. 
"""

Which sounds alot like in your other reply talking about refcounting etc .. 

For ref., these guys are talking about PACKET_MMAP

http://www.linuxquestions.org/questions/programming-9/vectored-write-to-many-sockets-with-tee-splice-915702/
http://dank.qemfd.net/dankwiki/index.php/Fast_UNIX_Servers

The former (very end of page) claims that it achieves zero-copy (which I get),
and also claims you could reduce context switch overheader for the 1 msg
TX to many clients case .. which I can't see how it's done.

> 
> >> and not useful.
> >
> > When using VM pages (_if_ that would be possible) and thus no data
> > duplication, then why not useful?
> 
> Sorry, I should have been more precise - it's probably not often useful.
> There are not very many applications where sending the same TCP stream to
> that many clients at the same time is helpful - realtime video/audio over TCP
> spring to mind, and typically those need to adapt to slow clients by dropping
> them to a lower rate i.e. not the same stream any more.
> 
> As Glyph has mentioned, encryption is also a factor in todays internet.
> 
> I'm kind of curious about what your application is!

The application is PubSub over WebSockets with massive numbers of clients ..

Application message payloads are short (<1k) and JSON/UTF-8. Those are then
framed into WebSocket messages (which basically means prepending a WS
frame header).

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From therve at free.fr  Sat Feb 11 06:35:15 2012
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Sat, 11 Feb 2012 14:35:15 +0100
Subject: [Twisted-Python] Twisted 12.0.0 released
Message-ID: <4F366E93.80804@free.fr>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 12.0.

47 tickets are closed by this release, among them:

  * A fix to the GTK2 reactor preventing unnecessary wake-ups

  * Preliminary support of IPV6 on the server side

  * Several fixes to the new protocol-based TLS implementation

  * Improved core documentation's main page

Twisted no longer supports Python 2.4, the latest supported version is 2.5.

For more information, see the NEWS file here:

  http://twistedmatrix.com/Releases/Twisted/12.0/NEWS.txt

Download it now from:

  http://pypi.python.org/packages/source/T/Twisted/Twisted-12.0.0.tar.bz2 or
 
http://pypi.python.org/packages/2.5/T/Twisted/Twisted-12.0.0.win32-py2.5.msi 
or
 
http://pypi.python.org/packages/2.6/T/Twisted/Twisted-12.0.0.win32-py2.6.msi 
or
 
http://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.0.0.win32-py2.7.msi

Thanks to the supporters of the Twisted Software Foundation and to the 
many contributors for this release.

-- 
Thomas




From dripton at ripton.net  Sat Feb 11 09:04:33 2012
From: dripton at ripton.net (David Ripton)
Date: Sat, 11 Feb 2012 11:04:33 -0500
Subject: [Twisted-Python] Twisted 12.0.0 released
In-Reply-To: <4F366E93.80804@free.fr>
References: <4F366E93.80804@free.fr>
Message-ID: <4F369191.4020006@ripton.net>

On 02/11/12 08:35, Thomas Hervé wrote:
> On behalf of Twisted Matrix Laboratories, I am honored to announce the
> release of Twisted 12.0.

Woot!  Thanks everyone.

> Twisted no longer supports Python 2.4, the latest supported version is 2.5.

s/latest/earliest/

12.0.0.pre1 has been rock solid for me for a couple of weeks, and now 
12.0.0 has been equally stable for me for a couple of minutes.

-- 
David Ripton    dripton at ripton.net



From sdl.web at gmail.com  Sat Feb 11 08:37:28 2012
From: sdl.web at gmail.com (Leo)
Date: Sat, 11 Feb 2012 23:37:28 +0800
Subject: [Twisted-Python] Twisted 12.0.0 released
References: <4F366E93.80804@free.fr>
Message-ID: <m1k43tcrev.fsf@gmail.com>

On 2012-02-11 21:35 +0800, Thomas Hervé wrote:
> On behalf of Twisted Matrix Laboratories, I am honored to announce the
> release of Twisted 12.0.

Many thanks for the hard work. I haven't started learning and using
twisted but I plan to.

Leo




From rutt.4 at osu.edu  Sat Feb 11 12:02:15 2012
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Sat, 11 Feb 2012 14:02:15 -0500
Subject: [Twisted-Python] how to ensure writes to stdout via
 stdio.StandardIO are completed before we shutdown the reactor?
In-Reply-To: <20120201060144.4064.433011759.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMWA1_pGBmFoeYimm8WXJaCdNCDCmXVwF7xoBm8o83fWW_QTGQ@mail.gmail.com>
	<20120201060144.4064.433011759.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <CAMWA1_pqDVOr-4kNoW0CyZns4bN=8QQR5SuwPF-VO1sAmDDAnA@mail.gmail.com>

That worked so well, that I was speechless for awhile.  Thanks!

On Wed, Feb 1, 2012 at 1:01 AM,  <exarkun at twistedmatrix.com> wrote:
> On 03:59 am, rutt.4 at osu.edu wrote:
>>Hi twisted community,
>>
>>What’s the best way to ensure writes to stdout via stdio.StandardIO
>>are completed before we shutdown the reactor?   The use case is to
>>emit an error message before we shutdown the reactor and stop our
>>program.  Dummy code snippet:
>
> If you call the transport's loseConnection method, then the protocol's
> connectionLost method will be called after the output buffer is
> completely written.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Benjamin Rutt



From donal.mcmullan at gmail.com  Sat Feb 11 21:13:29 2012
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 12 Feb 2012 17:13:29 +1300
Subject: [Twisted-Python] libusb-1 file descriptors
Message-ID: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>

I'm trying to integrate Twisted with libusb-1

The libusb-1 Python wrapper offers a USBPoller class to "allow
integration of USB event polling in a file-descriptor monitoring event
loop." The class expects to receive a 'poller' object, again quoting
from the documentation:

    poller is a polling instance implementing the following methods:
    - register(fd, event_flags)
      event_flags have the same meaning as in poll API (POLLIN & POLLOUT)
    - unregister(fd)
    - poll(timeout)
      timeout being a float in seconds, or None if there is no timeout.
      It must return a list of (descriptor, event) pairs.
    Note: USBPoller is itself a valid poller.

I feel like it should be obvious, but I can't see what would be the
correct way to integrate this with Twisted. My particular application
is to enable networking over the ANT+ protocol via a small USB key.

My approach is that I'm trying to write a transport. When that's
working I can start to build a Protocol. Is that sound?

Any pointers would be welcome. The USBPoller class can be viewed here:
https://github.com/vpelletier/python-libusb1/blob/master/usb1.py

Thanks

Dónal



From exarkun at twistedmatrix.com  Sat Feb 11 22:05:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Feb 2012 05:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1329023126.12.375763532@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120212/c80f05ac/attachment-0001.html>

From p.mayers at imperial.ac.uk  Sun Feb 12 04:10:48 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 12 Feb 2012 11:10:48 +0000
Subject: [Twisted-Python] libusb-1 file descriptors
In-Reply-To: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
References: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
Message-ID: <4F379E38.3040407@imperial.ac.uk>

On 02/12/2012 04:13 AM, Donal McMullan wrote:
> I'm trying to integrate Twisted with libusb-1
>
> The libusb-1 Python wrapper offers a USBPoller class to "allow
> integration of USB event polling in a file-descriptor monitoring event
> loop." The class expects to receive a 'poller' object, again quoting
> from the documentation:
>
>      poller is a polling instance implementing the following methods:
>      - register(fd, event_flags)
>        event_flags have the same meaning as in poll API (POLLIN&  POLLOUT)
>      - unregister(fd)
>      - poll(timeout)
>        timeout being a float in seconds, or None if there is no timeout.
>        It must return a list of (descriptor, event) pairs.
>      Note: USBPoller is itself a valid poller.
>
> I feel like it should be obvious, but I can't see what would be the
> correct way to integrate this with Twisted. My particular application
> is to enable networking over the ANT+ protocol via a small USB key.

I've only quickly scanned it, but actually it doesn't look obvious to me 
at all.

I *think* that you want to ignore USBPoller entirely; it looks like it's 
some sort of mini reactor thing, although it's not obvious to me how it 
ever DOES anything.

USBContext looks to be the "thing" that you plug in an event loop to.

However, I'm not certain (perhaps others will comment) that it makes 
sense to integrate it into the Twisted event loop - the file descriptor 
"ready" events don't seem to trigger corresponding "read" events, and 
the USB protocol implementation isn't accessible, so the Twisted model of:

  file ready event -> transport does read -> protocol dataReceived

...doesn't really apply.

It may be just as easy to write wrapper around your protocol in plain 
non-Twisted python, and talk to it from Twisted over a 
pipe/process/whatever.



From dynamicgl at gmail.com  Sun Feb 12 11:37:28 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 13 Feb 2012 02:37:28 +0800
Subject: [Twisted-Python] libusb-1 file descriptors
In-Reply-To: <4F379E38.3040407@imperial.ac.uk>
References: <CADf-aJH0ESzT-3oYqu7J4OP9V1oZyd6p9i5bggKR7++HMqOLPQ@mail.gmail.com>
	<4F379E38.3040407@imperial.ac.uk>
Message-ID: <CABkOF6QsVmSaN1D4_G0PEZbnyij23iNUW8Gpj6qJkUwe9VeYSQ@mail.gmail.com>

On Sun, Feb 12, 2012 at 7:10 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 02/12/2012 04:13 AM, Donal McMullan wrote:
> > I'm trying to integrate Twisted with libusb-1
> >
> > The libusb-1 Python wrapper offers a USBPoller class to "allow
> > integration of USB event polling in a file-descriptor monitoring event
> > loop." The class expects to receive a 'poller' object, again quoting
> > from the documentation:
> >
> >      poller is a polling instance implementing the following methods:
> >      - register(fd, event_flags)
> >        event_flags have the same meaning as in poll API (POLLIN&
>  POLLOUT)
> >      - unregister(fd)
> >      - poll(timeout)
> >        timeout being a float in seconds, or None if there is no timeout.
> >        It must return a list of (descriptor, event) pairs.
> >      Note: USBPoller is itself a valid poller.
> >
> > I feel like it should be obvious, but I can't see what would be the
> > correct way to integrate this with Twisted. My particular application
> > is to enable networking over the ANT+ protocol via a small USB key.
>
> I've only quickly scanned it, but actually it doesn't look obvious to me
> at all.
>
> I *think* that you want to ignore USBPoller entirely; it looks like it's
> some sort of mini reactor thing, although it's not obvious to me how it
> ever DOES anything.
>
> USBContext looks to be the "thing" that you plug in an event loop to.
>
> However, I'm not certain (perhaps others will comment) that it makes
> sense to integrate it into the Twisted event loop - the file descriptor
> "ready" events don't seem to trigger corresponding "read" events, and
> the USB protocol implementation isn't accessible, so the Twisted model of:
>
>  file ready event -> transport does read -> protocol dataReceived
>
> ...doesn't really apply.
>
> It may be just as easy to write wrapper around your protocol in plain
> non-Twisted python, and talk to it from Twisted over a
> pipe/process/whatever.
>
>  the most simplest way is probably to use another thread to handle all
possible events and use twisted's thread functions to
leverage the whole system though it is inefficient.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120213/c20ab360/attachment-0001.html>

From tom.sheffler at gmail.com  Mon Feb 13 12:54:43 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 13 Feb 2012 11:54:43 -0800
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
Message-ID: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>

After performing a straight-forward install of pyOpenSSL I am getting the
following strange import error.  Suggestions appreciated!

# python
Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)
[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import OpenSSL
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "OpenSSL/__init__.py", line 40, in <module>
    from OpenSSL import crypto
ImportError: cannot import name crypto



Regards,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120213/c61e7bfb/attachment-0001.html>

From JOHN at egh.com  Mon Feb 13 13:44:50 2012
From: JOHN at egh.com (John Santos)
Date: Mon, 13 Feb 2012 15:44:50 -0500
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
In-Reply-To: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
Message-ID: <1120213152120.1057A-400000@Ives.egh.com>


Did you install pycrypto as well?  I think you need to "import Crypto" 
(uppercase "C")

I've got an application written in Twisted that uses pyOpenSSL.  It
also needs pyasn1, but I forget why.  I think the most recent version
of pycrypto required it.

My app is currently using:

  Python 2.7.1
  zope.interface-3.6.1
  Twisted 11.0.0
  pyOpenSSL-0.12
  pyasn1-0.0.11a
  pycrypto-2.3

(I'm about to try it with Twisted 12.0.0, and check for any updates of
the other packages, but it did work with at least some previous versions
of some of them.   I can try to track this down if you are stuck on an
older version of something.)

I installed them in that order.  It's running on Suse Linux Enterprise 
Server 10 SP1, if that turns out to matter.




-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539
-------------- next part --------------
After performing a straight-forward install of pyOpenSSL I am getting the

following strange import error.  Suggestions appreciated!



# python

Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)

[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2

Type "help", "copyright", "credits" or "license" for more information.

>>> import OpenSSL

Traceback (most recent call last):

  File "<stdin>", line 1, in <module>

  File "OpenSSL/__init__.py", line 40, in <module>

    from OpenSSL import crypto

ImportError: cannot import name crypto







Regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120213/96d1a066/attachment.html>
-------------- next part --------------
_______________________________________________

Twisted-Python mailing list

Twisted-Python at twistedmatrix.com

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From George.Pajari at glentel.com  Mon Feb 13 16:30:31 2012
From: George.Pajari at glentel.com (George Pajari)
Date: Mon, 13 Feb 2012 15:30:31 -0800
Subject: [Twisted-Python] Problem with address-literals and SMTP
Message-ID: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>

We're deploying Zenoss and found that some of the email alert messages that were being delivered to Zenoss were not being properly handled. The problem turns out to be an omission in the Python Twisted SMTP class in that it cannot handle an email address that contains an address-literal (cf. Section 4.1.2 or RFC 5321), for example, zenoss@[10.100.1.192]

This is a valid mailbox address but the 8.1.0 version of the Twisted SMTP Class rejects such addresses with a "501 Syntax error". No idea if this has been fixed in more recent versions (and no time to find out for myself).

I am no Python programmer so I'm sure others can do better than this, but here is my fix for this problem:

*** smtp.py
--- smtp.py.original
***************
*** 412,423 ****
                  else:
                      # Now in domain
                      domain = ['']
-             elif atl[0] == '[':
-                 if not domain:
-                     raise AddressError, "[ encountered on LHS"
-                 elif atl[-1] != ']':
-                     raise AddressError, "Unbalanced []"
-                 atl = atl[1:-1]
              elif len(atl[0]) == 1 and not self.atomre.match(atl[0]) and atl[0] !=  '.':
                  raise AddressError, "Parse error at %r of %r" % (atl[0], (addr, atl))
              else:
--- 412,417 ----
***************
*** 627,633 ****

      # A string of quoted strings, backslash-escaped character or
      # atom characters + '@.,:'
!     qstring = r'("[^"]*"|\\.|' + atom + r'|[@.,:\[\]])+'

      mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
                           |<''' + qstring + r'''> # <addr>
--- 621,627 ----

      # A string of quoted strings, backslash-escaped character or
      # atom characters + '@.,:'
!     qstring = r'("[^"]*"|\\.|' + atom + r'|[@.,:])+'

      mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
                           |<''' + qstring + r'''> # <addr>

~~~~~
George Pajari - Glentel Inc.









From itamar at itamarst.org  Mon Feb 13 16:55:59 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 13 Feb 2012 18:55:59 -0500
Subject: [Twisted-Python] Problem with address-literals and SMTP
In-Reply-To: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
References: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
Message-ID: <4F39A30F.8010102@itamarst.org>

Could you file a ticket at twistedmatrix.com? Thanks!



From itamar at itamarst.org  Mon Feb 13 19:49:39 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 13 Feb 2012 21:49:39 -0500
Subject: [Twisted-Python] Have you had problems registering with
 twistedmatrix.com? It may be fixed now
Message-ID: <4F39CBC3.9020101@itamarst.org>

Please try it out and let me know if you can receive registration emails 
now.

-Itamar



From exarkun at twistedmatrix.com  Tue Feb 14 07:41:44 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Feb 2012 14:41:44 -0000
Subject: [Twisted-Python] installing pyOpenSSL on Centos6 help
In-Reply-To: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
References: <CAMBtMctxqY6yWw1MS342St-0z9Dw62ZLk6s6sKSkN3fbZffk7g@mail.gmail.com>
Message-ID: <20120214144144.4103.1680295761.divmod.xquotient.29@localhost6.localdomain6>

On 13 Feb, 07:54 pm, tom.sheffler at gmail.com wrote:
>After performing a straight-forward install of pyOpenSSL I am getting 
>the
>following strange import error.  Suggestions appreciated!
>
># python
>Python 2.6.6 (r266:84292, Dec  7 2011, 20:38:36)
>[GCC 4.4.6 20110731 (Red Hat 4.4.6-3)] on linux2
>Type "help", "copyright", "credits" or "license" for more information.
>>>>import OpenSSL
>Traceback (most recent call last):
>  File "<stdin>", line 1, in <module>
>  File "OpenSSL/__init__.py", line 40, in <module>
>    from OpenSSL import crypto
>ImportError: cannot import name crypto

Notice that the complaint is about "OpenSSL/__init__.py" instead of 
something more sensible like "/usr/lib/python2.6/site- 
packages/OpenSSL/__init__.py".

You're probably testing this using a working directory inside the 
pyOpenSSL source directory, and thus getting the wrong version of the 
OpenSSL package (one that does not include the built extension modules).

Try testing in a different directory - or build the extension modules 
in-place using the -i option to distutils' build_ext command.

If this doesn't solve the problem, consider asking in a forum dedicated 
to CentOS 6 or pyOpenSSL, since the issue isn't really based on any 
software or other materials from the Twisted project.  Also, include 
more information when you do so, for example a full installation 
transcript and a manifest of installed files, otherwise it's not likely 
anyone will be able to provide a better answer.

Jean-Paul



From rogerdpack2 at gmail.com  Wed Feb 15 10:21:05 2012
From: rogerdpack2 at gmail.com (Roger Pack)
Date: Wed, 15 Feb 2012 10:21:05 -0700
Subject: [Twisted-Python] post aluminum donors
Message-ID: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>

Might be nice to post some "side page" for the aluminum level donors,
as well (not the main page, obviously).
Cheers!
-r



From glyph at twistedmatrix.com  Wed Feb 15 14:04:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 15 Feb 2012 16:04:20 -0500
Subject: [Twisted-Python] post aluminum donors
In-Reply-To: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
References: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
Message-ID: <E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>


On Feb 15, 2012, at 12:21 PM, Roger Pack wrote:

> Might be nice to post some "side page" for the aluminum level donors,
> as well (not the main page, obviously).
> Cheers!
> -r

Would you be interested in maintaining such a page? :)

-glyph



From rogerdpack2 at gmail.com  Wed Feb 15 14:20:53 2012
From: rogerdpack2 at gmail.com (Roger Pack)
Date: Wed, 15 Feb 2012 14:20:53 -0700
Subject: [Twisted-Python] post aluminum donors
In-Reply-To: <E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>
References: <CAL1QdWevnVoWgLkvOp03fpUgoa=3Skg2_D1j0PXFj+g2ikWi9g@mail.gmail.com>
	<E7EC110D-7FA0-42CB-B305-3DD60A51C141@twistedmatrix.com>
Message-ID: <CAL1QdWeeGNEj-fr=s7enbTj6qS6Uh5a5dV5CCBX9RF1sO4DPOg@mail.gmail.com>

> Would you be interested in maintaining such a page? :)

Are there many? Would it be hard?



From poisonoff at gmail.com  Fri Feb 17 08:16:51 2012
From: poisonoff at gmail.com (=?UTF-8?B?0JDRgNC60LDQtNC40Lkg0JvQtdCy0LjQvQ==?=)
Date: Fri, 17 Feb 2012 21:16:51 +0600
Subject: [Twisted-Python] Use epoll reactor in pypy
Message-ID: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>

Hi all, how install twisted with epoll reactor on pypy? OS Debian 6.0

Ex:

Python 2.7.1 (7773f8fc4223, Nov 18 2011, 18:47:11)
[PyPy 1.7.0 with GCC 4.4.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
And now for something completely different: ``in theory there is the Loop, in
practice there are bridges''
>>>> from twisted.internet import epollreactor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/usr/src/pypy-1.7/site-packages/Twisted-11.1.0_r33452-py2.7-linux-x86_64.egg/twisted/internet/epollreactor.py",
line 20, in <module>
    from twisted.python import log, _epoll
ImportError: cannot import name '_epoll'
>>>>



From mostawesomedude at gmail.com  Fri Feb 17 14:25:18 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 17 Feb 2012 13:25:18 -0800
Subject: [Twisted-Python] Use epoll reactor in pypy
In-Reply-To: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>
References: <CACgbmJnXDdEokE=FdhhOZppsuU6Mz0daLU99=mTdzMGQ7ObQZw@mail.gmail.com>
Message-ID: <CALiqSLdVBAi5x8umvXa+mOjsM7z8+Zt3T-ZnN9bzSGKnbO6wiQ@mail.gmail.com>

The epoll extension isn't built on PyPy and so I think
http://twistedmatrix.com/trac/ticket/3114 needs to be fixed first.

2012/2/17 Аркадий Левин <poisonoff at gmail.com>:
> Hi all, how install twisted with epoll reactor on pypy? OS Debian 6.0
>
> Ex:
>
> Python 2.7.1 (7773f8fc4223, Nov 18 2011, 18:47:11)
> [PyPy 1.7.0 with GCC 4.4.3] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> And now for something completely different: ``in theory there is the Loop, in
> practice there are bridges''
>>>>> from twisted.internet import epollreactor
> Traceback (most recent call last):
>  File "<console>", line 1, in <module>
>  File "/usr/src/pypy-1.7/site-packages/Twisted-11.1.0_r33452-py2.7-linux-x86_64.egg/twisted/internet/epollreactor.py",
> line 20, in <module>
>    from twisted.python import log, _epoll
> ImportError: cannot import name '_epoll'
>>>>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From exarkun at twistedmatrix.com  Sat Feb 18 08:59:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 18 Feb 2012 15:59:31 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
Message-ID: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>

Hello all,

Since #4558 was merged, introducing "gi reactor" based on the new Python 
bindings for gobject, all testing of the Gtk2 reactor has been disabled, 
on all platforms.

This is a two-part problem.

The first part is the more damaging part, but fortunately also the more 
easily fixed part.  #4558 made it impossible to import 
`twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key. 
This seems to overlook the fact that even a *failed* import of the `gi` 
module adds such a key to that dictionary.  Since the test suite tries 
to test `gireactor`, there will always be such a key, so `gtk2reactor` 
can never be imported by the test suite.

The result is that gtk2reactor is no longer tested by buildbot on any 
platform.

The second part will show up once the first problem is fixed.  Once the 
check correctly ignores `sys.modules["gi"] == None`, it will still be 
impossible to test both gireactor and gtk2reactor in our current 
buildbot configuration.  One or the other will win, and the loser will 
be quietly skipped (apparently too quietly for most people to notice). 
Some new strategy is required so that we can test both of these reactors 
on all our supported platforms.

I hope someone will resolve the first issue quickly, perhaps this 
weekend, so that we don't drift too far away from a working gtk2reactor. 
If it isn't fixed soon, I suggest reverting the merge until the problem 
can be fixed in the #4558 branch.

Jean-Paul



From itamar at itamarst.org  Sat Feb 18 13:19:56 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 18 Feb 2012 15:19:56 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6
	>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
Message-ID: <c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>

I'll see what I can do Monday, starting with reenabling gtk2.

> Hello all,
>
> Since #4558 was merged, introducing "gi reactor" based on the new Python
> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
> on all platforms.
>
> This is a two-part problem.
>
> The first part is the more damaging part, but fortunately also the more
> easily fixed part.  #4558 made it impossible to import
> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
> This seems to overlook the fact that even a *failed* import of the `gi`
> module adds such a key to that dictionary.  Since the test suite tries
> to test `gireactor`, there will always be such a key, so `gtk2reactor`
> can never be imported by the test suite.
>
> The result is that gtk2reactor is no longer tested by buildbot on any
> platform.
>
> The second part will show up once the first problem is fixed.  Once the
> check correctly ignores `sys.modules["gi"] == None`, it will still be
> impossible to test both gireactor and gtk2reactor in our current
> buildbot configuration.  One or the other will win, and the loser will
> be quietly skipped (apparently too quietly for most people to notice).
> Some new strategy is required so that we can test both of these reactors
> on all our supported platforms.
>
> I hope someone will resolve the first issue quickly, perhaps this
> weekend, so that we don't drift too far away from a working gtk2reactor.
> If it isn't fixed soon, I suggest reverting the merge until the problem
> can be fixed in the #4558 branch.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From jstpierre at mecheye.net  Sat Feb 18 14:51:33 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 18 Feb 2012 16:51:33 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<c3184de0aa0755f6b633f7cc019e0cde.squirrel@webmail.zoteca.com>
Message-ID: <CAA0H+QRUyoh-6C7=wjktOQ=XTNw3oJKCS4v6J-XpSxi8vQ=c3Q@mail.gmail.com>

The problem is that both modules cannot be imported simultaneously,
and that's not easily fixable (there's several barriers in there). To
test both you would have to run each test in a subprocess. Maybe you
can have a decorator to run a test in a subprocess.

On Sat, Feb 18, 2012 at 3:19 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> I'll see what I can do Monday, starting with reenabling gtk2.
>
>> Hello all,
>>
>> Since #4558 was merged, introducing "gi reactor" based on the new Python
>> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
>> on all platforms.
>>
>> This is a two-part problem.
>>
>> The first part is the more damaging part, but fortunately also the more
>> easily fixed part.  #4558 made it impossible to import
>> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
>> This seems to overlook the fact that even a *failed* import of the `gi`
>> module adds such a key to that dictionary.  Since the test suite tries
>> to test `gireactor`, there will always be such a key, so `gtk2reactor`
>> can never be imported by the test suite.
>>
>> The result is that gtk2reactor is no longer tested by buildbot on any
>> platform.
>>
>> The second part will show up once the first problem is fixed.  Once the
>> check correctly ignores `sys.modules["gi"] == None`, it will still be
>> impossible to test both gireactor and gtk2reactor in our current
>> buildbot configuration.  One or the other will win, and the loser will
>> be quietly skipped (apparently too quietly for most people to notice).
>> Some new strategy is required so that we can test both of these reactors
>> on all our supported platforms.
>>
>> I hope someone will resolve the first issue quickly, perhaps this
>> weekend, so that we don't drift too far away from a working gtk2reactor.
>> If it isn't fixed soon, I suggest reverting the merge until the problem
>> can be fixed in the #4558 branch.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From exarkun at twistedmatrix.com  Sat Feb 18 22:05:38 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Feb 2012 05:05:38 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1329627938.65.2139476782@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120219/a6e92ef9/attachment-0001.html>

From Zoran.Bosnjak at sloveniacontrol.si  Sun Feb 19 09:49:23 2012
From: Zoran.Bosnjak at sloveniacontrol.si (=?Windows-1252?Q?Zoran_Bo=9Anjak?=)
Date: Sun, 19 Feb 2012 16:49:23 +0000
Subject: [Twisted-Python] accurate periodic call
Message-ID: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>

Hello all,
I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).

I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
- Is this monotonic_time implementation OK from python perspective?
- Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
- Does this patch have any negative influence to the rest of the reactor?
- How would you implement a periodic function call in twisted application (as accurate as possible)?
- Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?

Thanks a lot for your comments.

Zoran

#! /usr/bin/env python

from twisted.internet import task
from twisted.internet import reactor
import os
import time
import ctypes

# python MONOTONIC time, borrowed here
# http://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python
if os.name == 'posix':

    CLOCK_MONOTONIC = 1 # see <linux/time.h>

    class timespec(ctypes.Structure):
        _fields_ = [
            ('tv_sec', ctypes.c_long),
            ('tv_nsec', ctypes.c_long)
        ]

    librt = ctypes.CDLL('librt.so.1', use_errno=True)
    clock_gettime = librt.clock_gettime
    clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]

    def monotonic_time():
        t = timespec()
        if clock_gettime(CLOCK_MONOTONIC, ctypes.pointer(t)) != 0:
            errno_ = ctypes.get_errno()
            raise OSError(errno_, os.strerror(errno_))
        return t.tv_sec + t.tv_nsec * 1e-9

    # monkey patch the reactor
    reactor.seconds = monotonic_time

# TODO: check for other platforms!!
else:
    monotonic_time = time.time

def tick():
    """This function is suppose to execute once a second,
    regardless of the system time."""

    print 'tick', monotonic_time()

loop = task.LoopingCall(tick)
loop.start(1.0)

reactor.run()



From itamar at itamarst.org  Sun Feb 19 20:14:49 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Feb 2012 22:14:49 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
Message-ID: <4F41BAA9.5010709@itamarst.org>

On 02/18/2012 10:59 AM, exarkun at twistedmatrix.com wrote:
> Hello all,
>
> Since #4558 was merged, introducing "gi reactor" based on the new Python
> bindings for gobject, all testing of the Gtk2 reactor has been disabled,
> on all platforms.
>
> This is a two-part problem.
>
> The first part is the more damaging part, but fortunately also the more
> easily fixed part.  #4558 made it impossible to import
> `twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
> This seems to overlook the fact that even a *failed* import of the `gi`
> module adds such a key to that dictionary.  Since the test suite tries
> to test `gireactor`, there will always be such a key, so `gtk2reactor`
> can never be imported by the test suite.
However, if you run with "trial -r gtk2" you *do* get the gtk2 tests to 
run...
> The result is that gtk2reactor is no longer tested by buildbot on any
> platform.
... and as a result the buildbot *would* be testing gtk2 except that, 
unfortunately, the fedora32-py2.5-reactors buildslave is down. Which I 
will follow up on if I can figure out who's running it.
> The second part will show up once the first problem is fixed.  Once the
> check correctly ignores `sys.modules["gi"] == None`, it will still be
> impossible to test both gireactor and gtk2reactor in our current
> buildbot configuration.  One or the other will win, and the loser will
> be quietly skipped (apparently too quietly for most people to notice).
> Some new strategy is required so that we can test both of these reactors
> on all our supported platforms.

The reactors buildslave is a reasonable strategy: have multiple runs 
with different reactors as the main trial reactor. Especially since, 
even in the absence of this problem, we'd want to continue to have full 
runs under the different reactors because the reactor mixin tests don't 
cover everything yet.




From itamar at itamarst.org  Sun Feb 19 21:14:14 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Feb 2012 23:14:14 -0500
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <4F41C896.1080401@itamarst.org>

On 02/19/2012 11:49 AM, Zoran Bošnjak wrote:
> Hello all,
> I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).
>
> I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
> - Is this monotonic_time implementation OK from python perspective?
I didn't read it in detail, but it seems vaguely plausible; overriding 
reactor.seconds is the thing to do.
> - Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
That's probably the easiest in this situation.
> - Does this patch have any negative influence to the rest of the reactor?
Everything is *supposed* to use reactor.seconds - grep for time.time and 
see if it shows up anywhere in twisted.internet.
> - How would you implement a periodic function call in twisted application (as accurate as possible)?
LoopingCall if you had this patch.
> - Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?
>
See http://twistedmatrix.com/trac/ticket/2424 - using ctypes is probably 
easier than the C extension the included patch provides.



From dynamicgl at gmail.com  Sun Feb 19 23:08:46 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 20 Feb 2012 14:08:46 +0800
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F41C896.1080401@itamarst.org>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org>
Message-ID: <CABkOF6QR+40_vu-3WvgzXqYiL55G1+QKF7ndd3mHoNz68rkP7Q@mail.gmail.com>

On Mon, Feb 20, 2012 at 12:14 PM, Itamar Turner-Trauring <
itamar at itamarst.org> wrote:

> On 02/19/2012 11:49 AM, Zoran Bošnjak wrote:
> > Hello all,
> > I was astonished to find out that looping call period depends on the
> system time by default. The periodic tick can even stall for a long time,
> if the system time jumps backwards during program execution. It turned out
> that this is in fact a python problem (not providing a monotonic time, at
> least not for posix).
> >
> > I urgently need accurate periodic call in my program and I've found the
> solution below that seems to be working. I kindly ask you for your comments:
> > - Is this monotonic_time implementation OK from python perspective?
> I didn't read it in detail, but it seems vaguely plausible; overriding
> reactor.seconds is the thing to do.
> > - Is monkey patch to the reactor OK or is there any other solution more
> appropriate in this case (I do not want to patch each looping call, but
> once in the application)?
> That's probably the easiest in this situation.
> > - Does this patch have any negative influence to the rest of the reactor?
> Everything is *supposed* to use reactor.seconds - grep for time.time and
> see if it shows up anywhere in twisted.internet.
> > - How would you implement a periodic function call in twisted
> application (as accurate as possible)?
> LoopingCall if you had this patch.
> > - Any chance to see something implemented inside twisted and/or python,
> so that applications don't need this kind of tricks?
> >
> See http://twistedmatrix.com/trac/ticket/2424 - using ctypes is probably
> easier than the C extension the included patch provides.
>
>
_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Does it work on windows??
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120220/252dc404/attachment.html>

From solipsis at pitrou.net  Mon Feb 20 03:21:08 2012
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 20 Feb 2012 11:21:08 +0100
Subject: [Twisted-Python] accurate periodic call
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <20120220112108.6c9d7af8@pitrou.net>

On Sun, 19 Feb 2012 16:49:23 +0000
Zoran Bošnjak <Zoran.Bosnjak at sloveniacontrol.si> wrote:

> Hello all,
> I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).
> 
> I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
> - Is this monotonic_time implementation OK from python perspective?

For the record:
http://docs.python.org/dev/library/time.html#time.clock_gettime
http://docs.python.org/dev/library/time.html#time.monotonic

You'll have to fallback on the normal time when clock_gettime() fails
(which can happen if there is a mismatch between glibc version and
kernel version, for example).

clock_gettime() is a POSIX standard so you probably shouldn't use a
Linux-specific magic value for CLOCK_MONOTONIC.

Regards

Antoine.





From p.mayers at imperial.ac.uk  Mon Feb 20 05:09:28 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Feb 2012 12:09:28 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F41C896.1080401@itamarst.org>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org>
Message-ID: <4F4237F8.80408@imperial.ac.uk>

On 20/02/12 04:14, Itamar Turner-Trauring wrote:

> See http://twistedmatrix.com/trac/ticket/2424

I find that ticket disturbing reading.

The original description seems to claim there is a logic bug in 
LoopingCall that is triggered when the clock goes back, but subsequent 
discussion is all about the pros and cons of monotonic clocks.

Is there such a bug, and if so should there be a separate ticket for it?

Independent of monotonic clocks, it seems clear that LoopingCall 
stopping and never restarting is bad. Being called with the wrong 
interval is tedious, but far less serious, surely?



From exarkun at twistedmatrix.com  Mon Feb 20 07:29:56 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 14:29:56 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F4237F8.80408@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
Message-ID: <20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>

On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>See http://twistedmatrix.com/trac/ticket/2424
>
>I find that ticket disturbing reading.
>
>The original description seems to claim there is a logic bug in
>LoopingCall that is triggered when the clock goes back, but subsequent
>discussion is all about the pros and cons of monotonic clocks.
>
>Is there such a bug, and if so should there be a separate ticket for 
>it?

There is no such bug, as far as I am aware.

Jean-Paul



From exarkun at twistedmatrix.com  Mon Feb 20 08:10:05 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 15:10:05 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <4F41BAA9.5010709@itamarst.org>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
Message-ID: <20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>

On 03:14 am, itamar at itamarst.org wrote:
>On 02/18/2012 10:59 AM, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>Since #4558 was merged, introducing "gi reactor" based on the new 
>>Python
>>bindings for gobject, all testing of the Gtk2 reactor has been 
>>disabled,
>>on all platforms.
>>
>>This is a two-part problem.
>>
>>The first part is the more damaging part, but fortunately also the 
>>more
>>easily fixed part.  #4558 made it impossible to import
>>`twisted.internet.gtk2reactor` if `sys.modules` contains a "gi" key.
>>This seems to overlook the fact that even a *failed* import of the 
>>`gi`
>>module adds such a key to that dictionary.  Since the test suite tries
>>to test `gireactor`, there will always be such a key, so `gtk2reactor`
>>can never be imported by the test suite.
>However, if you run with "trial -r gtk2" you *do* get the gtk2 tests to
>run...
>>The result is that gtk2reactor is no longer tested by buildbot on any
>>platform.
>... and as a result the buildbot *would* be testing gtk2 except that,
>unfortunately, the fedora32-py2.5-reactors buildslave is down. Which I
>will follow up on if I can figure out who's running it.
>>The second part will show up once the first problem is fixed.  Once 
>>the
>>check correctly ignores `sys.modules["gi"] == None`, it will still be
>>impossible to test both gireactor and gtk2reactor in our current
>>buildbot configuration.  One or the other will win, and the loser will
>>be quietly skipped (apparently too quietly for most people to notice).
>>Some new strategy is required so that we can test both of these 
>>reactors
>>on all our supported platforms.
>
>The reactors buildslave is a reasonable strategy: have multiple runs
>with different reactors as the main trial reactor. Especially since,
>even in the absence of this problem, we'd want to continue to have full
>runs under the different reactors because the reactor mixin tests don't
>cover everything yet.

... with the caveat that *eventually* the mixin tests should cover 
everything, and then we will want to stop running trial with different 
-r arguments.  And perhaps the further caveat that we won't test both of 
these reactors on Windows, because we've already overloaded our Windows 
slave capacity and we can't really add more trial steps with different 
-r arguments.

Jean-Paul



From exarkun at twistedmatrix.com  Mon Feb 20 08:12:58 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 15:12:58 -0000
Subject: [Twisted-Python] CopyableFailure fails
In-Reply-To: <2425488.4tZL83B2Xu@i5>
References: <3290289.1zpldiYC5f@i5>
	<20120206231229.4064.859507270.divmod.xquotient.53@localhost6.localdomain6>
	<2425488.4tZL83B2Xu@i5>
Message-ID: <20120220151258.3550.1316492892.divmod.xquotient.123@localhost6.localdomain6>

On 7 Feb, 12:41 am, wolfgang at rohdewald.de wrote:
>Am Montag, 6. Februar 2012, 23:12:29 schrieb exarkun at twistedmatrix.com:
>>On 08:07 pm, wolfgang at rohdewald.de wrote:
>> >Hi,
>>
>> >with twisted 11.0.0 and python 2.7, my error fails here:
>>Hello,
>>
>>Please provide a minimal example reproducing the problem so we can
>>discuss it.  See http://sscce.org/ for more details.
>
>I was hoping it would be self-evident. Trimming this to a short example
>could be rather much work. I hope the full backtrace will help.

Would anyone else like to try to construct a minimal example for this 
and file a ticket for it?  The problem *appears* to be due to the fact 
that `Exception` does not support conversion to a string when it is 
wrapped around unicode.  eg,

  >>> str(Exception(u'\N{SNOWMAN}'))
  Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
  UnicodeEncodeError: 'ascii' codec can't encode character u'\u2603' in 
position 0: ordinal not in range(128)
  >>>
Jean-Paul



From itamar at itamarst.org  Mon Feb 20 08:46:25 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 20 Feb 2012 10:46:25 -0500
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
	<20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
Message-ID: <4F426AD1.3030808@itamarst.org>

On 02/20/2012 10:10 AM, exarkun at twistedmatrix.com wrote:
> On 03:14 am, itamar at itamarst.org wrote:
>
>> The reactors buildslave is a reasonable strategy: have multiple runs
>> with different reactors as the main trial reactor. Especially since,
>> even in the absence of this problem, we'd want to continue to have full
>> runs under the different reactors because the reactor mixin tests don't
>> cover everything yet.
> ... with the caveat that *eventually* the mixin tests should cover
> everything, and then we will want to stop running trial with different
> -r arguments.  And perhaps the further caveat that we won't test both of
> these reactors on Windows, because we've already overloaded our Windows
> slave capacity and we can't really add more trial steps with different
> -r arguments.

While this is true up to a point, developers would still need to rely on 
Buildbot runs because if you're on Linux you can't test IOCP or kqueue 
locally even if ReactorMixin style tests had full coverage. So requiring 
one extra "trial -r" in a buildslave won't make a difference to 
developers; they will not be able to rely on local runs for full test 
coverage no matter what.



From nicolas.agius at lps-it.fr  Mon Feb 20 10:04:54 2012
From: nicolas.agius at lps-it.fr (Nicolas AGIUS)
Date: Mon, 20 Feb 2012 17:04:54 +0000 (GMT)
Subject: [Twisted-Python] Which mocker tool for trial ?
Message-ID: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>

Hi,

I'm writing unitests with Trial for my app.

I use Python Mocker (http://labix.org/mocker) for making stubs and mock. It work almost fine, but I have trouble mocking static methods.  It seems that Mocker does'nt work with static methods called from a callback.

Which tool are you using for mocking ?

Thanks,
Nicolas AGIUS
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120220/1487f96e/attachment-0001.html>

From p.mayers at imperial.ac.uk  Mon Feb 20 10:52:09 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Feb 2012 17:52:09 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
Message-ID: <4F428849.5000906@imperial.ac.uk>

On 20/02/12 14:29, exarkun at twistedmatrix.com wrote:
> On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>> On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>> See http://twistedmatrix.com/trac/ticket/2424
>>
>> I find that ticket disturbing reading.
>>
>> The original description seems to claim there is a logic bug in
>> LoopingCall that is triggered when the clock goes back, but subsequent
>> discussion is all about the pros and cons of monotonic clocks.
>>
>> Is there such a bug, and if so should there be a separate ticket for
>> it?
>
> There is no such bug, as far as I am aware.

Phew! In which case, it's not disturbing. Thanks for the clarification.

Slightly confusing that the OP seemed to experience such a bug, but it 
was 6 years ago I guess...



From exarkun at twistedmatrix.com  Mon Feb 20 10:56:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 17:56:39 -0000
Subject: [Twisted-Python] Regression in Gtk2 support testing
In-Reply-To: <4F426AD1.3030808@itamarst.org>
References: <20120218155931.3550.200301085.divmod.xquotient.49@localhost6.localdomain6>
	<4F41BAA9.5010709@itamarst.org>
	<20120220151005.3550.1707342293.divmod.xquotient.119@localhost6.localdomain6>
	<4F426AD1.3030808@itamarst.org>
Message-ID: <20120220175639.3550.391559263.divmod.xquotient.132@localhost6.localdomain6>

On 03:46 pm, itamar at itamarst.org wrote:
>On 02/20/2012 10:10 AM, exarkun at twistedmatrix.com wrote:
>>On 03:14 am, itamar at itamarst.org wrote:
>>>The reactors buildslave is a reasonable strategy: have multiple runs
>>>with different reactors as the main trial reactor. Especially since,
>>>even in the absence of this problem, we'd want to continue to have 
>>>full
>>>runs under the different reactors because the reactor mixin tests 
>>>don't
>>>cover everything yet.
>>... with the caveat that *eventually* the mixin tests should cover
>>everything, and then we will want to stop running trial with different
>>-r arguments.  And perhaps the further caveat that we won't test both 
>>of
>>these reactors on Windows, because we've already overloaded our 
>>Windows
>>slave capacity and we can't really add more trial steps with different
>>-r arguments.
>
>While this is true up to a point, developers would still need to rely 
>on
>Buildbot runs because if you're on Linux you can't test IOCP or kqueue
>locally even if ReactorMixin style tests had full coverage.

Nor can you test them locally with "trial -r".  So... non sequitor?
>
>So requiring
>one extra "trial -r" in a buildslave won't make a difference to
>developers; they will not be able to rely on local runs for full test
>coverage no matter what.

Right.  It makes a difference to the BuildBot deployment, which may melt 
into slag under the weight of increased testing requirements.  Or, more 
seriously, it actually does make a difference to developers, because it 
extends the length of the "test on BuildBot" phase of the development 
process from 40 minutes to 80 minutes, or makes it impossible to 
complete sometimes because the extra load has knocked slaves offline, 
etc.

I feel we might be talking past each other, but I can't quite put my 
finger on how or why.  I hope this email expresses my concerns more 
clearly.

Jean-Paul



From exarkun at twistedmatrix.com  Mon Feb 20 13:13:56 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 20 Feb 2012 20:13:56 -0000
Subject: [Twisted-Python] Which mocker tool for trial ?
In-Reply-To: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
References: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
Message-ID: <20120220201356.3550.73980670.divmod.xquotient.139@localhost6.localdomain6>

On 05:04 pm, nicolas.agius at lps-it.fr wrote:
>Hi,
>
>I'm writing unitests with Trial for my app.
>
>I use Python Mocker (http://labix.org/mocker) for making stubs and 
>mock. It work almost fine, but I have trouble mocking static methods. 
>It seems that Mocker does'nt work with static methods called from a 
>callback.

If Python Mocker is failing to handle some case, it's somewhat likely 
that it's not a problem caused by Twisted or Trial, but a problem with 
Python Mocker or a problem with the way you're using it.  Twisted is 
just a Python library, all of the normal Python rules still apply.
>
>Which tool are you using for mocking ?

I typically avoid mocking as a testing approach, preferring verified 
fakes due to their reduced maintenance overhead and the fewer 
metaprogramming tricks required to have them work.

Jean-Paul



From glyph at twistedmatrix.com  Mon Feb 20 13:32:19 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 20 Feb 2012 15:32:19 -0500
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F428849.5000906@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
Message-ID: <817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>


On Feb 20, 2012, at 12:52 PM, Phil Mayers wrote:

> On 20/02/12 14:29, exarkun at twistedmatrix.com wrote:
>> On 12:09 pm, p.mayers at imperial.ac.uk wrote:
>>> On 20/02/12 04:14, Itamar Turner-Trauring wrote:
>>>> See http://twistedmatrix.com/trac/ticket/2424
>>> 
>>> I find that ticket disturbing reading.
>>> 
>>> The original description seems to claim there is a logic bug in
>>> LoopingCall that is triggered when the clock goes back, but subsequent
>>> discussion is all about the pros and cons of monotonic clocks.
>>> 
>>> Is there such a bug, and if so should there be a separate ticket for
>>> it?
>> 
>> There is no such bug, as far as I am aware.
> 
> Phew! In which case, it's not disturbing. Thanks for the clarification.
> 
> Slightly confusing that the OP seemed to experience such a bug, but it 
> was 6 years ago I guess...

Well, it depends on how you define a "bug".  LoopingCall's internal state remains consistent, but if you set your clock backwards, LoopingCall won't fire your callback again until the system clock catches up to where it previously was.  Any new LoopingCalls that are created will work fine, although they will probably report an incorrect skipCount if you set the clock forward again.

This can be quite dramatic if you change the date, of course, but if you're talking about adjustments like NTP slew it's unlikely you'll notice it.

-glyph


From johan.rydberg at edgeware.tv  Tue Feb 21 00:58:39 2012
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 21 Feb 2012 08:58:39 +0100
Subject: [Twisted-Python] Which mocker tool for trial ?
In-Reply-To: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
References: <1329757494.19246.YahooMailClassic@web28407.mail.ukl.yahoo.com>
Message-ID: <33C438D9-4FAE-4148-B87C-E2CD15AFC716@edgeware.tv>

We're using python-mockito and it works pretty good.  I've also hacked it a bit
so that it works with zope interfaces.  See this post, which also contains a link
to the bitbucket project:

http://jrydberg.me/post/10519590583/strict-mocking-with-zope-interfaces

On Feb 20, 2012, at 6:04 PM, Nicolas AGIUS wrote:

> Which tool are you using for mocking ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120221/22966a7d/attachment.html>

From p.mayers at imperial.ac.uk  Tue Feb 21 04:05:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 21 Feb 2012 11:05:33 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
Message-ID: <4F437A7D.7050801@imperial.ac.uk>

On 20/02/12 20:32, Glyph wrote:

> Well, it depends on how you define a "bug".  LoopingCall's internal
> state remains consistent, but if you set your clock backwards,
> LoopingCall won't fire your callback again until the system clock
> catches up to where it previously was.  Any new LoopingCalls that are
> created will work fine, although they will probably report an
> incorrect skipCount if you set the clock forward again.

Ah. This doesn't jump out from the original ticket text; the way I read 
the text, it implies the LoopingCall stops being *scheduled* if the 
clock goes backwards.

If I'm understanding it correctly, the problem is actually that the 
callLater for the next run doesn't fire when expected, because it's 
scheduled in the "pre-change" timeframe (now the future). As opposed to 
being anything in the LoopingCall code?

I realise this is tricky to solve, but I'll note it's not impossible for 
really REALLY big clock skews to happen. For example: recently we had a 
server kernel panic and need a cold reboot. The machine booted and read 
it's time from the CMOS clock, which was way WAY out. A minute or two 
after the machine had booted, NTP slewed the clock back by months... 
Fortunately this box doesn't run any Twisted code that a) starts on boot 
and b) makes use of LoopingCall.

[I know this is horrible, but a lot of Unix distros don't sync system to 
hardware clock periodically - usually on shutdown only - and a lot of 
distros don't block boot until NTP has set the clock]

I realise it's an edge case; but at the very least, it is probably worth 
updating the LoopingCall/IReactorTime.callLater documentation to make 
this behaviour clear, because I certainly didn't appreciate this could 
occur. It's pretty obvious in hindsight, though.



From exarkun at twistedmatrix.com  Tue Feb 21 07:16:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Feb 2012 14:16:54 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F437A7D.7050801@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
	<4F437A7D.7050801@imperial.ac.uk>
Message-ID: <20120221141654.3550.1333974898.divmod.xquotient.144@localhost6.localdomain6>

On 11:05 am, p.mayers at imperial.ac.uk wrote:
>On 20/02/12 20:32, Glyph wrote:
>>Well, it depends on how you define a "bug".  LoopingCall's internal
>>state remains consistent, but if you set your clock backwards,
>>LoopingCall won't fire your callback again until the system clock
>>catches up to where it previously was.  Any new LoopingCalls that are
>>created will work fine, although they will probably report an
>>incorrect skipCount if you set the clock forward again.
>
>Ah. This doesn't jump out from the original ticket text; the way I read
>the text, it implies the LoopingCall stops being *scheduled* if the
>clock goes backwards.
>
>If I'm understanding it correctly, the problem is actually that the
>callLater for the next run doesn't fire when expected, because it's
>scheduled in the "pre-change" timeframe (now the future). As opposed to
>being anything in the LoopingCall code?
>
>I realise this is tricky to solve, but I'll note it's not impossible 
>for
>really REALLY big clock skews to happen. For example: recently we had a
>server kernel panic and need a cold reboot. The machine booted and read
>it's time from the CMOS clock, which was way WAY out. A minute or two
>after the machine had booted, NTP slewed the clock back by months...
>Fortunately this box doesn't run any Twisted code that a) starts on 
>boot
>and b) makes use of LoopingCall.

I've fixed this problem before by ensuring ntp gets to run before other 
time-sensitive services get to start.

Jean-Paul
>[I know this is horrible, but a lot of Unix distros don't sync system 
>to
>hardware clock periodically - usually on shutdown only - and a lot of
>distros don't block boot until NTP has set the clock]
>
>I realise it's an edge case; but at the very least, it is probably 
>worth
>updating the LoopingCall/IReactorTime.callLater documentation to make
>this behaviour clear, because I certainly didn't appreciate this could
>occur. It's pretty obvious in hindsight, though.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mithrandi at mithrandi.net  Tue Feb 21 20:20:16 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 22 Feb 2012 05:20:16 +0200
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <4F437A7D.7050801@imperial.ac.uk>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<4F41C896.1080401@itamarst.org> <4F4237F8.80408@imperial.ac.uk>
	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>
	<4F428849.5000906@imperial.ac.uk>
	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>
	<4F437A7D.7050801@imperial.ac.uk>
Message-ID: <CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>

On Tue, Feb 21, 2012 at 1:05 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I realise this is tricky to solve, but I'll note it's not impossible for
> really REALLY big clock skews to happen. For example: recently we had a
> server kernel panic and need a cold reboot. The machine booted and read
> it's time from the CMOS clock, which was way WAY out. A minute or two
> after the machine had booted, NTP slewed the clock back by months...

This is kind of a nitpick, but I think it's a fairly important one:
"slewing" the clock refers to a process where the clock frequency is
adjusted to make it run faster or slower in order to catch up or lose
a few seconds, without any discontinuities in the clock. This is a
relatively slow process, so "slewing" the clock by months would take
millennia; instead, beyond a certain threshold (I think a few
seconds?), ntp will always step the clock, not slew it, which is when
applications start running into difficulty as stepping introduces a
discontinuity in the clock.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From p.mayers at imperial.ac.uk  Wed Feb 22 02:21:45 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2012 09:21:45 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>	<4F41C896.1080401@itamarst.org>
	<4F4237F8.80408@imperial.ac.uk>	<20120220142956.3550.409497684.divmod.xquotient.63@localhost6.localdomain6>	<4F428849.5000906@imperial.ac.uk>	<817B9127-B415-4E39-B39B-070AD9DF6B45@twistedmatrix.com>	<4F437A7D.7050801@imperial.ac.uk>
	<CAMcKhMRwmir2HZfmz4qHbrJCe4XSZNqsANDD9DxrZvWavA7-fw@mail.gmail.com>
Message-ID: <4F44B3A9.9070901@imperial.ac.uk>

On 02/22/2012 03:20 AM, Tristan Seligmann wrote:
> On Tue, Feb 21, 2012 at 1:05 PM, Phil Mayers<p.mayers at imperial.ac.uk>  wrote:
>> I realise this is tricky to solve, but I'll note it's not impossible for
>> really REALLY big clock skews to happen. For example: recently we had a
>> server kernel panic and need a cold reboot. The machine booted and read
>> it's time from the CMOS clock, which was way WAY out. A minute or two
>> after the machine had booted, NTP slewed the clock back by months...
>
> This is kind of a nitpick, but I think it's a fairly important one:
> "slewing" the clock refers to a process where the clock frequency is

Sorry, you're quite right. Stepping, not slewing. Brain hiccup.



From jonathan+twisted at jsphere.com  Wed Feb 22 04:47:46 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Wed, 22 Feb 2012 13:47:46 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
Message-ID: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>

Hello,

I'm hoping to wrap up work on ticket #3844 [1] before the next release of Twisted, however there are a few quirks in the small DSL used for specifying text with attributes (see the ticket for some commentary on these.)

I decided to look more closely at what happens with Conch (which is where the DSL originally came from and has remained largely unchanged) in some of the places I was having problems with the IRC formatting. I was struck by something that looks like it is rather incorrect behaviour (on Twisted trunk as of 2012/2/22 and Twisted 11.0.0 on Debian):

>>> from twisted.conch.insults.helper import CharacterAttribute
>>> from twisted.conch.insults.text import flatten, attributes as A
>>> flatten(A.normal['hello', A.bold[' world '], 'quux'], CharacterAttribute())
'hello\x1b[1m world quux'

My expectations are that only " world " will be marked up with bold attributes, since it is the only piece of content in the "bold" attribute, while "hello" and "quux" both appear in normal text, i.e. without any additional markup. Looking at the output you can see that "hello" appears as normal text and then " world quux" appears in bold.

Is this the expected behaviour? There are no tests that actually test this particular case, as far as I can tell, except for twisted.conch.test.test_text.EfficiencyTestCase but that is marked as "todo" (the tests themselves do indeed fail.) While the name of this test case indicates tests for efficient markup, as far as I can tell these tests also assume (and fail) that the structure is flattened the same way I was expecting.

Any guidance would be appreciated.

Regards

[1] <http://twistedmatrix.com/trac/ticket/3844>

-- 
Jonathan





From screwtape at froup.com  Wed Feb 22 08:25:56 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 23 Feb 2012 02:25:56 +1100
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
Message-ID: <20120222152556.GO23050@boombah.thristian.org>

On Wed, Feb 22, 2012 at 01:47:46PM +0200, Jonathan Jacobs wrote:
> >>> from twisted.conch.insults.helper import CharacterAttribute
> >>> from twisted.conch.insults.text import flatten, attributes as A
> >>> flatten(A.normal['hello', A.bold[' world '], 'quux'], CharacterAttribute())
> 'hello\x1b[1m world quux'
> 
> My expectations are that only " world " will be marked up with bold
> attributes, since it is the only piece of content in the "bold"
> attribute, while "hello" and "quux" both appear in normal text, i.e.
> without any additional markup. Looking at the output you can see that
> "hello" appears as normal text and then " world quux" appears in bold.

Since it's in twisted.conch, I'm guessing that this character-attribute
stuff is designed to model the VT100 character attribute system, rather
than some generic tree-of-strings-and-attributes. For example, somebody
used to the way HTML works might want to nest bold and italics like
this:

    <i>hello <b>world</b> quux</i>

However, to achieve the same result on a traditional terminal (and using
the tput(1) command to produce the formatting codes), you'd have to do
something like this:

    tput sitm	    # enable italics
    echo -n "hello "
    tput bold	    # enable bold
    echo -n "world"
    tput sgr0	    # disable all special attributes
    tput sitm	    # enable italics again
    echo " quux"

...that is, there's no code for 'end bold' or 'end italics' (or blink, dim,
underline, invisible, any kind of colouring, etc.) just an 'end all
special attributes' code. Therefore it's reasonable for conch's helper
library to not handle nested formatting, since no terminal program will
produce such a thing, because it's impossible to represent in the
VT100/VT200 formatting language.

I guess an argument could be made that the helper function should track
which attributes are enabled at any particular point in the string, and
calculate the correct sequence of disable-everything/re-enable-the-
remaining-attributes codes, but evidently nobody's needed such a thing
before.



From jonathan+twisted at jsphere.com  Wed Feb 22 09:15:30 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Wed, 22 Feb 2012 18:15:30 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <20120222152556.GO23050@boombah.thristian.org>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
Message-ID: <CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>

On Wed, Feb 22, 2012 at 17:25, Tim Allen <screwtape at froup.com> wrote:
> ...that is, there's no code for 'end bold' or 'end italics' (or blink, dim,
> underline, invisible, any kind of colouring, etc.) just an 'end all
> special attributes' code. Therefore it's reasonable for conch's helper
> library to not handle nested formatting, since no terminal program will
> produce such a thing, because it's impossible to represent in the
> VT100/VT200 formatting language.

I understand this, but then what is the point of placing content into
A.bold in the first place? Why not just drop A.bold into a flat
stream: [foo, A.bold, bar]

What's more confusing is that there are a handful of tests that
describe this nesting and even test it, although none of them (except
for the one marked TODO, which fails because of the problem I've
described) actually test adding things to the parent level after
nesting an attribute.

> I guess an argument could be made that the helper function should track
> which attributes are enabled at any particular point in the string, and
> calculate the correct sequence of disable-everything/re-enable-the-
> remaining-attributes codes, but evidently nobody's needed such a thing
> before.

It's not actually even all that hard, there is nothing in particular
to additionally track if you don't mind being a little inefficient
about it, which is how the IRC code in #3844 does it.

-- 
Jonathan



From nicolas.agius at lps-it.fr  Wed Feb 22 15:15:58 2012
From: nicolas.agius at lps-it.fr (Nicolas AGIUS)
Date: Wed, 22 Feb 2012 22:15:58 +0000 (GMT)
Subject: [Twisted-Python] Which mocker tool for trial ?
Message-ID: <1329948958.70905.YahooMailClassic@web28411.mail.ukl.yahoo.com>

Thanks for the tips, Mockito work great with Trial.

But it's a bit lazy for my needs, I think I''ll try to use Mock (http://www.voidspace.org.uk/python/mock/)

Thx

--- En date de : Mar 21.2.12, Johan Rydberg <johan.rydberg at edgeware.tv> a écrit :

De: Johan Rydberg <johan.rydberg at edgeware.tv>
Objet: Re: [Twisted-Python] Which mocker tool for trial ?
À: nicolas.agius at lps-it.fr, "Twisted general discussion" <twisted-python at twistedmatrix.com>
Date: Mardi 21 février 2012, 8h58

We're using python-mockito and it works pretty good.  I've also hacked it a bitso that it works with zope interfaces.  See this post, which also contains a linkto the bitbucket project:
http://jrydberg.me/post/10519590583/strict-mocking-with-zope-interfaces
On Feb 20, 2012, at 6:04 PM, Nicolas AGIUS wrote:
Which tool are you using for mocking ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120222/16a51cb1/attachment-0001.html>

From bino at indoakses-online.com  Thu Feb 23 02:22:31 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 23 Feb 2012 16:22:31 +0700
Subject: [Twisted-Python] Question : Failed to read gpsfake
Message-ID: <4F460557.8020300@indoakses-online.com>

Dear All ...

I try to simulate a gps with gpsfake.
gpsfake create virtual port at /dev/pts/4

my code is posted at : http://pastebin.com/j2wn1aXh

It's never reach the 'lineReceived' part.
I Got no error msg.

The log only said

2012-02-23 16:02:50+0700 [-] Log opened.
2012-02-23 16:02:50+0700 [-] twistd 11.1.0 (/usr/bin/python 2.6.6) 
starting up.
2012-02-23 16:02:50+0700 [-] reactor class: 
twisted.internet.pollreactor.PollReactor.
2012-02-23 16:02:50+0700 [-] debug : Serial Service start


Kindly please give me any enlightment about this problem

Sincerely
-bino-







From itamar at itamarst.org  Thu Feb 23 05:49:58 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 23 Feb 2012 07:49:58 -0500
Subject: [Twisted-Python] Question : Failed to read gpsfake
In-Reply-To: <4F460557.8020300@indoakses-online.com>
References: <4F460557.8020300@indoakses-online.com>
Message-ID: <4F4635F6.8040300@itamarst.org>

On 02/23/2012 04:22 AM, bino oetomo wrote:
> Dear All ...
>
> I try to simulate a gps with gpsfake.
> gpsfake create virtual port at /dev/pts/4
>
> my code is posted at : http://pastebin.com/j2wn1aXh
>
> It's never reach the 'lineReceived' part.
> I Got no error msg.
>
> The log only said
>
> 2012-02-23 16:02:50+0700 [-] Log opened.
> 2012-02-23 16:02:50+0700 [-] twistd 11.1.0 (/usr/bin/python 2.6.6)
> starting up.
> 2012-02-23 16:02:50+0700 [-] reactor class:
> twisted.internet.pollreactor.PollReactor.
> 2012-02-23 16:02:50+0700 [-] debug : Serial Service start
>
>
> Kindly please give me any enlightment about this problem

By default LineReceiver assumes you are receiving lines that end with 
'\r\n'. Are you sure that's what the fake serial port is sending? 
Possibly you want to just use a custom protocol and override 
dataReceived to begin with.



From exarkun at twistedmatrix.com  Thu Feb 23 07:12:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 14:12:26 -0000
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
	<CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
Message-ID: <20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>

On 22 Feb, 04:15 pm, jonathan+twisted at jsphere.com wrote:
>On Wed, Feb 22, 2012 at 17:25, Tim Allen <screwtape at froup.com> wrote:
>>...that is, there's no code for 'end bold' or 'end italics' (or blink, 
>>dim,
>>underline, invisible, any kind of colouring, etc.) just an 'end all
>>special attributes' code. Therefore it's reasonable for conch's helper
>>library to not handle nested formatting, since no terminal program 
>>will
>>produce such a thing, because it's impossible to represent in the
>>VT100/VT200 formatting language.
>
>I understand this, but then what is the point of placing content into
>A.bold in the first place? Why not just drop A.bold into a flat
>stream: [foo, A.bold, bar]

I think the behavior you observed is a bug in the implementation (I 
noticed it during our IRC conversation the other day as well, but wasn't 
sure if I'd made a mistake or misread something).  It should be fixed, 
and perhaps that TODO test made to pass. :)

Jean-Paul



From exarkun at twistedmatrix.com  Thu Feb 23 07:38:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Feb 2012 14:38:39 -0000
Subject: [Twisted-Python] Problem with address-literals and SMTP
In-Reply-To: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
References: <934E622B-8638-47CC-BB3B-2B2388860E25@glentel.com>
Message-ID: <20120223143839.28567.1370135827.divmod.xquotient.22@localhost6.localdomain6>

On 13 Feb, 11:30 pm, george.pajari at glentel.com wrote:
>We're deploying Zenoss and found that some of the email alert messages 
>that were being delivered to Zenoss were not being properly handled. 
>The problem turns out to be an omission in the Python Twisted SMTP 
>class in that it cannot handle an email address that contains an 
>address-literal (cf. Section 4.1.2 or RFC 5321), for example, 
>zenoss@[10.100.1.192]
>
>This is a valid mailbox address but the 8.1.0 version of the Twisted 
>SMTP Class rejects such addresses with a "501 Syntax error". No idea if 
>this has been fixed in more recent versions (and no time to find out 
>for myself).
>
>I am no Python programmer so I'm sure others can do better than this, 
>but here is my fix for this problem:

Thanks.  I filed a ticket for this in our issue tracker, 
<http://tm.tl/5498>.

Jean-Paul



From jonathan+twisted at jsphere.com  Fri Feb 24 02:59:22 2012
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Fri, 24 Feb 2012 11:59:22 +0200
Subject: [Twisted-Python] Conch text attribute flattening quirks
In-Reply-To: <20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>
References: <CF59351F5E184C639BCDF4317AB6DF15@jsphere.com>
	<20120222152556.GO23050@boombah.thristian.org>
	<CAM187SEHh+nr8rxULdaXbDLFkCnJVLSO28yu2q0iXkq2Nv-PuA@mail.gmail.com>
	<20120223141226.28567.1855839290.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <CAM187SHcjBf=fhCA3rwxG=TVZi0M6u5Kz61ePHasdc2oXKOMzQ@mail.gmail.com>

On Thu, Feb 23, 2012 at 16:12,  <exarkun at twistedmatrix.com> wrote:
> I think the behavior you observed is a bug in the implementation (I
> noticed it during our IRC conversation the other day as well, but wasn't
> sure if I'd made a mistake or misread something).  It should be fixed,
> and perhaps that TODO test made to pass. :)

Should I file a new ticket for this and do the work in a separate branch?

In terms of making the TODO test pass: Unless I'm mistaken it looks to
me that the render method (toVT102, toMIRCControlCode, etc.) will have
to be passed the current attribute state in order to determine what it
needs to emit to be most efficient. Do you see any better way to
achieve this?



From exarkun at twistedmatrix.com  Fri Feb 24 06:36:00 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Feb 2012 13:36:00 -0000
Subject: [Twisted-Python] Spam on http://twistedmatrix.com/trac/
Message-ID: <20120224133600.28567.455624195.divmod.xquotient.78@localhost6.localdomain6>

Hello all,

Just a reminder: if you see spam on the website, please let a site admin 
know about it.  Don't try to remove it unless you have proper 
administrative privileges to *completely* remove it.

Thanks!
Jean-Paul



From exarkun at twistedmatrix.com  Sat Feb 25 22:05:32 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Feb 2012 05:05:32 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1330232732.63.773941380@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120226/6e960b92/attachment-0001.html>

From brad.milne at devx.runthered.com  Mon Feb 27 18:48:18 2012
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Tue, 28 Feb 2012 14:48:18 +1300
Subject: [Twisted-Python] smtp sendmail DSN - NOTIFY
Message-ID: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>

Hi all

We're using the twisted.mail.smtp.sendmail(..) function to push emails. The
options one can pass to it are fairly limited. In particular I'm looking to
specify the DSN value NOTIFY=SUCCESS in the RCPT calls. Is
this implemented elsewhere in the smtp library?

(I can see mention of it missing in 2007
http://twistedmatrix.com/pipermail/twisted-python/2007-May/015385.html)

Thanks
Brad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120228/98158d72/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Feb 28 06:24:09 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Feb 2012 13:24:09 -0000
Subject: [Twisted-Python] smtp sendmail DSN - NOTIFY
In-Reply-To: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>
References: <CAEtrYuTaauni47hyqJTL09vJjuKevSHRUzo5Re96zVu6r+8REg@mail.gmail.com>
Message-ID: <20120228132409.4576.139118383.divmod.xquotient.43@localhost6.localdomain6>

On 01:48 am, brad.milne at devx.runthered.com wrote:
>Hi all
>
>We're using the twisted.mail.smtp.sendmail(..) function to push emails. 
>The
>options one can pass to it are fairly limited. In particular I'm 
>looking to
>specify the DSN value NOTIFY=SUCCESS in the RCPT calls. Is
>this implemented elsewhere in the smtp library?
>
>(I can see mention of it missing in 2007
>http://twistedmatrix.com/pipermail/twisted-python/2007-May/015385.html)

The SMTP protocol implementation does not yet support the DSN extension. 
Support for DSN would need to be added to the protocol, and then that 
support could be exposed via the higher-level APIs like `sendmail`.

I'm not very familiar with DSN, but I think the protocol-level 
requirements are fairly minimal - that is, most of the work of DSN does 
not happen in the SMTP conversation - so I wouldn't expect this to be a 
very difficult feature to add.  Interested in giving it a try?

Jean-Paul



From tobias.oberstein at tavendo.de  Tue Feb 28 16:42:32 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 28 Feb 2012 15:42:32 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
Message-ID: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>

I was wondering how I could protect a Twisted server from evil clients initiating,
but never completing a TLS handshake.

connectionMade is only called when the TLS handshake has completed, right?

When doing listenSSL, is there a hook which is fired right after the TCP handshake is
complete, before the TLS handshake begins, so that I can setup a callLater/dropConnection
timeout?

This is the piece I am missing, since for TCP-level protection (Syn floods etc), I can
use kernel parameters / kernel packet filtering, and for app-level protection
(I do WebSockets .. which also has a handshake) I can timeout that.

I like to do above without requiring a frontend TLS terminator / firewall ..

Thanks!

\Tobias



From itamar at itamarst.org  Tue Feb 28 19:04:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Feb 2012 21:04:12 -0500
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4D879C.4040908@itamarst.org>

On 02/28/2012 06:42 PM, Tobias Oberstein wrote:
> I was wondering how I could protect a Twisted server from evil clients initiating,
> but never completing a TLS handshake.
>
> connectionMade is only called when the TLS handshake has completed, right?
>
> When doing listenSSL, is there a hook which is fired right after the TCP handshake is
> complete, before the TLS handshake begins, so that I can setup a callLater/dropConnection
> timeout?
>
> This is the piece I am missing, since for TCP-level protection (Syn floods etc), I can
> use kernel parameters / kernel packet filtering, and for app-level protection
> (I do WebSockets .. which also has a handshake) I can timeout that.
>
> I like to do above without requiring a frontend TLS terminator / firewall ..
One thing to do (perhaps the easiest) is, instead of listenSSL, doing 
listenTCP and then startTLS in the protocol's connectionMade. This would 
let you set a timeout that calls abortConnection in connectionMade.



From mithrandi at mithrandi.net  Tue Feb 28 22:45:21 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 29 Feb 2012 07:45:21 +0200
Subject: [Twisted-Python] Buildslave upgrades
Message-ID: <CAMcKhMTC=H=tewuZn=rU2SF67KOaqpT_J-tmnC=Rj_PkMqzBZA@mail.gmail.com>

I'd like to upgrade bot-idnar-debian64 from Debian lenny (5.0) to
squeeze (6.0). I think this host was previously kept back to test
Python 2.4 support on Debian, but it looks like the only thing it's
doing now is building pyopenssl, and I don't think that particularly
needs to be tested on lenny. I'll probably wait a week or two, and if
nobody objects, go ahead with the upgrade the next time I remember
about the host.

I'm also looking into upgrading the buildbot version on both of my
slaves (bot-idnar-*) to 0.8.5.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From tobias.oberstein at tavendo.de  Wed Feb 29 01:56:23 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 29 Feb 2012 00:56:23 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <4F4D879C.4040908@itamarst.org>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<4F4D879C.4040908@itamarst.org>
Message-ID: <634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>

> > I was wondering how I could protect a Twisted server from evil clients
> > initiating, but never completing a TLS handshake.
> >
> > connectionMade is only called when the TLS handshake has completed, right?
> >
> > When doing listenSSL, is there a hook which is fired right after the
> > TCP handshake is complete, before the TLS handshake begins, so that I
> > can setup a callLater/dropConnection timeout?
> >
> > This is the piece I am missing, since for TCP-level protection (Syn
> > floods etc), I can use kernel parameters / kernel packet filtering,
> > and for app-level protection (I do WebSockets .. which also has a handshake) I
> can timeout that.
> >
> > I like to do above without requiring a frontend TLS terminator / firewall ..
> One thing to do (perhaps the easiest) is, instead of listenSSL, doing listenTCP
> and then startTLS in the protocol's connectionMade. This would let you set a
> timeout that calls abortConnection in connectionMade.

Thanks! That sounds reasonable and easy enough.

Also thanks for pointing to abortConnection() .. which is also a good thing in the context of DoS protection ..

\Tobias



From kmcintyre at greenchargenet.com  Wed Feb 29 17:16:01 2012
From: kmcintyre at greenchargenet.com (Kevin McIntyre)
Date: Wed, 29 Feb 2012 16:16:01 -0800
Subject: [Twisted-Python] ProcessMonitor stderr stdout
Message-ID: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>

Newbie question:

I'm calling addProcess and everything works well, but I'm trying to
understand how to capture/handle stderr stdout for that spawned process.

-- 

Kevin McIntyre | Software Engineer | *Green Charge Networks*

Cell 718-249-5058 | kmcintyre at greenchargenet.com | www.greenchargenet.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120229/8a02cf5a/attachment-0001.html>

From ltaylor.volks at gmail.com  Wed Feb 29 18:49:49 2012
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 29 Feb 2012 18:49:49 -0700
Subject: [Twisted-Python] ProcessMonitor stderr stdout
In-Reply-To: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
References: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
Message-ID: <19C2A586-E256-4FDD-9676-AD8CA7D1BB62@gmail.com>


On Feb 29, 2012, at 5:16 PM, Kevin McIntyre wrote:

> Newbie question:
> 
> I'm calling addProcess and everything works well, but I'm trying to understand how to capture/handle stderr stdout for that spawned process.
> 

Look into subclassing ProcessMonitor and override startProcess to provide your own ProcessProtocol. The default implementation uses a LoggingProtocol which just logs stdout from the process.

The process howto should get you up to speed on what you can override in your ProcessProtocol (esp. outReceived() and errReceived())
http://twistedmatrix.com/documents/current/core/howto/process.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120229/e9875c16/attachment.html>

From itamar at itamarst.org  Wed Feb 29 19:11:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 29 Feb 2012 21:11:51 -0500
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<4F4D879C.4040908@itamarst.org>
	<634914A010D0B943A035D226786325D42D5AB775BA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4EDAE7.9040104@itamarst.org>

On 02/29/2012 03:56 AM, Tobias Oberstein wrote:
> Thanks! That sounds reasonable and easy enough.
>
> Also thanks for pointing to abortConnection() .. which is also a good thing in the context of DoS protection ..
>
Although do note using abortConnection will restrict you to very new 
versions of Twisted.



From exarkun at twistedmatrix.com  Wed Feb 29 07:12:47 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Feb 2012 14:12:47 -0000
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>

On 28 Feb, 11:42 pm, tobias.oberstein at tavendo.de wrote:
>I was wondering how I could protect a Twisted server from evil clients 
>initiating,
>but never completing a TLS handshake.
>
>connectionMade is only called when the TLS handshake has completed, 
>right?

Actually, this is not right.  It's sort of a wart, but connectionMade is 
called when the underlying TCP connection is established.  The TLS 
handshake will always complete at some later time.

One reason we (or at least I) have not yet really tried to change this 
is that doing so would make it harder to address just the problem you're 
talking about.

Jean-Paul
>When doing listenSSL, is there a hook which is fired right after the 
>TCP handshake is
>complete, before the TLS handshake begins, so that I can setup a 
>callLater/dropConnection
>timeout?
>
>This is the piece I am missing, since for TCP-level protection (Syn 
>floods etc), I can
>use kernel parameters / kernel packet filtering, and for app-level 
>protection
>(I do WebSockets .. which also has a handshake) I can timeout that.
>
>I like to do above without requiring a frontend TLS terminator / 
>firewall ..
>
>Thanks!
>
>\Tobias



