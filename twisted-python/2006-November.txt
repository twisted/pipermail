From stephane_brault at yahoo.fr  Thu Nov  2 15:57:00 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Thu, 2 Nov 2006 20:57:00 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>

Hi,

I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
Here is my code :
class myFTP(object):
    
    def __init__(self, login, password):
        self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
        

    def connectionFailed(self, f):
        print 'connection error'


    def success(self, response):
        print 'Success'


    def fail(self, error):
        print 'Erreur:' + error


    def doOperation(self, operation, data):
        d = self.creator.connectTCP(FTP_ADDRESS, 21)
        if operation == 'addItems':
            return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
        elif ....
        
        
        
    def _upload(self, consumer, file):
        return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
    
    
    def inventoryUpload(self, ftpClient, file):
        name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
        return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
        
    ....

The operation is called this way:
call = myFTP(login, password)
call.doOperation('addItems', StringIO(data))

The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.

Thanks,

St?phane




	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com



From yqiang at gmail.com  Thu Nov  2 18:33:47 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Thu, 2 Nov 2006 15:33:47 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
Message-ID: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>

Hi guys,
I am still having trouble writing programs that will make the most use of
deferreds.  I will describe the problem I am trying to solve and the
solution I've tried.

The problem:
I am trying to write a client that gets a job from a PB server, processes
it, submits the result and gets another job.  I need to be able to do this
for multiple jobs (i.e. I need to be able to get 5 jobs, and start 5 similar
chains: get job --> work on job --> submit result --> get another job).
This looks like a perfectly solvable problem using deferreds since working
on the job might take a while and using callbacks seems to be the most
appropriate.

So I have something like this in my main method:

monitor = Monitor(server, port)
monitor.connect()


    def connect(self):
        factory = pb.PBClientFactory()
        reactor.connectTCP(self.hostname, self.port, factory)
        return factory.login(self.credentials).addCallback(
                            self._connected).addErrback(
                            self._catch_failure)

Then in self._connected I would like to start the chain of getting
jobs/processing them/submitting jobs:

    def _connected(self, remoteobj):
        self.remoteobj = remoteobj

        for worker in self.workers:
            self.get_jobs(worker).addCallback(
                                    self._got_job, worker).addCallback(
                                    self.get_jobs, worker).addErrback(
                                    self._catch_failure)

_got_job takes both a job and a worker and starts to process the job.  Which
for now returns a defer.succeed().
This is the part where I stumble on though, the exact implementation of how
to make it so that one calls back the other.
Any help would be appreciated.  Please let me know also if you need more
specific information.

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061102/6855a763/attachment.htm 

From matusis at matusis.com  Thu Nov  2 20:30:03 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu, 2 Nov 2006 17:30:03 -0800
Subject: [Twisted-Python] manhole questions
Message-ID: <E1Gfnsi-00008f-00@pyramid.twistedmatrix.com>

Hello
 
I am using manhole with Twisted 2.2 like so:
 
manhole_factory = twisted.manhole.telnet.ShellFactory()
manhole_factory.username = config.manhole_user
manhole_factory.password = config.manhole_pwd
manhole_factory.service = t_service
manhole_serv=twisted.application.internet.TCPServer(common.config.t_manhole_
port, manhole_factory).setServiceParent(application)
 
I have two problems:

1) Backspace and Arrow keys do not work with telnet. How can I fix that?
 
2) When I make a mistake and cause an error in the interpreter, the
Traceback gets logged into the application's main log file, thus polluting
it. How can I prevent these errors in manhole's telnet from being logged
into the application's main log?

Additional question:
3) When I maintain a telnet session into manhole in a production server, how
does it affect its performance/stability ?

Thanks

Alec.




From jacob at internet24.de  Fri Nov  3 04:32:52 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 03 Nov 2006 10:32:52 +0100
Subject: [Twisted-Python] Problem with ftp upload
In-Reply-To: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>
References: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>
Message-ID: <1162546373.24696.35.camel@enterprise>

There is bug in storeFile's Consumer interface
(Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )

As for disconnecting, why not call ftpClient->quit() after
your upload has finished?

On Thu, 2006-11-02 at 20:57 +0000, St?phane Brault wrote:
> Hi,
> 
> I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> Here is my code :
> class myFTP(object):
>     
>     def __init__(self, login, password):
>         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
>         
> 
>     def connectionFailed(self, f):
>         print 'connection error'
> 
> 
>     def success(self, response):
>         print 'Success'
> 
> 
>     def fail(self, error):
>         print 'Erreur:' + error
> 
> 
>     def doOperation(self, operation, data):
>         d = self.creator.connectTCP(FTP_ADDRESS, 21)
>         if operation == 'addItems':
>             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
>         elif ....
>         
>         
>         
>     def _upload(self, consumer, file):
>         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
>     
>     
>     def inventoryUpload(self, ftpClient, file):
>         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
>         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
>         
>     ....
> 
> The operation is called this way:
> call = myFTP(login, password)
> call.doOperation('addItems', StringIO(data))
> 
> The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> 
> Thanks,
> 
> St?phane
> 
> 
> 
> 
> 	
> 
> 	
> 		
> ___________________________________________________________________________ 
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061103/4a49e344/attachment.pgp 

From stephane_brault at yahoo.fr  Fri Nov  3 04:54:21 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Fri, 3 Nov 2006 09:54:21 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>

Thanks Thomas,

my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

St?phane


----- Message d'origine ----
De : Thomas Jacob <jacob at internet24.de>
? : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoy? le : Vendredi, 3 Novembre 2006, 10h32mn 52s
Objet : Re: [Twisted-Python] Problem with ftp upload

There is bug in storeFile's Consumer interface
(Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )

As for disconnecting, why not call ftpClient->quit() after
your upload has finished?

On Thu, 2006-11-02 at 20:57 +0000, St?phane Brault wrote:
> Hi,
> 
> I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> Here is my code :
> class myFTP(object):
>     
>     def __init__(self, login, password):
>         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
>         
> 
>     def connectionFailed(self, f):
>         print 'connection error'
> 
> 
>     def success(self, response):
>         print 'Success'
> 
> 
>     def fail(self, error):
>         print 'Erreur:' + error
> 
> 
>     def doOperation(self, operation, data):
>         d = self.creator.connectTCP(FTP_ADDRESS, 21)
>         if operation == 'addItems':
>             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
>         elif ....
>         
>         
>         
>     def _upload(self, consumer, file):
>         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
>     
>     
>     def inventoryUpload(self, ftpClient, file):
>         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
>         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
>         
>     ....
> 
> The operation is called this way:
> call = myFTP(login, password)
> call.doOperation('addItems', StringIO(data))
> 
> The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> 
> Thanks,
> 
> St?phane
> 
> 
> 
> 
>     
> 
>     
>         
> ___________________________________________________________________________ 
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com



From jacob at internet24.de  Fri Nov  3 05:52:08 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 03 Nov 2006 11:52:08 +0100
Subject: [Twisted-Python] Problem with ftp upload
In-Reply-To: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>
References: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>
Message-ID: <1162551128.24696.47.camel@enterprise>

On Fri, 2006-11-03 at 09:54 +0000, St?phane Brault wrote:
> Thanks Thomas,
> 
> my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

You were mentioning a different ticket number...

Anyway, you seem to be waiting for the first
storeFile deferred (Consumer) to indicate successful
transmission, I'm using the second (Control-Connection),
maybe you simply quit to early.

If you want, I can mail you my FTP access class
for uploading and downloading....

> St?phane
> 
> 
> ----- Message d'origine ----
> De : Thomas Jacob <jacob at internet24.de>
> ? : Twisted general discussion <twisted-python at twistedmatrix.com>
> Envoy? le : Vendredi, 3 Novembre 2006, 10h32mn 52s
> Objet : Re: [Twisted-Python] Problem with ftp upload
> 
> There is bug in storeFile's Consumer interface
> (Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )
> 
> As for disconnecting, why not call ftpClient->quit() after
> your upload has finished?
> 
> On Thu, 2006-11-02 at 20:57 +0000, St?phane Brault wrote:
> > Hi,
> > 
> > I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> > Here is my code :
> > class myFTP(object):
> >     
> >     def __init__(self, login, password):
> >         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
> >         
> > 
> >     def connectionFailed(self, f):
> >         print 'connection error'
> > 
> > 
> >     def success(self, response):
> >         print 'Success'
> > 
> > 
> >     def fail(self, error):
> >         print 'Erreur:' + error
> > 
> > 
> >     def doOperation(self, operation, data):
> >         d = self.creator.connectTCP(FTP_ADDRESS, 21)
> >         if operation == 'addItems':
> >             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
> >         elif ....
> >         
> >         
> >         
> >     def _upload(self, consumer, file):
> >         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
> >     
> >     
> >     def inventoryUpload(self, ftpClient, file):
> >         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
> >         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
> >         
> >     ....
> > 
> > The operation is called this way:
> > call = myFTP(login, password)
> > call.doOperation('addItems', StringIO(data))
> > 
> > The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> > I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> > 
> > Thanks,
> > 
> > St?phane
> > 
> > 
> > 
> > 
> >     
> > 
> >     
> >         
> > ___________________________________________________________________________ 
> > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> > Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> > http://fr.answers.yahoo.com
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> 	
> 
> 	
> 		
> ___________________________________________________________________________ 
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061103/84e4975b/attachment.pgp 

From stephane_brault at yahoo.fr  Fri Nov  3 06:03:22 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Fri, 3 Nov 2006 11:03:22 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061103110322.41960.qmail@web26503.mail.ukl.yahoo.com>

Thanks Thomas,

indeed I mentioned the wrong ticket number, my mistake, I'm already getting flogged for that ;-)
I'd be glad to get your FTP access class.

St?phane

----- Message d'origine ----
De : Thomas Jacob <jacob at internet24.de>
? : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoy? le : Vendredi, 3 Novembre 2006, 11h52mn 08s
Objet : Re: Re : [Twisted-Python] Problem with ftp upload

On Fri, 2006-11-03 at 09:54 +0000, St?phane Brault wrote:
> Thanks Thomas,
> 
> my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

You were mentioning a different ticket number...

Anyway, you seem to be waiting for the first
storeFile deferred (Consumer) to indicate successful
transmission, I'm using the second (Control-Connection),
maybe you simply quit to early.

If you want, I can mail you my FTP access class
for uploading and downloading....

> St?phane
> 
> 
> ----- Message d'origine ----
> De : Thomas Jacob <jacob at internet24.de>
> ? : Twisted general discussion <twisted-python at twistedmatrix.com>
> Envoy? le : Vendredi, 3 Novembre 2006, 10h32mn 52s
> Objet : Re: [Twisted-Python] Problem with ftp upload
> 
> There is bug in storeFile's Consumer interface
> (Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )
> 
> As for disconnecting, why not call ftpClient->quit() after
> your upload has finished?
> 
> On Thu, 2006-11-02 at 20:57 +0000, St?phane Brault wrote:
> > Hi,
> > 
> > I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> > Here is my code :
> > class myFTP(object):
> >     
> >     def __init__(self, login, password):
> >         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
> >         
> > 
> >     def connectionFailed(self, f):
> >         print 'connection error'
> > 
> > 
> >     def success(self, response):
> >         print 'Success'
> > 
> > 
> >     def fail(self, error):
> >         print 'Erreur:' + error
> > 
> > 
> >     def doOperation(self, operation, data):
> >         d = self.creator.connectTCP(FTP_ADDRESS, 21)
> >         if operation == 'addItems':
> >             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
> >         elif ....
> >         
> >         
> >         
> >     def _upload(self, consumer, file):
> >         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
> >     
> >     
> >     def inventoryUpload(self, ftpClient, file):
> >         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
> >         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
> >         
> >     ....
> > 
> > The operation is called this way:
> > call = myFTP(login, password)
> > call.doOperation('addItems', StringIO(data))
> > 
> > The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> > I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> > 
> > Thanks,
> > 
> > St?phane
> > 
> > 
> > 
> > 
> >     
> > 
> >     
> >         
> > ___________________________________________________________________________ 
> > D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> > Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> > http://fr.answers.yahoo.com
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
>     
> 
>     
>         
> ___________________________________________________________________________ 
> D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
> Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com



From p.mayers at imperial.ac.uk  Fri Nov  3 11:12:25 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 03 Nov 2006 16:12:25 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
Message-ID: <454B6A69.2030804@imperial.ac.uk>

Yi Qiang wrote:
> This is the part where I stumble on though, the exact implementation of 
> how to make it so that one calls back the other. 

One what calls back the other what?

You'll have issues with error handling and dropping workers if you're 
not careful to chain the deferreds correctly. I would try something like 
this personally.

class Worker:
     def gotJob(self, j):
         self.jobID = j.ID
         # do whatever
         callInThread(DoesntHoldGIL, j).addCallbacks(
             self.doneJob, self.failedJob
         ).addCallback(self.noJob, self.noJob)

     def doneJob(self, result):
         pb.callRemote('jobDone', self.jobID, result)

     def failedJob(self, f):
         pb.callRemote('jobFailed', self.jobID, f.getErrorMessage())

     def noJob(self, v):
         self.free = True

workers = Pool(Worker)

def checkForJobs():
     for worker in workers:
         if worker.free:
             worker.free = False
             job = pb.callRemote('getJob')
             job.addCallbacks(worker.gotJob, worker.noJob)

tsk = task.LoopingCall(checkForJobs)
# run every 10 seconds, start now
tsk.start(10, True)



From alvinwang at gmail.com  Fri Nov  3 19:17:15 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 3 Nov 2006 16:17:15 -0800
Subject: [Twisted-Python] SMTP with authentication
Message-ID: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>

Hi,

I am new to twisted but google and the Oreilly book have failed me.  I am
trying to create a client to send to a smtp server.  All the examples that I
have found only work if your  SMTP server does not require authentication.

I am guessing that I need to use
http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html


Unfortunately, I can find no examples that use it.

I did find something from 2004
http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html

That is prior to the commit for ESMTPSenderFactory
http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html

Thanks
-- 
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061103/20400c94/attachment.htm 

From exarkun at divmod.com  Fri Nov  3 19:49:15 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Nov 2006 19:49:15 -0500
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
Message-ID: <20061104004915.20948.722461395.divmod.quotient.12425@ohm>

On Fri, 3 Nov 2006 16:17:15 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
>Hi,
>
>I am new to twisted but google and the Oreilly book have failed me.  I am
>trying to create a client to send to a smtp server.  All the examples that I
>have found only work if your  SMTP server does not require authentication.
>
>I am guessing that I need to use
>http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html
>
>
>Unfortunately, I can find no examples that use it.
>
>I did find something from 2004
>http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html

This should still work.

>
>That is prior to the commit for ESMTPSenderFactory
>http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html

This changed ESMTPSenderFactory, but authentication was supported before
this commit.  Give the code at the previous URL a try and post again if
you run into problems.

Jean-Paul



From alvinwang at gmail.com  Sat Nov  4 02:48:52 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 3 Nov 2006 23:48:52 -0800
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <20061104004915.20948.722461395.divmod.quotient.12425@ohm>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
Message-ID: <77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>

I modified this example
http://twistedmatrix.com/projects/mail/documentation/tutorial/smtpclient/smtpclient-7.tac

I am still not completely clear on what is happening

Thanks for the help
Alvin


import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.internet import protocol
from twisted.mail import smtp
from twisted.mail.imap4 import CramMD5ClientAuthenticator

class SMTPTutorialClient(smtp.ESMTPClient):
    mailFrom = "from at sender.com"
    mailTo = "to at dest.com"
    mailData = '''\
Date: Fri, 6 Feb 2006 10:14:39 -0800
From: from at sender.com
To: to at dest.com
Subject: Tutorate!

Hello, how are you, goodbye.
'''

    def getMailFrom(self):
        result = self.mailFrom
        self.mailFrom = None
        return result

    def getMailTo(self):
        return [self.mailTo]

    def getMailData(self):
        return StringIO.StringIO(self.mailData)

    def sentMail(self, code, resp, numOk, addresses, log):
        print 'Sent', numOk, 'messages'

class SMTPClientFactory(protocol.ClientFactory):
    protocol = SMTPTutorialClient

    def buildProtocol(self, addr):
        return self.protocol(secret=None, identity='sender.com')

class SMTPClientFactory(protocol.ClientFactory):
    protocol = SMTPTutorialClient
    #def __init__(self, *a, **kw):
    #    self.a, self.kw = a, kw

    def buildProtocol(self, addr):
        p = smtp.ESMTPClient('smtp_pw')
        p.factory = self
        p.requireAuthentication = True
        p.authenticators = {'CRAM-MD5':
CramMD5ClientAuthenticator('smtp_user')}
        return p

smtpClientFactory = SMTPClientFactory()

smtpClientService = internet.TCPClient('smtp.1and1.com', 25,
smtpClientFactory)
smtpClientService.setServiceParent(application)


On 11/3/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Fri, 3 Nov 2006 16:17:15 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
> >Hi,
> >
> >I am new to twisted but google and the Oreilly book have failed me.  I am
> >trying to create a client to send to a smtp server.  All the examples
> that I
> >have found only work if your  SMTP server does not require
> authentication.
> >
> >I am guessing that I need to use
> >
> http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html
> >
> >
> >Unfortunately, I can find no examples that use it.
> >
> >I did find something from 2004
> >http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html
>
> This should still work.
>
> >
> >That is prior to the commit for ESMTPSenderFactory
> >http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html
>
> This changed ESMTPSenderFactory, but authentication was supported before
> this commit.  Give the code at the previous URL a try and post again if
> you run into problems.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061103/adb65a5a/attachment.htm 

From Marcin.Kasperski at softax.com.pl  Sat Nov  4 02:52:33 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sat, 04 Nov 2006 08:52:33 +0100
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
Message-ID: <454C46C1.9090106@softax.com.pl>




> I am new to twisted but google and the Oreilly book have failed me.  I 
> am trying to create a client to send to a smtp server.  All the 
> examples that I have found only work if your  SMTP server does not 
> require authentication. 
http://twistedmatrix.com/pipermail/twisted-python/2006-April/012994.html




From p.mayers at imperial.ac.uk  Sat Nov  4 05:30:01 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 04 Nov 2006 10:30:01 +0000
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
	<77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
Message-ID: <454C6BA9.1030603@imperial.ac.uk>

Alvin Wang wrote:
> I modified this example

You broke the example.

Try this, hopefully it is clearly what is happening:

import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.python import log
from twisted.internet import defer, reactor
from twisted.mail import smtp

mailFrom = "from at example.com"
mailTo = ["to at example.com",]
mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
From: from at example.com
To: to at example.com
Subject: Tutorate!

Hello, how are you, goodbye.
""")

whenDone = defer.Deferred()

def send(r):
     print "message sent:", r

whenDone.addCallbacks(sent, log.err)

def done(d):
     from twisted.internet import reactor
     reactor.callLater(1, reactor.stop)

whenDone.addBoth(done)

sender = smtp.ESMTPSenderFactory(
         'YOURUSERNAME',
         'YOURPASSWORD',
         mailFrom,
         mailTo,
         mail,
         whenDone,
         )

smtpClientService = internet.TCPClient('YOURSERVER', 25, sender)
smtpClientService.setServiceParent(application)




From eprparadocs at gmail.com  Sat Nov  4 14:15:01 2006
From: eprparadocs at gmail.com (Chas.)
Date: Sat, 4 Nov 2006 14:15:01 -0500
Subject: [Twisted-Python] Twisted and Torrent Support
Message-ID: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>

I am looking for both client and server support for bittorrent that is
integrated with Twisted (as are the ftp, etc). I was wondering if any one
knows of just such support.

Thanks,
Chaz.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061104/69d0a760/attachment.htm 

From alvinwang at gmail.com  Sat Nov  4 19:55:45 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 4 Nov 2006 16:55:45 -0800
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <454C6BA9.1030603@imperial.ac.uk>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
	<77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
	<454C6BA9.1030603@imperial.ac.uk>
Message-ID: <77d044440611041655t19d61289q5d81d07a75ed9dd1@mail.gmail.com>

Thanks!!

That worked great.

minor typo

def sent(r):
    print "message sent:", r


A question.
In Phil Mayer's example and Marcin Kasperski's example, it seems like there
is a new tcp/ip connection made for each email.   Suppose, I want to send
multiple emails to the same smtp server.  How would that work?

Thanks
Alvin
*

*On 11/4/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
> Alvin Wang wrote:
> > I modified this example
>
> You broke the example.
>
> Try this, hopefully it is clearly what is happening:
>
> import StringIO
>
> from twisted.application import service
>
> application = service.Application("SMTP Client Tutorial")
>
> from twisted.application import internet
> from twisted.python import log
> from twisted.internet import defer, reactor
> from twisted.mail import smtp
>
> mailFrom = "from at example.com"
> mailTo = [" to at example.com",]
> mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
> From: from at example.com
> To: to at example.com
> Subject: Tutorate!
>
> Hello, how are you, goodbye.
> """)
>
> whenDone = defer.Deferred()
>
> def send(r):
>      print "message sent:", r
>
> whenDone.addCallbacks (sent, log.err)
>
> def done(d):
>      from twisted.internet import reactor
>      reactor.callLater(1, reactor.stop)
>
> whenDone.addBoth(done)
>
> sender = smtp.ESMTPSenderFactory(
>          'YOURUSERNAME',
>          'YOURPASSWORD',
>          mailFrom,
>          mailTo,
>          mail,
>          whenDone,
>          )
>
> smtpClientService = internet.TCPClient('YOURSERVER', 25, sender)
> smtpClientService.setServiceParent (application)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alvin Wang
Gigachannels
650 248 9416
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061104/fa077cf4/attachment.htm 

From exarkun at twistedmatrix.com  Sun Nov  5 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1162706702.09.460033695@twistedmatrix.com

Bug summary
______________________
Summary for 2006-10-29 through 2006-11-05
Bugs opened: 17    Bugs closed: 1  Total open bugs: 777 (+16)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  +1          |Core:      +8          
|Enhancement:  +8  |Normal:  +15          |Lore:      +1          
|Task:         +2                         |Pydoctor:  +1          
                                          |Web:       +1          
                                          |Web2:      +1          
                                          |Website:   +1          
                                          |Words:     +3          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2203] More complete IRC Server implementation (opened by colin)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2203

                    ===== Normal =====
[#2202] The News on the front page is no longer news. (opened by jml)
    defect          website    http://twistedmatrix.com/trac/ticket/2202

[#2204] IRCUser shouldn't send topic if there isn't one. (opened by colin)
    defect          words      http://twistedmatrix.com/trac/ticket/2204

[#2205] Simplification of Application creation (opened by jerub)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2205

[#2206] Update standard for unit tests (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/2206

[#2207] lore tarball has files with wrong end of line encoding (opened by thomasvs)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2207

[#2208] a lot of examples have different shebang lines (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2208

[#2209] pydoctor has problems with moresystems' using an absolute url prefix (opened by mwh)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2209

[#2210] pydoctor system pickles that use moresystems can't be loaded (opened by mwh)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2210

[#2211] unit tests should not have shebang lines (opened by thomasvs)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2211

[#2212] Remove mention of threadable.init from the threading chapter (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2212

[#2213] Several deprecated twisted.protocols.* modules point to old twistedmatrix.com/projects/ webpages (opened by dreid)
    task            core       http://twistedmatrix.com/trac/ticket/2213

[#2214] twisted.web2.xmlrpc.XMLRPC._cbRender uses a bare except and doesn't log the failure. (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2214

[#2215] If lineReceived returns true value, the connection is shut down and this value used as an error message (opened by Mekk)
    defect          core       http://twistedmatrix.com/trac/ticket/2215

[#2216] Coding Standard update: Lines should not have trailing whitespace (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2216

[#2217] Coding Standard is fairly crusty (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2217

[#2218] Add timeout to XMPP IQ requests (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2218



Closed Bugs
______________________
                    ===== Normal =====
[#2069] Make nevowwriter the default (opened by jml, closed by mwh, fixed)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2069





From warner at lothar.com  Sun Nov  5 03:37:50 2006
From: warner at lothar.com (Brian Warner)
Date: Sun, 05 Nov 2006 00:37:50 -0800 (PST)
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
Message-ID: <20061105.003750.02715181.warner@lothar.com>

I've uploaded another release of Foolscap, the next-generation remote-object
communication system for Twisted. (actually I've uploaded two, but 0.0.4 had
a brown-paper-bag bug and so it never got announced).

The new release makes all Referenceable objects "giftable" by default, making
it easier to share objects among multiple machines. There is a new
"Reconnector" with which you can announce your intention to connect to a
given target and have the Tub perform exponential-backoff retry attempts
whenever the connection is lost. Also, notifyOnDisconnect() now accepts args
and kwargs to be passed to the disconnect handler callback.

This release also adds support for making debian packages, for sid, sarge,
and dapper. Just type 'make debian-sid' (etc) to get an installable .deb
package in the parent directory.

The full list of user-visible changes is attached below. No wire-level
compatibility changes were introduced in this release, but there will be some
in the future.

Please see http://twistedmatrix.com/trac/wiki/FoolsCap for complete
information about Foolscap. The 0.0.5 release tarball is available from
http://twistedmatrix.com/~warner/Foolscap/ .

share and enjoy,
 -Brian



User visible changes in Foolscap (aka newpb/pb2).

* Release 0.0.5 (04 Nov 2006)

** add Tub.setOption, add logRemoteFailures and logLocalFailures

These options control whether we log exceptions (to the standard twisted log)
that occur on other systems in response to messages that we've sent, and that
occur on our system in response to messages that we've received
(respectively). These may be useful while developing a distributed
application. All such log messages have each line of the stack trace prefixed
by REMOTE: or LOCAL: to make it clear where the exception is happening.

** add sarge packaging, improve dependencies for sid and dapper .debs

** fix typo that prevented Reconnector from actually reconnecting


* Release 0.0.4 (26 Oct 2006)

** API Changes

*** notifyOnDisconnect() takes args/kwargs

RemoteReference.notifyOnDisconnect(), which registers a callback to be fired
when the connection to this RemoteReference is lost, now accepts args and
kwargs to be passed to the callback function. Without this, application code
needed to use inner functions or bound methods to close over any additional
state you wanted to get into the disconnect handler.

notifyOnDisconnect() returns a "marker", an opaque values that should be
passed into the corresponding dontNotifyOnDisconnect() function to deregister
the callback. (previously dontNotifyOnDisconnect just took the same argument
as notifyOnDisconnect).

For example:

class Foo:
    def _disconnect(self, who, reason):
        print "%s left us, because of %s" % (who, reason)
    def connect(self, url, why):
        d = self.tub.getReference(url)
        def _connected(rref):
            self.rref = rref
            m = rref.notifyOnDisconnect(self._disconnect, who, reason=why)
            self.marker = m
        d.addCallback(_connected)
    def stop_caring(self):
        self.rref.dontNotifyOnDisconnect(self.marker)

*** Reconnector / Tub.connectTo()

There is a new connection API for applications that want to connect to a
target and to reconnect to it if/when that connection is lost. This is like
ReconnectingClientFactory, but at a higher layer. You give it a URL to
connect to, and a callback (plus args/kwargs) that should be called each time
a connection is established. Your callback should use notifyOnDisconnect() to
find out when it is disconnected. Reconnection attempts use exponential
backoff to limit the retry rate, and you can shut off reconnection attempts
when you no longer want to maintain a connection.

Use it something like this:

class Foo:
    def __init__(self, tub, url):
        self.tub = tub
        self.reconnector = tub.connectTo(url, self._connected, "arg")
    def _connected(self, rref, arg):
        print "connected"
        assert arg == "arg"
        self.rref = rref
        self.rref.callRemote("hello")
        self.rref.notifyOnDisconnect(self._disconnected, "blag")
    def _disconnected(self, blag):
        print "disconnected"
        assert blag == "blag"
        self.rref = None
    def shutdown(self):
        self.reconnector.stopConnecting()

Code which uses this pattern will see "connected" events strictly interleaved
with "disconnected" events (i.e. it will never see two "connected" events in
a row, nor two "disconnected" events).

The basic idea is that each time your _connected() method is called, it
should re-initialize all your state by making method calls to the remote
side. When the connection is lost, all that state goes away (since you have
no way to know what is happening until you reconnect).

** Behavioral Changes

*** All Referenceable object are now implicitly "giftable"

In 0.0.3, for a Referenceable to be "giftable" (i.e. useable as the payload
of an introduction), two conditions had to be satisfied. #1: the object must
be published through a Tub with Tub.registerReference(obj). #2: that Tub must
have a location set (with Tub.setLocation). Once those conditions were met,
if the object was sent over a wire from this Tub to another one, the
recipient of the corresponding RemoteReference could pass it on to a third
party. Another side effect of calling registerReference() is that the Tub
retains a strongref to the object, keeping it alive (with respect to gc)
until either the Tub is shut down or the object is explicitly de-registered
with unregisterReference().

Starting in 0.0.4, the first condition has been removed. All objects which
pass through a setLocation'ed Tub will be usable as gifts. This makes it much
more convenient to use third-party references.

Note that the Tub will *not* retain a strongref to these objects (merely a
weakref), so such objects might disappear before the recipient has had a
chance to claim it. The lifecycle of gifts is a subject of much research. The
hope is that, for reasonably punctual recipients, the gift will be kept alive
until they claim it. The whole gift/introduction mechanism is likely to
change in the near future, so this lifetime issue will be revisited in a
later release.

** Build Changes

The source tree now has some support for making debian-style packages (for
both sid and dapper). 'make debian-sid' and 'make debian-dapper' ought to
create a .deb package.



From Marcin.Kasperski at softax.com.pl  Mon Nov  6 07:45:59 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 6 Nov 2006 13:45:59 +0100
Subject: [Twisted-Python] If lineReceived returns deferred,
	then connection is dropped and this deferred given as error message
In-Reply-To: <200610311652.37936.Marcin.Kasperski@softax.com.pl>
References: <200610311652.37936.Marcin.Kasperski@softax.com.pl>
Message-ID: <200611061345.59737.Marcin.Kasperski@softax.com.pl>

As it seems nobody has anything to add, I filed a bug
http://twistedmatrix.com/trac/ticket/2215



From ilochab at gmail.com  Mon Nov  6 09:38:03 2006
From: ilochab at gmail.com (IloChab)
Date: Mon, 6 Nov 2006 15:38:03 +0100
Subject: [Twisted-Python] Problem with qt4reactor.py
Message-ID: <166b1c630611060638q7517304avb67a5aac2cd57e87@mail.gmail.com>

I'm trying to run a simple application with Twisted and Qt4, but I get a
really strange behavior from my main script.

I can't understand if it's
a python
or a twisted
or a Qt4
problem

I'm using this reactor:
    http://twistedmatrix.com/trac/attachment/ticket/1770/qt4reactor.py

Now,
if I run this:
# >>>>>>>>>
import  qt4reactor
import sys
from PyQt4 import  QtGui
from winIum import Window

def main():
    app = QtGui.QApplication(sys.argv)
    qt4reactor.install(app)
    MainWindow = QtGui.QMainWindow()
    win = Window(MainWindow)
    MainWindow.show()
    from twisted.internet import reactor
    reactor.run()
# <<<<<<<<
my window shows and run correctly.


If I run this:
# >>>>>>>>>>>>>
import  qt4reactor
import sys
from PyQt4 import  QtGui
from winIum import Window

def creApp():
    app = QtGui.QApplication(sys.argv)
    qt4reactor.install(app)
    return app
def creWin():
    MainWindow = QtGui.QMainWindow()
    win = Window(MainWindow)
    MainWindow.show()
def main():
    app = creApp()
    creWin()
    from twisted.internet import reactor
    reactor.run()
# <<<<<<<<<<<<<
my window doesn't show and the script doesn't stop but remains trapped in
some gui loop.

What's the problem I can't see??

Thank you in advance for any help.
Licia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061106/35fbedde/attachment.htm 

From dekonerding at lbl.gov  Mon Nov  6 12:29:33 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Mon, 06 Nov 2006 09:29:33 -0800
Subject: [Twisted-Python] Twisted and Torrent Support
In-Reply-To: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>
References: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>
Message-ID: <454F70FD.7030404@lbl.gov>

Chas. wrote:
> I am looking for both client and server support for bittorrent that is 
> integrated with Twisted (as are the ftp, etc). I was wondering if any 
> one knows of just such support.

The baseline BitTorrent client and server *are* written using Twisted:

> from BitTorrent.RawServer_twisted import RawServer
> from twisted.internet import task




From srock258 at gmail.com  Mon Nov  6 17:07:04 2006
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 6 Nov 2006 17:07:04 -0500
Subject: [Twisted-Python] DeferredQueue Unstable
Message-ID: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>

The API says the DeferredQueue class from the defer module is unstable? Any
description about why it is unstable? I would like to use it else I will
have to write my own version that is sure to 'unstable'.

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061106/debd58ea/attachment.htm 

From johann.borck at densedata.com  Mon Nov  6 20:31:52 2006
From: johann.borck at densedata.com (Johann Borck)
Date: Tue, 07 Nov 2006 02:31:52 +0100
Subject: [Twisted-Python] DeferredQueue Unstable
In-Reply-To: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>
References: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>
Message-ID: <454FE208.1030509@densedata.com>

Sean Roark wrote:
> The API says the DeferredQueue class from the defer module is
> unstable? Any description about why it is unstable? I would like to
> use it else I will have to write my own version that is sure to
> 'unstable'.
>
As stated recently on this list(dunno, but iirc it was JP), "unstable"
is used if the probability of incompatible API-changes is relatively
high.  So maybe you'll have to change your code when upgrading Twisted.

Johann
> -- 
>
> Sean Roark
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From Nabil at kramer-smilko.com  Tue Nov  7 16:46:31 2006
From: Nabil at kramer-smilko.com (Nabil)
Date: Tue, 7 Nov 2006 16:46:31 -0500
Subject: [Twisted-Python] PyQt4 Object acting like None.
Message-ID: <0ED1DF2D-0B84-4EA4-9386-204F6724713F@kramer-smilko.com>

Hello everyone. I'm having some trouble with a program I'm writing.  
The program uses PyQt4 and qt4reactor. When the program is started it  
requests a file from the server that it downloads and saves onto the  
client machine. The file is a python module that gets dynamically  
loaded and used in the program. All of this works fine on a Max OS X  
10.4.6 using Python 2.4.4 and Qt-4.1.0. When I try to run the program  
on window I get this error message:

File "C:\path\to\downloaded\module", line X, in init
     self.panel = PhoneBookPanel(self, parent.getWiget())
exceptions.TypeError: 'NoneType' object is not callable

parent:  instance of QMainWindow
parent.getWidget: return a QWidget that will be the parent widget of  
self.panel
self.panel is a QWidget instance that will be added to  
parent.getWidget()
The thing thats really confusing me is that although it works  
perfectly on a mac it crashes on windows using the same version of Qt  
and Python!! 



From yqiang at gmail.com  Tue Nov  7 19:07:48 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Tue, 7 Nov 2006 16:07:48 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <454B6A69.2030804@imperial.ac.uk>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
Message-ID: <3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>

On 11/3/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
> Yi Qiang wrote:
> > This is the part where I stumble on though, the exact implementation of
> > how to make it so that one calls back the other.
>
> One what calls back the other what?
>
> You'll have issues with error handling and dropping workers if you're
> not careful to chain the deferreds correctly. I would try something like
> this personally. ...


Hi Phil,
Sorry it took me so long to get back to you.  Thanks for your suggestion,
but the thing I was trying to avoid is to have the Workers communicate with
the PB server.  There could be potentially many workers and when I thought
about the problem, it seemed cleaner to design something where the client
consisted of a 'Monitor' and 'Workers'.  The monitor connects to the server,
gets jobs, distributes jobs to the workers and watches for workers who
finished their jobs.  What do you think of this design?  It is obviously a
little more convoluted to program but might be easier to deal with in the
future.  I have little programming experience so this is all speculation
from my side.  Any insight would be greatly appreciated.

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061107/a08bb110/attachment.htm 

From p.mayers at imperial.ac.uk  Wed Nov  8 03:39:51 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 08 Nov 2006 08:39:51 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>	
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
Message-ID: <455197D7.2090508@imperial.ac.uk>

Yi Qiang wrote:
> On 11/3/06, *Phil Mayers* <p.mayers at imperial.ac.uk 
> <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
>     Yi Qiang wrote:
>      > This is the part where I stumble on though, the exact
>     implementation of
>      > how to make it so that one calls back the other.
> 
>     One what calls back the other what?
> 
>     You'll have issues with error handling and dropping workers if you're
>     not careful to chain the deferreds correctly. I would try something like
>     this personally. ...
> 
> 
> Hi Phil,
> Sorry it took me so long to get back to you.  Thanks for your 
> suggestion, but the thing I was trying to avoid is to have the Workers 
> communicate with the PB server.  There could be potentially many workers 
> and when I thought about the problem, it seemed cleaner to design 
> something where the client consisted of a 'Monitor' and 'Workers'.  The 
> monitor connects to the server, gets jobs, distributes jobs to the 
> workers and watches for workers who finished their jobs.  What do you 
> think of this design?  It is obviously a little more convoluted to 
> program but might be easier to deal with in the future.  I have little 
> programming experience so this is all speculation from my side.  Any 
> insight would be greatly appreciated.

To be honest, the problem still seems a little abstract to me, and I'm 
having a hard time figuring out exactly what you're trying to achieve. 
Surely the clients have to submit *some* form of completion status to 
the PB server?

The "Monitor" portion of the clients seem superfluous - what does it 
achieve that having the worker submit the completion does not?

Without a more concrete description I'm afraid I don't have much more 
useful to add.



From iacovou at gmail.com  Wed Nov  8 12:53:37 2006
From: iacovou at gmail.com (kgi)
Date: Wed, 8 Nov 2006 19:53:37 +0200
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
In-Reply-To: <20061105.003750.02715181.warner@lothar.com>
References: <20061105.003750.02715181.warner@lothar.com>
Message-ID: <200611081953.37255.iacovou@gmail.com>


Brian,

I'm trying to use Foolscap as a component in a system where it has to work 
with a lot of data that gets passed back from XML-RPC services.

So far it's been a pleasant experience: it's much more accessible 
than 'oldpb', the intro was easy to read and follow, and it looks and feels 
well-written: thank you!

XML-RPC was chosen in the interests of 'extreme interoperability', but there 
are small parts of the system where the data rate is somewhat too great: for 
these, XML-RPC is utterly unsuited, but Foolscap seems to be a good choice.

As a side-effect of this XML-RPC dependency, I needed to be able to pass 
xmlrpclib.DateTime objects over PB. The documentation states the following:

  "Note that you can also register an ICopyable adapter on third-party classes
   to avoid subclassing."

I spent a while trying to get this working by writing adapation classes and 
whatnot. I got the send part working but couldn't convince the receiver to 
recognise and deserialise the class. Then I looked through the source and 
test code and realised that you've provided an easier interface to do it, but 
haven't mentioned this in the documentation.

Given that being able to send third-party classes over Foolscap is probably a 
very common requirement, I thought I'd send a simple example for others in 
the same position lest they be led into thinking that this requires 
subclassing or writing adaptation classes.

You could even insert these in the part of the documenation about copyables 
where it says "TODO: example" :-)

Regards,

Ricky

-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateClient.py
Type: application/x-python
Size: 807 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061108/0155f12a/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateCopy.py
Type: application/x-python
Size: 428 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061108/0155f12a/attachment-0001.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateService.py
Type: application/x-python
Size: 548 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061108/0155f12a/attachment-0002.bin 

From yqiang at gmail.com  Wed Nov  8 16:59:42 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 8 Nov 2006 13:59:42 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <455197D7.2090508@imperial.ac.uk>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
Message-ID: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>

On 11/8/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> To be honest, the problem still seems a little abstract to me, and I'm
> having a hard time figuring out exactly what you're trying to achieve.
> Surely the clients have to submit *some* form of completion status to
> the PB server?


Ok.  The thing I am trying to design/code is a job distribution system, for
a distributed computation model.  There is a server which interacts with the
job database (which is just a bsddb).  The server accepts connections from
clients and distributes jobs to them.  The server also accepts connections
from a 2nd type of client, which submits jobs to the server.

The "Monitor" portion of the clients seem superfluous - what does it
> achieve that having the worker submit the completion does not?



For the clients whose sole purpose it is to get and process jobs, I
initially envisioned it containing 2 classes.  One class is the Monitor
class and one is the Worker class.  The Monitor's responsibility would be
coordinating the Workers since there can be multiple workers running on the
same client.  The monitor would coordinate tasks such as watching for
activity from the workers (i.e. update the output from workers as it comes
in) and also the monitor needs to be able to prematurely end a workers task
if the job is marked as unnecessary.
The workers of course have to submit their results back to the server, but
in the system I envisioned the monitor takes care of that by continuously
polling the status of the workers.

You're right in that this system complicates things since now I have to
handle communication between the client and the server, and on the client
side I need to implement communication protocols between the monitor and the
worker.  However, it does seem to buy me some flexibility.  Also, this will
keep the Worker class quite simple since all it actually does it execute an
external program to do it's job.

Without a more concrete description I'm afraid I don't have much more
> useful to add.


I hope this clears it up some more and am looking forward to your feedback.
I think the most difficult problem I am facing right now is to decide on a
good design.  This is kind of vague in text and I hope to be able to show
you some code soon, when I figure out how to publish a mercurial repository
:)

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061108/4a053aff/attachment.htm 

From twisted-python at 2xlp.com  Wed Nov  8 19:08:30 2006
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 8 Nov 2006 19:08:30 -0500
Subject: [Twisted-Python] OpenID ?
Message-ID: <C25E7AFE-5CB2-4601-B5FB-024EB4ADF4E9@2xlp.com>

Has anyone implemented an OpenID server in twisted?

I need to roll out OpenID support in my application.  I'm finding a  
some things I don't like in the Python OpenID implementation thats  
out there, so I'm hoping that there might be a twisted version already?

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| FindMeOn.com - The cure for Multiple Web Personality Disorder
| Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| RoadSound.com - Tools For Bands, Stuff For Fans
| Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -





From yqiang at gmail.com  Wed Nov  8 21:46:17 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 8 Nov 2006 18:46:17 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
Message-ID: <3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>

On 11/8/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
>
> The "Monitor" portion of the clients seem superfluous - what does it
> > achieve that having the worker submit the completion does not?
>
>
Also, another reason why I wanted a monitor is because then I only have to
establish on connection to the PB server, vs having each worker establish
it's own connection, or passing around the remoteobj.

Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061108/9d351bf8/attachment.htm 

From sam at spinwardstars.com  Wed Nov  8 23:42:15 2006
From: sam at spinwardstars.com (Samuel Reynolds)
Date: Wed, 08 Nov 2006 21:42:15 -0700
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.co
 m>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
Message-ID: <7.0.0.16.0.20061108211730.01c36720@spinwardstars.com>


>Ok.  The thing I am trying to design/code is a job distribution 
>system, for a distributed computation model.  There is a server 
>which interacts with the job database (which is just a bsddb).  The 
>server accepts connections from clients and distributes jobs to 
>them.  The server also accepts connections from a 2nd type of 
>client, which submits jobs to the server.

Sounds like a distributed task queue.

Users/user processes submit tasks to the master queue
manager (the "server") via a defined interface (HTTP post,
SOAP, XML-RPC, PB, or ???). The master queue manager
adds the requested tasks to the master job queue.

A secondary queue manager on each "client" machine
(the "monitor") requests tasks from the master queue
when its local queue drops below a defined threshold
number of jobs (or drops to zero). When the local queue
is empty, the secondary queue manager periodically
requests tasks from the master. It adds any tasks
received to its local queue.

For each received task, the secondary queue manager
starts a worker task, immediately receiving a deferred.
It registers success and error callbacks on the deferred.

When it gets the success or error callback from a worker,
the secondary queue manager records the result and reports
it to the master queue controller (the "server"). When it
has successfully reported to the master, it deletes the
task from the local queue.

Additional wrinkles: (1) Intertask dependencies may require
that some tasks be performed sequentially, on the same
slave machine, or both. (2) Some tasks may be more important
than others, and so must be processed (or at least started)
first. (3) Task cancellation at the master may require
that the master be able to send asynchronous task-cancel
instructions to the slaves.

>The workers of course have to submit their results back to the 
>server, but in the system I envisioned the monitor takes care of 
>that by continuously polling the status of the workers.

If the worker returns a deferred, the monitor doesn't
need to poll; it'll get a callback when the worker
completes (or fails).

HTH.

- Sam 





From katarzyna.winiarz at linuxdevjournal.com  Thu Nov  9 06:22:43 2006
From: katarzyna.winiarz at linuxdevjournal.com (Katarzyna Winiarz)
Date: Thu, 9 Nov 2006 12:22:43 +0100
Subject: [Twisted-Python] Twisted article
Message-ID: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>

Hello,

I am the editor of the magazines Linux Developer's Journal and MSCoder. Those 
magazines are designed for programers and developer's of plateforms  Linux  
(ldj) and of Microsoft (MSCoder).They are published bimonthly in french, 
spanish and german.
I would like to ask you if someone of you could write for us the article about 
Twisted in french linguistic version.
I would be very content.

Best regards
Kasia
-- 
Katarzyna Winiarz
katarzyna.winiarz at linuxdevjournal.com
www.linuxdevjournal.com
www.mscoder.org
t?l. 0048 22 887 13 44
fax. 0048 22 887 10 11



From p.mayers at imperial.ac.uk  Thu Nov  9 07:00:35 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 09 Nov 2006 12:00:35 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>	
	<454B6A69.2030804@imperial.ac.uk>	
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>	
	<455197D7.2090508@imperial.ac.uk>	
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
	<3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>
Message-ID: <45531863.3050808@imperial.ac.uk>

Yi Qiang wrote:
> On 11/8/06, *Phil Mayers* <p.mayers at imperial.ac.uk 
> <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
> 
>         The "Monitor" portion of the clients seem superfluous - what
>         does it
>         achieve that having the worker submit the completion does not?
> 
> 
> Also, another reason why I wanted a monitor is because then I only have 
> to establish on connection to the PB server, vs having each worker 
> establish it's own connection, or passing around the remoteobj. 

(there's no need to CC me, I'm on the list)

Ok fine, you want a (superfluous IMHO) instance of a monitor class.

Do this:

class Worker:
   def issueJob(self, job):
     # return a deferred
     return reactor.callInThread(nonGILnonBlocking, job)

class Monitor:
   def connect(self):
     factory = pb.PB.ClientFactory()
     reactor.connectTCP(host, port, factory)
     factory.login(creds).addCallbacks(
       self.connected, self.connectfailed
     )

   def connected(self, remoteobj):
     self.remoteobj = remoteobj
     self.workerpool = SomeWorkerPool()
     for worker in self.workerpool:
       self.startWorker(worker)

   def startWorker(worker):
     self.remoteobj.callRemote('getJob').addCallback(
       self.startWorker2, worker
       # startWorker2 returns a deferred - the callback chain will be
       # paused here when that happens and continued when *that* deferred
       # finishes, with the callback value
     ).addCallback(
       self.workerDone,
       self.workerFailed,
       (worker,)
       {},
       (worker,)
       {},
     )

   def startWorker2(self, job, worker):
     deferred = worker.issueJob(job)
     return deferred

   def workerDone(self, result, worker):
     self.remoteobj.callRemote('jobDone', result)
     self.startWorker(worker)

   def workerFailed(self, failure, worker):
     self.remoteobj.callRemote('jobFailed', failure)
     self.startWorker(worker)

I *still* think you need a job ID number to key successes and failures 
at the server side.



From jan.bakuwel at int.greenpeace.org  Thu Nov  9 07:44:55 2006
From: jan.bakuwel at int.greenpeace.org (Jan Bakuwel)
Date: Thu, 09 Nov 2006 13:44:55 +0100
Subject: [Twisted-Python] SMTP server
Message-ID: <455322C7.3020605@int.gl3>

Hoi all,

This is my first message to the list so I think its appropriate to
express my appreciation for all the excellent work done by the people
who created & contributed to the twisted libraries.

I have a small but interesting problem that I'd like to ask your advise
on, please see the description below. If you notice that I haven't
understood something properly, I hope you'll correct me :-)

I've implemented a SMTP server (I've called it "xsmtp") using the
twisted & python libraries. A MTA (Postfix) delivers email messages to
the xsmtp server: the MTA opens a single SMTP session to the xsmpt
server, then multiple "RCPT TO"s follow, one for each recipient.

As a result The "validateFrom" procedure is called by the twisted
library once, followed by multiple calls to the "validateTo" procedure.

This is creating a small problem for me. Since I must process the email
in the validateTo procedure, I will now receive multiple copies of the
same email (albeit for different recipients). One of the tasks of the
xsmtp server is to transmit these emails to another xsmtp server (SMTP
cannot be used due to the inherently high latency connection between the
two). Ideally I do not transfer the same email twice but would like to
leave the delivery to multiple recipients up to the MTA on the other
end. In a schema:

-> MTA -> xsmtp -- high latency link --> xsmtp -> MTA -> local delivery

To implement smtp.IMessageDelivery I have to provide for the following
procedures:

validateFrom:    called once shortly after SMTP session is initiated
receivedHeader:  called multiple times for each recipient
validateTo:      called multiple tiems for each recipient

One could say that "validateFrom" is the start of the process (of
receiving an email) "receivedHeader/validateTo" is the core of the
process. What I am missing is something that indicates the end of the
process.


It would help me tremendously if smtp.IMessageDelivery would also
provide an abstract method that is called once the message delivery is
completed.

Any suggestions, thoughts are very welcome; perhaps this is already
possible with the twisted libraries in a different way as I'm suggesting
here?

best regards,
Jan

-- 

"It is an illusion to think that we are free to apply our increasing
knowledge in any way we choose. In reality we are struggling to deal
with the consequences of it."                           -- John Gray

----

Electronic Technology Coordinator
Information/Communication/Technology
Greenpeace International
Ottho Heldringstraat 5
1066 AZ  AMSTERDAM
Netherlands (MET)

direct    +31 (0)20 7182084
fax       +31 (0)20 5148151
reception +31 (0)20 5148150
email     jan.bakuwel&int.greenpeace.org
private   jan.bakuwel&hccnet.nl
(replace & by @ in the emailaddress)




From yoann.aubineau at wengo.fr  Thu Nov  9 10:12:46 2006
From: yoann.aubineau at wengo.fr (Yoann Aubineau)
Date: Thu, 09 Nov 2006 16:12:46 +0100
Subject: [Twisted-Python] Twisted article
In-Reply-To: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>
References: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>
Message-ID: <1163085166.13099.12.camel@Hupetto>

Hi,
I don't feel like I know Twisted enough to write an article about it
myself. Plus, I definitely don't have time to do it from scratch
(writing is time consuming). However, if you need any help, I volunteer
to translate an English (preferably) or Spanish written article into
French (which is my mother tongue). Let me know. What's your deadline,
btw ?
Yoann

Le jeudi 09 novembre 2006 ? 12:22 +0100, Katarzyna Winiarz a ?crit :
> Hello,
> 
> I am the editor of the magazines Linux Developer's Journal and MSCoder. Those 
> magazines are designed for programers and developer's of plateforms  Linux  
> (ldj) and of Microsoft (MSCoder).They are published bimonthly in french, 
> spanish and german.
> I would like to ask you if someone of you could write for us the article about 
> Twisted in french linguistic version.
> I would be very content.
> 
> Best regards
> Kasia
-- 
Yoann Aubineau <yoann.aubineau at wengo.fr>




From james.kanze at gmail.com  Thu Nov  9 10:16:52 2006
From: james.kanze at gmail.com (James Kanze)
Date: Thu, 9 Nov 2006 16:16:52 +0100
Subject: [Twisted-Python] Installation of Twisted (Sumo) failing in web,
	words (I think)
Message-ID: <a16bec8a0611090716i1b31b08bn9b0fd6af0d3d5286@mail.gmail.com>

I think I'm having a problem with the installation of the
twisted Sumo package (TwistedSumo-2006-02-12, but Twisted-2.4.0
doesn't seem to work either).

Basically, I'm trying to get PyAIM-t working, under Linux (on a
machine with a very stripped down configuration, and on which I
don't have root access).  PyAIM-t requires Twisted (core, web
and words, at least), and recommends the 2.2.0 version, which is
in the TwistedSumo package above.  So I installed and built the
package, to the best of my ability (this is my first time
dealing with Python).  But PyAIM-t still doesn't seem to find
what it is looking for.  I added a few print statements where
the problem was occuring, so the code looks something like this:

   try:
       print sys.path
       print "trying domish"
       from twisted.words.xish.domish import SuxElementStream, \
                        Element, unescapedFromXml
       print "got domish"
       #  ...
   except ImportError:
       print sys.exc_info()[1]
       #  ...

The output here is:
   [... , '/home/team02/jakan/gnu/lib/python2.4/site-packages', ...]
   trying domish
   No module named words.xish.domish

What makes me thing that the problem is in my installation of
twisted: when I invoke "python setup.py" from the root, I get a lot
of messages along the lines of:

   package init filie 'twisted/plugins/__init__.py' not found (or not
a regular file)

In addition, to get anything in the library directory from the
path above, I have to add the --force flag, so that my install
command looks like:

    python setup.py --prefix=/home/team02/jakan/gnu \
        --exec-prefix=/home/team02/jakan/gnu/i686 --force

I'm sure that I'm doing something stupid and obvious that I'm
missing, but I don't quite no where to turn.  (This is really my
first contact with Python, starting yesterday.  I want to learn
it, but management wants a proof of concept that what we want to
do will work before approving the project.)

--
James Kanze (GABI Software)            mailto:james.kanze at gmail.com
Conseils en informatique orient?e objet/
                  Beratung in objektorientierter Datenverarbeitung
9 place S?mard, 78210 St.-Cyr-l'?cole, France, +33 (0)1 30 23 00 34



From exarkun at divmod.com  Thu Nov  9 11:05:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Nov 2006 11:05:21 -0500
Subject: [Twisted-Python] SMTP server
In-Reply-To: <455322C7.3020605@int.gl3>
Message-ID: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>

On Thu, 09 Nov 2006 13:44:55 +0100, Jan Bakuwel <jan.bakuwel at int.greenpeace.org> wrote:
>Hoi all,
>
>This is my first message to the list so I think its appropriate to
>express my appreciation for all the excellent work done by the people
>who created & contributed to the twisted libraries.
>
>I have a small but interesting problem that I'd like to ask your advise
>on, please see the description below. If you notice that I haven't
>understood something properly, I hope you'll correct me :-)
>
>I've implemented a SMTP server (I've called it "xsmtp") using the
>twisted & python libraries. A MTA (Postfix) delivers email messages to
>the xsmtp server: the MTA opens a single SMTP session to the xsmpt
>server, then multiple "RCPT TO"s follow, one for each recipient.
>
>As a result The "validateFrom" procedure is called by the twisted
>library once, followed by multiple calls to the "validateTo" procedure.
>
>This is creating a small problem for me. Since I must process the email
>in the validateTo procedure, I will now receive multiple copies of the
>same email (albeit for different recipients). One of the tasks of the
>xsmtp server is to transmit these emails to another xsmtp server (SMTP
>cannot be used due to the inherently high latency connection between the
>two). Ideally I do not transfer the same email twice but would like to
>leave the delivery to multiple recipients up to the MTA on the other
>end. In a schema:
>
>-> MTA -> xsmtp -- high latency link --> xsmtp -> MTA -> local delivery
>
>To implement smtp.IMessageDelivery I have to provide for the following
>procedures:
>
>validateFrom:    called once shortly after SMTP session is initiated
>receivedHeader:  called multiple times for each recipient
>validateTo:      called multiple tiems for each recipient
>
>One could say that "validateFrom" is the start of the process (of
>receiving an email) "receivedHeader/validateTo" is the core of the
>process. What I am missing is something that indicates the end of the
>process.
>
>
>It would help me tremendously if smtp.IMessageDelivery would also
>provide an abstract method that is called once the message delivery is
>completed.
>
>Any suggestions, thoughts are very welcome; perhaps this is already
>possible with the twisted libraries in a different way as I'm suggesting
>here?

The situation is not ideal, but I think if you use IMessageDeliveryFactory
instead of IMessageDelivery you'll be able to accomplish your goal.

With IMessageDeliveryFactory, you can create a new IMessageDelivery provider
for each SMTP transaction.  validateTo is still called multiple times on
your IMessageDelivery provider, but because a new one is created for each
transaction, you should be able to avoid making multiple deliveries to your
real backend.

(As I wrote that I realized it was not a very clear explanation at all, but
I cannot think of another way to put it without actually implementing
something).

Jean-Paul



From katarzyna.winiarz at linuxdevjournal.com  Thu Nov  9 11:23:40 2006
From: katarzyna.winiarz at linuxdevjournal.com (Katarzyna Winiarz)
Date: Thu, 9 Nov 2006 17:23:40 +0100
Subject: [Twisted-Python] article
Message-ID: <200611091723.40790.katarzyna.winiarz@linuxdevjournal.com>

Hello,

We need of an article about project Twisted- Python for the magazine for 
programers and developers of Linux (www.linuxdevjournal.com). This magazine 
is published bimonthly in french.
The article must be strictly technic and pratically oriented. Longeur it's 
10-15 pages in text editor(20 000 - 30 000 caracters).
We will pay 25 euros for the page of the texte past the print, without 
listings and figures.

Kasia
-- 
Katarzyna Winiarz
katarzyna.winiarz at linuxdevjournal.com
www.linuxdevjournal.com
t?l. 0048 22 887 13 44
fax. 0048 22 887 10 11



From zsp007 at gmail.com  Fri Nov 10 00:44:35 2006
From: zsp007 at gmail.com (=?UTF-8?B?5byg5rKI6bmP?=)
Date: Fri, 10 Nov 2006 13:44:35 +0800
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
Message-ID: <455411C3.30806@gmail.com>

I want to know whether Twisted  can run in Python2.5 .




From jan.bakuwel at int.greenpeace.org  Fri Nov 10 04:57:31 2006
From: jan.bakuwel at int.greenpeace.org (Jan Bakuwel)
Date: Fri, 10 Nov 2006 10:57:31 +0100
Subject: [Twisted-Python] SMTP server
In-Reply-To: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>
References: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>
Message-ID: <45544D0B.2000503@int.gl3>

Hi Jean-Paul,
> The situation is not ideal, but I think if you use
> IMessageDeliveryFactory
> instead of IMessageDelivery you'll be able to accomplish your goal.
>
> With IMessageDeliveryFactory, you can create a new IMessageDelivery
> provider
> for each SMTP transaction.  validateTo is still called multiple times on
> your IMessageDelivery provider, but because a new one is created for each
> transaction, you should be able to avoid making multiple deliveries to
> your
> real backend.
>
> (As I wrote that I realized it was not a very clear explanation at
> all, but
> I cannot think of another way to put it without actually implementing
> something).
Are you suggesting that I would implement my own version of
IMessageDelivery to include the abstract method I'm wishing for? Just
trying to understand what you're suggesting... :-)

regards,
Jan

-- 

"It is an illusion to think that we are free to apply our increasing 
knowledge in any way we choose. In reality we are struggling to deal 
with the consequences of it."                           -- John Gray

----

Electronic Technology Coordinator
Information/Communication/Technology
Greenpeace International
Ottho Heldringstraat 5
1066 AZ  AMSTERDAM
Netherlands (MET)

direct    +31 (0)20 7182084
fax       +31 (0)20 5148151
reception +31 (0)20 5148150
email     jan.bakuwel&int.greenpeace.org
private   jan.bakuwel&hccnet.nl
(replace & by @ in the emailaddress)





From exarkun at divmod.com  Fri Nov 10 08:22:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 08:22:59 -0500
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <455411C3.30806@gmail.com>
Message-ID: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>

On Fri, 10 Nov 2006 13:44:35 +0800, ??? <zsp007 at gmail.com> wrote:
>I want to know whether Twisted  can run in Python2.5 .
>

Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
have fewer problems.

Jean-Paul



From exarkun at divmod.com  Fri Nov 10 08:29:11 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 08:29:11 -0500
Subject: [Twisted-Python] SMTP server
In-Reply-To: <45544D0B.2000503@int.gl3>
Message-ID: <20061110132911.20948.1453713239.divmod.quotient.21240@ohm>

On Fri, 10 Nov 2006 10:57:31 +0100, Jan Bakuwel <jan.bakuwel at int.greenpeace.org> wrote:
>Hi Jean-Paul,
>> The situation is not ideal, but I think if you use
>> IMessageDeliveryFactory
>> instead of IMessageDelivery you'll be able to accomplish your goal.
>>
>> With IMessageDeliveryFactory, you can create a new IMessageDelivery
>> provider
>> for each SMTP transaction.  validateTo is still called multiple times on
>> your IMessageDelivery provider, but because a new one is created for each
>> transaction, you should be able to avoid making multiple deliveries to
>> your
>> real backend.
>>
>> (As I wrote that I realized it was not a very clear explanation at
>> all, but
>> I cannot think of another way to put it without actually implementing
>> something).
>Are you suggesting that I would implement my own version of
>IMessageDelivery to include the abstract method I'm wishing for? Just
>trying to understand what you're suggesting... :-)

You should implement IMessageDelivery and your implementation should keep
internal state which tracks which users the message should be delivered to.
This state should be transferred to the IMessage provider which validateTo
returns.  When IMessage.messageDone is called, you should use that state to
deliver the message once and only once to the intended recipients.

IMessage.messageDone is the notification you want, as long as you are using
a different IMessageDelivery for each message, which is what implementing
IMessageDeliveryFactory lets you do.

Jean-Paul



From twisted-list at zorinholdings.com  Fri Nov 10 10:24:51 2006
From: twisted-list at zorinholdings.com (Matt P)
Date: Fri, 10 Nov 2006 15:24:51 +0000 (GMT)
Subject: [Twisted-Python] Callback blocked in event loop
Message-ID: <Pine.LNX.4.64.0611101513230.3950@kylie.zorinholdings.com>


Hello

I've got a bit of an issue that someone may recognise and bea ble to set 
me straight!

I have a twisted.spread server which, amongst other things, provides an 
event pub/sub engine. The subscription manager and event publisher runs in 
the twisted event loop: an event is posted onto a DeferredQueue and the 
callback on that Queue iterates through listeners calling eventFired(...).

Some event listeners run in-server, but others are seperate processes 
which register by calling the register function on the server and 
providing a pb.Referenceable that the event publisher can call 
eventFired(...) on.

Events may be raised in the server, as a twisted.pb call to fireEvent on 
the server and also come in on a separate thread (from a JMS message 
queue) and get posted onto the DefferedQueue for events.

If events are raised in the server, remote listeners get their 
pb.Referenceable callback immediately. It works as I would like.

However, if a message comes in off the JMS bus, the DeferredQueue callback 
gets called, it in turns calls the referenceable callback and nothing 
happens. Only when the server handles *any* other Twisted event do the 
event callbacks execute and my remote listeners get the message.

So, only in the case where teh DeferredQueue.put(...) is called from 
another thread do I have the problem. I can't see why the blocking. Does 
this behaviour make sense to anyone!?

Many thanks in advance for any help!!
Matthew




From exarkun at divmod.com  Fri Nov 10 11:14:13 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 11:14:13 -0500
Subject: [Twisted-Python] Callback blocked in event loop
In-Reply-To: <Pine.LNX.4.64.0611101513230.3950@kylie.zorinholdings.com>
Message-ID: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>

On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P <twisted-list at zorinholdings.com> wrote:
>
>Hello
>
>I've got a bit of an issue that someone may recognise and bea ble to set me 
>straight!
>
> [snip]
>
>Events may be raised in the server, as a twisted.pb call to fireEvent on the 
>server and also come in on a separate thread (from a JMS message queue) and 
>get posted onto the DefferedQueue for events.
>
>If events are raised in the server, remote listeners get their 
>pb.Referenceable callback immediately. It works as I would like.
>
> [snip]
>
>So, only in the case where teh DeferredQueue.put(...) is called from another 
>thread do I have the problem. I can't see why the blocking. Does this 
>behaviour make sense to anyone!?

DeferredQueue isn't threadsafe.  Instead of calling put() directly from a
non-reactor thread, call it with reactor.callFromThread:


    reactor.callFromThread(q.put, value)

Jean-Paul



From twisted-list at zorinholdings.com  Fri Nov 10 11:40:48 2006
From: twisted-list at zorinholdings.com (MattP)
Date: Fri, 10 Nov 2006 16:40:48 +0000 (GMT)
Subject: [Twisted-Python] Callback blocked in event loop
In-Reply-To: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>
References: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>
Message-ID: <Pine.LNX.4.64.0611101640210.3950@kylie.zorinholdings.com>

Oh my - how could I have been so daft? I'll put it down to Friday - 
thankyou very much Jean-Paul
for opening my eyes!

Cheers
Matthew

On Fri, 10 Nov 2006, Jean-Paul Calderone 
wrote:

> On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P 
> <twisted-list at zorinholdings.com> wrote:
>> 
>> Hello
>> 
>> I've got a bit of an issue that someone may recognise and bea ble to set me 
>> straight!
>>
>>  [snip]
>> 
>> Events may be raised in the server, as a twisted.pb call to fireEvent on 
>> the server and also come in on a separate thread (from a JMS message queue) 
>> and get posted onto the DefferedQueue for events.
>> 
>> If events are raised in the server, remote listeners get their 
>> pb.Referenceable callback immediately. It works as I would like.
>>
>>  [snip]
>> 
>> So, only in the case where teh DeferredQueue.put(...) is called from 
>> another thread do I have the problem. I can't see why the blocking. Does 
>> this behaviour make sense to anyone!?
>
> DeferredQueue isn't threadsafe.  Instead of calling put() directly from a
> non-reactor thread, call it with reactor.callFromThread:
>
>
>   reactor.callFromThread(q.put, value)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

----------------------------------------------
Matthew Pontefract
http://www.zorinholdings.com/
----------------------------------------------



From jmike at caringo.com  Fri Nov 10 12:54:03 2006
From: jmike at caringo.com (Mike Morrison)
Date: Fri, 10 Nov 2006 11:54:03 -0600
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>
References: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>
Message-ID: <D64DA0DF-01FB-4ED2-AB94-E2DCAF8F183D@caringo.com>


On Nov 10, 2006, at 7:22 AM, Jean-Paul Calderone wrote:

> On Fri, 10 Nov 2006 13:44:35 +0800, ??? <zsp007 at gmail.com>  
> wrote:
>> I want to know whether Twisted  can run in Python2.5 .
>>
>
> Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
> have fewer problems.

Uh oh, I was about to go down the python2.5/twisted2.4 road too  
(we're only using core and names).  I queried the tickets for  
anything "python 2.5", "python2.5" and "python25" in the summary and  
saw only three tickets, none that looked like impediments to use.   
Are there others that I've missed?

--jmike





From exarkun at divmod.com  Fri Nov 10 13:15:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 13:15:00 -0500
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <D64DA0DF-01FB-4ED2-AB94-E2DCAF8F183D@caringo.com>
Message-ID: <20061110181500.20948.417919939.divmod.quotient.21606@ohm>

On Fri, 10 Nov 2006 11:54:03 -0600, Mike Morrison <jmike at caringo.com> wrote:
>
>On Nov 10, 2006, at 7:22 AM, Jean-Paul Calderone wrote:
>>On Fri, 10 Nov 2006 13:44:35 +0800, ??? <zsp007 at gmail.com>  wrote:
>>>I want to know whether Twisted  can run in Python2.5 .
>>
>>Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
>>have fewer problems.
>
>Uh oh, I was about to go down the python2.5/twisted2.4 road too  (we're only 
>using core and names).  I queried the tickets for  anything "python 2.5", 
>"python2.5" and "python25" in the summary and  saw only three tickets, none 
>that looked like impediments to use.   Are there others that I've missed?

http://twistedmatrix.com/trac/ticket/1867 covers a lot of the breakage, but
not all of it.

Jean-Paul



From srock258 at gmail.com  Fri Nov 10 16:54:22 2006
From: srock258 at gmail.com (Sean Roark)
Date: Fri, 10 Nov 2006 16:54:22 -0500
Subject: [Twisted-Python] Newbie to Twisted. Converting Asyncore App to
	Twisted App
Message-ID: <a7964aae0611101354r386c7028u2eca97854fcbb55f@mail.gmail.com>

I am new to this Twisted Architecture so if my plan makes no sense, please
guide me down a smoother path.

I have a program using Asyncore as the communications interface but I want
to switch to Twisted.

Server1                                Server 2
<-------TCP------|             | <---TCP-------
                     | My App |
----TCP--------->|             |----TCP----->

Basically MyApp takes stuff from Server 1, modifies it in some way, then
sends it to server 2 and vice versa for Server 2 to Server 1. It is a
translator between two ICD's languages spoken by two different systems. All
data in and out is raw.

I have modules written that can parse the raw data into objects, translate
the objects into the other ICD, then repack the objects into raw data.
Currently, My App uses asyncore to manage the socket between the servers as
pictured above. Asyncore sticks the raw data on a Queue for the next object
to retrieve. Each object is a thread that blocks on the Queue until data
arrives. When a object receives data on the Queue, it performs its operation
and sticks the modified data on another queue for the next thread to handle.
Eventually, data ends up on a Queue being monitored by an Asyncore
dispatcher that grabs the data and sends it to a server.

Server1 ----TCP----->Asyncore.recv() --put--> Queue --get-->Parser--put-->
Queue --get--> Translator --put--> Queue --get--> Packer --put---> Queue
--get-->Asyncore.send()

I would like to use Twisted for the following reasons:

1. Add a gui, stand alone or web based, allowing users to view statistics
being generated by modules and to inject messages to one of the servers.
Other services may be necessary in the future
2. We have a problem with asyncore behaving differently on Windows servers
then Linux servers with regards to reconnecting after network drops. It is
greatly beneficial if we can run on either platform.
3. Twistd is a great way to run this program as a daemon on Linux but still
works on Windows
4. My own personal education
5. Twisted seems so cool

Questions that have arisen as i try to code this in Twisted.

1. What is the proper method for gluing my processing modules to Twisted?
I have followed the finger tutorial and it seems I should call them from a
Service class. Finger tutorial part
3<http://twistedmatrix.com/projects/core/documentation/howto/tutorial/style.html>
This leads to question 2

I have toyed with using DeferredQueue's to pass data between the modules. I
would pretty much follow the pattern above, but the DeferredQueue's should
allow my modules to NOT run as threads. Instead they just fire events when
data arrives on their Queue.

2. How do I have My App send data to the servers via events?
In the finger tutorial Part 3 there are getUser and getUsers methods that
are called by the FingerProtocol class via the FingerClientFactory. This all
makes sense for processing data from the network and responding to it, but
suppose I want some other object, say my Packer object, to fire an event
that will make FingerProtocol send some data from Packer to the server? How
do I expose a method to do this if Packer only knows about the Service, but
the Service has no access to methods in FingerProtocol?

I have come up with two solutions to this problem, neither of which is
impressive to me.

First solution, use DeferredQueue's to pass all the data around. This does
work as a prototype, but I have no Service class wrapping it.

class QueueProtocol(Protocol):
    "Handles the network receive and send work for a send and a receive
queue"
    def dataReceived(self, data):
        print "Received Data:",data
        self.factory.putData(data)

    def connectionMade(self):
        print "Conn Made"
        self.sendData()

    def sendData(self):
        print "sendData"
        self.factory.getData().addCallback(self.sendHelp)

    def sendHelp(self,data):
        print "SendHelp",data
        self.transport.write(data+"\r\n")
        self.sendData()

class QueueClientFactory(ClientFactory):
    "Handle the Connection"
    protocol = QueueProtocol
    def __init__(self,recQueue, sendQueue):
        self.recQueue = recQueue #both deferredQueue's
        self.sendQueue = sendQueue

    def putData(self,data):
        self.recQueue.put(data)

    def getData(self):
        "Returns a defered because sendQueue is a DeferredQueue"
        return self.sendQueue.get()

Second solution, that I have not managed to code. I have the feeling I'm way
of the mark here.

Each component (yes I have been reading the Zope docs) in the application
knows about interfaces. All components will implement a receive(data) method
and a process(data) method. Each of these objects can pass data to other
components by adding another components receive(data) method as a callback
to its own process(data) method.

Parse
def receive(data):
self.process(data).addCallback( Translate.receive(data) )

The Parse object receives data from somewhere. The process method takes this
raw data and parses it into an object. When process has completed the
callback method, defined in the Translate object, is called with the new
object as a parameter.

Parse's Factory class will take an instance of Translate in __init__.

Some guidance would make my brain hurt less.

Thanks,

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061110/3c545c46/attachment.htm 

From general at eepatents.com  Sat Nov 11 01:53:25 2006
From: general at eepatents.com (Ed Suominen)
Date: Fri, 10 Nov 2006 22:53:25 -0800
Subject: [Twisted-Python] Re: Callback blocked in event loop
In-Reply-To: <E1Giafc-00061s-02@pyramid.twistedmatrix.com>
References: <E1Giafc-00061s-02@pyramid.twistedmatrix.com>
Message-ID: <45557365.8060405@eepatents.com>

> On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P wrote:
>>> Events may be raised in the server, as a twisted.pb call to 
>>> fireEvent on the server and also come in on a separate thread (from
>>> a JMS message queue) and get posted onto the DefferedQueue for 
>>> events.
>>> 
>>> If events are raised in the server, remote listeners get their 
>>> pb.Referenceable callback immediately. It works as I would like.
>>> 
>>> [snip]
>>> 
>>> So, only in the case where teh DeferredQueue.put(...) is called 
>>> from another thread do I have the problem. I can't see why the 
>>> blocking. Does this behaviour make sense to anyone!?
> 
> DeferredQueue isn't threadsafe.  Instead of calling put() directly from
> a non-reactor thread, call it with reactor.callFromThread:
> 
>     reactor.callFromThread(q.put, value)
> 
> Jean-Paul

Matt, this is exactly the sort of thing for which I wrote the taskqueue
module that is patiently awaiting review in ticket #1768
(http://twistedmatrix.com/trac/ticket/1768).

It is a critical part of my sAsync project ("SQLAlchemy done
asynchronously"). You can check out the latest version as used in that
project at:

http://foss.eepatents.com/sAsync/browser/trunk/sasync/taskqueue.py.

The part that would appear to be of particular interested to you is the
ThreadQueue subclass of TaskQueue.

Best regards,
Ed Suominen



From alvinwang at gmail.com  Sat Nov 11 02:49:27 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 10 Nov 2006 23:49:27 -0800
Subject: [Twisted-Python] Converting twistd script to NT service using py2exe
Message-ID: <77d044440611102349y533bbb1dx98d9bad53f0b7697@mail.gmail.com>

http://twistedmatrix.com/pipermail/twisted-python/2004-January/007021.html
http://twistedmatrix.com/pipermail/twisted-python/2004-March/007311.html
http://twistedmatrix.com/pipermail/twisted-python/2005-April/010038.html

*There seems to be the implication that I need tap2ntsvc from the sandbox.
Unfortunately, I can not seem to find it in the sandbox.

*

Is it out of date?  Have the files been moved?  Is there another way to
accomplish the same objective?

thanks
-- 
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061110/11d043da/attachment.htm 

From exarkun at twistedmatrix.com  Sun Nov 12 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1163311502.64.198124843@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-05 through 2006-11-12
Bugs opened: 9    Bugs closed: 3  Total open bugs: 783 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +1          |Core:   +4             
|Enhancement:  +1  |High:     +1          |Trial:  +0             
                   |Normal:   +2          |Web:    +1             
                   |Low:      +1          |Web2:   +1             
                   |Lowest:   +1                                  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2223] DeferredSemaphore should be marked "stable" (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2223

[#2225] microdom shouldn't bork on malformed tags when beExtremelyLenient is enabled (opened by jml) (CLOSED, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2225

                    ===== High =====
[#2224] Web2: Behavior of Request.locateResource vs Resource.locateChild is not clearly defined. (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2224

                    ===== Normal =====
[#2219] isInIOThread() returns False when used in TestCases (opened by sifu)
    defect          trial      http://twistedmatrix.com/trac/ticket/2219

[#2220] [SIP] parsing bugs/limitations and patch (opened by antoine)
    defect          core       http://twistedmatrix.com/trac/ticket/2220

[#2222] t.i.task.Clock.advance should set the call.called attribute. (opened by ralphm)
    defect          core       http://twistedmatrix.com/trac/ticket/2222

                    ===== Low =====
[#2221] MotdResource gets stale in finger15.py (opened by gfalcon) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2221

[#2227] sux uses "True" as the default value for an attribute (opened by jml)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2227

                    ===== Lowest =====
[#2226] qt4reactor.stop() not closing connections and quitting python (opened by Tantalum)
    defect          core       http://twistedmatrix.com/trac/ticket/2226



Closed Bugs
______________________
                    ===== Highest =====
[#2225] microdom shouldn't bork on malformed tags when beExtremelyLenient is enabled (opened by jml, closed by jml, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2225

                    ===== Normal =====
[#2144] Add Trial option to stop test run on the first failure (opened by jml, closed by exarkun, duplicate)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2144

                    ===== Low =====
[#2221] MotdResource gets stale in finger15.py (opened by gfalcon, closed by jerub, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2221





From waterbug at pangalactic.us  Mon Nov 13 09:01:58 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 13 Nov 2006 09:01:58 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
Message-ID: <45587AD6.1010707@pangalactic.us>

trac at twistedmatrix.com wrote:
> New submission from LonelyPixel <nospam at unclassified.de>:
> 
> I have installed twisted 2.4 for Debian Python 2.4 and after a recent apt-get upgrade, when Python 2.4 was to be upgraded, I get this error:
> 
> Setting up python2.4 (2.4.1-2sarge1) ...
> Compiling python modules in /usr/lib/python2.4 ...
> Compiling /usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py ...
>   File "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", line 20
>     ???
>     ^
> SyntaxError: invalid syntax

I'm amazed that this error is still there -- I saw it *months* ago!
Sure makes Twisted look bad.

Steve




From twisted at ralphm.ik.nu  Mon Nov 13 11:12:44 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 13 Nov 2006 17:12:44 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <45587AD6.1010707@pangalactic.us>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
	<45587AD6.1010707@pangalactic.us>
Message-ID: <20061113161244.GA67850@ik.nu>

On Mon, Nov 13, 2006 at 09:01:58AM -0500, Stephen Waterbury wrote:
> trac at twistedmatrix.com wrote:
> >New submission from LonelyPixel <nospam at unclassified.de>:
> >
> >I have installed twisted 2.4 for Debian Python 2.4 and after a recent 
> >apt-get upgrade, when Python 2.4 was to be upgraded, I get this error:
> >
> >Setting up python2.4 (2.4.1-2sarge1) ...
> >Compiling python modules in /usr/lib/python2.4 ...
> >Compiling 
> >/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py ...
> >  File 
> >  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
> >  line 20
> >    ???
> >    ^
> >SyntaxError: invalid syntax
> 
> I'm amazed that this error is still there -- I saw it *months* ago!
> Sure makes Twisted look bad.

Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
just haven't done a new release. Also, the debian package maintainers
could easily fix this, but apparently choose not to. Other packagers
(among which FreeBSD) have no troubles at all.

-- 
Groetjes,

ralphm



From bhenry at pacecocorp.com  Mon Nov 13 12:39:48 2006
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Mon, 13 Nov 2006 09:39:48 -0800
Subject: [Twisted-Python] Converting twistd script to NT service using
	py2exe
In-Reply-To: <77d044440611102349y533bbb1dx98d9bad53f0b7697@mail.gmail.com>
Message-ID: <E1Gjfpy-0007XM-00@pyramid.twistedmatrix.com>

Check out /sandbox/moonfallen/ntsvc, it works on my Windows XP Pro and XP
Home machines for installing a service out of a Twisted project.  Just save
the .py file as a .tac and follow the directions.  

 

http://twistedmatrix.com/trac/browser/sandbox/moonfallen/README-ntsvc.txt

 

Regards,

 

Ben

  _____  

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin Wang
Sent: Friday, November 10, 2006 11:49 PM
To: Twisted general discussion
Subject: [Twisted-Python] Converting twistd script to NT service using
py2exe

 

http://twistedmatrix.com/pipermail/twisted-python/2004-January/007021.html
http://twistedmatrix.com/pipermail/twisted-python/2004-March/007311.html
http://twistedmatrix.com/pipermail/twisted-python/2005-April/010038.html 


There seems to be the implication that I need tap2ntsvc from the sandbox.  


Unfortunately, I can not seem to find it in the sandbox.  
 

Is it out of date?  Have the files been moved?  Is there another way to
accomplish the same objective?

thanks
-- 
Alvin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061113/c24aee2b/attachment.htm 

From apocalypznow at gmail.com  Mon Nov 13 14:01:27 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Mon, 13 Nov 2006 11:01:27 -0800
Subject: [Twisted-Python] Why does this simple server not work?
Message-ID: <ejafe8$etp$1@sea.gmane.org>

The following is run but almost immediately terminates without any 
errors.  WHY?  I used "twistd -noy server.tac".
Here is the code:
****************************
import twisted
from twisted.spread import pb
from twisted.cred import checkers,portal
from twisted.internet import reactor
from twisted.python import threadable
from twisted.python import usage
import threading
import socket

clients={}

class ClientRemoteObject(pb.Avatar):
     global clients
     def __init__(self):
         print "ClientRemoteObject initialized."

     def attached(self):
         print "Client attached"
         return self

     def detached(self):
         print "Client detached"

     def perspective_initialDataExchange(self,clientreference,username):
         print "Client reference attached for:" + username
         clients[username]=clientreference
         data={}
         data['connected']=1
         return data

     def perspective_broadcastMessage(self,msg):
         for user in clients:
             clients[user].callRemote("messageCB",msg + "s")



class DefaultRealm:
     __implements__ = portal.IRealm

     def requestAvatar(self, avatarID, mind, *interfaces):
         assert pb.IPerspective in interfaces
         clientremoteobj = ClientRemoteObject()
         clientremoteobj.attached()
         return pb.IPerspective, clientremoteobj, lambda 
a=clientremoteobj:a.detached()

def shutdownCleanUp():
     print "Twisted reactor shutting down."



application = twisted.application.service.Application("server01")
myService = twisted.application.service.IServiceCollection(application)

reactor.addSystemEventTrigger('before','shutdown',shutdownCleanUp)

p = portal.Portal(DefaultRealm())
dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
dbu.addUser("user1","pass1")
p.registerChecker(dbu)


myServer = twisted.application.internet.TCPServer(81,pb.PBServerFactory(p))
myServer.setServiceParent(myService)
****************
It used to work with Twisted 1.3rc1, but it does not run with Twisted 
2.2 (or 2.3 or 2.4).  I am using Python 2.3, and running this from a DOS 
prompt in Windows.





From exarkun at divmod.com  Mon Nov 13 15:38:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Nov 2006 15:38:17 -0500
Subject: [Twisted-Python] Why does this simple server not work?
In-Reply-To: <ejafe8$etp$1@sea.gmane.org>
Message-ID: <20061113203817.20948.2077254352.divmod.quotient.26327@ohm>

On Mon, 13 Nov 2006 11:01:27 -0800, apocalypznow <apocalypznow at gmail.com> wrote:
>The following is run but almost immediately terminates without any errors. 
>WHY?  I used "twistd -noy server.tac".
>Here is the code:

Using Python 2.3.5 with Twisted r18666, when I run it I get an AttributeError.
If I add:

    import twisted.application.internet

Near the top, then it starts up as expected.

Jean-Paul



From shimon at rura.org  Mon Nov 13 16:09:20 2006
From: shimon at rura.org (Shimon Rura)
Date: Mon, 13 Nov 2006 16:09:20 -0500
Subject: [Twisted-Python] advice on asynchronous LDAP?
Message-ID: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>

Hi folks,

I'm a newbie writing a twisted server that needs to access an LDAP
server.  I started by using python-ldap, which worked fine and is well
documented, but doesn't seem to have support for a callback mechanism
that would make it appropriate for a twisted app.  So I switched to
ldaptor, which fits the twisted model, but doesn't seem to have much
documentation.

I'm looking for advice from people who have some familiarity with
writing twisted apps that include an LDAP client.  Ideally, I'd like
to find either:

(1) a way to use the standard python-ldap library in a multitasking
twisted server (i.e. without busy wait; polling at timed intervals is
a possibility but also seems bad), or

(2) a hidden trove of ldaptor documentation, or a mailing list or IRC
channel where I could ask questions of people who know ldaptor.

Any hints in either of these directions would be most appreciated.
And if you're not an expert but might be interested in forming a new
venue to discuss twisted+LDAP, let me know -- maybe we can set
something up.

thanks,
Shimon Rura



From jean-marc.pouchoulon at ac-montpellier.fr  Tue Nov 14 02:10:08 2006
From: jean-marc.pouchoulon at ac-montpellier.fr (jean-marc pouchoulon)
Date: Tue, 14 Nov 2006 08:10:08 +0100
Subject: [Twisted-Python] advice on asynchronous LDAP?
In-Reply-To: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
References: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
Message-ID: <45596BD0.2060101@ac-montpellier.fr>

Shimon Rura wrote:

> Hi folks,
>
Hello

> I'm a newbie writing a twisted server that needs to access an LDAP
> server.  I started by using python-ldap, which worked fine and is well
> documented, but doesn't seem to have support for a callback mechanism
> that would make it appropriate for a twisted app.  So I switched to
> ldaptor, which fits the twisted model, but doesn't seem to have much
> documentation.

I tried to use it but it worked only with twisted 1.3

>
> I'm looking for advice from people who have some familiarity with
> writing twisted apps that include an LDAP client.  Ideally, I'd like
> to find either:
>
> (1) a way to use the standard python-ldap library in a multitasking
> twisted server (i.e. without busy wait; polling at timed intervals is
> a possibility but also seems bad), or

The way I found was to use python ldap and deferToThread.
This is not really  in the "asynchronous spirit of twisted " but it works.

Here an example I used to make a small sendmail X map lookup:

from twisted.application import internet, service
from twisted.internet import protocol,reactor, defer, threads
from twisted.internet.protocol import Protocol
from twisted.protocols import basic
import ldap


class MapProtocol(Protocol):

    def dataReceived(self, Mel):
        d = threads.deferToThread(self.factory._lire_annuaire_ldap,Mel)
        d.addCallback(self._cb)
        d.addErrback(self._eb)

    def _cb(self, result):
        self.transport.write(result)
        

    def _eb(self, error):
        print error
        self.transport.loseConnection()

class MapFactory(protocol.ServerFactory):
    protocol = MapProtocol

    def __init__(self, servers,who, cred, mydomains, dictstatus):

        # directory
        self.ldapservers  = ldapservers
        self.who = who
        self.cred = cred
        self.mydomains = mydomains
        self.NOTFOUND = dictstatus['NOTFOUND']
        self.TEMP = dictstatus['PERM']


    def _lire_annuaire_ldap(self,mel):
        """ lookup directory server retourne RHS """

        def _bind2ldap(servers,who="",cred=""):
            """ Trouve une serveur ldap dispo dans la liste qui lui est pass? """
            status = False
            for server in servers:
                   urildap = "ldap://" + server
                   l = ldap.initialize(urildap)
                   l.protocol_version=ldap.VERSION3
                   try:
                       resultbind = l.simple_bind_s(who,cred)
                       status = True
                       break
                   except ldap.LDAPError,e :
                       continue
            return(status,l)


        uid = ''
        mailhost = ''
        aretourner = self.NOTFOUND

        statusldap = False # directory server est disponible ?


        # Nom de la map
        # si on en a plusieurs dans le futur

        nommap = mel.split()[0].split(':')[1]

        # map LHS
        mel = mel.split()[1][:-1]
        

        # our domain or not ?

        try:
                mydomain = mel.split('@')[1]
        except IndexError,e:
                mydomain = 'mydomain'

      
        if mydomain in self.mydomains:
            statusldap, maconn =  _bind2ldap(self.ldapservers,self.who,self.cred)

            if statusldap:
                marequete = '(|(mail=' + mel + ')(mailalternateaddress=' + mel +')(mailequivalentaddress=' + mel
 + '))'
               
                result_data = maconn.search_s("dc=...", ldap.SCOPE_SUBTREE, marequete , ['uid', 'mailhost']
)
                
                if len(result_data) > 0:
                    try:
                       uid  = ''.join(result_data[0][1]['uid'])
                    except KeyError:
                       print 'error clef:%s' % mel
                       uid = mel.split("@")[0]
                    mailhost  = ''.join(result_data[0][1]['mailhost'])
                    status = 'OK '
                    reponse = status + '<' + uid + '@' + mailhost + '>'
                    aretourner = str(len(reponse)) + ":" + reponse + ','
                else:
                   aretourner = self.NOTFOUND
            else:
                aretourner = self.PERM
        else:
            aretourner = self.NOTFOUND
            
        return (aretourner)


# Status de lookup "fixe"
dictstatus = {'NOTFOUND' : '8:NOTFOUND,', 'PERM' : '4:PERM,'}


# servers/user/pass necessaire au bind
# 

server = ["ldap1","ldap2"]
binddn = ""
passwd = ""
mydomains = ["mydomain"]



application = service.Application('mapsmx', uid=663, gid=663)
factory = MapFactory(server,binddn,passwd,mydomains,dictstatus)
internet.TCPServer(8090, factory).setServiceParent(
    service.IServiceCollection(application))


HTH
jmp




From stephane_brault at yahoo.fr  Tue Nov 14 04:14:39 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Tue, 14 Nov 2006 09:14:39 +0000 (GMT)
Subject: [Twisted-Python] twisted performance and reactor choice
Message-ID: <20061114091439.65086.qmail@web26511.mail.ukl.yahoo.com>

Hi,

My application has lots of concurrent connections, both in and out, since it communicates with outsides sites. It seems that it is sometimes slowed down, I guess because there are to many simultaneous deffered. I'd like to know if I could switch reactor (my application is accessed by XML-RPC and communicates with external applications through XML-RPC, Http requests and access ftp sites). I also need to know how large can be the threadpool in order to increase the number of simultaneous deferred.

Thanks,

St?phane




	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com



From slamb at slamb.org  Tue Nov 14 05:20:40 2006
From: slamb at slamb.org (Scott Lamb)
Date: Tue, 14 Nov 2006 02:20:40 -0800
Subject: [Twisted-Python] advice on asynchronous LDAP?
In-Reply-To: <45596BD0.2060101@ac-montpellier.fr>
References: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
	<45596BD0.2060101@ac-montpellier.fr>
Message-ID: <F9D6B063-E445-4D46-AF52-16A7D8B5E2DA@slamb.org>


On Nov 13, 2006, at 11:10 PM, jean-marc pouchoulon wrote:

> Shimon Rura wrote:
>
>> Hi folks,
>>
> Hello
>
>> I'm a newbie writing a twisted server that needs to access an LDAP
>> server.  I started by using python-ldap, which worked fine and is  
>> well
>> documented, but doesn't seem to have support for a callback mechanism
>> that would make it appropriate for a twisted app.  So I switched to
>> ldaptor, which fits the twisted model, but doesn't seem to have much
>> documentation.
>
> I tried to use it but it worked only with twisted 1.3

ldaptor, at least version 0.0.43, works fine with Twisted 2.2.

I've used it to add authentication to buildbot. Nothing fancy - bind,  
search, rebind. My code lives here: <http://sourceforge.net/tracker/ 
index.php?func=detail&aid=1469500&group_id=73177&atid=537003>

Cheers,
Scott

-- 
Scott Lamb <http://www.slamb.org/>





From ralf at brainbot.com  Tue Nov 14 06:58:30 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Tue, 14 Nov 2006 12:58:30 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061113161244.GA67850@ik.nu>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>	<45587AD6.1010707@pangalactic.us>
	<20061113161244.GA67850@ik.nu>
Message-ID: <ejcavp$1uc$1@sea.gmane.org>

Ralph Meijer wrote:
>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
>>>  line 20
>>>    ???
>>>    ^
>>> SyntaxError: invalid syntax
>> I'm amazed that this error is still there -- I saw it *months* ago!
>> Sure makes Twisted look bad.
> 
> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
> just haven't done a new release. Also, the debian package maintainers
> could easily fix this, but apparently choose not to. Other packagers
> (among which FreeBSD) have no troubles at all.
> 

The *twisted* developers could easily fix this, but apparently choose
not to. Other packagers (among which FreeBSD) have no troubles at all.




From exarkun at divmod.com  Tue Nov 14 08:32:45 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 08:32:45 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <ejcavp$1uc$1@sea.gmane.org>
Message-ID: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>

On Tue, 14 Nov 2006 12:58:30 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>Ralph Meijer wrote:
>>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py",
>>>>  line 20
>>>>    ???
>>>>    ^
>>>> SyntaxError: invalid syntax
>>> I'm amazed that this error is still there -- I saw it *months* ago!
>>> Sure makes Twisted look bad.
>>
>> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
>> just haven't done a new release. Also, the debian package maintainers
>> could easily fix this, but apparently choose not to. Other packagers
>> (among which FreeBSD) have no troubles at all.
>>
>
>The *twisted* developers could easily fix this, but apparently choose
>not to. Other packagers (among which FreeBSD) have no troubles at all.
>

http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)

Jean-Paul



From ralf at brainbot.com  Tue Nov 14 09:01:21 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Tue, 14 Nov 2006 15:01:21 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
References: <ejcavp$1uc$1@sea.gmane.org>
	<20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
Message-ID: <ejci64$ueg$1@sea.gmane.org>

Jean-Paul Calderone wrote:
> 
> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)
> 

So, where is the download link to version 2.4.1 or 2.5?

- Ralf




From waterbug at pangalactic.us  Tue Nov 14 09:56:47 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 14 Nov 2006 09:56:47 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
Message-ID: <4559D92F.1050805@pangalactic.us>

Jean-Paul Calderone wrote:
> On Tue, 14 Nov 2006 12:58:30 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>> Ralph Meijer wrote:
>>>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
>>>>>
>>>>>  line 20
>>>>>    ???
>>>>>    ^
>>>>> SyntaxError: invalid syntax
>>>> I'm amazed that this error is still there -- I saw it *months* ago!
>>>> Sure makes Twisted look bad.
>>>
>>> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
>>> just haven't done a new release. Also, the debian package maintainers
>>> could easily fix this, but apparently choose not to. Other packagers
>>> (among which FreeBSD) have no troubles at all.
>>>
>>
>> The *twisted* developers could easily fix this, but apparently choose
>> not to. Other packagers (among which FreeBSD) have no troubles at all.
>>
> 
> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)

Yes, it has been fixed in trunk, but has there been a maintenance
release in the Twisted release series that had the problem?  If so,
then the ball is in the debian package maintainers' court; if not,
it's still in Twisted's.

Steve



From exarkun at divmod.com  Tue Nov 14 10:27:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 10:27:10 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <ejci64$ueg$1@sea.gmane.org>
Message-ID: <20061114152710.20948.620643499.divmod.quotient.27275@ohm>

On Tue, 14 Nov 2006 15:01:21 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>Jean-Paul Calderone wrote:
>>
>> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)
>>
>
>So, where is the download link to version 2.4.1 or 2.5?
>
>- Ralf
>

I just checked the Debian package.  It seems they have already tried to
deal with this problem.  The _first_ hunk in the Debian patch to Twisted
comments out the line with the syntax error.

Here's a link if you can't find it:

http://ftp.debian.org/debian/pool/main/t/twisted/twisted_2.4.0-2.diff.gz

So I don't know what this thread is about anymore.  More than ever, though,
this looks like an issue someone needs to take up with the Debian maintainer.

I looked through the Debian bug tracker and I didn't notice any bugs related
to this filed against the package.  How did anyone expect anything to get
fixed if there haven't even been any bugs filed?

Please take further discussion to submit at bugs.debian.org.  If the Debian
maintainer agrees that this is really an upstream issue then we can resume
discussion here and I'm sure whatever further changes are required can be
made.

Jean-Paul



From foom at fuhm.net  Tue Nov 14 10:41:24 2006
From: foom at fuhm.net (James Y Knight)
Date: Tue, 14 Nov 2006 10:41:24 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <4559D92F.1050805@pangalactic.us>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
	<4559D92F.1050805@pangalactic.us>
Message-ID: <D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>

On Nov 14, 2006, at 9:56 AM, Stephen Waterbury wrote:
> Yes, it has been fixed in trunk, but has there been a maintenance
> release in the Twisted release series that had the problem?  If so,
> then the ball is in the debian package maintainers' court; if not,
> it's still in Twisted's.

I agree it might have been nice to have a maintenance release, but  
the problem apparently doesn't affect anybody but Debian. They're  
allowed to (and are capable enough to) apply patches to fix debian  
packaging issues in upstream source. So saying that twisted *has* to  
have a release that fixes it before debian can is a bit wrong.

But a 2.5 release is coming soon now, so, it'll be fixed then.

James




From exarkun at divmod.com  Tue Nov 14 12:03:31 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 12:03:31 -0500
Subject: [Twisted-Python] twisted performance and reactor choice
In-Reply-To: <20061114091439.65086.qmail@web26511.mail.ukl.yahoo.com>
Message-ID: <20061114170331.20948.533486067.divmod.quotient.27356@ohm>

On Tue, 14 Nov 2006 09:14:39 +0000 (GMT), St?phane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
>
>My application has lots of concurrent connections, both in and out, since 
>it communicates with outsides sites. It seems that it is sometimes slowed 
>down, I guess because there are to many simultaneous deffered. I'd like to 
>know if I could switch reactor (my application is accessed by XML-RPC and 
>communicates with external applications through XML-RPC, Http requests and 
>access ftp sites). I also need to know how large can be the threadpool in 
>order to increase the number of simultaneous deferred.

You've gone a bit too fast here.  You guessed at the cause of the slowdown.
Instead, you need to profile the application and find out what the cause
really is.

Your question about the size of the threadpool is a bit of a non sequitur.
The threadpool, let alone its size, is unrelated to how many Deferreds might
exist in your application at once.  Unless you are explicitly using the
threadpool (or doing a significant number of DNS lookups without using
Twisted Names), the threadpool isn't even related to how many concurrent
tasks might be in progress in your application.  This is because Twisted only
uses the threadpool for an extremely limited number of purposes.  Basic
network traffic isn't one of these purposes.

Jean-Paul



From waterbug at pangalactic.us  Tue Nov 14 12:48:25 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 14 Nov 2006 12:48:25 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>	<4559D92F.1050805@pangalactic.us>
	<D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>
Message-ID: <455A0169.4040902@pangalactic.us>

James Y Knight wrote:
> On Nov 14, 2006, at 9:56 AM, Stephen Waterbury wrote:
>> Yes, it has been fixed in trunk, but has there been a maintenance
>> release in the Twisted release series that had the problem?  If so,
>> then the ball is in the debian package maintainers' court; if not,
>> it's still in Twisted's.
> 
> I agree it might have been nice to have a maintenance release, but the 
> problem apparently doesn't affect anybody but Debian. They're allowed to 
> (and are capable enough to) apply patches to fix debian packaging issues 
> in upstream source. So saying that twisted *has* to have a release that 
> fixes it before debian can is a bit wrong.

Just to set the record straight:  I did not say that "twisted
had to have a release that fixes it before debian could"; I said that
doing so would "put the ball in their court" (i.e., give debian no
excuse not to include the patched release), and that that (a patch
release) would have been in twisted's interest, since the problem
was small but annoying and just made twisted look bad.

By this time it is moot, of course, and I've already said too much,
but I hate being misrepresented.

Bleah.

Steve



From stephane_brault at yahoo.fr  Tue Nov 14 12:51:04 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Tue, 14 Nov 2006 17:51:04 +0000 (GMT)
Subject: [Twisted-Python] twisted performance and reactor choice
Message-ID: <20061114175104.60309.qmail@web26515.mail.ukl.yahoo.com>

Thanks Jean-Paul,

my mistake ;-) I must confess that if I use twisted (and I must say I'm quite happy with it),
I didn't have time to know it that well. Anyway, I was wondering if changing the reactor could
help a little (my application runs on a debian sarge 3.1). In which case would the pollreactor
be relevant or should I stick with the default one (selectreactor if I read the documentation right).
I have a lot of simultaneous deferred at scheduled times (both database access using zalchemy
and connections to external sites which can take some times). I know this might not be enough
to make a decision, but any help would be welcomed.

Thanks again,

St?phane

----- Message d'origine ----
De : Jean-Paul Calderone <exarkun at divmod.com>
? : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoy? le : Mardi, 14 Novembre 2006, 18h03mn 31s
Objet : Re: [Twisted-Python] twisted performance and reactor choice

On Tue, 14 Nov 2006 09:14:39 +0000 (GMT), St?phane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
>
>My application has lots of concurrent connections, both in and out, since 
>it communicates with outsides sites. It seems that it is sometimes slowed 
>down, I guess because there are to many simultaneous deffered. I'd like to 
>know if I could switch reactor (my application is accessed by XML-RPC and 
>communicates with external applications through XML-RPC, Http requests and 
>access ftp sites). I also need to know how large can be the threadpool in 
>order to increase the number of simultaneous deferred.

You've gone a bit too fast here.  You guessed at the cause of the slowdown.
Instead, you need to profile the application and find out what the cause
really is.

Your question about the size of the threadpool is a bit of a non sequitur.
The threadpool, let alone its size, is unrelated to how many Deferreds might
exist in your application at once.  Unless you are explicitly using the
threadpool (or doing a significant number of DNS lookups without using
Twisted Names), the threadpool isn't even related to how many concurrent
tasks might be in progress in your application.  This is because Twisted only
uses the threadpool for an extremely limited number of purposes.  Basic
network traffic isn't one of these purposes.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com



From exarkun at divmod.com  Tue Nov 14 14:10:58 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 14:10:58 -0500
Subject: [Twisted-Python] twisted performance and reactor choice
In-Reply-To: <20061114175104.60309.qmail@web26515.mail.ukl.yahoo.com>
Message-ID: <20061114191058.20948.1189346320.divmod.quotient.27474@ohm>

On Tue, 14 Nov 2006 17:51:04 +0000 (GMT), St?phane Brault <stephane_brault at yahoo.fr> wrote:
>Thanks Jean-Paul,
>
>my mistake ;-) I must confess that if I use twisted (and I must say I'm quite happy with it),
>I didn't have time to know it that well.

No problem. :)  Optimization is hard.

>Anyway, I was wondering if changing the reactor could
>help a little (my application runs on a debian sarge 3.1). In which case would the pollreactor
>be relevant or should I stick with the default one (selectreactor if I read the documentation right).

If the application is actually bottlenecked in select, then it might help
a little.  Fortunately, it's easy to test.  Just run:

  twistd --reactor poll ...

Or if you're not using twistd, add:

  from twisted.internet import pollreactor
  pollreactor.install()

To the beginning of your application.  That's all that's necessary to change
to a different reactor.

>I have a lot of simultaneous deferred at scheduled times (both database access using zalchemy
>and connections to external sites which can take some times). I know this might not be enough
>to make a decision, but any help would be welcomed.

Changing the reactor won't speed up Deferreds or threads, though, since
all the reactors have the same thread code.

Jean-Paul



From warner at lothar.com  Wed Nov 15 00:31:33 2006
From: warner at lothar.com (Brian Warner)
Date: Tue, 14 Nov 2006 21:31:33 -0800
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
In-Reply-To: <200611081953.37255.iacovou@gmail.com> (iacovou@gmail.com's
	message of "Wed, 8 Nov 2006 19:53:37 +0200")
References: <20061105.003750.02715181.warner@lothar.com>
	<200611081953.37255.iacovou@gmail.com>
Message-ID: <87y7qdi8cq.fsf@lothar.com>

kgi <iacovou at gmail.com> writes:

> So far it's been a pleasant experience: it's much more accessible 
> than 'oldpb', the intro was easy to read and follow, and it looks and feels 
> well-written: thank you!

You're welcome! I'm glad it's proving useful to you.

> Given that being able to send third-party classes over Foolscap is probably
> a very common requirement, I thought I'd send a simple example for others
> in the same position lest they be led into thinking that this requires
> subclassing or writing adaptation classes.
>
> You could even insert these in the part of the documenation about copyables 
> where it says "TODO: example" :-)

Thanks.. I'll see if I can incorporate these into the docs.

cheers,
 -Brian



From itamar at itamarst.org  Wed Nov 15 10:52:35 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 15 Nov 2006 10:52:35 -0500
Subject: [Twisted-Python] Available for Twisted training
Message-ID: <1163605955.6346.18.camel@localhost.localdomain>

Hi,

Due to RSI I am taking a month off from work, so I am available for
Twisted or Python-related training or other consulting (e.g. design and
architecture help) that would not involve typing. Ideally in Boston
area, but I might be open to other locations.

I've been using and developing core parts of Twisted since 2001. See
http://itamarst.org/resume.html - not really updated since 2004, so
doesn't cover more recent projects such as reliable multicast system
with congestion control.

To emphasize: I'm limited to typing 30 minutes a day, so any consulting
cannot, unfortunately, involve computer use.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From markus at bluegap.ch  Wed Nov 15 12:09:01 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Wed, 15 Nov 2006 18:09:01 +0100
Subject: [Twisted-Python] Trial Test Runner
Message-ID: <455B49AD.8020501@bluegap.ch>

Hi,

I'm having a hard time writing a test suite using trial. What's the best 
documentation available? I've the API Reference as well as the sources 
at hand, but...

For example I've tried this:

#!/usr/bin/python
# -*- test-case-name: eUnit.test.test_sample -*-

from twisted.trial import unittest, runner, reporter

class Test(unittest.TestCase):

	def testSample(self):
		print "hallo welt"


if __name__ == "__main__":
	runner.TrialRunner(reporter.TextReporter).run(Test)

It's failing with:
TypeError: unbound method countTestCases() must be called with Test 
instance as first argument (got nothing instead)

Some more documentation (an introduction or tutorial or some such) would 
be very welcome and helpful.

Regards

Markus



From exarkun at divmod.com  Wed Nov 15 12:43:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Nov 2006 12:43:05 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455B49AD.8020501@bluegap.ch>
Message-ID: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>

On Wed, 15 Nov 2006 18:09:01 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>I'm having a hard time writing a test suite using trial. What's the best 
>documentation available? I've the API Reference as well as the sources at 
>hand, but...
>
>For example I've tried this:
>
>#!/usr/bin/python
># -*- test-case-name: eUnit.test.test_sample -*-
>
>from twisted.trial import unittest, runner, reporter
>
>class Test(unittest.TestCase):
>
>         def testSample(self):
>                 print "hallo welt"
>
>
>if __name__ == "__main__":
>         runner.TrialRunner(reporter.TextReporter).run(Test)
>
>It's failing with:
>TypeError: unbound method countTestCases() must be called with Test instance 
>as first argument (got nothing instead)
>
>Some more documentation (an introduction or tutorial or some such) would be 
>very welcome and helpful.

Trial has a command line tool for running suites, "trial".  If that code is
in eUnit/test/test_sample.py, then you can try any of these commands:

    trial eUnit
    trial eUnit.test
    trial eUnit.test.test_sample
    trial eUnit.test.test_sample.Test
    trial eUnit.test.test_sample.test.testSample
    trial /path/to/eUnit/
    trial /path/to/eUnit/test/
    trial /path/to/eUnit/test/test_sample.py

You don't need any of the code in your __main__ section.

Jean-Paul



From robparrott at gmail.com  Wed Nov 15 14:27:29 2006
From: robparrott at gmail.com (Robert Parrott)
Date: Wed, 15 Nov 2006 14:27:29 -0500
Subject: [Twisted-Python] Strange blocking in twisted + quickfix service
Message-ID: <60022ea0611151127k3f73cf6cm588abd538d542d96@mail.gmail.com>

Hi Folks,

I'm trying to wrap the quickfix engine (www.quickfix.org) with a
twisted service, in order to create a standalone daemon that will
respond to RPC-like commands (such as "start", "stop", "request
quote", etc.) However, I'm finding some odd blocking issues that I
need to resolve.

Basically, the twisted service works fine until I start the quickfix
engine (which runs, I believe in a separate thread). Beforehand, calls
to the twisted protocol class I've created invoke methods in the
service, and things don't block. When the quickfix engine is started,
it runs fine, but the main thread, in which the twisted "wrapper"
application runs, seems to block in funny ways.

As an example of this behavior, a connection to the LineReceiver
protocol class I've subclassed will start to execute, but hangs
exactly 12 minutes before proceeding. I.e. the time between telnetting
to the port on which the server is listening and entering a command,
and the time when the logs record that the "lineReceived" method of
the LineReceiver class is invoked, is 12 minutes.

As far as I can tell, everything is running in the same thread except
for the quickfix engine class, so I'm not sure what the hanging
behavior is due to. My understanding is that the twisted.python.log
module, which I'm using to log, is non-blobking, and so shouldn't be
causing this behavior.

Does anyone have any ideas into what might be causing the hang, and
approaches to diagnosing the cause?

Thanks so much,

rob



From exarkun at divmod.com  Wed Nov 15 15:32:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Nov 2006 15:32:59 -0500
Subject: [Twisted-Python] Strange blocking in twisted + quickfix service
In-Reply-To: <60022ea0611151127k3f73cf6cm588abd538d542d96@mail.gmail.com>
Message-ID: <20061115203259.20948.1712155213.divmod.quotient.28809@ohm>

On Wed, 15 Nov 2006 14:27:29 -0500, Robert Parrott <robparrott at gmail.com> wrote:
>Hi Folks,
>
>I'm trying to wrap the quickfix engine (www.quickfix.org) 

ITYM www.quickfixengine.org :)

>with a
>twisted service, in order to create a standalone daemon that will
>respond to RPC-like commands (such as "start", "stop", "request
>quote", etc.) However, I'm finding some odd blocking issues that I
>need to resolve.
>
>Basically, the twisted service works fine until I start the quickfix
>engine (which runs, I believe in a separate thread). Beforehand, calls
>to the twisted protocol class I've created invoke methods in the
>service, and things don't block. When the quickfix engine is started,
>it runs fine, but the main thread, in which the twisted "wrapper"
>application runs, seems to block in funny ways.

Does QuickFIX release the GIL?  If not, even if it runs in a separate
thread, Twisted will be blocked any time it spends a long time doing
anything.

Jean-Paul



From eprparadocs at gmail.com  Thu Nov 16 13:27:39 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 16 Nov 2006 13:27:39 -0500
Subject: [Twisted-Python] Packaging application...suggestions?
Message-ID: <455CAD9B.7030103@gmail.com>

I released my open source project built on top of Twisted more than a 
month ago. Since then I have been looking for ways to make distributing 
the application simple. I would love to have it self-contained, holding 
all the python libraries, etc, to ease the install by the user.

Any advice would be greatly appreciated.

Chaz.



From corydodt at gmail.com  Thu Nov 16 14:02:28 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Thu, 16 Nov 2006 11:02:28 -0800
Subject: [Twisted-Python] Packaging application...suggestions?
In-Reply-To: <455CAD9B.7030103@gmail.com>
References: <455CAD9B.7030103@gmail.com>
Message-ID: <c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>

What platforms are you targetting?

C


On 11/16/06, Chaz. <eprparadocs at gmail.com> wrote:
>
> I released my open source project built on top of Twisted more than a
> month ago. Since then I have been looking for ways to make distributing
> the application simple. I would love to have it self-contained, holding
> all the python libraries, etc, to ease the install by the user.
>
> Any advice would be greatly appreciated.
>
> Chaz.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061116/bd8088a4/attachment.htm 

From eprparadocs at gmail.com  Thu Nov 16 14:24:09 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 16 Nov 2006 14:24:09 -0500
Subject: [Twisted-Python] Packaging application...suggestions?
In-Reply-To: <c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>
References: <455CAD9B.7030103@gmail.com>
	<c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>
Message-ID: <455CBAD9.60807@gmail.com>

I guess I should have stated that at the beginning! Sorry for 
overlooking the obvious.

Right now the application is targetted for Windows and Linux servers.

C.

Cory Dodt wrote:
> What platforms are you targetting?
> 
> C
> 
> 
> On 11/16/06, *Chaz.* <eprparadocs at gmail.com 
> <mailto:eprparadocs at gmail.com>> wrote:
> 
>     I released my open source project built on top of Twisted more than a
>     month ago. Since then I have been looking for ways to make distributing
>     the application simple. I would love to have it self-contained, holding
>     all the python libraries, etc, to ease the install by the user.
> 
>     Any advice would be greatly appreciated.
> 
>     Chaz.
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 




From ellisonbg.net at gmail.com  Fri Nov 17 01:23:43 2006
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 16 Nov 2006 23:23:43 -0700
Subject: [Twisted-Python] Questions about the very nice AMP protocol
Message-ID: <6ce0ac130611162223r482fe7a3y43cc8f2e6d9ce586@mail.gmail.com>

Hi,

I currently use Perspective Broker for a number of projects.  As time
has gone by I have really come to appreciate having a full two-way
network protocol.  But, my company has lots of Java programmers  and
they do lots of "serious" (read, pain in the ass) web services and
grid services stuff.  I would like to be able to get the many Python
things I have playing nicely with the many Java things floating around
here.

Thus, AMP is extremely attractive.  There is one problem that I have
though.  We do high performance scientific computing and deal with
extremely large tera/peta-byte data sets.
Thus we need network protocols that can send large amounts of data
around.  The focus of AMP
of small messages thus presents a problem.  There are really two usage
cases that I have in mind:

1.  Sending larger (maybe 100's of Mb) objects around that do fit in
memory.  These can be serialized easily (w/o creating a big pickle),
but I need to make sure that Twisted doesn't make extra copies of them
during the transfer.

2.  Sending even bigger things that don't fit into memory.

Any thoughts on the best way to address these questions using AMP.
Here are my thoughts:

1.  Use a multi-connection approach like FTP does.  Use AMP for
control and the other connection
for the binary data.  It would be easy to use producers/consumers in
this channel to handle the large data problems above.  I don't like
this because I often need to ssh tunnel the protocol through firewalls
- two connections is unpleasant.

2.  Use AMP's inner protocol to run two protocols simultaneously.  My
understanding is that AMP doesn't support switching back and forth
between AMP and its inner protocol.  Would it be crazy to try this
approach?

3.  Try to modify AMP itself to handle the large objects itself by
registering Producers with the underlying transport.

It may sound like I just want something like FTP, but I also need to
send lots application specific control messages as well - and these
really need to be two way.

Any thoughts would be greatly appreciated.

Brian



From markus at bluegap.ch  Fri Nov 17 06:57:00 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 12:57:00 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
Message-ID: <455DA38C.2050005@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> Trial has a command line tool for running suites, "trial".  If that code is
> in eUnit/test/test_sample.py, then you can try any of these commands:

Duh! Thank you! I didn't think about a command line tool and was looking 
in the wrong places.

Another question: can I somehow nest setUp and tearDown methods? I.e.

A.setUp:      very general setup, i.e. starting a process needed
A.test1
A.test2

A.B.setUp:    specific setups for B, which depend on A's setup
A.B.test1
A.B.tearDown

A.test3
A.tearDown:   tear down all the general stuff, i.e. stopping that
               process


Regards

Markus



From twisted at ralphm.ik.nu  Fri Nov 17 07:11:51 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 17 Nov 2006 13:11:51 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DA38C.2050005@bluegap.ch>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
	<455DA38C.2050005@bluegap.ch>
Message-ID: <1163765511.20855.46.camel@se-135>

On Fri, 2006-11-17 at 12:57 +0100, Markus Schiltknecht wrote:
> Hi,
> 
> Jean-Paul Calderone wrote:
> > Trial has a command line tool for running suites, "trial".  If that code is
> > in eUnit/test/test_sample.py, then you can try any of these commands:
> 
> Duh! Thank you! I didn't think about a command line tool and was looking 
> in the wrong places.
> 
> Another question: can I somehow nest setUp and tearDown methods? I.e.
> 
> A.setUp:      very general setup, i.e. starting a process needed
> A.test1
> A.test2
> 
> A.B.setUp:    specific setups for B, which depend on A's setup
> A.B.test1
> A.B.tearDown
> 
> A.test3
> A.tearDown:   tear down all the general stuff, i.e. stopping that
>                process

You can use class inheritance. Define A deriving from object, and then B
from A and TestCase, for example.

-- 
Groetjes,

ralphm




From markus at bluegap.ch  Fri Nov 17 08:22:14 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 14:22:14 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <1163765511.20855.46.camel@se-135>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>	<455DA38C.2050005@bluegap.ch>
	<1163765511.20855.46.camel@se-135>
Message-ID: <455DB786.6030800@bluegap.ch>

Hi,

Ralph Meijer wrote:
> You can use class inheritance. Define A deriving from object, and then B
> from A and TestCase, for example.

That only works for Fixtures which take a few milliseconds to setUp and 
tearDown, because for every derived TestCase, the Fixture is setUp and 
tornDown. That won't work in my case, because setting up the Fixture is 
quite complex and takes up to 20 seconds. I definitely don't want to do 
that for every contained TestCase.

Why does the TrialSuite not have setUp and tearDown methods?

Regards

Markus



From exarkun at divmod.com  Fri Nov 17 08:32:26 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 08:32:26 -0500
Subject: [Twisted-Python] Questions about the very nice AMP protocol
In-Reply-To: <6ce0ac130611162223r482fe7a3y43cc8f2e6d9ce586@mail.gmail.com>
Message-ID: <20061117133226.20948.478532105.divmod.quotient.30978@ohm>

On Thu, 16 Nov 2006 23:23:43 -0700, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>I currently use Perspective Broker for a number of projects.  As time
>has gone by I have really come to appreciate having a full two-way
>network protocol.  But, my company has lots of Java programmers  and
>they do lots of "serious" (read, pain in the ass) web services and
>grid services stuff.  I would like to be able to get the many Python
>things I have playing nicely with the many Java things floating around
>here.
>
>Thus, AMP is extremely attractive.  There is one problem that I have
>though.  We do high performance scientific computing and deal with
>extremely large tera/peta-byte data sets.
>Thus we need network protocols that can send large amounts of data
>around.  The focus of AMP
>of small messages thus presents a problem.  There are really two usage
>cases that I have in mind:
>
>1.  Sending larger (maybe 100's of Mb) objects around that do fit in
>memory.  These can be serialized easily (w/o creating a big pickle),
>but I need to make sure that Twisted doesn't make extra copies of them
>during the transfer.
>
>2.  Sending even bigger things that don't fit into memory.
>
>Any thoughts on the best way to address these questions using AMP.
>Here are my thoughts:
>
>1.  Use a multi-connection approach like FTP does.  Use AMP for
>control and the other connection
>for the binary data.  It would be easy to use producers/consumers in
>this channel to handle the large data problems above.  I don't like
>this because I often need to ssh tunnel the protocol through firewalls
>- two connections is unpleasant.
>
>2.  Use AMP's inner protocol to run two protocols simultaneously.  My
>understanding is that AMP doesn't support switching back and forth
>between AMP and its inner protocol.  Would it be crazy to try this
>approach?
>
>3.  Try to modify AMP itself to handle the large objects itself by
>registering Producers with the underlying transport.

This is the planned direction for AMP, if that makes any difference to
your plans.

Jean-Paul

>
>It may sound like I just want something like FTP, but I also need to
>send lots application specific control messages as well - and these
>really need to be two way.
>
>Any thoughts would be greatly appreciated.
>
>Brian
>

Jean-Paul



From exarkun at divmod.com  Fri Nov 17 09:00:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 09:00:37 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DB786.6030800@bluegap.ch>
Message-ID: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>

On Fri, 17 Nov 2006 14:22:14 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>Ralph Meijer wrote:
>>You can use class inheritance. Define A deriving from object, and then B
>>from A and TestCase, for example.
>
>That only works for Fixtures which take a few milliseconds to setUp and 
>tearDown, because for every derived TestCase, the Fixture is setUp and 
>tornDown. That won't work in my case, because setting up the Fixture is 
>quite complex and takes up to 20 seconds. I definitely don't want to do that 
>for every contained TestCase.
>
>Why does the TrialSuite not have setUp and tearDown methods?

It is not intended that users will subclass TrialSuite.

You can put your expensive set up code into a free function which caches
its result to avoid performing redundant work, then call it from whichever
setUp methods need it.

Jean-Paul



From markus at bluegap.ch  Fri Nov 17 09:26:02 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 15:26:02 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
Message-ID: <455DC67A.2030609@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> It is not intended that users will subclass TrialSuite.

Okay.

> You can put your expensive set up code into a free function which caches
> its result to avoid performing redundant work, then call it from whichever
> setUp methods need it.

You can not cache the startup of a process or of a network connection. 
Probably unit tests are not designed for such things, but I would like 
to use twisted as it's event based. And I want to test for events. It 
looks like a good fit.

Ideas?

Regards

Markus



From twisted at ralphm.ik.nu  Fri Nov 17 09:52:36 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 17 Nov 2006 15:52:36 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DC67A.2030609@bluegap.ch>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
	<455DC67A.2030609@bluegap.ch>
Message-ID: <1163775156.20855.51.camel@se-135>

On Fri, 2006-11-17 at 15:26 +0100, Markus Schiltknecht wrote:
> Hi,
> 
> Jean-Paul Calderone wrote:
> > It is not intended that users will subclass TrialSuite.
> 
> Okay.
> 
> > You can put your expensive set up code into a free function which caches
> > its result to avoid performing redundant work, then call it from whichever
> > setUp methods need it.
> 
> You can not cache the startup of a process or of a network connection. 
> Probably unit tests are not designed for such things, but I would like 
> to use twisted as it's event based. And I want to test for events. It 
> looks like a good fit.

Maybe you test too much. In general you don't need actual network
connections to test protocols. For example, there are helpers in
twisted.test.proto_helpers for mimicking a transport.

-- 
Groetjes,

ralphm




From exarkun at divmod.com  Fri Nov 17 09:53:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 09:53:05 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DC67A.2030609@bluegap.ch>
Message-ID: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>

On Fri, 17 Nov 2006 15:26:02 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>Jean-Paul Calderone wrote:
>>It is not intended that users will subclass TrialSuite.
>
>Okay.
>>You can put your expensive set up code into a free function which caches
>>its result to avoid performing redundant work, then call it from whichever
>>setUp methods need it.
>
>You can not cache the startup of a process or of a network connection. 

This may be a trial limitation which needs to be addressed.  On the other
hand, unit tests which involve processes and the network are not as good
as unit tests which don't involve such things.

>Probably unit tests are not designed for such things, but I would like to 
>use twisted as it's event based. And I want to test for events. It looks 
>like a good fit.

>
>Ideas?
>
It sounds like you're not really writing a unit test suite.  What are you

writing?

Jean-Paul



From markus at bluegap.ch  Fri Nov 17 10:20:53 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 16:20:53 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>
References: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>
Message-ID: <455DD355.1000801@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> It sounds like you're not really writing a unit test suite.  What are you
> writing?

Yeah, maybe I do not write unit tests. I want to check a C program which 
forks, if it behaves correctly when sub-processes get killed or if it 
recovers correctly from delayed or lost network connections.

I've been looking at other automated testing frameworks, like STAF, but 
it does not allow me to write such simple tests...

Regards

Markus




From markus at bluegap.ch  Fri Nov 17 15:22:09 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 21:22:09 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <1163775156.20855.51.camel@se-135>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>	<455DC67A.2030609@bluegap.ch>
	<1163775156.20855.51.camel@se-135>
Message-ID: <455E19F1.9010304@bluegap.ch>

Hi,

Ralph Meijer wrote:
> Maybe you test too much. In general you don't need actual network
> connections to test protocols. For example, there are helpers in
> twisted.test.proto_helpers for mimicking a transport.

I want to test for example, how a program (written in C) reacts to 
network delays or outages. I absolutely need (and already have) python 
code to emulate the network layer.

Of course I could test just one instance of the program, but then I'd 
have to write a dummy peer, just for the tests. Instead, it seems a lot 
easier to use the real code itself and check if two processes correctly 
talk to each other. It's a Multi-Master protocol.

I would like to simulate some of the dirty stuff that can happen to an 
application out in the wild (OOM kill, network delays and outages, etc..).

Another requirement I'm facing is benchmarks. How well does the 
application cope with different a packet loss rate of 10% compared to no 
packet losses?

So, if you tell me I want to do to much with unit tests, that's fine, I 
don't need to run unit tests. They are probably not designed for what I 
want to do. But what else can I use? Is there anything you know which 
could possibly fulfill these requirements?

IMO, twisted itself looks very nice in that it is event-based and 
provides very good interfaces to network protocols as well as managing 
sub-processes. Perhaps I just need to write my own test runners on top 
of twisted and forget about trial.

OTOH, wouldn't it be sufficient to add setUp and tearDown methods for 
TrialSuites? I'm investigating into that direction.

Regards

Markus




From markus at bluegap.ch  Sat Nov 18 06:27:56 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Sat, 18 Nov 2006 12:27:56 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455E19F1.9010304@bluegap.ch>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>	<455DC67A.2030609@bluegap.ch>	<1163775156.20855.51.camel@se-135>
	<455E19F1.9010304@bluegap.ch>
Message-ID: <455EEE3C.30509@bluegap.ch>

Hi,

Markus Schiltknecht wrote:
> OTOH, wouldn't it be sufficient to add setUp and tearDown methods for 
> TrialSuites? I'm investigating into that direction.

What speaks against something like that:

Index: runner.py
===================================================================
--- runner.py	(revision 18715)
+++ runner.py	(working copy)
@@ -142,10 +142,14 @@
          """
          # we implement this because Python 2.3 unittest defines this code
          # in __call__, whereas 2.4 defines the code in run.
+        if hasattr(self, 'setUp'):
+            self.setUp(self)
          for test in self._tests:
              if result.shouldStop:
                  break
              test(result)
+        if hasattr(self, 'tearDown'):
+            self.tearDown(self)
          return result


..and adding a setUp and tearDown method in the loader if the module has 
such methods?

Regards

Markus



From exarkun at twistedmatrix.com  Sun Nov 19 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1163916302.91.1203912443@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-12 through 2006-11-19
Bugs opened: 12    Bugs closed: 15  Total open bugs: 780 (-3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       -8  |Highest:  -7          |Core:   -4             
|Enhancement:  +1  |High:     -3          |Ftp:    +1             
|Task:         +4  |Normal:   +5          |Trial:  +1             
                   |Low:      +3          |Web2:   -2             
                   |Lowest:   -1          |Words:  +1             


New / Reopened Bugs
______________________
                    ===== High =====
[#2229] Syntax error when upgrading Debian Python 2.4 (opened by LonelyPixel) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2229

                    ===== Normal =====
[#2228] Add higher level primitives for FTP cwd/pwd (opened by therve)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2228

[#2230] trial -b does not interact in a useful way with -u (opened by glyph)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2230

[#2231] t.p.usage documents multicharacter shortcuts for subcommands but does not support them. (opened by dreid) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2231

[#2233] twisted.internet.fdesc does not handle EINTR (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2233

[#2234] Select default reactor based on platform and available libraries (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2234

[#2235] WebDAV copy fails if the name of the destination folder contains whitespace (opened by vincentk) (CLOSED, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/2235

[#2237] Reorganise Trial tests (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2237

[#2239] Factor out test support module for trial (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2239

                    ===== Low =====
[#2232] Tool for measuring coding standard conformance (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/2232

[#2236] Make test_toc adhere to coding standard (opened by jml)
    task            words      http://twistedmatrix.com/trac/ticket/2236

[#2238] Add function and object level unit tests for twisted.words.protocols.toc (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2238



Closed Bugs
______________________
                    ===== Highest =====
[#2218] Add timeout to XMPP IQ requests (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2218

[#2199] Adaption of web2.iweb interfaces is broken (opened by wsanchez, closed by exarkun, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2199

[#719 ] better pluggable reactor support for twistd (opened by itamarst, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/719

[#2136] t.plugin.getCache craps out on Windows with Python 2.5 (opened by PenguinOfDoom, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2136

[#2065] windows buildbot errors,  already imported failures (opened by scmikes, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2065

[#2165] trial's "test_suite" feature violates naming standard (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2165

[#1430] trial reporter doesn't write to streams properly (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1430

                    ===== High =====
[#1067] epyrun doesn't work (opened by marienz, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1067

[#2229] Syntax error when upgrading Debian Python 2.4 (opened by LonelyPixel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2229

[#2139] test_underUnderPathAlreadyImported and test_listingModules from twisted.test.test_modules.(Zip)PathModificationTest fail with Gtk2 reactor (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2139

[#2224] Web2: Behavior of Request.locateResource vs Resource.locateChild is not clearly defined. (opened by dreid, closed by wsanchez, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2224

                    ===== Normal =====
[#2222] t.i.task.Clock.advance should set the call.called attribute. (opened by ralphm, closed by ralphm, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2222

[#2231] t.p.usage documents multicharacter shortcuts for subcommands but does not support them. (opened by dreid, closed by dreid, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2231

[#2235] WebDAV copy fails if the name of the destination folder contains whitespace (opened by vincentk, closed by wsanchez, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/2235

                    ===== Lowest =====
[#2226] qt4reactor.stop() not closing connections and quitting python (opened by Tantalum, closed by Tantalum, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2226





From yqiang at gmail.com  Sun Nov 19 19:00:13 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sun, 19 Nov 2006 16:00:13 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
Message-ID: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>

Hi,
I am trying to figure out how to keep an continuously updated list of
connected clients to a PB server.
I have had success in figuring out how to add clients to my list when they
connect, but I am not sure what methods get called when a client
disconnects.

This is what I have so far:

from twisted.spread import pb

class DSagePBServerFactory(pb.PBServerFactory):
    def __init__(self, root):
        pb.PBServerFactory.__init__(self, root)
        self.clients = []

    def clientConnectionMade(self, broker):
        """Keeps a 3-tuple of connected clients.
        tuple[0] - the broker transport
        tuple[1] - the clients ip
        tuple[2] - the clients port

        """
        self.clients.append((broker.transport,
                             broker.transport.getPeer().host,
                             broker.transport.getPeer().port))
        print self.clients

There does not seem to be a corresponding clientConnectionLost method for
the Factory class.  Any suggestions would be appreciated.

Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061119/6b50c11f/attachment.htm 

From phil at bubblehouse.org  Sun Nov 19 20:19:12 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 19 Nov 2006 20:19:12 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
Message-ID: <F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>

On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> There does not seem to be a corresponding clientConnectionLost  
> method for the Factory class.  Any suggestions would be appreciated.

My approach to this was to put any post-connection cleanup in the  
Avatar's "logout" method.

-phil



From yqiang at gmail.com  Sun Nov 19 21:13:15 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sun, 19 Nov 2006 18:13:15 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
Message-ID: <3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>

On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.


Will that method be called regardless of how the client disconnects from the
server?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061119/5671b1a4/attachment.htm 

From stephen at thorne.id.au  Mon Nov 20 07:58:54 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 20 Nov 2006 22:58:54 +1000
Subject: [Twisted-Python] Questions about the very nice AMP protocol
In-Reply-To: <20061117133226.20948.478532105.divmod.quotient.30978@ohm>
Message-ID: <20061120125854.20948.1006272831.divmod.quotient.35700@ohm>

On Fri, 17 Nov 2006 08:32:26 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Thu, 16 Nov 2006 23:23:43 -0700, Brian Granger <ellisonbg.net at gmail.com> 
>>1.  Use a multi-connection approach like FTP does.  Use AMP for
>>control and the other connection
>>for the binary data.  It would be easy to use producers/consumers in
>>this channel to handle the large data problems above.  I don't like
>>this because I often need to ssh tunnel the protocol through firewalls
>>- two connections is unpleasant.

HTTP is a protocol quite suited to this. I believe we already have someone
using AMP in a grid computing environment where instead of large amounts of 
data, a http:// url pointing to the large amount of data is provided.

I think the best way to do this is to describe a series of urls (in the
case where you have multiple mirrors), a checksum and perhaps an identifier.

The client then knows it can fire up a twisted.web.client.downloadPage() and
have the data when the Deferred fires.

If you need to serve the data dynamically, then you can use twisted.web /
twisted.web2 quite easily, or you can just put the files in a directory
tree available to your favourite HTTP server.

>>2.  Use AMP's inner protocol to run two protocols simultaneously.  My
>>understanding is that AMP doesn't support switching back and forth
>>between AMP and its inner protocol.  Would it be crazy to try this
>>approach?

Not a wonderful idea. I've seen this approach implemented, and it results
in much of the freedom that amp provides being limited.

>>3.  Try to modify AMP itself to handle the large objects itself by
>>registering Producers with the underlying transport.
>
>This is the planned direction for AMP, if that makes any difference to
>your plans.

I would love to see this implemented in a sane fashion. I've talked to 
Glyph about it, and it seems like the structure of amp will quite easily 
accomodate it. We've even discussed things like caching amp proxies.

No code yet as far as I've seen.

Stephen.



From phil at bubblehouse.org  Mon Nov 20 09:19:43 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 20 Nov 2006 09:19:43 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>
Message-ID: <BEF7A646-B295-4025-9578-224583018AFA@bubblehouse.org>

On Nov 19, 2006, at 9:13 PM, Yi Qiang wrote:
> On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote: On Nov  
> 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.
>
> Will that method be called regardless of how the client disconnects  
> from the server?

Yeah, in my experience the server *always* detects the connection  
loss and calls logout.

Incidentally, this was with a standard reactor on a UNIXish system;  
I'm relatively sure this works this way on all platforms.

-phil



From exarkun at divmod.com  Mon Nov 20 09:41:56 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Nov 2006 09:41:56 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <BEF7A646-B295-4025-9578-224583018AFA@bubblehouse.org>
Message-ID: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>

On Mon, 20 Nov 2006 09:19:43 -0500, Phil Christensen <phil at bubblehouse.org> wrote:
>On Nov 19, 2006, at 9:13 PM, Yi Qiang wrote:
>>On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote: On Nov  19, 
>>2006, at 7:00 PM, Yi Qiang wrote:
>> > There does not seem to be a corresponding clientConnectionLost
>> > method for the Factory class.  Any suggestions would be appreciated.
>>
>>My approach to this was to put any post-connection cleanup in the
>>Avatar's "logout" method.
>>
>>Will that method be called regardless of how the client disconnects  from 
>>the server?
>
>Yeah, in my experience the server *always* detects the connection  loss and 
>calls logout.
>
>Incidentally, this was with a standard reactor on a UNIXish system;  I'm 
>relatively sure this works this way on all platforms.

If there is traffic over a connection, a disconnect will always be noticed eventually (it might take a few minutes, though).

If a connection is idle, a disconnect can go unnoticed for a long time.  This
is just as much a problem with the cred "logout" method as using
clientConnectionLost (since one relies on the other, of course).

You can address this by using TCP keepalive or an application-level ping/pong
message every few minutes, to make sure there is traffic on the connection.

Of course your application may always keep the connection busy, so you may
not need to worry about this at all.

Jean-Paul



From Marcin.Kasperski at softax.com.pl  Mon Nov 20 15:20:14 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 20 Nov 2006 21:20:14 +0100
Subject: [Twisted-Python] Testing protocols without connection?
Message-ID: <200611202120.15128.Marcin.Kasperski@softax.com.pl>

(sorry if it was already described somewhere, but 15 mins of 
googling did not help me)

In one of the recent posts 
(http://twistedmatrix.com/pipermail/twisted-python/2006-November/014374.html)
I noticed the following sentence:

> In general you don't need actual network
> connections to test protocols. For example, there are helpers
> in twisted.test.proto_helpers for mimicking a transport.

How should those be used? Not much docs inside...

To give a simple example, imagine I have some factory which 
provides something over HTTP. And I have test case which setup 
this server on loopback address, connects to it using HTTP, and 
analyses whether correct output was received. Is it possible to 
refactor such test, so it does not create any true TCP 
connection?



From phil at bubblehouse.org  Mon Nov 20 15:26:40 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 20 Nov 2006 15:26:40 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>
References: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>
Message-ID: <A4C5DDD2-FA5F-4AD6-8859-188748782F30@bubblehouse.org>

On Nov 20, 2006, at 9:41 AM, Jean-Paul Calderone wrote:
> On Mon, 20 Nov 2006 09:19:43 -0500, Phil Christensen  
> <phil at bubblehouse.org> wrote:
>> Yeah, in my experience the server *always* detects the connection   
>> loss and calls logout.
>>
>> Incidentally, this was with a standard reactor on a UNIXish  
>> system;  I'm relatively sure this works this way on all platforms.
>
> If there is traffic over a connection, a disconnect will always be  
> noticed eventually (it might take a few minutes, though).
>
> If a connection is idle, a disconnect can go unnoticed for a long  
> time.  This
> is just as much a problem with the cred "logout" method as using
> clientConnectionLost (since one relies on the other, of course).
>
> You can address this by using TCP keepalive or an application-level  
> ping/pong
> message every few minutes, to make sure there is traffic on the  
> connection.
>
> Of course your application may always keep the connection busy, so  
> you may
> not need to worry about this at all.

Yeah, just  another anecdote w.r.t. JP's point here...

While I found that the server was quick to notice disconnects, my  
client -- which is more of a passive participant, primarily receiving  
messages from the server -- would not notice the server disappearing  
until another outgoing message was sent (or attempted to be sent).

I found implementing a noop keepalive took care of that.

JP, could you elaborate on your comment about idle connections? Is  
the PB server supposed to disconnect idle connections after some  
period of time? If so, I'd definitely like to make sure this doesn't  
happen just because someone isn't paying attention to a client in the  
background.

Thanks,

-phil



From markus at bluegap.ch  Tue Nov 21 11:13:12 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 21 Nov 2006 17:13:12 +0100
Subject: [Twisted-Python] Trial Loader: nested test suites
Message-ID: <45632598.4030901@bluegap.ch>

Hi,

I've recently been wondering if it's possible to nest test suites with 
trial. I've been experimenting with the Loader and the Runner to achieve 
what I want.

I came up with the following patch. Does such a thing have any chance of 
being accepted?

Regards

Markus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial.nested_testsuites.diff
Type: text/x-patch
Size: 2645 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061121/14866c1a/attachment.bin 

From jml at mumak.net  Tue Nov 21 16:40:56 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 22 Nov 2006 08:40:56 +1100
Subject: [Twisted-Python] Trial Loader: nested test suites
In-Reply-To: <45632598.4030901@bluegap.ch>
References: <45632598.4030901@bluegap.ch>
Message-ID: <d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>

On 11/22/06, Markus Schiltknecht <markus at bluegap.ch> wrote:
> Hi,
>
> I've recently been wondering if it's possible to nest test suites with
> trial. I've been experimenting with the Loader and the Runner to achieve
> what I want.
>

You can already nest TestSuites. That's half the point of having them.
For example:
    suite = TestSuite()
    suite.addTest(SomeTestCase('test_foo'))
    suite.addTest(AnotherTestCase('test_baz'))
    outerSuite = TestSuite()
    outerSuite.addTest(suite)
    outerSuite.addTest(SomeTestCase('test_bar))
    assert outerSuite.countTestCases() == 3
    result = TestResult()
    outerSuite.run(result)
    assert result.testsRun == 3

Perhaps you mean something else.

> I came up with the following patch. Does such a thing have any chance of
> being accepted?
>

Before anything gets in to Twisted, it has to have a ticket on the
issue tracker, "decent" code and unit tests.  See
http://twistedmatrix.com/trac/wiki/ReviewProcess and
http://twistedmatrix.com/projects/core/documentation/howto/policy/coding-standard.html
for more information.

Looking at your patch, you seem to be doing two things: adding setUp
and tearDown all over the place; and fiddling with the loadPackage()
function. A casual scan doesn't tell me if those two changes depend on
each other. Smaller patches are more likely to be accepted.

More importantly than that, I'm still not clear on what problem you
are trying to solve.

Also I should note that I am hesitant to allow Trial's suites to run
any user code apart from unit tests. A lot of bad code has been
written that way.

cheers,
jml



From markus at bluegap.ch  Tue Nov 21 17:49:19 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 21 Nov 2006 23:49:19 +0100
Subject: [Twisted-Python] Trial Loader: nested test suites
In-Reply-To: <d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>
References: <45632598.4030901@bluegap.ch>
	<d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>
Message-ID: <4563826F.60302@bluegap.ch>

Hi,

Jonathan Lange wrote:
> You can already nest TestSuites. That's half the point of having them.
> <snipped the fine code example>
> Perhaps you mean something else.

Yes, I want to setUp and tearDown processes and/or network connections 
in nested testsuites. What's the point in nesting TestSuites if they 
don't do anything?

> Before anything gets in to Twisted, it has to have a ticket on the
> issue tracker, "decent" code and unit tests.  See
> http://twistedmatrix.com/trac/wiki/ReviewProcess and
> http://twistedmatrix.com/projects/core/documentation/howto/policy/coding-standard.html 

Thanks for the hints. I mainly wanted to make sure it's worth following 
that path further, which I'm still very uncertain.

> Looking at your patch, you seem to be doing two things: adding setUp
> and tearDown all over the place; 

Wait, that's a little exaggerated. Two places: before and after running 
a testsuite and when loading it. You can't possibly insert it at less 
places if you want that functionality.

> and fiddling with the loadPackage()
> function. A casual scan doesn't tell me if those two changes depend on
> each other. Smaller patches are more likely to be accepted.

The fiddling in loadPackage makes sure it checks every module for setUp 
and tearDown methods by really recursively call loadByName() for every 
sub-module (even if it does not contain test cases).

> More importantly than that, I'm still not clear on what problem you
> are trying to solve.

Please have a look at the thread in [1], that message explains best, 
what I want to achieve.

> Also I should note that I am hesitant to allow Trial's suites to run
> any user code apart from unit tests. A lot of bad code has been
> written that way.

That's what I fear will break the neck of integrating this. I know I'm 
not writing standard unit tests, but something similar.

Now, I know unit tests should be simple and testing only one unit of 
code. But what if you *want* to test your complete program, simulate 
network outages and the like. What's so entirely different to unit 
testing, besides needing little improvements?

Regards

Markus

[1]: 
http://twistedmatrix.com/pipermail/twisted-python/2006-November/014370.html




From manlio_perillo at libero.it  Wed Nov 22 06:19:56 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed, 22 Nov 2006 12:19:56 +0100
Subject: [Twisted-Python] SQLAlchemy integration
Message-ID: <4564325C.9040604@libero.it>

Hi.

I'm writing some modules for integrating SQLALchemy with Twisted.
The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.


This allows to do:
1) use the custom engine to execute queries asyncronously
2) bound metadata to the custom engine
3) write a ConnectionPool class compatible with the current adbapi
interface (including openfun and noisy parameter support (this will use
twisted logged system)
4) integration with sqlalchemy.orm


Points 1, 2 and 3 are ready (but 3 is still incomplete: I'm testing
against adbapi test suite).

I would like to know if there are some other people working on this
(excluding sAsync)



Manlio Perillo



From Sven-Erik.Tiberg at ltu.se  Wed Nov 22 08:54:27 2006
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Wed, 22 Nov 2006 14:54:27 +0100
Subject: [Twisted-Python] Twisted <> USB units?
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910400B148@EMMA.personal.adp.ltu.se>

 
Hi.

Been thinking of attaching USB connected Human User Interfaces to my
applications.
Could it be wise to use Twisted to interface USB-units.
If so, any hints or docs?  

BG
Sven-Erik Tiberg
Lulea / Sweden



From glyph at divmod.com  Thu Nov 23 02:39:58 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 23 Nov 2006 07:39:58 -0000
Subject: [Twisted-Python] SQLAlchemy integration
Message-ID: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>

On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:

>I'm writing some modules for integrating SQLALchemy with Twisted.
>The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.

>I would like to know if there are some other people working on this
>(excluding sAsync)

Is there really a good reason for having *two* different efforts to integrate Twisted with a single other library?  Surely it must be possible to collaborate somehow.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061123/267ea65a/attachment.htm 

From manlio_perillo at libero.it  Thu Nov 23 04:33:50 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 23 Nov 2006 10:33:50 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>
References: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>
Message-ID: <45656AFE.8030005@libero.it>

glyph at divmod.com ha scritto:
> On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:
> 
>>I'm writing some modules for integrating SQLALchemy with Twisted.
>>The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
> 
>>I would like to know if there are some other people working on this
>>(excluding sAsync)
> 
> Is there really a good reason for having *two* different efforts to
> integrate Twisted with a single other library?  Surely it must be
> possible to collaborate somehow.
> 

I'm tring to offer an interface compatible with the twisted adbapi.
Moreover my API is very different from sAsync:


# global_connect will bind the engine to the global default_metadata
engine = Engine(...., global_connect=True)

users = Table("users, column(.....))
users.create().addCallback(...)


select([users], ...).addCallback()

engine.transact(callable)


This works because Engine implements the Connectable interface.
There is an issue here: if a query/table is bound to this Engine, every
query will run in a separate thread; this is not what one want when
inside a transaction).



More complex is the integration with sqlalchemy session handling.

As an example with Nevow:
- a thread retrieve an object from the database
- another thread modify the object


It would be much simple if the two operations occur in the same thread
(this require to run renderHTTP or locateChild in a separate thread but
I ignore if this is safe).



Regards  Manlio Perillo



From michele.petrazzo at unipex.it  Thu Nov 23 13:38:18 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 23 Nov 2006 19:38:18 +0100
Subject: [Twisted-Python] cred question
Message-ID: <4565EA9A.6080901@unipex.it>

Hi,
I'm trying to use the various checkers.* that implement the
ICredentialsChecker, for authenticate a spread.pb client, but I have a
lot of problem with all the checkers except the
InMemoryUsernamePasswordDatabaseDontUse (and FilePasswordDB without hash
function) that work.
The output message are:
"""Failure: twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IUsernameHashedPassword,
twisted.spread.pb.IUsernameMD5Password, twisted.spread.interfaces.IJellyable
"""

My server code:
<code>
class MyRealm:
     __implements__ = portal.IRealm
     def requestAvatar(self, avatarId, mind, *interfaces):
         if pb.IPerspective not in interfaces:
             raise NotImplementedError
         return pb.IPerspective, MyPerspective(avatarId), lambda:None

class MyPerspective(pb.Avatar):
     def __init__(self, name):
         self.name = name
         print "\n\nServer: New connection: %s"%name

p = portal.Portal(MyRealm())
c = checkers.InMemoryUsernamePasswordDatabaseDontUse(user2="pass2")
#or c = checkers.FilePasswordDB("passwd") that work
#or c = checkers.FilePasswordDB("passwd", hash=hash_funct) that don't
#work
#or c = checkers.AllowAnonymousAccess()

p.registerChecker(c)
reactor.listenTCP(8800, pb.PBServerFactory(p))
reactor.run()

</code>

How can I use the various FilePasswordDB with the hash or the others?

Thanks,
Michele



From rasjidw at gmail.com  Thu Nov 23 20:45:37 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 24 Nov 2006 12:45:37 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
Message-ID: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>

I would like to have occasional remote admininitrative command line access
to a number of MS Windows machines that I help maintain.

There are over 200 machines, but usage would be very limited and sparodic,
so the commerical solutions are too expensive for the benefit gaiined.
Windows XPs built in telnet server is free, but insecure.  And if possible,
I would like to avoid the Cygwin route, particulary on machines that I don't
have physical access to.

So has anyone used the ssh server in Conch as a secure way of providing
command line access a Windows machine?

Cheers,

Rasjid.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061124/54979c23/attachment.htm 

From ncesar at lunix.com.ar  Fri Nov 24 12:14:37 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 14:14:37 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor within
	twistd
Message-ID: <200611241414.38211.ncesar@lunix.com.ar>

I have the following code, 

------------------miniserver.tac-------------------------
from twisted.application.internet import TCPServer
from twisted.application import service
from twisted.internet import protocol
from twisted.python.failure import DefaultException

class GoodByeException(DefaultException):
    def __init__(self, *args, **kwargs):
        DefaultException.__init__(self, *args, **kwargs)
        self.args = "I wanna quit....\n but I'm stuck inside a twisted 
application"

class FortyTwoProtocol(protocol.Protocol):
    def connectionMade(self):
	raise GoodByeException()
        return

class FortyTwoFactory(protocol.ServerFactory):
    protocol = FortyTwoProtocol
    def __init__(self):
	pass

application = service.Application("Total Perspective Vortex")
theService  = service.MultiService()
fact42      = FortyTwoFactory()
server42    = TCPServer(4242, fact42)
theService.addService(server42)
theService.setServiceParent(application)
------------------------------------------------------------------

I want my GoodByeException to exit the reactor loop (basacally do a 
reactor.stop()) and then twistd exit the reactor's main loop. I'm programming 
a bigger application and sudentlly some exceptions are really Fatal, but the 
applications keeps on running (sometimes with no services attending).

Any sugestions will be appreciated .

Greetings,

PS: this is the log
-------------------------------------------------------------------
$ twistd -noy miniserver.tac
2006/11/24 14:05 ART [-] Log opened.
2006/11/24 14:05 ART [-] twistd 2.4.0 (/usr/bin/python 2.4.4) starting up
2006/11/24 14:05 ART [-] reactor class: 
<class 'twisted.internet.selectreactor.SelectReactor'>
2006/11/24 14:05 ART [-] Loading miniserver.tac...
2006/11/24 14:05 ART [-] Loaded.
2006/11/24 14:05 ART [-] __builtin__.FortyTwoFactory starting on 4242
2006/11/24 14:05 ART [-] Starting factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [__builtin__.FortyTwoFactory] Traceback (most recent call 
last):
          File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 
38, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, 
**kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 37, in callWithContext
            return func(*args,**kw)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py", 
line 139, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", 
line 769, in doRead
            protocol.makeConnection(transport)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/protocol.py", line 
333, in makeConnection
            self.connectionMade()
          File "miniserver.tac", line 14, in connectionMade
            raise GoodByeException()
        __builtin__.GoodByeException: I wanna quit....
         but I'm stuck inside a twisted application

2006/11/24 14:05 ART [-] Received SIGINT, shutting down.
2006/11/24 14:05 ART [-] (Port 4242 Closed)
2006/11/24 14:05 ART [-] Stopping factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [-] Main loop terminated.
2006/11/24 14:05 ART [-] Server Shut Down.
-----------------------------------------------------------------------

-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061124/021684f9/attachment.pgp 

From ncesar at lunix.com.ar  Fri Nov 24 12:18:59 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 14:18:59 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor within
	twistd
Message-ID: <200611241418.59398.ncesar@lunix.com.ar>

I have the following code, 

------------------miniserver.tac-------------------------
from twisted.application.internet import TCPServer
from twisted.application import service
from twisted.internet import protocol
from twisted.python.failure import DefaultException

class GoodByeException(DefaultException):
    def __init__(self, *args, **kwargs):
        DefaultException.__init__(self, *args, **kwargs)
        self.args = "I wanna quit....\n but I'm stuck inside a twisted 
application"

class FortyTwoProtocol(protocol.Protocol):
    def connectionMade(self):
	raise GoodByeException()
        return

class FortyTwoFactory(protocol.ServerFactory):
    protocol = FortyTwoProtocol
    def __init__(self):
	pass

application = service.Application("Total Perspective Vortex")
theService  = service.MultiService()
fact42      = FortyTwoFactory()
server42    = TCPServer(4242, fact42)
theService.addService(server42)
theService.setServiceParent(application)
------------------------------------------------------------------

I want my GoodByeException to exit the reactor loop (basacally do a 
reactor.stop()) and then twistd exit the reactor's main loop. I'm programming 
a bigger application and sudentlly some exceptions are really Fatal, but the 
applications keeps on running (sometimes with no services attending).

Any sugestions will be appreciated .

Greetings,

PS: this is the log
-------------------------------------------------------------------
$ twistd -noy miniserver.tac
2006/11/24 14:05 ART [-] Log opened.
2006/11/24 14:05 ART [-] twistd 2.4.0 (/usr/bin/python 2.4.4) starting up
2006/11/24 14:05 ART [-] reactor class: 
<class 'twisted.internet.selectreactor.SelectReactor'>
2006/11/24 14:05 ART [-] Loading miniserver.tac...
2006/11/24 14:05 ART [-] Loaded.
2006/11/24 14:05 ART [-] __builtin__.FortyTwoFactory starting on 4242
2006/11/24 14:05 ART [-] Starting factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [__builtin__.FortyTwoFactory] Traceback (most recent call 
last):
          File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 
38, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, 
**kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 37, in callWithContext
            return func(*args,**kw)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py", 
line 139, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", 
line 769, in doRead
            protocol.makeConnection(transport)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/protocol.py", line 
333, in makeConnection
            self.connectionMade()
          File "miniserver.tac", line 14, in connectionMade
            raise GoodByeException()
        __builtin__.GoodByeException: I wanna quit....
         but I'm stuck inside a twisted application

2006/11/24 14:05 ART [-] Received SIGINT, shutting down.
2006/11/24 14:05 ART [-] (Port 4242 Closed)
2006/11/24 14:05 ART [-] Stopping factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [-] Main loop terminated.
2006/11/24 14:05 ART [-] Server Shut Down.
-----------------------------------------------------------------------

-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061124/0c397a07/attachment.pgp 

From glyph at divmod.com  Fri Nov 24 18:18:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Nov 2006 23:18:21 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>

On 05:14 pm, ncesar at lunix.com.ar wrote:
>I have the following code,

>I want my GoodByeException to exit the reactor loop (basacally do a
>reactor.stop()) and then twistd exit the reactor's main loop. I'm programming
>a bigger application and sudentlly some exceptions are really Fatal, but the
>applications keeps on running (sometimes with no services attending).

So make GoodByeException.__init__ call reactor.stop() instead of setting the useless 'args' attribute.

This is bad form, however.  Particular types of exception should not stop the reactor.  Code that wants the reactor to stop, should call reactor.stop.  Maybe you could make a method that both calls reactor.stop() *and* raises an exception.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061124/1882f18f/attachment.htm 

From phil at bubblehouse.org  Fri Nov 24 18:46:26 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 24 Nov 2006 18:46:26 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
Message-ID: <4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>

On Nov 24, 2006, at 5:16 PM, Yi Qiang wrote:

> On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote:
> On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.
>
> Hi Phil,
> Do you happen to be able to share the code you've written to  
> accomplish just this?  Where do you store your list of connected  
> clients?

I'm CC'ing the list for posterity, but this is actually pretty  
straightforward. I'm guessing the issue is that you're over-thinking  
this.

First of all, here's some code from your original post:

On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> from twisted.spread import pb
>
> class DSagePBServerFactory(pb.PBServerFactory):
[snip snip snip]
>     def clientConnectionMade(self, broker):
>         self.clients.append((broker.transport,
>                              broker.transport.getPeer().host,
>                              broker.transport.getPeer().port))
>         print self.clients

First thing, there's not necessarily any need to subclass the  
PBServerFactory if this is all you're doing. In the interest of  
forward-compatibility (always a good idea with Twisted ;-), I try to  
avoid making subclasses of essential framework classes unless I have  
a very good reason (or a very bad one ;-).

The place where you want to do all this is really in your Realm  
instance. I think it's possible to create a PB server that doesn't  
require login, but I've never had any need for it, so you're kind of  
on your own there.

> class MyRealm:
>     """
>     Holds a reference to the main service object.
>     """
>     __implements__ = portal.IRealm
>
>     def __init__(self, service):
>         """
>         Create a realm with the given service.
>         """
>         self.service = service
>
>     def requestAvatar(self, avatarId, mind, *interfaces):
>         """
>         This function is called after the user has verified their
>         identity. It returns an object that represents the user
>         in the system, i.e., an avatar.
>         """
>         if pb.IPerspective in interfaces:
>             avatar = self._getPBAvatar(avatarId, mind)
>             ####################### <-- RIGHT HERE
>             return pb.IPerspective, avatar, avatar.logout
>         else:
>             raise NotImplementedError("no interface")

This is where you want to maintain your client list. The hardest part  
is deciding on a place to put it that will be accessible from all  
your code; I usually use a singleton pattern of some kind, where I  
can import a module that holds onto client references and provides  
functions to manipulate/retrieve that list.

So, that point where I put all those hashes is a pretty good place to  
add clients your client queue. The 'mind' argument is usually a  
reference to the client on the other end, assuming your client passes  
it properly. My client does this:

>     # self.client is a Referenceable on the client side.
>     defer = self.factory.login(credentials.UsernamePassword 
> (username, password), self.client)
>     defer.addCallback(connected_callback, self)

This way, you can find all the necessary info you might need to  
identify the user on the other end in the properties of this object.

You'll also see that right after the hashes, I return a three-tuplet  
that has avatar.logout as its third item. This is a method defined on  
my avatar object, but any callable object can be returned here, and  
that callable, of course, can remove clients from your list. So one  
approach to keeping track of client connections would be:

> class MyRealm(pb.Avatar):
>     # ... snip
>     # ... snip
>     def requestAvatar(self, avatarId, mind, *interfaces):
>         """
>         This function is called after the user has verified their
>         identity. It returns an object that represents the user
>         in the system, i.e., an avatar.
>         """
>         if pb.IPerspective in interfaces:
>             avatar = MyAvatar()
>
>             import clienttracker
>             clienttracker.append(avatar)
>
>             return pb.IPerspective, avatar, avatar.logout
>         else:
>             raise NotImplementedError("no interface")
>
> class MyAvatar(pb.Avatar):
>     # ... snip
>     # ... snip
>     def logout(self):
>         import clienttracker
>         clienttracker.remove(self)

There's a lot of flexibility there. You could move the  
clienttracker.append call right inside your Avatar constructor -- the  
only reason I didn't is because my server supports a number of  
protocols besides PB, and I wanted to deal with them universally.

One thing this approach doesn't do is keep track of clients that  
connect, but fail authentication. To do that, you'd need to subclass  
Broker, but that's a tough one. I looked into this once before, and  
it certainly appears doable -- in the end, a Broker is still a  
Protocol, which means it has a transport property you can get client  
addresses out of.

Of course, if a user fails authentication, they are immediately  
disconnected, so this would only be a problem if you are concerned  
about malevolent users. It would be possible to write a client that  
connects but never authenticates; enough of those could cause some  
discomfort on the server side, but if that happens, you likely have  
more problems than keeping track of a client list.

Hope this helps...

-phil




From ncesar at lunix.com.ar  Fri Nov 24 19:55:43 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 21:55:43 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>
References: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>
Message-ID: <200611242155.43518.ncesar@lunix.com.ar>

El Viernes, 24 de Noviembre de 2006 20:18, glyph at divmod.com escribi?:
> So make GoodByeException.__init__ call reactor.stop() instead of setting
> the useless 'args' attribute.

Must admit, is a clever idea... :-D

> This is bad form, however. ?Particular types of exception should not stop
> the reactor. ?Code that wants the reactor to stop, should call
> reactor.stop. ?Maybe you could make a method that both calls reactor.stop()
> *and* raises an exception.

This is the way i'm doing it right now, but i'm starting to detect new 
exceptions raised within standard library (among others) code... and instead 
of catching all posibilities I wanted the application to quit (with the 
corresponding logging done).

I was wondering if twistd/the application class could have a "exit on 
Exception" for this type of operations.

As always, Thanks  glyph for the advice
-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061124/f23164c9/attachment.pgp 

From d.jacobfeuerborn at conversis.de  Fri Nov 24 22:41:28 2006
From: d.jacobfeuerborn at conversis.de (Dennis Jacobfeuerborn)
Date: Sat, 25 Nov 2006 04:41:28 +0100
Subject: [Twisted-Python] twisted SNMP problem
Message-ID: <4567BB68.4020707@conversis.de>

Hi,
I'm trying to write a small program that gets some SNMP values from a host 
using the twistedsnmp module. I modified one of the example programs for 
that purpose but I'm not sure if I'm approaching this the right way.

Basically if I run the attached script things work out fine but as soon as 
I comment in the line starting with "l2 = ..." and try to run the script 
again it will freeze and I'm forced to do a "kill -9" to get rid of it. My 
guess is that I'm running into trouble with the whole reactor/deferreds 
thing but I'm not sure where the problem is. What I'm basically trying to 
achieve is that I instantiate SNMPClient and then call getValue(OID) any 
number of times to get the desired values.

Does anyone have an idea what is wrong here or how to implement this in a 
better way?


Regards,
   Dennis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: snmp.py
Type: text/x-python
Size: 1411 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061125/451e3862/attachment.py 

From glyph at divmod.com  Sat Nov 25 00:39:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Nov 2006 05:39:21 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>

On 12:55 am, ncesar at lunix.com.ar wrote:

>> This is bad form, however.  Particular types of exception should not stop
>> the reactor.  Code that wants the reactor to stop, should call
>> reactor.stop.  Maybe you could make a method that both calls reactor.stop()
>> *and* raises an exception.
>
>This is the way i'm doing it right now, but i'm starting to detect new
>exceptions raised within standard library (among others) code... and instead
>of catching all posibilities I wanted the application to quit (with the
>corresponding logging done).
>
>I was wondering if twistd/the application class could have a "exit on
>Exception" for this type of operations.

In general this is a bad idea.  There are basically 3 kinds of code you can write with Twisted:

  1. Infrastructure code, which implements a protocol and provides APIs for parsing and dealing with events.  This kind of code should never contain a reactor.stop at all.
  2. Application code which exits in response to a particular user event.  This kind of code should contain exactly 1 call to reactor.stop, in the handler for the user event that is the explicit stop.
  3. Programs which do one operation, then stop themselves.  This kind of code should contain exactly 1 call to reactor.stop, in the final callback/errback of the Deferred representing the operation that it is run to perform.

It sounds like you are writing code of type 3.  I'm guessing you're writing a program which does one thing, then shuts itself down.  If that is the case, the "program" should be encapsulated by a Deferred, and there should be a final addBoth which waits for the program to finish when it exits.

If you *don't* structure your program this way, then you'll discover later that sometimes, you want to run your particular operation TWICE in the lifetime of the process instead of once, and you will have to deal with dozens of calls to reactor.stop littered around your application in lots of places.  Don't try to always stop the *process* when your program is complete: stop the *program* by keeping a Deferred around which represents its complete run.  That way the *driver* for the program is responsible for stopping it, and when you want to aggregate multiple runs of it, you can easily use a tool like DeferredList, or do something different in the callbacks at the end.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061125/03300822/attachment.htm 

From roland.hedberg at adm.umu.se  Sat Nov 25 09:33:31 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 15:33:31 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names ?
Message-ID: <4568543B.30404@adm.umu.se>

Hi!

There is no support what I can see in the present distribution, but
someone might have needed it and done a local patch.

I've made a not so well thought out attempt to add it myself, but I my
client (dig) responds with "Warning: Message parser reports malformed
message packet."

So, I'm obviously made some error.

Anyone that can lend me a hand ?

-- Roland



From roland.hedberg at adm.umu.se  Sat Nov 25 11:27:52 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 17:27:52 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names
 ?
In-Reply-To: <4568543B.30404@adm.umu.se>
References: <4568543B.30404@adm.umu.se>
Message-ID: <45686F08.1080106@adm.umu.se>

Roland Hedberg wrote:
> 
> There is no support what I can see in the present distribution, but
> someone might have needed it and done a local patch.
> 
> I've made a not so well thought out attempt to add it myself, but I my
> client (dig) responds with "Warning: Message parser reports malformed
> message packet."

Looking a bit further it turns out that the current definition of the
decode function in the Class Name in dns.py is *not* compatible with the
NAPTR definition in RFC 2915. Three strings in a sequence representing
different parts (as with flags,services and regexp in a NAPTR record )
is just handled wrongly.

I'll make an attempt at fixing this if no one beats me to it.

-- Roland



From roland.hedberg at adm.umu.se  Sat Nov 25 14:06:57 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 20:06:57 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names
 ?
In-Reply-To: <45686F08.1080106@adm.umu.se>
References: <4568543B.30404@adm.umu.se> <45686F08.1080106@adm.umu.se>
Message-ID: <45689451.3070207@adm.umu.se>

Roland Hedberg wrote:
> Roland Hedberg wrote:
>> There is no support what I can see in the present distribution, but
>> someone might have needed it and done a local patch.
>>
>> I've made a not so well thought out attempt to add it myself, but I my
>> client (dig) responds with "Warning: Message parser reports malformed
>> message packet."
> 
> Looking a bit further it turns out that the current definition of the
> decode function in the Class Name in dns.py is *not* compatible with the
> NAPTR definition in RFC 2915. Three strings in a sequence representing
> different parts (as with flags,services and regexp in a NAPTR record )
> is just handled wrongly.
> 
> I'll make an attempt at fixing this if no one beats me to it.

My error!

The problem was not in the Name Class which is perfectly suitable for
its purpose. The error was in using it for something which in the RFC is
defined as a character-string.

The solution was of course to define a new class (Charstr) and to give
it the appropriate implementation.

If anyone wants the fix I can send you a diff.

-- Roland




From yqiang at gmail.com  Sat Nov 25 14:33:01 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sat, 25 Nov 2006 11:33:01 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
	<4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
Message-ID: <3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>

On 11/24/06, Phil Christensen <phil at bubblehouse.org> wrote:

> The place where you want to do all this is really in your Realm
> instance. I think it's possible to create a PB server that doesn't
> require login, but I've never had any need for it, so you're kind of
> on your own there.


Hi Phil,
Thanks for the reply.  My implementation is very similar to what you
described below.  I am having the clients pass in a 'mind' object that's
representative of them, which is good enough to keep track of some
information.  What I am having trouble with is getting access to the clients
IP address.  This is not something I can pass in in the PBClientFactory's
login method, since many computers are NAT'ed.

> class MyRealm:
> >     """
> >     Holds a reference to the main service object.
> >     """
> >     __implements__ = portal.IRealm
> >
> >     def __init__(self, service):
> >         """
> >         Create a realm with the given service.
> >         """
> >         self.service = service
> >
> >     def requestAvatar(self, avatarId, mind, *interfaces):
> >         """
> >         This function is called after the user has verified their
> >         identity. It returns an object that represents the user
> >         in the system, i.e., an avatar.
> >         """
> >         if pb.IPerspective in interfaces:
> >             avatar = self._getPBAvatar(avatarId, mind)
> >             ####################### <-- RIGHT HERE
> >             return pb.IPerspective, avatar, avatar.logout
> >         else:
> >             raise NotImplementedError("no interface")
>
> This is where you want to maintain your client list. The hardest part
> is deciding on a place to put it that will be accessible from all
> your code; I usually use a singleton pattern of some kind, where I
> can import a module that holds onto client references and provides
> functions to manipulate/retrieve that list.


Yes, this is something I do have trouble with.  I will look into the
singleton pattern.  It would be nicer if there was a convenient way to
bubble up the  list of clients.

So, that point where I put all those hashes is a pretty good place to
> add clients your client queue. The 'mind' argument is usually a
> reference to the client on the other end, assuming your client passes
> it properly. My client does this:
>
> >     # self.client is a Referenceable on the client side.
> >     defer = self.factory.login(credentials.UsernamePassword
> > (username, password), self.client)
> >     defer.addCallback(connected_callback, self)


I do the same thing.

>
>
> There's a lot of flexibility there. You could move the
> clienttracker.append call right inside your Avatar constructor -- the
> only reason I didn't is because my server supports a number of
> protocols besides PB, and I wanted to deal with them universally.
>
> One thing this approach doesn't do is keep track of clients that
> connect, but fail authentication. To do that, you'd need to subclass
> Broker, but that's a tough one. I looked into this once before, and
> it certainly appears doable -- in the end, a Broker is still a
> Protocol, which means it has a transport property you can get client
> addresses out of.


This is exactly what I need to do so I can associate a client with both
their username and ip address.  I have access to the broker if I subclass
PBServerFactory, but I am not sure how to access it from the Realm, or if it
is possible at all.

Any suggestions would be appreciated!

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061125/d59f9b6a/attachment.htm 

From teratorn at twistedmatrix.com  Sat Nov 25 14:36:06 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 25 Nov 2006 13:36:06 -0600
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
References: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
Message-ID: <op.tjk7egk5y3d107@office2>

On Thu, 23 Nov 2006 19:45:37 -0600, Rasjid Wilcox <rasjidw at gmail.com>  
wrote:

> I would like to have occasional remote admininitrative command line  
> access
> to a number of MS Windows machines that I help maintain.
>
> There are over 200 machines, but usage would be very limited and  
> sparodic,
> so the commerical solutions are too expensive for the benefit gaiined.
> Windows XPs built in telnet server is free, but insecure.  And if  
> possible,
> I would like to avoid the Cygwin route, particulary on machines that I  
> don't
> have physical access to.
>
> So has anyone used the ssh server in Conch as a secure way of providing
> command line access a Windows machine?
>
> Cheers,
>
> Rasjid.

Hi Rasjid,

I'm not aware of anyone using Conch to provide ssh access to Windows, but  
it is an interesting idea.

If you let me know what problems you have I will be glad to help. One  
thing that I would look in to would be using PowerShell instead of cmd.exe  
as the shell. If that interests you one thing to research would be which  
method of integrating PowerShell would be best. You can either run  
PowerShell.exe and communicate over stdin/stdout, *or* you can host the  
PowerShell engine in-process. (PowerShell.exe is just a wrapper for the PS  
engine, giving it a text-based interface). Not sure how hard or even  
feasible this would be, considering that PS is a .NET assembly. (Who wants  
to make Twisted run on IronPython? ;)

-- 
Eric Mangold
Twisted/Win32 Maintainer



From glyph at divmod.com  Sat Nov 25 14:54:01 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Nov 2006 19:54:01 -0000
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names  ?
Message-ID: <20061125195401.22613.505572522.divmod.xquotient.366@joule.divmod.com>


On 07:06 pm, roland.hedberg at adm.umu.se wrote:

>If anyone wants the fix I can send you a diff.

Please open a ticket in the Twisted tracker for further discussion, and attach your patch there - hopefully with tests :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061125/60f2d12e/attachment.htm 

From phil at bubblehouse.org  Sat Nov 25 22:38:15 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 25 Nov 2006 22:38:15 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
	<4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
	<3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>
Message-ID: <0038537C-DF66-46FE-AD87-6A235EB5DC37@bubblehouse.org>

On Nov 25, 2006, at 2:33 PM, Yi Qiang wrote:
> What I am having trouble with is getting access to the clients IP  
> address.  This is not something I can pass in in the  
> PBClientFactory's login method, since many computers are NAT'ed.

I'm not sure if I understand you here, are you saying that you *are*  
passing in the client's IP? There's fundamentally no way for the  
server to know the IP of a NAT'd client unless the client sends it.

> Yes, this is something I do have trouble with.  I will look into  
> the singleton pattern.  It would be nicer if there was a convenient  
> way to bubble up the  list of clients.

I agree. I would be particularly interested in findnig an direct  
interface into the reactor that allows me to at least view, if not  
manipulate connected clients. Something similar to netstat's output  
would be ideal.

Any other Twisted devs know something I don't in this matter?

> On Nov 24, 2006, at 6:46 PM, Phil Christensen wrote:
>> One thing this approach doesn't do is keep track of clients that  
>> connect, but fail authentication. To do that, you'd need to  
>> subclass Broker, but that's a tough one. I looked into this once  
>> before, and it certainly appears doable -- in the end, a Broker is  
>> still a Protocol, which means it has a transport property you can  
>> get client addresses out of.
>
> This is exactly what I need to do so I can associate a client with  
> both their username and ip address.  I have access to the broker if  
> I subclass PBServerFactory, but I am not sure how to access it from  
> the Realm, or if it is possible at all.

Well, the actual act of replacing the broker is easy, you just do this:

> from twisted.spread import pb
> pb.PBServerFactory.protocol = MyBrokerSubclass

This will make all future PB servers you create use your new protocol.

Of course, that's not the hard part ;-).

It should definitely be possible to wedge yourself in there between  
the various connection handlers, but it's non-trivial. There's also a  
high likelihood that you may need to modify/subclass other classes,  
which may or may not have an appropriate interface for doing so.

I think the end result wouldn't really be worth the investment of  
time. If your server *really* needs detailed information about  
connected clients at a very raw level, but also requires the power of  
Perspective Broker, you might try splitting your app into two pieces.

You could mimic the old-school FTP approach, and create a main  
control channel that speaks a custom, albeit simple protocol. All  
this channel would do is handle the connected clients, and provide  
some kind of token to them that they could pass back to the PB server.

If you need to be sure of security, you could generate random names  
for the remote objects you wish your clients to interact with, and  
have the clients provide that name to the PB server on each request.  
There are probably a number of other approaches that could provide  
even tighter security.

If this won't do the trick for you, you might need to provide a  
little more information about what you're actually trying to accomplish.

-phil



From exarkun at twistedmatrix.com  Sun Nov 26 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1164521102.85.1510852240@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-19 through 2006-11-26
Bugs opened: 6    Bugs closed: 3  Total open bugs: 783 (+3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Core:     +0           
|Enhancement:  +1  |Normal:   +4          |Mail:     +1           
                   |Low:      +0          |Trial:    +0           
                                          |Web2:     +1           
                                          |Website:  +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2240] Add twisted.mail SMTP client example which demonstrates TLS and authentication (opened by exarkun)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2240

                    ===== Normal =====
[#2241] Trac emails suck, they don't provide a link to the website. (opened by jerub)
    defect          website    http://twistedmatrix.com/trac/ticket/2241

[#2242] twisted.web2.static.File sucks with regards to overriding it's content type (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2242

[#2243] Todo attribute checking (opened by mithrandi)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2243

[#2244] Patch to setup.py to work with python installs in directories containing a space (opened by Sandra24)
    defect          core       http://twistedmatrix.com/trac/ticket/2244

                    ===== Low =====
[#2245] Deferred implementation in C (opened by therve) (CLOSED, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2245



Closed Bugs
______________________
                    ===== Highest =====
[#2173] twisted/trial/runner.py:243: exceptions.DeprecationWarning: log.startKeepingErrors is deprecated since Twisted 2.5 (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2173

[#2212] Remove mention of threadable.init from the threading chapter (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2212

                    ===== Low =====
[#2245] Deferred implementation in C (opened by therve, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2245





From rasjidw at gmail.com  Sun Nov 26 04:27:37 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Sun, 26 Nov 2006 20:27:37 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <op.tjk7egk5y3d107@office2>
References: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
	<op.tjk7egk5y3d107@office2>
Message-ID: <bf82ea70611260127g68f4a13yb794e2f3e4d860ed@mail.gmail.com>

On 11/26/06, Eric Mangold <teratorn at twistedmatrix.com> wrote:
> On Thu, 23 Nov 2006 19:45:37 -0600, Rasjid Wilcox <rasjidw at gmail.com>
> wrote:
> > So has anyone used the ssh server in Conch as a secure way of providing
> > command line access a Windows machine?
>
> I'm not aware of anyone using Conch to provide ssh access to Windows, but
> it is an interesting idea.
>
> If you let me know what problems you have I will be glad to help.

Thanks.

> One thing that I would look in to would be using PowerShell instead of cmd.exe
> as the shell. If that interests you one thing to research would be which
> method of integrating PowerShell would be best. You can either run
> PowerShell.exe and communicate over stdin/stdout, *or* you can host the
> PowerShell engine in-process.

I'll probably stick with stdin/stdout, at least initially, as I have
done something along these lines before, just not within the twisted
framework.  Previously I used threading and emulated a non-blocking
process through buffering the data read.  I've been looking into
non-blocking pipe reading in win32, and it looks like there are a
coule of choices. Possibly the easiest I've seen so far uses some
calls from wxWidgets which adds another dependancy but seems to give
more control.

I'll report back when I've made some progress.

Cheers,

Rasjid.



From glyph at divmod.com  Sun Nov 26 10:52:52 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 26 Nov 2006 15:52:52 -0000
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
Message-ID: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>

On 09:27 am, rasjidw at gmail.com wrote:

>I'll probably stick with stdin/stdout, at least initially, as I have
>done something along these lines before, just not within the twisted
>framework.  Previously I used threading and emulated a non-blocking
>process through buffering the data read.  I've been looking into
>non-blocking pipe reading in win32, and it looks like there are a
>coule of choices. Possibly the easiest I've seen so far uses some
>calls from wxWidgets which adds another dependancy but seems to give
>more control.

If you're going to use stdin/stdout, just use the Twisted reactor's "spawnProcess" method, as the UNIX version of Conch does (although without the "pty" feature).  A great deal of trouble has already been put into making the Windows version of Twisted behave as if the operating system actually supported asynchronous interprocess communication.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061126/dd9d8109/attachment.htm 

From jml at mumak.net  Sun Nov 26 19:31:23 2006
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Nov 2006 11:31:23 +1100
Subject: [Twisted-Python] trac's reliability
Message-ID: <d06a5cd30611261631q52d233ael6c64ef339f4f6afb@mail.gmail.com>

Hello,

The reliability of our trac instance is ludicrous.  It is becoming
extremely difficult to do any work on Twisted, particularly during the
hours when America is asleep.

I'm very grateful for Jp's tireless efforts in making trac work as
much as it has.  I have some idea of how busy he is, and can imagine
how frustrating the task must be.  However, we can't continue running
our issue tracker like this.

First question is, what is causing the outages? People on #twisted
have commented that they haven't seen similar behaviour on their own
tracs. The outages are so frequent that this is becoming an FAQ.

The second question is, how can I help trac to work better? Would it
help to throw more hardware at the problem? Should we switch to
another tracker? (blech) Are there open tickets on trac itself that I
could submit patches for?

Finally, assuming Twisted's trac isn't going to get much better any
time soon, I would greatly appreciate being given the permissions and
training to restore trac. I think it would also be a good idea to
share the responsibility with someone in a European timezone.

Thanks,
jml



From rasjidw at gmail.com  Sun Nov 26 20:20:44 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Mon, 27 Nov 2006 12:20:44 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>
References: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>
Message-ID: <bf82ea70611261720u3328ce78ub4f5ca64a7d3ed04@mail.gmail.com>

On 11/27/06, glyph at divmod.com <glyph at divmod.com> wrote:
> If you're going to use stdin/stdout, just use the Twisted reactor's
> "spawnProcess" method, as the UNIX version of Conch does (although without
> the "pty" feature).  A great deal of trouble has already been put into
> making the Windows version of Twisted behave as if the operating system
> actually supported asynchronous interprocess communication.

Thanks for the pointer.

Rasjid.



From le.dahut at laposte.net  Mon Nov 27 04:54:48 2006
From: le.dahut at laposte.net (le dahut)
Date: Mon, 27 Nov 2006 10:54:48 +0100
Subject: [Twisted-Python] Perspective Broker
Message-ID: <456AB5E8.7010801@laposte.net>

Hello,

Using PB, I've setup a system where clients can control other clients in 
this way :

client1 executes "remote_do_something" on server1 with "ip_client2" as 
argument.
Then server1 connects to client2 and executes "remote_smthng" on it.

code is like this :
- client1:
"""
factory = pb.PBClientFactory()
reactor.connectTCP(ip_server1, port, factory)
d = factory.getRootObject()
d.addCallback(lambda object: object.callRemote("do_something", ip_client2))
d.addCallback(client1_call_b)
d.addErrback(client1_err_b)
"""

- server1:
"""
def remote_do_something(ip):
     factory = pb.PBClientFactory()
     reactor.connectTCP(ip_client2, port, factory)
     d = factory.getRootObject()
     d.addCallback(lambda object: object.callRemote("smthng"))
     d.addCallback(server1_call_b)
     d.addErrback(server1_err_b)

"""

- client2:
"""
def remote_smthng():
     <code>
     return "Ok, everything's done"
"""

How can client1 get client2's answer ?

Thanks



From mszumocki at contman.pl  Mon Nov 27 05:33:29 2006
From: mszumocki at contman.pl (Maciej Szumocki)
Date: Mon, 27 Nov 2006 11:33:29 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: E1GnIrj-0001ro-03@pyramid.twistedmatrix.com
Message-ID: <20061127103329.d1cdfb51@poczta.contman.pl>

> Date: Thu, 23 Nov 2006 07:39:58 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] SQLAlchemy integration
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:> 	<20061123073958.22613.1053884361.divmod.xquotient.5 at joule.divmod.com>
> Content-Type: text/plain; charset="utf-8"
> 
> On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:
> 
> >I'm writing some modules for integrating SQLALchemy with Twisted.
> >The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
> 
> >I would like to know if there are some other people working on this
> >(excluding sAsync)
> 
> Is there really a good reason for having *two* different efforts to
> integrate Twisted with a single other library?  Surely it must be possible
> to collaborate somehow.

I also use both Twisted and SQLAlchemy in one project. Unfortunately, using
sAsync is not an option for me due to licensing issue (sAsync is released under GPL).

Maciej Szumocki



From christian.simms at gmail.com  Mon Nov 27 06:37:13 2006
From: christian.simms at gmail.com (christian simms)
Date: Mon, 27 Nov 2006 06:37:13 -0500
Subject: [Twisted-Python] Perspective Broker
In-Reply-To: <456AB5E8.7010801@laposte.net>
References: <456AB5E8.7010801@laposte.net>
Message-ID: <cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>

On 11/27/06, le dahut <le.dahut at laposte.net> wrote:
> Hello,
>
> Using PB, I've setup a system where clients can control other clients in
> this way :
>
> client1 executes "remote_do_something" on server1 with "ip_client2" as
> argument.
> Then server1 connects to client2 and executes "remote_smthng" on it.

I haven't used PB before, but I have used other protocols with
Deferreds.  Assuming your PB code is OK, you're only missing a couple
lines related to callbacks, which I'll insert below.

> code is like this :
> - client1:
> """
> factory = pb.PBClientFactory()
> reactor.connectTCP(ip_server1, port, factory)
> d = factory.getRootObject()
> d.addCallback(lambda object: object.callRemote("do_something", ip_client2))
> d.addCallback(client1_call_b)
> d.addErrback(client1_err_b)

Please note that above, your client1_call_b function will be called
with its argument being the result of the remote method call
"do_something".

> """
>
> - server1:
> """
> def remote_do_something(ip):
>      factory = pb.PBClientFactory()
>      reactor.connectTCP(ip_client2, port, factory)
>      d = factory.getRootObject()
>      d.addCallback(lambda object: object.callRemote("smthng"))
>      d.addCallback(server1_call_b)
>      d.addErrback(server1_err_b)

Above, you need to add a "return d" statement at the very end of your
function "remote_do_something", or else Twisted won't know that the
output of the function "remote_do_something" should be the end result
of your Deferred "d".  Also, your function "server1_call_b" MUST
return its argument, or else the result will not get passed along.  It
could look something like this:

def server1_call_b(out):
    return out

The argument to server1_call_b is the result from the
"object.callRemote('smthng')" statement, and we are simply returning
it.  In fact, if that's all the function did, you should not even
define it (or use it in the callback chain) since it's not necessary.
But if you forgot the return statement then you would get Python's
default return value from a function, None, instead of the value.

>
> """
>
> - client2:
> """
> def remote_smthng():
>      <code>
>      return "Ok, everything's done"
> """
>
> How can client1 get client2's answer ?
>
> Thanks

Hopefully that does it.

Cheers,
Christian


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Nov 27 10:07:32 2006
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 27 Nov 2006 15:07:32 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>


On 12:31 am, jml at mumak.net wrote:
>Hello,
>
>The reliability of our trac instance is ludicrous.  It is becoming
>extremely difficult to do any work on Twisted, particularly during the
>hours when America is asleep.
>
>I'm very grateful for Jp's tireless efforts in making trac work as
>much as it has.  I have some idea of how busy he is, and can imagine
>how frustrating the task must be.  However, we can't continue running
>our issue tracker like this.
>
>First question is, what is causing the outages? People on #twisted
>have commented that they haven't seen similar behaviour on their own
>tracs. The outages are so frequent that this is becoming an FAQ.

There are several problems:

  Segfaults in the svn bindings - in correspondence with the trac team, I have been told (almost in so many words) that bdb-backed svn repositories are unsupported and we should switch to fsfs.

  Segfaults in the SQLite bindings - likewise, in correspondence with the trac team, I have more or less been told that SQLite is not a supported database engine and that we should switch to PostgreSQL.

  Deadlocks in... who knows where.

>
>The second question is, how can I help trac to work better? Would it
>help to throw more hardware at the problem? Should we switch to
>another tracker? (blech) Are there open tickets on trac itself that I
>could submit patches for?

It might be possible to resolve the above mentioned problems.

If we convert the repository to fsfs, we might find the segfaults from the svn bindings disappear (of course, we might not - I think we can all recognize the quality of this sort of bug stomping).  In addition to the actual task of converting, involved in this would be some level of investigation into the level of stability of the fsfs backend available in the version of debian used on wolfwood, an effort to package or have packaged a newer version, or an upgrade of wolfwood (however, since even edgy lacks svn 1.4, this probably isn't a useful endeavour).  This may also involve recompiling several packages on pyramid to add fsfs support or remove bdb support.

If we convert the trac database to use PostgreSQL, the SQLite segfaults will hopefully go away. ;)  This involves setting up a PostgreSQL server which we can use for trac (one is running on pyramid now, for the benefit of buildbot, beyond that, what state it is in is not clear to me).  There is a tool available from edgewall which is supposed to be capable of moving data from a SQLite database to a PostgreSQL database.  The various scripts and utilities which we have (eg, the weekly bug summary) may also need to be adjusted (I forget to what extent they are tied to SQLite).  Then, as an ongoing task, someone will need to maintain the PostgreSQL server.

As for the random deadlocks which occur... I see no realistic course of action which is likely to resolve these.  Perhaps, if the above changes are enacted, we will be lucky they will just go away by themselves.  That seems to be the attitude of the trac developers, anyway.

>
>Finally, assuming Twisted's trac isn't going to get much better any
>time soon, I would greatly appreciate being given the permissions and
>training to restore trac. I think it would also be a good idea to
>share the responsibility with someone in a European timezone.

Before I left last week I set up a cron job to take care of this.  When I returned it was still doing its job, so the level of availability seen over the past week or so may be the highest we can expect until we do something else fundamental to fix the issue.  However, the SSH key you gave me long ago is still in place and you should still have access to restart the server (just connecting should do it).

Personally, I am in favor of switching away from trac, as I have been since
shortly before we adopted it. ;)  The only open question is when the replacement will be ready.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061127/12e9e154/attachment.htm 

From therve at free.fr  Mon Nov 27 10:51:56 2006
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 27 Nov 2006 16:51:56 +0100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <1164642716.456b099cc9579@imp2-g19.free.fr>

Quoting exarkun at divmod.com:

>   Segfaults in the svn bindings - in correspondence with the trac team, I
> have been told (almost in so many words) that bdb-backed svn repositories are
> unsupported and we should switch to fsfs.

I think it's a good advice: fsfs is far more stable than bdb (in my experience
of course). It's been advised by subversion for 2 years now.

> [snip]
> If we convert the trac database to use PostgreSQL, the SQLite segfaults will
> hopefully go away. ;)  This involves setting up a PostgreSQL server which we
> can use for trac (one is running on pyramid now, for the benefit of buildbot,
> beyond that, what state it is in is not clear to me).  There is a tool
> available from edgewall which is supposed to be capable of moving data from a
> SQLite database to a PostgreSQL database.  The various scripts and utilities
> which we have (eg, the weekly bug summary) may also need to be adjusted (I
> forget to what extent they are tied to SQLite).  Then, as an ongoing task,
> someone will need to maintain the PostgreSQL server.

FWIW, I'd be volunteer to help on a SQLite to Postgres migration.

> Personally, I am in favor of switching away from trac, as I have been since
> shortly before we adopted it. ;)  The only open question is when the
> replacement will be ready.

What's your main reason ? Is it the problem of stability or a problem of
functionnality ? Twisted tracker is the only one I know that have so many
problems with reliability. But most (big) trackers have made the move to
Postgres.

For functionality, I don't think you remember the roundup tracker :).

--
Thomas



From general at eepatents.com  Mon Nov 27 12:21:06 2006
From: general at eepatents.com (Ed Suominen)
Date: Mon, 27 Nov 2006 09:21:06 -0800
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
Message-ID: <456B1E82.5060507@eepatents.com>

>>> I'm writing some modules for integrating SQLALchemy with Twisted.
>>> The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
>>> I would like to know if there are some other people working on this
>>> (excluding sAsync)
>> Is there really a good reason for having *two* different efforts to
>> integrate Twisted with a single other library?  Surely it must be
>> possible to collaborate somehow.

I agree with Glyph. I've put a ton of effort into sAsync, which would
cost thousands of dollars at even a fraction of what I charge for "real"
work. Why not make use of that?

It is GPL'd, but I have one user implementing it in a commercial project
now under a special license that he obtained by doing some coding of his
own for me. (My thanks to the Twisted developers for making Twisted
itself available under a no-strings-attached license, and thus providing
me the opportunity for that sort of modest compensation.)

> This works because Engine implements the Connectable interface.
> There is an issue here: if a query/table is bound to this Engine, every
> query will run in a separate thread; this is not what one want when
> inside a transaction).

Perhaps you should take a closer look at what sAsync does before
dismissing it. sAsync has a taskqueue module that it uses to queue up
transactions so that they are *all* run in a single, dedicated thread.

> More complex is the integration with sqlalchemy session handling.
> 
> As an example with Nevow:
> - a thread retrieve an object from the database
> - another thread modify the object
>
> It would be much simple if the two operations occur in the same thread
> (this require to run renderHTTP or locateChild in a separate thread but
> I ignore if this is safe).

Again, the two operations *do* run in the same thread under sAsync, as
do all other SQLAlchemy operations that are run via methods of
AccessBroker. All you have to do is decorate the method with @transact
and it will run via the queue and the dedicated thread.

So, you may not want to re-invent the wheel on this one. By the way, I
try to be responsive to user comments, ideas, and patches. Some have
already improved sAsync quite a bit.

Best regards,
Ed Suominen
Developer of sAsync: http://foss.eepatents.com/sAsync



From foom at fuhm.net  Mon Nov 27 12:41:26 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Nov 2006 12:41:26 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>

On Nov 27, 2006, at 10:07 AM, exarkun at divmod.com wrote:
>   Segfaults in the svn bindings - in correspondence with the trac  
> team, I have been told (almost in so many words) that bdb-backed  
> svn repositories are unsupported and we should switch to fsfs.

FSFS works on svn 1.1.3 (which is what's on wolfwood now). However,  
there have been quite a few improvements since  then (like better  
binary diff algorithm), and it really would be nice to have svn 1.4  
so that we can use svnsync. I've successfully compiled it from source  
(~foom/svn14-install), but I don't think I'll be able to make a  
working debian package since there seem to be a large number of  
differences between the 1.1.3 debian packaging and 1.4 debian  
packaging, and the 1.4 debian packaging doesn't stand a chance of  
working on woody. If we're okay with installing in /usr/local, it  
should be fine.

James



From ncesar at lunix.com.ar  Mon Nov 27 12:55:30 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Mon, 27 Nov 2006 14:55:30 -0300
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <200611271455.31055.ncesar@lunix.com.ar>

El Lunes, 27 de Noviembre de 2006 12:07, exarkun at divmod.com escribi?:
> ? Segfaults in the svn bindings - in correspondence with the trac team, I
> have been told (almost in so many words) that bdb-backed svn repositories
> are unsupported and we should switch to fsfs.

IT's SOOOO easy to migrate to fsfs! 

Here is the recipe: ($REPO is the name of the repository, $USUARIO is the user 
and $GRUPO is the group.)

svnadmin dump $REPO > $REPO.svn.dump
svnadmin create --fs-type fsfs $REPO-fsfs
svnadmin load $REPO-fsfs < $REPO.svn.dump
mv $REPO $REPO.old
mv $REPO-fsfs $REPO
chown -R $USUARIO.$GRUPO $REPO && chmod -R g+w $REPO


and with that  $REPO.svn.dump it's also easy to migrate from server to 
server... 
-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061127/27d37eb1/attachment.pgp 

From ncesar at lunix.com.ar  Mon Nov 27 13:19:00 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Mon, 27 Nov 2006 15:19:00 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>
References: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>
Message-ID: <200611271519.00272.ncesar@lunix.com.ar>

El S?bado, 25 de Noviembre de 2006 02:39, glyph at divmod.com escribi?:
> >I was wondering if twistd/the application class could have a "exit on
> >Exception" for this type of operations.
>
> In general this is a bad idea. ?There are basically 3 kinds of code you can
> write with Twisted:
>
> ? 1. Infrastructure code, which implements a protocol and provides APIs for
> parsing and dealing with events. ?This kind of code should never contain a
> reactor.stop at all.
(..)
> 3. Programs which do one operation, then stop themselves. ?This kind of
> code should contain exactly 1 call to reactor.stop, in the final
> callback/errback of the Deferred representing the operation that it is run
> to perform.
>
> It sounds like you are writing code of type 3.

Actually is type 1, but there are horrible (network) conditions were de 
application should stop.

> If you *don't* structure your program this way, then you'll discover later
> that sometimes, you want to run your particular operation TWICE in the
> lifetime of the process instead of once, and you will have to deal with
> dozens of calls to reactor.stop littered around your application in lots of
> places.

Even it's not type 3, I get your point. And thats why I didn't want to write 
ANY reactor.stop() call, instead just raise exceptions- And have a unnified 
reactor.stop() inside somewhere in twistd. But it seems I need to think 
another solution. Right now as a workaround, reactor.stop() will be inside my 
exception's __init__ function ;-)

> Don't try to always stop the *process* when your program is 
> complete: stop the *program* by keeping a Deferred around which represents
> its complete run. ?That way the *driver* for the program is responsible for
> stopping it, and when you want to aggregate multiple runs of it, you can
> easily use a tool like DeferredList, or do something different in the
> callbacks at the end.

I couldn't understand much of this last parragraph (my English reading could 
be part of the problem). I understand algorithms mucho more when are written 
in python instead of English,  Do you have a link to some code explaning 
this?


Thanks Glyph again for your detailed mail,
-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061127/2cbdd164/attachment.pgp 

From therve at free.fr  Mon Nov 27 13:28:15 2006
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 27 Nov 2006 19:28:15 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <456B1E82.5060507@eepatents.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
	<456B1E82.5060507@eepatents.com>
Message-ID: <1164652095.456b2e3f03fae@imp2-g19.free.fr>

Quoting Ed Suominen <general at eepatents.com>:

> [snip]
> Ed Suominen
> Developer of sAsync: http://foss.eepatents.com/sAsync

I steal this thread to talk about sAsync tracker, where you close the ticket
system because of spam: it's very hard to report problems and/or contribute
without that. Askimet integration prevents most of spam, even if there's a lot
of false positive.

That said, I'd be glad to push sAsync as 'official' SQLAlchemy integration with
Twisted.

(We're talking about Trac too much today :))

--
Thomas



From exarkun at divmod.com  Mon Nov 27 13:54:34 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 13:54:34 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <1164642716.456b099cc9579@imp2-g19.free.fr>
Message-ID: <20061127185434.20948.1561921503.divmod.quotient.47811@ohm>

On Mon, 27 Nov 2006 16:51:56 +0100, Thomas Herv? <therve at free.fr> wrote:
>Quoting exarkun at divmod.com:
>
>>   Segfaults in the svn bindings - in correspondence with the trac team, I
>> have been told (almost in so many words) that bdb-backed svn repositories are
>> unsupported and we should switch to fsfs.
>
>I think it's a good advice: fsfs is far more stable than bdb (in my experience
>of course). It's been advised by subversion for 2 years now.

Do you have a lot of experience with fsfs with svn 1.1.3?  Personally, I haven't found any defects in bdb svn.  The only reason I have to switch right now is the assurance of the trac developers that it will make something more stable (they do not have a good track record in this department).

>
>> [snip]
>> If we convert the trac database to use PostgreSQL, the SQLite segfaults will
>> hopefully go away. ;)  This involves setting up a PostgreSQL server which we
>> can use for trac (one is running on pyramid now, for the benefit of buildbot,
>> beyond that, what state it is in is not clear to me).  There is a tool
>> available from edgewall which is supposed to be capable of moving data from a
>> SQLite database to a PostgreSQL database.  The various scripts and utilities
>> which we have (eg, the weekly bug summary) may also need to be adjusted (I
>> forget to what extent they are tied to SQLite).  Then, as an ongoing task,
>> someone will need to maintain the PostgreSQL server.
>
>FWIW, I'd be volunteer to help on a SQLite to Postgres migration.
>

If we decide to do this, some tickets will probably appear in the tracker.  I'm sure you'll notice them. :)  Thanks for offering to help.

>> Personally, I am in favor of switching away from trac, as I have been since
>> shortly before we adopted it. ;)  The only open question is when the
>> replacement will be ready.
>
>What's your main reason ? Is it the problem of stability or a problem of
>functionnality ? Twisted tracker is the only one I know that have so many
>problems with reliability. But most (big) trackers have made the move to
>Postgres.

Stability and limited usability.  The only real killer feature trac has is linking from the wiki to the ticket tracker to the svn browser.  Each of these independently is only okay (the ticket tracker on its own is pretty lame), but cross-domain links are handy.

>
>For functionality, I don't think you remember the roundup tracker :).
>

As an issue tracker, roundup is at least as good as trac, I think.  As a whole website dealie, trac clearly has a bit more going for it.

Jean-Paul



From exarkun at divmod.com  Mon Nov 27 13:57:14 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 13:57:14 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <200611271455.31055.ncesar@lunix.com.ar>
Message-ID: <20061127185714.20948.1693744160.divmod.quotient.47816@ohm>

On Mon, 27 Nov 2006 14:55:30 -0300, "Nicolas D. Cesar" <ncesar at lunix.com.ar> wrote:
>El Lunes, 27 de Noviembre de 2006 12:07, exarkun at divmod.com escribi?:
>>   Segfaults in the svn bindings - in correspondence with the trac team, I
>> have been told (almost in so many words) that bdb-backed svn repositories
>> are unsupported and we should switch to fsfs.
>
>IT's SOOOO easy to migrate to fsfs!
>

I know.  But you disregarded the rest of the points I raised regarding the transition.

Jean-Paul



From foom at fuhm.net  Mon Nov 27 14:04:53 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Nov 2006 14:04:53 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>
Message-ID: <034B2DCB-9C67-4878-ABDA-FCE10FD2B649@fuhm.net>


On Nov 27, 2006, at 12:41 PM, James Y Knight wrote:

> On Nov 27, 2006, at 10:07 AM, exarkun at divmod.com wrote:
>>   Segfaults in the svn bindings - in correspondence with the trac  
>> team, I have been told (almost in so many words) that bdb-backed  
>> svn repositories are unsupported and we should switch to fsfs.
>
> FSFS works on svn 1.1.3 (which is what's on wolfwood now). However,  
> there have been quite a few improvements since  then (like better  
> binary diff algorithm), and it really would be nice to have svn 1.4  
> so that we can use svnsync. I've successfully compiled it from  
> source (~foom/svn14-install), but I don't think I'll be able to  
> make a working debian package since there seem to be a large number  
> of differences between the 1.1.3 debian packaging and 1.4 debian  
> packaging, and the 1.4 debian packaging doesn't stand a chance of  
> working on woody. If we're okay with installing in /usr/local, it  
> should be fine.

The other option is to upgrade wolfwood to debian stable ("sarge")  
and then just install svn 1.4 from testing. That might be a good idea  
anyhow, since oldstable is, well, old. And unsupported.

James




From p.mayers at imperial.ac.uk  Mon Nov 27 16:26:39 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 27 Nov 2006 21:26:39 +0000
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <456B580F.50505@imperial.ac.uk>

exarkun at divmod.com wrote:
> If we convert the repository to fsfs, we might find the segfaults from 
> the svn bindings disappear (of course, we might not - I think we can all 
> recognize the quality of this sort of bug stomping).  In addition to the 

Whilst I agree generally those kinds of statements are disturbing, in 
this particular case I can offer my 100%-independent support for that 
action.

BDB backends for SVN are disastrous. People should not under any 
circumstances use them for new installations, and unless it is 
absolutely not achievable, people running SVN installations should 
migrate away to fsfs as soon as possible.



From manlio_perillo at libero.it  Mon Nov 27 16:44:35 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 27 Nov 2006 22:44:35 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <456B1E82.5060507@eepatents.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
	<456B1E82.5060507@eepatents.com>
Message-ID: <456B5C43.6070008@libero.it>

Ed Suominen ha scritto:
>>>> I'm writing some modules for integrating SQLALchemy with Twisted.
>>>> The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
>>>> I would like to know if there are some other people working on this
>>>> (excluding sAsync)
>>> Is there really a good reason for having *two* different efforts to
>>> integrate Twisted with a single other library?  Surely it must be
>>> possible to collaborate somehow.
> 
> I agree with Glyph. I've put a ton of effort into sAsync, which would
> cost thousands of dollars at even a fraction of what I charge for "real"
> work. Why not make use of that?
> 

My original motivation was to have an interface compatible with adbapi.

> It is GPL'd, but I have one user implementing it in a commercial project
> now under a special license that he obtained by doing some coding of his
> own for me. (My thanks to the Twisted developers for making Twisted
> itself available under a no-strings-attached license, and thus providing
> me the opportunity for that sort of modest compensation.)
> 
>> This works because Engine implements the Connectable interface.
>> There is an issue here: if a query/table is bound to this Engine, every
>> query will run in a separate thread; this is not what one want when
>> inside a transaction).
> 
> Perhaps you should take a closer look at what sAsync does before
> dismissing it. sAsync has a taskqueue module that it uses to queue up
> transactions so that they are *all* run in a single, dedicated thread.
> 

So sAsync uses only one thread?

>> More complex is the integration with sqlalchemy session handling.
>>
>> As an example with Nevow:
>> - a thread retrieve an object from the database
>> - another thread modify the object
>>
>> It would be much simple if the two operations occur in the same thread
>> (this require to run renderHTTP or locateChild in a separate thread but
>> I ignore if this is safe).
> 
> Again, the two operations *do* run in the same thread under sAsync, as
> do all other SQLAlchemy operations that are run via methods of
> AccessBroker. All you have to do is decorate the method with @transact
> and it will run via the queue and the dedicated thread.
> 
> So, you may not want to re-invent the wheel on this one. 


In sAsync I do not like the idea of startup method to initialize tables.

I would like to define tables where I want, so that I:
1) can create the tables on the database with a dedicated script
2) can import tables from one package to another, being able to do some
   modifications (if I need it).

> By the way, I
> try to be responsive to user comments, ideas, and patches. Some have
> already improved sAsync quite a bit.
> 


Regards  Manlio Perillo



From jml at mumak.net  Mon Nov 27 16:41:17 2006
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 28 Nov 2006 08:41:17 +1100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <456B580F.50505@imperial.ac.uk>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<456B580F.50505@imperial.ac.uk>
Message-ID: <d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>

On 11/28/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> exarkun at divmod.com wrote:
> > If we convert the repository to fsfs, we might find the segfaults from
> > the svn bindings disappear (of course, we might not - I think we can all
> > recognize the quality of this sort of bug stomping).  In addition to the
>
> Whilst I agree generally those kinds of statements are disturbing, in
> this particular case I can offer my 100%-independent support for that
> action.
>

For more information, see the Subversion book's entry on the two
backends: http://svnbook.red-bean.com/en/1.2/svn.reposadmin.html#svn.reposadmin.basics.backends

cheers,
jml



From corydodt at gmail.com  Mon Nov 27 18:12:50 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Mon, 27 Nov 2006 15:12:50 -0800
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<456B580F.50505@imperial.ac.uk>
	<d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>
Message-ID: <c16a94ff0611271512u6f08a42erb2e6c52eba874de7@mail.gmail.com>

I support using foom's /usr/local compiled SVN 1.4 on wolfwood as-is, and
migrating to fsfs.  I have used fsfs a bit here, and I'm confident that it
will not lose data.  If we migrate the SVN database, it might actually make
a server-wide upgrade to a supported (recent) OS a little easier.

I wouldn't recommend using a /usr/local compiled postgresql, however.  If we
switch to a pg backend for trac, I have a hunch things will go smoother if
the server-wide upgrade is done first.

In my head the basic plan looks like:

1- migrate to fsfs on a recent SVN.  Watch for improvements in trac.  If
trac starts to behave, stop here.

2- upgrade wolfwood server.  Watch for improvments in trac.  Upgrade pyramid
while you're in there. ;-)  If trac improves, stop here.

3- Migrate backend to pgsql.  Watch for improvements in trac.  If trac
doesn't improve, migrate to something not-trac.

Yes, I am volunteering my time.  I don't currently have any permissions on
these servers apart from commits.

C


On 11/27/06, Jonathan Lange <jml at mumak.net> wrote:
>
> On 11/28/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> > exarkun at divmod.com wrote:
> > > If we convert the repository to fsfs, we might find the segfaults from
> > > the svn bindings disappear (of course, we might not - I think we can
> all
> > > recognize the quality of this sort of bug stomping).  In addition to
> the
> >
> > Whilst I agree generally those kinds of statements are disturbing, in
> > this particular case I can offer my 100%-independent support for that
> > action.
> >
>
> For more information, see the Subversion book's entry on the two
> backends:
> http://svnbook.red-bean.com/en/1.2/svn.reposadmin.html#svn.reposadmin.basics.backends
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061127/77bcfaaf/attachment.htm 

From exarkun at divmod.com  Mon Nov 27 21:12:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 21:12:05 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <c16a94ff0611271512u6f08a42erb2e6c52eba874de7@mail.gmail.com>
Message-ID: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>

On Mon, 27 Nov 2006 15:12:50 -0800, Cory Dodt <corydodt at gmail.com> wrote:
>I support using foom's /usr/local compiled SVN 1.4 on wolfwood as-is, and
>migrating to fsfs.  I have used fsfs a bit here, and I'm confident that it
>will not lose data.  If we migrate the SVN database, it might actually make
>a server-wide upgrade to a supported (recent) OS a little easier.

FWIW, http://subversion.tigris.org/issues/show_bug.cgi?id=2467

But sure, upgrading to svn 1.4.2 on wolfwood is probably reasonable.  I'm not sure whether I'd rather see a /usr/local/ install or a systemwide upgrade to a newer version of Debian or Ubuntu.  However, it doesn't really matter which I'd rather see, since I am not wolfwood's sysadmin, and that is for whom this is a choice.

>
>I wouldn't recommend using a /usr/local compiled postgresql, however.  If we
>switch to a pg backend for trac, I have a hunch things will go smoother if
>the server-wide upgrade is done first.

Quite, I don't think anyone is thinking about doing this. :)

>
>In my head the basic plan looks like:
>
>1- migrate to fsfs on a recent SVN.  Watch for improvements in trac.  If
>trac starts to behave, stop here.

You skipped some steps here, but yes, this sounds like a reasonable thing to start with.

>
>2- upgrade wolfwood server.  Watch for improvments in trac.  Upgrade pyramid
>while you're in there. ;-)  If trac improves, stop here.

This won't have any noticable effect on trac, since trac doesn't interact with any components on wolfwood directly (nor use anything of significance from the system-wide installs of anything on pyramid).

>
>3- Migrate backend to pgsql.  Watch for improvements in trac.  If trac
>doesn't improve, migrate to something not-trac.

Making this the second step (again with some explicit pieces missing, like porting any tools we need to port), and I don't have anything to suggest we do before this.

>
>Yes, I am volunteering my time.  I don't currently have any permissions on
>these servers apart from commits.
>

Great, thank you.

Jean-Paul



From glyph at divmod.com  Tue Nov 28 04:07:48 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 28 Nov 2006 09:07:48 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>

On 27 Nov, 06:19 pm, ncesar at lunix.com.ar wrote:
>El S?bado, 25 de Noviembre de 2006 02:39, glyph at divmod.com escribi?:
>> >I was wondering if twistd/the application class could have a "exit on
>> >Exception" for this type of operations.

>> In general this is a bad idea.  There are basically 3 kinds of code you can
>> write with Twisted:
>>
>>   1. Infrastructure code, which implements a protocol and provides APIs for
>> parsing and dealing with events.  This kind of code should never contain a
>> reactor.stop at all.

>Actually is type 1, but there are horrible (network) conditions were de
>application should stop.

No, there aren't.  What happens when I run your application in-process with my webserver?  Should the webserver stop simply because your protocol is not working?

>Even it's not type 3, I get your point. And thats why I didn't want to write
>ANY reactor.stop() call, instead just raise exceptions- And have a unnified
>reactor.stop() inside somewhere in twistd. But it seems I need to think
>another solution. Right now as a workaround, reactor.stop() will be inside my
>exception's __init__ function ;-)

Just don't call reactor.stop at all unless you are writing top-level infrastructure code.  Your application should have some other, more structured way of reporting fatal shut-down errors to its run container (e.g. runContainer.applicationEncounteredFatal(xxx)), not simply raising exceptions and hoping someone is listening.  Unless you give more specifics that indicate that your special case is special-er than any other I've seen before, I'll stand by this. :)

>> Don't try to always stop the *process* when your program is
>> complete: stop the *program* by keeping a Deferred around which represents
>> its complete run.  That way the *driver* for the program is responsible for
>> stopping it, and when you want to aggregate multiple runs of it, you can
>> easily use a tool like DeferredList, or do something different in the
>> callbacks at the end.
>
>I couldn't understand much of this last parragraph (my English reading could
>be part of the problem). I understand algorithms mucho more when are written
>in python instead of English,  Do you have a link to some code explaning
>this?

It's hard for me to think of a program which does this in a simple way.  If I can think of one I will post an example.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061128/e1eb623b/attachment.htm 

From glyph at divmod.com  Tue Nov 28 04:13:23 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 28 Nov 2006 09:13:23 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>

On 27 Nov, 07:04 pm, foom at fuhm.net wrote:

>The other option is to upgrade wolfwood to debian stable ("sarge")  and then 
>just install svn 1.4 from testing. That might be a good idea  anyhow, since 
>oldstable is, well, old. And unsupported.

It would be good to know, for the purposes of such discussions, who the official admin of these hosts is.  If I knew, I'd ask that person to please upgrade everything to Dapper, thanks to its long updates support cycle and my relatively stable experience with it.  Without knowing who it was and how long it's going to take though, it's hard to make suggestions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061128/f432ced0/attachment.htm 

From le.dahut at laposte.net  Tue Nov 28 09:57:01 2006
From: le.dahut at laposte.net (le dahut)
Date: Tue, 28 Nov 2006 15:57:01 +0100
Subject: [Twisted-Python] Perspective Broker
In-Reply-To: <cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>
References: <456AB5E8.7010801@laposte.net>
	<cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>
Message-ID: <456C4E3D.80304@laposte.net>

Thanks, I didn't understand that Callbacks are "chainable" also between 
the different PB actors.

It's a bit difficult to understand but once is done, it's a pleasure to 
use :-) .


christian simms a ?crit :
> On 11/27/06, le dahut <le.dahut at laposte.net> wrote:
>> Hello,
>>
>> Using PB, I've setup a system where clients can control other clients in
>> this way :
>>
>> client1 executes "remote_do_something" on server1 with "ip_client2" as
>> argument.
>> Then server1 connects to client2 and executes "remote_smthng" on it.
> 
> I haven't used PB before, but I have used other protocols with
> Deferreds.  Assuming your PB code is OK, you're only missing a couple
> lines related to callbacks, which I'll insert below.
> 
>> code is like this :
>> - client1:
>> """
>> factory = pb.PBClientFactory()
>> reactor.connectTCP(ip_server1, port, factory)
>> d = factory.getRootObject()
>> d.addCallback(lambda object: object.callRemote("do_something", 
>> ip_client2))
>> d.addCallback(client1_call_b)
>> d.addErrback(client1_err_b)
> 
> Please note that above, your client1_call_b function will be called
> with its argument being the result of the remote method call
> "do_something".
> 
>> """
>>
>> - server1:
>> """
>> def remote_do_something(ip):
>>      factory = pb.PBClientFactory()
>>      reactor.connectTCP(ip_client2, port, factory)
>>      d = factory.getRootObject()
>>      d.addCallback(lambda object: object.callRemote("smthng"))
>>      d.addCallback(server1_call_b)
>>      d.addErrback(server1_err_b)
> 
> Above, you need to add a "return d" statement at the very end of your
> function "remote_do_something", or else Twisted won't know that the
> output of the function "remote_do_something" should be the end result
> of your Deferred "d".  Also, your function "server1_call_b" MUST
> return its argument, or else the result will not get passed along.  It
> could look something like this:
> 
> def server1_call_b(out):
>    return out
> 
> The argument to server1_call_b is the result from the
> "object.callRemote('smthng')" statement, and we are simply returning
> it.  In fact, if that's all the function did, you should not even
> define it (or use it in the callback chain) since it's not necessary.
> But if you forgot the return statement then you would get Python's
> default return value from a function, None, instead of the value.
> 
>>
>> """
>>
>> - client2:
>> """
>> def remote_smthng():
>>      <code>
>>      return "Ok, everything's done"
>> """
>>
>> How can client1 get client2's answer ?
>>
>> Thanks
> 
> Hopefully that does it.
> 
> Cheers,
> Christian
> 
> 
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From foom at fuhm.net  Wed Nov 29 00:53:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Nov 2006 00:53:41 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
Message-ID: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>

Current trac status:
more or less working.

The immediate reason trac was hanging repeatedly *this time* is that  
trac's private mirror of the SVN repository was broken (svn info  
file:///$repo was also hanging, even though no other processes had  
the svn database open). svnadmin recover fixed it. So Trac seems to  
be working...for the moment. I've also disabled the daily synch from  
the real svn repo to see if that helps it keep running. I *think* the  
problem will reoccur anyhow, because I think trac/svn is somehow  
(recoverably) corrupting the bdb repo, but it's possible the copying  
process is what corrupting things but with a delayed effect. This  
also doesn't explain all the trac problems, only the one particular  
one that caused trac to be consistently unavailable for most of the  
morning.

In addition, wolfwood is now running Debian Sarge. Seemingly with no  
casualties. Also: old unused services: freshcvs, tmcvs irc bot have  
been shut down. Local install of viewcvs replaced with packaged  
version (slightly newer, too, I guess). Probably sometime in the next  
few days I'll look into upgrading svn.

James



From corydodt+hello at gmail.com  Wed Nov 29 01:57:07 2006
From: corydodt+hello at gmail.com (Cory Dodt)
Date: Tue, 28 Nov 2006 22:57:07 -0800
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <c16a94ff0611282257r5f32567fv1f2e408651800cb1@mail.gmail.com>

Thanks a lot James, I'm knocking on wood that it stays up.

C


On 11/28/06, James Y Knight <foom at fuhm.net> wrote:
>
> Current trac status:
> more or less working.
>
> The immediate reason trac was hanging repeatedly *this time* is that
> trac's private mirror of the SVN repository was broken (svn info
> file:///$repo was also hanging, even though no other processes had
> the svn database open). svnadmin recover fixed it. So Trac seems to
> be working...for the moment. I've also disabled the daily synch from
> the real svn repo to see if that helps it keep running. I *think* the
> problem will reoccur anyhow, because I think trac/svn is somehow
> (recoverably) corrupting the bdb repo, but it's possible the copying
> process is what corrupting things but with a delayed effect. This
> also doesn't explain all the trac problems, only the one particular
> one that caused trac to be consistently unavailable for most of the
> morning.
>
> In addition, wolfwood is now running Debian Sarge. Seemingly with no
> casualties. Also: old unused services: freshcvs, tmcvs irc bot have
> been shut down. Local install of viewcvs replaced with packaged
> version (slightly newer, too, I guess). Probably sometime in the next
> few days I'll look into upgrading svn.
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061128/d0ffb82b/attachment.htm 

From hxianping at gmail.com  Wed Nov 29 03:05:42 2006
From: hxianping at gmail.com (Steve Han)
Date: Wed, 29 Nov 2006 16:05:42 +0800
Subject: [Twisted-Python] Why I have not gotten any mail in this list?
Message-ID: <702805a90611290005j3ece61eeu7d6b0103400c47f0@mail.gmail.com>

Anyone help me?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061129/3203953b/attachment.htm 

From duncan.mcgreggor at gmail.com  Wed Nov 29 03:18:13 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 29 Nov 2006 01:18:13 -0700
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>
References: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>
Message-ID: <456D4245.5000306@gmail.com>

Jean-Paul Calderone wrote:

>> I support using foom's /usr/local compiled SVN 1.4 on wolfwood 
>> as-is, and migrating to fsfs. I have used fsfs a bit here, and I'm 
>> confident that it will not lose data.  If we migrate the SVN
>> database, it might actually make a server-wide upgrade to a
>> supported (recent) OS a little easier.
> 
> FWIW, http://subversion.tigris.org/issues/show_bug.cgi?id=2467
> 
> But sure, upgrading to svn 1.4.2 on wolfwood is probably reasonable.

A heads up, in case anyone has missed this:
  http://trac.edgewall.org/wiki/TracSubversion#TracandSubversion1.4

Note the outstanding issues...

d



From glyph at divmod.com  Wed Nov 29 05:08:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Nov 2006 10:08:32 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061129100832.11053.252026376.divmod.xquotient.754@joule.divmod.com>

On 05:53 am, foom at fuhm.net wrote:
>Current trac status:
>more or less working.

On behalf of everyone using Twisted's trac, thanks a lot for putting some work into this. :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061129/8d41b7fd/attachment.htm 

From mwh at python.net  Wed Nov 29 05:14:52 2006
From: mwh at python.net (Michael Hudson)
Date: Wed, 29 Nov 2006 11:14:52 +0100
Subject: [Twisted-Python] Re: trac's reliability
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <87fyc2imoz.fsf@starship.python.net>

James Y Knight <foom at fuhm.net> writes:

> Current trac status:
> more or less working.

Hooray!

> The immediate reason trac was hanging repeatedly *this time* is that
> trac's private mirror of the SVN repository was broken (svn info
> file:///$repo was also hanging, even though no other processes had
> the svn database open). svnadmin recover fixed it. So Trac seems to
> be working...for the moment. I've also disabled the daily synch from
> the real svn repo to see if that helps it keep running. I *think* the
> problem will reoccur anyhow, because I think trac/svn is somehow
> (recoverably) corrupting the bdb repo, but it's possible the copying
> process is what corrupting things but with a delayed effect. This
> also doesn't explain all the trac problems, only the one particular
> one that caused trac to be consistently unavailable for most of the
> morning.

Certainly, the behaviour around this time yesterday was just crazy.
Congrats on getting that much fixed :-)

Cheers,
mwh

-- 
  To summarise the summary of the summary:- people are a problem.
                   -- The Hitch-Hikers Guide to the Galaxy, Episode 12




From markus at bluegap.ch  Wed Nov 29 13:47:45 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Wed, 29 Nov 2006 19:47:45 +0100
Subject: [Twisted-Python] blockingCallFromThread, ticket 1042
Message-ID: <456DD5D1.7030907@bluegap.ch>

Hi,

A long time ago, I've been asking about a blocking callFromThread 
function and have been pointed to ticket 1042 at [1]. What's the state 
on that? Does that have a change of being integrated into twisted?

Regards

Markus

[1]: http://twistedmatrix.com/trac/ticket/1042



From glyph at divmod.com  Wed Nov 29 14:16:44 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Nov 2006 19:16:44 -0000
Subject: [Twisted-Python] blockingCallFromThread, ticket 1042
Message-ID: <20061129191644.11053.2009957853.divmod.xquotient.841@joule.divmod.com>

On 06:47 pm, markus at bluegap.ch wrote:

>A long time ago, I've been asking about a blocking callFromThread function 
>and have been pointed to ticket 1042 at [1]. What's the state on that? Does 
>that have a change of being integrated into twisted?

At the very least, the function there needs tests, documentation, and a use-case for some code that is going to want to call it from within Twisted - and I don't think there is any currently.

There are probably a few things that are painful to do without such a function, but in general this sort of thing is just a recipie for deadlocks and running out of threads in your pool, so I am not inclined to push it forward.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20061129/c70e89be/attachment.htm 

From foom at fuhm.net  Wed Nov 29 14:55:07 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Nov 2006 14:55:07 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>

On Nov 29, 2006, at 12:53 AM, James Y Knight wrote:
> Current trac status:
> more or less working.

So, two issues. Are there volunteers for following up on these with  
trac developers? I don't much feel like it, and JP says he's tired of  
doing it.

1) Trac just plain doesn't work with BDB. Pounding it with queries  
will reliably cause the process to segfault:

/usr/sbin/ab2 -t 1000 -c10 -n100 http://host/trac/browser/

Segfaults every time. Here's two backtraces. This is fixed by using  
fsfs.

Program terminated with signal 11, Segmentation fault.

#0  0xb6a994d8 in apr_pool_destroy (pool=0x1c1) at apr_pools.c:727
727         while (pool->child)
(gdb) bt
#0  0xb6a994d8 in apr_pool_destroy (pool=0x1c1) at apr_pools.c:727
#1  0xb6a994e9 in apr_pool_destroy (pool=0x8fc1500) at apr_pools.c:728
#2  0xb6c09154 in svn_error_clear (err=0x8c908b0) at subversion/ 
libsvn_subr/error.c:273
#3  0xb6a1a9a8 in svn_fs_bdb__wrap_db (fs=0x85f8a70,
     operation=0xb6a3304f "opening 'nodes' table", db_err=0)
     at subversion/libsvn_fs_base/bdb/bdb-err.c:93
#4  0xb6a23026 in open_databases (fs=0x85f8a70, create=0,
     path=0x85f8570 "/home/trac/svn/Twisted/db", pool=0x85f8270)
     at subversion/libsvn_fs_base/fs.c:559
#5  0xb6a23488 in base_open (fs=0x85f8a70, path=0x8fc1500 "\220\004",  
pool=0x85f8270)
     at subversion/libsvn_fs_base/fs.c:685
#6  0xb6d92a21 in svn_fs_open (fs_p=0x85f8530, path=0x85f8570 "/home/ 
trac/svn/Twisted/db",
     fs_config=0x0, pool=0x85f8270) at subversion/libsvn_fs/fs- 
loader.c:367
#7  0xb697435d in get_repos (repos_p=0xb763757c, path=Variable "path"  
is not available.
)
     at subversion/libsvn_repos/repos.c:1803
#8  0xb681c394 in _wrap_svn_repos_open (self=0x0, args=0x865a7ec)
     at ./subversion/bindings/swig/python/svn_repos.c:2047
#9  0x0805950c in PyObject_Call (func=0xb68f88ec, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#10 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x1c1,  
arg=0x865a7ec, kw=0x0)
     at ../Python/ceval.c:3425
#11 0x080a87ed in builtin_apply (self=0x0, args=0x1c1) at ../Python/ 
bltinmodule.c:100
#12 0x080b6911 in PyEval_EvalFrame (f=0x8aae9a4) at ../Python/ceval.c: 
3558
#13 0x080b716d in PyEval_EvalCodeEx (co=0xb68e77a0,  
globals=0xb683e02c, locals=0x0,
     args=0x89a3fe4, argcount=2, kws=0x89a3fec, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#14 0x080b5619 in PyEval_EvalFrame (f=0x89a3e7c) at ../Python/ceval.c: 
3651
#15 0x080b716d in PyEval_EvalCodeEx (co=0xb6cc6620,  
globals=0xb6cafe84, locals=0x0,
     args=0xb00d55d8, argcount=4, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:2736
#16 0x080fb5fd in function_call (func=0xb684487c, arg=0xb00d55cc,  
kw=0x0)
     at ../Objects/funcobject.c:548
#17 0x0805950c in PyObject_Call (func=0xb684487c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#18 0x0805eac5 in instancemethod_call (func=0xb684487c,  
arg=0xb00d55cc, kw=0x1c1)
     at ../Objects/classobject.c:2447
#19 0x0805950c in PyObject_Call (func=0xb4fd52fc, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#20 0x0808a965 in slot_tp_init (self=0x1c1, args=0x1c1, kwds=0x1c1)
     at ../Objects/typeobject.c:4762
#21 0x0808ca88 in type_call (type=0x84aa764, args=0xb4a654b4, kwds=0x0)
     at ../Objects/typeobject.c:435
#22 0x0805950c in PyObject_Call (func=0x84aa764, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#23 0x080b4af7 in PyEval_EvalFrame (f=0x8d293dc) at ../Python/ceval.c: 
3766
#24 0x080b570c in PyEval_EvalFrame (f=0x8f1c974) at ../Python/ceval.c: 
3640
#25 0x080b570c in PyEval_EvalFrame (f=0x84f9d4c) at ../Python/ceval.c: 
3640
#26 0x080b716d in PyEval_EvalCodeEx (co=0xb7873c60,  
globals=0xb788279c, locals=0x0,
     args=0x9130b10, argcount=2, kws=0x9130b18, kwcount=0,  
defs=0xb78991d8, defcount=1,
     closure=0x0) at ../Python/ceval.c:2736
#27 0x080b5619 in PyEval_EvalFrame (f=0x913098c) at ../Python/ceval.c: 
3651
#28 0x080b570c in PyEval_EvalFrame (f=0x936ac2c) at ../Python/ceval.c: 
3640
#29 0x080b570c in PyEval_EvalFrame (f=0x89d8d44) at ../Python/ceval.c: 
3640
#30 0x080b570c in PyEval_EvalFrame (f=0x9074f5c) at ../Python/ceval.c: 
3640
#31 0x080b570c in PyEval_EvalFrame (f=0x936d434) at ../Python/ceval.c: 
3640
#32 0x080b716d in PyEval_EvalCodeEx (co=0xb7a395e0,  
globals=0xb7991f0c, locals=0x0,
     args=0xb4a314c0, argcount=3, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
---Type <return> to continue, or q <return> to quit---
#33 0x080fb5fd in function_call (func=0xb76e056c, arg=0xb4a314b4,  
kw=0x0)
     at ../Objects/funcobject.c:548
#34 0x0805950c in PyObject_Call (func=0xb76e056c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#35 0x0805eac5 in instancemethod_call (func=0xb76e056c,  
arg=0xb4a314b4, kw=0x1c1)
     at ../Objects/classobject.c:2447
#36 0x0805950c in PyObject_Call (func=0xb4fccb94, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#37 0x0808ac77 in slot_tp_call (self=0x1c1, args=0x1c1, kwds=0x1c1)
     at ../Objects/typeobject.c:4536
#38 0x0805950c in PyObject_Call (func=0xb765eb4c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#39 0x080b4af7 in PyEval_EvalFrame (f=0x8f7f46c) at ../Python/ceval.c: 
3766
#40 0x080b716d in PyEval_EvalCodeEx (co=0xb77e1620,  
globals=0xb77a13e4, locals=0x0,
     args=0xb4f5f898, argcount=1, kws=0x9107388, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#41 0x080fb5fd in function_call (func=0xb76e025c, arg=0xb4f5f88c,  
kw=0xb4df3cec)
     at ../Objects/funcobject.c:548
#42 0x0805950c in PyObject_Call (func=0xb76e025c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#43 0x080b4c37 in PyEval_EvalFrame (f=0x916f734) at ../Python/ceval.c: 
3835
#44 0x080b716d in PyEval_EvalCodeEx (co=0xb7b0b660,  
globals=0xb7b09b54, locals=0x0,
     args=0x89e41a0, argcount=3, kws=0x913b2d0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#45 0x080fb5fd in function_call (func=0xb7b21b54, arg=0x89e4194,  
kw=0x91ded74)
     at ../Objects/funcobject.c:548
#46 0x0805950c in PyObject_Call (func=0xb7b21b54, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#47 0x080b4c37 in PyEval_EvalFrame (f=0x9199a04) at ../Python/ceval.c: 
3835
---Type <return> to continue, or q <return> to quit---
#48 0x080b716d in PyEval_EvalCodeEx (co=0xb7b0b920,  
globals=0xb7b09b54, locals=0x0,
     args=0x89debc8, argcount=3, kws=0x907ad38, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#49 0x080fb5fd in function_call (func=0xb7b21c34, arg=0x89debbc,  
kw=0x91d1d74)
     at ../Objects/funcobject.c:548
#50 0x0805950c in PyObject_Call (func=0xb7b21c34, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#51 0x080b4c37 in PyEval_EvalFrame (f=0x81dbf84) at ../Python/ceval.c: 
3835
#52 0x080b716d in PyEval_EvalCodeEx (co=0xb76fb560,  
globals=0xb76fd24c, locals=0x0,
     args=0xb7aaad78, argcount=2, kws=0x837dfe8, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#53 0x080fb5fd in function_call (func=0xb77001ec, arg=0xb7aaad6c,  
kw=0xb7b1f79c)
     at ../Objects/funcobject.c:548
#54 0x0805950c in PyObject_Call (func=0xb77001ec, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#55 0x080b4c37 in PyEval_EvalFrame (f=0x8188e74) at ../Python/ceval.c: 
3835
#56 0x080b570c in PyEval_EvalFrame (f=0x81905fc) at ../Python/ceval.c: 
3640
#57 0x080b716d in PyEval_EvalCodeEx (co=0xb7b17ae0,  
globals=0xb7b09cec, locals=0x0,
     args=0xb7662278, argcount=1, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#58 0x080fb5fd in function_call (func=0xb7b1bdf4, arg=0xb766226c,  
kw=0x0)
     at ../Objects/funcobject.c:548
#59 0x0805950c in PyObject_Call (func=0xb7b1bdf4, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#60 0x0805eac5 in instancemethod_call (func=0xb7b1bdf4,  
arg=0xb766226c, kw=0x1c1)
     at ../Objects/classobject.c:2447
#61 0x0805950c in PyObject_Call (func=0xb7847144, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#62 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x1c1,  
arg=0xb7e1c02c, kw=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:3425
#63 0x080e003d in t_bootstrap (boot_raw=0x83d9950) at ../Modules/ 
threadmodule.c:434
#64 0xb7fb9361 in start_thread () from /lib/tls/i686/cmov/ 
libpthread.so.0
#65 0xb7f25bde in clone () from /lib/tls/i686/cmov/libc.so.6

#0  0xb5b8114b in svn_error_clear (err=0x72) at subversion/ 
libsvn_subr/error.c:273
273           apr_pool_destroy(err->pool);
(gdb) bt
#0  0xb5b8114b in svn_error_clear (err=0x72) at subversion/ 
libsvn_subr/error.c:273
#1  0xb59929a8 in svn_fs_bdb__wrap_db (fs=0x878fb50,
     operation=0xb59ab04f "opening 'nodes' table", db_err=0)
     at subversion/libsvn_fs_base/bdb/bdb-err.c:93
#2  0xb599b026 in open_databases (fs=0x878fb50, create=0,
     path=0x878f650 "/home/trac/svn/Twisted/db", pool=0x878f350)
     at subversion/libsvn_fs_base/fs.c:559
#3  0xb599b488 in base_open (fs=0x878fb50, path=0x8bccd00 "",  
pool=0x878f350)
     at subversion/libsvn_fs_base/fs.c:685
#4  0xb5d0ba21 in svn_fs_open (fs_p=0x878f610, path=0x878f650 "/home/ 
trac/svn/Twisted/db",
     fs_config=0x0, pool=0x878f350) at subversion/libsvn_fs/fs- 
loader.c:367
#5  0xb58ec35d in get_repos (repos_p=0xb00fa57c, path=Variable "path"  
is not available.
)
     at subversion/libsvn_repos/repos.c:1803
#6  0xb5794394 in _wrap_svn_repos_open (self=0x0, args=0x8b03d0c)
     at ./subversion/bindings/swig/python/svn_repos.c:2047
#7  0x0805950c in PyObject_Call (func=0xb57b558c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#8  0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x72,  
arg=0x8b03d0c, kw=0x0)
     at ../Python/ceval.c:3425
#9  0x080a87ed in builtin_apply (self=0x0, args=0x72) at ../Python/ 
bltinmodule.c:100
#10 0x080b6911 in PyEval_EvalFrame (f=0x8755524) at ../Python/ceval.c: 
3558
#11 0x080b716d in PyEval_EvalCodeEx (co=0xb5862820,  
globals=0xb57b913c, locals=0x0,
     args=0x8777e94, argcount=2, kws=0x8777e9c, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#12 0x080b5619 in PyEval_EvalFrame (f=0x8777d2c) at ../Python/ceval.c: 
3651
#13 0x080b716d in PyEval_EvalCodeEx (co=0xb5c436e0,  
globals=0xb5c2e57c, locals=0x0,
     args=0x8649380, argcount=4, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#14 0x080fb5fd in function_call (func=0xb57c08ec, arg=0x8649374, kw=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Objects/funcobject.c:548
#15 0x0805950c in PyObject_Call (func=0xb57c08ec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#16 0x0805eac5 in instancemethod_call (func=0xb57c08ec,  
arg=0x8649374, kw=0x72)
     at ../Objects/classobject.c:2447
#17 0x0805950c in PyObject_Call (func=0x863052c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#18 0x0808a965 in slot_tp_init (self=0x72, args=0x72, kwds=0x72)
     at ../Objects/typeobject.c:4762
#19 0x0808ca88 in type_call (type=0x84b4594, args=0x8ad9144, kwds=0x0)
     at ../Objects/typeobject.c:435
#20 0x0805950c in PyObject_Call (func=0x84b4594, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#21 0x080b4af7 in PyEval_EvalFrame (f=0x886c41c) at ../Python/ceval.c: 
3766
#22 0x080b570c in PyEval_EvalFrame (f=0x88f695c) at ../Python/ceval.c: 
3640
#23 0x080b570c in PyEval_EvalFrame (f=0x88f4a9c) at ../Python/ceval.c: 
3640
#24 0x080b716d in PyEval_EvalCodeEx (co=0xb77edca0,  
globals=0xb77fc79c, locals=0x0,
     args=0x88f5548, argcount=2, kws=0x88f5550, kwcount=0,  
defs=0xb78121d8, defcount=1,
     closure=0x0) at ../Python/ceval.c:2736
#25 0x080b5619 in PyEval_EvalFrame (f=0x88f53c4) at ../Python/ceval.c: 
3651
#26 0x080b570c in PyEval_EvalFrame (f=0x88f4e8c) at ../Python/ceval.c: 
3640
#27 0x080b570c in PyEval_EvalFrame (f=0x85c49fc) at ../Python/ceval.c: 
3640
#28 0x080b570c in PyEval_EvalFrame (f=0x88f345c) at ../Python/ceval.c: 
3640
#29 0x080b570c in PyEval_EvalFrame (f=0x8bdf084) at ../Python/ceval.c: 
3640
#30 0x080b716d in PyEval_EvalCodeEx (co=0xb79b3620,  
globals=0xb790bf0c, locals=0x0,
     args=0xb12db358, argcount=3, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#31 0x080fb5fd in function_call (func=0xb765a56c, arg=0xb12db34c,  
kw=0x0)
     at ../Objects/funcobject.c:548
---Type <return> to continue, or q <return> to quit---
#32 0x0805950c in PyObject_Call (func=0xb765a56c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#33 0x0805eac5 in instancemethod_call (func=0xb765a56c,  
arg=0xb12db34c, kw=0x72)
     at ../Objects/classobject.c:2447
#34 0x0805950c in PyObject_Call (func=0x8650dec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#35 0x0808ac77 in slot_tp_call (self=0x72, args=0x72, kwds=0x72)
     at ../Objects/typeobject.c:4536
#36 0x0805950c in PyObject_Call (func=0xb75d8b4c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#37 0x080b4af7 in PyEval_EvalFrame (f=0x88f475c) at ../Python/ceval.c: 
3766
#38 0x080b716d in PyEval_EvalCodeEx (co=0xb775b660,  
globals=0xb771b3e4, locals=0x0,
     args=0xaa0b6b18, argcount=1, kws=0x85b0940, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#39 0x080fb5fd in function_call (func=0xb765a25c, arg=0xaa0b6b0c,  
kw=0x8c988ac)
     at ../Objects/funcobject.c:548
#40 0x0805950c in PyObject_Call (func=0xb765a25c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#41 0x080b4c37 in PyEval_EvalFrame (f=0x898a6b4) at ../Python/ceval.c: 
3835
#42 0x080b716d in PyEval_EvalCodeEx (co=0xb7a856a0,  
globals=0xb7a83b54, locals=0x0,
     args=0x86d6588, argcount=3, kws=0x85896c8, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#43 0x080fb5fd in function_call (func=0xb7a9bb54, arg=0x86d657c,  
kw=0x8c9a35c)
     at ../Objects/funcobject.c:548
#44 0x0805950c in PyObject_Call (func=0xb7a9bb54, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#45 0x080b4c37 in PyEval_EvalFrame (f=0x85dbcfc) at ../Python/ceval.c: 
3835
#46 0x080b716d in PyEval_EvalCodeEx (co=0xb7a85960,  
globals=0xb7a83b54, locals=0x0,
     args=0xaa0c1e20, argcount=3, kws=0x88efb88, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:2736
#47 0x080fb5fd in function_call (func=0xb7a9bc34, arg=0xaa0c1e14,  
kw=0x8c9acec)
     at ../Objects/funcobject.c:548
#48 0x0805950c in PyObject_Call (func=0xb7a9bc34, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#49 0x080b4c37 in PyEval_EvalFrame (f=0x875ec14) at ../Python/ceval.c: 
3835
#50 0x080b716d in PyEval_EvalCodeEx (co=0xb76755a0,  
globals=0xb767724c, locals=0x0,
     args=0x8a1e358, argcount=2, kws=0x86a9a00, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#51 0x080fb5fd in function_call (func=0xb767a1ec, arg=0x8a1e34c,  
kw=0xb7a9979c)
     at ../Objects/funcobject.c:548
#52 0x0805950c in PyObject_Call (func=0xb767a1ec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#53 0x080b4c37 in PyEval_EvalFrame (f=0x876f884) at ../Python/ceval.c: 
3835
#54 0x080b570c in PyEval_EvalFrame (f=0x829ee2c) at ../Python/ceval.c: 
3640
#55 0x080b716d in PyEval_EvalCodeEx (co=0xb7a91b20,  
globals=0xb7a83cec, locals=0x0,
     args=0x8a48658, argcount=1, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#56 0x080fb5fd in function_call (func=0xb7a95df4, arg=0x8a4864c, kw=0x0)
     at ../Objects/funcobject.c:548
#57 0x0805950c in PyObject_Call (func=0xb7a95df4, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#58 0x0805eac5 in instancemethod_call (func=0xb7a95df4,  
arg=0x8a4864c, kw=0x72)
     at ../Objects/classobject.c:2447
#59 0x0805950c in PyObject_Call (func=0x8a386bc, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#60 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x72,  
arg=0xb7d9602c, kw=0x0)
     at ../Python/ceval.c:3425
#61 0x080e003d in t_bootstrap (boot_raw=0x875e6d8) at ../Modules/ 
threadmodule.c:434
---Type <return> to continue, or q <return> to quit---
#62 0xb7f33361 in start_thread () from /lib/tls/i686/cmov/ 
libpthread.so.0
#63 0xb7e9fbde in clone () from /lib/tls/i686/cmov/libc.so.6



2) Horrible horrible locking (?) issues on the /trac/browser page.  
Hitting it with concurrency > 2 makes it handle about one request  
every 2 seconds, probably database lock contention or something. But  
also, it starts giving error pages like this. This is an traceback  
when trying to generate an error page. Yay.

Traceback (most recent call last):
   File "/home/trac/Projects/trac/trunk/trac/web/api.py", line 382,  
in send_error
     'text/html')
   File "/home/trac/Projects/trac/trunk/trac/web/chrome.py", line  
475, in render_template
     return stream.render(method, doctype=doctype)
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 146,  
in render
     output = u''.join(list(generator))
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
200, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
486, in __call__
     for kind, data, pos in chain(stream, [(None, None, None)]):
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
436, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 207,  
in _ensure
     for event in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 207,  
in _ensure
     for event in stream:
   File "/home/trac/Projects/trac/trunk/trac/web/chrome.py", line  
478, in _strip_accesskeys
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/filters.py", line  
313, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1145, in _match
     content = list(content)
   File "/home/trac/Projects/genshi/trunk/genshi/filters.py", line  
313, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1120, in _match
     for event in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1109, in _strip
     event = stream.next()
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
941, in _eval
     for event in substream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
920, in _eval
     ctxt):
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
930, in _eval
     result = data.evaluate(ctxt)
   File "/home/trac/Projects/genshi/trunk/genshi/eval.py", line 101,  
in evaluate
     {'data': data})
   File "/home/trac/Projects/trac/trunk/templates/error.html", line  
36, in <Expression u"get_reporter_id(req)">
     <input type="hidden" name="reporter" value="${get_reporter_id 
(req)}" />
   File "/home/trac/Projects/trac/trunk/trac/util/__init__.py", line  
50, in get_reporter_id
     name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'


James



From lycka at carmensystems.com  Wed Nov 29 18:56:30 2006
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 30 Nov 2006 00:56:30 +0100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
	<F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>
Message-ID: <456E1E2E.9060800@carmensystems.com>

James Y Knight wrote:
>
> 2) Horrible horrible locking (?) issues on the /trac/browser page. 
> Hitting it with concurrency > 2 makes it handle about one request 
> every 2 seconds, probably database lock contention or something. But 
> also, it starts giving error pages like this. This is an traceback 
> when trying to generate an error page. Yay.
Is this due to sqlite? I haven't looked at the Trac code, and I couldn't 
see it
explicitly in the traceback, but it certainly sounds a bit like an sqlite vs
postgresql  problem, and  it fits the description of the Trac 
developers. The
lock problems in sqlite are typcially related to writes though. Is something
written to the database here? What sqlite version is this? Sqlite 3 has a
better locking mechanism than sqlite 2.

 

-- 
Magnus Lyck?, M.Sc.
Team Leader Verification & Integration
______________________________________
Jeppesen Commercial & Military Aviation
**Making Every Mission Possible**
ph: +46 31 720 63 20 | fax: +46 31 720 81 20 | magnus.lycka at jeppesen.com 
Odinsgatan 9 | SE-411 03 G?teborg, SWEDEN | www.jeppesen.com/carmen




From dominik.margraf at gmail.com  Thu Nov 30 03:09:10 2006
From: dominik.margraf at gmail.com (Dominik Margraf)
Date: Thu, 30 Nov 2006 21:09:10 +1300
Subject: [Twisted-Python] downloading the code of the FIXED lore so that I
	can use it to output multi-chapter lore source to latex
Message-ID: <409337ba0611300009h5851fe41s24105d78b4400405@mail.gmail.com>

I need to process the thinkCSpy ebook lore source to latex urgently,
however there is a bug in the curent stable version which prevents
compiling spanned chapters.

http://twistedmatrix.com/trac/ticket/2134

which is fixed very recently but doesn't yet seem to be merged with
the trunk (I have downloaded the svn trunk and tried its lore, but
still has the same bug)

Can anyone give me (or point to the place where I can download) the
updated file so that I can do my job immediately?

Thanks!

Dominik



From exarkun at divmod.com  Thu Nov 30 07:24:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Nov 2006 07:24:47 -0500
Subject: [Twisted-Python] downloading the code of the FIXED lore so that
	I can use it to output multi-chapter lore source to latex
In-Reply-To: <409337ba0611300009h5851fe41s24105d78b4400405@mail.gmail.com>
Message-ID: <20061130122447.20948.1244424858.divmod.quotient.51742@ohm>

On Thu, 30 Nov 2006 21:09:10 +1300, Dominik Margraf <dominik.margraf at gmail.com> wrote:
>I need to process the thinkCSpy ebook lore source to latex urgently,
>however there is a bug in the curent stable version which prevents
>compiling spanned chapters.
>
>http://twistedmatrix.com/trac/ticket/2134
>
>which is fixed very recently but doesn't yet seem to be merged with
>the trunk (I have downloaded the svn trunk and tried its lore, but
>still has the same bug)

It is fixed in svn trunk.  Are you sure when you used lore after 
downloading svn trunk that it was using the svn trunk code you 
downloaded and not the system install of Twisted?

If this checks out, there may be another similar bug which needs to 
be fixed.  Could you file a ticket with reproduction instructions?

Jean-Paul



From ncesar at lunix.com.ar  Thu Nov 30 15:00:28 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Thu, 30 Nov 2006 17:00:28 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>
References: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>
Message-ID: <200611301700.29322.ncesar@lunix.com.ar>

my apologies for the delayed answer, i've been very busy latelly.

El Martes, 28 de Noviembre de 2006 06:07, glyph at divmod.com escribi?:
> >Actually is type 1, but there are horrible (network) conditions were de
> >application should stop.
>
> No, there aren't. ?What happens when I run your application in-process with
> my webserver? ?Should the webserver stop simply because your protocol is
> not working?

Well, yes I agree with you: not a webserver. So, I'll shortly describe my 
application.

I have multiple LSTP (Linux Terminal Server Project) servers. All servers are 
(almost) the same, and any of them can serve any client. There are arround 
8-12 servers and 150+ clients. I'm developing a twisted application that 
balances clients requests (by filtering DHCP discover/requests packets. (I 
attached an image, my application is called multiltsp). I'm using ip_queue 
for this.

Each server has a daemon, they syncronize themselves periodically. Every 
daemon knows the connection state of the others, and based on that 
information they create it's own "valid MACs' list".

There is a LDAP somewhere that has all client MACs that are in the group (eg. 
the 150 clients) and from time to time, multiltsp re-reads this list. (I'm 
simplifying much of these details). I'll call this list "ALL-MACS"...
[continued below]

> Just don't call reactor.stop at all unless you are writing top-level
> infrastructure code. ?Your application should have some other, more
> structured way of reporting fatal shut-down errors to its run container
> (e.g. runContainer.applicationEncounteredFatal(xxx)), not simply raising
> exceptions and hoping someone is listening. ?Unless you give more specifics
> that indicate that your special case is special-er than any other I've seen
> before, I'll stand by this. :)

[continuing with my explanation]
... all multiltsp daemons MUST have the ALL-MACS list identical, in case there 
is a out of sync[1] problem the (incorrect) server must quit and the others 
must handle the clients. 

There are serveral  services involved in this application (the multicast UDP 
protocol, a shell, the ip_queue reader and others),  but a major problem as 
stated above MUST get the application down with some special clean up. 

Glyph, I hope you understand my rustic English in the explanation above. Any 
advice or suggestion please respond this email.

Greetings, 

[1] This process involves a unique serial and many timeouts and a 
posible "FLUX" state, I just made a simple conclusion so we can argue about 
my twistd special need.

-- 
Nicol?s D. C?sar <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Netfilter-en.png
Type: image/png
Size: 25112 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061130/fb5e6e71/attachment.png 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20061130/fb5e6e71/attachment.pgp 

From stephane_brault at yahoo.fr  Thu Nov  2 13:57:00 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Thu, 2 Nov 2006 20:57:00 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>

Hi,

I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
Here is my code :
class myFTP(object):
    
    def __init__(self, login, password):
        self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
        

    def connectionFailed(self, f):
        print 'connection error'


    def success(self, response):
        print 'Success'


    def fail(self, error):
        print 'Erreur:' + error


    def doOperation(self, operation, data):
        d = self.creator.connectTCP(FTP_ADDRESS, 21)
        if operation == 'addItems':
            return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
        elif ....
        
        
        
    def _upload(self, consumer, file):
        return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
    
    
    def inventoryUpload(self, ftpClient, file):
        name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
        return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
        
    ....

The operation is called this way:
call = myFTP(login, password)
call.doOperation('addItems', StringIO(data))

The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.

Thanks,

Stéphane




	

	
		
___________________________________________________________________________ 
Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
http://fr.answers.yahoo.com



From yqiang at gmail.com  Thu Nov  2 16:33:47 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Thu, 2 Nov 2006 15:33:47 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
Message-ID: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>

Hi guys,
I am still having trouble writing programs that will make the most use of
deferreds.  I will describe the problem I am trying to solve and the
solution I've tried.

The problem:
I am trying to write a client that gets a job from a PB server, processes
it, submits the result and gets another job.  I need to be able to do this
for multiple jobs (i.e. I need to be able to get 5 jobs, and start 5 similar
chains: get job --> work on job --> submit result --> get another job).
This looks like a perfectly solvable problem using deferreds since working
on the job might take a while and using callbacks seems to be the most
appropriate.

So I have something like this in my main method:

monitor = Monitor(server, port)
monitor.connect()


    def connect(self):
        factory = pb.PBClientFactory()
        reactor.connectTCP(self.hostname, self.port, factory)
        return factory.login(self.credentials).addCallback(
                            self._connected).addErrback(
                            self._catch_failure)

Then in self._connected I would like to start the chain of getting
jobs/processing them/submitting jobs:

    def _connected(self, remoteobj):
        self.remoteobj = remoteobj

        for worker in self.workers:
            self.get_jobs(worker).addCallback(
                                    self._got_job, worker).addCallback(
                                    self.get_jobs, worker).addErrback(
                                    self._catch_failure)

_got_job takes both a job and a worker and starts to process the job.  Which
for now returns a defer.succeed().
This is the part where I stumble on though, the exact implementation of how
to make it so that one calls back the other.
Any help would be appreciated.  Please let me know also if you need more
specific information.

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061102/6855a763/attachment.html>

From matusis at matusis.com  Thu Nov  2 18:30:03 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu, 2 Nov 2006 17:30:03 -0800
Subject: [Twisted-Python] manhole questions
Message-ID: <E1Gfnsi-00008f-00@pyramid.twistedmatrix.com>

Hello
 
I am using manhole with Twisted 2.2 like so:
 
manhole_factory = twisted.manhole.telnet.ShellFactory()
manhole_factory.username = config.manhole_user
manhole_factory.password = config.manhole_pwd
manhole_factory.service = t_service
manhole_serv=twisted.application.internet.TCPServer(common.config.t_manhole_
port, manhole_factory).setServiceParent(application)
 
I have two problems:

1) Backspace and Arrow keys do not work with telnet. How can I fix that?
 
2) When I make a mistake and cause an error in the interpreter, the
Traceback gets logged into the application's main log file, thus polluting
it. How can I prevent these errors in manhole's telnet from being logged
into the application's main log?

Additional question:
3) When I maintain a telnet session into manhole in a production server, how
does it affect its performance/stability ?

Thanks

Alec.




From jacob at internet24.de  Fri Nov  3 02:32:52 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 03 Nov 2006 10:32:52 +0100
Subject: [Twisted-Python] Problem with ftp upload
In-Reply-To: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>
References: <20061102205700.54036.qmail@web26501.mail.ukl.yahoo.com>
Message-ID: <1162546373.24696.35.camel@enterprise>

There is bug in storeFile's Consumer interface
(Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )

As for disconnecting, why not call ftpClient->quit() after
your upload has finished?

On Thu, 2006-11-02 at 20:57 +0000, Stéphane Brault wrote:
> Hi,
> 
> I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> Here is my code :
> class myFTP(object):
>     
>     def __init__(self, login, password):
>         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
>         
> 
>     def connectionFailed(self, f):
>         print 'connection error'
> 
> 
>     def success(self, response):
>         print 'Success'
> 
> 
>     def fail(self, error):
>         print 'Erreur:' + error
> 
> 
>     def doOperation(self, operation, data):
>         d = self.creator.connectTCP(FTP_ADDRESS, 21)
>         if operation == 'addItems':
>             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
>         elif ....
>         
>         
>         
>     def _upload(self, consumer, file):
>         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
>     
>     
>     def inventoryUpload(self, ftpClient, file):
>         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
>         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
>         
>     ....
> 
> The operation is called this way:
> call = myFTP(login, password)
> call.doOperation('addItems', StringIO(data))
> 
> The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> 
> Thanks,
> 
> Stéphane
> 
> 
> 
> 
> 	
> 
> 	
> 		
> ___________________________________________________________________________ 
> Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20061103/4a49e344/attachment.sig>

From stephane_brault at yahoo.fr  Fri Nov  3 02:54:21 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Fri, 3 Nov 2006 09:54:21 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>

Thanks Thomas,

my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

Stéphane


----- Message d'origine ----
De : Thomas Jacob <jacob at internet24.de>
À : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoyé le : Vendredi, 3 Novembre 2006, 10h32mn 52s
Objet : Re: [Twisted-Python] Problem with ftp upload

There is bug in storeFile's Consumer interface
(Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )

As for disconnecting, why not call ftpClient->quit() after
your upload has finished?

On Thu, 2006-11-02 at 20:57 +0000, Stéphane Brault wrote:
> Hi,
> 
> I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> Here is my code :
> class myFTP(object):
>     
>     def __init__(self, login, password):
>         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
>         
> 
>     def connectionFailed(self, f):
>         print 'connection error'
> 
> 
>     def success(self, response):
>         print 'Success'
> 
> 
>     def fail(self, error):
>         print 'Erreur:' + error
> 
> 
>     def doOperation(self, operation, data):
>         d = self.creator.connectTCP(FTP_ADDRESS, 21)
>         if operation == 'addItems':
>             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
>         elif ....
>         
>         
>         
>     def _upload(self, consumer, file):
>         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
>     
>     
>     def inventoryUpload(self, ftpClient, file):
>         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
>         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
>         
>     ....
> 
> The operation is called this way:
> call = myFTP(login, password)
> call.doOperation('addItems', StringIO(data))
> 
> The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> 
> Thanks,
> 
> Stéphane
> 
> 
> 
> 
>     
> 
>     
>         
> ___________________________________________________________________________ 
> Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
http://fr.answers.yahoo.com



From jacob at internet24.de  Fri Nov  3 03:52:08 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 03 Nov 2006 11:52:08 +0100
Subject: [Twisted-Python] Problem with ftp upload
In-Reply-To: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>
References: <20061103095421.46194.qmail@web26510.mail.ukl.yahoo.com>
Message-ID: <1162551128.24696.47.camel@enterprise>

On Fri, 2006-11-03 at 09:54 +0000, Stéphane Brault wrote:
> Thanks Thomas,
> 
> my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

You were mentioning a different ticket number...

Anyway, you seem to be waiting for the first
storeFile deferred (Consumer) to indicate successful
transmission, I'm using the second (Control-Connection),
maybe you simply quit to early.

If you want, I can mail you my FTP access class
for uploading and downloading....

> Stéphane
> 
> 
> ----- Message d'origine ----
> De : Thomas Jacob <jacob at internet24.de>
> À : Twisted general discussion <twisted-python at twistedmatrix.com>
> Envoyé le : Vendredi, 3 Novembre 2006, 10h32mn 52s
> Objet : Re: [Twisted-Python] Problem with ftp upload
> 
> There is bug in storeFile's Consumer interface
> (Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )
> 
> As for disconnecting, why not call ftpClient->quit() after
> your upload has finished?
> 
> On Thu, 2006-11-02 at 20:57 +0000, Stéphane Brault wrote:
> > Hi,
> > 
> > I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> > Here is my code :
> > class myFTP(object):
> >     
> >     def __init__(self, login, password):
> >         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
> >         
> > 
> >     def connectionFailed(self, f):
> >         print 'connection error'
> > 
> > 
> >     def success(self, response):
> >         print 'Success'
> > 
> > 
> >     def fail(self, error):
> >         print 'Erreur:' + error
> > 
> > 
> >     def doOperation(self, operation, data):
> >         d = self.creator.connectTCP(FTP_ADDRESS, 21)
> >         if operation == 'addItems':
> >             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
> >         elif ....
> >         
> >         
> >         
> >     def _upload(self, consumer, file):
> >         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
> >     
> >     
> >     def inventoryUpload(self, ftpClient, file):
> >         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
> >         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
> >         
> >     ....
> > 
> > The operation is called this way:
> > call = myFTP(login, password)
> > call.doOperation('addItems', StringIO(data))
> > 
> > The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> > I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> > 
> > Thanks,
> > 
> > Stéphane
> > 
> > 
> > 
> > 
> >     
> > 
> >     
> >         
> > ___________________________________________________________________________ 
> > Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> > Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> > http://fr.answers.yahoo.com
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> 	
> 
> 	
> 		
> ___________________________________________________________________________ 
> Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20061103/84e4975b/attachment.sig>

From stephane_brault at yahoo.fr  Fri Nov  3 04:03:22 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Fri, 3 Nov 2006 11:03:22 +0000 (GMT)
Subject: [Twisted-Python] Problem with ftp upload
Message-ID: <20061103110322.41960.qmail@web26503.mail.ukl.yahoo.com>

Thanks Thomas,

indeed I mentioned the wrong ticket number, my mistake, I'm already getting flogged for that ;-)
I'd be glad to get your FTP access class.

Stéphane

----- Message d'origine ----
De : Thomas Jacob <jacob at internet24.de>
À : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoyé le : Vendredi, 3 Novembre 2006, 11h52mn 08s
Objet : Re: Re : [Twisted-Python] Problem with ftp upload

On Fri, 2006-11-03 at 09:54 +0000, Stéphane Brault wrote:
> Thanks Thomas,
> 
> my problem is that I already applied the patch and it still doesn't work. That's what I don't understand.

You were mentioning a different ticket number...

Anyway, you seem to be waiting for the first
storeFile deferred (Consumer) to indicate successful
transmission, I'm using the second (Control-Connection),
maybe you simply quit to early.

If you want, I can mail you my FTP access class
for uploading and downloading....

> Stéphane
> 
> 
> ----- Message d'origine ----
> De : Thomas Jacob <jacob at internet24.de>
> À : Twisted general discussion <twisted-python at twistedmatrix.com>
> Envoyé le : Vendredi, 3 Novembre 2006, 10h32mn 52s
> Objet : Re: [Twisted-Python] Problem with ftp upload
> 
> There is bug in storeFile's Consumer interface
> (Cf.  report + patch http://twistedmatrix.com/trac/ticket/1794 )
> 
> As for disconnecting, why not call ftpClient->quit() after
> your upload has finished?
> 
> On Thu, 2006-11-02 at 20:57 +0000, Stéphane Brault wrote:
> > Hi,
> > 
> > I'm using twisted ftp api to upload files, I also added the ticket 1914 patch.
> > Here is my code :
> > class myFTP(object):
> >     
> >     def __init__(self, login, password):
> >         self.creator = ClientCreator(reactor, FTPClient, login, password, passive=0)
> >         
> > 
> >     def connectionFailed(self, f):
> >         print 'connection error'
> > 
> > 
> >     def success(self, response):
> >         print 'Success'
> > 
> > 
> >     def fail(self, error):
> >         print 'Erreur:' + error
> > 
> > 
> >     def doOperation(self, operation, data):
> >         d = self.creator.connectTCP(FTP_ADDRESS, 21)
> >         if operation == 'addItems':
> >             return d.addCallback(self.inventoryUpload, data).addErrback(self.connectionFailed)
> >         elif ....
> >         
> >         
> >         
> >     def _upload(self, consumer, file):
> >         return FileSender().beginFileTransfer(file, consumer).addCallback(lambda _: consumer.finish()).addCallback(lambda _: file.close())
> >     
> >     
> >     def inventoryUpload(self, ftpClient, file):
> >         name = '/stock/entrees/export_items_' + encodeDate(datetime.datetime.now()) + '.txt'
> >         return ftpClient.storeFile(name)[0].addCallback(self._upload, file).addCallbacks(self.success, self.fail)
> >         
> >     ....
> > 
> > The operation is called this way:
> > call = myFTP(login, password)
> > call.doOperation('addItems', StringIO(data))
> > 
> > The file is created but empty, it seems that _upload is not called, I can't understand why, any hint ?
> > I was also wondering how to disconnect once my work is done, I don't think keeping open connections is a good thing.
> > 
> > Thanks,
> > 
> > Stéphane
> > 
> > 
> > 
> > 
> >     
> > 
> >     
> >         
> > ___________________________________________________________________________ 
> > Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> > Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> > http://fr.answers.yahoo.com
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
>     
> 
>     
>         
> ___________________________________________________________________________ 
> Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
> Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
> http://fr.answers.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
http://fr.answers.yahoo.com



From p.mayers at imperial.ac.uk  Fri Nov  3 09:12:25 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 03 Nov 2006 16:12:25 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
Message-ID: <454B6A69.2030804@imperial.ac.uk>

Yi Qiang wrote:
> This is the part where I stumble on though, the exact implementation of 
> how to make it so that one calls back the other. 

One what calls back the other what?

You'll have issues with error handling and dropping workers if you're 
not careful to chain the deferreds correctly. I would try something like 
this personally.

class Worker:
     def gotJob(self, j):
         self.jobID = j.ID
         # do whatever
         callInThread(DoesntHoldGIL, j).addCallbacks(
             self.doneJob, self.failedJob
         ).addCallback(self.noJob, self.noJob)

     def doneJob(self, result):
         pb.callRemote('jobDone', self.jobID, result)

     def failedJob(self, f):
         pb.callRemote('jobFailed', self.jobID, f.getErrorMessage())

     def noJob(self, v):
         self.free = True

workers = Pool(Worker)

def checkForJobs():
     for worker in workers:
         if worker.free:
             worker.free = False
             job = pb.callRemote('getJob')
             job.addCallbacks(worker.gotJob, worker.noJob)

tsk = task.LoopingCall(checkForJobs)
# run every 10 seconds, start now
tsk.start(10, True)



From alvinwang at gmail.com  Fri Nov  3 17:17:15 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 3 Nov 2006 16:17:15 -0800
Subject: [Twisted-Python] SMTP with authentication
Message-ID: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>

Hi,

I am new to twisted but google and the Oreilly book have failed me.  I am
trying to create a client to send to a smtp server.  All the examples that I
have found only work if your  SMTP server does not require authentication.

I am guessing that I need to use
http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html


Unfortunately, I can find no examples that use it.

I did find something from 2004
http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html

That is prior to the commit for ESMTPSenderFactory
http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html

Thanks
-- 
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061103/20400c94/attachment.html>

From exarkun at divmod.com  Fri Nov  3 17:49:15 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Nov 2006 19:49:15 -0500
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
Message-ID: <20061104004915.20948.722461395.divmod.quotient.12425@ohm>

On Fri, 3 Nov 2006 16:17:15 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
>Hi,
>
>I am new to twisted but google and the Oreilly book have failed me.  I am
>trying to create a client to send to a smtp server.  All the examples that I
>have found only work if your  SMTP server does not require authentication.
>
>I am guessing that I need to use
>http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html
>
>
>Unfortunately, I can find no examples that use it.
>
>I did find something from 2004
>http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html

This should still work.

>
>That is prior to the commit for ESMTPSenderFactory
>http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html

This changed ESMTPSenderFactory, but authentication was supported before
this commit.  Give the code at the previous URL a try and post again if
you run into problems.

Jean-Paul



From alvinwang at gmail.com  Sat Nov  4 00:48:52 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 3 Nov 2006 23:48:52 -0800
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <20061104004915.20948.722461395.divmod.quotient.12425@ohm>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
Message-ID: <77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>

I modified this example
http://twistedmatrix.com/projects/mail/documentation/tutorial/smtpclient/smtpclient-7.tac

I am still not completely clear on what is happening

Thanks for the help
Alvin


import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.internet import protocol
from twisted.mail import smtp
from twisted.mail.imap4 import CramMD5ClientAuthenticator

class SMTPTutorialClient(smtp.ESMTPClient):
    mailFrom = "from at sender.com"
    mailTo = "to at dest.com"
    mailData = '''\
Date: Fri, 6 Feb 2006 10:14:39 -0800
From: from at sender.com
To: to at dest.com
Subject: Tutorate!

Hello, how are you, goodbye.
'''

    def getMailFrom(self):
        result = self.mailFrom
        self.mailFrom = None
        return result

    def getMailTo(self):
        return [self.mailTo]

    def getMailData(self):
        return StringIO.StringIO(self.mailData)

    def sentMail(self, code, resp, numOk, addresses, log):
        print 'Sent', numOk, 'messages'

class SMTPClientFactory(protocol.ClientFactory):
    protocol = SMTPTutorialClient

    def buildProtocol(self, addr):
        return self.protocol(secret=None, identity='sender.com')

class SMTPClientFactory(protocol.ClientFactory):
    protocol = SMTPTutorialClient
    #def __init__(self, *a, **kw):
    #    self.a, self.kw = a, kw

    def buildProtocol(self, addr):
        p = smtp.ESMTPClient('smtp_pw')
        p.factory = self
        p.requireAuthentication = True
        p.authenticators = {'CRAM-MD5':
CramMD5ClientAuthenticator('smtp_user')}
        return p

smtpClientFactory = SMTPClientFactory()

smtpClientService = internet.TCPClient('smtp.1and1.com', 25,
smtpClientFactory)
smtpClientService.setServiceParent(application)


On 11/3/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Fri, 3 Nov 2006 16:17:15 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
> >Hi,
> >
> >I am new to twisted but google and the Oreilly book have failed me.  I am
> >trying to create a client to send to a smtp server.  All the examples
> that I
> >have found only work if your  SMTP server does not require
> authentication.
> >
> >I am guessing that I need to use
> >
> http://twistedmatrix.com/documents/current/api/twisted.mail.smtp.ESMTPSenderFactory.html
> >
> >
> >Unfortunately, I can find no examples that use it.
> >
> >I did find something from 2004
> >http://twistedmatrix.com/pipermail/twisted-python/2004-April/007433.html
>
> This should still work.
>
> >
> >That is prior to the commit for ESMTPSenderFactory
> >http://twistedmatrix.com/pipermail/twisted-commits/2004-July/011608.html
>
> This changed ESMTPSenderFactory, but authentication was supported before
> this commit.  Give the code at the previous URL a try and post again if
> you run into problems.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061103/adb65a5a/attachment.html>

From Marcin.Kasperski at softax.com.pl  Sat Nov  4 00:52:33 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sat, 04 Nov 2006 08:52:33 +0100
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
Message-ID: <454C46C1.9090106@softax.com.pl>




> I am new to twisted but google and the Oreilly book have failed me.  I 
> am trying to create a client to send to a smtp server.  All the 
> examples that I have found only work if your  SMTP server does not 
> require authentication. 
http://twistedmatrix.com/pipermail/twisted-python/2006-April/012994.html




From p.mayers at imperial.ac.uk  Sat Nov  4 03:30:01 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 04 Nov 2006 10:30:01 +0000
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
	<77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
Message-ID: <454C6BA9.1030603@imperial.ac.uk>

Alvin Wang wrote:
> I modified this example

You broke the example.

Try this, hopefully it is clearly what is happening:

import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.python import log
from twisted.internet import defer, reactor
from twisted.mail import smtp

mailFrom = "from at example.com"
mailTo = ["to at example.com",]
mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
From: from at example.com
To: to at example.com
Subject: Tutorate!

Hello, how are you, goodbye.
""")

whenDone = defer.Deferred()

def send(r):
     print "message sent:", r

whenDone.addCallbacks(sent, log.err)

def done(d):
     from twisted.internet import reactor
     reactor.callLater(1, reactor.stop)

whenDone.addBoth(done)

sender = smtp.ESMTPSenderFactory(
         'YOURUSERNAME',
         'YOURPASSWORD',
         mailFrom,
         mailTo,
         mail,
         whenDone,
         )

smtpClientService = internet.TCPClient('YOURSERVER', 25, sender)
smtpClientService.setServiceParent(application)




From eprparadocs at gmail.com  Sat Nov  4 12:15:01 2006
From: eprparadocs at gmail.com (Chas.)
Date: Sat, 4 Nov 2006 14:15:01 -0500
Subject: [Twisted-Python] Twisted and Torrent Support
Message-ID: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>

I am looking for both client and server support for bittorrent that is
integrated with Twisted (as are the ftp, etc). I was wondering if any one
knows of just such support.

Thanks,
Chaz.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061104/69d0a760/attachment.html>

From alvinwang at gmail.com  Sat Nov  4 17:55:45 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 4 Nov 2006 16:55:45 -0800
Subject: [Twisted-Python] SMTP with authentication
In-Reply-To: <454C6BA9.1030603@imperial.ac.uk>
References: <77d044440611031617m4e583e01uf31536a4fd0d5b71@mail.gmail.com>
	<20061104004915.20948.722461395.divmod.quotient.12425@ohm>
	<77d044440611032348h658a335ds37bb299714c0733f@mail.gmail.com>
	<454C6BA9.1030603@imperial.ac.uk>
Message-ID: <77d044440611041655t19d61289q5d81d07a75ed9dd1@mail.gmail.com>

Thanks!!

That worked great.

minor typo

def sent(r):
    print "message sent:", r


A question.
In Phil Mayer's example and Marcin Kasperski's example, it seems like there
is a new tcp/ip connection made for each email.   Suppose, I want to send
multiple emails to the same smtp server.  How would that work?

Thanks
Alvin
*

*On 11/4/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
> Alvin Wang wrote:
> > I modified this example
>
> You broke the example.
>
> Try this, hopefully it is clearly what is happening:
>
> import StringIO
>
> from twisted.application import service
>
> application = service.Application("SMTP Client Tutorial")
>
> from twisted.application import internet
> from twisted.python import log
> from twisted.internet import defer, reactor
> from twisted.mail import smtp
>
> mailFrom = "from at example.com"
> mailTo = [" to at example.com",]
> mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
> From: from at example.com
> To: to at example.com
> Subject: Tutorate!
>
> Hello, how are you, goodbye.
> """)
>
> whenDone = defer.Deferred()
>
> def send(r):
>      print "message sent:", r
>
> whenDone.addCallbacks (sent, log.err)
>
> def done(d):
>      from twisted.internet import reactor
>      reactor.callLater(1, reactor.stop)
>
> whenDone.addBoth(done)
>
> sender = smtp.ESMTPSenderFactory(
>          'YOURUSERNAME',
>          'YOURPASSWORD',
>          mailFrom,
>          mailTo,
>          mail,
>          whenDone,
>          )
>
> smtpClientService = internet.TCPClient('YOURSERVER', 25, sender)
> smtpClientService.setServiceParent (application)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alvin Wang
Gigachannels
650 248 9416
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061104/fa077cf4/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov  4 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1162706702.09.460033695@twistedmatrix.com

Bug summary
______________________
Summary for 2006-10-29 through 2006-11-05
Bugs opened: 17    Bugs closed: 1  Total open bugs: 777 (+16)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  +1          |Core:      +8          
|Enhancement:  +8  |Normal:  +15          |Lore:      +1          
|Task:         +2                         |Pydoctor:  +1          
                                          |Web:       +1          
                                          |Web2:      +1          
                                          |Website:   +1          
                                          |Words:     +3          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2203] More complete IRC Server implementation (opened by colin)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2203

                    ===== Normal =====
[#2202] The News on the front page is no longer news. (opened by jml)
    defect          website    http://twistedmatrix.com/trac/ticket/2202

[#2204] IRCUser shouldn't send topic if there isn't one. (opened by colin)
    defect          words      http://twistedmatrix.com/trac/ticket/2204

[#2205] Simplification of Application creation (opened by jerub)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2205

[#2206] Update standard for unit tests (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/2206

[#2207] lore tarball has files with wrong end of line encoding (opened by thomasvs)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2207

[#2208] a lot of examples have different shebang lines (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2208

[#2209] pydoctor has problems with moresystems' using an absolute url prefix (opened by mwh)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2209

[#2210] pydoctor system pickles that use moresystems can't be loaded (opened by mwh)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2210

[#2211] unit tests should not have shebang lines (opened by thomasvs)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2211

[#2212] Remove mention of threadable.init from the threading chapter (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2212

[#2213] Several deprecated twisted.protocols.* modules point to old twistedmatrix.com/projects/ webpages (opened by dreid)
    task            core       http://twistedmatrix.com/trac/ticket/2213

[#2214] twisted.web2.xmlrpc.XMLRPC._cbRender uses a bare except and doesn't log the failure. (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2214

[#2215] If lineReceived returns true value, the connection is shut down and this value used as an error message (opened by Mekk)
    defect          core       http://twistedmatrix.com/trac/ticket/2215

[#2216] Coding Standard update: Lines should not have trailing whitespace (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2216

[#2217] Coding Standard is fairly crusty (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2217

[#2218] Add timeout to XMPP IQ requests (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2218



Closed Bugs
______________________
                    ===== Normal =====
[#2069] Make nevowwriter the default (opened by jml, closed by mwh, fixed)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2069





From warner at lothar.com  Sun Nov  5 01:37:50 2006
From: warner at lothar.com (Brian Warner)
Date: Sun, 05 Nov 2006 00:37:50 -0800 (PST)
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
Message-ID: <20061105.003750.02715181.warner@lothar.com>

I've uploaded another release of Foolscap, the next-generation remote-object
communication system for Twisted. (actually I've uploaded two, but 0.0.4 had
a brown-paper-bag bug and so it never got announced).

The new release makes all Referenceable objects "giftable" by default, making
it easier to share objects among multiple machines. There is a new
"Reconnector" with which you can announce your intention to connect to a
given target and have the Tub perform exponential-backoff retry attempts
whenever the connection is lost. Also, notifyOnDisconnect() now accepts args
and kwargs to be passed to the disconnect handler callback.

This release also adds support for making debian packages, for sid, sarge,
and dapper. Just type 'make debian-sid' (etc) to get an installable .deb
package in the parent directory.

The full list of user-visible changes is attached below. No wire-level
compatibility changes were introduced in this release, but there will be some
in the future.

Please see http://twistedmatrix.com/trac/wiki/FoolsCap for complete
information about Foolscap. The 0.0.5 release tarball is available from
http://twistedmatrix.com/~warner/Foolscap/ .

share and enjoy,
 -Brian



User visible changes in Foolscap (aka newpb/pb2).

* Release 0.0.5 (04 Nov 2006)

** add Tub.setOption, add logRemoteFailures and logLocalFailures

These options control whether we log exceptions (to the standard twisted log)
that occur on other systems in response to messages that we've sent, and that
occur on our system in response to messages that we've received
(respectively). These may be useful while developing a distributed
application. All such log messages have each line of the stack trace prefixed
by REMOTE: or LOCAL: to make it clear where the exception is happening.

** add sarge packaging, improve dependencies for sid and dapper .debs

** fix typo that prevented Reconnector from actually reconnecting


* Release 0.0.4 (26 Oct 2006)

** API Changes

*** notifyOnDisconnect() takes args/kwargs

RemoteReference.notifyOnDisconnect(), which registers a callback to be fired
when the connection to this RemoteReference is lost, now accepts args and
kwargs to be passed to the callback function. Without this, application code
needed to use inner functions or bound methods to close over any additional
state you wanted to get into the disconnect handler.

notifyOnDisconnect() returns a "marker", an opaque values that should be
passed into the corresponding dontNotifyOnDisconnect() function to deregister
the callback. (previously dontNotifyOnDisconnect just took the same argument
as notifyOnDisconnect).

For example:

class Foo:
    def _disconnect(self, who, reason):
        print "%s left us, because of %s" % (who, reason)
    def connect(self, url, why):
        d = self.tub.getReference(url)
        def _connected(rref):
            self.rref = rref
            m = rref.notifyOnDisconnect(self._disconnect, who, reason=why)
            self.marker = m
        d.addCallback(_connected)
    def stop_caring(self):
        self.rref.dontNotifyOnDisconnect(self.marker)

*** Reconnector / Tub.connectTo()

There is a new connection API for applications that want to connect to a
target and to reconnect to it if/when that connection is lost. This is like
ReconnectingClientFactory, but at a higher layer. You give it a URL to
connect to, and a callback (plus args/kwargs) that should be called each time
a connection is established. Your callback should use notifyOnDisconnect() to
find out when it is disconnected. Reconnection attempts use exponential
backoff to limit the retry rate, and you can shut off reconnection attempts
when you no longer want to maintain a connection.

Use it something like this:

class Foo:
    def __init__(self, tub, url):
        self.tub = tub
        self.reconnector = tub.connectTo(url, self._connected, "arg")
    def _connected(self, rref, arg):
        print "connected"
        assert arg == "arg"
        self.rref = rref
        self.rref.callRemote("hello")
        self.rref.notifyOnDisconnect(self._disconnected, "blag")
    def _disconnected(self, blag):
        print "disconnected"
        assert blag == "blag"
        self.rref = None
    def shutdown(self):
        self.reconnector.stopConnecting()

Code which uses this pattern will see "connected" events strictly interleaved
with "disconnected" events (i.e. it will never see two "connected" events in
a row, nor two "disconnected" events).

The basic idea is that each time your _connected() method is called, it
should re-initialize all your state by making method calls to the remote
side. When the connection is lost, all that state goes away (since you have
no way to know what is happening until you reconnect).

** Behavioral Changes

*** All Referenceable object are now implicitly "giftable"

In 0.0.3, for a Referenceable to be "giftable" (i.e. useable as the payload
of an introduction), two conditions had to be satisfied. #1: the object must
be published through a Tub with Tub.registerReference(obj). #2: that Tub must
have a location set (with Tub.setLocation). Once those conditions were met,
if the object was sent over a wire from this Tub to another one, the
recipient of the corresponding RemoteReference could pass it on to a third
party. Another side effect of calling registerReference() is that the Tub
retains a strongref to the object, keeping it alive (with respect to gc)
until either the Tub is shut down or the object is explicitly de-registered
with unregisterReference().

Starting in 0.0.4, the first condition has been removed. All objects which
pass through a setLocation'ed Tub will be usable as gifts. This makes it much
more convenient to use third-party references.

Note that the Tub will *not* retain a strongref to these objects (merely a
weakref), so such objects might disappear before the recipient has had a
chance to claim it. The lifecycle of gifts is a subject of much research. The
hope is that, for reasonably punctual recipients, the gift will be kept alive
until they claim it. The whole gift/introduction mechanism is likely to
change in the near future, so this lifetime issue will be revisited in a
later release.

** Build Changes

The source tree now has some support for making debian-style packages (for
both sid and dapper). 'make debian-sid' and 'make debian-dapper' ought to
create a .deb package.



From Marcin.Kasperski at softax.com.pl  Mon Nov  6 05:45:59 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 6 Nov 2006 13:45:59 +0100
Subject: [Twisted-Python] If lineReceived returns deferred,
	then connection is dropped and this deferred given as error message
In-Reply-To: <200610311652.37936.Marcin.Kasperski@softax.com.pl>
References: <200610311652.37936.Marcin.Kasperski@softax.com.pl>
Message-ID: <200611061345.59737.Marcin.Kasperski@softax.com.pl>

As it seems nobody has anything to add, I filed a bug
http://twistedmatrix.com/trac/ticket/2215



From ilochab at gmail.com  Mon Nov  6 07:38:03 2006
From: ilochab at gmail.com (IloChab)
Date: Mon, 6 Nov 2006 15:38:03 +0100
Subject: [Twisted-Python] Problem with qt4reactor.py
Message-ID: <166b1c630611060638q7517304avb67a5aac2cd57e87@mail.gmail.com>

I'm trying to run a simple application with Twisted and Qt4, but I get a
really strange behavior from my main script.

I can't understand if it's
a python
or a twisted
or a Qt4
problem

I'm using this reactor:
    http://twistedmatrix.com/trac/attachment/ticket/1770/qt4reactor.py

Now,
if I run this:
# >>>>>>>>>
import  qt4reactor
import sys
from PyQt4 import  QtGui
from winIum import Window

def main():
    app = QtGui.QApplication(sys.argv)
    qt4reactor.install(app)
    MainWindow = QtGui.QMainWindow()
    win = Window(MainWindow)
    MainWindow.show()
    from twisted.internet import reactor
    reactor.run()
# <<<<<<<<
my window shows and run correctly.


If I run this:
# >>>>>>>>>>>>>
import  qt4reactor
import sys
from PyQt4 import  QtGui
from winIum import Window

def creApp():
    app = QtGui.QApplication(sys.argv)
    qt4reactor.install(app)
    return app
def creWin():
    MainWindow = QtGui.QMainWindow()
    win = Window(MainWindow)
    MainWindow.show()
def main():
    app = creApp()
    creWin()
    from twisted.internet import reactor
    reactor.run()
# <<<<<<<<<<<<<
my window doesn't show and the script doesn't stop but remains trapped in
some gui loop.

What's the problem I can't see??

Thank you in advance for any help.
Licia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061106/35fbedde/attachment.html>

From dekonerding at lbl.gov  Mon Nov  6 10:29:33 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Mon, 06 Nov 2006 09:29:33 -0800
Subject: [Twisted-Python] Twisted and Torrent Support
In-Reply-To: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>
References: <2f66cbb30611041115t438df287mc37494e8c5301aa0@mail.gmail.com>
Message-ID: <454F70FD.7030404@lbl.gov>

Chas. wrote:
> I am looking for both client and server support for bittorrent that is 
> integrated with Twisted (as are the ftp, etc). I was wondering if any 
> one knows of just such support.

The baseline BitTorrent client and server *are* written using Twisted:

> from BitTorrent.RawServer_twisted import RawServer
> from twisted.internet import task




From srock258 at gmail.com  Mon Nov  6 15:07:04 2006
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 6 Nov 2006 17:07:04 -0500
Subject: [Twisted-Python] DeferredQueue Unstable
Message-ID: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>

The API says the DeferredQueue class from the defer module is unstable? Any
description about why it is unstable? I would like to use it else I will
have to write my own version that is sure to 'unstable'.

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061106/debd58ea/attachment.html>

From johann.borck at densedata.com  Mon Nov  6 18:31:52 2006
From: johann.borck at densedata.com (Johann Borck)
Date: Tue, 07 Nov 2006 02:31:52 +0100
Subject: [Twisted-Python] DeferredQueue Unstable
In-Reply-To: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>
References: <a7964aae0611061407i621c3cb0o286f2a324ccc2d34@mail.gmail.com>
Message-ID: <454FE208.1030509@densedata.com>

Sean Roark wrote:
> The API says the DeferredQueue class from the defer module is
> unstable? Any description about why it is unstable? I would like to
> use it else I will have to write my own version that is sure to
> 'unstable'.
>
As stated recently on this list(dunno, but iirc it was JP), "unstable"
is used if the probability of incompatible API-changes is relatively
high.  So maybe you'll have to change your code when upgrading Twisted.

Johann
> -- 
>
> Sean Roark
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From Nabil at kramer-smilko.com  Tue Nov  7 14:46:31 2006
From: Nabil at kramer-smilko.com (Nabil)
Date: Tue, 7 Nov 2006 16:46:31 -0500
Subject: [Twisted-Python] PyQt4 Object acting like None.
Message-ID: <0ED1DF2D-0B84-4EA4-9386-204F6724713F@kramer-smilko.com>

Hello everyone. I'm having some trouble with a program I'm writing.  
The program uses PyQt4 and qt4reactor. When the program is started it  
requests a file from the server that it downloads and saves onto the  
client machine. The file is a python module that gets dynamically  
loaded and used in the program. All of this works fine on a Max OS X  
10.4.6 using Python 2.4.4 and Qt-4.1.0. When I try to run the program  
on window I get this error message:

File "C:\path\to\downloaded\module", line X, in init
     self.panel = PhoneBookPanel(self, parent.getWiget())
exceptions.TypeError: 'NoneType' object is not callable

parent:  instance of QMainWindow
parent.getWidget: return a QWidget that will be the parent widget of  
self.panel
self.panel is a QWidget instance that will be added to  
parent.getWidget()
The thing thats really confusing me is that although it works  
perfectly on a mac it crashes on windows using the same version of Qt  
and Python!! 



From yqiang at gmail.com  Tue Nov  7 17:07:48 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Tue, 7 Nov 2006 16:07:48 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <454B6A69.2030804@imperial.ac.uk>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
Message-ID: <3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>

On 11/3/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
> Yi Qiang wrote:
> > This is the part where I stumble on though, the exact implementation of
> > how to make it so that one calls back the other.
>
> One what calls back the other what?
>
> You'll have issues with error handling and dropping workers if you're
> not careful to chain the deferreds correctly. I would try something like
> this personally. ...


Hi Phil,
Sorry it took me so long to get back to you.  Thanks for your suggestion,
but the thing I was trying to avoid is to have the Workers communicate with
the PB server.  There could be potentially many workers and when I thought
about the problem, it seemed cleaner to design something where the client
consisted of a 'Monitor' and 'Workers'.  The monitor connects to the server,
gets jobs, distributes jobs to the workers and watches for workers who
finished their jobs.  What do you think of this design?  It is obviously a
little more convoluted to program but might be easier to deal with in the
future.  I have little programming experience so this is all speculation
from my side.  Any insight would be greatly appreciated.

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061107/a08bb110/attachment.html>

From p.mayers at imperial.ac.uk  Wed Nov  8 01:39:51 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 08 Nov 2006 08:39:51 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>	
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
Message-ID: <455197D7.2090508@imperial.ac.uk>

Yi Qiang wrote:
> On 11/3/06, *Phil Mayers* <p.mayers at imperial.ac.uk 
> <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
>     Yi Qiang wrote:
>      > This is the part where I stumble on though, the exact
>     implementation of
>      > how to make it so that one calls back the other.
> 
>     One what calls back the other what?
> 
>     You'll have issues with error handling and dropping workers if you're
>     not careful to chain the deferreds correctly. I would try something like
>     this personally. ...
> 
> 
> Hi Phil,
> Sorry it took me so long to get back to you.  Thanks for your 
> suggestion, but the thing I was trying to avoid is to have the Workers 
> communicate with the PB server.  There could be potentially many workers 
> and when I thought about the problem, it seemed cleaner to design 
> something where the client consisted of a 'Monitor' and 'Workers'.  The 
> monitor connects to the server, gets jobs, distributes jobs to the 
> workers and watches for workers who finished their jobs.  What do you 
> think of this design?  It is obviously a little more convoluted to 
> program but might be easier to deal with in the future.  I have little 
> programming experience so this is all speculation from my side.  Any 
> insight would be greatly appreciated.

To be honest, the problem still seems a little abstract to me, and I'm 
having a hard time figuring out exactly what you're trying to achieve. 
Surely the clients have to submit *some* form of completion status to 
the PB server?

The "Monitor" portion of the clients seem superfluous - what does it 
achieve that having the worker submit the completion does not?

Without a more concrete description I'm afraid I don't have much more 
useful to add.



From iacovou at gmail.com  Wed Nov  8 10:53:37 2006
From: iacovou at gmail.com (kgi)
Date: Wed, 8 Nov 2006 19:53:37 +0200
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
In-Reply-To: <20061105.003750.02715181.warner@lothar.com>
References: <20061105.003750.02715181.warner@lothar.com>
Message-ID: <200611081953.37255.iacovou@gmail.com>


Brian,

I'm trying to use Foolscap as a component in a system where it has to work 
with a lot of data that gets passed back from XML-RPC services.

So far it's been a pleasant experience: it's much more accessible 
than 'oldpb', the intro was easy to read and follow, and it looks and feels 
well-written: thank you!

XML-RPC was chosen in the interests of 'extreme interoperability', but there 
are small parts of the system where the data rate is somewhat too great: for 
these, XML-RPC is utterly unsuited, but Foolscap seems to be a good choice.

As a side-effect of this XML-RPC dependency, I needed to be able to pass 
xmlrpclib.DateTime objects over PB. The documentation states the following:

  "Note that you can also register an ICopyable adapter on third-party classes
   to avoid subclassing."

I spent a while trying to get this working by writing adapation classes and 
whatnot. I got the send part working but couldn't convince the receiver to 
recognise and deserialise the class. Then I looked through the source and 
test code and realised that you've provided an easier interface to do it, but 
haven't mentioned this in the documentation.

Given that being able to send third-party classes over Foolscap is probably a 
very common requirement, I thought I'd send a simple example for others in 
the same position lest they be led into thinking that this requires 
subclassing or writing adaptation classes.

You could even insert these in the part of the documenation about copyables 
where it says "TODO: example" :-)

Regards,

Ricky

-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateClient.py
Type: application/x-python
Size: 807 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061108/0155f12a/attachment-0006.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateCopy.py
Type: application/x-python
Size: 428 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061108/0155f12a/attachment-0007.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DateService.py
Type: application/x-python
Size: 548 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061108/0155f12a/attachment-0008.bin>

From yqiang at gmail.com  Wed Nov  8 14:59:42 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 8 Nov 2006 13:59:42 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <455197D7.2090508@imperial.ac.uk>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
Message-ID: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>

On 11/8/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> To be honest, the problem still seems a little abstract to me, and I'm
> having a hard time figuring out exactly what you're trying to achieve.
> Surely the clients have to submit *some* form of completion status to
> the PB server?


Ok.  The thing I am trying to design/code is a job distribution system, for
a distributed computation model.  There is a server which interacts with the
job database (which is just a bsddb).  The server accepts connections from
clients and distributes jobs to them.  The server also accepts connections
from a 2nd type of client, which submits jobs to the server.

The "Monitor" portion of the clients seem superfluous - what does it
> achieve that having the worker submit the completion does not?



For the clients whose sole purpose it is to get and process jobs, I
initially envisioned it containing 2 classes.  One class is the Monitor
class and one is the Worker class.  The Monitor's responsibility would be
coordinating the Workers since there can be multiple workers running on the
same client.  The monitor would coordinate tasks such as watching for
activity from the workers (i.e. update the output from workers as it comes
in) and also the monitor needs to be able to prematurely end a workers task
if the job is marked as unnecessary.
The workers of course have to submit their results back to the server, but
in the system I envisioned the monitor takes care of that by continuously
polling the status of the workers.

You're right in that this system complicates things since now I have to
handle communication between the client and the server, and on the client
side I need to implement communication protocols between the monitor and the
worker.  However, it does seem to buy me some flexibility.  Also, this will
keep the Worker class quite simple since all it actually does it execute an
external program to do it's job.

Without a more concrete description I'm afraid I don't have much more
> useful to add.


I hope this clears it up some more and am looking forward to your feedback.
I think the most difficult problem I am facing right now is to decide on a
good design.  This is kind of vague in text and I hope to be able to show
you some code soon, when I figure out how to publish a mercurial repository
:)

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061108/4a053aff/attachment.html>

From twisted-python at 2xlp.com  Wed Nov  8 17:08:30 2006
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 8 Nov 2006 19:08:30 -0500
Subject: [Twisted-Python] OpenID ?
Message-ID: <C25E7AFE-5CB2-4601-B5FB-024EB4ADF4E9@2xlp.com>

Has anyone implemented an OpenID server in twisted?

I need to roll out OpenID support in my application.  I'm finding a  
some things I don't like in the Python OpenID implementation thats  
out there, so I'm hoping that there might be a twisted version already?

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| FindMeOn.com - The cure for Multiple Web Personality Disorder
| Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| RoadSound.com - Tools For Bands, Stuff For Fans
| Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -





From yqiang at gmail.com  Wed Nov  8 19:46:17 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 8 Nov 2006 18:46:17 -0800
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
Message-ID: <3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>

On 11/8/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>
>
> The "Monitor" portion of the clients seem superfluous - what does it
> > achieve that having the worker submit the completion does not?
>
>
Also, another reason why I wanted a monitor is because then I only have to
establish on connection to the PB server, vs having each worker establish
it's own connection, or passing around the remoteobj.

Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061108/9d351bf8/attachment.html>

From sam at spinwardstars.com  Wed Nov  8 21:42:15 2006
From: sam at spinwardstars.com (Samuel Reynolds)
Date: Wed, 08 Nov 2006 21:42:15 -0700
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.co
 m>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>
	<454B6A69.2030804@imperial.ac.uk>
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>
	<455197D7.2090508@imperial.ac.uk>
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
Message-ID: <7.0.0.16.0.20061108211730.01c36720@spinwardstars.com>


>Ok.  The thing I am trying to design/code is a job distribution 
>system, for a distributed computation model.  There is a server 
>which interacts with the job database (which is just a bsddb).  The 
>server accepts connections from clients and distributes jobs to 
>them.  The server also accepts connections from a 2nd type of 
>client, which submits jobs to the server.

Sounds like a distributed task queue.

Users/user processes submit tasks to the master queue
manager (the "server") via a defined interface (HTTP post,
SOAP, XML-RPC, PB, or ???). The master queue manager
adds the requested tasks to the master job queue.

A secondary queue manager on each "client" machine
(the "monitor") requests tasks from the master queue
when its local queue drops below a defined threshold
number of jobs (or drops to zero). When the local queue
is empty, the secondary queue manager periodically
requests tasks from the master. It adds any tasks
received to its local queue.

For each received task, the secondary queue manager
starts a worker task, immediately receiving a deferred.
It registers success and error callbacks on the deferred.

When it gets the success or error callback from a worker,
the secondary queue manager records the result and reports
it to the master queue controller (the "server"). When it
has successfully reported to the master, it deletes the
task from the local queue.

Additional wrinkles: (1) Intertask dependencies may require
that some tasks be performed sequentially, on the same
slave machine, or both. (2) Some tasks may be more important
than others, and so must be processed (or at least started)
first. (3) Task cancellation at the master may require
that the master be able to send asynchronous task-cancel
instructions to the slaves.

>The workers of course have to submit their results back to the 
>server, but in the system I envisioned the monitor takes care of 
>that by continuously polling the status of the workers.

If the worker returns a deferred, the monitor doesn't
need to poll; it'll get a callback when the worker
completes (or fails).

HTH.

- Sam 





From katarzyna.winiarz at linuxdevjournal.com  Thu Nov  9 04:22:43 2006
From: katarzyna.winiarz at linuxdevjournal.com (Katarzyna Winiarz)
Date: Thu, 9 Nov 2006 12:22:43 +0100
Subject: [Twisted-Python] Twisted article
Message-ID: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>

Hello,

I am the editor of the magazines Linux Developer's Journal and MSCoder. Those 
magazines are designed for programers and developer's of plateforms  Linux  
(ldj) and of Microsoft (MSCoder).They are published bimonthly in french, 
spanish and german.
I would like to ask you if someone of you could write for us the article about 
Twisted in french linguistic version.
I would be very content.

Best regards
Kasia
-- 
Katarzyna Winiarz
katarzyna.winiarz at linuxdevjournal.com
www.linuxdevjournal.com
www.mscoder.org
tél. 0048 22 887 13 44
fax. 0048 22 887 10 11



From p.mayers at imperial.ac.uk  Thu Nov  9 05:00:35 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 09 Nov 2006 12:00:35 +0000
Subject: [Twisted-Python] Understanding Deferreds/callback further
In-Reply-To: <3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>
References: <3af8969a0611021533g349b4029t5b285461e416b619@mail.gmail.com>	
	<454B6A69.2030804@imperial.ac.uk>	
	<3af8969a0611071607h6ce0e349uf33b5ad748dd9773@mail.gmail.com>	
	<455197D7.2090508@imperial.ac.uk>	
	<3af8969a0611081359u7394dce9n2c940d5d789b2c03@mail.gmail.com>
	<3af8969a0611081846hbc13c78j329c61ef651b54ac@mail.gmail.com>
Message-ID: <45531863.3050808@imperial.ac.uk>

Yi Qiang wrote:
> On 11/8/06, *Phil Mayers* <p.mayers at imperial.ac.uk 
> <mailto:p.mayers at imperial.ac.uk>> wrote:
> 
> 
>         The "Monitor" portion of the clients seem superfluous - what
>         does it
>         achieve that having the worker submit the completion does not?
> 
> 
> Also, another reason why I wanted a monitor is because then I only have 
> to establish on connection to the PB server, vs having each worker 
> establish it's own connection, or passing around the remoteobj. 

(there's no need to CC me, I'm on the list)

Ok fine, you want a (superfluous IMHO) instance of a monitor class.

Do this:

class Worker:
   def issueJob(self, job):
     # return a deferred
     return reactor.callInThread(nonGILnonBlocking, job)

class Monitor:
   def connect(self):
     factory = pb.PB.ClientFactory()
     reactor.connectTCP(host, port, factory)
     factory.login(creds).addCallbacks(
       self.connected, self.connectfailed
     )

   def connected(self, remoteobj):
     self.remoteobj = remoteobj
     self.workerpool = SomeWorkerPool()
     for worker in self.workerpool:
       self.startWorker(worker)

   def startWorker(worker):
     self.remoteobj.callRemote('getJob').addCallback(
       self.startWorker2, worker
       # startWorker2 returns a deferred - the callback chain will be
       # paused here when that happens and continued when *that* deferred
       # finishes, with the callback value
     ).addCallback(
       self.workerDone,
       self.workerFailed,
       (worker,)
       {},
       (worker,)
       {},
     )

   def startWorker2(self, job, worker):
     deferred = worker.issueJob(job)
     return deferred

   def workerDone(self, result, worker):
     self.remoteobj.callRemote('jobDone', result)
     self.startWorker(worker)

   def workerFailed(self, failure, worker):
     self.remoteobj.callRemote('jobFailed', failure)
     self.startWorker(worker)

I *still* think you need a job ID number to key successes and failures 
at the server side.



From jan.bakuwel at int.greenpeace.org  Thu Nov  9 05:44:55 2006
From: jan.bakuwel at int.greenpeace.org (Jan Bakuwel)
Date: Thu, 09 Nov 2006 13:44:55 +0100
Subject: [Twisted-Python] SMTP server
Message-ID: <455322C7.3020605@int.gl3>

Hoi all,

This is my first message to the list so I think its appropriate to
express my appreciation for all the excellent work done by the people
who created & contributed to the twisted libraries.

I have a small but interesting problem that I'd like to ask your advise
on, please see the description below. If you notice that I haven't
understood something properly, I hope you'll correct me :-)

I've implemented a SMTP server (I've called it "xsmtp") using the
twisted & python libraries. A MTA (Postfix) delivers email messages to
the xsmtp server: the MTA opens a single SMTP session to the xsmpt
server, then multiple "RCPT TO"s follow, one for each recipient.

As a result The "validateFrom" procedure is called by the twisted
library once, followed by multiple calls to the "validateTo" procedure.

This is creating a small problem for me. Since I must process the email
in the validateTo procedure, I will now receive multiple copies of the
same email (albeit for different recipients). One of the tasks of the
xsmtp server is to transmit these emails to another xsmtp server (SMTP
cannot be used due to the inherently high latency connection between the
two). Ideally I do not transfer the same email twice but would like to
leave the delivery to multiple recipients up to the MTA on the other
end. In a schema:

-> MTA -> xsmtp -- high latency link --> xsmtp -> MTA -> local delivery

To implement smtp.IMessageDelivery I have to provide for the following
procedures:

validateFrom:    called once shortly after SMTP session is initiated
receivedHeader:  called multiple times for each recipient
validateTo:      called multiple tiems for each recipient

One could say that "validateFrom" is the start of the process (of
receiving an email) "receivedHeader/validateTo" is the core of the
process. What I am missing is something that indicates the end of the
process.


It would help me tremendously if smtp.IMessageDelivery would also
provide an abstract method that is called once the message delivery is
completed.

Any suggestions, thoughts are very welcome; perhaps this is already
possible with the twisted libraries in a different way as I'm suggesting
here?

best regards,
Jan

-- 

"It is an illusion to think that we are free to apply our increasing
knowledge in any way we choose. In reality we are struggling to deal
with the consequences of it."                           -- John Gray

----

Electronic Technology Coordinator
Information/Communication/Technology
Greenpeace International
Ottho Heldringstraat 5
1066 AZ  AMSTERDAM
Netherlands (MET)

direct    +31 (0)20 7182084
fax       +31 (0)20 5148151
reception +31 (0)20 5148150
email     jan.bakuwel&int.greenpeace.org
private   jan.bakuwel&hccnet.nl
(replace & by @ in the emailaddress)




From yoann.aubineau at wengo.fr  Thu Nov  9 08:12:46 2006
From: yoann.aubineau at wengo.fr (Yoann Aubineau)
Date: Thu, 09 Nov 2006 16:12:46 +0100
Subject: [Twisted-Python] Twisted article
In-Reply-To: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>
References: <200611091222.43976.katarzyna.winiarz@linuxdevjournal.com>
Message-ID: <1163085166.13099.12.camel@Hupetto>

Hi,
I don't feel like I know Twisted enough to write an article about it
myself. Plus, I definitely don't have time to do it from scratch
(writing is time consuming). However, if you need any help, I volunteer
to translate an English (preferably) or Spanish written article into
French (which is my mother tongue). Let me know. What's your deadline,
btw ?
Yoann

Le jeudi 09 novembre 2006 à 12:22 +0100, Katarzyna Winiarz a écrit :
> Hello,
> 
> I am the editor of the magazines Linux Developer's Journal and MSCoder. Those 
> magazines are designed for programers and developer's of plateforms  Linux  
> (ldj) and of Microsoft (MSCoder).They are published bimonthly in french, 
> spanish and german.
> I would like to ask you if someone of you could write for us the article about 
> Twisted in french linguistic version.
> I would be very content.
> 
> Best regards
> Kasia
-- 
Yoann Aubineau <yoann.aubineau at wengo.fr>




From james.kanze at gmail.com  Thu Nov  9 08:16:52 2006
From: james.kanze at gmail.com (James Kanze)
Date: Thu, 9 Nov 2006 16:16:52 +0100
Subject: [Twisted-Python] Installation of Twisted (Sumo) failing in web,
	words (I think)
Message-ID: <a16bec8a0611090716i1b31b08bn9b0fd6af0d3d5286@mail.gmail.com>

I think I'm having a problem with the installation of the
twisted Sumo package (TwistedSumo-2006-02-12, but Twisted-2.4.0
doesn't seem to work either).

Basically, I'm trying to get PyAIM-t working, under Linux (on a
machine with a very stripped down configuration, and on which I
don't have root access).  PyAIM-t requires Twisted (core, web
and words, at least), and recommends the 2.2.0 version, which is
in the TwistedSumo package above.  So I installed and built the
package, to the best of my ability (this is my first time
dealing with Python).  But PyAIM-t still doesn't seem to find
what it is looking for.  I added a few print statements where
the problem was occuring, so the code looks something like this:

   try:
       print sys.path
       print "trying domish"
       from twisted.words.xish.domish import SuxElementStream, \
                        Element, unescapedFromXml
       print "got domish"
       #  ...
   except ImportError:
       print sys.exc_info()[1]
       #  ...

The output here is:
   [... , '/home/team02/jakan/gnu/lib/python2.4/site-packages', ...]
   trying domish
   No module named words.xish.domish

What makes me thing that the problem is in my installation of
twisted: when I invoke "python setup.py" from the root, I get a lot
of messages along the lines of:

   package init filie 'twisted/plugins/__init__.py' not found (or not
a regular file)

In addition, to get anything in the library directory from the
path above, I have to add the --force flag, so that my install
command looks like:

    python setup.py --prefix=/home/team02/jakan/gnu \
        --exec-prefix=/home/team02/jakan/gnu/i686 --force

I'm sure that I'm doing something stupid and obvious that I'm
missing, but I don't quite no where to turn.  (This is really my
first contact with Python, starting yesterday.  I want to learn
it, but management wants a proof of concept that what we want to
do will work before approving the project.)

--
James Kanze (GABI Software)            mailto:james.kanze at gmail.com
Conseils en informatique orientée objet/
                  Beratung in objektorientierter Datenverarbeitung
9 place Sémard, 78210 St.-Cyr-l'École, France, +33 (0)1 30 23 00 34



From exarkun at divmod.com  Thu Nov  9 09:05:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Nov 2006 11:05:21 -0500
Subject: [Twisted-Python] SMTP server
In-Reply-To: <455322C7.3020605@int.gl3>
Message-ID: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>

On Thu, 09 Nov 2006 13:44:55 +0100, Jan Bakuwel <jan.bakuwel at int.greenpeace.org> wrote:
>Hoi all,
>
>This is my first message to the list so I think its appropriate to
>express my appreciation for all the excellent work done by the people
>who created & contributed to the twisted libraries.
>
>I have a small but interesting problem that I'd like to ask your advise
>on, please see the description below. If you notice that I haven't
>understood something properly, I hope you'll correct me :-)
>
>I've implemented a SMTP server (I've called it "xsmtp") using the
>twisted & python libraries. A MTA (Postfix) delivers email messages to
>the xsmtp server: the MTA opens a single SMTP session to the xsmpt
>server, then multiple "RCPT TO"s follow, one for each recipient.
>
>As a result The "validateFrom" procedure is called by the twisted
>library once, followed by multiple calls to the "validateTo" procedure.
>
>This is creating a small problem for me. Since I must process the email
>in the validateTo procedure, I will now receive multiple copies of the
>same email (albeit for different recipients). One of the tasks of the
>xsmtp server is to transmit these emails to another xsmtp server (SMTP
>cannot be used due to the inherently high latency connection between the
>two). Ideally I do not transfer the same email twice but would like to
>leave the delivery to multiple recipients up to the MTA on the other
>end. In a schema:
>
>-> MTA -> xsmtp -- high latency link --> xsmtp -> MTA -> local delivery
>
>To implement smtp.IMessageDelivery I have to provide for the following
>procedures:
>
>validateFrom:    called once shortly after SMTP session is initiated
>receivedHeader:  called multiple times for each recipient
>validateTo:      called multiple tiems for each recipient
>
>One could say that "validateFrom" is the start of the process (of
>receiving an email) "receivedHeader/validateTo" is the core of the
>process. What I am missing is something that indicates the end of the
>process.
>
>
>It would help me tremendously if smtp.IMessageDelivery would also
>provide an abstract method that is called once the message delivery is
>completed.
>
>Any suggestions, thoughts are very welcome; perhaps this is already
>possible with the twisted libraries in a different way as I'm suggesting
>here?

The situation is not ideal, but I think if you use IMessageDeliveryFactory
instead of IMessageDelivery you'll be able to accomplish your goal.

With IMessageDeliveryFactory, you can create a new IMessageDelivery provider
for each SMTP transaction.  validateTo is still called multiple times on
your IMessageDelivery provider, but because a new one is created for each
transaction, you should be able to avoid making multiple deliveries to your
real backend.

(As I wrote that I realized it was not a very clear explanation at all, but
I cannot think of another way to put it without actually implementing
something).

Jean-Paul



From katarzyna.winiarz at linuxdevjournal.com  Thu Nov  9 09:23:40 2006
From: katarzyna.winiarz at linuxdevjournal.com (Katarzyna Winiarz)
Date: Thu, 9 Nov 2006 17:23:40 +0100
Subject: [Twisted-Python] article
Message-ID: <200611091723.40790.katarzyna.winiarz@linuxdevjournal.com>

Hello,

We need of an article about project Twisted- Python for the magazine for 
programers and developers of Linux (www.linuxdevjournal.com). This magazine 
is published bimonthly in french.
The article must be strictly technic and pratically oriented. Longeur it's 
10-15 pages in text editor(20 000 - 30 000 caracters).
We will pay 25 euros for the page of the texte past the print, without 
listings and figures.

Kasia
-- 
Katarzyna Winiarz
katarzyna.winiarz at linuxdevjournal.com
www.linuxdevjournal.com
tél. 0048 22 887 13 44
fax. 0048 22 887 10 11



From zsp007 at gmail.com  Thu Nov  9 22:44:35 2006
From: zsp007 at gmail.com (=?UTF-8?B?5byg5rKI6bmP?=)
Date: Fri, 10 Nov 2006 13:44:35 +0800
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
Message-ID: <455411C3.30806@gmail.com>

I want to know whether Twisted  can run in Python2.5 .




From jan.bakuwel at int.greenpeace.org  Fri Nov 10 02:57:31 2006
From: jan.bakuwel at int.greenpeace.org (Jan Bakuwel)
Date: Fri, 10 Nov 2006 10:57:31 +0100
Subject: [Twisted-Python] SMTP server
In-Reply-To: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>
References: <20061109160521.20948.2019646651.divmod.quotient.19802@ohm>
Message-ID: <45544D0B.2000503@int.gl3>

Hi Jean-Paul,
> The situation is not ideal, but I think if you use
> IMessageDeliveryFactory
> instead of IMessageDelivery you'll be able to accomplish your goal.
>
> With IMessageDeliveryFactory, you can create a new IMessageDelivery
> provider
> for each SMTP transaction.  validateTo is still called multiple times on
> your IMessageDelivery provider, but because a new one is created for each
> transaction, you should be able to avoid making multiple deliveries to
> your
> real backend.
>
> (As I wrote that I realized it was not a very clear explanation at
> all, but
> I cannot think of another way to put it without actually implementing
> something).
Are you suggesting that I would implement my own version of
IMessageDelivery to include the abstract method I'm wishing for? Just
trying to understand what you're suggesting... :-)

regards,
Jan

-- 

"It is an illusion to think that we are free to apply our increasing 
knowledge in any way we choose. In reality we are struggling to deal 
with the consequences of it."                           -- John Gray

----

Electronic Technology Coordinator
Information/Communication/Technology
Greenpeace International
Ottho Heldringstraat 5
1066 AZ  AMSTERDAM
Netherlands (MET)

direct    +31 (0)20 7182084
fax       +31 (0)20 5148151
reception +31 (0)20 5148150
email     jan.bakuwel&int.greenpeace.org
private   jan.bakuwel&hccnet.nl
(replace & by @ in the emailaddress)





From exarkun at divmod.com  Fri Nov 10 06:22:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 08:22:59 -0500
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <455411C3.30806@gmail.com>
Message-ID: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>

On Fri, 10 Nov 2006 13:44:35 +0800, 张沈鹏 <zsp007 at gmail.com> wrote:
>I want to know whether Twisted  can run in Python2.5 .
>

Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
have fewer problems.

Jean-Paul



From exarkun at divmod.com  Fri Nov 10 06:29:11 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 08:29:11 -0500
Subject: [Twisted-Python] SMTP server
In-Reply-To: <45544D0B.2000503@int.gl3>
Message-ID: <20061110132911.20948.1453713239.divmod.quotient.21240@ohm>

On Fri, 10 Nov 2006 10:57:31 +0100, Jan Bakuwel <jan.bakuwel at int.greenpeace.org> wrote:
>Hi Jean-Paul,
>> The situation is not ideal, but I think if you use
>> IMessageDeliveryFactory
>> instead of IMessageDelivery you'll be able to accomplish your goal.
>>
>> With IMessageDeliveryFactory, you can create a new IMessageDelivery
>> provider
>> for each SMTP transaction.  validateTo is still called multiple times on
>> your IMessageDelivery provider, but because a new one is created for each
>> transaction, you should be able to avoid making multiple deliveries to
>> your
>> real backend.
>>
>> (As I wrote that I realized it was not a very clear explanation at
>> all, but
>> I cannot think of another way to put it without actually implementing
>> something).
>Are you suggesting that I would implement my own version of
>IMessageDelivery to include the abstract method I'm wishing for? Just
>trying to understand what you're suggesting... :-)

You should implement IMessageDelivery and your implementation should keep
internal state which tracks which users the message should be delivered to.
This state should be transferred to the IMessage provider which validateTo
returns.  When IMessage.messageDone is called, you should use that state to
deliver the message once and only once to the intended recipients.

IMessage.messageDone is the notification you want, as long as you are using
a different IMessageDelivery for each message, which is what implementing
IMessageDeliveryFactory lets you do.

Jean-Paul



From twisted-list at zorinholdings.com  Fri Nov 10 08:24:51 2006
From: twisted-list at zorinholdings.com (Matt P)
Date: Fri, 10 Nov 2006 15:24:51 +0000 (GMT)
Subject: [Twisted-Python] Callback blocked in event loop
Message-ID: <Pine.LNX.4.64.0611101513230.3950@kylie.zorinholdings.com>


Hello

I've got a bit of an issue that someone may recognise and bea ble to set 
me straight!

I have a twisted.spread server which, amongst other things, provides an 
event pub/sub engine. The subscription manager and event publisher runs in 
the twisted event loop: an event is posted onto a DeferredQueue and the 
callback on that Queue iterates through listeners calling eventFired(...).

Some event listeners run in-server, but others are seperate processes 
which register by calling the register function on the server and 
providing a pb.Referenceable that the event publisher can call 
eventFired(...) on.

Events may be raised in the server, as a twisted.pb call to fireEvent on 
the server and also come in on a separate thread (from a JMS message 
queue) and get posted onto the DefferedQueue for events.

If events are raised in the server, remote listeners get their 
pb.Referenceable callback immediately. It works as I would like.

However, if a message comes in off the JMS bus, the DeferredQueue callback 
gets called, it in turns calls the referenceable callback and nothing 
happens. Only when the server handles *any* other Twisted event do the 
event callbacks execute and my remote listeners get the message.

So, only in the case where teh DeferredQueue.put(...) is called from 
another thread do I have the problem. I can't see why the blocking. Does 
this behaviour make sense to anyone!?

Many thanks in advance for any help!!
Matthew




From exarkun at divmod.com  Fri Nov 10 09:14:13 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 11:14:13 -0500
Subject: [Twisted-Python] Callback blocked in event loop
In-Reply-To: <Pine.LNX.4.64.0611101513230.3950@kylie.zorinholdings.com>
Message-ID: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>

On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P <twisted-list at zorinholdings.com> wrote:
>
>Hello
>
>I've got a bit of an issue that someone may recognise and bea ble to set me 
>straight!
>
> [snip]
>
>Events may be raised in the server, as a twisted.pb call to fireEvent on the 
>server and also come in on a separate thread (from a JMS message queue) and 
>get posted onto the DefferedQueue for events.
>
>If events are raised in the server, remote listeners get their 
>pb.Referenceable callback immediately. It works as I would like.
>
> [snip]
>
>So, only in the case where teh DeferredQueue.put(...) is called from another 
>thread do I have the problem. I can't see why the blocking. Does this 
>behaviour make sense to anyone!?

DeferredQueue isn't threadsafe.  Instead of calling put() directly from a
non-reactor thread, call it with reactor.callFromThread:


    reactor.callFromThread(q.put, value)

Jean-Paul



From twisted-list at zorinholdings.com  Fri Nov 10 09:40:48 2006
From: twisted-list at zorinholdings.com (MattP)
Date: Fri, 10 Nov 2006 16:40:48 +0000 (GMT)
Subject: [Twisted-Python] Callback blocked in event loop
In-Reply-To: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>
References: <20061110161413.20948.375443474.divmod.quotient.21459@ohm>
Message-ID: <Pine.LNX.4.64.0611101640210.3950@kylie.zorinholdings.com>

Oh my - how could I have been so daft? I'll put it down to Friday - 
thankyou very much Jean-Paul
for opening my eyes!

Cheers
Matthew

On Fri, 10 Nov 2006, Jean-Paul Calderone 
wrote:

> On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P 
> <twisted-list at zorinholdings.com> wrote:
>> 
>> Hello
>> 
>> I've got a bit of an issue that someone may recognise and bea ble to set me 
>> straight!
>>
>>  [snip]
>> 
>> Events may be raised in the server, as a twisted.pb call to fireEvent on 
>> the server and also come in on a separate thread (from a JMS message queue) 
>> and get posted onto the DefferedQueue for events.
>> 
>> If events are raised in the server, remote listeners get their 
>> pb.Referenceable callback immediately. It works as I would like.
>>
>>  [snip]
>> 
>> So, only in the case where teh DeferredQueue.put(...) is called from 
>> another thread do I have the problem. I can't see why the blocking. Does 
>> this behaviour make sense to anyone!?
>
> DeferredQueue isn't threadsafe.  Instead of calling put() directly from a
> non-reactor thread, call it with reactor.callFromThread:
>
>
>   reactor.callFromThread(q.put, value)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

----------------------------------------------
Matthew Pontefract
http://www.zorinholdings.com/
----------------------------------------------



From jmike at caringo.com  Fri Nov 10 10:54:03 2006
From: jmike at caringo.com (Mike Morrison)
Date: Fri, 10 Nov 2006 11:54:03 -0600
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>
References: <20061110132259.20948.1790896795.divmod.quotient.21234@ohm>
Message-ID: <D64DA0DF-01FB-4ED2-AB94-E2DCAF8F183D@caringo.com>


On Nov 10, 2006, at 7:22 AM, Jean-Paul Calderone wrote:

> On Fri, 10 Nov 2006 13:44:35 +0800, 张沈鹏 <zsp007 at gmail.com>  
> wrote:
>> I want to know whether Twisted  can run in Python2.5 .
>>
>
> Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
> have fewer problems.

Uh oh, I was about to go down the python2.5/twisted2.4 road too  
(we're only using core and names).  I queried the tickets for  
anything "python 2.5", "python2.5" and "python25" in the summary and  
saw only three tickets, none that looked like impediments to use.   
Are there others that I've missed?

--jmike





From exarkun at divmod.com  Fri Nov 10 11:15:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Nov 2006 13:15:00 -0500
Subject: [Twisted-Python] I want to know whether Twisted can run in
	Python2.5 .
In-Reply-To: <D64DA0DF-01FB-4ED2-AB94-E2DCAF8F183D@caringo.com>
Message-ID: <20061110181500.20948.417919939.divmod.quotient.21606@ohm>

On Fri, 10 Nov 2006 11:54:03 -0600, Mike Morrison <jmike at caringo.com> wrote:
>
>On Nov 10, 2006, at 7:22 AM, Jean-Paul Calderone wrote:
>>On Fri, 10 Nov 2006 13:44:35 +0800, 张沈鹏 <zsp007 at gmail.com>  wrote:
>>>I want to know whether Twisted  can run in Python2.5 .
>>
>>Twisted 2.4 has numerous problems with Python 2.5.  Twisted 2.5 will
>>have fewer problems.
>
>Uh oh, I was about to go down the python2.5/twisted2.4 road too  (we're only 
>using core and names).  I queried the tickets for  anything "python 2.5", 
>"python2.5" and "python25" in the summary and  saw only three tickets, none 
>that looked like impediments to use.   Are there others that I've missed?

http://twistedmatrix.com/trac/ticket/1867 covers a lot of the breakage, but
not all of it.

Jean-Paul



From srock258 at gmail.com  Fri Nov 10 14:54:22 2006
From: srock258 at gmail.com (Sean Roark)
Date: Fri, 10 Nov 2006 16:54:22 -0500
Subject: [Twisted-Python] Newbie to Twisted. Converting Asyncore App to
	Twisted App
Message-ID: <a7964aae0611101354r386c7028u2eca97854fcbb55f@mail.gmail.com>

I am new to this Twisted Architecture so if my plan makes no sense, please
guide me down a smoother path.

I have a program using Asyncore as the communications interface but I want
to switch to Twisted.

Server1                                Server 2
<-------TCP------|             | <---TCP-------
                     | My App |
----TCP--------->|             |----TCP----->

Basically MyApp takes stuff from Server 1, modifies it in some way, then
sends it to server 2 and vice versa for Server 2 to Server 1. It is a
translator between two ICD's languages spoken by two different systems. All
data in and out is raw.

I have modules written that can parse the raw data into objects, translate
the objects into the other ICD, then repack the objects into raw data.
Currently, My App uses asyncore to manage the socket between the servers as
pictured above. Asyncore sticks the raw data on a Queue for the next object
to retrieve. Each object is a thread that blocks on the Queue until data
arrives. When a object receives data on the Queue, it performs its operation
and sticks the modified data on another queue for the next thread to handle.
Eventually, data ends up on a Queue being monitored by an Asyncore
dispatcher that grabs the data and sends it to a server.

Server1 ----TCP----->Asyncore.recv() --put--> Queue --get-->Parser--put-->
Queue --get--> Translator --put--> Queue --get--> Packer --put---> Queue
--get-->Asyncore.send()

I would like to use Twisted for the following reasons:

1. Add a gui, stand alone or web based, allowing users to view statistics
being generated by modules and to inject messages to one of the servers.
Other services may be necessary in the future
2. We have a problem with asyncore behaving differently on Windows servers
then Linux servers with regards to reconnecting after network drops. It is
greatly beneficial if we can run on either platform.
3. Twistd is a great way to run this program as a daemon on Linux but still
works on Windows
4. My own personal education
5. Twisted seems so cool

Questions that have arisen as i try to code this in Twisted.

1. What is the proper method for gluing my processing modules to Twisted?
I have followed the finger tutorial and it seems I should call them from a
Service class. Finger tutorial part
3<http://twistedmatrix.com/projects/core/documentation/howto/tutorial/style.html>
This leads to question 2

I have toyed with using DeferredQueue's to pass data between the modules. I
would pretty much follow the pattern above, but the DeferredQueue's should
allow my modules to NOT run as threads. Instead they just fire events when
data arrives on their Queue.

2. How do I have My App send data to the servers via events?
In the finger tutorial Part 3 there are getUser and getUsers methods that
are called by the FingerProtocol class via the FingerClientFactory. This all
makes sense for processing data from the network and responding to it, but
suppose I want some other object, say my Packer object, to fire an event
that will make FingerProtocol send some data from Packer to the server? How
do I expose a method to do this if Packer only knows about the Service, but
the Service has no access to methods in FingerProtocol?

I have come up with two solutions to this problem, neither of which is
impressive to me.

First solution, use DeferredQueue's to pass all the data around. This does
work as a prototype, but I have no Service class wrapping it.

class QueueProtocol(Protocol):
    "Handles the network receive and send work for a send and a receive
queue"
    def dataReceived(self, data):
        print "Received Data:",data
        self.factory.putData(data)

    def connectionMade(self):
        print "Conn Made"
        self.sendData()

    def sendData(self):
        print "sendData"
        self.factory.getData().addCallback(self.sendHelp)

    def sendHelp(self,data):
        print "SendHelp",data
        self.transport.write(data+"\r\n")
        self.sendData()

class QueueClientFactory(ClientFactory):
    "Handle the Connection"
    protocol = QueueProtocol
    def __init__(self,recQueue, sendQueue):
        self.recQueue = recQueue #both deferredQueue's
        self.sendQueue = sendQueue

    def putData(self,data):
        self.recQueue.put(data)

    def getData(self):
        "Returns a defered because sendQueue is a DeferredQueue"
        return self.sendQueue.get()

Second solution, that I have not managed to code. I have the feeling I'm way
of the mark here.

Each component (yes I have been reading the Zope docs) in the application
knows about interfaces. All components will implement a receive(data) method
and a process(data) method. Each of these objects can pass data to other
components by adding another components receive(data) method as a callback
to its own process(data) method.

Parse
def receive(data):
self.process(data).addCallback( Translate.receive(data) )

The Parse object receives data from somewhere. The process method takes this
raw data and parses it into an object. When process has completed the
callback method, defined in the Translate object, is called with the new
object as a parameter.

Parse's Factory class will take an instance of Translate in __init__.

Some guidance would make my brain hurt less.

Thanks,

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061110/3c545c46/attachment.html>

From general at eepatents.com  Fri Nov 10 23:53:25 2006
From: general at eepatents.com (Ed Suominen)
Date: Fri, 10 Nov 2006 22:53:25 -0800
Subject: [Twisted-Python] Re: Callback blocked in event loop
In-Reply-To: <E1Giafc-00061s-02@pyramid.twistedmatrix.com>
References: <E1Giafc-00061s-02@pyramid.twistedmatrix.com>
Message-ID: <45557365.8060405@eepatents.com>

> On Fri, 10 Nov 2006 15:24:51 +0000 (GMT), Matt P wrote:
>>> Events may be raised in the server, as a twisted.pb call to 
>>> fireEvent on the server and also come in on a separate thread (from
>>> a JMS message queue) and get posted onto the DefferedQueue for 
>>> events.
>>> 
>>> If events are raised in the server, remote listeners get their 
>>> pb.Referenceable callback immediately. It works as I would like.
>>> 
>>> [snip]
>>> 
>>> So, only in the case where teh DeferredQueue.put(...) is called 
>>> from another thread do I have the problem. I can't see why the 
>>> blocking. Does this behaviour make sense to anyone!?
> 
> DeferredQueue isn't threadsafe.  Instead of calling put() directly from
> a non-reactor thread, call it with reactor.callFromThread:
> 
>     reactor.callFromThread(q.put, value)
> 
> Jean-Paul

Matt, this is exactly the sort of thing for which I wrote the taskqueue
module that is patiently awaiting review in ticket #1768
(http://twistedmatrix.com/trac/ticket/1768).

It is a critical part of my sAsync project ("SQLAlchemy done
asynchronously"). You can check out the latest version as used in that
project at:

http://foss.eepatents.com/sAsync/browser/trunk/sasync/taskqueue.py.

The part that would appear to be of particular interested to you is the
ThreadQueue subclass of TaskQueue.

Best regards,
Ed Suominen



From alvinwang at gmail.com  Sat Nov 11 00:49:27 2006
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 10 Nov 2006 23:49:27 -0800
Subject: [Twisted-Python] Converting twistd script to NT service using py2exe
Message-ID: <77d044440611102349y533bbb1dx98d9bad53f0b7697@mail.gmail.com>

http://twistedmatrix.com/pipermail/twisted-python/2004-January/007021.html
http://twistedmatrix.com/pipermail/twisted-python/2004-March/007311.html
http://twistedmatrix.com/pipermail/twisted-python/2005-April/010038.html

*There seems to be the implication that I need tap2ntsvc from the sandbox.
Unfortunately, I can not seem to find it in the sandbox.

*

Is it out of date?  Have the files been moved?  Is there another way to
accomplish the same objective?

thanks
-- 
Alvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061110/11d043da/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov 11 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1163311502.64.198124843@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-05 through 2006-11-12
Bugs opened: 9    Bugs closed: 3  Total open bugs: 783 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +1          |Core:   +4             
|Enhancement:  +1  |High:     +1          |Trial:  +0             
                   |Normal:   +2          |Web:    +1             
                   |Low:      +1          |Web2:   +1             
                   |Lowest:   +1                                  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2223] DeferredSemaphore should be marked "stable" (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2223

[#2225] microdom shouldn't bork on malformed tags when beExtremelyLenient is enabled (opened by jml) (CLOSED, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2225

                    ===== High =====
[#2224] Web2: Behavior of Request.locateResource vs Resource.locateChild is not clearly defined. (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2224

                    ===== Normal =====
[#2219] isInIOThread() returns False when used in TestCases (opened by sifu)
    defect          trial      http://twistedmatrix.com/trac/ticket/2219

[#2220] [SIP] parsing bugs/limitations and patch (opened by antoine)
    defect          core       http://twistedmatrix.com/trac/ticket/2220

[#2222] t.i.task.Clock.advance should set the call.called attribute. (opened by ralphm)
    defect          core       http://twistedmatrix.com/trac/ticket/2222

                    ===== Low =====
[#2221] MotdResource gets stale in finger15.py (opened by gfalcon) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2221

[#2227] sux uses "True" as the default value for an attribute (opened by jml)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2227

                    ===== Lowest =====
[#2226] qt4reactor.stop() not closing connections and quitting python (opened by Tantalum)
    defect          core       http://twistedmatrix.com/trac/ticket/2226



Closed Bugs
______________________
                    ===== Highest =====
[#2225] microdom shouldn't bork on malformed tags when beExtremelyLenient is enabled (opened by jml, closed by jml, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2225

                    ===== Normal =====
[#2144] Add Trial option to stop test run on the first failure (opened by jml, closed by exarkun, duplicate)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2144

                    ===== Low =====
[#2221] MotdResource gets stale in finger15.py (opened by gfalcon, closed by jerub, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2221





From waterbug at pangalactic.us  Mon Nov 13 07:01:58 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 13 Nov 2006 09:01:58 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
Message-ID: <45587AD6.1010707@pangalactic.us>

trac at twistedmatrix.com wrote:
> New submission from LonelyPixel <nospam at unclassified.de>:
> 
> I have installed twisted 2.4 for Debian Python 2.4 and after a recent apt-get upgrade, when Python 2.4 was to be upgraded, I get this error:
> 
> Setting up python2.4 (2.4.1-2sarge1) ...
> Compiling python modules in /usr/lib/python2.4 ...
> Compiling /usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py ...
>   File "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", line 20
>     ???
>     ^
> SyntaxError: invalid syntax

I'm amazed that this error is still there -- I saw it *months* ago!
Sure makes Twisted look bad.

Steve




From twisted at ralphm.ik.nu  Mon Nov 13 09:12:44 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 13 Nov 2006 17:12:44 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <45587AD6.1010707@pangalactic.us>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>
	<45587AD6.1010707@pangalactic.us>
Message-ID: <20061113161244.GA67850@ik.nu>

On Mon, Nov 13, 2006 at 09:01:58AM -0500, Stephen Waterbury wrote:
> trac at twistedmatrix.com wrote:
> >New submission from LonelyPixel <nospam at unclassified.de>:
> >
> >I have installed twisted 2.4 for Debian Python 2.4 and after a recent 
> >apt-get upgrade, when Python 2.4 was to be upgraded, I get this error:
> >
> >Setting up python2.4 (2.4.1-2sarge1) ...
> >Compiling python modules in /usr/lib/python2.4 ...
> >Compiling 
> >/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py ...
> >  File 
> >  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
> >  line 20
> >    ???
> >    ^
> >SyntaxError: invalid syntax
> 
> I'm amazed that this error is still there -- I saw it *months* ago!
> Sure makes Twisted look bad.

Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
just haven't done a new release. Also, the debian package maintainers
could easily fix this, but apparently choose not to. Other packagers
(among which FreeBSD) have no troubles at all.

-- 
Groetjes,

ralphm



From bhenry at pacecocorp.com  Mon Nov 13 10:39:48 2006
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Mon, 13 Nov 2006 09:39:48 -0800
Subject: [Twisted-Python] Converting twistd script to NT service using
	py2exe
In-Reply-To: <77d044440611102349y533bbb1dx98d9bad53f0b7697@mail.gmail.com>
Message-ID: <E1Gjfpy-0007XM-00@pyramid.twistedmatrix.com>

Check out /sandbox/moonfallen/ntsvc, it works on my Windows XP Pro and XP
Home machines for installing a service out of a Twisted project.  Just save
the .py file as a .tac and follow the directions.  

 

http://twistedmatrix.com/trac/browser/sandbox/moonfallen/README-ntsvc.txt

 

Regards,

 

Ben

  _____  

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin Wang
Sent: Friday, November 10, 2006 11:49 PM
To: Twisted general discussion
Subject: [Twisted-Python] Converting twistd script to NT service using
py2exe

 

http://twistedmatrix.com/pipermail/twisted-python/2004-January/007021.html
http://twistedmatrix.com/pipermail/twisted-python/2004-March/007311.html
http://twistedmatrix.com/pipermail/twisted-python/2005-April/010038.html 


There seems to be the implication that I need tap2ntsvc from the sandbox.  


Unfortunately, I can not seem to find it in the sandbox.  
 

Is it out of date?  Have the files been moved?  Is there another way to
accomplish the same objective?

thanks
-- 
Alvin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061113/c24aee2b/attachment.html>

From apocalypznow at gmail.com  Mon Nov 13 12:01:27 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Mon, 13 Nov 2006 11:01:27 -0800
Subject: [Twisted-Python] Why does this simple server not work?
Message-ID: <ejafe8$etp$1@sea.gmane.org>

The following is run but almost immediately terminates without any 
errors.  WHY?  I used "twistd -noy server.tac".
Here is the code:
****************************
import twisted
from twisted.spread import pb
from twisted.cred import checkers,portal
from twisted.internet import reactor
from twisted.python import threadable
from twisted.python import usage
import threading
import socket

clients={}

class ClientRemoteObject(pb.Avatar):
     global clients
     def __init__(self):
         print "ClientRemoteObject initialized."

     def attached(self):
         print "Client attached"
         return self

     def detached(self):
         print "Client detached"

     def perspective_initialDataExchange(self,clientreference,username):
         print "Client reference attached for:" + username
         clients[username]=clientreference
         data={}
         data['connected']=1
         return data

     def perspective_broadcastMessage(self,msg):
         for user in clients:
             clients[user].callRemote("messageCB",msg + "s")



class DefaultRealm:
     __implements__ = portal.IRealm

     def requestAvatar(self, avatarID, mind, *interfaces):
         assert pb.IPerspective in interfaces
         clientremoteobj = ClientRemoteObject()
         clientremoteobj.attached()
         return pb.IPerspective, clientremoteobj, lambda 
a=clientremoteobj:a.detached()

def shutdownCleanUp():
     print "Twisted reactor shutting down."



application = twisted.application.service.Application("server01")
myService = twisted.application.service.IServiceCollection(application)

reactor.addSystemEventTrigger('before','shutdown',shutdownCleanUp)

p = portal.Portal(DefaultRealm())
dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
dbu.addUser("user1","pass1")
p.registerChecker(dbu)


myServer = twisted.application.internet.TCPServer(81,pb.PBServerFactory(p))
myServer.setServiceParent(myService)
****************
It used to work with Twisted 1.3rc1, but it does not run with Twisted 
2.2 (or 2.3 or 2.4).  I am using Python 2.3, and running this from a DOS 
prompt in Windows.





From exarkun at divmod.com  Mon Nov 13 13:38:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Nov 2006 15:38:17 -0500
Subject: [Twisted-Python] Why does this simple server not work?
In-Reply-To: <ejafe8$etp$1@sea.gmane.org>
Message-ID: <20061113203817.20948.2077254352.divmod.quotient.26327@ohm>

On Mon, 13 Nov 2006 11:01:27 -0800, apocalypznow <apocalypznow at gmail.com> wrote:
>The following is run but almost immediately terminates without any errors. 
>WHY?  I used "twistd -noy server.tac".
>Here is the code:

Using Python 2.3.5 with Twisted r18666, when I run it I get an AttributeError.
If I add:

    import twisted.application.internet

Near the top, then it starts up as expected.

Jean-Paul



From shimon at rura.org  Mon Nov 13 14:09:20 2006
From: shimon at rura.org (Shimon Rura)
Date: Mon, 13 Nov 2006 16:09:20 -0500
Subject: [Twisted-Python] advice on asynchronous LDAP?
Message-ID: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>

Hi folks,

I'm a newbie writing a twisted server that needs to access an LDAP
server.  I started by using python-ldap, which worked fine and is well
documented, but doesn't seem to have support for a callback mechanism
that would make it appropriate for a twisted app.  So I switched to
ldaptor, which fits the twisted model, but doesn't seem to have much
documentation.

I'm looking for advice from people who have some familiarity with
writing twisted apps that include an LDAP client.  Ideally, I'd like
to find either:

(1) a way to use the standard python-ldap library in a multitasking
twisted server (i.e. without busy wait; polling at timed intervals is
a possibility but also seems bad), or

(2) a hidden trove of ldaptor documentation, or a mailing list or IRC
channel where I could ask questions of people who know ldaptor.

Any hints in either of these directions would be most appreciated.
And if you're not an expert but might be interested in forming a new
venue to discuss twisted+LDAP, let me know -- maybe we can set
something up.

thanks,
Shimon Rura



From jean-marc.pouchoulon at ac-montpellier.fr  Tue Nov 14 00:10:08 2006
From: jean-marc.pouchoulon at ac-montpellier.fr (jean-marc pouchoulon)
Date: Tue, 14 Nov 2006 08:10:08 +0100
Subject: [Twisted-Python] advice on asynchronous LDAP?
In-Reply-To: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
References: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
Message-ID: <45596BD0.2060101@ac-montpellier.fr>

Shimon Rura wrote:

> Hi folks,
>
Hello

> I'm a newbie writing a twisted server that needs to access an LDAP
> server.  I started by using python-ldap, which worked fine and is well
> documented, but doesn't seem to have support for a callback mechanism
> that would make it appropriate for a twisted app.  So I switched to
> ldaptor, which fits the twisted model, but doesn't seem to have much
> documentation.

I tried to use it but it worked only with twisted 1.3

>
> I'm looking for advice from people who have some familiarity with
> writing twisted apps that include an LDAP client.  Ideally, I'd like
> to find either:
>
> (1) a way to use the standard python-ldap library in a multitasking
> twisted server (i.e. without busy wait; polling at timed intervals is
> a possibility but also seems bad), or

The way I found was to use python ldap and deferToThread.
This is not really  in the "asynchronous spirit of twisted " but it works.

Here an example I used to make a small sendmail X map lookup:

from twisted.application import internet, service
from twisted.internet import protocol,reactor, defer, threads
from twisted.internet.protocol import Protocol
from twisted.protocols import basic
import ldap


class MapProtocol(Protocol):

    def dataReceived(self, Mel):
        d = threads.deferToThread(self.factory._lire_annuaire_ldap,Mel)
        d.addCallback(self._cb)
        d.addErrback(self._eb)

    def _cb(self, result):
        self.transport.write(result)
        

    def _eb(self, error):
        print error
        self.transport.loseConnection()

class MapFactory(protocol.ServerFactory):
    protocol = MapProtocol

    def __init__(self, servers,who, cred, mydomains, dictstatus):

        # directory
        self.ldapservers  = ldapservers
        self.who = who
        self.cred = cred
        self.mydomains = mydomains
        self.NOTFOUND = dictstatus['NOTFOUND']
        self.TEMP = dictstatus['PERM']


    def _lire_annuaire_ldap(self,mel):
        """ lookup directory server retourne RHS """

        def _bind2ldap(servers,who="",cred=""):
            """ Trouve une serveur ldap dispo dans la liste qui lui est passé """
            status = False
            for server in servers:
                   urildap = "ldap://" + server
                   l = ldap.initialize(urildap)
                   l.protocol_version=ldap.VERSION3
                   try:
                       resultbind = l.simple_bind_s(who,cred)
                       status = True
                       break
                   except ldap.LDAPError,e :
                       continue
            return(status,l)


        uid = ''
        mailhost = ''
        aretourner = self.NOTFOUND

        statusldap = False # directory server est disponible ?


        # Nom de la map
        # si on en a plusieurs dans le futur

        nommap = mel.split()[0].split(':')[1]

        # map LHS
        mel = mel.split()[1][:-1]
        

        # our domain or not ?

        try:
                mydomain = mel.split('@')[1]
        except IndexError,e:
                mydomain = 'mydomain'

      
        if mydomain in self.mydomains:
            statusldap, maconn =  _bind2ldap(self.ldapservers,self.who,self.cred)

            if statusldap:
                marequete = '(|(mail=' + mel + ')(mailalternateaddress=' + mel +')(mailequivalentaddress=' + mel
 + '))'
               
                result_data = maconn.search_s("dc=...", ldap.SCOPE_SUBTREE, marequete , ['uid', 'mailhost']
)
                
                if len(result_data) > 0:
                    try:
                       uid  = ''.join(result_data[0][1]['uid'])
                    except KeyError:
                       print 'error clef:%s' % mel
                       uid = mel.split("@")[0]
                    mailhost  = ''.join(result_data[0][1]['mailhost'])
                    status = 'OK '
                    reponse = status + '<' + uid + '@' + mailhost + '>'
                    aretourner = str(len(reponse)) + ":" + reponse + ','
                else:
                   aretourner = self.NOTFOUND
            else:
                aretourner = self.PERM
        else:
            aretourner = self.NOTFOUND
            
        return (aretourner)


# Status de lookup "fixe"
dictstatus = {'NOTFOUND' : '8:NOTFOUND,', 'PERM' : '4:PERM,'}


# servers/user/pass necessaire au bind
# 

server = ["ldap1","ldap2"]
binddn = ""
passwd = ""
mydomains = ["mydomain"]



application = service.Application('mapsmx', uid=663, gid=663)
factory = MapFactory(server,binddn,passwd,mydomains,dictstatus)
internet.TCPServer(8090, factory).setServiceParent(
    service.IServiceCollection(application))


HTH
jmp




From stephane_brault at yahoo.fr  Tue Nov 14 02:14:39 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Tue, 14 Nov 2006 09:14:39 +0000 (GMT)
Subject: [Twisted-Python] twisted performance and reactor choice
Message-ID: <20061114091439.65086.qmail@web26511.mail.ukl.yahoo.com>

Hi,

My application has lots of concurrent connections, both in and out, since it communicates with outsides sites. It seems that it is sometimes slowed down, I guess because there are to many simultaneous deffered. I'd like to know if I could switch reactor (my application is accessed by XML-RPC and communicates with external applications through XML-RPC, Http requests and access ftp sites). I also need to know how large can be the threadpool in order to increase the number of simultaneous deferred.

Thanks,

Stéphane




	

	
		
___________________________________________________________________________ 
Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
http://fr.answers.yahoo.com



From slamb at slamb.org  Tue Nov 14 03:20:40 2006
From: slamb at slamb.org (Scott Lamb)
Date: Tue, 14 Nov 2006 02:20:40 -0800
Subject: [Twisted-Python] advice on asynchronous LDAP?
In-Reply-To: <45596BD0.2060101@ac-montpellier.fr>
References: <253af2fb0611131309k6f6bbd92q97f344ff0ddd29ba@mail.gmail.com>
	<45596BD0.2060101@ac-montpellier.fr>
Message-ID: <F9D6B063-E445-4D46-AF52-16A7D8B5E2DA@slamb.org>


On Nov 13, 2006, at 11:10 PM, jean-marc pouchoulon wrote:

> Shimon Rura wrote:
>
>> Hi folks,
>>
> Hello
>
>> I'm a newbie writing a twisted server that needs to access an LDAP
>> server.  I started by using python-ldap, which worked fine and is  
>> well
>> documented, but doesn't seem to have support for a callback mechanism
>> that would make it appropriate for a twisted app.  So I switched to
>> ldaptor, which fits the twisted model, but doesn't seem to have much
>> documentation.
>
> I tried to use it but it worked only with twisted 1.3

ldaptor, at least version 0.0.43, works fine with Twisted 2.2.

I've used it to add authentication to buildbot. Nothing fancy - bind,  
search, rebind. My code lives here: <http://sourceforge.net/tracker/ 
index.php?func=detail&aid=1469500&group_id=73177&atid=537003>

Cheers,
Scott

-- 
Scott Lamb <http://www.slamb.org/>





From ralf at brainbot.com  Tue Nov 14 04:58:30 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Tue, 14 Nov 2006 12:58:30 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061113161244.GA67850@ik.nu>
References: <E1GjaZr-0005iL-00@pyramid.twistedmatrix.com>	<45587AD6.1010707@pangalactic.us>
	<20061113161244.GA67850@ik.nu>
Message-ID: <ejcavp$1uc$1@sea.gmane.org>

Ralph Meijer wrote:
>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
>>>  line 20
>>>    ???
>>>    ^
>>> SyntaxError: invalid syntax
>> I'm amazed that this error is still there -- I saw it *months* ago!
>> Sure makes Twisted look bad.
> 
> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
> just haven't done a new release. Also, the debian package maintainers
> could easily fix this, but apparently choose not to. Other packagers
> (among which FreeBSD) have no troubles at all.
> 

The *twisted* developers could easily fix this, but apparently choose
not to. Other packagers (among which FreeBSD) have no troubles at all.




From exarkun at divmod.com  Tue Nov 14 06:32:45 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 08:32:45 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <ejcavp$1uc$1@sea.gmane.org>
Message-ID: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>

On Tue, 14 Nov 2006 12:58:30 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>Ralph Meijer wrote:
>>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py",
>>>>  line 20
>>>>    ???
>>>>    ^
>>>> SyntaxError: invalid syntax
>>> I'm amazed that this error is still there -- I saw it *months* ago!
>>> Sure makes Twisted look bad.
>>
>> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
>> just haven't done a new release. Also, the debian package maintainers
>> could easily fix this, but apparently choose not to. Other packagers
>> (among which FreeBSD) have no troubles at all.
>>
>
>The *twisted* developers could easily fix this, but apparently choose
>not to. Other packagers (among which FreeBSD) have no troubles at all.
>

http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)

Jean-Paul



From ralf at brainbot.com  Tue Nov 14 07:01:21 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Tue, 14 Nov 2006 15:01:21 +0100
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
References: <ejcavp$1uc$1@sea.gmane.org>
	<20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
Message-ID: <ejci64$ueg$1@sea.gmane.org>

Jean-Paul Calderone wrote:
> 
> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)
> 

So, where is the download link to version 2.4.1 or 2.5?

- Ralf




From waterbug at pangalactic.us  Tue Nov 14 07:56:47 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 14 Nov 2006 09:56:47 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
Message-ID: <4559D92F.1050805@pangalactic.us>

Jean-Paul Calderone wrote:
> On Tue, 14 Nov 2006 12:58:30 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>> Ralph Meijer wrote:
>>>>>  "/usr/lib/python2.4/site-packages/twisted/test/stdio_test_halfclose.py", 
>>>>>
>>>>>  line 20
>>>>>    ???
>>>>>    ^
>>>>> SyntaxError: invalid syntax
>>>> I'm amazed that this error is still there -- I saw it *months* ago!
>>>> Sure makes Twisted look bad.
>>>
>>> Yes, it is there in 2.4, and yes it has been fixed for ages in trunk. We
>>> just haven't done a new release. Also, the debian package maintainers
>>> could easily fix this, but apparently choose not to. Other packagers
>>> (among which FreeBSD) have no troubles at all.
>>>
>>
>> The *twisted* developers could easily fix this, but apparently choose
>> not to. Other packagers (among which FreeBSD) have no troubles at all.
>>
> 
> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)

Yes, it has been fixed in trunk, but has there been a maintenance
release in the Twisted release series that had the problem?  If so,
then the ball is in the debian package maintainers' court; if not,
it's still in Twisted's.

Steve



From exarkun at divmod.com  Tue Nov 14 08:27:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 10:27:10 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <ejci64$ueg$1@sea.gmane.org>
Message-ID: <20061114152710.20948.620643499.divmod.quotient.27275@ohm>

On Tue, 14 Nov 2006 15:01:21 +0100, Ralf Schmitt <ralf at brainbot.com> wrote:
>Jean-Paul Calderone wrote:
>>
>> http://twistedmatrix.com/trac/changeset/16921 (timestamp - 6 months ago)
>>
>
>So, where is the download link to version 2.4.1 or 2.5?
>
>- Ralf
>

I just checked the Debian package.  It seems they have already tried to
deal with this problem.  The _first_ hunk in the Debian patch to Twisted
comments out the line with the syntax error.

Here's a link if you can't find it:

http://ftp.debian.org/debian/pool/main/t/twisted/twisted_2.4.0-2.diff.gz

So I don't know what this thread is about anymore.  More than ever, though,
this looks like an issue someone needs to take up with the Debian maintainer.

I looked through the Debian bug tracker and I didn't notice any bugs related
to this filed against the package.  How did anyone expect anything to get
fixed if there haven't even been any bugs filed?

Please take further discussion to submit at bugs.debian.org.  If the Debian
maintainer agrees that this is really an upstream issue then we can resume
discussion here and I'm sure whatever further changes are required can be
made.

Jean-Paul



From foom at fuhm.net  Tue Nov 14 08:41:24 2006
From: foom at fuhm.net (James Y Knight)
Date: Tue, 14 Nov 2006 10:41:24 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <4559D92F.1050805@pangalactic.us>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>
	<4559D92F.1050805@pangalactic.us>
Message-ID: <D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>

On Nov 14, 2006, at 9:56 AM, Stephen Waterbury wrote:
> Yes, it has been fixed in trunk, but has there been a maintenance
> release in the Twisted release series that had the problem?  If so,
> then the ball is in the debian package maintainers' court; if not,
> it's still in Twisted's.

I agree it might have been nice to have a maintenance release, but  
the problem apparently doesn't affect anybody but Debian. They're  
allowed to (and are capable enough to) apply patches to fix debian  
packaging issues in upstream source. So saying that twisted *has* to  
have a release that fixes it before debian can is a bit wrong.

But a 2.5 release is coming soon now, so, it'll be fixed then.

James




From exarkun at divmod.com  Tue Nov 14 10:03:31 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 12:03:31 -0500
Subject: [Twisted-Python] twisted performance and reactor choice
In-Reply-To: <20061114091439.65086.qmail@web26511.mail.ukl.yahoo.com>
Message-ID: <20061114170331.20948.533486067.divmod.quotient.27356@ohm>

On Tue, 14 Nov 2006 09:14:39 +0000 (GMT), Stéphane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
>
>My application has lots of concurrent connections, both in and out, since 
>it communicates with outsides sites. It seems that it is sometimes slowed 
>down, I guess because there are to many simultaneous deffered. I'd like to 
>know if I could switch reactor (my application is accessed by XML-RPC and 
>communicates with external applications through XML-RPC, Http requests and 
>access ftp sites). I also need to know how large can be the threadpool in 
>order to increase the number of simultaneous deferred.

You've gone a bit too fast here.  You guessed at the cause of the slowdown.
Instead, you need to profile the application and find out what the cause
really is.

Your question about the size of the threadpool is a bit of a non sequitur.
The threadpool, let alone its size, is unrelated to how many Deferreds might
exist in your application at once.  Unless you are explicitly using the
threadpool (or doing a significant number of DNS lookups without using
Twisted Names), the threadpool isn't even related to how many concurrent
tasks might be in progress in your application.  This is because Twisted only
uses the threadpool for an extremely limited number of purposes.  Basic
network traffic isn't one of these purposes.

Jean-Paul



From waterbug at pangalactic.us  Tue Nov 14 10:48:25 2006
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 14 Nov 2006 12:48:25 -0500
Subject: [Twisted-Python] Re: [Twisted-bugs] Syntax error when upgrading
	Debian Python 2.4
In-Reply-To: <D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>
References: <20061114133245.20948.1343831870.divmod.quotient.27178@ohm>	<4559D92F.1050805@pangalactic.us>
	<D2ED02B8-7D43-4A8F-9C9B-BA31AC428453@fuhm.net>
Message-ID: <455A0169.4040902@pangalactic.us>

James Y Knight wrote:
> On Nov 14, 2006, at 9:56 AM, Stephen Waterbury wrote:
>> Yes, it has been fixed in trunk, but has there been a maintenance
>> release in the Twisted release series that had the problem?  If so,
>> then the ball is in the debian package maintainers' court; if not,
>> it's still in Twisted's.
> 
> I agree it might have been nice to have a maintenance release, but the 
> problem apparently doesn't affect anybody but Debian. They're allowed to 
> (and are capable enough to) apply patches to fix debian packaging issues 
> in upstream source. So saying that twisted *has* to have a release that 
> fixes it before debian can is a bit wrong.

Just to set the record straight:  I did not say that "twisted
had to have a release that fixes it before debian could"; I said that
doing so would "put the ball in their court" (i.e., give debian no
excuse not to include the patched release), and that that (a patch
release) would have been in twisted's interest, since the problem
was small but annoying and just made twisted look bad.

By this time it is moot, of course, and I've already said too much,
but I hate being misrepresented.

Bleah.

Steve



From stephane_brault at yahoo.fr  Tue Nov 14 10:51:04 2006
From: stephane_brault at yahoo.fr (=?iso-8859-1?Q?St=E9phane_Brault?=)
Date: Tue, 14 Nov 2006 17:51:04 +0000 (GMT)
Subject: [Twisted-Python] twisted performance and reactor choice
Message-ID: <20061114175104.60309.qmail@web26515.mail.ukl.yahoo.com>

Thanks Jean-Paul,

my mistake ;-) I must confess that if I use twisted (and I must say I'm quite happy with it),
I didn't have time to know it that well. Anyway, I was wondering if changing the reactor could
help a little (my application runs on a debian sarge 3.1). In which case would the pollreactor
be relevant or should I stick with the default one (selectreactor if I read the documentation right).
I have a lot of simultaneous deferred at scheduled times (both database access using zalchemy
and connections to external sites which can take some times). I know this might not be enough
to make a decision, but any help would be welcomed.

Thanks again,

Stéphane

----- Message d'origine ----
De : Jean-Paul Calderone <exarkun at divmod.com>
À : Twisted general discussion <twisted-python at twistedmatrix.com>
Envoyé le : Mardi, 14 Novembre 2006, 18h03mn 31s
Objet : Re: [Twisted-Python] twisted performance and reactor choice

On Tue, 14 Nov 2006 09:14:39 +0000 (GMT), Stéphane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
>
>My application has lots of concurrent connections, both in and out, since 
>it communicates with outsides sites. It seems that it is sometimes slowed 
>down, I guess because there are to many simultaneous deffered. I'd like to 
>know if I could switch reactor (my application is accessed by XML-RPC and 
>communicates with external applications through XML-RPC, Http requests and 
>access ftp sites). I also need to know how large can be the threadpool in 
>order to increase the number of simultaneous deferred.

You've gone a bit too fast here.  You guessed at the cause of the slowdown.
Instead, you need to profile the application and find out what the cause
really is.

Your question about the size of the threadpool is a bit of a non sequitur.
The threadpool, let alone its size, is unrelated to how many Deferreds might
exist in your application at once.  Unless you are explicitly using the
threadpool (or doing a significant number of DNS lookups without using
Twisted Names), the threadpool isn't even related to how many concurrent
tasks might be in progress in your application.  This is because Twisted only
uses the threadpool for an extremely limited number of purposes.  Basic
network traffic isn't one of these purposes.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





	

	
		
___________________________________________________________________________ 
Découvrez une nouvelle façon d'obtenir des réponses à toutes vos questions ! 
Profitez des connaissances, des opinions et des expériences des internautes sur Yahoo! Questions/Réponses 
http://fr.answers.yahoo.com



From exarkun at divmod.com  Tue Nov 14 12:10:58 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Nov 2006 14:10:58 -0500
Subject: [Twisted-Python] twisted performance and reactor choice
In-Reply-To: <20061114175104.60309.qmail@web26515.mail.ukl.yahoo.com>
Message-ID: <20061114191058.20948.1189346320.divmod.quotient.27474@ohm>

On Tue, 14 Nov 2006 17:51:04 +0000 (GMT), Stéphane Brault <stephane_brault at yahoo.fr> wrote:
>Thanks Jean-Paul,
>
>my mistake ;-) I must confess that if I use twisted (and I must say I'm quite happy with it),
>I didn't have time to know it that well.

No problem. :)  Optimization is hard.

>Anyway, I was wondering if changing the reactor could
>help a little (my application runs on a debian sarge 3.1). In which case would the pollreactor
>be relevant or should I stick with the default one (selectreactor if I read the documentation right).

If the application is actually bottlenecked in select, then it might help
a little.  Fortunately, it's easy to test.  Just run:

  twistd --reactor poll ...

Or if you're not using twistd, add:

  from twisted.internet import pollreactor
  pollreactor.install()

To the beginning of your application.  That's all that's necessary to change
to a different reactor.

>I have a lot of simultaneous deferred at scheduled times (both database access using zalchemy
>and connections to external sites which can take some times). I know this might not be enough
>to make a decision, but any help would be welcomed.

Changing the reactor won't speed up Deferreds or threads, though, since
all the reactors have the same thread code.

Jean-Paul



From warner at lothar.com  Tue Nov 14 22:31:33 2006
From: warner at lothar.com (Brian Warner)
Date: Tue, 14 Nov 2006 21:31:33 -0800
Subject: [Twisted-Python] Foolscap-0.0.5 released (aka newpb)
In-Reply-To: <200611081953.37255.iacovou@gmail.com> (iacovou@gmail.com's
	message of "Wed, 8 Nov 2006 19:53:37 +0200")
References: <20061105.003750.02715181.warner@lothar.com>
	<200611081953.37255.iacovou@gmail.com>
Message-ID: <87y7qdi8cq.fsf@lothar.com>

kgi <iacovou at gmail.com> writes:

> So far it's been a pleasant experience: it's much more accessible 
> than 'oldpb', the intro was easy to read and follow, and it looks and feels 
> well-written: thank you!

You're welcome! I'm glad it's proving useful to you.

> Given that being able to send third-party classes over Foolscap is probably
> a very common requirement, I thought I'd send a simple example for others
> in the same position lest they be led into thinking that this requires
> subclassing or writing adaptation classes.
>
> You could even insert these in the part of the documenation about copyables 
> where it says "TODO: example" :-)

Thanks.. I'll see if I can incorporate these into the docs.

cheers,
 -Brian



From itamar at itamarst.org  Wed Nov 15 08:52:35 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 15 Nov 2006 10:52:35 -0500
Subject: [Twisted-Python] Available for Twisted training
Message-ID: <1163605955.6346.18.camel@localhost.localdomain>

Hi,

Due to RSI I am taking a month off from work, so I am available for
Twisted or Python-related training or other consulting (e.g. design and
architecture help) that would not involve typing. Ideally in Boston
area, but I might be open to other locations.

I've been using and developing core parts of Twisted since 2001. See
http://itamarst.org/resume.html - not really updated since 2004, so
doesn't cover more recent projects such as reliable multicast system
with congestion control.

To emphasize: I'm limited to typing 30 minutes a day, so any consulting
cannot, unfortunately, involve computer use.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From markus at bluegap.ch  Wed Nov 15 10:09:01 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Wed, 15 Nov 2006 18:09:01 +0100
Subject: [Twisted-Python] Trial Test Runner
Message-ID: <455B49AD.8020501@bluegap.ch>

Hi,

I'm having a hard time writing a test suite using trial. What's the best 
documentation available? I've the API Reference as well as the sources 
at hand, but...

For example I've tried this:

#!/usr/bin/python
# -*- test-case-name: eUnit.test.test_sample -*-

from twisted.trial import unittest, runner, reporter

class Test(unittest.TestCase):

	def testSample(self):
		print "hallo welt"


if __name__ == "__main__":
	runner.TrialRunner(reporter.TextReporter).run(Test)

It's failing with:
TypeError: unbound method countTestCases() must be called with Test 
instance as first argument (got nothing instead)

Some more documentation (an introduction or tutorial or some such) would 
be very welcome and helpful.

Regards

Markus



From exarkun at divmod.com  Wed Nov 15 10:43:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Nov 2006 12:43:05 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455B49AD.8020501@bluegap.ch>
Message-ID: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>

On Wed, 15 Nov 2006 18:09:01 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>I'm having a hard time writing a test suite using trial. What's the best 
>documentation available? I've the API Reference as well as the sources at 
>hand, but...
>
>For example I've tried this:
>
>#!/usr/bin/python
># -*- test-case-name: eUnit.test.test_sample -*-
>
>from twisted.trial import unittest, runner, reporter
>
>class Test(unittest.TestCase):
>
>         def testSample(self):
>                 print "hallo welt"
>
>
>if __name__ == "__main__":
>         runner.TrialRunner(reporter.TextReporter).run(Test)
>
>It's failing with:
>TypeError: unbound method countTestCases() must be called with Test instance 
>as first argument (got nothing instead)
>
>Some more documentation (an introduction or tutorial or some such) would be 
>very welcome and helpful.

Trial has a command line tool for running suites, "trial".  If that code is
in eUnit/test/test_sample.py, then you can try any of these commands:

    trial eUnit
    trial eUnit.test
    trial eUnit.test.test_sample
    trial eUnit.test.test_sample.Test
    trial eUnit.test.test_sample.test.testSample
    trial /path/to/eUnit/
    trial /path/to/eUnit/test/
    trial /path/to/eUnit/test/test_sample.py

You don't need any of the code in your __main__ section.

Jean-Paul



From robparrott at gmail.com  Wed Nov 15 12:27:29 2006
From: robparrott at gmail.com (Robert Parrott)
Date: Wed, 15 Nov 2006 14:27:29 -0500
Subject: [Twisted-Python] Strange blocking in twisted + quickfix service
Message-ID: <60022ea0611151127k3f73cf6cm588abd538d542d96@mail.gmail.com>

Hi Folks,

I'm trying to wrap the quickfix engine (www.quickfix.org) with a
twisted service, in order to create a standalone daemon that will
respond to RPC-like commands (such as "start", "stop", "request
quote", etc.) However, I'm finding some odd blocking issues that I
need to resolve.

Basically, the twisted service works fine until I start the quickfix
engine (which runs, I believe in a separate thread). Beforehand, calls
to the twisted protocol class I've created invoke methods in the
service, and things don't block. When the quickfix engine is started,
it runs fine, but the main thread, in which the twisted "wrapper"
application runs, seems to block in funny ways.

As an example of this behavior, a connection to the LineReceiver
protocol class I've subclassed will start to execute, but hangs
exactly 12 minutes before proceeding. I.e. the time between telnetting
to the port on which the server is listening and entering a command,
and the time when the logs record that the "lineReceived" method of
the LineReceiver class is invoked, is 12 minutes.

As far as I can tell, everything is running in the same thread except
for the quickfix engine class, so I'm not sure what the hanging
behavior is due to. My understanding is that the twisted.python.log
module, which I'm using to log, is non-blobking, and so shouldn't be
causing this behavior.

Does anyone have any ideas into what might be causing the hang, and
approaches to diagnosing the cause?

Thanks so much,

rob



From exarkun at divmod.com  Wed Nov 15 13:32:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Nov 2006 15:32:59 -0500
Subject: [Twisted-Python] Strange blocking in twisted + quickfix service
In-Reply-To: <60022ea0611151127k3f73cf6cm588abd538d542d96@mail.gmail.com>
Message-ID: <20061115203259.20948.1712155213.divmod.quotient.28809@ohm>

On Wed, 15 Nov 2006 14:27:29 -0500, Robert Parrott <robparrott at gmail.com> wrote:
>Hi Folks,
>
>I'm trying to wrap the quickfix engine (www.quickfix.org) 

ITYM www.quickfixengine.org :)

>with a
>twisted service, in order to create a standalone daemon that will
>respond to RPC-like commands (such as "start", "stop", "request
>quote", etc.) However, I'm finding some odd blocking issues that I
>need to resolve.
>
>Basically, the twisted service works fine until I start the quickfix
>engine (which runs, I believe in a separate thread). Beforehand, calls
>to the twisted protocol class I've created invoke methods in the
>service, and things don't block. When the quickfix engine is started,
>it runs fine, but the main thread, in which the twisted "wrapper"
>application runs, seems to block in funny ways.

Does QuickFIX release the GIL?  If not, even if it runs in a separate
thread, Twisted will be blocked any time it spends a long time doing
anything.

Jean-Paul



From eprparadocs at gmail.com  Thu Nov 16 11:27:39 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 16 Nov 2006 13:27:39 -0500
Subject: [Twisted-Python] Packaging application...suggestions?
Message-ID: <455CAD9B.7030103@gmail.com>

I released my open source project built on top of Twisted more than a 
month ago. Since then I have been looking for ways to make distributing 
the application simple. I would love to have it self-contained, holding 
all the python libraries, etc, to ease the install by the user.

Any advice would be greatly appreciated.

Chaz.



From corydodt at gmail.com  Thu Nov 16 12:02:28 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Thu, 16 Nov 2006 11:02:28 -0800
Subject: [Twisted-Python] Packaging application...suggestions?
In-Reply-To: <455CAD9B.7030103@gmail.com>
References: <455CAD9B.7030103@gmail.com>
Message-ID: <c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>

What platforms are you targetting?

C


On 11/16/06, Chaz. <eprparadocs at gmail.com> wrote:
>
> I released my open source project built on top of Twisted more than a
> month ago. Since then I have been looking for ways to make distributing
> the application simple. I would love to have it self-contained, holding
> all the python libraries, etc, to ease the install by the user.
>
> Any advice would be greatly appreciated.
>
> Chaz.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061116/bd8088a4/attachment.html>

From eprparadocs at gmail.com  Thu Nov 16 12:24:09 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 16 Nov 2006 14:24:09 -0500
Subject: [Twisted-Python] Packaging application...suggestions?
In-Reply-To: <c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>
References: <455CAD9B.7030103@gmail.com>
	<c16a94ff0611161102s50734b79me5d98c48f9d96f08@mail.gmail.com>
Message-ID: <455CBAD9.60807@gmail.com>

I guess I should have stated that at the beginning! Sorry for 
overlooking the obvious.

Right now the application is targetted for Windows and Linux servers.

C.

Cory Dodt wrote:
> What platforms are you targetting?
> 
> C
> 
> 
> On 11/16/06, *Chaz.* <eprparadocs at gmail.com 
> <mailto:eprparadocs at gmail.com>> wrote:
> 
>     I released my open source project built on top of Twisted more than a
>     month ago. Since then I have been looking for ways to make distributing
>     the application simple. I would love to have it self-contained, holding
>     all the python libraries, etc, to ease the install by the user.
> 
>     Any advice would be greatly appreciated.
> 
>     Chaz.
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 




From ellisonbg.net at gmail.com  Thu Nov 16 23:23:43 2006
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 16 Nov 2006 23:23:43 -0700
Subject: [Twisted-Python] Questions about the very nice AMP protocol
Message-ID: <6ce0ac130611162223r482fe7a3y43cc8f2e6d9ce586@mail.gmail.com>

Hi,

I currently use Perspective Broker for a number of projects.  As time
has gone by I have really come to appreciate having a full two-way
network protocol.  But, my company has lots of Java programmers  and
they do lots of "serious" (read, pain in the ass) web services and
grid services stuff.  I would like to be able to get the many Python
things I have playing nicely with the many Java things floating around
here.

Thus, AMP is extremely attractive.  There is one problem that I have
though.  We do high performance scientific computing and deal with
extremely large tera/peta-byte data sets.
Thus we need network protocols that can send large amounts of data
around.  The focus of AMP
of small messages thus presents a problem.  There are really two usage
cases that I have in mind:

1.  Sending larger (maybe 100's of Mb) objects around that do fit in
memory.  These can be serialized easily (w/o creating a big pickle),
but I need to make sure that Twisted doesn't make extra copies of them
during the transfer.

2.  Sending even bigger things that don't fit into memory.

Any thoughts on the best way to address these questions using AMP.
Here are my thoughts:

1.  Use a multi-connection approach like FTP does.  Use AMP for
control and the other connection
for the binary data.  It would be easy to use producers/consumers in
this channel to handle the large data problems above.  I don't like
this because I often need to ssh tunnel the protocol through firewalls
- two connections is unpleasant.

2.  Use AMP's inner protocol to run two protocols simultaneously.  My
understanding is that AMP doesn't support switching back and forth
between AMP and its inner protocol.  Would it be crazy to try this
approach?

3.  Try to modify AMP itself to handle the large objects itself by
registering Producers with the underlying transport.

It may sound like I just want something like FTP, but I also need to
send lots application specific control messages as well - and these
really need to be two way.

Any thoughts would be greatly appreciated.

Brian



From markus at bluegap.ch  Fri Nov 17 04:57:00 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 12:57:00 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
Message-ID: <455DA38C.2050005@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> Trial has a command line tool for running suites, "trial".  If that code is
> in eUnit/test/test_sample.py, then you can try any of these commands:

Duh! Thank you! I didn't think about a command line tool and was looking 
in the wrong places.

Another question: can I somehow nest setUp and tearDown methods? I.e.

A.setUp:      very general setup, i.e. starting a process needed
A.test1
A.test2

A.B.setUp:    specific setups for B, which depend on A's setup
A.B.test1
A.B.tearDown

A.test3
A.tearDown:   tear down all the general stuff, i.e. stopping that
               process


Regards

Markus



From twisted at ralphm.ik.nu  Fri Nov 17 05:11:51 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 17 Nov 2006 13:11:51 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DA38C.2050005@bluegap.ch>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>
	<455DA38C.2050005@bluegap.ch>
Message-ID: <1163765511.20855.46.camel@se-135>

On Fri, 2006-11-17 at 12:57 +0100, Markus Schiltknecht wrote:
> Hi,
> 
> Jean-Paul Calderone wrote:
> > Trial has a command line tool for running suites, "trial".  If that code is
> > in eUnit/test/test_sample.py, then you can try any of these commands:
> 
> Duh! Thank you! I didn't think about a command line tool and was looking 
> in the wrong places.
> 
> Another question: can I somehow nest setUp and tearDown methods? I.e.
> 
> A.setUp:      very general setup, i.e. starting a process needed
> A.test1
> A.test2
> 
> A.B.setUp:    specific setups for B, which depend on A's setup
> A.B.test1
> A.B.tearDown
> 
> A.test3
> A.tearDown:   tear down all the general stuff, i.e. stopping that
>                process

You can use class inheritance. Define A deriving from object, and then B
from A and TestCase, for example.

-- 
Groetjes,

ralphm




From markus at bluegap.ch  Fri Nov 17 06:22:14 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 14:22:14 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <1163765511.20855.46.camel@se-135>
References: <20061115174305.20948.442239370.divmod.quotient.28679@ohm>	<455DA38C.2050005@bluegap.ch>
	<1163765511.20855.46.camel@se-135>
Message-ID: <455DB786.6030800@bluegap.ch>

Hi,

Ralph Meijer wrote:
> You can use class inheritance. Define A deriving from object, and then B
> from A and TestCase, for example.

That only works for Fixtures which take a few milliseconds to setUp and 
tearDown, because for every derived TestCase, the Fixture is setUp and 
tornDown. That won't work in my case, because setting up the Fixture is 
quite complex and takes up to 20 seconds. I definitely don't want to do 
that for every contained TestCase.

Why does the TrialSuite not have setUp and tearDown methods?

Regards

Markus



From exarkun at divmod.com  Fri Nov 17 06:32:26 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 08:32:26 -0500
Subject: [Twisted-Python] Questions about the very nice AMP protocol
In-Reply-To: <6ce0ac130611162223r482fe7a3y43cc8f2e6d9ce586@mail.gmail.com>
Message-ID: <20061117133226.20948.478532105.divmod.quotient.30978@ohm>

On Thu, 16 Nov 2006 23:23:43 -0700, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>I currently use Perspective Broker for a number of projects.  As time
>has gone by I have really come to appreciate having a full two-way
>network protocol.  But, my company has lots of Java programmers  and
>they do lots of "serious" (read, pain in the ass) web services and
>grid services stuff.  I would like to be able to get the many Python
>things I have playing nicely with the many Java things floating around
>here.
>
>Thus, AMP is extremely attractive.  There is one problem that I have
>though.  We do high performance scientific computing and deal with
>extremely large tera/peta-byte data sets.
>Thus we need network protocols that can send large amounts of data
>around.  The focus of AMP
>of small messages thus presents a problem.  There are really two usage
>cases that I have in mind:
>
>1.  Sending larger (maybe 100's of Mb) objects around that do fit in
>memory.  These can be serialized easily (w/o creating a big pickle),
>but I need to make sure that Twisted doesn't make extra copies of them
>during the transfer.
>
>2.  Sending even bigger things that don't fit into memory.
>
>Any thoughts on the best way to address these questions using AMP.
>Here are my thoughts:
>
>1.  Use a multi-connection approach like FTP does.  Use AMP for
>control and the other connection
>for the binary data.  It would be easy to use producers/consumers in
>this channel to handle the large data problems above.  I don't like
>this because I often need to ssh tunnel the protocol through firewalls
>- two connections is unpleasant.
>
>2.  Use AMP's inner protocol to run two protocols simultaneously.  My
>understanding is that AMP doesn't support switching back and forth
>between AMP and its inner protocol.  Would it be crazy to try this
>approach?
>
>3.  Try to modify AMP itself to handle the large objects itself by
>registering Producers with the underlying transport.

This is the planned direction for AMP, if that makes any difference to
your plans.

Jean-Paul

>
>It may sound like I just want something like FTP, but I also need to
>send lots application specific control messages as well - and these
>really need to be two way.
>
>Any thoughts would be greatly appreciated.
>
>Brian
>

Jean-Paul



From exarkun at divmod.com  Fri Nov 17 07:00:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 09:00:37 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DB786.6030800@bluegap.ch>
Message-ID: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>

On Fri, 17 Nov 2006 14:22:14 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>Ralph Meijer wrote:
>>You can use class inheritance. Define A deriving from object, and then B
>>from A and TestCase, for example.
>
>That only works for Fixtures which take a few milliseconds to setUp and 
>tearDown, because for every derived TestCase, the Fixture is setUp and 
>tornDown. That won't work in my case, because setting up the Fixture is 
>quite complex and takes up to 20 seconds. I definitely don't want to do that 
>for every contained TestCase.
>
>Why does the TrialSuite not have setUp and tearDown methods?

It is not intended that users will subclass TrialSuite.

You can put your expensive set up code into a free function which caches
its result to avoid performing redundant work, then call it from whichever
setUp methods need it.

Jean-Paul



From markus at bluegap.ch  Fri Nov 17 07:26:02 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 15:26:02 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
Message-ID: <455DC67A.2030609@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> It is not intended that users will subclass TrialSuite.

Okay.

> You can put your expensive set up code into a free function which caches
> its result to avoid performing redundant work, then call it from whichever
> setUp methods need it.

You can not cache the startup of a process or of a network connection. 
Probably unit tests are not designed for such things, but I would like 
to use twisted as it's event based. And I want to test for events. It 
looks like a good fit.

Ideas?

Regards

Markus



From twisted at ralphm.ik.nu  Fri Nov 17 07:52:36 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 17 Nov 2006 15:52:36 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DC67A.2030609@bluegap.ch>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>
	<455DC67A.2030609@bluegap.ch>
Message-ID: <1163775156.20855.51.camel@se-135>

On Fri, 2006-11-17 at 15:26 +0100, Markus Schiltknecht wrote:
> Hi,
> 
> Jean-Paul Calderone wrote:
> > It is not intended that users will subclass TrialSuite.
> 
> Okay.
> 
> > You can put your expensive set up code into a free function which caches
> > its result to avoid performing redundant work, then call it from whichever
> > setUp methods need it.
> 
> You can not cache the startup of a process or of a network connection. 
> Probably unit tests are not designed for such things, but I would like 
> to use twisted as it's event based. And I want to test for events. It 
> looks like a good fit.

Maybe you test too much. In general you don't need actual network
connections to test protocols. For example, there are helpers in
twisted.test.proto_helpers for mimicking a transport.

-- 
Groetjes,

ralphm




From exarkun at divmod.com  Fri Nov 17 07:53:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 17 Nov 2006 09:53:05 -0500
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455DC67A.2030609@bluegap.ch>
Message-ID: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>

On Fri, 17 Nov 2006 15:26:02 +0100, Markus Schiltknecht <markus at bluegap.ch> wrote:
>Hi,
>
>Jean-Paul Calderone wrote:
>>It is not intended that users will subclass TrialSuite.
>
>Okay.
>>You can put your expensive set up code into a free function which caches
>>its result to avoid performing redundant work, then call it from whichever
>>setUp methods need it.
>
>You can not cache the startup of a process or of a network connection. 

This may be a trial limitation which needs to be addressed.  On the other
hand, unit tests which involve processes and the network are not as good
as unit tests which don't involve such things.

>Probably unit tests are not designed for such things, but I would like to 
>use twisted as it's event based. And I want to test for events. It looks 
>like a good fit.

>
>Ideas?
>
It sounds like you're not really writing a unit test suite.  What are you

writing?

Jean-Paul



From markus at bluegap.ch  Fri Nov 17 08:20:53 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 16:20:53 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>
References: <20061117145305.20948.1288107708.divmod.quotient.31058@ohm>
Message-ID: <455DD355.1000801@bluegap.ch>

Hi,

Jean-Paul Calderone wrote:
> It sounds like you're not really writing a unit test suite.  What are you
> writing?

Yeah, maybe I do not write unit tests. I want to check a C program which 
forks, if it behaves correctly when sub-processes get killed or if it 
recovers correctly from delayed or lost network connections.

I've been looking at other automated testing frameworks, like STAF, but 
it does not allow me to write such simple tests...

Regards

Markus




From markus at bluegap.ch  Fri Nov 17 13:22:09 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 17 Nov 2006 21:22:09 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <1163775156.20855.51.camel@se-135>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>	<455DC67A.2030609@bluegap.ch>
	<1163775156.20855.51.camel@se-135>
Message-ID: <455E19F1.9010304@bluegap.ch>

Hi,

Ralph Meijer wrote:
> Maybe you test too much. In general you don't need actual network
> connections to test protocols. For example, there are helpers in
> twisted.test.proto_helpers for mimicking a transport.

I want to test for example, how a program (written in C) reacts to 
network delays or outages. I absolutely need (and already have) python 
code to emulate the network layer.

Of course I could test just one instance of the program, but then I'd 
have to write a dummy peer, just for the tests. Instead, it seems a lot 
easier to use the real code itself and check if two processes correctly 
talk to each other. It's a Multi-Master protocol.

I would like to simulate some of the dirty stuff that can happen to an 
application out in the wild (OOM kill, network delays and outages, etc..).

Another requirement I'm facing is benchmarks. How well does the 
application cope with different a packet loss rate of 10% compared to no 
packet losses?

So, if you tell me I want to do to much with unit tests, that's fine, I 
don't need to run unit tests. They are probably not designed for what I 
want to do. But what else can I use? Is there anything you know which 
could possibly fulfill these requirements?

IMO, twisted itself looks very nice in that it is event-based and 
provides very good interfaces to network protocols as well as managing 
sub-processes. Perhaps I just need to write my own test runners on top 
of twisted and forget about trial.

OTOH, wouldn't it be sufficient to add setUp and tearDown methods for 
TrialSuites? I'm investigating into that direction.

Regards

Markus




From markus at bluegap.ch  Sat Nov 18 04:27:56 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Sat, 18 Nov 2006 12:27:56 +0100
Subject: [Twisted-Python] Trial Test Runner
In-Reply-To: <455E19F1.9010304@bluegap.ch>
References: <20061117140037.20948.249895116.divmod.quotient.31006@ohm>	<455DC67A.2030609@bluegap.ch>	<1163775156.20855.51.camel@se-135>
	<455E19F1.9010304@bluegap.ch>
Message-ID: <455EEE3C.30509@bluegap.ch>

Hi,

Markus Schiltknecht wrote:
> OTOH, wouldn't it be sufficient to add setUp and tearDown methods for 
> TrialSuites? I'm investigating into that direction.

What speaks against something like that:

Index: runner.py
===================================================================
--- runner.py	(revision 18715)
+++ runner.py	(working copy)
@@ -142,10 +142,14 @@
          """
          # we implement this because Python 2.3 unittest defines this code
          # in __call__, whereas 2.4 defines the code in run.
+        if hasattr(self, 'setUp'):
+            self.setUp(self)
          for test in self._tests:
              if result.shouldStop:
                  break
              test(result)
+        if hasattr(self, 'tearDown'):
+            self.tearDown(self)
          return result


..and adding a setUp and tearDown method in the loader if the module has 
such methods?

Regards

Markus



From exarkun at twistedmatrix.com  Sat Nov 18 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1163916302.91.1203912443@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-12 through 2006-11-19
Bugs opened: 12    Bugs closed: 15  Total open bugs: 780 (-3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       -8  |Highest:  -7          |Core:   -4             
|Enhancement:  +1  |High:     -3          |Ftp:    +1             
|Task:         +4  |Normal:   +5          |Trial:  +1             
                   |Low:      +3          |Web2:   -2             
                   |Lowest:   -1          |Words:  +1             


New / Reopened Bugs
______________________
                    ===== High =====
[#2229] Syntax error when upgrading Debian Python 2.4 (opened by LonelyPixel) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2229

                    ===== Normal =====
[#2228] Add higher level primitives for FTP cwd/pwd (opened by therve)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2228

[#2230] trial -b does not interact in a useful way with -u (opened by glyph)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2230

[#2231] t.p.usage documents multicharacter shortcuts for subcommands but does not support them. (opened by dreid) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2231

[#2233] twisted.internet.fdesc does not handle EINTR (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2233

[#2234] Select default reactor based on platform and available libraries (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2234

[#2235] WebDAV copy fails if the name of the destination folder contains whitespace (opened by vincentk) (CLOSED, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/2235

[#2237] Reorganise Trial tests (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2237

[#2239] Factor out test support module for trial (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2239

                    ===== Low =====
[#2232] Tool for measuring coding standard conformance (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/2232

[#2236] Make test_toc adhere to coding standard (opened by jml)
    task            words      http://twistedmatrix.com/trac/ticket/2236

[#2238] Add function and object level unit tests for twisted.words.protocols.toc (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2238



Closed Bugs
______________________
                    ===== Highest =====
[#2218] Add timeout to XMPP IQ requests (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2218

[#2199] Adaption of web2.iweb interfaces is broken (opened by wsanchez, closed by exarkun, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2199

[#719 ] better pluggable reactor support for twistd (opened by itamarst, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/719

[#2136] t.plugin.getCache craps out on Windows with Python 2.5 (opened by PenguinOfDoom, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2136

[#2065] windows buildbot errors,  already imported failures (opened by scmikes, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2065

[#2165] trial's "test_suite" feature violates naming standard (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2165

[#1430] trial reporter doesn't write to streams properly (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1430

                    ===== High =====
[#1067] epyrun doesn't work (opened by marienz, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1067

[#2229] Syntax error when upgrading Debian Python 2.4 (opened by LonelyPixel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2229

[#2139] test_underUnderPathAlreadyImported and test_listingModules from twisted.test.test_modules.(Zip)PathModificationTest fail with Gtk2 reactor (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2139

[#2224] Web2: Behavior of Request.locateResource vs Resource.locateChild is not clearly defined. (opened by dreid, closed by wsanchez, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2224

                    ===== Normal =====
[#2222] t.i.task.Clock.advance should set the call.called attribute. (opened by ralphm, closed by ralphm, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2222

[#2231] t.p.usage documents multicharacter shortcuts for subcommands but does not support them. (opened by dreid, closed by dreid, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2231

[#2235] WebDAV copy fails if the name of the destination folder contains whitespace (opened by vincentk, closed by wsanchez, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/2235

                    ===== Lowest =====
[#2226] qt4reactor.stop() not closing connections and quitting python (opened by Tantalum, closed by Tantalum, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2226





From yqiang at gmail.com  Sun Nov 19 17:00:13 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sun, 19 Nov 2006 16:00:13 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
Message-ID: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>

Hi,
I am trying to figure out how to keep an continuously updated list of
connected clients to a PB server.
I have had success in figuring out how to add clients to my list when they
connect, but I am not sure what methods get called when a client
disconnects.

This is what I have so far:

from twisted.spread import pb

class DSagePBServerFactory(pb.PBServerFactory):
    def __init__(self, root):
        pb.PBServerFactory.__init__(self, root)
        self.clients = []

    def clientConnectionMade(self, broker):
        """Keeps a 3-tuple of connected clients.
        tuple[0] - the broker transport
        tuple[1] - the clients ip
        tuple[2] - the clients port

        """
        self.clients.append((broker.transport,
                             broker.transport.getPeer().host,
                             broker.transport.getPeer().port))
        print self.clients

There does not seem to be a corresponding clientConnectionLost method for
the Factory class.  Any suggestions would be appreciated.

Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061119/6b50c11f/attachment.html>

From phil at bubblehouse.org  Sun Nov 19 18:19:12 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 19 Nov 2006 20:19:12 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
Message-ID: <F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>

On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> There does not seem to be a corresponding clientConnectionLost  
> method for the Factory class.  Any suggestions would be appreciated.

My approach to this was to put any post-connection cleanup in the  
Avatar's "logout" method.

-phil



From yqiang at gmail.com  Sun Nov 19 19:13:15 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sun, 19 Nov 2006 18:13:15 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
Message-ID: <3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>

On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.


Will that method be called regardless of how the client disconnects from the
server?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061119/5671b1a4/attachment.html>

From stephen at thorne.id.au  Mon Nov 20 05:58:54 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 20 Nov 2006 22:58:54 +1000
Subject: [Twisted-Python] Questions about the very nice AMP protocol
In-Reply-To: <20061117133226.20948.478532105.divmod.quotient.30978@ohm>
Message-ID: <20061120125854.20948.1006272831.divmod.quotient.35700@ohm>

On Fri, 17 Nov 2006 08:32:26 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Thu, 16 Nov 2006 23:23:43 -0700, Brian Granger <ellisonbg.net at gmail.com> 
>>1.  Use a multi-connection approach like FTP does.  Use AMP for
>>control and the other connection
>>for the binary data.  It would be easy to use producers/consumers in
>>this channel to handle the large data problems above.  I don't like
>>this because I often need to ssh tunnel the protocol through firewalls
>>- two connections is unpleasant.

HTTP is a protocol quite suited to this. I believe we already have someone
using AMP in a grid computing environment where instead of large amounts of 
data, a http:// url pointing to the large amount of data is provided.

I think the best way to do this is to describe a series of urls (in the
case where you have multiple mirrors), a checksum and perhaps an identifier.

The client then knows it can fire up a twisted.web.client.downloadPage() and
have the data when the Deferred fires.

If you need to serve the data dynamically, then you can use twisted.web /
twisted.web2 quite easily, or you can just put the files in a directory
tree available to your favourite HTTP server.

>>2.  Use AMP's inner protocol to run two protocols simultaneously.  My
>>understanding is that AMP doesn't support switching back and forth
>>between AMP and its inner protocol.  Would it be crazy to try this
>>approach?

Not a wonderful idea. I've seen this approach implemented, and it results
in much of the freedom that amp provides being limited.

>>3.  Try to modify AMP itself to handle the large objects itself by
>>registering Producers with the underlying transport.
>
>This is the planned direction for AMP, if that makes any difference to
>your plans.

I would love to see this implemented in a sane fashion. I've talked to 
Glyph about it, and it seems like the structure of amp will quite easily 
accomodate it. We've even discussed things like caching amp proxies.

No code yet as far as I've seen.

Stephen.



From phil at bubblehouse.org  Mon Nov 20 07:19:43 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 20 Nov 2006 09:19:43 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611191813x6e36f9ado7435d8bffd6c415d@mail.gmail.com>
Message-ID: <BEF7A646-B295-4025-9578-224583018AFA@bubblehouse.org>

On Nov 19, 2006, at 9:13 PM, Yi Qiang wrote:
> On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote: On Nov  
> 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.
>
> Will that method be called regardless of how the client disconnects  
> from the server?

Yeah, in my experience the server *always* detects the connection  
loss and calls logout.

Incidentally, this was with a standard reactor on a UNIXish system;  
I'm relatively sure this works this way on all platforms.

-phil



From exarkun at divmod.com  Mon Nov 20 07:41:56 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Nov 2006 09:41:56 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <BEF7A646-B295-4025-9578-224583018AFA@bubblehouse.org>
Message-ID: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>

On Mon, 20 Nov 2006 09:19:43 -0500, Phil Christensen <phil at bubblehouse.org> wrote:
>On Nov 19, 2006, at 9:13 PM, Yi Qiang wrote:
>>On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote: On Nov  19, 
>>2006, at 7:00 PM, Yi Qiang wrote:
>> > There does not seem to be a corresponding clientConnectionLost
>> > method for the Factory class.  Any suggestions would be appreciated.
>>
>>My approach to this was to put any post-connection cleanup in the
>>Avatar's "logout" method.
>>
>>Will that method be called regardless of how the client disconnects  from 
>>the server?
>
>Yeah, in my experience the server *always* detects the connection  loss and 
>calls logout.
>
>Incidentally, this was with a standard reactor on a UNIXish system;  I'm 
>relatively sure this works this way on all platforms.

If there is traffic over a connection, a disconnect will always be noticed eventually (it might take a few minutes, though).

If a connection is idle, a disconnect can go unnoticed for a long time.  This
is just as much a problem with the cred "logout" method as using
clientConnectionLost (since one relies on the other, of course).

You can address this by using TCP keepalive or an application-level ping/pong
message every few minutes, to make sure there is traffic on the connection.

Of course your application may always keep the connection busy, so you may
not need to worry about this at all.

Jean-Paul



From Marcin.Kasperski at softax.com.pl  Mon Nov 20 13:20:14 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 20 Nov 2006 21:20:14 +0100
Subject: [Twisted-Python] Testing protocols without connection?
Message-ID: <200611202120.15128.Marcin.Kasperski@softax.com.pl>

(sorry if it was already described somewhere, but 15 mins of 
googling did not help me)

In one of the recent posts 
(http://twistedmatrix.com/pipermail/twisted-python/2006-November/014374.html)
I noticed the following sentence:

> In general you don't need actual network
> connections to test protocols. For example, there are helpers
> in twisted.test.proto_helpers for mimicking a transport.

How should those be used? Not much docs inside...

To give a simple example, imagine I have some factory which 
provides something over HTTP. And I have test case which setup 
this server on loopback address, connects to it using HTTP, and 
analyses whether correct output was received. Is it possible to 
refactor such test, so it does not create any true TCP 
connection?



From phil at bubblehouse.org  Mon Nov 20 13:26:40 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 20 Nov 2006 15:26:40 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>
References: <20061120144156.20948.1088322348.divmod.quotient.35832@ohm>
Message-ID: <A4C5DDD2-FA5F-4AD6-8859-188748782F30@bubblehouse.org>

On Nov 20, 2006, at 9:41 AM, Jean-Paul Calderone wrote:
> On Mon, 20 Nov 2006 09:19:43 -0500, Phil Christensen  
> <phil at bubblehouse.org> wrote:
>> Yeah, in my experience the server *always* detects the connection   
>> loss and calls logout.
>>
>> Incidentally, this was with a standard reactor on a UNIXish  
>> system;  I'm relatively sure this works this way on all platforms.
>
> If there is traffic over a connection, a disconnect will always be  
> noticed eventually (it might take a few minutes, though).
>
> If a connection is idle, a disconnect can go unnoticed for a long  
> time.  This
> is just as much a problem with the cred "logout" method as using
> clientConnectionLost (since one relies on the other, of course).
>
> You can address this by using TCP keepalive or an application-level  
> ping/pong
> message every few minutes, to make sure there is traffic on the  
> connection.
>
> Of course your application may always keep the connection busy, so  
> you may
> not need to worry about this at all.

Yeah, just  another anecdote w.r.t. JP's point here...

While I found that the server was quick to notice disconnects, my  
client -- which is more of a passive participant, primarily receiving  
messages from the server -- would not notice the server disappearing  
until another outgoing message was sent (or attempted to be sent).

I found implementing a noop keepalive took care of that.

JP, could you elaborate on your comment about idle connections? Is  
the PB server supposed to disconnect idle connections after some  
period of time? If so, I'd definitely like to make sure this doesn't  
happen just because someone isn't paying attention to a client in the  
background.

Thanks,

-phil



From markus at bluegap.ch  Tue Nov 21 09:13:12 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 21 Nov 2006 17:13:12 +0100
Subject: [Twisted-Python] Trial Loader: nested test suites
Message-ID: <45632598.4030901@bluegap.ch>

Hi,

I've recently been wondering if it's possible to nest test suites with 
trial. I've been experimenting with the Loader and the Runner to achieve 
what I want.

I came up with the following patch. Does such a thing have any chance of 
being accepted?

Regards

Markus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial.nested_testsuites.diff
Type: text/x-patch
Size: 2645 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061121/14866c1a/attachment-0002.bin>

From jml at mumak.net  Tue Nov 21 14:40:56 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 22 Nov 2006 08:40:56 +1100
Subject: [Twisted-Python] Trial Loader: nested test suites
In-Reply-To: <45632598.4030901@bluegap.ch>
References: <45632598.4030901@bluegap.ch>
Message-ID: <d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>

On 11/22/06, Markus Schiltknecht <markus at bluegap.ch> wrote:
> Hi,
>
> I've recently been wondering if it's possible to nest test suites with
> trial. I've been experimenting with the Loader and the Runner to achieve
> what I want.
>

You can already nest TestSuites. That's half the point of having them.
For example:
    suite = TestSuite()
    suite.addTest(SomeTestCase('test_foo'))
    suite.addTest(AnotherTestCase('test_baz'))
    outerSuite = TestSuite()
    outerSuite.addTest(suite)
    outerSuite.addTest(SomeTestCase('test_bar))
    assert outerSuite.countTestCases() == 3
    result = TestResult()
    outerSuite.run(result)
    assert result.testsRun == 3

Perhaps you mean something else.

> I came up with the following patch. Does such a thing have any chance of
> being accepted?
>

Before anything gets in to Twisted, it has to have a ticket on the
issue tracker, "decent" code and unit tests.  See
http://twistedmatrix.com/trac/wiki/ReviewProcess and
http://twistedmatrix.com/projects/core/documentation/howto/policy/coding-standard.html
for more information.

Looking at your patch, you seem to be doing two things: adding setUp
and tearDown all over the place; and fiddling with the loadPackage()
function. A casual scan doesn't tell me if those two changes depend on
each other. Smaller patches are more likely to be accepted.

More importantly than that, I'm still not clear on what problem you
are trying to solve.

Also I should note that I am hesitant to allow Trial's suites to run
any user code apart from unit tests. A lot of bad code has been
written that way.

cheers,
jml



From markus at bluegap.ch  Tue Nov 21 15:49:19 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 21 Nov 2006 23:49:19 +0100
Subject: [Twisted-Python] Trial Loader: nested test suites
In-Reply-To: <d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>
References: <45632598.4030901@bluegap.ch>
	<d06a5cd30611211340i4bf8df58h5876cd2911d377e@mail.gmail.com>
Message-ID: <4563826F.60302@bluegap.ch>

Hi,

Jonathan Lange wrote:
> You can already nest TestSuites. That's half the point of having them.
> <snipped the fine code example>
> Perhaps you mean something else.

Yes, I want to setUp and tearDown processes and/or network connections 
in nested testsuites. What's the point in nesting TestSuites if they 
don't do anything?

> Before anything gets in to Twisted, it has to have a ticket on the
> issue tracker, "decent" code and unit tests.  See
> http://twistedmatrix.com/trac/wiki/ReviewProcess and
> http://twistedmatrix.com/projects/core/documentation/howto/policy/coding-standard.html 

Thanks for the hints. I mainly wanted to make sure it's worth following 
that path further, which I'm still very uncertain.

> Looking at your patch, you seem to be doing two things: adding setUp
> and tearDown all over the place; 

Wait, that's a little exaggerated. Two places: before and after running 
a testsuite and when loading it. You can't possibly insert it at less 
places if you want that functionality.

> and fiddling with the loadPackage()
> function. A casual scan doesn't tell me if those two changes depend on
> each other. Smaller patches are more likely to be accepted.

The fiddling in loadPackage makes sure it checks every module for setUp 
and tearDown methods by really recursively call loadByName() for every 
sub-module (even if it does not contain test cases).

> More importantly than that, I'm still not clear on what problem you
> are trying to solve.

Please have a look at the thread in [1], that message explains best, 
what I want to achieve.

> Also I should note that I am hesitant to allow Trial's suites to run
> any user code apart from unit tests. A lot of bad code has been
> written that way.

That's what I fear will break the neck of integrating this. I know I'm 
not writing standard unit tests, but something similar.

Now, I know unit tests should be simple and testing only one unit of 
code. But what if you *want* to test your complete program, simulate 
network outages and the like. What's so entirely different to unit 
testing, besides needing little improvements?

Regards

Markus

[1]: 
http://twistedmatrix.com/pipermail/twisted-python/2006-November/014370.html




From manlio_perillo at libero.it  Wed Nov 22 04:19:56 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed, 22 Nov 2006 12:19:56 +0100
Subject: [Twisted-Python] SQLAlchemy integration
Message-ID: <4564325C.9040604@libero.it>

Hi.

I'm writing some modules for integrating SQLALchemy with Twisted.
The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.


This allows to do:
1) use the custom engine to execute queries asyncronously
2) bound metadata to the custom engine
3) write a ConnectionPool class compatible with the current adbapi
interface (including openfun and noisy parameter support (this will use
twisted logged system)
4) integration with sqlalchemy.orm


Points 1, 2 and 3 are ready (but 3 is still incomplete: I'm testing
against adbapi test suite).

I would like to know if there are some other people working on this
(excluding sAsync)



Manlio Perillo



From Sven-Erik.Tiberg at ltu.se  Wed Nov 22 06:54:27 2006
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Wed, 22 Nov 2006 14:54:27 +0100
Subject: [Twisted-Python] Twisted <> USB units?
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910400B148@EMMA.personal.adp.ltu.se>

 
Hi.

Been thinking of attaching USB connected Human User Interfaces to my
applications.
Could it be wise to use Twisted to interface USB-units.
If so, any hints or docs?  

BG
Sven-Erik Tiberg
Lulea / Sweden



From glyph at divmod.com  Thu Nov 23 00:39:58 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 23 Nov 2006 07:39:58 -0000
Subject: [Twisted-Python] SQLAlchemy integration
Message-ID: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>

On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:

>I'm writing some modules for integrating SQLALchemy with Twisted.
>The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.

>I would like to know if there are some other people working on this
>(excluding sAsync)

Is there really a good reason for having *two* different efforts to integrate Twisted with a single other library?  Surely it must be possible to collaborate somehow.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061123/267ea65a/attachment.html>

From manlio_perillo at libero.it  Thu Nov 23 02:33:50 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 23 Nov 2006 10:33:50 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>
References: <20061123073958.22613.1053884361.divmod.xquotient.5@joule.divmod.com>
Message-ID: <45656AFE.8030005@libero.it>

glyph at divmod.com ha scritto:
> On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:
> 
>>I'm writing some modules for integrating SQLALchemy with Twisted.
>>The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
> 
>>I would like to know if there are some other people working on this
>>(excluding sAsync)
> 
> Is there really a good reason for having *two* different efforts to
> integrate Twisted with a single other library?  Surely it must be
> possible to collaborate somehow.
> 

I'm tring to offer an interface compatible with the twisted adbapi.
Moreover my API is very different from sAsync:


# global_connect will bind the engine to the global default_metadata
engine = Engine(...., global_connect=True)

users = Table("users, column(.....))
users.create().addCallback(...)


select([users], ...).addCallback()

engine.transact(callable)


This works because Engine implements the Connectable interface.
There is an issue here: if a query/table is bound to this Engine, every
query will run in a separate thread; this is not what one want when
inside a transaction).



More complex is the integration with sqlalchemy session handling.

As an example with Nevow:
- a thread retrieve an object from the database
- another thread modify the object


It would be much simple if the two operations occur in the same thread
(this require to run renderHTTP or locateChild in a separate thread but
I ignore if this is safe).



Regards  Manlio Perillo



From michele.petrazzo at unipex.it  Thu Nov 23 11:38:18 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 23 Nov 2006 19:38:18 +0100
Subject: [Twisted-Python] cred question
Message-ID: <4565EA9A.6080901@unipex.it>

Hi,
I'm trying to use the various checkers.* that implement the
ICredentialsChecker, for authenticate a spread.pb client, but I have a
lot of problem with all the checkers except the
InMemoryUsernamePasswordDatabaseDontUse (and FilePasswordDB without hash
function) that work.
The output message are:
"""Failure: twisted.cred.error.UnhandledCredentials: No checker for
twisted.cred.credentials.IUsernameHashedPassword,
twisted.spread.pb.IUsernameMD5Password, twisted.spread.interfaces.IJellyable
"""

My server code:
<code>
class MyRealm:
     __implements__ = portal.IRealm
     def requestAvatar(self, avatarId, mind, *interfaces):
         if pb.IPerspective not in interfaces:
             raise NotImplementedError
         return pb.IPerspective, MyPerspective(avatarId), lambda:None

class MyPerspective(pb.Avatar):
     def __init__(self, name):
         self.name = name
         print "\n\nServer: New connection: %s"%name

p = portal.Portal(MyRealm())
c = checkers.InMemoryUsernamePasswordDatabaseDontUse(user2="pass2")
#or c = checkers.FilePasswordDB("passwd") that work
#or c = checkers.FilePasswordDB("passwd", hash=hash_funct) that don't
#work
#or c = checkers.AllowAnonymousAccess()

p.registerChecker(c)
reactor.listenTCP(8800, pb.PBServerFactory(p))
reactor.run()

</code>

How can I use the various FilePasswordDB with the hash or the others?

Thanks,
Michele



From rasjidw at gmail.com  Thu Nov 23 18:45:37 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 24 Nov 2006 12:45:37 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
Message-ID: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>

I would like to have occasional remote admininitrative command line access
to a number of MS Windows machines that I help maintain.

There are over 200 machines, but usage would be very limited and sparodic,
so the commerical solutions are too expensive for the benefit gaiined.
Windows XPs built in telnet server is free, but insecure.  And if possible,
I would like to avoid the Cygwin route, particulary on machines that I don't
have physical access to.

So has anyone used the ssh server in Conch as a secure way of providing
command line access a Windows machine?

Cheers,

Rasjid.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061124/54979c23/attachment.html>

From ncesar at lunix.com.ar  Fri Nov 24 10:14:37 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 14:14:37 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor within
	twistd
Message-ID: <200611241414.38211.ncesar@lunix.com.ar>

I have the following code, 

------------------miniserver.tac-------------------------
from twisted.application.internet import TCPServer
from twisted.application import service
from twisted.internet import protocol
from twisted.python.failure import DefaultException

class GoodByeException(DefaultException):
    def __init__(self, *args, **kwargs):
        DefaultException.__init__(self, *args, **kwargs)
        self.args = "I wanna quit....\n but I'm stuck inside a twisted 
application"

class FortyTwoProtocol(protocol.Protocol):
    def connectionMade(self):
	raise GoodByeException()
        return

class FortyTwoFactory(protocol.ServerFactory):
    protocol = FortyTwoProtocol
    def __init__(self):
	pass

application = service.Application("Total Perspective Vortex")
theService  = service.MultiService()
fact42      = FortyTwoFactory()
server42    = TCPServer(4242, fact42)
theService.addService(server42)
theService.setServiceParent(application)
------------------------------------------------------------------

I want my GoodByeException to exit the reactor loop (basacally do a 
reactor.stop()) and then twistd exit the reactor's main loop. I'm programming 
a bigger application and sudentlly some exceptions are really Fatal, but the 
applications keeps on running (sometimes with no services attending).

Any sugestions will be appreciated .

Greetings,

PS: this is the log
-------------------------------------------------------------------
$ twistd -noy miniserver.tac
2006/11/24 14:05 ART [-] Log opened.
2006/11/24 14:05 ART [-] twistd 2.4.0 (/usr/bin/python 2.4.4) starting up
2006/11/24 14:05 ART [-] reactor class: 
<class 'twisted.internet.selectreactor.SelectReactor'>
2006/11/24 14:05 ART [-] Loading miniserver.tac...
2006/11/24 14:05 ART [-] Loaded.
2006/11/24 14:05 ART [-] __builtin__.FortyTwoFactory starting on 4242
2006/11/24 14:05 ART [-] Starting factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [__builtin__.FortyTwoFactory] Traceback (most recent call 
last):
          File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 
38, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, 
**kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 37, in callWithContext
            return func(*args,**kw)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py", 
line 139, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", 
line 769, in doRead
            protocol.makeConnection(transport)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/protocol.py", line 
333, in makeConnection
            self.connectionMade()
          File "miniserver.tac", line 14, in connectionMade
            raise GoodByeException()
        __builtin__.GoodByeException: I wanna quit....
         but I'm stuck inside a twisted application

2006/11/24 14:05 ART [-] Received SIGINT, shutting down.
2006/11/24 14:05 ART [-] (Port 4242 Closed)
2006/11/24 14:05 ART [-] Stopping factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [-] Main loop terminated.
2006/11/24 14:05 ART [-] Server Shut Down.
-----------------------------------------------------------------------

-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061124/021684f9/attachment.sig>

From ncesar at lunix.com.ar  Fri Nov 24 10:18:59 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 14:18:59 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor within
	twistd
Message-ID: <200611241418.59398.ncesar@lunix.com.ar>

I have the following code, 

------------------miniserver.tac-------------------------
from twisted.application.internet import TCPServer
from twisted.application import service
from twisted.internet import protocol
from twisted.python.failure import DefaultException

class GoodByeException(DefaultException):
    def __init__(self, *args, **kwargs):
        DefaultException.__init__(self, *args, **kwargs)
        self.args = "I wanna quit....\n but I'm stuck inside a twisted 
application"

class FortyTwoProtocol(protocol.Protocol):
    def connectionMade(self):
	raise GoodByeException()
        return

class FortyTwoFactory(protocol.ServerFactory):
    protocol = FortyTwoProtocol
    def __init__(self):
	pass

application = service.Application("Total Perspective Vortex")
theService  = service.MultiService()
fact42      = FortyTwoFactory()
server42    = TCPServer(4242, fact42)
theService.addService(server42)
theService.setServiceParent(application)
------------------------------------------------------------------

I want my GoodByeException to exit the reactor loop (basacally do a 
reactor.stop()) and then twistd exit the reactor's main loop. I'm programming 
a bigger application and sudentlly some exceptions are really Fatal, but the 
applications keeps on running (sometimes with no services attending).

Any sugestions will be appreciated .

Greetings,

PS: this is the log
-------------------------------------------------------------------
$ twistd -noy miniserver.tac
2006/11/24 14:05 ART [-] Log opened.
2006/11/24 14:05 ART [-] twistd 2.4.0 (/usr/bin/python 2.4.4) starting up
2006/11/24 14:05 ART [-] reactor class: 
<class 'twisted.internet.selectreactor.SelectReactor'>
2006/11/24 14:05 ART [-] Loading miniserver.tac...
2006/11/24 14:05 ART [-] Loaded.
2006/11/24 14:05 ART [-] __builtin__.FortyTwoFactory starting on 4242
2006/11/24 14:05 ART [-] Starting factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [__builtin__.FortyTwoFactory] Traceback (most recent call 
last):
          File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 
38, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 59, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, 
**kw)
          File "/usr/lib/python2.4/site-packages/twisted/python/context.py", 
line 37, in callWithContext
            return func(*args,**kw)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py", 
line 139, in _doReadOrWrite
            why = getattr(selectable, method)()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", 
line 769, in doRead
            protocol.makeConnection(transport)
          
File "/usr/lib/python2.4/site-packages/twisted/internet/protocol.py", line 
333, in makeConnection
            self.connectionMade()
          File "miniserver.tac", line 14, in connectionMade
            raise GoodByeException()
        __builtin__.GoodByeException: I wanna quit....
         but I'm stuck inside a twisted application

2006/11/24 14:05 ART [-] Received SIGINT, shutting down.
2006/11/24 14:05 ART [-] (Port 4242 Closed)
2006/11/24 14:05 ART [-] Stopping factory <__builtin__.FortyTwoFactory 
instance at 0xa7850a2c>
2006/11/24 14:05 ART [-] Main loop terminated.
2006/11/24 14:05 ART [-] Server Shut Down.
-----------------------------------------------------------------------

-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061124/0c397a07/attachment.sig>

From glyph at divmod.com  Fri Nov 24 16:18:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Nov 2006 23:18:21 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>

On 05:14 pm, ncesar at lunix.com.ar wrote:
>I have the following code,

>I want my GoodByeException to exit the reactor loop (basacally do a
>reactor.stop()) and then twistd exit the reactor's main loop. I'm programming
>a bigger application and sudentlly some exceptions are really Fatal, but the
>applications keeps on running (sometimes with no services attending).

So make GoodByeException.__init__ call reactor.stop() instead of setting the useless 'args' attribute.

This is bad form, however.  Particular types of exception should not stop the reactor.  Code that wants the reactor to stop, should call reactor.stop.  Maybe you could make a method that both calls reactor.stop() *and* raises an exception.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061124/1882f18f/attachment.html>

From phil at bubblehouse.org  Fri Nov 24 16:46:26 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 24 Nov 2006 18:46:26 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
Message-ID: <4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>

On Nov 24, 2006, at 5:16 PM, Yi Qiang wrote:

> On 11/19/06, Phil Christensen <phil at bubblehouse.org> wrote:
> On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> > There does not seem to be a corresponding clientConnectionLost
> > method for the Factory class.  Any suggestions would be appreciated.
>
> My approach to this was to put any post-connection cleanup in the
> Avatar's "logout" method.
>
> Hi Phil,
> Do you happen to be able to share the code you've written to  
> accomplish just this?  Where do you store your list of connected  
> clients?

I'm CC'ing the list for posterity, but this is actually pretty  
straightforward. I'm guessing the issue is that you're over-thinking  
this.

First of all, here's some code from your original post:

On Nov 19, 2006, at 7:00 PM, Yi Qiang wrote:
> from twisted.spread import pb
>
> class DSagePBServerFactory(pb.PBServerFactory):
[snip snip snip]
>     def clientConnectionMade(self, broker):
>         self.clients.append((broker.transport,
>                              broker.transport.getPeer().host,
>                              broker.transport.getPeer().port))
>         print self.clients

First thing, there's not necessarily any need to subclass the  
PBServerFactory if this is all you're doing. In the interest of  
forward-compatibility (always a good idea with Twisted ;-), I try to  
avoid making subclasses of essential framework classes unless I have  
a very good reason (or a very bad one ;-).

The place where you want to do all this is really in your Realm  
instance. I think it's possible to create a PB server that doesn't  
require login, but I've never had any need for it, so you're kind of  
on your own there.

> class MyRealm:
>     """
>     Holds a reference to the main service object.
>     """
>     __implements__ = portal.IRealm
>
>     def __init__(self, service):
>         """
>         Create a realm with the given service.
>         """
>         self.service = service
>
>     def requestAvatar(self, avatarId, mind, *interfaces):
>         """
>         This function is called after the user has verified their
>         identity. It returns an object that represents the user
>         in the system, i.e., an avatar.
>         """
>         if pb.IPerspective in interfaces:
>             avatar = self._getPBAvatar(avatarId, mind)
>             ####################### <-- RIGHT HERE
>             return pb.IPerspective, avatar, avatar.logout
>         else:
>             raise NotImplementedError("no interface")

This is where you want to maintain your client list. The hardest part  
is deciding on a place to put it that will be accessible from all  
your code; I usually use a singleton pattern of some kind, where I  
can import a module that holds onto client references and provides  
functions to manipulate/retrieve that list.

So, that point where I put all those hashes is a pretty good place to  
add clients your client queue. The 'mind' argument is usually a  
reference to the client on the other end, assuming your client passes  
it properly. My client does this:

>     # self.client is a Referenceable on the client side.
>     defer = self.factory.login(credentials.UsernamePassword 
> (username, password), self.client)
>     defer.addCallback(connected_callback, self)

This way, you can find all the necessary info you might need to  
identify the user on the other end in the properties of this object.

You'll also see that right after the hashes, I return a three-tuplet  
that has avatar.logout as its third item. This is a method defined on  
my avatar object, but any callable object can be returned here, and  
that callable, of course, can remove clients from your list. So one  
approach to keeping track of client connections would be:

> class MyRealm(pb.Avatar):
>     # ... snip
>     # ... snip
>     def requestAvatar(self, avatarId, mind, *interfaces):
>         """
>         This function is called after the user has verified their
>         identity. It returns an object that represents the user
>         in the system, i.e., an avatar.
>         """
>         if pb.IPerspective in interfaces:
>             avatar = MyAvatar()
>
>             import clienttracker
>             clienttracker.append(avatar)
>
>             return pb.IPerspective, avatar, avatar.logout
>         else:
>             raise NotImplementedError("no interface")
>
> class MyAvatar(pb.Avatar):
>     # ... snip
>     # ... snip
>     def logout(self):
>         import clienttracker
>         clienttracker.remove(self)

There's a lot of flexibility there. You could move the  
clienttracker.append call right inside your Avatar constructor -- the  
only reason I didn't is because my server supports a number of  
protocols besides PB, and I wanted to deal with them universally.

One thing this approach doesn't do is keep track of clients that  
connect, but fail authentication. To do that, you'd need to subclass  
Broker, but that's a tough one. I looked into this once before, and  
it certainly appears doable -- in the end, a Broker is still a  
Protocol, which means it has a transport property you can get client  
addresses out of.

Of course, if a user fails authentication, they are immediately  
disconnected, so this would only be a problem if you are concerned  
about malevolent users. It would be possible to write a client that  
connects but never authenticates; enough of those could cause some  
discomfort on the server side, but if that happens, you likely have  
more problems than keeping track of a client list.

Hope this helps...

-phil




From ncesar at lunix.com.ar  Fri Nov 24 17:55:43 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Fri, 24 Nov 2006 21:55:43 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>
References: <20061124231821.22613.1258710461.divmod.xquotient.343@joule.divmod.com>
Message-ID: <200611242155.43518.ncesar@lunix.com.ar>

El Viernes, 24 de Noviembre de 2006 20:18, glyph at divmod.com escribió:
> So make GoodByeException.__init__ call reactor.stop() instead of setting
> the useless 'args' attribute.

Must admit, is a clever idea... :-D

> This is bad form, however.  Particular types of exception should not stop
> the reactor.  Code that wants the reactor to stop, should call
> reactor.stop.  Maybe you could make a method that both calls reactor.stop()
> *and* raises an exception.

This is the way i'm doing it right now, but i'm starting to detect new 
exceptions raised within standard library (among others) code... and instead 
of catching all posibilities I wanted the application to quit (with the 
corresponding logging done).

I was wondering if twistd/the application class could have a "exit on 
Exception" for this type of operations.

As always, Thanks  glyph for the advice
-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061124/f23164c9/attachment.sig>

From d.jacobfeuerborn at conversis.de  Fri Nov 24 20:41:28 2006
From: d.jacobfeuerborn at conversis.de (Dennis Jacobfeuerborn)
Date: Sat, 25 Nov 2006 04:41:28 +0100
Subject: [Twisted-Python] twisted SNMP problem
Message-ID: <4567BB68.4020707@conversis.de>

Hi,
I'm trying to write a small program that gets some SNMP values from a host 
using the twistedsnmp module. I modified one of the example programs for 
that purpose but I'm not sure if I'm approaching this the right way.

Basically if I run the attached script things work out fine but as soon as 
I comment in the line starting with "l2 = ..." and try to run the script 
again it will freeze and I'm forced to do a "kill -9" to get rid of it. My 
guess is that I'm running into trouble with the whole reactor/deferreds 
thing but I'm not sure where the problem is. What I'm basically trying to 
achieve is that I instantiate SNMPClient and then call getValue(OID) any 
number of times to get the desired values.

Does anyone have an idea what is wrong here or how to implement this in a 
better way?


Regards,
   Dennis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: snmp.py
Type: text/x-python
Size: 1411 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061125/451e3862/attachment-0002.py>

From glyph at divmod.com  Fri Nov 24 22:39:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Nov 2006 05:39:21 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>

On 12:55 am, ncesar at lunix.com.ar wrote:

>> This is bad form, however.  Particular types of exception should not stop
>> the reactor.  Code that wants the reactor to stop, should call
>> reactor.stop.  Maybe you could make a method that both calls reactor.stop()
>> *and* raises an exception.
>
>This is the way i'm doing it right now, but i'm starting to detect new
>exceptions raised within standard library (among others) code... and instead
>of catching all posibilities I wanted the application to quit (with the
>corresponding logging done).
>
>I was wondering if twistd/the application class could have a "exit on
>Exception" for this type of operations.

In general this is a bad idea.  There are basically 3 kinds of code you can write with Twisted:

  1. Infrastructure code, which implements a protocol and provides APIs for parsing and dealing with events.  This kind of code should never contain a reactor.stop at all.
  2. Application code which exits in response to a particular user event.  This kind of code should contain exactly 1 call to reactor.stop, in the handler for the user event that is the explicit stop.
  3. Programs which do one operation, then stop themselves.  This kind of code should contain exactly 1 call to reactor.stop, in the final callback/errback of the Deferred representing the operation that it is run to perform.

It sounds like you are writing code of type 3.  I'm guessing you're writing a program which does one thing, then shuts itself down.  If that is the case, the "program" should be encapsulated by a Deferred, and there should be a final addBoth which waits for the program to finish when it exits.

If you *don't* structure your program this way, then you'll discover later that sometimes, you want to run your particular operation TWICE in the lifetime of the process instead of once, and you will have to deal with dozens of calls to reactor.stop littered around your application in lots of places.  Don't try to always stop the *process* when your program is complete: stop the *program* by keeping a Deferred around which represents its complete run.  That way the *driver* for the program is responsible for stopping it, and when you want to aggregate multiple runs of it, you can easily use a tool like DeferredList, or do something different in the callbacks at the end.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061125/03300822/attachment.html>

From roland.hedberg at adm.umu.se  Sat Nov 25 07:33:31 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 15:33:31 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names ?
Message-ID: <4568543B.30404@adm.umu.se>

Hi!

There is no support what I can see in the present distribution, but
someone might have needed it and done a local patch.

I've made a not so well thought out attempt to add it myself, but I my
client (dig) responds with "Warning: Message parser reports malformed
message packet."

So, I'm obviously made some error.

Anyone that can lend me a hand ?

-- Roland



From roland.hedberg at adm.umu.se  Sat Nov 25 09:27:52 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 17:27:52 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names
 ?
In-Reply-To: <4568543B.30404@adm.umu.se>
References: <4568543B.30404@adm.umu.se>
Message-ID: <45686F08.1080106@adm.umu.se>

Roland Hedberg wrote:
> 
> There is no support what I can see in the present distribution, but
> someone might have needed it and done a local patch.
> 
> I've made a not so well thought out attempt to add it myself, but I my
> client (dig) responds with "Warning: Message parser reports malformed
> message packet."

Looking a bit further it turns out that the current definition of the
decode function in the Class Name in dns.py is *not* compatible with the
NAPTR definition in RFC 2915. Three strings in a sequence representing
different parts (as with flags,services and regexp in a NAPTR record )
is just handled wrongly.

I'll make an attempt at fixing this if no one beats me to it.

-- Roland



From roland.hedberg at adm.umu.se  Sat Nov 25 12:06:57 2006
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 25 Nov 2006 20:06:57 +0100
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names
 ?
In-Reply-To: <45686F08.1080106@adm.umu.se>
References: <4568543B.30404@adm.umu.se> <45686F08.1080106@adm.umu.se>
Message-ID: <45689451.3070207@adm.umu.se>

Roland Hedberg wrote:
> Roland Hedberg wrote:
>> There is no support what I can see in the present distribution, but
>> someone might have needed it and done a local patch.
>>
>> I've made a not so well thought out attempt to add it myself, but I my
>> client (dig) responds with "Warning: Message parser reports malformed
>> message packet."
> 
> Looking a bit further it turns out that the current definition of the
> decode function in the Class Name in dns.py is *not* compatible with the
> NAPTR definition in RFC 2915. Three strings in a sequence representing
> different parts (as with flags,services and regexp in a NAPTR record )
> is just handled wrongly.
> 
> I'll make an attempt at fixing this if no one beats me to it.

My error!

The problem was not in the Name Class which is perfectly suitable for
its purpose. The error was in using it for something which in the RFC is
defined as a character-string.

The solution was of course to define a new class (Charstr) and to give
it the appropriate implementation.

If anyone wants the fix I can send you a diff.

-- Roland




From yqiang at gmail.com  Sat Nov 25 12:33:01 2006
From: yqiang at gmail.com (Yi Qiang)
Date: Sat, 25 Nov 2006 11:33:01 -0800
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
	<4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
Message-ID: <3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>

On 11/24/06, Phil Christensen <phil at bubblehouse.org> wrote:

> The place where you want to do all this is really in your Realm
> instance. I think it's possible to create a PB server that doesn't
> require login, but I've never had any need for it, so you're kind of
> on your own there.


Hi Phil,
Thanks for the reply.  My implementation is very similar to what you
described below.  I am having the clients pass in a 'mind' object that's
representative of them, which is good enough to keep track of some
information.  What I am having trouble with is getting access to the clients
IP address.  This is not something I can pass in in the PBClientFactory's
login method, since many computers are NAT'ed.

> class MyRealm:
> >     """
> >     Holds a reference to the main service object.
> >     """
> >     __implements__ = portal.IRealm
> >
> >     def __init__(self, service):
> >         """
> >         Create a realm with the given service.
> >         """
> >         self.service = service
> >
> >     def requestAvatar(self, avatarId, mind, *interfaces):
> >         """
> >         This function is called after the user has verified their
> >         identity. It returns an object that represents the user
> >         in the system, i.e., an avatar.
> >         """
> >         if pb.IPerspective in interfaces:
> >             avatar = self._getPBAvatar(avatarId, mind)
> >             ####################### <-- RIGHT HERE
> >             return pb.IPerspective, avatar, avatar.logout
> >         else:
> >             raise NotImplementedError("no interface")
>
> This is where you want to maintain your client list. The hardest part
> is deciding on a place to put it that will be accessible from all
> your code; I usually use a singleton pattern of some kind, where I
> can import a module that holds onto client references and provides
> functions to manipulate/retrieve that list.


Yes, this is something I do have trouble with.  I will look into the
singleton pattern.  It would be nicer if there was a convenient way to
bubble up the  list of clients.

So, that point where I put all those hashes is a pretty good place to
> add clients your client queue. The 'mind' argument is usually a
> reference to the client on the other end, assuming your client passes
> it properly. My client does this:
>
> >     # self.client is a Referenceable on the client side.
> >     defer = self.factory.login(credentials.UsernamePassword
> > (username, password), self.client)
> >     defer.addCallback(connected_callback, self)


I do the same thing.

>
>
> There's a lot of flexibility there. You could move the
> clienttracker.append call right inside your Avatar constructor -- the
> only reason I didn't is because my server supports a number of
> protocols besides PB, and I wanted to deal with them universally.
>
> One thing this approach doesn't do is keep track of clients that
> connect, but fail authentication. To do that, you'd need to subclass
> Broker, but that's a tough one. I looked into this once before, and
> it certainly appears doable -- in the end, a Broker is still a
> Protocol, which means it has a transport property you can get client
> addresses out of.


This is exactly what I need to do so I can associate a client with both
their username and ip address.  I have access to the broker if I subclass
PBServerFactory, but I am not sure how to access it from the Realm, or if it
is possible at all.

Any suggestions would be appreciated!

Thanks,
Yi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061125/d59f9b6a/attachment.html>

From teratorn at twistedmatrix.com  Sat Nov 25 12:36:06 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 25 Nov 2006 13:36:06 -0600
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
References: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
Message-ID: <op.tjk7egk5y3d107@office2>

On Thu, 23 Nov 2006 19:45:37 -0600, Rasjid Wilcox <rasjidw at gmail.com>  
wrote:

> I would like to have occasional remote admininitrative command line  
> access
> to a number of MS Windows machines that I help maintain.
>
> There are over 200 machines, but usage would be very limited and  
> sparodic,
> so the commerical solutions are too expensive for the benefit gaiined.
> Windows XPs built in telnet server is free, but insecure.  And if  
> possible,
> I would like to avoid the Cygwin route, particulary on machines that I  
> don't
> have physical access to.
>
> So has anyone used the ssh server in Conch as a secure way of providing
> command line access a Windows machine?
>
> Cheers,
>
> Rasjid.

Hi Rasjid,

I'm not aware of anyone using Conch to provide ssh access to Windows, but  
it is an interesting idea.

If you let me know what problems you have I will be glad to help. One  
thing that I would look in to would be using PowerShell instead of cmd.exe  
as the shell. If that interests you one thing to research would be which  
method of integrating PowerShell would be best. You can either run  
PowerShell.exe and communicate over stdin/stdout, *or* you can host the  
PowerShell engine in-process. (PowerShell.exe is just a wrapper for the PS  
engine, giving it a text-based interface). Not sure how hard or even  
feasible this would be, considering that PS is a .NET assembly. (Who wants  
to make Twisted run on IronPython? ;)

-- 
Eric Mangold
Twisted/Win32 Maintainer



From glyph at divmod.com  Sat Nov 25 12:54:01 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Nov 2006 19:54:01 -0000
Subject: [Twisted-Python] Anyone added NAPTR support to Twisted Names  ?
Message-ID: <20061125195401.22613.505572522.divmod.xquotient.366@joule.divmod.com>


On 07:06 pm, roland.hedberg at adm.umu.se wrote:

>If anyone wants the fix I can send you a diff.

Please open a ticket in the Twisted tracker for further discussion, and attach your patch there - hopefully with tests :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061125/60f2d12e/attachment.html>

From phil at bubblehouse.org  Sat Nov 25 20:38:15 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 25 Nov 2006 22:38:15 -0500
Subject: [Twisted-Python] Keeping a list of connected PB clients
In-Reply-To: <3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>
References: <3af8969a0611191600u3fae654l41575422e08e8e81@mail.gmail.com>
	<F81724CC-F1E7-4EA9-80B1-8443FE98DCF6@bubblehouse.org>
	<3af8969a0611241416k450611c6v256099b53742e8d6@mail.gmail.com>
	<4D571E9D-894E-485D-881A-4D8339D3DAF5@bubblehouse.org>
	<3af8969a0611251133o275f120fg9b7eb36867188098@mail.gmail.com>
Message-ID: <0038537C-DF66-46FE-AD87-6A235EB5DC37@bubblehouse.org>

On Nov 25, 2006, at 2:33 PM, Yi Qiang wrote:
> What I am having trouble with is getting access to the clients IP  
> address.  This is not something I can pass in in the  
> PBClientFactory's login method, since many computers are NAT'ed.

I'm not sure if I understand you here, are you saying that you *are*  
passing in the client's IP? There's fundamentally no way for the  
server to know the IP of a NAT'd client unless the client sends it.

> Yes, this is something I do have trouble with.  I will look into  
> the singleton pattern.  It would be nicer if there was a convenient  
> way to bubble up the  list of clients.

I agree. I would be particularly interested in findnig an direct  
interface into the reactor that allows me to at least view, if not  
manipulate connected clients. Something similar to netstat's output  
would be ideal.

Any other Twisted devs know something I don't in this matter?

> On Nov 24, 2006, at 6:46 PM, Phil Christensen wrote:
>> One thing this approach doesn't do is keep track of clients that  
>> connect, but fail authentication. To do that, you'd need to  
>> subclass Broker, but that's a tough one. I looked into this once  
>> before, and it certainly appears doable -- in the end, a Broker is  
>> still a Protocol, which means it has a transport property you can  
>> get client addresses out of.
>
> This is exactly what I need to do so I can associate a client with  
> both their username and ip address.  I have access to the broker if  
> I subclass PBServerFactory, but I am not sure how to access it from  
> the Realm, or if it is possible at all.

Well, the actual act of replacing the broker is easy, you just do this:

> from twisted.spread import pb
> pb.PBServerFactory.protocol = MyBrokerSubclass

This will make all future PB servers you create use your new protocol.

Of course, that's not the hard part ;-).

It should definitely be possible to wedge yourself in there between  
the various connection handlers, but it's non-trivial. There's also a  
high likelihood that you may need to modify/subclass other classes,  
which may or may not have an appropriate interface for doing so.

I think the end result wouldn't really be worth the investment of  
time. If your server *really* needs detailed information about  
connected clients at a very raw level, but also requires the power of  
Perspective Broker, you might try splitting your app into two pieces.

You could mimic the old-school FTP approach, and create a main  
control channel that speaks a custom, albeit simple protocol. All  
this channel would do is handle the connected clients, and provide  
some kind of token to them that they could pass back to the PB server.

If you need to be sure of security, you could generate random names  
for the remote objects you wish your clients to interact with, and  
have the clients provide that name to the PB server on each request.  
There are probably a number of other approaches that could provide  
even tighter security.

If this won't do the trick for you, you might need to provide a  
little more information about what you're actually trying to accomplish.

-phil



From exarkun at twistedmatrix.com  Sat Nov 25 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Nov 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1164521102.85.1510852240@twistedmatrix.com

Bug summary
______________________
Summary for 2006-11-19 through 2006-11-26
Bugs opened: 6    Bugs closed: 3  Total open bugs: 783 (+3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Core:     +0           
|Enhancement:  +1  |Normal:   +4          |Mail:     +1           
                   |Low:      +0          |Trial:    +0           
                                          |Web2:     +1           
                                          |Website:  +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2240] Add twisted.mail SMTP client example which demonstrates TLS and authentication (opened by exarkun)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2240

                    ===== Normal =====
[#2241] Trac emails suck, they don't provide a link to the website. (opened by jerub)
    defect          website    http://twistedmatrix.com/trac/ticket/2241

[#2242] twisted.web2.static.File sucks with regards to overriding it's content type (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2242

[#2243] Todo attribute checking (opened by mithrandi)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2243

[#2244] Patch to setup.py to work with python installs in directories containing a space (opened by Sandra24)
    defect          core       http://twistedmatrix.com/trac/ticket/2244

                    ===== Low =====
[#2245] Deferred implementation in C (opened by therve) (CLOSED, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2245



Closed Bugs
______________________
                    ===== Highest =====
[#2173] twisted/trial/runner.py:243: exceptions.DeprecationWarning: log.startKeepingErrors is deprecated since Twisted 2.5 (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2173

[#2212] Remove mention of threadable.init from the threading chapter (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2212

                    ===== Low =====
[#2245] Deferred implementation in C (opened by therve, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2245





From rasjidw at gmail.com  Sun Nov 26 02:27:37 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Sun, 26 Nov 2006 20:27:37 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <op.tjk7egk5y3d107@office2>
References: <bf82ea70611231745g2b1bf915o662d4fdd2b2bbb6d@mail.gmail.com>
	<op.tjk7egk5y3d107@office2>
Message-ID: <bf82ea70611260127g68f4a13yb794e2f3e4d860ed@mail.gmail.com>

On 11/26/06, Eric Mangold <teratorn at twistedmatrix.com> wrote:
> On Thu, 23 Nov 2006 19:45:37 -0600, Rasjid Wilcox <rasjidw at gmail.com>
> wrote:
> > So has anyone used the ssh server in Conch as a secure way of providing
> > command line access a Windows machine?
>
> I'm not aware of anyone using Conch to provide ssh access to Windows, but
> it is an interesting idea.
>
> If you let me know what problems you have I will be glad to help.

Thanks.

> One thing that I would look in to would be using PowerShell instead of cmd.exe
> as the shell. If that interests you one thing to research would be which
> method of integrating PowerShell would be best. You can either run
> PowerShell.exe and communicate over stdin/stdout, *or* you can host the
> PowerShell engine in-process.

I'll probably stick with stdin/stdout, at least initially, as I have
done something along these lines before, just not within the twisted
framework.  Previously I used threading and emulated a non-blocking
process through buffering the data read.  I've been looking into
non-blocking pipe reading in win32, and it looks like there are a
coule of choices. Possibly the easiest I've seen so far uses some
calls from wxWidgets which adds another dependancy but seems to give
more control.

I'll report back when I've made some progress.

Cheers,

Rasjid.



From glyph at divmod.com  Sun Nov 26 08:52:52 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 26 Nov 2006 15:52:52 -0000
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
Message-ID: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>

On 09:27 am, rasjidw at gmail.com wrote:

>I'll probably stick with stdin/stdout, at least initially, as I have
>done something along these lines before, just not within the twisted
>framework.  Previously I used threading and emulated a non-blocking
>process through buffering the data read.  I've been looking into
>non-blocking pipe reading in win32, and it looks like there are a
>coule of choices. Possibly the easiest I've seen so far uses some
>calls from wxWidgets which adds another dependancy but seems to give
>more control.

If you're going to use stdin/stdout, just use the Twisted reactor's "spawnProcess" method, as the UNIX version of Conch does (although without the "pty" feature).  A great deal of trouble has already been put into making the Windows version of Twisted behave as if the operating system actually supported asynchronous interprocess communication.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061126/dd9d8109/attachment.html>

From jml at mumak.net  Sun Nov 26 17:31:23 2006
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Nov 2006 11:31:23 +1100
Subject: [Twisted-Python] trac's reliability
Message-ID: <d06a5cd30611261631q52d233ael6c64ef339f4f6afb@mail.gmail.com>

Hello,

The reliability of our trac instance is ludicrous.  It is becoming
extremely difficult to do any work on Twisted, particularly during the
hours when America is asleep.

I'm very grateful for Jp's tireless efforts in making trac work as
much as it has.  I have some idea of how busy he is, and can imagine
how frustrating the task must be.  However, we can't continue running
our issue tracker like this.

First question is, what is causing the outages? People on #twisted
have commented that they haven't seen similar behaviour on their own
tracs. The outages are so frequent that this is becoming an FAQ.

The second question is, how can I help trac to work better? Would it
help to throw more hardware at the problem? Should we switch to
another tracker? (blech) Are there open tickets on trac itself that I
could submit patches for?

Finally, assuming Twisted's trac isn't going to get much better any
time soon, I would greatly appreciate being given the permissions and
training to restore trac. I think it would also be a good idea to
share the responsibility with someone in a European timezone.

Thanks,
jml



From rasjidw at gmail.com  Sun Nov 26 18:20:44 2006
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Mon, 27 Nov 2006 12:20:44 +1100
Subject: [Twisted-Python] Using Conch as a ssh server on MS Windows
In-Reply-To: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>
References: <20061126155252.22613.1962066912.divmod.xquotient.372@joule.divmod.com>
Message-ID: <bf82ea70611261720u3328ce78ub4f5ca64a7d3ed04@mail.gmail.com>

On 11/27/06, glyph at divmod.com <glyph at divmod.com> wrote:
> If you're going to use stdin/stdout, just use the Twisted reactor's
> "spawnProcess" method, as the UNIX version of Conch does (although without
> the "pty" feature).  A great deal of trouble has already been put into
> making the Windows version of Twisted behave as if the operating system
> actually supported asynchronous interprocess communication.

Thanks for the pointer.

Rasjid.



From le.dahut at laposte.net  Mon Nov 27 02:54:48 2006
From: le.dahut at laposte.net (le dahut)
Date: Mon, 27 Nov 2006 10:54:48 +0100
Subject: [Twisted-Python] Perspective Broker
Message-ID: <456AB5E8.7010801@laposte.net>

Hello,

Using PB, I've setup a system where clients can control other clients in 
this way :

client1 executes "remote_do_something" on server1 with "ip_client2" as 
argument.
Then server1 connects to client2 and executes "remote_smthng" on it.

code is like this :
- client1:
"""
factory = pb.PBClientFactory()
reactor.connectTCP(ip_server1, port, factory)
d = factory.getRootObject()
d.addCallback(lambda object: object.callRemote("do_something", ip_client2))
d.addCallback(client1_call_b)
d.addErrback(client1_err_b)
"""

- server1:
"""
def remote_do_something(ip):
     factory = pb.PBClientFactory()
     reactor.connectTCP(ip_client2, port, factory)
     d = factory.getRootObject()
     d.addCallback(lambda object: object.callRemote("smthng"))
     d.addCallback(server1_call_b)
     d.addErrback(server1_err_b)

"""

- client2:
"""
def remote_smthng():
     <code>
     return "Ok, everything's done"
"""

How can client1 get client2's answer ?

Thanks



From mszumocki at contman.pl  Mon Nov 27 03:33:29 2006
From: mszumocki at contman.pl (Maciej Szumocki)
Date: Mon, 27 Nov 2006 11:33:29 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: E1GnIrj-0001ro-03@pyramid.twistedmatrix.com
Message-ID: <20061127103329.d1cdfb51@poczta.contman.pl>

> Date: Thu, 23 Nov 2006 07:39:58 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] SQLAlchemy integration
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:> 	<20061123073958.22613.1053884361.divmod.xquotient.5 at joule.divmod.com>
> Content-Type: text/plain; charset="utf-8"
> 
> On 22 Nov, 11:19 am, manlio_perillo at libero.it wrote:
> 
> >I'm writing some modules for integrating SQLALchemy with Twisted.
> >The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
> 
> >I would like to know if there are some other people working on this
> >(excluding sAsync)
> 
> Is there really a good reason for having *two* different efforts to
> integrate Twisted with a single other library?  Surely it must be possible
> to collaborate somehow.

I also use both Twisted and SQLAlchemy in one project. Unfortunately, using
sAsync is not an option for me due to licensing issue (sAsync is released under GPL).

Maciej Szumocki



From christian.simms at gmail.com  Mon Nov 27 04:37:13 2006
From: christian.simms at gmail.com (christian simms)
Date: Mon, 27 Nov 2006 06:37:13 -0500
Subject: [Twisted-Python] Perspective Broker
In-Reply-To: <456AB5E8.7010801@laposte.net>
References: <456AB5E8.7010801@laposte.net>
Message-ID: <cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>

On 11/27/06, le dahut <le.dahut at laposte.net> wrote:
> Hello,
>
> Using PB, I've setup a system where clients can control other clients in
> this way :
>
> client1 executes "remote_do_something" on server1 with "ip_client2" as
> argument.
> Then server1 connects to client2 and executes "remote_smthng" on it.

I haven't used PB before, but I have used other protocols with
Deferreds.  Assuming your PB code is OK, you're only missing a couple
lines related to callbacks, which I'll insert below.

> code is like this :
> - client1:
> """
> factory = pb.PBClientFactory()
> reactor.connectTCP(ip_server1, port, factory)
> d = factory.getRootObject()
> d.addCallback(lambda object: object.callRemote("do_something", ip_client2))
> d.addCallback(client1_call_b)
> d.addErrback(client1_err_b)

Please note that above, your client1_call_b function will be called
with its argument being the result of the remote method call
"do_something".

> """
>
> - server1:
> """
> def remote_do_something(ip):
>      factory = pb.PBClientFactory()
>      reactor.connectTCP(ip_client2, port, factory)
>      d = factory.getRootObject()
>      d.addCallback(lambda object: object.callRemote("smthng"))
>      d.addCallback(server1_call_b)
>      d.addErrback(server1_err_b)

Above, you need to add a "return d" statement at the very end of your
function "remote_do_something", or else Twisted won't know that the
output of the function "remote_do_something" should be the end result
of your Deferred "d".  Also, your function "server1_call_b" MUST
return its argument, or else the result will not get passed along.  It
could look something like this:

def server1_call_b(out):
    return out

The argument to server1_call_b is the result from the
"object.callRemote('smthng')" statement, and we are simply returning
it.  In fact, if that's all the function did, you should not even
define it (or use it in the callback chain) since it's not necessary.
But if you forgot the return statement then you would get Python's
default return value from a function, None, instead of the value.

>
> """
>
> - client2:
> """
> def remote_smthng():
>      <code>
>      return "Ok, everything's done"
> """
>
> How can client1 get client2's answer ?
>
> Thanks

Hopefully that does it.

Cheers,
Christian


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Nov 27 08:07:32 2006
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 27 Nov 2006 15:07:32 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>


On 12:31 am, jml at mumak.net wrote:
>Hello,
>
>The reliability of our trac instance is ludicrous.  It is becoming
>extremely difficult to do any work on Twisted, particularly during the
>hours when America is asleep.
>
>I'm very grateful for Jp's tireless efforts in making trac work as
>much as it has.  I have some idea of how busy he is, and can imagine
>how frustrating the task must be.  However, we can't continue running
>our issue tracker like this.
>
>First question is, what is causing the outages? People on #twisted
>have commented that they haven't seen similar behaviour on their own
>tracs. The outages are so frequent that this is becoming an FAQ.

There are several problems:

  Segfaults in the svn bindings - in correspondence with the trac team, I have been told (almost in so many words) that bdb-backed svn repositories are unsupported and we should switch to fsfs.

  Segfaults in the SQLite bindings - likewise, in correspondence with the trac team, I have more or less been told that SQLite is not a supported database engine and that we should switch to PostgreSQL.

  Deadlocks in... who knows where.

>
>The second question is, how can I help trac to work better? Would it
>help to throw more hardware at the problem? Should we switch to
>another tracker? (blech) Are there open tickets on trac itself that I
>could submit patches for?

It might be possible to resolve the above mentioned problems.

If we convert the repository to fsfs, we might find the segfaults from the svn bindings disappear (of course, we might not - I think we can all recognize the quality of this sort of bug stomping).  In addition to the actual task of converting, involved in this would be some level of investigation into the level of stability of the fsfs backend available in the version of debian used on wolfwood, an effort to package or have packaged a newer version, or an upgrade of wolfwood (however, since even edgy lacks svn 1.4, this probably isn't a useful endeavour).  This may also involve recompiling several packages on pyramid to add fsfs support or remove bdb support.

If we convert the trac database to use PostgreSQL, the SQLite segfaults will hopefully go away. ;)  This involves setting up a PostgreSQL server which we can use for trac (one is running on pyramid now, for the benefit of buildbot, beyond that, what state it is in is not clear to me).  There is a tool available from edgewall which is supposed to be capable of moving data from a SQLite database to a PostgreSQL database.  The various scripts and utilities which we have (eg, the weekly bug summary) may also need to be adjusted (I forget to what extent they are tied to SQLite).  Then, as an ongoing task, someone will need to maintain the PostgreSQL server.

As for the random deadlocks which occur... I see no realistic course of action which is likely to resolve these.  Perhaps, if the above changes are enacted, we will be lucky they will just go away by themselves.  That seems to be the attitude of the trac developers, anyway.

>
>Finally, assuming Twisted's trac isn't going to get much better any
>time soon, I would greatly appreciate being given the permissions and
>training to restore trac. I think it would also be a good idea to
>share the responsibility with someone in a European timezone.

Before I left last week I set up a cron job to take care of this.  When I returned it was still doing its job, so the level of availability seen over the past week or so may be the highest we can expect until we do something else fundamental to fix the issue.  However, the SSH key you gave me long ago is still in place and you should still have access to restart the server (just connecting should do it).

Personally, I am in favor of switching away from trac, as I have been since
shortly before we adopted it. ;)  The only open question is when the replacement will be ready.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061127/12e9e154/attachment.html>

From therve at free.fr  Mon Nov 27 08:51:56 2006
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 27 Nov 2006 16:51:56 +0100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <1164642716.456b099cc9579@imp2-g19.free.fr>

Quoting exarkun at divmod.com:

>   Segfaults in the svn bindings - in correspondence with the trac team, I
> have been told (almost in so many words) that bdb-backed svn repositories are
> unsupported and we should switch to fsfs.

I think it's a good advice: fsfs is far more stable than bdb (in my experience
of course). It's been advised by subversion for 2 years now.

> [snip]
> If we convert the trac database to use PostgreSQL, the SQLite segfaults will
> hopefully go away. ;)  This involves setting up a PostgreSQL server which we
> can use for trac (one is running on pyramid now, for the benefit of buildbot,
> beyond that, what state it is in is not clear to me).  There is a tool
> available from edgewall which is supposed to be capable of moving data from a
> SQLite database to a PostgreSQL database.  The various scripts and utilities
> which we have (eg, the weekly bug summary) may also need to be adjusted (I
> forget to what extent they are tied to SQLite).  Then, as an ongoing task,
> someone will need to maintain the PostgreSQL server.

FWIW, I'd be volunteer to help on a SQLite to Postgres migration.

> Personally, I am in favor of switching away from trac, as I have been since
> shortly before we adopted it. ;)  The only open question is when the
> replacement will be ready.

What's your main reason ? Is it the problem of stability or a problem of
functionnality ? Twisted tracker is the only one I know that have so many
problems with reliability. But most (big) trackers have made the move to
Postgres.

For functionality, I don't think you remember the roundup tracker :).

--
Thomas



From general at eepatents.com  Mon Nov 27 10:21:06 2006
From: general at eepatents.com (Ed Suominen)
Date: Mon, 27 Nov 2006 09:21:06 -0800
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
Message-ID: <456B1E82.5060507@eepatents.com>

>>> I'm writing some modules for integrating SQLALchemy with Twisted.
>>> The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
>>> I would like to know if there are some other people working on this
>>> (excluding sAsync)
>> Is there really a good reason for having *two* different efforts to
>> integrate Twisted with a single other library?  Surely it must be
>> possible to collaborate somehow.

I agree with Glyph. I've put a ton of effort into sAsync, which would
cost thousands of dollars at even a fraction of what I charge for "real"
work. Why not make use of that?

It is GPL'd, but I have one user implementing it in a commercial project
now under a special license that he obtained by doing some coding of his
own for me. (My thanks to the Twisted developers for making Twisted
itself available under a no-strings-attached license, and thus providing
me the opportunity for that sort of modest compensation.)

> This works because Engine implements the Connectable interface.
> There is an issue here: if a query/table is bound to this Engine, every
> query will run in a separate thread; this is not what one want when
> inside a transaction).

Perhaps you should take a closer look at what sAsync does before
dismissing it. sAsync has a taskqueue module that it uses to queue up
transactions so that they are *all* run in a single, dedicated thread.

> More complex is the integration with sqlalchemy session handling.
> 
> As an example with Nevow:
> - a thread retrieve an object from the database
> - another thread modify the object
>
> It would be much simple if the two operations occur in the same thread
> (this require to run renderHTTP or locateChild in a separate thread but
> I ignore if this is safe).

Again, the two operations *do* run in the same thread under sAsync, as
do all other SQLAlchemy operations that are run via methods of
AccessBroker. All you have to do is decorate the method with @transact
and it will run via the queue and the dedicated thread.

So, you may not want to re-invent the wheel on this one. By the way, I
try to be responsive to user comments, ideas, and patches. Some have
already improved sAsync quite a bit.

Best regards,
Ed Suominen
Developer of sAsync: http://foss.eepatents.com/sAsync



From foom at fuhm.net  Mon Nov 27 10:41:26 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Nov 2006 12:41:26 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>

On Nov 27, 2006, at 10:07 AM, exarkun at divmod.com wrote:
>   Segfaults in the svn bindings - in correspondence with the trac  
> team, I have been told (almost in so many words) that bdb-backed  
> svn repositories are unsupported and we should switch to fsfs.

FSFS works on svn 1.1.3 (which is what's on wolfwood now). However,  
there have been quite a few improvements since  then (like better  
binary diff algorithm), and it really would be nice to have svn 1.4  
so that we can use svnsync. I've successfully compiled it from source  
(~foom/svn14-install), but I don't think I'll be able to make a  
working debian package since there seem to be a large number of  
differences between the 1.1.3 debian packaging and 1.4 debian  
packaging, and the 1.4 debian packaging doesn't stand a chance of  
working on woody. If we're okay with installing in /usr/local, it  
should be fine.

James



From ncesar at lunix.com.ar  Mon Nov 27 10:55:30 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Mon, 27 Nov 2006 14:55:30 -0300
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <200611271455.31055.ncesar@lunix.com.ar>

El Lunes, 27 de Noviembre de 2006 12:07, exarkun at divmod.com escribió:
>   Segfaults in the svn bindings - in correspondence with the trac team, I
> have been told (almost in so many words) that bdb-backed svn repositories
> are unsupported and we should switch to fsfs.

IT's SOOOO easy to migrate to fsfs! 

Here is the recipe: ($REPO is the name of the repository, $USUARIO is the user 
and $GRUPO is the group.)

svnadmin dump $REPO > $REPO.svn.dump
svnadmin create --fs-type fsfs $REPO-fsfs
svnadmin load $REPO-fsfs < $REPO.svn.dump
mv $REPO $REPO.old
mv $REPO-fsfs $REPO
chown -R $USUARIO.$GRUPO $REPO && chmod -R g+w $REPO


and with that  $REPO.svn.dump it's also easy to migrate from server to 
server... 
-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061127/27d37eb1/attachment.sig>

From ncesar at lunix.com.ar  Mon Nov 27 11:19:00 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Mon, 27 Nov 2006 15:19:00 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>
References: <20061125053921.22613.1049902426.divmod.xquotient.356@joule.divmod.com>
Message-ID: <200611271519.00272.ncesar@lunix.com.ar>

El Sábado, 25 de Noviembre de 2006 02:39, glyph at divmod.com escribió:
> >I was wondering if twistd/the application class could have a "exit on
> >Exception" for this type of operations.
>
> In general this is a bad idea.  There are basically 3 kinds of code you can
> write with Twisted:
>
>   1. Infrastructure code, which implements a protocol and provides APIs for
> parsing and dealing with events.  This kind of code should never contain a
> reactor.stop at all.
(..)
> 3. Programs which do one operation, then stop themselves.  This kind of
> code should contain exactly 1 call to reactor.stop, in the final
> callback/errback of the Deferred representing the operation that it is run
> to perform.
>
> It sounds like you are writing code of type 3.

Actually is type 1, but there are horrible (network) conditions were de 
application should stop.

> If you *don't* structure your program this way, then you'll discover later
> that sometimes, you want to run your particular operation TWICE in the
> lifetime of the process instead of once, and you will have to deal with
> dozens of calls to reactor.stop littered around your application in lots of
> places.

Even it's not type 3, I get your point. And thats why I didn't want to write 
ANY reactor.stop() call, instead just raise exceptions- And have a unnified 
reactor.stop() inside somewhere in twistd. But it seems I need to think 
another solution. Right now as a workaround, reactor.stop() will be inside my 
exception's __init__ function ;-)

> Don't try to always stop the *process* when your program is 
> complete: stop the *program* by keeping a Deferred around which represents
> its complete run.  That way the *driver* for the program is responsible for
> stopping it, and when you want to aggregate multiple runs of it, you can
> easily use a tool like DeferredList, or do something different in the
> callbacks at the end.

I couldn't understand much of this last parragraph (my English reading could 
be part of the problem). I understand algorithms mucho more when are written 
in python instead of English,  Do you have a link to some code explaning 
this?


Thanks Glyph again for your detailed mail,
-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061127/2cbdd164/attachment.sig>

From therve at free.fr  Mon Nov 27 11:28:15 2006
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 27 Nov 2006 19:28:15 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <456B1E82.5060507@eepatents.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
	<456B1E82.5060507@eepatents.com>
Message-ID: <1164652095.456b2e3f03fae@imp2-g19.free.fr>

Quoting Ed Suominen <general at eepatents.com>:

> [snip]
> Ed Suominen
> Developer of sAsync: http://foss.eepatents.com/sAsync

I steal this thread to talk about sAsync tracker, where you close the ticket
system because of spam: it's very hard to report problems and/or contribute
without that. Askimet integration prevents most of spam, even if there's a lot
of false positive.

That said, I'd be glad to push sAsync as 'official' SQLAlchemy integration with
Twisted.

(We're talking about Trac too much today :))

--
Thomas



From exarkun at divmod.com  Mon Nov 27 11:54:34 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 13:54:34 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <1164642716.456b099cc9579@imp2-g19.free.fr>
Message-ID: <20061127185434.20948.1561921503.divmod.quotient.47811@ohm>

On Mon, 27 Nov 2006 16:51:56 +0100, Thomas Hervé <therve at free.fr> wrote:
>Quoting exarkun at divmod.com:
>
>>   Segfaults in the svn bindings - in correspondence with the trac team, I
>> have been told (almost in so many words) that bdb-backed svn repositories are
>> unsupported and we should switch to fsfs.
>
>I think it's a good advice: fsfs is far more stable than bdb (in my experience
>of course). It's been advised by subversion for 2 years now.

Do you have a lot of experience with fsfs with svn 1.1.3?  Personally, I haven't found any defects in bdb svn.  The only reason I have to switch right now is the assurance of the trac developers that it will make something more stable (they do not have a good track record in this department).

>
>> [snip]
>> If we convert the trac database to use PostgreSQL, the SQLite segfaults will
>> hopefully go away. ;)  This involves setting up a PostgreSQL server which we
>> can use for trac (one is running on pyramid now, for the benefit of buildbot,
>> beyond that, what state it is in is not clear to me).  There is a tool
>> available from edgewall which is supposed to be capable of moving data from a
>> SQLite database to a PostgreSQL database.  The various scripts and utilities
>> which we have (eg, the weekly bug summary) may also need to be adjusted (I
>> forget to what extent they are tied to SQLite).  Then, as an ongoing task,
>> someone will need to maintain the PostgreSQL server.
>
>FWIW, I'd be volunteer to help on a SQLite to Postgres migration.
>

If we decide to do this, some tickets will probably appear in the tracker.  I'm sure you'll notice them. :)  Thanks for offering to help.

>> Personally, I am in favor of switching away from trac, as I have been since
>> shortly before we adopted it. ;)  The only open question is when the
>> replacement will be ready.
>
>What's your main reason ? Is it the problem of stability or a problem of
>functionnality ? Twisted tracker is the only one I know that have so many
>problems with reliability. But most (big) trackers have made the move to
>Postgres.

Stability and limited usability.  The only real killer feature trac has is linking from the wiki to the ticket tracker to the svn browser.  Each of these independently is only okay (the ticket tracker on its own is pretty lame), but cross-domain links are handy.

>
>For functionality, I don't think you remember the roundup tracker :).
>

As an issue tracker, roundup is at least as good as trac, I think.  As a whole website dealie, trac clearly has a bit more going for it.

Jean-Paul



From exarkun at divmod.com  Mon Nov 27 11:57:14 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 13:57:14 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <200611271455.31055.ncesar@lunix.com.ar>
Message-ID: <20061127185714.20948.1693744160.divmod.quotient.47816@ohm>

On Mon, 27 Nov 2006 14:55:30 -0300, "Nicolas D. Cesar" <ncesar at lunix.com.ar> wrote:
>El Lunes, 27 de Noviembre de 2006 12:07, exarkun at divmod.com escribió:
>>   Segfaults in the svn bindings - in correspondence with the trac team, I
>> have been told (almost in so many words) that bdb-backed svn repositories
>> are unsupported and we should switch to fsfs.
>
>IT's SOOOO easy to migrate to fsfs!
>

I know.  But you disregarded the rest of the points I raised regarding the transition.

Jean-Paul



From foom at fuhm.net  Mon Nov 27 12:04:53 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Nov 2006 14:04:53 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<A76101DB-57A1-43DB-BD81-3B0A9E745EBA@fuhm.net>
Message-ID: <034B2DCB-9C67-4878-ABDA-FCE10FD2B649@fuhm.net>


On Nov 27, 2006, at 12:41 PM, James Y Knight wrote:

> On Nov 27, 2006, at 10:07 AM, exarkun at divmod.com wrote:
>>   Segfaults in the svn bindings - in correspondence with the trac  
>> team, I have been told (almost in so many words) that bdb-backed  
>> svn repositories are unsupported and we should switch to fsfs.
>
> FSFS works on svn 1.1.3 (which is what's on wolfwood now). However,  
> there have been quite a few improvements since  then (like better  
> binary diff algorithm), and it really would be nice to have svn 1.4  
> so that we can use svnsync. I've successfully compiled it from  
> source (~foom/svn14-install), but I don't think I'll be able to  
> make a working debian package since there seem to be a large number  
> of differences between the 1.1.3 debian packaging and 1.4 debian  
> packaging, and the 1.4 debian packaging doesn't stand a chance of  
> working on woody. If we're okay with installing in /usr/local, it  
> should be fine.

The other option is to upgrade wolfwood to debian stable ("sarge")  
and then just install svn 1.4 from testing. That might be a good idea  
anyhow, since oldstable is, well, old. And unsupported.

James




From p.mayers at imperial.ac.uk  Mon Nov 27 14:26:39 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 27 Nov 2006 21:26:39 +0000
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
Message-ID: <456B580F.50505@imperial.ac.uk>

exarkun at divmod.com wrote:
> If we convert the repository to fsfs, we might find the segfaults from 
> the svn bindings disappear (of course, we might not - I think we can all 
> recognize the quality of this sort of bug stomping).  In addition to the 

Whilst I agree generally those kinds of statements are disturbing, in 
this particular case I can offer my 100%-independent support for that 
action.

BDB backends for SVN are disastrous. People should not under any 
circumstances use them for new installations, and unless it is 
absolutely not achievable, people running SVN installations should 
migrate away to fsfs as soon as possible.



From manlio_perillo at libero.it  Mon Nov 27 14:44:35 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 27 Nov 2006 22:44:35 +0100
Subject: [Twisted-Python] SQLAlchemy integration
In-Reply-To: <456B1E82.5060507@eepatents.com>
References: <E1GnIrj-0001ro-02@pyramid.twistedmatrix.com>
	<456B1E82.5060507@eepatents.com>
Message-ID: <456B5C43.6070008@libero.it>

Ed Suominen ha scritto:
>>>> I'm writing some modules for integrating SQLALchemy with Twisted.
>>>> The idea is to write a custom Pool, EngineStrategy and Engine for Twisted.
>>>> I would like to know if there are some other people working on this
>>>> (excluding sAsync)
>>> Is there really a good reason for having *two* different efforts to
>>> integrate Twisted with a single other library?  Surely it must be
>>> possible to collaborate somehow.
> 
> I agree with Glyph. I've put a ton of effort into sAsync, which would
> cost thousands of dollars at even a fraction of what I charge for "real"
> work. Why not make use of that?
> 

My original motivation was to have an interface compatible with adbapi.

> It is GPL'd, but I have one user implementing it in a commercial project
> now under a special license that he obtained by doing some coding of his
> own for me. (My thanks to the Twisted developers for making Twisted
> itself available under a no-strings-attached license, and thus providing
> me the opportunity for that sort of modest compensation.)
> 
>> This works because Engine implements the Connectable interface.
>> There is an issue here: if a query/table is bound to this Engine, every
>> query will run in a separate thread; this is not what one want when
>> inside a transaction).
> 
> Perhaps you should take a closer look at what sAsync does before
> dismissing it. sAsync has a taskqueue module that it uses to queue up
> transactions so that they are *all* run in a single, dedicated thread.
> 

So sAsync uses only one thread?

>> More complex is the integration with sqlalchemy session handling.
>>
>> As an example with Nevow:
>> - a thread retrieve an object from the database
>> - another thread modify the object
>>
>> It would be much simple if the two operations occur in the same thread
>> (this require to run renderHTTP or locateChild in a separate thread but
>> I ignore if this is safe).
> 
> Again, the two operations *do* run in the same thread under sAsync, as
> do all other SQLAlchemy operations that are run via methods of
> AccessBroker. All you have to do is decorate the method with @transact
> and it will run via the queue and the dedicated thread.
> 
> So, you may not want to re-invent the wheel on this one. 


In sAsync I do not like the idea of startup method to initialize tables.

I would like to define tables where I want, so that I:
1) can create the tables on the database with a dedicated script
2) can import tables from one package to another, being able to do some
   modifications (if I need it).

> By the way, I
> try to be responsive to user comments, ideas, and patches. Some have
> already improved sAsync quite a bit.
> 


Regards  Manlio Perillo



From jml at mumak.net  Mon Nov 27 14:41:17 2006
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 28 Nov 2006 08:41:17 +1100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <456B580F.50505@imperial.ac.uk>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<456B580F.50505@imperial.ac.uk>
Message-ID: <d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>

On 11/28/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> exarkun at divmod.com wrote:
> > If we convert the repository to fsfs, we might find the segfaults from
> > the svn bindings disappear (of course, we might not - I think we can all
> > recognize the quality of this sort of bug stomping).  In addition to the
>
> Whilst I agree generally those kinds of statements are disturbing, in
> this particular case I can offer my 100%-independent support for that
> action.
>

For more information, see the Subversion book's entry on the two
backends: http://svnbook.red-bean.com/en/1.2/svn.reposadmin.html#svn.reposadmin.basics.backends

cheers,
jml



From corydodt at gmail.com  Mon Nov 27 16:12:50 2006
From: corydodt at gmail.com (Cory Dodt)
Date: Mon, 27 Nov 2006 15:12:50 -0800
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>
References: <20061127150732.22613.1314736084.divmod.xquotient.426@joule.divmod.com>
	<456B580F.50505@imperial.ac.uk>
	<d06a5cd30611271341v50885a79gca147de36adab988@mail.gmail.com>
Message-ID: <c16a94ff0611271512u6f08a42erb2e6c52eba874de7@mail.gmail.com>

I support using foom's /usr/local compiled SVN 1.4 on wolfwood as-is, and
migrating to fsfs.  I have used fsfs a bit here, and I'm confident that it
will not lose data.  If we migrate the SVN database, it might actually make
a server-wide upgrade to a supported (recent) OS a little easier.

I wouldn't recommend using a /usr/local compiled postgresql, however.  If we
switch to a pg backend for trac, I have a hunch things will go smoother if
the server-wide upgrade is done first.

In my head the basic plan looks like:

1- migrate to fsfs on a recent SVN.  Watch for improvements in trac.  If
trac starts to behave, stop here.

2- upgrade wolfwood server.  Watch for improvments in trac.  Upgrade pyramid
while you're in there. ;-)  If trac improves, stop here.

3- Migrate backend to pgsql.  Watch for improvements in trac.  If trac
doesn't improve, migrate to something not-trac.

Yes, I am volunteering my time.  I don't currently have any permissions on
these servers apart from commits.

C


On 11/27/06, Jonathan Lange <jml at mumak.net> wrote:
>
> On 11/28/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> > exarkun at divmod.com wrote:
> > > If we convert the repository to fsfs, we might find the segfaults from
> > > the svn bindings disappear (of course, we might not - I think we can
> all
> > > recognize the quality of this sort of bug stomping).  In addition to
> the
> >
> > Whilst I agree generally those kinds of statements are disturbing, in
> > this particular case I can offer my 100%-independent support for that
> > action.
> >
>
> For more information, see the Subversion book's entry on the two
> backends:
> http://svnbook.red-bean.com/en/1.2/svn.reposadmin.html#svn.reposadmin.basics.backends
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061127/77bcfaaf/attachment.html>

From exarkun at divmod.com  Mon Nov 27 19:12:05 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Nov 2006 21:12:05 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <c16a94ff0611271512u6f08a42erb2e6c52eba874de7@mail.gmail.com>
Message-ID: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>

On Mon, 27 Nov 2006 15:12:50 -0800, Cory Dodt <corydodt at gmail.com> wrote:
>I support using foom's /usr/local compiled SVN 1.4 on wolfwood as-is, and
>migrating to fsfs.  I have used fsfs a bit here, and I'm confident that it
>will not lose data.  If we migrate the SVN database, it might actually make
>a server-wide upgrade to a supported (recent) OS a little easier.

FWIW, http://subversion.tigris.org/issues/show_bug.cgi?id=2467

But sure, upgrading to svn 1.4.2 on wolfwood is probably reasonable.  I'm not sure whether I'd rather see a /usr/local/ install or a systemwide upgrade to a newer version of Debian or Ubuntu.  However, it doesn't really matter which I'd rather see, since I am not wolfwood's sysadmin, and that is for whom this is a choice.

>
>I wouldn't recommend using a /usr/local compiled postgresql, however.  If we
>switch to a pg backend for trac, I have a hunch things will go smoother if
>the server-wide upgrade is done first.

Quite, I don't think anyone is thinking about doing this. :)

>
>In my head the basic plan looks like:
>
>1- migrate to fsfs on a recent SVN.  Watch for improvements in trac.  If
>trac starts to behave, stop here.

You skipped some steps here, but yes, this sounds like a reasonable thing to start with.

>
>2- upgrade wolfwood server.  Watch for improvments in trac.  Upgrade pyramid
>while you're in there. ;-)  If trac improves, stop here.

This won't have any noticable effect on trac, since trac doesn't interact with any components on wolfwood directly (nor use anything of significance from the system-wide installs of anything on pyramid).

>
>3- Migrate backend to pgsql.  Watch for improvements in trac.  If trac
>doesn't improve, migrate to something not-trac.

Making this the second step (again with some explicit pieces missing, like porting any tools we need to port), and I don't have anything to suggest we do before this.

>
>Yes, I am volunteering my time.  I don't currently have any permissions on
>these servers apart from commits.
>

Great, thank you.

Jean-Paul



From glyph at divmod.com  Tue Nov 28 02:07:48 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 28 Nov 2006 09:07:48 -0000
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
Message-ID: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>

On 27 Nov, 06:19 pm, ncesar at lunix.com.ar wrote:
>El S�bado, 25 de Noviembre de 2006 02:39, glyph at divmod.com escribi�:
>> >I was wondering if twistd/the application class could have a "exit on
>> >Exception" for this type of operations.

>> In general this is a bad idea.  There are basically 3 kinds of code you can
>> write with Twisted:
>>
>>   1. Infrastructure code, which implements a protocol and provides APIs for
>> parsing and dealing with events.  This kind of code should never contain a
>> reactor.stop at all.

>Actually is type 1, but there are horrible (network) conditions were de
>application should stop.

No, there aren't.  What happens when I run your application in-process with my webserver?  Should the webserver stop simply because your protocol is not working?

>Even it's not type 3, I get your point. And thats why I didn't want to write
>ANY reactor.stop() call, instead just raise exceptions- And have a unnified
>reactor.stop() inside somewhere in twistd. But it seems I need to think
>another solution. Right now as a workaround, reactor.stop() will be inside my
>exception's __init__ function ;-)

Just don't call reactor.stop at all unless you are writing top-level infrastructure code.  Your application should have some other, more structured way of reporting fatal shut-down errors to its run container (e.g. runContainer.applicationEncounteredFatal(xxx)), not simply raising exceptions and hoping someone is listening.  Unless you give more specifics that indicate that your special case is special-er than any other I've seen before, I'll stand by this. :)

>> Don't try to always stop the *process* when your program is
>> complete: stop the *program* by keeping a Deferred around which represents
>> its complete run.  That way the *driver* for the program is responsible for
>> stopping it, and when you want to aggregate multiple runs of it, you can
>> easily use a tool like DeferredList, or do something different in the
>> callbacks at the end.
>
>I couldn't understand much of this last parragraph (my English reading could
>be part of the problem). I understand algorithms mucho more when are written
>in python instead of English,  Do you have a link to some code explaning
>this?

It's hard for me to think of a program which does this in a simple way.  If I can think of one I will post an example.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061128/e1eb623b/attachment.html>

From glyph at divmod.com  Tue Nov 28 02:13:23 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 28 Nov 2006 09:13:23 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>

On 27 Nov, 07:04 pm, foom at fuhm.net wrote:

>The other option is to upgrade wolfwood to debian stable ("sarge")  and then 
>just install svn 1.4 from testing. That might be a good idea  anyhow, since 
>oldstable is, well, old. And unsupported.

It would be good to know, for the purposes of such discussions, who the official admin of these hosts is.  If I knew, I'd ask that person to please upgrade everything to Dapper, thanks to its long updates support cycle and my relatively stable experience with it.  Without knowing who it was and how long it's going to take though, it's hard to make suggestions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061128/f432ced0/attachment.html>

From le.dahut at laposte.net  Tue Nov 28 07:57:01 2006
From: le.dahut at laposte.net (le dahut)
Date: Tue, 28 Nov 2006 15:57:01 +0100
Subject: [Twisted-Python] Perspective Broker
In-Reply-To: <cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>
References: <456AB5E8.7010801@laposte.net>
	<cd8fa6f90611270337v78183db3kab4baa58eb079422@mail.gmail.com>
Message-ID: <456C4E3D.80304@laposte.net>

Thanks, I didn't understand that Callbacks are "chainable" also between 
the different PB actors.

It's a bit difficult to understand but once is done, it's a pleasure to 
use :-) .


christian simms a écrit :
> On 11/27/06, le dahut <le.dahut at laposte.net> wrote:
>> Hello,
>>
>> Using PB, I've setup a system where clients can control other clients in
>> this way :
>>
>> client1 executes "remote_do_something" on server1 with "ip_client2" as
>> argument.
>> Then server1 connects to client2 and executes "remote_smthng" on it.
> 
> I haven't used PB before, but I have used other protocols with
> Deferreds.  Assuming your PB code is OK, you're only missing a couple
> lines related to callbacks, which I'll insert below.
> 
>> code is like this :
>> - client1:
>> """
>> factory = pb.PBClientFactory()
>> reactor.connectTCP(ip_server1, port, factory)
>> d = factory.getRootObject()
>> d.addCallback(lambda object: object.callRemote("do_something", 
>> ip_client2))
>> d.addCallback(client1_call_b)
>> d.addErrback(client1_err_b)
> 
> Please note that above, your client1_call_b function will be called
> with its argument being the result of the remote method call
> "do_something".
> 
>> """
>>
>> - server1:
>> """
>> def remote_do_something(ip):
>>      factory = pb.PBClientFactory()
>>      reactor.connectTCP(ip_client2, port, factory)
>>      d = factory.getRootObject()
>>      d.addCallback(lambda object: object.callRemote("smthng"))
>>      d.addCallback(server1_call_b)
>>      d.addErrback(server1_err_b)
> 
> Above, you need to add a "return d" statement at the very end of your
> function "remote_do_something", or else Twisted won't know that the
> output of the function "remote_do_something" should be the end result
> of your Deferred "d".  Also, your function "server1_call_b" MUST
> return its argument, or else the result will not get passed along.  It
> could look something like this:
> 
> def server1_call_b(out):
>    return out
> 
> The argument to server1_call_b is the result from the
> "object.callRemote('smthng')" statement, and we are simply returning
> it.  In fact, if that's all the function did, you should not even
> define it (or use it in the callback chain) since it's not necessary.
> But if you forgot the return statement then you would get Python's
> default return value from a function, None, instead of the value.
> 
>>
>> """
>>
>> - client2:
>> """
>> def remote_smthng():
>>      <code>
>>      return "Ok, everything's done"
>> """
>>
>> How can client1 get client2's answer ?
>>
>> Thanks
> 
> Hopefully that does it.
> 
> Cheers,
> Christian
> 
> 
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From foom at fuhm.net  Tue Nov 28 22:53:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Nov 2006 00:53:41 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
Message-ID: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>

Current trac status:
more or less working.

The immediate reason trac was hanging repeatedly *this time* is that  
trac's private mirror of the SVN repository was broken (svn info  
file:///$repo was also hanging, even though no other processes had  
the svn database open). svnadmin recover fixed it. So Trac seems to  
be working...for the moment. I've also disabled the daily synch from  
the real svn repo to see if that helps it keep running. I *think* the  
problem will reoccur anyhow, because I think trac/svn is somehow  
(recoverably) corrupting the bdb repo, but it's possible the copying  
process is what corrupting things but with a delayed effect. This  
also doesn't explain all the trac problems, only the one particular  
one that caused trac to be consistently unavailable for most of the  
morning.

In addition, wolfwood is now running Debian Sarge. Seemingly with no  
casualties. Also: old unused services: freshcvs, tmcvs irc bot have  
been shut down. Local install of viewcvs replaced with packaged  
version (slightly newer, too, I guess). Probably sometime in the next  
few days I'll look into upgrading svn.

James



From corydodt+hello at gmail.com  Tue Nov 28 23:57:07 2006
From: corydodt+hello at gmail.com (Cory Dodt)
Date: Tue, 28 Nov 2006 22:57:07 -0800
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <c16a94ff0611282257r5f32567fv1f2e408651800cb1@mail.gmail.com>

Thanks a lot James, I'm knocking on wood that it stays up.

C


On 11/28/06, James Y Knight <foom at fuhm.net> wrote:
>
> Current trac status:
> more or less working.
>
> The immediate reason trac was hanging repeatedly *this time* is that
> trac's private mirror of the SVN repository was broken (svn info
> file:///$repo was also hanging, even though no other processes had
> the svn database open). svnadmin recover fixed it. So Trac seems to
> be working...for the moment. I've also disabled the daily synch from
> the real svn repo to see if that helps it keep running. I *think* the
> problem will reoccur anyhow, because I think trac/svn is somehow
> (recoverably) corrupting the bdb repo, but it's possible the copying
> process is what corrupting things but with a delayed effect. This
> also doesn't explain all the trac problems, only the one particular
> one that caused trac to be consistently unavailable for most of the
> morning.
>
> In addition, wolfwood is now running Debian Sarge. Seemingly with no
> casualties. Also: old unused services: freshcvs, tmcvs irc bot have
> been shut down. Local install of viewcvs replaced with packaged
> version (slightly newer, too, I guess). Probably sometime in the next
> few days I'll look into upgrading svn.
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061128/d0ffb82b/attachment.html>

From hxianping at gmail.com  Wed Nov 29 01:05:42 2006
From: hxianping at gmail.com (Steve Han)
Date: Wed, 29 Nov 2006 16:05:42 +0800
Subject: [Twisted-Python] Why I have not gotten any mail in this list?
Message-ID: <702805a90611290005j3ece61eeu7d6b0103400c47f0@mail.gmail.com>

Anyone help me?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061129/3203953b/attachment.html>

From duncan.mcgreggor at gmail.com  Wed Nov 29 01:18:13 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 29 Nov 2006 01:18:13 -0700
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>
References: <20061128021205.20948.1451287099.divmod.quotient.48219@ohm>
Message-ID: <456D4245.5000306@gmail.com>

Jean-Paul Calderone wrote:

>> I support using foom's /usr/local compiled SVN 1.4 on wolfwood 
>> as-is, and migrating to fsfs. I have used fsfs a bit here, and I'm 
>> confident that it will not lose data.  If we migrate the SVN
>> database, it might actually make a server-wide upgrade to a
>> supported (recent) OS a little easier.
> 
> FWIW, http://subversion.tigris.org/issues/show_bug.cgi?id=2467
> 
> But sure, upgrading to svn 1.4.2 on wolfwood is probably reasonable.

A heads up, in case anyone has missed this:
  http://trac.edgewall.org/wiki/TracSubversion#TracandSubversion1.4

Note the outstanding issues...

d



From glyph at divmod.com  Wed Nov 29 03:08:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Nov 2006 10:08:32 -0000
Subject: [Twisted-Python] trac's reliability
Message-ID: <20061129100832.11053.252026376.divmod.xquotient.754@joule.divmod.com>

On 05:53 am, foom at fuhm.net wrote:
>Current trac status:
>more or less working.

On behalf of everyone using Twisted's trac, thanks a lot for putting some work into this. :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061129/8d41b7fd/attachment.html>

From mwh at python.net  Wed Nov 29 03:14:52 2006
From: mwh at python.net (Michael Hudson)
Date: Wed, 29 Nov 2006 11:14:52 +0100
Subject: [Twisted-Python] Re: trac's reliability
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <87fyc2imoz.fsf@starship.python.net>

James Y Knight <foom at fuhm.net> writes:

> Current trac status:
> more or less working.

Hooray!

> The immediate reason trac was hanging repeatedly *this time* is that
> trac's private mirror of the SVN repository was broken (svn info
> file:///$repo was also hanging, even though no other processes had
> the svn database open). svnadmin recover fixed it. So Trac seems to
> be working...for the moment. I've also disabled the daily synch from
> the real svn repo to see if that helps it keep running. I *think* the
> problem will reoccur anyhow, because I think trac/svn is somehow
> (recoverably) corrupting the bdb repo, but it's possible the copying
> process is what corrupting things but with a delayed effect. This
> also doesn't explain all the trac problems, only the one particular
> one that caused trac to be consistently unavailable for most of the
> morning.

Certainly, the behaviour around this time yesterday was just crazy.
Congrats on getting that much fixed :-)

Cheers,
mwh

-- 
  To summarise the summary of the summary:- people are a problem.
                   -- The Hitch-Hikers Guide to the Galaxy, Episode 12




From markus at bluegap.ch  Wed Nov 29 11:47:45 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Wed, 29 Nov 2006 19:47:45 +0100
Subject: [Twisted-Python] blockingCallFromThread, ticket 1042
Message-ID: <456DD5D1.7030907@bluegap.ch>

Hi,

A long time ago, I've been asking about a blocking callFromThread 
function and have been pointed to ticket 1042 at [1]. What's the state 
on that? Does that have a change of being integrated into twisted?

Regards

Markus

[1]: http://twistedmatrix.com/trac/ticket/1042



From glyph at divmod.com  Wed Nov 29 12:16:44 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Nov 2006 19:16:44 -0000
Subject: [Twisted-Python] blockingCallFromThread, ticket 1042
Message-ID: <20061129191644.11053.2009957853.divmod.xquotient.841@joule.divmod.com>

On 06:47 pm, markus at bluegap.ch wrote:

>A long time ago, I've been asking about a blocking callFromThread function 
>and have been pointed to ticket 1042 at [1]. What's the state on that? Does 
>that have a change of being integrated into twisted?

At the very least, the function there needs tests, documentation, and a use-case for some code that is going to want to call it from within Twisted - and I don't think there is any currently.

There are probably a few things that are painful to do without such a function, but in general this sort of thing is just a recipie for deadlocks and running out of threads in your pool, so I am not inclined to push it forward.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20061129/c70e89be/attachment.html>

From foom at fuhm.net  Wed Nov 29 12:55:07 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Nov 2006 14:55:07 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>
	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
Message-ID: <F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>

On Nov 29, 2006, at 12:53 AM, James Y Knight wrote:
> Current trac status:
> more or less working.

So, two issues. Are there volunteers for following up on these with  
trac developers? I don't much feel like it, and JP says he's tired of  
doing it.

1) Trac just plain doesn't work with BDB. Pounding it with queries  
will reliably cause the process to segfault:

/usr/sbin/ab2 -t 1000 -c10 -n100 http://host/trac/browser/

Segfaults every time. Here's two backtraces. This is fixed by using  
fsfs.

Program terminated with signal 11, Segmentation fault.

#0  0xb6a994d8 in apr_pool_destroy (pool=0x1c1) at apr_pools.c:727
727         while (pool->child)
(gdb) bt
#0  0xb6a994d8 in apr_pool_destroy (pool=0x1c1) at apr_pools.c:727
#1  0xb6a994e9 in apr_pool_destroy (pool=0x8fc1500) at apr_pools.c:728
#2  0xb6c09154 in svn_error_clear (err=0x8c908b0) at subversion/ 
libsvn_subr/error.c:273
#3  0xb6a1a9a8 in svn_fs_bdb__wrap_db (fs=0x85f8a70,
     operation=0xb6a3304f "opening 'nodes' table", db_err=0)
     at subversion/libsvn_fs_base/bdb/bdb-err.c:93
#4  0xb6a23026 in open_databases (fs=0x85f8a70, create=0,
     path=0x85f8570 "/home/trac/svn/Twisted/db", pool=0x85f8270)
     at subversion/libsvn_fs_base/fs.c:559
#5  0xb6a23488 in base_open (fs=0x85f8a70, path=0x8fc1500 "\220\004",  
pool=0x85f8270)
     at subversion/libsvn_fs_base/fs.c:685
#6  0xb6d92a21 in svn_fs_open (fs_p=0x85f8530, path=0x85f8570 "/home/ 
trac/svn/Twisted/db",
     fs_config=0x0, pool=0x85f8270) at subversion/libsvn_fs/fs- 
loader.c:367
#7  0xb697435d in get_repos (repos_p=0xb763757c, path=Variable "path"  
is not available.
)
     at subversion/libsvn_repos/repos.c:1803
#8  0xb681c394 in _wrap_svn_repos_open (self=0x0, args=0x865a7ec)
     at ./subversion/bindings/swig/python/svn_repos.c:2047
#9  0x0805950c in PyObject_Call (func=0xb68f88ec, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#10 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x1c1,  
arg=0x865a7ec, kw=0x0)
     at ../Python/ceval.c:3425
#11 0x080a87ed in builtin_apply (self=0x0, args=0x1c1) at ../Python/ 
bltinmodule.c:100
#12 0x080b6911 in PyEval_EvalFrame (f=0x8aae9a4) at ../Python/ceval.c: 
3558
#13 0x080b716d in PyEval_EvalCodeEx (co=0xb68e77a0,  
globals=0xb683e02c, locals=0x0,
     args=0x89a3fe4, argcount=2, kws=0x89a3fec, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#14 0x080b5619 in PyEval_EvalFrame (f=0x89a3e7c) at ../Python/ceval.c: 
3651
#15 0x080b716d in PyEval_EvalCodeEx (co=0xb6cc6620,  
globals=0xb6cafe84, locals=0x0,
     args=0xb00d55d8, argcount=4, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:2736
#16 0x080fb5fd in function_call (func=0xb684487c, arg=0xb00d55cc,  
kw=0x0)
     at ../Objects/funcobject.c:548
#17 0x0805950c in PyObject_Call (func=0xb684487c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#18 0x0805eac5 in instancemethod_call (func=0xb684487c,  
arg=0xb00d55cc, kw=0x1c1)
     at ../Objects/classobject.c:2447
#19 0x0805950c in PyObject_Call (func=0xb4fd52fc, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#20 0x0808a965 in slot_tp_init (self=0x1c1, args=0x1c1, kwds=0x1c1)
     at ../Objects/typeobject.c:4762
#21 0x0808ca88 in type_call (type=0x84aa764, args=0xb4a654b4, kwds=0x0)
     at ../Objects/typeobject.c:435
#22 0x0805950c in PyObject_Call (func=0x84aa764, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#23 0x080b4af7 in PyEval_EvalFrame (f=0x8d293dc) at ../Python/ceval.c: 
3766
#24 0x080b570c in PyEval_EvalFrame (f=0x8f1c974) at ../Python/ceval.c: 
3640
#25 0x080b570c in PyEval_EvalFrame (f=0x84f9d4c) at ../Python/ceval.c: 
3640
#26 0x080b716d in PyEval_EvalCodeEx (co=0xb7873c60,  
globals=0xb788279c, locals=0x0,
     args=0x9130b10, argcount=2, kws=0x9130b18, kwcount=0,  
defs=0xb78991d8, defcount=1,
     closure=0x0) at ../Python/ceval.c:2736
#27 0x080b5619 in PyEval_EvalFrame (f=0x913098c) at ../Python/ceval.c: 
3651
#28 0x080b570c in PyEval_EvalFrame (f=0x936ac2c) at ../Python/ceval.c: 
3640
#29 0x080b570c in PyEval_EvalFrame (f=0x89d8d44) at ../Python/ceval.c: 
3640
#30 0x080b570c in PyEval_EvalFrame (f=0x9074f5c) at ../Python/ceval.c: 
3640
#31 0x080b570c in PyEval_EvalFrame (f=0x936d434) at ../Python/ceval.c: 
3640
#32 0x080b716d in PyEval_EvalCodeEx (co=0xb7a395e0,  
globals=0xb7991f0c, locals=0x0,
     args=0xb4a314c0, argcount=3, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
---Type <return> to continue, or q <return> to quit---
#33 0x080fb5fd in function_call (func=0xb76e056c, arg=0xb4a314b4,  
kw=0x0)
     at ../Objects/funcobject.c:548
#34 0x0805950c in PyObject_Call (func=0xb76e056c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#35 0x0805eac5 in instancemethod_call (func=0xb76e056c,  
arg=0xb4a314b4, kw=0x1c1)
     at ../Objects/classobject.c:2447
#36 0x0805950c in PyObject_Call (func=0xb4fccb94, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#37 0x0808ac77 in slot_tp_call (self=0x1c1, args=0x1c1, kwds=0x1c1)
     at ../Objects/typeobject.c:4536
#38 0x0805950c in PyObject_Call (func=0xb765eb4c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#39 0x080b4af7 in PyEval_EvalFrame (f=0x8f7f46c) at ../Python/ceval.c: 
3766
#40 0x080b716d in PyEval_EvalCodeEx (co=0xb77e1620,  
globals=0xb77a13e4, locals=0x0,
     args=0xb4f5f898, argcount=1, kws=0x9107388, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#41 0x080fb5fd in function_call (func=0xb76e025c, arg=0xb4f5f88c,  
kw=0xb4df3cec)
     at ../Objects/funcobject.c:548
#42 0x0805950c in PyObject_Call (func=0xb76e025c, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#43 0x080b4c37 in PyEval_EvalFrame (f=0x916f734) at ../Python/ceval.c: 
3835
#44 0x080b716d in PyEval_EvalCodeEx (co=0xb7b0b660,  
globals=0xb7b09b54, locals=0x0,
     args=0x89e41a0, argcount=3, kws=0x913b2d0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#45 0x080fb5fd in function_call (func=0xb7b21b54, arg=0x89e4194,  
kw=0x91ded74)
     at ../Objects/funcobject.c:548
#46 0x0805950c in PyObject_Call (func=0xb7b21b54, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#47 0x080b4c37 in PyEval_EvalFrame (f=0x9199a04) at ../Python/ceval.c: 
3835
---Type <return> to continue, or q <return> to quit---
#48 0x080b716d in PyEval_EvalCodeEx (co=0xb7b0b920,  
globals=0xb7b09b54, locals=0x0,
     args=0x89debc8, argcount=3, kws=0x907ad38, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#49 0x080fb5fd in function_call (func=0xb7b21c34, arg=0x89debbc,  
kw=0x91d1d74)
     at ../Objects/funcobject.c:548
#50 0x0805950c in PyObject_Call (func=0xb7b21c34, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#51 0x080b4c37 in PyEval_EvalFrame (f=0x81dbf84) at ../Python/ceval.c: 
3835
#52 0x080b716d in PyEval_EvalCodeEx (co=0xb76fb560,  
globals=0xb76fd24c, locals=0x0,
     args=0xb7aaad78, argcount=2, kws=0x837dfe8, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#53 0x080fb5fd in function_call (func=0xb77001ec, arg=0xb7aaad6c,  
kw=0xb7b1f79c)
     at ../Objects/funcobject.c:548
#54 0x0805950c in PyObject_Call (func=0xb77001ec, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#55 0x080b4c37 in PyEval_EvalFrame (f=0x8188e74) at ../Python/ceval.c: 
3835
#56 0x080b570c in PyEval_EvalFrame (f=0x81905fc) at ../Python/ceval.c: 
3640
#57 0x080b716d in PyEval_EvalCodeEx (co=0xb7b17ae0,  
globals=0xb7b09cec, locals=0x0,
     args=0xb7662278, argcount=1, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#58 0x080fb5fd in function_call (func=0xb7b1bdf4, arg=0xb766226c,  
kw=0x0)
     at ../Objects/funcobject.c:548
#59 0x0805950c in PyObject_Call (func=0xb7b1bdf4, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#60 0x0805eac5 in instancemethod_call (func=0xb7b1bdf4,  
arg=0xb766226c, kw=0x1c1)
     at ../Objects/classobject.c:2447
#61 0x0805950c in PyObject_Call (func=0xb7847144, arg=0x1c1, kw=0x1c1)
     at ../Objects/abstract.c:1756
#62 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x1c1,  
arg=0xb7e1c02c, kw=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:3425
#63 0x080e003d in t_bootstrap (boot_raw=0x83d9950) at ../Modules/ 
threadmodule.c:434
#64 0xb7fb9361 in start_thread () from /lib/tls/i686/cmov/ 
libpthread.so.0
#65 0xb7f25bde in clone () from /lib/tls/i686/cmov/libc.so.6

#0  0xb5b8114b in svn_error_clear (err=0x72) at subversion/ 
libsvn_subr/error.c:273
273           apr_pool_destroy(err->pool);
(gdb) bt
#0  0xb5b8114b in svn_error_clear (err=0x72) at subversion/ 
libsvn_subr/error.c:273
#1  0xb59929a8 in svn_fs_bdb__wrap_db (fs=0x878fb50,
     operation=0xb59ab04f "opening 'nodes' table", db_err=0)
     at subversion/libsvn_fs_base/bdb/bdb-err.c:93
#2  0xb599b026 in open_databases (fs=0x878fb50, create=0,
     path=0x878f650 "/home/trac/svn/Twisted/db", pool=0x878f350)
     at subversion/libsvn_fs_base/fs.c:559
#3  0xb599b488 in base_open (fs=0x878fb50, path=0x8bccd00 "",  
pool=0x878f350)
     at subversion/libsvn_fs_base/fs.c:685
#4  0xb5d0ba21 in svn_fs_open (fs_p=0x878f610, path=0x878f650 "/home/ 
trac/svn/Twisted/db",
     fs_config=0x0, pool=0x878f350) at subversion/libsvn_fs/fs- 
loader.c:367
#5  0xb58ec35d in get_repos (repos_p=0xb00fa57c, path=Variable "path"  
is not available.
)
     at subversion/libsvn_repos/repos.c:1803
#6  0xb5794394 in _wrap_svn_repos_open (self=0x0, args=0x8b03d0c)
     at ./subversion/bindings/swig/python/svn_repos.c:2047
#7  0x0805950c in PyObject_Call (func=0xb57b558c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#8  0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x72,  
arg=0x8b03d0c, kw=0x0)
     at ../Python/ceval.c:3425
#9  0x080a87ed in builtin_apply (self=0x0, args=0x72) at ../Python/ 
bltinmodule.c:100
#10 0x080b6911 in PyEval_EvalFrame (f=0x8755524) at ../Python/ceval.c: 
3558
#11 0x080b716d in PyEval_EvalCodeEx (co=0xb5862820,  
globals=0xb57b913c, locals=0x0,
     args=0x8777e94, argcount=2, kws=0x8777e9c, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#12 0x080b5619 in PyEval_EvalFrame (f=0x8777d2c) at ../Python/ceval.c: 
3651
#13 0x080b716d in PyEval_EvalCodeEx (co=0xb5c436e0,  
globals=0xb5c2e57c, locals=0x0,
     args=0x8649380, argcount=4, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#14 0x080fb5fd in function_call (func=0xb57c08ec, arg=0x8649374, kw=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Objects/funcobject.c:548
#15 0x0805950c in PyObject_Call (func=0xb57c08ec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#16 0x0805eac5 in instancemethod_call (func=0xb57c08ec,  
arg=0x8649374, kw=0x72)
     at ../Objects/classobject.c:2447
#17 0x0805950c in PyObject_Call (func=0x863052c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#18 0x0808a965 in slot_tp_init (self=0x72, args=0x72, kwds=0x72)
     at ../Objects/typeobject.c:4762
#19 0x0808ca88 in type_call (type=0x84b4594, args=0x8ad9144, kwds=0x0)
     at ../Objects/typeobject.c:435
#20 0x0805950c in PyObject_Call (func=0x84b4594, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#21 0x080b4af7 in PyEval_EvalFrame (f=0x886c41c) at ../Python/ceval.c: 
3766
#22 0x080b570c in PyEval_EvalFrame (f=0x88f695c) at ../Python/ceval.c: 
3640
#23 0x080b570c in PyEval_EvalFrame (f=0x88f4a9c) at ../Python/ceval.c: 
3640
#24 0x080b716d in PyEval_EvalCodeEx (co=0xb77edca0,  
globals=0xb77fc79c, locals=0x0,
     args=0x88f5548, argcount=2, kws=0x88f5550, kwcount=0,  
defs=0xb78121d8, defcount=1,
     closure=0x0) at ../Python/ceval.c:2736
#25 0x080b5619 in PyEval_EvalFrame (f=0x88f53c4) at ../Python/ceval.c: 
3651
#26 0x080b570c in PyEval_EvalFrame (f=0x88f4e8c) at ../Python/ceval.c: 
3640
#27 0x080b570c in PyEval_EvalFrame (f=0x85c49fc) at ../Python/ceval.c: 
3640
#28 0x080b570c in PyEval_EvalFrame (f=0x88f345c) at ../Python/ceval.c: 
3640
#29 0x080b570c in PyEval_EvalFrame (f=0x8bdf084) at ../Python/ceval.c: 
3640
#30 0x080b716d in PyEval_EvalCodeEx (co=0xb79b3620,  
globals=0xb790bf0c, locals=0x0,
     args=0xb12db358, argcount=3, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#31 0x080fb5fd in function_call (func=0xb765a56c, arg=0xb12db34c,  
kw=0x0)
     at ../Objects/funcobject.c:548
---Type <return> to continue, or q <return> to quit---
#32 0x0805950c in PyObject_Call (func=0xb765a56c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#33 0x0805eac5 in instancemethod_call (func=0xb765a56c,  
arg=0xb12db34c, kw=0x72)
     at ../Objects/classobject.c:2447
#34 0x0805950c in PyObject_Call (func=0x8650dec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#35 0x0808ac77 in slot_tp_call (self=0x72, args=0x72, kwds=0x72)
     at ../Objects/typeobject.c:4536
#36 0x0805950c in PyObject_Call (func=0xb75d8b4c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#37 0x080b4af7 in PyEval_EvalFrame (f=0x88f475c) at ../Python/ceval.c: 
3766
#38 0x080b716d in PyEval_EvalCodeEx (co=0xb775b660,  
globals=0xb771b3e4, locals=0x0,
     args=0xaa0b6b18, argcount=1, kws=0x85b0940, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#39 0x080fb5fd in function_call (func=0xb765a25c, arg=0xaa0b6b0c,  
kw=0x8c988ac)
     at ../Objects/funcobject.c:548
#40 0x0805950c in PyObject_Call (func=0xb765a25c, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#41 0x080b4c37 in PyEval_EvalFrame (f=0x898a6b4) at ../Python/ceval.c: 
3835
#42 0x080b716d in PyEval_EvalCodeEx (co=0xb7a856a0,  
globals=0xb7a83b54, locals=0x0,
     args=0x86d6588, argcount=3, kws=0x85896c8, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#43 0x080fb5fd in function_call (func=0xb7a9bb54, arg=0x86d657c,  
kw=0x8c9a35c)
     at ../Objects/funcobject.c:548
#44 0x0805950c in PyObject_Call (func=0xb7a9bb54, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#45 0x080b4c37 in PyEval_EvalFrame (f=0x85dbcfc) at ../Python/ceval.c: 
3835
#46 0x080b716d in PyEval_EvalCodeEx (co=0xb7a85960,  
globals=0xb7a83b54, locals=0x0,
     args=0xaa0c1e20, argcount=3, kws=0x88efb88, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
---Type <return> to continue, or q <return> to quit---
     at ../Python/ceval.c:2736
#47 0x080fb5fd in function_call (func=0xb7a9bc34, arg=0xaa0c1e14,  
kw=0x8c9acec)
     at ../Objects/funcobject.c:548
#48 0x0805950c in PyObject_Call (func=0xb7a9bc34, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#49 0x080b4c37 in PyEval_EvalFrame (f=0x875ec14) at ../Python/ceval.c: 
3835
#50 0x080b716d in PyEval_EvalCodeEx (co=0xb76755a0,  
globals=0xb767724c, locals=0x0,
     args=0x8a1e358, argcount=2, kws=0x86a9a00, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#51 0x080fb5fd in function_call (func=0xb767a1ec, arg=0x8a1e34c,  
kw=0xb7a9979c)
     at ../Objects/funcobject.c:548
#52 0x0805950c in PyObject_Call (func=0xb767a1ec, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#53 0x080b4c37 in PyEval_EvalFrame (f=0x876f884) at ../Python/ceval.c: 
3835
#54 0x080b570c in PyEval_EvalFrame (f=0x829ee2c) at ../Python/ceval.c: 
3640
#55 0x080b716d in PyEval_EvalCodeEx (co=0xb7a91b20,  
globals=0xb7a83cec, locals=0x0,
     args=0x8a48658, argcount=1, kws=0x0, kwcount=0, defs=0x0,  
defcount=0, closure=0x0)
     at ../Python/ceval.c:2736
#56 0x080fb5fd in function_call (func=0xb7a95df4, arg=0x8a4864c, kw=0x0)
     at ../Objects/funcobject.c:548
#57 0x0805950c in PyObject_Call (func=0xb7a95df4, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#58 0x0805eac5 in instancemethod_call (func=0xb7a95df4,  
arg=0x8a4864c, kw=0x72)
     at ../Objects/classobject.c:2447
#59 0x0805950c in PyObject_Call (func=0x8a386bc, arg=0x72, kw=0x72)
     at ../Objects/abstract.c:1756
#60 0x080afdd7 in PyEval_CallObjectWithKeywords (func=0x72,  
arg=0xb7d9602c, kw=0x0)
     at ../Python/ceval.c:3425
#61 0x080e003d in t_bootstrap (boot_raw=0x875e6d8) at ../Modules/ 
threadmodule.c:434
---Type <return> to continue, or q <return> to quit---
#62 0xb7f33361 in start_thread () from /lib/tls/i686/cmov/ 
libpthread.so.0
#63 0xb7e9fbde in clone () from /lib/tls/i686/cmov/libc.so.6



2) Horrible horrible locking (?) issues on the /trac/browser page.  
Hitting it with concurrency > 2 makes it handle about one request  
every 2 seconds, probably database lock contention or something. But  
also, it starts giving error pages like this. This is an traceback  
when trying to generate an error page. Yay.

Traceback (most recent call last):
   File "/home/trac/Projects/trac/trunk/trac/web/api.py", line 382,  
in send_error
     'text/html')
   File "/home/trac/Projects/trac/trunk/trac/web/chrome.py", line  
475, in render_template
     return stream.render(method, doctype=doctype)
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 146,  
in render
     output = u''.join(list(generator))
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
200, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
486, in __call__
     for kind, data, pos in chain(stream, [(None, None, None)]):
   File "/home/trac/Projects/genshi/trunk/genshi/output.py", line  
436, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 207,  
in _ensure
     for event in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/core.py", line 207,  
in _ensure
     for event in stream:
   File "/home/trac/Projects/trac/trunk/trac/web/chrome.py", line  
478, in _strip_accesskeys
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/filters.py", line  
313, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1145, in _match
     content = list(content)
   File "/home/trac/Projects/genshi/trunk/genshi/filters.py", line  
313, in __call__
     for kind, data, pos in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1120, in _match
     for event in stream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
1109, in _strip
     event = stream.next()
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
941, in _eval
     for event in substream:
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
920, in _eval
     ctxt):
   File "/home/trac/Projects/genshi/trunk/genshi/template.py", line  
930, in _eval
     result = data.evaluate(ctxt)
   File "/home/trac/Projects/genshi/trunk/genshi/eval.py", line 101,  
in evaluate
     {'data': data})
   File "/home/trac/Projects/trac/trunk/templates/error.html", line  
36, in <Expression u"get_reporter_id(req)">
     <input type="hidden" name="reporter" value="${get_reporter_id 
(req)}" />
   File "/home/trac/Projects/trac/trunk/trac/util/__init__.py", line  
50, in get_reporter_id
     name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'


James



From lycka at carmensystems.com  Wed Nov 29 16:56:30 2006
From: lycka at carmensystems.com (Magnus Lycka)
Date: Thu, 30 Nov 2006 00:56:30 +0100
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
	<F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>
Message-ID: <456E1E2E.9060800@carmensystems.com>

James Y Knight wrote:
>
> 2) Horrible horrible locking (?) issues on the /trac/browser page. 
> Hitting it with concurrency > 2 makes it handle about one request 
> every 2 seconds, probably database lock contention or something. But 
> also, it starts giving error pages like this. This is an traceback 
> when trying to generate an error page. Yay.
Is this due to sqlite? I haven't looked at the Trac code, and I couldn't 
see it
explicitly in the traceback, but it certainly sounds a bit like an sqlite vs
postgresql  problem, and  it fits the description of the Trac 
developers. The
lock problems in sqlite are typcially related to writes though. Is something
written to the database here? What sqlite version is this? Sqlite 3 has a
better locking mechanism than sqlite 2.

 

-- 
Magnus Lyckå, M.Sc.
Team Leader Verification & Integration
______________________________________
Jeppesen Commercial & Military Aviation
**Making Every Mission Possible**
ph: +46 31 720 63 20 | fax: +46 31 720 81 20 | magnus.lycka at jeppesen.com 
Odinsgatan 9 | SE-411 03 Göteborg, SWEDEN | www.jeppesen.com/carmen




From dominik.margraf at gmail.com  Thu Nov 30 01:09:10 2006
From: dominik.margraf at gmail.com (Dominik Margraf)
Date: Thu, 30 Nov 2006 21:09:10 +1300
Subject: [Twisted-Python] downloading the code of the FIXED lore so that I
	can use it to output multi-chapter lore source to latex
Message-ID: <409337ba0611300009h5851fe41s24105d78b4400405@mail.gmail.com>

I need to process the thinkCSpy ebook lore source to latex urgently,
however there is a bug in the curent stable version which prevents
compiling spanned chapters.

http://twistedmatrix.com/trac/ticket/2134

which is fixed very recently but doesn't yet seem to be merged with
the trunk (I have downloaded the svn trunk and tried its lore, but
still has the same bug)

Can anyone give me (or point to the place where I can download) the
updated file so that I can do my job immediately?

Thanks!

Dominik



From exarkun at divmod.com  Thu Nov 30 05:24:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Nov 2006 07:24:47 -0500
Subject: [Twisted-Python] downloading the code of the FIXED lore so that
	I can use it to output multi-chapter lore source to latex
In-Reply-To: <409337ba0611300009h5851fe41s24105d78b4400405@mail.gmail.com>
Message-ID: <20061130122447.20948.1244424858.divmod.quotient.51742@ohm>

On Thu, 30 Nov 2006 21:09:10 +1300, Dominik Margraf <dominik.margraf at gmail.com> wrote:
>I need to process the thinkCSpy ebook lore source to latex urgently,
>however there is a bug in the curent stable version which prevents
>compiling spanned chapters.
>
>http://twistedmatrix.com/trac/ticket/2134
>
>which is fixed very recently but doesn't yet seem to be merged with
>the trunk (I have downloaded the svn trunk and tried its lore, but
>still has the same bug)

It is fixed in svn trunk.  Are you sure when you used lore after 
downloading svn trunk that it was using the svn trunk code you 
downloaded and not the system install of Twisted?

If this checks out, there may be another similar bug which needs to 
be fixed.  Could you file a ticket with reproduction instructions?

Jean-Paul



From ncesar at lunix.com.ar  Thu Nov 30 13:00:28 2006
From: ncesar at lunix.com.ar (Nicolas D. Cesar)
Date: Thu, 30 Nov 2006 17:00:28 -0300
Subject: [Twisted-Python] Need Exception that will stop ther reactor
	within twistd
In-Reply-To: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>
References: <20061128090748.11053.401770343.divmod.xquotient.8@joule.divmod.com>
Message-ID: <200611301700.29322.ncesar@lunix.com.ar>

my apologies for the delayed answer, i've been very busy latelly.

El Martes, 28 de Noviembre de 2006 06:07, glyph at divmod.com escribió:
> >Actually is type 1, but there are horrible (network) conditions were de
> >application should stop.
>
> No, there aren't.  What happens when I run your application in-process with
> my webserver?  Should the webserver stop simply because your protocol is
> not working?

Well, yes I agree with you: not a webserver. So, I'll shortly describe my 
application.

I have multiple LSTP (Linux Terminal Server Project) servers. All servers are 
(almost) the same, and any of them can serve any client. There are arround 
8-12 servers and 150+ clients. I'm developing a twisted application that 
balances clients requests (by filtering DHCP discover/requests packets. (I 
attached an image, my application is called multiltsp). I'm using ip_queue 
for this.

Each server has a daemon, they syncronize themselves periodically. Every 
daemon knows the connection state of the others, and based on that 
information they create it's own "valid MACs' list".

There is a LDAP somewhere that has all client MACs that are in the group (eg. 
the 150 clients) and from time to time, multiltsp re-reads this list. (I'm 
simplifying much of these details). I'll call this list "ALL-MACS"...
[continued below]

> Just don't call reactor.stop at all unless you are writing top-level
> infrastructure code.  Your application should have some other, more
> structured way of reporting fatal shut-down errors to its run container
> (e.g. runContainer.applicationEncounteredFatal(xxx)), not simply raising
> exceptions and hoping someone is listening.  Unless you give more specifics
> that indicate that your special case is special-er than any other I've seen
> before, I'll stand by this. :)

[continuing with my explanation]
... all multiltsp daemons MUST have the ALL-MACS list identical, in case there 
is a out of sync[1] problem the (incorrect) server must quit and the others 
must handle the clients. 

There are serveral  services involved in this application (the multicast UDP 
protocol, a shell, the ip_queue reader and others),  but a major problem as 
stated above MUST get the application down with some special clean up. 

Glyph, I hope you understand my rustic English in the explanation above. Any 
advice or suggestion please respond this email.

Greetings, 

[1] This process involves a unique serial and many timeouts and a 
posible "FLUX" state, I just made a simple conclusion so we can argue about 
my twistd special need.

-- 
Nicolás D. César <ncesar at lunix.com.ar>
Lunix S.R.L. -[ http://www.lunix.com.ar ]-
GnuPG Public Key: gpg --keyserver wwwkeys.pgp.net --recv-key 0x3606F3E6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Netfilter-en.png
Type: image/png
Size: 25112 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061130/fb5e6e71/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20061130/fb5e6e71/attachment.sig>

From foom at fuhm.net  Thu Nov 30 22:43:50 2006
From: foom at fuhm.net (James Y Knight)
Date: Fri, 1 Dec 2006 00:43:50 -0500
Subject: [Twisted-Python] trac's reliability
In-Reply-To: <456E1E2E.9060800@carmensystems.com>
References: <20061128091323.11053.1010397619.divmod.xquotient.17@joule.divmod.com>	<2102F9B1-C6BC-4542-BEC7-F710BD57E5B9@fuhm.net>
	<F67C7E07-D0D7-430A-A97B-E2D2A05DCE2F@fuhm.net>
	<456E1E2E.9060800@carmensystems.com>
Message-ID: <5F78E9E7-85E1-4017-9CE9-BC808D922D56@fuhm.net>

On Nov 29, 2006, at 6:56 PM, Magnus Lycka wrote:
> James Y Knight wrote:
>>
>> 2) Horrible horrible locking (?) issues on the /trac/browser page.  
>> Hitting it with concurrency > 2 makes it handle about one request  
>> every 2 seconds, probably database lock contention or something.  
>> But also, it starts giving error pages like this. This is an  
>> traceback when trying to generate an error page. Yay.
> Is this due to sqlite? I haven't looked at the Trac code, and I  
> couldn't see it
> explicitly in the traceback, but it certainly sounds a bit like an  
> sqlite vs
> postgresql  problem, and  it fits the description of the Trac  
> developers. The
> lock problems in sqlite are typcially related to writes though. Is  
> something
> written to the database here? What sqlite version is this? Sqlite 3  
> has a
> better locking mechanism than sqlite 2.

The traceback looks like it's from a bug in the error page generator,  
so the real error is obscured. It's using sqlite3. I'm no trac  
expert, so I can't actually answer the rest of your questions.

In other news: the master svn repository has been upgraded to 1.4.2  
fsfs (from debian testing), and thus trac now gets an up-to-date view  
of the repository. (currently synched via rsync every 10 minutes  
because that was most expedient).

So besides being horrendously slow, trac now seems to be in pretty  
good shape.

I think next it'd be nice if someone would install/enable/whatever  
the anti-spam plugin and re-enable editing the wiki for all  
registered users.

James



