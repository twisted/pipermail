From twisted at moshez.org  Mon Dec  2 06:34:31 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Dec 2002 11:34:31 -0000
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
Message-ID: <20021202113431.30978.qmail@green.zadka.com>

I've already talked to z3p in private about this, but this has done
no good. _common is a binding to some more parts of the gmp library 
for Python, which is included in conch for speed-ups. I would like it
to be moved to a different project for Python/gmp bindings (upstream Python,
gmpy.sf.net or a new sf-based or tm.com-based project). If it will be
so moved, I'll do the Debian packaging and upload, and have the conch
packages recommend it. As is, I've currently disabled it in the Debian
build, because integrating it is just too hairy.

The coding standard specifically advises against such behaviour, for good
reasons.

Thanks,
Moshe



From twisted at moshez.org  Mon Dec  2 06:44:56 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Dec 2002 11:44:56 -0000
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
In-Reply-To: <20021202113431.30978.qmail@green.zadka.com>
References: <20021202113431.30978.qmail@green.zadka.com>
Message-ID: <20021202114456.31014.qmail@green.zadka.com>

On 2 Dec 2002, Moshe Zadka <twisted at moshez.org> wrote:

> to be moved to a different project for Python/gmp bindings (upstream Python,
> gmpy.sf.net or a new sf-based or tm.com-based project).

z3p complained about gmpy not compiling out of the box. The following
patch makes it compile:

moshez at pyramid:~/sources/gmpy$ diff -u gmpy.c gmpy.c.fixed
--- gmpy.c      Fri Jan 26 06:32:51 2001
+++ gmpy.c.fixed        Mon Dec  2 05:35:27 2002
@@ -5050,7 +5050,7 @@
         } else {
             PympzObject *resob = Pympz_new();
             if(resob) {
-                mpz_set(resob->z, randstate->seed);
+                mpz_set(resob->z, randstate->_mp_seed);
                 result = (PyObject*)resob;
             }
         }




From radix at twistedmatrix.com  Mon Dec  2 12:07:30 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 2 Dec 2002 12:07:30 -0500
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
In-Reply-To: <20021202113431.30978.qmail@green.zadka.com>
References: <20021202113431.30978.qmail@green.zadka.com>
Message-ID: <20021202170730.GA3951@toshi>

On Mon, Dec 02, 2002 at 11:34:31AM -0000, Moshe Zadka wrote:
> I would like it to be moved to a different project for Python/gmp
> bindings (upstream Python, gmpy.sf.net or a new sf-based or
> tm.com-based project).

YES

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From dave at krondo.com  Mon Dec  2 19:20:26 2002
From: dave at krondo.com (Dave Peticolas)
Date: 02 Dec 2002 16:20:26 -0800
Subject: [Twisted-Python] PATCH: policy test fix for gtk/gtk2
Message-ID: <1038874826.20720.8.camel@oneiros>

The attached patch fixes the policy test for the gtk & gtk2 reactors.
The test results for the other reactors I can run (default, poll, qt)
are still good with this patch.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch
Type: text/x-patch
Size: 2731 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021202/49d7f06c/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021202/49d7f06c/attachment.pgp 

From typo at soniq.net  Mon Dec  2 22:08:01 2002
From: typo at soniq.net (Paul Boehm)
Date: Tue, 3 Dec 2002 04:08:01 +0100
Subject: [Twisted-Python] fixes for web.proxy
Message-ID: <20021203030801.GC4287@soniq.net>

hi,
twisted.web.proxy didn't work for me.

i've included two fixes.. a) makes Proxy a factory which
current twisted can use.

and b) is a neccesary change to deal with pages sending just \n
i dunno how to implemented this best, but proxy or HTTPClient
are unusable if they depend on \r\n being sent.

maybe lineReceiver needs a new mode to accept \r\n AND \n
as delimiters, but removing both?

here are my diffs:

diff -u -r1.9 proxy.py
--- web/proxy.py    15 Nov 2002 20:47:36 -0000  1.9
+++ web/proxy.py    3 Dec 2002 03:05:18 -0000
@@ -27,6 +27,7 @@


 class ProxyClient(http.HTTPClient):
+    delimiter = '\n'

     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -106,9 +107,15 @@
                                s, self)
         reactor.connectTCP(host, port, clientFactory)

-class Proxy(http.HTTPChannel):
-
-    requestFactory = ProxyRequest
+class Proxy(http.HTTPFactory):
+    def buildProtocol(self, addr):
+        """Generate a channel attached to this site.
+        """
+        channel = http.HTTPChannel()
+        channel.requestFactory = ProxyRequest
+        channel.site = self
+        channel.factory = self
+        return channel


 class ReverseProxyRequest(http.Request):
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.63
diff -u -r1.63 http.py
--- protocols/http.py   15 Nov 2002 20:57:58 -0000  1.63
+++ protocols/http.py   3 Dec 2002 03:05:20 -0000
@@ -268,6 +268,7 @@
     length = None
     firstLine = 1
     __buffer = ''
+    delimiter = '\n'

     def sendCommand(self, command, path):
         self.transport.write('%s %s HTTP/1.0\r\n' % (command, path))
@@ -279,6 +280,8 @@
         self.transport.write('\r\n')

     def lineReceived(self, line):
+        if line[-1] == '\r':
+            line = line[0:-1]
         if self.firstLine:
             self.firstLine = 0
             try:




From typo at soniq.net  Tue Dec  3 09:03:04 2002
From: typo at soniq.net (Paul Boehm)
Date: Tue, 3 Dec 2002 15:03:04 +0100
Subject: [Twisted-Python] fixes for web.proxy
In-Reply-To: <20021203030801.GC4287@soniq.net>
References: <20021203030801.GC4287@soniq.net>
Message-ID: <20021203140303.GA7172@soniq.net>

this is a more generic fix, that adds special handling for services
where crlf and lf are interchangeable.

comments, please!

also i'd like to get feedback on proxy maintainership.
if noone disagrees i'll make a plugin for proxy,
and try to polish it up, so that it becomes actually useable.

  paul

Index: protocols/basic.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/basic.py,v
retrieving revision 1.27
diff -u -r1.27 basic.py
--- protocols/basic.py	15 Nov 2002 14:56:18 -0000	1.27
+++ protocols/basic.py	3 Dec 2002 13:57:30 -0000
@@ -147,6 +147,7 @@
     line_mode = 1
     __buffer = ''
     delimiter = '\r\n'
+    crlfhack = 0
     MAX_LENGTH = 16384
 
     def dataReceived(self, data):
@@ -157,7 +158,16 @@
         self.__buffer = self.__buffer+data
         while self.line_mode:
             try:
-                line, self.__buffer = self.__buffer.split(self.delimiter, 1)
+                if self.crlfhack:
+                    delimiter = '\n'
+                else:
+                    delimiter = self.delimiter
+
+                line, self.__buffer = self.__buffer.split(delimiter, 1)
+
+                if self.crlfhack:
+                    line = line.replace('\r', '')
+
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
                     self.transport.loseConnection()
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.63
diff -u -r1.63 http.py
--- protocols/http.py	15 Nov 2002 20:57:58 -0000	1.63
+++ protocols/http.py	3 Dec 2002 13:57:32 -0000
@@ -268,6 +268,8 @@
     length = None
     firstLine = 1
     __buffer = ''
+    delimiter = '\r\n'
+    crlfhack = 1
 
     def sendCommand(self, command, path):
         self.transport.write('%s %s HTTP/1.0\r\n' % (command, path))
Index: web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.9
diff -u -r1.9 proxy.py
--- web/proxy.py	15 Nov 2002 20:47:36 -0000	1.9
+++ web/proxy.py	3 Dec 2002 13:57:32 -0000
@@ -106,9 +106,15 @@
                                s, self)
         reactor.connectTCP(host, port, clientFactory)
 
-class Proxy(http.HTTPChannel):
-
-    requestFactory = ProxyRequest
+class Proxy(http.HTTPFactory):
+    def buildProtocol(self, addr):
+        """Generate a channel attached to this site.
+        """
+        channel = http.HTTPChannel()
+        channel.requestFactory = ProxyRequest
+        channel.site = self
+        channel.factory = self
+        return channel
 
 
 class ReverseProxyRequest(http.Request):



From missive at hotmail.com  Tue Dec  3 09:33:00 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 03 Dec 2002 14:33:00 +0000
Subject: [Twisted-Python] /doc/howto/listings/application/app3.py
Message-ID: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>

Hi;

This patch fixes a typo in one of the example apps.


9:09 >cvs diff -u
? app3.py.original
cvs server: Diffing .
Index: app3.py
===================================================================
RCS file: /cvs/Twisted/doc/howto/listings/application/app3.py,v
retrieving revision 1.1
diff -u -r1.1 app3.py
--- app3.py     8 Oct 2002 06:05:35 -0000       1.1
+++ app3.py     3 Dec 2002 14:21:39 -0000
@@ -12,10 +12,10 @@

def main():
     # namespaces are weird. See the comment in doc/examples/echoserv.py
-    import app1
+    import app3
     from twisted.internet.app import Application
     f = Factory()
-    f.protocol = app1.OneTimeKey
+    f.protocol = app3.OneTimeKey
     f.nextkey = 0
     app = Application("otk")
     app.listenTCP(8123, f)






_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From twisted at moshez.org  Tue Dec  3 11:18:46 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 3 Dec 2002 16:18:46 -0000
Subject: [Twisted-Python] tcs-common
Message-ID: <20021203161846.16733.qmail@green.zadka.com>

I have a Debian package for tcs_common.
Remarks, in decreasing order of importance
* No license (show stopper) 
* No version number (almost show stopper)
* Can something be done about the name, please? it's a silly name
* Not developed sanely via a CVS module.

Thanks.
Moshe Zadka



From z3p at twistedmatrix.com  Tue Dec  3 13:11:35 2002
From: z3p at twistedmatrix.com (z3p at twistedmatrix.com)
Date: Tue, 3 Dec 2002 13:11:35 -0500
Subject: [Twisted-Python] RE: tcs-common
Message-ID: <244640-220021223181135786@M2W097.mail2web.com>

I'll fix 1 and 2 when I get home (LGPL and 1.0).  As for 3, I'm open to
suggestions.  I don't have any plans to set up CVS for it because the
module is for all intents and purposes finshed except for a possible name
change.

-p

Original Message:
-----------------
From: Moshe Zadka twisted at moshez.org
Date: 3 Dec 2002 16:18:46 -0000
To: twisted-python at twistedmatrix.com, z3p at twistedmatrix.com
Subject: tcs-common


I have a Debian package for tcs_common.
Remarks, in decreasing order of importance
* No license (show stopper) 
* No version number (almost show stopper)
* Can something be done about the name, please? it's a silly name
* Not developed sanely via a CVS module.

Thanks.
Moshe Zadka

--------------------------------------------------------------------
mail2web - Check your email from the web at
http://mail2web.com/ .





From twisted at moshez.org  Tue Dec  3 13:23:45 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 3 Dec 2002 18:23:45 -0000
Subject: [Twisted-Python] RE: tcs-common
In-Reply-To: <244640-220021223181135786@M2W097.mail2web.com>
References: <244640-220021223181135786@M2W097.mail2web.com>
Message-ID: <20021203182345.18409.qmail@green.zadka.com>

On Tue, 3 Dec 2002, "z3p at twistedmatrix.com" <z3p at twistedmatrix.com> wrote:

> As for 3, I'm open to suggestions

Here are some, off the top of my head:
tgmp
twnumber
gmpow
twmpz

Any of them would be better than a historical reminder.

> I don't have any plans to set up CVS for it because the
> module is for all intents and purposes finshed except for a possible name
> change
...and adding the debian/ subdirectory
...and fixing bugs
...and finding more gmp bindings which can speed up ssh or other protocols



From dave at krondo.com  Tue Dec  3 18:48:13 2002
From: dave at krondo.com (Dave Peticolas)
Date: 03 Dec 2002 15:48:13 -0800
Subject: [Twisted-Python] PATCH: dns server patch
Message-ID: <1038959293.20714.11.camel@oneiros>

This patch fixes a function call with too many arguments.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch2
Type: text/x-patch
Size: 593 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/810316f4/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/810316f4/attachment.pgp 

From glyph at twistedmatrix.com  Tue Dec  3 20:27:24 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 19:27:24 -0600 (CST)
Subject: [Twisted-Python] PATCH: adbapi.py string escaping
In-Reply-To: <1037871572.3454.12.camel@oneiros>
References: <1037871572.3454.12.camel@oneiros>
Message-ID: <20021203.192724.78728397.glyph@twistedmatrix.com>


On 21 Nov 2002 01:39:32 -0800, Dave Peticolas <dave at krondo.com> wrote:
> The 'safe' function in twisted.enterprise.adbapi escapes single
> quotes, but I know at least Postgres and MySQL also accept backslash
> escapes, which means embedded backslashes need to be escaped as well,
> or they will be removed.

> The attached patch escapes embedded backslashes. I haven't tested
> it on databases other than Postgres or MySQL.

I'm committing this patch, even though it's not really correct, since AFAIK
nobody is using Twisted with a different database :-).

We should probably be doing escaping using DB-API's interpolation facilities to
make sure that it's right for each database (and if it isn't it becomes a
driver problem, not a Twisted problem).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/7172ad2d/attachment.pgp 

From glyph at twistedmatrix.com  Tue Dec  3 20:29:45 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 19:29:45 -0600 (CST)
Subject: [Twisted-Python] gtk2reactor
In-Reply-To: <1037914536.1101.16.camel@oneiros>
References: <1037914536.1101.16.camel@oneiros>
Message-ID: <20021203.192945.126785336.glyph@twistedmatrix.com>


On 21 Nov 2002 13:35:36 -0800, Dave Peticolas <dave at krondo.com> wrote:

> Attached is a reactor for pygtk using Gtk 2.0.  It is basically gtkreactor
> with fixes for api changes from pygtk 1->2.

Committed, thanks.  Any chance you could contribute a basic test as well? :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/a4576836/attachment.pgp 

From glyph at twistedmatrix.com  Tue Dec  3 22:10:12 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 21:10:12 -0600 (CST)
Subject: [Twisted-Python] PATCH: dns server patch
In-Reply-To: <1038959293.20714.11.camel@oneiros>
References: <1038959293.20714.11.camel@oneiros>
Message-ID: <20021203.211012.74731212.glyph@twistedmatrix.com>

On 03 Dec 2002 15:48:13 -0800, Dave Peticolas <dave at krondo.com> wrote:
> This patch fixes a function call with too many arguments.

Thanks, committed as well.  Do you want CVS access?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/7f08aa0c/attachment.pgp 

From z3p at twistedmatrix.com  Wed Dec  4 00:26:57 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 04 Dec 2002 00:26:57 -0500
Subject: [Twisted-Python] RE: tcs-common
In-Reply-To: <20021203182345.18409.qmail@green.zadka.com>
References: <244640-220021223181135786@M2W097.mail2web.com>
Message-ID: <3DED4BD1.2053.21F11E1@localhost>

On 3 Dec 2002 at 18:23, Moshe Zadka wrote:

> On Tue, 3 Dec 2002, "z3p at twistedmatrix.com" <z3p at twistedmatrix.com> wrote:
> 
> > As for 3, I'm open to suggestions
> 
> Here are some, off the top of my head:
> tgmp

This is our winner.  Get it at 
http://www.twistedmatrix.com/users/z3p/files/tgmp-
1.0.tar.gz

> > I don't have any plans to set up CVS for it because the
> > module is for all intents and purposes finshed except for a possible name
> > change

It's in CVS now, but not on a generally network-
accessable computer.  Might move it later.

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From dave at krondo.com  Wed Dec  4 02:37:03 2002
From: dave at krondo.com (Dave Peticolas)
Date: 03 Dec 2002 23:37:03 -0800
Subject: [Twisted-Python] PATCH: gtk2 testing
In-Reply-To: <1038959293.20714.11.camel@oneiros>
References: <1038959293.20714.11.camel@oneiros>
Message-ID: <1038987423.20714.21.camel@oneiros>

This patch adds a 'gtk2' test type argument which uses the gtk2 reactor
for the test suite. Both gtk & gtk2 reactor fail more tests than the 
default reactor. A previous patch I sent fixes the policy test. I will
be looking into the others.

dave

-------------- next part --------------
? dirdbm.rebuild.test
? wovenTestOutput1.html
? wovenTestOutput2.html
? wovenTestOutput3.html
? wovenTestOutput4.html
? wovenTestOutput5.html
? wovenTestOutput6.html
Index: runtests
===================================================================
RCS file: /cvs/Twisted/admin/runtests,v
retrieving revision 1.15
diff -u -r1.15 runtests
--- runtests	24 Sep 2002 17:35:15 -0000	1.15
+++ runtests	4 Dec 2002 07:31:23 -0000
@@ -114,6 +114,7 @@
         else:
             reactorTypes = {
                 'gtk': 'twisted.internet.gtkreactor',
+                'gtk2': 'twisted.internet.gtk2reactor',
                 'default': 'twisted.internet.default',
                 'win32': 'twisted.internet.win32eventreactor',
                 'win': 'twisted.internet.win32eventreactor',
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021203/bbf0fe24/attachment.pgp 

From warner at lothar.com  Wed Dec  4 03:31:18 2002
From: warner at lothar.com (Brian Warner)
Date: 04 Dec 2002 00:31:18 -0800
Subject: [Twisted-Python] /doc/howto/listings/application/app3.py
In-Reply-To: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>
References: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>
Message-ID: <873cpe5go9.fsf@luther.lothar.com>

"Lee Harr" <missive at hotmail.com> writes:
> 
> This patch fixes a typo in one of the example apps.

Applied, thanks.

 -Brian



From naesten at myrealbox.com  Wed Dec  4 11:49:13 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 04 Dec 2002 11:49:13 -0500
Subject: [Twisted-Python] apploader patch, take 2
Message-ID: <3DEE3209.2080605@myrealbox.com>

This time its twisted.persisted.apploader. Please give feedback.
--SamB
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: apploader.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021204/1ea3f880/attachment.txt 

From smurf at noris.de  Wed Dec  4 12:04:13 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 4 Dec 2002 18:04:13 +0100
Subject: [Twisted-Python] apploader patch, take 2
In-Reply-To: <3DEE3209.2080605@myrealbox.com>; from naesten@myrealbox.com on Wed, Dec 04, 2002 at 11:49:13AM -0500
References: <3DEE3209.2080605@myrealbox.com>
Message-ID: <20021204180413.G8059@noris.de>

Hi,

Samuel Bronson:
> This time its twisted.persisted.apploader. Please give feedback.

Perusing this patch:
> --- TwistedClean/twisted/scripts/mktap.py	Mon Sep 30 04:25:20 2002
> +++ Twisted/twisted/scripts/mktap.py	Mon Dec  2 16:34:24 2002
> @@ -39,7 +39,7 @@
>  
>  def loadPlugins(debug = 0, progress = 0):
>      try:
> -        plugins = getPlugIns("tap", debug, progress)
> +        plugins = getPlugIns("tap", debug, progres`s)

Oops! Let me guess -- you forgot to test this.  ;-)

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021204/41f91270/attachment.pgp 

From naesten at myrealbox.com  Wed Dec  4 12:20:24 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 04 Dec 2002 12:20:24 -0500
Subject: [Twisted-Python] apploader patch, take 2
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de>
Message-ID: <3DEE3958.30104@myrealbox.com>


Matthias Urlichs wrote

>Oops! Let me guess -- you forgot to test this.  ;-)
>

Oops, I did!




From smurf at noris.de  Wed Dec  4 13:04:21 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 4 Dec 2002 19:04:21 +0100
Subject: [Twisted-Python] apploader patch, take 2
In-Reply-To: <3DEE3958.30104@myrealbox.com>; from naesten@myrealbox.com on Wed, Dec 04, 2002 at 12:20:24PM -0500
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de> <3DEE3958.30104@myrealbox.com>
Message-ID: <20021204190420.H8059@noris.de>

Hi,

Samuel Bronson:
> Matthias Urlichs wrote
> >Oops! Let me guess -- you forgot to test this.  ;-)
> 
> Oops, I did!
> 
Then you must have hit a few random keys while sending that patch.
The line I quoted isn't valid Python...

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021204/52d1d77b/attachment.pgp 

From bh at intevation.de  Wed Dec  4 13:14:17 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 04 Dec 2002 19:14:17 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
Message-ID: <6qd6ohejnq.fsf@salmakis.intevation.de>

Hi all,

I've been working on a project using twisted for the last few weeks. In
the process I've written quite a few unittests most of which need to run
a twisted reactor either directly as reactor.run or via an Application
instance's run() method.

It's amazing how difficult that is, given that twisted itself has an
extensive set of unittests. Running only one test with a main loop is
simple but running several tests that need to listen and unlisten the
same ports or that have timeouts, etc. seems much more difficult than it
should be.

How difficult would it be to implement at least one of the following
features?

 1. a way to reset a reactor so that e.g. a new unit test could start
    with a clean state. It's OK for me if the unittest itself has to
    take care to do some things automatically such as disconnecting
    connections or unlistenting.

 2. A base class (derived from unittest.TestCase or as a mix-in class)
    for tests that need to run the main loop. There should perhaps be
    two of them, one for plain reactor usage and for test with
    Application instances. 

    Obviously this would require having 1. to a certain extent. However,
    it's OK if the class knew how to achieve a reset in as far as that
    is necessary for test cases. For instance, the base class could
    require that derived classes don't call the reactor directly to
    listen or to add delayed calls and go through some method instead to
    e.g. keep track of the ids returned by reactor.callLater.


AFAICT neither is currently implemented in twisted. There even seems to
be one unit test (test_sister) that's not implemented because of this.

I have effectively implemented no. 2 as part of my unit-tests but only
as much as I needed it so far. It didn't take much code but there are
some tricky things:

 1. After and unlisten when the loop has already been left, call
    reactor.iterate() to make sure the port is properly freed again.
    This was relatively easy to figure out because some twisted test
    cases do this.

 2. Application.run() will only run the reactor mainloop if main.running
    is not true. Unfortunately, main.running is not unset when
    main.shutdown or main.crash is called, so when trying to enter
    application main loops more than once, even for different
    application instances, once has to explicitly unset main.running.

My code will eventually be available under GPL as part of the
'GREAT-ER'[1] software we're developing, but it's not yet in CVS. 

If there's interest in including my test case base class in twisted I
could make it available sooner and under LGPL.


   Bernhard


[1] http://great-er.intevation.de/


-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From m at moshez.org  Wed Dec  4 13:39:26 2002
From: m at moshez.org (Moshe Zadka)
Date: 4 Dec 2002 18:39:26 -0000
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qd6ohejnq.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
Message-ID: <20021204183926.32354.qmail@green.zadka.com>

Hi Bernhard!
Glad to see you're using Twisted.

On 04 Dec 2002, Bernhard Herzog <bh at intevation.de> wrote:

>  1. a way to reset a reactor so that e.g. a new unit test could start
>     with a clean state. It's OK for me if the unittest itself has to
>     take care to do some things automatically such as disconnecting
>     connections or unlistenting.

In general, a way to reset the reactor would be cool.

> If there's interest in including my test case base class in twisted I
> could make it available sooner and under LGPL.

FYI: Twisted patches must also be copyrighted by Glyph.

Thanks,
Moshe



From carball at hush.com  Thu Dec  5 03:53:53 2002
From: carball at hush.com (carball at hush.com)
Date: Thu,  5 Dec 2002 00:53:53 -0800
Subject: [Twisted-Python] ldaptor authorizer / getObjectAtSSL
Message-ID: <200212050853.gB58rs4s039628@mailserver4.hushmail.com>


ok, got a ldap authorizer for pb working, using most of the code that's
in ldaptor-webui ( had to subclass some "auth stuff" in pb, as well
as roll my own pb.connect processing chain to bypass the md5 challenge/auth ) and now i'm passing the password in the clear
during login, which is not a good thing. . but i'm pretty sure
i have to do this. . ( any alternative suggestions? )

so now, i have a situation where SSL'itizing pb is a necessity
and i cant deploy my app without it. .

ppl say they are doing it, i know now that it is not a trivial thing
( got myself the orielly openssl book, to ease my understanding )

so i go to use pb.getObjectAtSSL, and i see that it's not passing
in a ctxFactory to reactor.connectSSL??

so i plug a ssl.ClientContextFactory in and try to run the pbsimple.py
and pbsimpleclient.py ( from docs/examples ) with the same setup as
echoserv_ssl.py and echoclient_ssl.py, to no avail. .

i ran a tcpdump, seems the client starts, the server responds,
the client says something back, and that's it. . the first deferred never returns, i do a ctrl-c and it runs the errback with a 'connection lost' failure. .

--------------------------------

with all that out of the way, my questions:

has anyone written pb/ssl code that works?

what are the hurdles that must be cleared in order to get
tricky twisted protocols ( in this case i'm talking about
pb and ldaptor ) to work through SSL?

------------------------
thank you
car 



Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From radix at twistedmatrix.com  Thu Dec  5 13:10:47 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 5 Dec 2002 13:10:47 -0500
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qd6ohejnq.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
Message-ID: <20021205181047.GA12298@Radii>

On Wed, Dec 04, 2002 at 07:14:17PM +0100, Bernhard Herzog wrote:
> My code will eventually be available under GPL as part of the
> 'GREAT-ER'[1] software we're developing, but it's not yet in CVS. 
> 
> If there's interest in including my test case base class in twisted I
> could make it available sooner and under LGPL.

We'd *really* appreciate such a thing. A lot of the existing tests are so ugly
that it's hard to extend them right now, and something like this would make it
a lot easier to clean all of these up.

Also, as moshez said, Glyph needs the copyright on contributions, but you can
still retain your own copyright on it.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From ab at pobox.com  Thu Dec  5 12:26:44 2002
From: ab at pobox.com (Amir Bakhtiar)
Date: Thu, 5 Dec 2002 12:26:44 -0500
Subject: [Twisted-Python] (no subject)
Message-ID: <014701c29c83$7bfd1e70$877ba8c0@OldDell>

confirm 927740
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021205/353abfd5/attachment.htm 

From brian64007 at bellsouth.net  Fri Dec  6 14:54:32 2002
From: brian64007 at bellsouth.net (Brian Kaplan)
Date: Fri, 06 Dec 2002 14:54:32 -0500
Subject: [Twisted-Python] twisted.words question
Message-ID: <62MH9XTIHZYXVMHB0NKOMWU5XTC7YT.3df10078@toni>

Not to be rude,
Definitely not to intrude,
But why in the heck,
Is irc_LIST a rejec',
What security hole,
Does it actually hold,
What security hole does it actually mold?
-----------------------------------------------------------------------
Brian Kaplan
http://brios.cprogrammer.org

 





From lordvan at lordvan.com  Fri Dec  6 15:26:32 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Fri, 6 Dec 2002 21:26:32 +0100 (CET)
Subject: [Twisted-Python] fzZzy: patch for t/web/woven/template.py
Message-ID: <65406.62.47.64.183.1039206392.squirrel@mail-at.net>

Hi!

cuz i needed it i fixed that bug with DOMTemplate stuff not accepting
self.template="some string"

maybe there should be checked too if templateFile&Dir are specified(and
should be used then .. but that's your choice ;)

greetings, LordVan


--- /usr/portage/distfiles/cvs-src/Twisted/twisted/web/woven/template.py  
    2
002-11-25 08:42:55.000000000 +0100
+++ /usr/lib/python2.2/site-packages/twisted/web/woven/template.py     
2002-12-
06 21:20:57.000000000 +0100
@@ -188,7 +188,7 @@
         """
         Resource.__init__(self)
         if templateFile:
-            self.templateFile = templateFile
+          self.templateFile = templateFile

         self.outstandingCallbacks = 0
         self.failed = 0
@@ -225,6 +225,8 @@
         as the template. The first time the template is used it is cached
         for speed.
         """
+        if self.template:
+          return microdom.parseString(self.template)
         if not self.templateDirectory:
             mod = sys.modules[self.__module__]
             if hasattr(mod, '__file__'):


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From naesten at myrealbox.com  Fri Dec  6 19:08:05 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Fri, 06 Dec 2002 19:08:05 -0500
Subject: [Twisted-Python] apploader patch, take 2
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de> <3DEE3958.30104@myrealbox.com> <20021204190420.H8059@noris.de>
Message-ID: <3DF13BE5.4070605@myrealbox.com>

>
>
>>>Oops! Let me guess -- you forgot to test this.  ;-)
>>>      
>>>
>>Oops, I did!
>>
>>    
>>
>Then you must have hit a few random keys while sending that patch.
>The line I quoted isn't valid Python...
>
No, I meant oops, I did forget. Anyway I think its okay if you forget
about that hunk.




From cdodt at fcoe.k12.ca.us  Fri Dec  6 13:58:18 2002
From: cdodt at fcoe.k12.ca.us (Cory Dodt)
Date: Fri, 6 Dec 2002 10:58:18 -0800
Subject: [Twisted-Python] Long patch: Win32 Shortcuts
Message-ID: <000d01c29d59$70d80290$e301340a@cyberhigh.fcoe.k12.ca.us>

Description
-----------
This patch establishes the beginning stages of creating shortcut Icons
on Win32.  It uses a new feature in distutils 1.03(CVS) which allows
post-installation code to run by specifying --install-script on the
command line.

The patch is fully backward compatible with distutils 1.02 if you don't
want the new features.

Instructions
------------
1. Apply the patch.
2. Get and install CVS distutils.
3. python setup.py build --compiler=(mingw|cygwin)
(It helps if you have python22/libs/python22.a, so you can get a
complete build.)
4. python setup.py bdist_wininst --install-script=twisted-post-install

Will this work if you're building on Unix? I don't know.


Functionality
-------------
The installer creates a folder under Start Menu>Programs>Twisted
{version} for all users (so the installer needs admin privileges to run,
but this is pretty much the norm for Windows people).

The first icon in that folder launches a command prompt with an
environment set such that twisted scripts can be run from the command
line without tinkering with paths, pathext's, etc.

An uninstall icon is also added.

Next Steps
----------
* icons for the tk* scripts can be added (once those work in Windows)
* script to turn create icons from taps should also be pretty easy
* doc icon should be trivial to add

Another script to turn a tap into a service is also well within reason
(although not directly related to this effort).

Known Bugs
----------
The shortcuts are not removed when Twisted is uninstalled from
Add/Remove Programs.  The post-install script also gets run
post-uninstallation so, in theory, twisted-post-install could detect
whether installation or uninstallation was taking place and decide
whether to add or remove icons on that basis.  In practice, the only way
to detect this is to see if the icons are already there, and this method
will create havoc if you're installing over an existing installation.

The PyShortcut class in t.scripts.postinstall should have a home
somewhere else. Any suggestions on where to put it?

Patch:
_______ snip _______
diff -x '*CVS*' -Nabur Twisted/setup.py Twisted-win/setup.py
--- Twisted/setup.py	2002-12-04 23:59:26.000000000 -0800
+++ Twisted-win/setup.py	2002-12-06 10:15:39.000000000 -0800
@@ -223,6 +223,7 @@
         'bin/coil', 'bin/tapconvert', 'bin/websetroot',
         'bin/generatelore', 'bin/html2latex', 'bin/hlint',
         'bin/tkmktap', 'bin/conch',
+        'twisted-post-install'
     ],
     'cmdclass': {
         'install_scripts': install_scripts_twisted,
@@ -239,7 +240,8 @@
 
 imPath = os.path.join('twisted', 'im')
 setup_args['data_files'] = [(imPath, [os.path.join(imPath,
'instancemessenger.glade')]),
-                            ('twisted', [os.path.join('twisted',
'plugins.tml')])]
+                            ('twisted', [os.path.join('twisted',
'plugins.tml')]),
+                            ('twisted', [os.path.join('twisted',
'twistenv.bat')])]
 
 # always define WIN32 under Windows
 if os.name == 'nt':
diff -x '*CVS*' -Nabur Twisted/twisted/scripts/postinstall.py
Twisted-win/twisted/scripts/postinstall.py
--- Twisted/twisted/scripts/postinstall.py	1969-12-31
16:00:00.000000000 -0800
+++ Twisted-win/twisted/scripts/postinstall.py	2002-12-06
10:53:01.000000000 -0800
@@ -0,0 +1,111 @@
+import sys
+import os.path
+from distutils import sysconfig
+import twisted.copyright
+from twisted.python.runtime import platform
+import win32api
+import win32con
+
+from win32com.shell import shell
+import pythoncom, os, sys
+
+class PyShortcut: # this definitely belongs somewhere else
+  def __init__(self, 
+               path=None,
+               arguments=None, 
+               description=None,
+               workingdir=None):
+    self._base = pythoncom.CoCreateInstance(
+      shell.CLSID_ShellLink, None,
+      pythoncom.CLSCTX_INPROC_SERVER, shell.IID_IShellLink
+    )
+    data = map(None, 
+               [path, arguments, description, workingdir], 
+               ("SetPath", "SetArguments", "SetDescription",
"SetWorkingDirectory") )
+    for value, function in data:
+      if value and function:
+        # call function on each non-null value
+        getattr(self, function)(value)
+
+  def load( self, filename ):
+    # Get an IPersist interface
+    # which allows save/restore of object to/from files
+    self._base.QueryInterface( pythoncom.IID_IPersistFile ).Load(
filename )
+  def save( self, filename ):
+    self._base.QueryInterface( pythoncom.IID_IPersistFile ).Save(
filename,
+0 )
+  def __getattr__( self, name ):
+    if name != "_base":
+      return getattr( self._base, name )
+
+
+def getProgramsMenuPath():
+  """getStartMenuPath() -> String|None
+  Return the filesystem location of the common Start Menu.
+  """
+  if not platform.isWinNT:
+    return "C:\\Windows\\Start Menu\\Programs"
+  hShellFolders=win32api.RegOpenKeyEx(win32con.HKEY_LOCAL_MACHINE,
+      'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell
Folders',
+                                      0, 
+                                      win32con.KEY_READ)
+  common_start_menu=win32api.RegQueryValueEx(hShellFolders, 'Common
Start Menu')[0]
+  return os.path.join(common_start_menu, "Programs")
+
+def getBatFilename():
+  """getBatFilename() -> String|None
+  Return the location of the environment setup script.
+  """
+  python_dir=sysconfig.get_config_var("prefix")
+  return os.path.join(python_dir,
+                      'lib', 'site-packages', 'twisted',
'twistenv.bat')
+
+def run():
+    if platform.type != "win32":
+      pass
+    else:
+      print "Installing environment script...",
+      scripts_dir=os.path.join(sysconfig.get_config_var("prefix"),
"scripts")
+      # FIXME - this list needs some work
+      twisted_scripts=" ".join(["twistd", "mktap", "im",
"generatelore",
+                                "hlint", "manhole", "t-im",
"tapconvert",
+                                "html2latex"])
+      batch_script="""@echo off
+set PATHEXT=%%PATHEXT%%;.py
+set PATH=%(scripts_dir)s;%%PATH%%
+set PATH
+echo -:- -:- -:- -:- -:--:- -:- -:- -:- -:--:- -:- -:- -:- -:-
+echo Commands available in twisted: %(twisted_scripts)s
+echo -:- -:- -:- -:- -:--:- -:- -:- -:- -:--:- -:- -:- -:- -:-
+""" % locals()
+      bat_location=getBatFilename()
+      bat_file=open(bat_location, 'w')
+      bat_file.write(batch_script)
+      bat_file.close()
+
+      print "Done."
+      print 'Installing Icons for Twisted...',
+      sys.stdout.flush()
+      menu_path=os.path.join(getProgramsMenuPath(),
+                             "Twisted %s" %twisted.copyright.version)
+      try:
+        os.mkdir(menu_path)
+      except OSError:
+        pass
+
+      shortcut=PyShortcut(os.getenv("ComSpec"),
+                          "/k %s" % bat_location,
+                          workingdir="C:\\")
+      shortcut.save(os.path.join(menu_path, "Twisted Command
Prompt.lnk"))
+      python_dir=sysconfig.get_config_var("prefix")
+      remove_exe=os.path.join(python_dir, "RemoveTwisted.exe")
+      remove_log=os.path.join(python_dir, "Twisted-wininst.log")
+      shortcut=PyShortcut(remove_exe, '-u "%s"' % remove_log)
+      shortcut.save(os.path.join(menu_path, "Uninstall Twisted.lnk"))
+
+      print "Done."
+      print "Post-install successful!"
+
+if __name__=='__main__':
+  run()
+
diff -x '*CVS*' -Nabur Twisted/twisted/twistenv.bat
Twisted-win/twisted/twistenv.bat
--- Twisted/twisted/twistenv.bat	1969-12-31 16:00:00.000000000
-0800
+++ Twisted-win/twisted/twistenv.bat	2002-12-03 17:27:40.000000000
-0800
@@ -0,0 +1,2 @@
+ at echo Twisted was not correctly installed! +pause diff -x '*CVS*'
-Nabur Twisted/twisted-post-install Twisted-win/twisted-post-install
--- Twisted/twisted-post-install	1969-12-31 16:00:00.000000000
-0800
+++ Twisted-win/twisted-post-install	2002-12-04 07:41:12.000000000
-0800
@@ -0,0 +1,29 @@
+#!/usr/bin/env python
+
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General
Public
+# License as published by the Free Software Foundation.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
USA
+
+### Twisted Preamble
+# This makes sure that users don't have to set up their environment
+# specially in order to run these programs from bin/.
+import sys, os, string
+if string.find(os.path.abspath(sys.argv[0]), os.sep+'Twisted') != -1:
+    sys.path.insert(0,
os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]), os.pardir,
os.pardir)))
+sys.path.insert(0, os.curdir)
+### end of preamble
+
+from twisted.scripts import postinstall
+postinstall.run()




From carball at hush.com  Sat Dec  7 03:40:55 2002
From: carball at hush.com (carball at hush.com)
Date: Sat,  7 Dec 2002 00:40:55 -0800
Subject: [Twisted-Python] cacheable.stoppedObserving not being called on client disconnect?
Message-ID: <200212070840.gB78et0l086352@mailserver3.hushmail.com>

arg, cacheable.stoppedObserving is not being called on
client disconnect for me. .

just wondering if anyone else has seen similar problems or
if it's something incorrect on my end. .

--------------------

in regards to my earlier question on ssl, i've decided to
use stunnel until i become savvy enough with twisted to hack
it out myself. .

-------------------

thank you
car



Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From theller at python.net  Mon Dec  9 03:11:56 2002
From: theller at python.net (Thomas Heller)
Date: 09 Dec 2002 09:11:56 +0100
Subject: [Twisted-Python] Re: Long patch: Win32 Shortcuts
References: <000d01c29d59$70d80290$e301340a@cyberhigh.fcoe.k12.ca.us>
Message-ID: <r8crbohf.fsf@python.net>

"Cory Dodt" <cdodt at fcoe.k12.ca.us> writes:

> Description
> -----------
> This patch establishes the beginning stages of creating shortcut Icons
> on Win32.  It uses a new feature in distutils 1.03(CVS) which allows
> post-installation code to run by specifying --install-script on the
> command line.
[...]
> Known Bugs
> ----------
> The shortcuts are not removed when Twisted is uninstalled from
> Add/Remove Programs.  The post-install script also gets run
> post-uninstallation so, in theory, twisted-post-install could detect
> whether installation or uninstallation was taking place and decide
> whether to add or remove icons on that basis.  In practice, the only way
> to detect this is to see if the icons are already there, and this method
> will create havoc if you're installing over an existing installation.

Cory,

I really should write up some docs for the postinstall command on windows.
Here is some info which should probably solve some of your problems:

The postinstall script is run witt sys.argv[1] set to '-install' or
'-remove' depending on what is done, so there is no guesswork needed.

The easiest way to make sure files or directories are removed at
uninstallation is to register them with the installation log file,
then they will automatically be removed.  This can be done by calling
the file_created(path) or directory_created(path) functions. These
functions are available when bdist_wininst runs the postinstall script.

Thomas





From corydodt at yahoo.com  Mon Dec  9 12:57:00 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 9 Dec 2002 09:57:00 -0800 (PST)
Subject: [Twisted-Python] Updated icons patch (as attachment)
In-Reply-To: <20021209123407.22931.58904.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20021209175700.23633.qmail@web10006.mail.yahoo.com>

> From: Thomas Heller <theller at python.net>
>
> Here is some info which should probably solve some of your problems:
> 
> The postinstall script is run witt sys.argv[1] set to '-install' or
> '-remove' depending on what is done, so there is no guesswork needed.
> 
> The easiest way to make sure files or directories are removed at
> uninstallation is to register them with the installation log file,
> then they will automatically be removed.  This can be done by calling
> the file_created(path) or directory_created(path) functions. These
> functions are available when bdist_wininst runs the postinstall script.
> 
> Thomas

Yes! Those tips solved my problems. :-)  Thanks a million Thomas.

I have updated the patch; icons now get removed when Twisted is
uninstalled.  I am attaching (not pasting) it so that long lines don't wrap.

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: win-patch-20021209.tar.gz
Type: application/x-gzip
Size: 5230 bytes
Desc: win-patch-20021209.tar.gz
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021209/eeb1959f/attachment.bin 

From typo at soniq.net  Mon Dec  9 12:16:25 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 9 Dec 2002 18:16:25 +0100
Subject: [Twisted-Python] internet.stdio
Message-ID: <20021209171625.GA4622@soniq.net>

hi,

i'm having a little trouble with twisted.internet.stdio:
because stdio.StandardIO does fdesc.setNonBlocking(self.fileno())
writes to stdout fail with EAGAIN.

possible fixes:
 make stdio blocking, maybe wrapped with a select and retry attempts.

 catch IOError/EAGAIN and retry a little later

thanks,
  paul



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Dec  9 15:29:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 09 Dec 2002 15:29:29 -0500
Subject: [Twisted-Python] adbapi.operationDone
Message-ID: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>

Twisted Gurus,

Yet another sophomoric question :^) ...

The only way I've come up with to pass in a value to 
adbapi.Augmentation.operationDone(done) is as follows:

class MyAug(Augmentation):
    def addThingy(self, whatever):
        args = munge(whatever) # make some sql, etc.
        out = self.runOperation(*args)
        out.addCallback(lambda x: self.operationDone('addThingy'))
        out.addErrback(self.operationError)
...

This works, but is there a more orthodox(/elegant) way?  I've 
tried many permutations of using callbackArgs, without success.

BTW, thanks for all the new twisted stuff ... I'm just starting 
to use lore ... very cool!  

Cheers,
-- Steve.



From andrew-twisted at puzzling.org  Mon Dec  9 17:33:37 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Dec 2002 09:33:37 +1100
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021209223337.GB3867@frobozz.local>

On Mon, Dec 09, 2002 at 03:29:29PM -0500, Steve Waterbury wrote:
> Twisted Gurus,
> 
> Yet another sophomoric question :^) ...
> 
> The only way I've come up with to pass in a value to 
> adbapi.Augmentation.operationDone(done) is as follows:
> 
> class MyAug(Augmentation):
>     def addThingy(self, whatever):
>         args = munge(whatever) # make some sql, etc.
>         out = self.runOperation(*args)
>         out.addCallback(lambda x: self.operationDone('addThingy'))
>         out.addErrback(self.operationError)
> ...
> 
> This works, but is there a more orthodox(/elegant) way?  I've 
> tried many permutations of using callbackArgs, without success.

What about:
   out.addCallback(self.operationDone)
?

The idea of course is that you subclass operationDone to be whatever you
want.  You're also free to ignore it; it's a convenience function.

I probably should update the "Introduction to Twisted Enterprise" doc to
make this clearer :)

> BTW, thanks for all the new twisted stuff ... I'm just starting 
> to use lore ... very cool!  

Thanks! :)

Lore's quite new though, so if you've got any feedback Moshe and I would
love to hear it.

-Andrew.




From bob at redivi.com  Mon Dec  9 17:48:56 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 9 Dec 2002 17:48:56 -0500
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
Message-ID: <65D8CAC4-0BC8-11D7-A1DC-0003938210D6@redivi.com>

On Monday, Dec 9, 2002, at 15:29 America/New_York, Steve Waterbury 
wrote:

> Twisted Gurus,
>
> Yet another sophomoric question :^) ...
>
> The only way I've come up with to pass in a value to
> adbapi.Augmentation.operationDone(done) is as follows:
>

You probably don't want to use self.operationDone() .. it's the default 
callback, and it sounds like you're trying to do more work than you 
have to (supposing you have more than one operation that your 
augmentation can do).  Why don't you do:

class MyAug(Augmentation):
   def addThingy(self, whatever):
     ...
     out.addCallback(self.addThingyDone)

   def addThingyDone(self):  # you might need to do def 
addThingyDone(self, noresult), I think the callback on the defer might 
throw an arg there
     .. do what you need to do

-bob




From corydodt at yahoo.com  Mon Dec  9 18:08:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 9 Dec 2002 15:08:08 -0800 (PST)
Subject: [Twisted-Python] Revised winicons patch
Message-ID: <20021209230808.23941.qmail@web10007.mail.yahoo.com>

Changes from last time:
- Win9x works


Where:
- http://twistedmatrix.com/users/moonfallen/winicons-20021209-2.tar.gz


Instructions:
- CVS distutils installed
- Untar over CVS Twisted
- libpython22.a in c:\python22\libs
C:\Twisted>python setup.py build --compiler=mingw32
C:\Twisted>python setup.py bdist_wininst
--install-script=twisted-post-install.py
C:\Twisted>dist\Twisted*.exe
- Observe the pretty icons.  Are they not magnificent?

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Dec  9 23:16:10 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 09 Dec 2002 23:16:10 -0500
Subject: [Twisted-Python] adbapi.operationDone
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov> <20021209223337.GB3867@frobozz.local>
Message-ID: <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>

Andrew Bennetts wrote:
> 
> On Mon, Dec 09, 2002 at 03:29:29PM -0500, Steve Waterbury wrote:
> > The only way I've come up with to pass in a value to
> > adbapi.Augmentation.operationDone(done) is as follows:
> > [ lambda folderol omitted ... ]
> 
> What about:
>    out.addCallback(self.operationDone)
> ?
> 
> The idea of course is that you subclass operationDone to be whatever you
> want.  You're also free to ignore it; it's a convenience function.

Ah, yes, I knew it would be something simple -- thanks Andrew 
(and Bob).  

> I probably should update the "Introduction to Twisted Enterprise" doc to
> make this clearer :)

Actually, you might want to start with the doc string for 
operationDone, which says:

        """Default callback for database operation success."""

I'd suggest something like:

        """Template for [or "example of"] callback indicating 
           operation success -- subclass as desired."""

I think I would have got the idea if it had said that.  
(It isn't really what I would call a default because it isn't 
called by default ... one has to explicitly call it, which, 
as you point out, isn't the intent ... kind of a nit, but 
enough to confuse a literalist such as myself ... ;^)  

I try to adhere as closely as possible to what I think is 
the design intent of the Twisted developers (since it tends to 
make life easier in the long run ;^), so doc string hints about 
subclassing, etc., are much appreciated -- as are the Twisted 
docs, of course, which are continuously improving -- thanks!  

> > BTW, thanks for all the new twisted stuff ... I'm just starting
> > to use lore ... very cool!
> 
> Lore's quite new though, so if you've got any feedback Moshe and I would
> love to hear it.

Okay.  I'm setting it up for our application docs, so I should 
have some comments soon.  (I had been using LyX, which is pretty 
nice, but it's even nicer to have better integrated, all-Python 
solution. ;^)  

BTW, has anyone here checked out Leo? ... seems interesting 
and might be integrable with lore ... so many documentation 
technologies, so little time ... 

Cheers,
-- Steve.



From andrew-twisted at puzzling.org  Mon Dec  9 23:59:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Dec 2002 15:59:55 +1100
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov> <20021209223337.GB3867@frobozz.local> <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021210045955.GB4014@frobozz.local>

On Mon, Dec 09, 2002 at 11:16:10PM -0500, Steve Waterbury wrote:
> Andrew Bennetts wrote:
> > 
> > I probably should update the "Introduction to Twisted Enterprise" doc to
> > make this clearer :)
> 
> Actually, you might want to start with the doc string for 
> operationDone, which says:
> 
>         """Default callback for database operation success."""
> 
> I'd suggest something like:
> 
>         """Template for [or "example of"] callback indicating 
>            operation success -- subclass as desired."""

I've decided to go with:
        """Example callback for database operation success.

        Override this, and/or define your own callbacks.
        """

That's now in CVS.

> I think I would have got the idea if it had said that.  
> (It isn't really what I would call a default because it isn't 
> called by default ... one has to explicitly call it, which, 
> as you point out, isn't the intent ... kind of a nit, but 
> enough to confuse a literalist such as myself ... ;^)  

Yeah, it was confusing, and needed to be fixed.

> I try to adhere as closely as possible to what I think is 
> the design intent of the Twisted developers (since it tends to 
> make life easier in the long run ;^), so doc string hints about 
> subclassing, etc., are much appreciated -- as are the Twisted 
> docs, of course, which are continuously improving -- thanks!  

The docs should always try to encourage "best practice" use of the code;
which means using the appropriate idioms in examples, and so on. 

Let us know if you find any other problems like this :)

> BTW, has anyone here checked out Leo? ... seems interesting 
> and might be integrable with lore ... so many documentation 
> technologies, so little time ... 

Leo is on my list of "things I'll look at when I have some spare time" ;)

-Andrew.




From twisted at itamarst.org  Tue Dec 10 08:26:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Dec 2002 08:26:05 -0500
Subject: [Twisted-Python] Fw: can you forward this
Message-ID: <20021210082605.1e98ae78.twisted@itamarst.org>

Laura is having routing issues, so she asked me to forward this:

-----------------------------------------------------------------------
Date: Tue, 10 Dec 2002 09:37:26 +0100
From: Laura Creighton <lac at strakt.com>
Message-Id: <200212100837.gBA8bQHO002296 at ratthing-b246.strakt.com>
To: twisted-python at twistedmatrix.com
Subject: Strakt's Python Success Story for the Upcoming O'Reilly Book

is about finished.  It contains this paragraph:

Our subsystems communicate securely, thanks to PyOpenSSL, and use
asynchronous architectures based on Twisted-Matrix 
(http://www.twistedmatrix.com) to achieve high scalability and
responsiveness.

1.  Does Twisted Matrix have or not have a hyphen?
2.  Would you like us to say something else as well?

Laura Creighton

(for details about Python Success Stories see: 
http://www.pythonology.org/successguide

A second volume is planned.  It is never too late to have a Python
success story)

Thank you all once again for Twisted.


- --gBACwvFm026322.1039525177/theraft.strakt.com--

------- End of Forwarded Message



From m at moshez.org  Tue Dec 10 10:04:08 2002
From: m at moshez.org (Moshe Zadka)
Date: 10 Dec 2002 15:04:08 -0000
Subject: [Twisted-Python] Fw: can you forward this
In-Reply-To: <20021210082605.1e98ae78.twisted@itamarst.org>
References: <20021210082605.1e98ae78.twisted@itamarst.org>
Message-ID: <20021210150408.19145.qmail@green.zadka.com>

On Tue, 10 Dec 2002, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> Our subsystems communicate securely, thanks to PyOpenSSL, and use
> asynchronous architectures based on Twisted-Matrix 
> (http://www.twistedmatrix.com) to achieve high scalability and
> responsiveness.
s/-Matrix//

The framework is simply called "Twisted"
 



From missive at hotmail.com  Tue Dec 10 10:59:15 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 10 Dec 2002 15:59:15 +0000
Subject: [Twisted-Python] /doc/index.html and /documents/
Message-ID: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>

Hi;

I am trying to figure out the relationship between /doc in the
cvs repository and /documents on the website. Are these in sync?

Also: It would be handy if there were an index.html in the /doc
directory which (at least minimally) pointed to the website.
(I know you can get this from "python setup.py --url" but I did
not know that until I started working on distributing my own
applications... before I would have just looked in /doc)

Thanks.

Lee Harr
missive at hotmail.com




_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From andrew-twisted at puzzling.org  Tue Dec 10 19:05:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Dec 2002 11:05:49 +1100
Subject: [Twisted-Python] /doc/index.html and /documents/
In-Reply-To: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>
References: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>
Message-ID: <20021211000549.GA6950@frobozz.local>

On Tue, Dec 10, 2002 at 03:59:15PM +0000, Lee Harr wrote:
> Hi;
> 
> I am trying to figure out the relationship between /doc in the
> cvs repository and /documents on the website. Are these in sync?

The documentation on the website is in sync with the docs from the most
recent Twisted release.

-Andrew.




From lac at strakt.com  Tue Dec 10 03:37:26 2002
From: lac at strakt.com (Laura Creighton)
Date: Tue, 10 Dec 2002 09:37:26 +0100
Subject: [Twisted-Python] Strakt's Python Success Story for the Upcoming O'Reilly Book
Message-ID: <200212100837.gBA8bQHO002296@ratthing-b246.strakt.com>

is about finished.  It contains this paragraph:

Our subsystems communicate securely, thanks to PyOpenSSL, and use
asynchronous architectures based on Twisted-Matrix 
(http://www.twistedmatrix.com) to achieve high scalability and responsiveness.

1.  Does Twisted Matrix have or not have a hyphen?
2.  Would you like us to say something else as well?

Laura Creighton

(for details about Python Success Stories see: 
http://www.pythonology.org/successguide

A second volume is planned.  It is never too late to have a Python
success story)

Thank you all once again for Twisted.




From ac at strakt.com  Wed Dec 11 05:20:08 2002
From: ac at strakt.com (=?iso-8859-1?Q?Anders_Chrigstr=F6m?=)
Date: Wed, 11 Dec 2002 11:20:08 +0100 (CET)
Subject: [Twisted-Python] qtreactor.py is broken (and a patch for it)
Message-ID: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>

The TwistedSocketNotifier in qtreactor.py does not call setEnabled
properly, causing writing to the socket to halt.

Patch to fix it follows:
Index: twisted/internet/qtreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/qtreactor.py,v
retrieving revision 1.9
diff -u -3 -r1.9 qtreactor.py
--- twisted/internet/qtreactor.py	27 Sep 2002 15:38:18 -0000	1.9
+++ twisted/internet/qtreactor.py	11 Dec 2002 10:09:34 -0000
@@ -102,7 +102,7 @@
                 log.deferr()
             self.reactor.removeReader(w)
             self.reactor.removeWriter(w)
-        elif why is not None:
+        elif self.watcher:
             self.setEnabled(1)
         self.reactor.simulate()


Best regards,
	Anders

-- 
Anders Chrigstr?m               Email: ac at strakt.com
AB Strakt                       Phone: +46 31 749 08 96
Norra ?gatan 10
416 64 G?teborg
SWEDEN




From twisted at itamarst.org  Wed Dec 11 15:51:04 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 11 Dec 2002 15:51:04 -0500
Subject: [Twisted-Python] qtreactor.py is broken (and a patch for it)
In-Reply-To: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>
References: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>
Message-ID: <20021211155104.61a46e08.twisted@itamarst.org>

On Wed, 11 Dec 2002 11:20:08 +0100 (CET)
Anders Chrigstr?m <ac at strakt.com> wrote:

> The TwistedSocketNotifier in qtreactor.py does not call setEnabled
> properly, causing writing to the socket to halt.

Fixed it in CVS. Thanks for the patch.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Wed Dec 11 19:58:38 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 11 Dec 2002 19:58:38 -0500
Subject: [Twisted-Python] debian/rules
Message-ID: <20021212005838.GA18176@meson.dyndns.org>

  funroll-loops(@#twisted at freenode.net) pointed out line 63 of debian/rules;
apparently the [ ]'s should not be present.  (I have no clue about this,
just thought I'd make a more visible report)

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 1 day, 22:16, 5 users, load average: 0.02, 0.05, 0.07
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021211/f8c4a4a2/attachment.pgp 

From twisted at moshez.org  Wed Dec 11 21:10:05 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 12 Dec 2002 02:10:05 -0000
Subject: [Twisted-Python] debian/rules
In-Reply-To: <20021212005838.GA18176@meson.dyndns.org>
References: <20021212005838.GA18176@meson.dyndns.org>
Message-ID: <20021212021005.8699.qmail@green.zadka.com>

On Wed, 11 Dec 2002, Jp Calderone <exarkun at meson.dyndns.org> wrote:

>   funroll-loops(@#twisted at freenode.net) pointed out line 63 of debian/rules;
> apparently the [ ]'s should not be present.  (I have no clue about this,
> just thought I'd make a more visible report)

Thanks.
Remvoed [], together with line 63 itself.



From exarkun at meson.dyndns.org  Thu Dec 12 02:57:03 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 12 Dec 2002 02:57:03 -0500
Subject: [Twisted-Python] t.p.rebuild
Message-ID: <20021212075703.GA19604@meson.dyndns.org>

  twisted.python.rebuild.rebuild() currently breaks in some bizarre
circumstances (which I still cannot really say I understand completely),
however, the below fixes it.  

  The drawbacks: greater up-front costs for rebuilding (whereas the old
behavior spread the costs out over time); doesn't work with Python 2.1
(oops); imho is less desirable, for depending on gc.get_referrers().

  Advantages: -12 lines, +1 line; it works; it unifies one old/new style
class conditional.

  I'm not sure what my point is, except, here's the fix.  If it isn't
appropriate for it to go in for another few months (or however long we go
before deciding 2.1 support is no longer important) I probably don't mind,
I'll just use a locally modified version.

  Jp

===================================================================
RCS file: /cvs/Twisted/twisted/python/rebuild.py,v
retrieving revision 1.14
diff -u -r1.14 rebuild.py
--- rebuild.py  20 Sep 2002 20:29:41 -0000      1.14
+++ rebuild.py  12 Dec 2002 07:36:34 -0000
@@ -193,18 +193,19 @@
     if doLog:
         log.msg('  (cleaning %s): ' % str(module.__name__))
 
-    for clazz in classes:
-        if getattr(module, clazz.__name__) is clazz:
-            log.msg("WARNING: class %s not replaced by reload!" % reflect.qual(clazz))
-        else:
-            if doLog:
-                log.logfile.write("x")
-                log.logfile.flush()
-            clazz.__bases__ = ()
-            clazz.__dict__.clear()
-            clazz.__getattr__ = __getattr__
-            clazz.__module__ = module.__name__
-    for nclass in newclasses:
+    for nclass in classes + newclasses:
         ga = getattr(module, nclass.__name__)
         if ga is nclass:
             log.msg("WARNING: new-class %s not replaced by reload!" % reflect.qual(nclass))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021212/e7d972e4/attachment.pgp 

From andrew-twisted at puzzling.org  Thu Dec 12 03:53:12 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Dec 2002 19:53:12 +1100
Subject: [Twisted-Python] Lore and microdom problem.
Message-ID: <20021212085312.GA10010@frobozz.local>

There's a small glitch in Lore's LaTeX generation, and I'm not sure of the
best way to solve it.

In XHTML (and probably normal HTML), you link to http://foo.com/path?x=1&y=2
with <a href="http://foo.com/path?x=1&amp;y=2">.  Note the "&amp;".

Microdom is returning that still escaped, i.e. with the & intact, when I
suspect that it should be unescaping text in attribute values.  Is this a
bug?  If not, what should I being doing?

Also, I note there's no test cases sux or microdom -- tsk tsk ;)

-Andrew.




From bob at redivi.com  Thu Dec 12 10:53:51 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 12 Dec 2002 10:53:51 -0500
Subject: [Twisted-Python] Failed test cases w/ Twisted CVS on Mac OS X 10.2.x w/ (mostly) stock Python 2.2
Message-ID: <E8EDE678-0DE9-11D7-AE4D-0003938210D6@redivi.com>

I haven't looked very far into these.. but I do have a potential fix 
and a workaround..

for twisted.test.test_popsicle.PicklesicleTest.testPickle, the fix is 
likely as simple as changing True and False to 1 and 0 (2.2 doesn't 
know True and False, but 2.2.1 does... Apple hasn't updated to 2.2.2 
yet as of 10.2.3 build 6G24)

I suppose that the conch tests should be ignored if you're missing 
Crypto?

Note that I'm running an extra test suite (test_nmea.py) for the NMEA 
0183 GPS protocol I've submitted to Itamar, so my count is 352 instead 
of 351.

I try and keep my python pretty stock so I know what's going to run on 
untainted systems, I believe the only modules I've installed myself 
that twisted uses anywhere are ssl and the xml-sig stuff, since Apple 
obviously isn't very good at compiling python yet.

-bob

======================================================================
ERROR: Test DNS 'PTR' record queries
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/internet/udp.py", line 110, in 
doRead
     self.protocol.datagramReceived(data, addr)
   File "/Users/bob/src/Twisted/twisted/protocols/dns.py", line 809, in 
datagramReceived
     d.callback(m)
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 162, in 
callback
     self._startRunCallbacks(result, 0)
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 213, in 
_startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 227, in 
_runCallbacks
     (self.result,)+tuple(args), kw)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 334, in 
_deferredFUEqualCallback
     self.failUnlessEqual(expected, success)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
exceptions.AssertionError: [<twisted.protocols.dns.Record_PTR instance 
at 0xccaec0>] != []
======================================================================
ERROR: testPickle (twisted.test.test_popsicle.PicklesicleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_popsicle.py", line 
113, in testPickle
     alice._tracker = gcall(l.append, True)
NameError: global name 'True' is not defined
======================================================================
ERROR: testNormalTermination 
(twisted.test.test_process.PosixProcessTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_process.py", line 207, 
in testNormalTermination
     p.reason.trap(error.ProcessDone)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.ProcessTerminated, process ended with exit code 1
]
======================================================================
ERROR: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 276, in 
testReconnect
     factory.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testFailing (twisted.test.test_tcp.LoopbackTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 131, in 
testFailing
     clientF.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testMessages (twisted.test.test_unix.UnixSocketTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_smtp.py", line 146, in 
testMessages
     self.loopback(protocol, clientProtocol)
   File "/Users/bob/src/Twisted/twisted/test/test_unix.py", line 27, in 
loopback
     loopback.loopbackUNIX(client, server)
   File "/Users/bob/src/Twisted/twisted/protocols/loopback.py", line 
132, in loopbackUNIX
     reactor.iterate()
   File "/Users/bob/src/Twisted/twisted/internet/base.py", line 201, in 
iterate
     self.doIteration(delay)
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/default.py", line 547, 
in doSelect
     why = getattr(selectable, method)()
   File "/Users/bob/src/Twisted/twisted/internet/abstract.py", line 102, 
in doWrite
     self.unsent = self.unsent[l:]
exceptions.TypeError: sequence index must be integer
======================================================================
FAIL: testCallLater (twisted.test.test_internet.InterfaceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_internet.py", line 96, 
in testCallLater
     self.assertEquals(self._called, 1)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
AssertionError: 0 != 1
======================================================================
FAIL: testReadLimit (twisted.test.test_policies.ThrottlingTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_policies.py", line 
201, in testReadLimit
     self.assertEquals(c1.buffer, "01234567890123456789")
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
AssertionError: '0123456789' != '01234567890123456789'
======================================================================
FAIL: testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_rebuild.py", line 73, 
in testFileRebuild
     assert b.b() == 'c'
AssertionError
----------------------------------------------------------------------
Ran 352 tests in 151.419s

FAILED (failures=3, errors=6)
The following test modules had errors when loading:

* twisted.test.test_conch:
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_all.py", line 80, in 
loadTestsFromMyPackage
     locals(), globals(), [name])
   File "/Users/bob/src/Twisted/twisted/test/test_conch.py", line 19, in 
?
     from twisted.conch.ssh import keys, transport, factory, userauth, 
connection, common, session
   File "/Users/bob/src/Twisted/twisted/conch/ssh/keys.py", line 32, in ?
     from Crypto.Cipher import DES
ImportError: No module named Crypto.Cipher




From wilk-ml at flibuste.net  Fri Dec 13 08:58:07 2002
From: wilk-ml at flibuste.net (William Dode)
Date: 13 Dec 2002 14:58:07 +0100
Subject: [Twisted-Python] shared web hosting
Message-ID: <874r9i6mxc.fsf@flibuste.net>

hi,

Is there a pythonic way to use twistedmatrix in a shared web hosting ?
by pythonic way i mean to don't run an interpreter for each cgi script,
but to run each virtual host in a sand box (with different uid for each
virtualhost).
Like suexec with apache.

-- 
William Dode - http://flibuste.net



From alexandre.fayolle at free.fr  Fri Dec 13 09:38:58 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 13 Dec 2002 15:38:58 +0100
Subject: [Twisted-Python] running as nobody
Message-ID: <20021213143858.GB857@calvin.fayauffre.org>

What's the best way to get a twisted server to run as user nobody ?

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
D?veloppement logiciel avanc? - Intelligence Artificielle - Formations



From paul at nfg.nl  Fri Dec 13 09:54:07 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 13 Dec 2002 15:54:07 +0100
Subject: [Twisted-Python] running as nobody
In-Reply-To: <20021213143858.GB857@calvin.fayauffre.org>
References: <20021213143858.GB857@calvin.fayauffre.org>
Message-ID: <3DF9F48F.3020601@nfg.nl>

Alexandre Fayolle wrote:

>What's the best way to get a twisted server to run as user nobody ?
>
>  
>
mktap -u 65534 web ...

or whatever uid nobody has on your machine.


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl





From alexandre.fayolle at free.fr  Fri Dec 13 10:43:50 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 13 Dec 2002 16:43:50 +0100
Subject: [Twisted-Python] running as nobody
In-Reply-To: <3DF9F48F.3020601@nfg.nl>
References: <20021213143858.GB857@calvin.fayauffre.org> <3DF9F48F.3020601@nfg.nl>
Message-ID: <20021213154350.GC857@calvin.fayauffre.org>

On Fri, Dec 13, 2002 at 03:54:07PM +0100, Paul Stevens wrote:
> Alexandre Fayolle wrote:
> 
> >What's the best way to get a twisted server to run as user nobody ?
> >
> > 
> >
> mktap -u 65534 web ...
> 
> or whatever uid nobody has on your machine.

Oh. Sorry for the stupid question. I'd completely overread this. 

Thanks for the quick answer.

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
D?veloppement logiciel avanc? - Intelligence Artificielle - Formations



From glyph at twistedmatrix.com  Fri Dec 13 20:11:08 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Dec 2002 19:11:08 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com>
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com>
Message-ID: <20021213.191108.133290078.glyph@twistedmatrix.com>


On Fri, 13 Dec 2002 16:33:37 -0600, exarkun CVS <exarkun at twistedmatrix.com> wrote:
> Modified files:
> Twisted/twisted/python/plugin.py 1.11 1.12
> 
> Log message:
> blocking is the mindkiller

No... *threading* is the mindkiller.

What is the point of the addition of this function?  I note that it's not yet
used anywhere (thank goodness).  The use of a thread for loading plugins like
this is going to run non-thread-safe code in a thread for sure.  (Heck, is
__import__ even threadsafe?)

If you want a deferred version of this, maybe it would be more appropriate to
chunk the work from getPluginFileList so that it can be run with callLater with
some short timeout?


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021213/22b8cc22/attachment.pgp 

From lordvan at lordvan.com  Sat Dec 14 12:19:20 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sat, 14 Dec 2002 18:19:20 +0100 (CET)
Subject: [Twisted-Python] Mailinglist & news
Message-ID: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>

hi!
got a few questions:

1.) can twisted do mailinglists? (google just gave me the tm lists itself)
2.) if so can mailinglists be in sync with a news-server(mirror of lists
to nntp)

greetings, LordVan

-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From twisted at moshez.org  Sat Dec 14 13:38:25 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 14 Dec 2002 18:38:25 -0000
Subject: [Twisted-Python] Mailinglist & news
In-Reply-To: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>
References: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>
Message-ID: <20021214183825.12550.qmail@green.zadka.com>

On Sat, 14 Dec 2002, "Thomas Raschbacher" <lordvan at lordvan.com> wrote:

> 1.) can twisted do mailinglists? (google just gave me the tm lists itself)

Not directly.

> 2.) if so can mailinglists be in sync with a news-server(mirror of lists
> to nntp)

Well, I'm pretty sure it shouldn't be *too* hard to get twisted.mail
to spawn off mailman (by which I mean <30-40 line of Python code). Mailman
can do the injecting of messages into the Twisted NNTP server. The mail
and news can share a proces.



From smurf at noris.de  Sat Dec 14 21:22:26 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sun, 15 Dec 2002 03:22:26 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <20021213.191108.133290078.glyph@twistedmatrix.com>; from glyph@twistedmatrix.com on Fri, Dec 13, 2002 at 07:11:08PM -0600
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com>
Message-ID: <20021215032226.U8059@noris.de>

Hi,

Glyph Lefkowitz:
> No... *threading* is the mindkiller.
> 
Sometimes you can't work well without it. Database accesses are one common
example; so are file accesses across a network.

That being said, anything you only do _once_ shouldn't require threading -- 
and importing stuff certainly qualifies. An additional half-second
slowdown sometime after startup doesn't hurt anybody.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
To think is to differ.
		-- Clarence Darrow, Scopes trial, July 1925
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021215/8cf0e3e0/attachment.pgp 

From exarkun at meson.dyndns.org  Sat Dec 14 22:20:43 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 14 Dec 2002 22:20:43 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <20021215032226.U8059@noris.de>
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de>
Message-ID: <20021215032043.GA16288@meson.dyndns.org>

On Sun, Dec 15, 2002 at 03:22:26AM +0100, Matthias Urlichs wrote:
> Hi,
> 
> Glyph Lefkowitz:
> > No... *threading* is the mindkiller.
> > 
> Sometimes you can't work well without it. Database accesses are one common
> example; so are file accesses across a network.
> 
> That being said, anything you only do _once_ shouldn't require threading -- 
> and importing stuff certainly qualifies. An additional half-second

*cough*tenseconds*cough*

> slowdown sometime after startup doesn't hurt anybody.

  twisted.python.plugin.getPlugIns *should* do caching, but I'm not up to
working out just how that should work; the threaded hack was committed in a
moment of laziness (and it is now in my code instead of twisted, even though
it is probably "correct" ;)  I could also see some neat ways to break it up
w/ a generator and have it called piecewise... mmh, but threading works for
me for the moment; maybe some other time.

> 
> -- 
> Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
> -- 
> To think is to differ.
> 		-- Clarence Darrow, Scopes trial, July 1925



-- 
"If you find a neighbor in need, you're responsible for serving that
neighbor in need, you're responsible for loving a neighbor just like you'd
like to love yourself." -- George W. Bush, Sept. 16, 2002
--
 12:00am up 4 days, 22:17, 4 users, load average: 0.08, 0.09, 0.04
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021214/3cd04485/attachment.pgp 

From bruce at cubik.org  Sat Dec 14 22:29:32 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Sat, 14 Dec 2002 20:29:32 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de>
Message-ID: <3DFBF71C.1040501@cubik.org>

Matthias Urlichs wrote:
> Hi,
> 
> Glyph Lefkowitz:
> 
>>No... *threading* is the mindkiller.
>>
> 
> Sometimes you can't work well without it. Database accesses are one common
> example; so are file accesses across a network.

Postgres (and likely other DBs) support an asynchronous interface.  You 
don't *really* need threads to do database access as DB client.

  - Bruce




From screwtape at froup.com  Sun Dec 15 05:25:14 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 15 Dec 2002 21:25:14 +1100
Subject: [Twisted-Python] Web proxy docstrings
Message-ID: <20021215102514.GH944@ferd2.thristian.org>

The other day, I decided to write myself a little bandwidth limiting
web proxy, so I could see how quickly the webpages I was working on
would load over a 28.8k modem, as opposed to the 100Mbit LAN I was on
at the time.

Well, despite my high expectations, Twisted impressed me yet *again*,
since all the pieces I needed were all ready written. However, a large
chunk of my time was taken up finding out how all the various pieces I
had at my disposal actually fitted together. Accordingly, I've
attached a little patch to twisted/web/proxy.py that contains the
documentation I wish I'd found there.

I don't know much about Twisted's documentation standards, but I
figure this little patch is better than nothing. If you do feel the
need to trim it down, though, the detail I most wanted is in the
docstring for the Proxy class.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Darn rhodents, sigging anything that moves! -- Nils Desle
|
-------------- next part --------------
Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.9
diff -u -r1.9 proxy.py
--- twisted/web/proxy.py	15 Nov 2002 20:47:36 -0000	1.9
+++ twisted/web/proxy.py	15 Dec 2002 10:34:04 -0000
@@ -14,7 +14,21 @@
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
-"""Simplistic HTTP proxy support."""
+"""Simplistic HTTP proxy support.
+
+This comes in two main variants - the Proxy and the ReverseProxy. 
+
+When a Proxy is in use, a browser trying to connect to a server (say,
+www.yahoo.com) will be intercepted by the Proxy, and the proxy will covertly
+connect to the server, and return the result.
+
+When a ReverseProxy is in use, the client connects directly to the ReverseProxy
+(say, www.yahoo.com) which farms off the request to one of a pool of servers,
+and returns the result.
+
+Normally, a Proxy is used on the client end of an Internet connection, while a
+ReverseProxy is used on the server end.
+"""
 
 # twisted imports
 from twisted.protocols import http
@@ -27,6 +41,7 @@
 
 
 class ProxyClient(http.HTTPClient):
+    """Used by ProxyClientFactory to implement a simple web proxy."""
 
     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -58,6 +73,7 @@
 
 
 class ProxyClientFactory(protocol.ClientFactory):
+    """Used by ProxyRequest to implement a simple web proxy."""
 
     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -82,6 +98,7 @@
 
 
 class ProxyRequest(http.Request):
+    """Used by Proxy to impelement a simple web proxy."""
 
     protocols = {'http': ProxyClientFactory}
     ports = {'http': 80}
@@ -107,11 +124,23 @@
         reactor.connectTCP(host, port, clientFactory)
 
 class Proxy(http.HTTPChannel):
+    """This class implements a simple web proxy.
+
+    Since it inherits from twisted.protocols.http.HTTPChannel, to use it you
+    should do something like this:
+
+        from twisted.protocols import http
+        f = http.HTTPFactory()
+        f.HTTPChannel = Proxy
+
+    Make the HTTPFactory a listener on a port as per usual, and you have
+    a fully-functioning web proxy!"""
 
     requestFactory = ProxyRequest
 
 
 class ReverseProxyRequest(http.Request):
+    """Used by ReverseProxy to implement a simple reverse proxy."""
 
     def process(self):
         self.received_headers['host'] = self.factory.host
@@ -123,11 +152,15 @@
                            clientFactory)
 
 class ReverseProxy(http.HTTPChannel):
+    """Implements a simple reverse proxy.
+
+    For details of usage, see the file examples/proxy.py"""
 
     requestFactory = ReverseProxyRequest
 
 
 class ReverseProxyResource(resource.Resource):
+    """Apparently unused."""
 
     def __init__(self, host, port, path):
         resource.Resource.__init__(self)

From smurf at noris.de  Sun Dec 15 05:54:07 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sun, 15 Dec 2002 11:54:07 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <3DFBF71C.1040501@cubik.org>; from bruce@cubik.org on Sat, Dec 14, 2002 at 08:29:32PM -0700
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de> <3DFBF71C.1040501@cubik.org>
Message-ID: <20021215115407.X8059@noris.de>

Hi,

Bruce Mitchener:
> > Sometimes you can't work well without it. Database accesses are one common
> > example; so are file accesses across a network.
> 
> Postgres (and likely other DBs) support an asynchronous interface.  You 
> don't *really* need threads to do database access as DB client.
> 
I know -- it's just a network connection, after all. Unfortunately,
many interfaces (as well es Python's DBI) just Don't Do That.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
Sell a country! Why not sell the air, the great sea, as well as the
earth? Did not the Great Spirit make them all for the use of his children?
		-- Tecumseh, (Shawnee)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021215/47a6df95/attachment.pgp 

From twisted at moshez.org  Sun Dec 15 06:04:25 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 15 Dec 2002 11:04:25 -0000
Subject: [Twisted-Python] Web proxy docstrings
In-Reply-To: <20021215102514.GH944@ferd2.thristian.org>
References: <20021215102514.GH944@ferd2.thristian.org>
Message-ID: <20021215110425.20839.qmail@green.zadka.com>

On Sun, 15 Dec 2002, screwtape at froup.com wrote:

> I don't know much about Twisted's documentation standards, but I
> figure this little patch is better than nothing. If you do feel the
> need to trim it down, though, the detail I most wanted is in the
> docstring for the Proxy class.
 
Thanks, commited.
ReverseProxyResource is not unused -- see, for example, the using-twistedweb
HOWTO.




From haering_python at gmx.de  Sun Dec 15 11:13:49 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Sun, 15 Dec 2002 17:13:49 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
Message-ID: <20021215161349.GA2658@lilith.ghaering.test>

Hello,

I'd like to learn asynchronuous programming with Twisted, because I
think this will make me a better programmer, no matter if I'll use this
paradigma in the end or not.

So I thought about wrapping PostgreSQL's asynchronous interface to be
usable from a Twisted app. I did once chat a little with Itamar about
this on #twisted, and now I finally got around starting this.

I don't really know much about twisted, so please correct me if this is
wrong:

    A reactor is the Twisted main loop, which selects on selectables,
    and invokes doRead() on them when data is available.

Itamar told me I'd need to implement
twisted.internet.abstract.FileDescriptor, so this is what I did (very
incomplete code):

#v+
from twisted.internet import abstract
from pyPgSQL import libpq

class PgAsyncConn(abstract.FileDescriptor):
    def __init__(self):
        abstract.FileDescriptor.__init__(self)

        # PostgreSQL stuff
        self.conn = libpq.PQconnectdb("host=gargamel dbname=gerhard")
        self.fileno = self.conn.socket.fileno
        self.startReading()

    def write(self, data):
        print "writing"

    def query(self, callback, errback, *args, **kwargs):
        print "sending query ..."
        self.conn.sendQuery(*args)
        self.callback, self.errback = callback, errback
        print "query sent."

    def operation(self, callback, errback, *args, **kwargs):
        print "operation"
        
    def doRead(self):
        self.conn.consumeInput()
        if not self.conn.isBusy:
            print "data available"
            res = self.conn.getResult()
            print "got result."

            bla = self.conn.getResult()
            assert bla is None
            print "query sucessfully processed."

            # call callback here
            self.callback(res)

    def connectionLost(self, reason):
        """The connection was lost.
        """
        self.conn.finish()
#v-

Now I'm at the point where I'd like to try this code out. *But*
obviously something is still missing. I believe my PgAsyncConn would
need to be registered with the reactor?! Is this true and if yes, how do
I do it?

Btw. I'll try to keep my new baby interface-compatible with
twisted.enterprise.adbapi as much as possible.

Next question: I'd like to try my code out. Is there a good way to test
this under Twisted, apart from writing a little server like the Echo
example of the docs, and trying to call PgAsyncConn from it?

TIA,

Gerhard
-- 
Favourite database:             http://www.postgresql.org/
Favourite programming language: http://www.python.org/
Combine the two:                http://pypgsql.sf.net/



From twisted at itamarst.org  Sun Dec 15 12:30:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Dec 2002 12:30:40 -0500
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <20021215123040.197e74c3.twisted@itamarst.org>

On Sun, 15 Dec 2002 17:13:49 +0100
Gerhard H?ring <haering_python at gmx.de> wrote:

> I don't really know much about twisted, so please correct me if this
> is wrong:
> 
>     A reactor is the Twisted main loop, which selects on selectables,
>     and invokes doRead() on them when data is available.

That is correct.

> Now I'm at the point where I'd like to try this code out. *But*
> obviously something is still missing. I believe my PgAsyncConn would
> need to be registered with the reactor?! Is this true and if yes, how
> do I do it?

If you look at abstract.FileDescriptor.__init__, you'll see it wants to
get a reactor as an argument, and if not uses the global one. In general
the code seems ok, except that you really ought to be using Deferreds
instead of callback/errback pairs. See
http://twistedmatrix.com/documents/howto/defer for details.

> Btw. I'll try to keep my new baby interface-compatible with
> twisted.enterprise.adbapi as much as possible.

Cool!

> Next question: I'd like to try my code out. Is there a good way to
> test this under Twisted, apart from writing a little server like the
> Echo example of the docs, and trying to call PgAsyncConn from it?

Well, look at how we do tests in twisted.test - you can write a unit
test suite for your code, with the limitation of course that you'd need
a live postgresql server to test it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bob at redivi.com  Sun Dec 15 13:28:09 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 15 Dec 2002 13:28:09 -0500
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <F63A2509-105A-11D7-87AD-0003938210D6@redivi.com>

On Sunday, Dec 15, 2002, at 11:13 America/New_York, Gerhard H?ring 
wrote:

> class PgAsyncConn(abstract.FileDescriptor):
>     def __init__(self):
>         abstract.FileDescriptor.__init__(self)
>
>         # PostgreSQL stuff
>         self.conn = libpq.PQconnectdb("host=gargamel dbname=gerhard")
>         self.fileno = self.conn.socket.fileno
>         self.startReading()


fileno needs to be a function

i.e.

self.fd = self.conn.socket.fileno
(after __init__)

def fileno(self):
   return self.fd

-bob



From liiwi at iki.fi  Sun Dec 15 14:30:47 2002
From: liiwi at iki.fi (Jaakko Niemi)
Date: Sun, 15 Dec 2002 21:30:47 +0200
Subject: [Twisted-Python] woven headache
Message-ID: <87smwzt6zc.fsf@jumper.lonesom.pp.fi>

 Hello,

 So, I tried to do a list of links from a list. Is the
 right way to do this to point href in self.attributes
 into a list? If it cannot handle a list, then I don't
 see how this could be done.

                    --j



From haering_python at gmx.de  Sun Dec 15 18:47:22 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Mon, 16 Dec 2002 00:47:22 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215123040.197e74c3.twisted@itamarst.org>
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org>
Message-ID: <20021215234722.GA11488@lilith.ghaering.test>

* Itamar Shtull-Trauring <twisted at itamarst.org> [2002-12-15 12:30 -0500]:
> Gerhard H?ring <haering_python at gmx.de> wrote:
> > [...] I believe my PgAsyncConn would need to be registered with the
> > reactor?! [...]
> 
> If you look at abstract.FileDescriptor.__init__, you'll see it wants
> to get a reactor as an argument, and if not uses the global one.

Thanks.

> In general the code seems ok, except that you really ought to be using
> Deferreds instead of callback/errback pairs.

Tell that to whoever wrote twisted.enterprise.adbapi. That's where I got
the idea for this interface from ;-)

> See http://twistedmatrix.com/documents/howto/defer for details.

I'll do.

> > Btw. I'll try to keep my new baby interface-compatible with
> > twisted.enterprise.adbapi as much as possible.
> 
> Cool!

Even cooler is that this now works basically :-D Even with a simplistic
connection pool built upon.

Perhaps you have a tip on how to improve my connection pool? Here's some
rough code I produced a few minutes ago:

class PgConnPool:
    def __init__(self, reactor=None, connstr="", cp_min=3, cp_max=5):
        main.callDuringShutdown(self.close)        
        self.connections = []
        for i in range(cp_min):
            conn = PgAsyncConn(reactor)
            conn.connect(connstr)
            self.connections.append(conn)

    def findConn(self):
        # Whoa. Quite likely race condition here :-/
        for conn in self.connections:
            if conn.ready:
                print "using connection", conn
                return conn
        return None
    
    def query(self, callback, errback, *args, **kwargs):
        conn = self.findConn()
        assert conn is not None

    [snip more code]

Now the "assert conn is not None" isn't very helpful. What is best done
if all connections are busy? I could detect the availability of a free
connection in the doRead method of one of the PgAsyncConn in the
connection pool. But where to go from this knowledge as far as
PgConnPool is concerned? :-)

(Btw. the connection pool in adbapi seems to be a fake one. I don't see
where it'd respect the upper and lower limits for the pool.)

> > Next question: I'd like to try my code out. Is there a good way to
> > test this under Twisted, apart from writing a little server like the
> > Echo example of the docs, and trying to call PgAsyncConn from it?
> 
> Well, look at how we do tests in twisted.test - you can write a unit
> test suite for your code, with the limitation of course that you'd
> need a live postgresql server to test it.

Uh, this seems hard. I believe I'd need to start a reactor in my test
case, as this is a client-side API only and there's no way I'll just
quickly implement PostgreSQL in Python. Any hints on how to do this?

Thanks,

Gerhard
-- 
Favourite database:             http://www.postgresql.org/
Favourite programming language: http://www.python.org/
Combine the two:                http://pypgsql.sf.net/



From andrew-twisted at puzzling.org  Sun Dec 15 20:05:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 16 Dec 2002 12:05:49 +1100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215234722.GA11488@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org> <20021215234722.GA11488@lilith.ghaering.test>
Message-ID: <20021216010549.GA1081@frobozz.local>

On Mon, Dec 16, 2002 at 12:47:22AM +0100, Gerhard H?ring wrote:
> > > Next question: I'd like to try my code out. Is there a good way to
> > > test this under Twisted, apart from writing a little server like the
> > > Echo example of the docs, and trying to call PgAsyncConn from it?
> > 
> > Well, look at how we do tests in twisted.test - you can write a unit
> > test suite for your code, with the limitation of course that you'd
> > need a live postgresql server to test it.
> 
> Uh, this seems hard. I believe I'd need to start a reactor in my test
> case, as this is a client-side API only and there's no way I'll just
> quickly implement PostgreSQL in Python. Any hints on how to do this?

Starting a reactor is easy:
    from twisted.internet import reactor
    # Make connections, schedule events, etc, here.
    reactor.run()

Of course, there's the problem of stopping the reactor.  Most of our test
cases do something more like:
    from twisted.internet import reactor
    self.done = 0
    # Do stuff
    while not self.done:
        reactor.iterate()

Then it's just a matter of making sure you set self.done when the test
passes or fails.  You could also set timeouts with something like
"reactor.callLater(3, self.blowUp)", or by calling "d.setTimeout(3,
self.blowUp)" on an appropriate Deferred.  You should make sure you cancel
unfired timeouts, though, or they will interfere with later tests -- this is
a deficiency in the testing framework that we're hoping to fix at some
point.

As to starting PostgreSQL, I'd just make the test assume that PostgreSQL is
running.  Perhaps use the standard synchronous interface to test that it's
running, otherwise skip the tests?

-Andrew.




From smurf at noris.de  Mon Dec 16 00:33:24 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Mon, 16 Dec 2002 06:33:24 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215234722.GA11488@lilith.ghaering.test>; from haering_python@gmx.de on Mon, Dec 16, 2002 at 12:47:22AM +0100
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org> <20021215234722.GA11488@lilith.ghaering.test>
Message-ID: <20021216063324.B17124@noris.de>

Hi,

Gerhard H?ring:
> Perhaps you have a tip on how to improve my connection pool? Here's some
> rough code I produced a few minutes ago:
> 
Take the connection out of the pool while it's in use.
Use a Deferred to return the connection.

Something along these lines:

class ConnectionPool:
	def __init__(size=5):
		self.waiting=[]
		self.connections=[]
		for i in range(size):
			conn = PoolConnection()
			conn.is_free=1
			self.connections.append(conn)

	def findConn(self):
		d=Deferred()
		try:
			conn = self.connections.pop()
		except IndexError:
			self.waiting.append(d)
		else:
			conn.is_free=0
			d.callback(conn)
		return d
			
	def freeConn(self,conn):
		if conn.is_free:
			return
		try:
			d = self.waiting.pop()
		except IndexError:
			conn.is_free=1
			self.connections.push(conn)
		else:
			d.callback(conn)
		
For bonus points, subclass your db connection to self-add itself back to
the pool when it's no longer in use:

class PoolConnection(YourDatabaseConnection):
	def __init__(self,pool,*args,**kwargs):
		YourDatabaseConnection.__init__(self,*args,**kwargs)
		self.__pool=weakref.ref(__pool)
	def __del__(self):
		pool=self.__pool()
		try:
			pool.freeConn(self)
		except:
			pass
		
-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
The teacher comes when the soul calls--and thank goodness, for the ego
is never fully ready.
		-- Clarissa Pinkola Estes, "Women Who Run With the Wolves"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021216/463c67f2/attachment.pgp 

From dp at twistedmatrix.com  Mon Dec 16 02:32:59 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 15 Dec 2002 23:32:59 -0800
Subject: [Twisted-Python] woven headache
Message-ID: <440248C7-10C9-11D7-822D-0050E425C324@twistedmatrix.com>

A List of Links into HTML

The easiest way to do this is to use the List and Anchor widgets to 
handle the list and a string, respectively. If you had an RPY that 
looked like this (the main model is a list of strings):

LinkList.rpy
----
from twisted.web.woven import page

resource = page.Page(['http://www.google.com', 'http://www.foo.com'], 
templateFile="LinkList.html")
----

Your template file would look like this:

LinkList.html
----
<html>
	<ul view="List" model=".">
		<!-- Use the current model as this node's model.
			Use the List widget in widgets.py to turn this model into html. -->

		<li pattern="listItem">
			<!-- The pattern node will be copied once for each element in the 
list
				by the List widget. Each copy will have a model= attribute with
				the index of the current list item set. When woven recurses into
				the new, copied nodes, the list element will be pushed onto the
				stack. -->
			<a view="Anchor" model="." />
			<!-- When woven descended into the li node, it pushed a string onto
				the model stack. We now want to render that string into HTML
				using the Anchor widget. We specify ".", the top of the model stack.
			-->
		</li>
	</ul>
</html>
----

There you go.

Unfortunately the base Anchor widget is pretty dumb. It just takes a 
string model, and sets the node href= to the string, and adds a text 
node to the <a> node. Next installment: writing a custom widget that 
does fancier stuff.

Donovan




From bh at intevation.de  Mon Dec 16 15:02:04 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 16 Dec 2002 21:02:04 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <6qk7i9d96r.fsf@salmakis.intevation.de>

Gerhard H?ring <haering_python at gmx.de> writes:

> So I thought about wrapping PostgreSQL's asynchronous interface to be
> usable from a Twisted app.

I hope you're using PostgreSQL 7.3. The non-blocking interface doesn't
work properly in earlier versions unless you patch libpq.

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From deus_x at pobox.com  Tue Dec 17 10:48:31 2002
From: deus_x at pobox.com (l.m.orchard)
Date: Tue, 17 Dec 2002 10:48:31 -0500
Subject: [Twisted-Python] Event-driven version of gzip module?
Message-ID: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>

Still getting my head around Twisted, so hopefully I make sense in 
asking this:

Does there happen to be an event-driven version of the gzip module for 
Twisted?  That is, instead of expecting a file object to actively read 
and seek at will, it accepts chunks of data from a stream and hits a 
callback with decompressed chunks as they're available.  (Would this 
involve a deferred?)  I was trying to do something with just zlib, but 
I forgot that that doesn't do anything to handle the header of a gzip 
stream like the gzip module itself does.

Trying to handle on-the-fly HTTP decompression - at present things work 
fine if I slurp the whole response body down into a file object and let 
gzip have at it, but I'd rather stream things through a pipeline a 
chunk at a time than buffer it all up first.

Dropped into #twisted on freenode, but didn't get much response, so I 
figured I'd post here too.

--
l.m.orchard <deus_x at pobox.com> http://www.decafbad.com
...see you space cowboy




From exarkun at meson.dyndns.org  Tue Dec 17 12:05:07 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Tue, 17 Dec 2002 12:05:07 -0500
Subject: [Twisted-Python] test_nmea failing
Message-ID: <20021217170507.GA14416@meson.dyndns.org>

exarkun:~/projects/python/Twisted$ python2.1 admin/runtests -v -t --file twisted/test/test_nmea.py
reactor class: twisted.internet.default.SelectReactor
testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase) ... FAIL

======================================================================
FAIL: testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./twisted/test/test_nmea.py", line 114, in testGPSMessages
    self.failUnlessEqual(expectedResult, actualResult,
"\nInput:\n%s\nExpected: %r\nResults: %r\n" % (message, expectedResult, actualResult))
  File "./pyunit/unittest.py", line 279, in failUnlessEqual
    raise self.failureException, (msg or '%s != %s' % (repr(first), repr(second)))
AssertionError:
Input:
$GPGLL,4250.5589,S,14718.5084,E,092204.999,A*2D
Expected: (-42.842648333299998, 147.30847333299999, 33724.999000000003, 1)
Results: (-42.842648333333337, 147.30847333333332, 33724.999000000003, 1)

----------------------------------------------------------------------

It does occassionally pass with 2.1, and it seems to always pass with 2.2.

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more than the wisest man can answer.
                -- C.C. Colton
--
 12:00am up 1 day, 9:44, 2 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021217/4459196f/attachment.pgp 

From abo at minkirri.apana.org.au  Tue Dec 17 16:59:52 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: 18 Dec 2002 08:59:52 +1100
Subject: [Twisted-Python] Event-driven version of gzip module?
In-Reply-To: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>
References: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>
Message-ID: <1040162392.2747.45.camel@ngapa.apana.org.au>

On Wed, 2002-12-18 at 02:48, l.m.orchard wrote:
> Still getting my head around Twisted, so hopefully I make sense in 
> asking this:
> 
> Does there happen to be an event-driven version of the gzip module for 
> Twisted?  That is, instead of expecting a file object to actively read 
> and seek at will, it accepts chunks of data from a stream and hits a 
> callback with decompressed chunks as they're available.  (Would this 
> involve a deferred?)  I was trying to do something with just zlib, but 
> I forgot that that doesn't do anything to handle the header of a gzip 
> stream like the gzip module itself does.
[...]

the Python zlib module can compress/uncompress gzip data a block at a
time; perfect for what you want.

I'm not sure you need the gzip header stuff for http decompression, but
it you do, just have a look at the gzip.py source... the gzip module is
written in python and uses the zlib module. You might find once you look
at the gzip module implementation that it can actualy do what you want
anyway (it seems to support block at a time read/write, and provided you
use a stringIO file type should not block).






From bob at mastersofbranding.com  Tue Dec 17 12:26:25 2002
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Tue, 17 Dec 2002 12:26:25 -0500
Subject: [Twisted-Python] test_nmea failing
In-Reply-To: <20021217170507.GA14416@meson.dyndns.org>
Message-ID: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>

Yuck.. floating point precision bugs.. they should have a "close 
enough" equality operator for the damn things.  I'll do some ugly hack 
to make it play nice.. but note that it's not *really* failing, that's 
perfectly acceptable output (other than the exception).

I don't have a copy of 2.1 to test against, but I'll fix it.. maybe 
change it into strings, and only check up to 10**-4 or so since that's 
about the precision you get from a NMEA message in the first place.

On Tuesday, Dec 17, 2002, at 12:05 America/New_York, Jp Calderone wrote:

> exarkun:~/projects/python/Twisted$ python2.1 admin/runtests -v -t 
> --file twisted/test/test_nmea.py
> testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase) ... FAIL
> Expected: (-42.842648333299998, 147.30847333299999, 
> 33724.999000000003, 1)
> Results: (-42.842648333333337, 147.30847333333332, 33724.999000000003, 
> 1)
> ----------------------------------------------------------------------
> It does occassionally pass with 2.1, and it seems to always pass with 
> 2.2.




From m at moshez.org  Wed Dec 18 00:26:19 2002
From: m at moshez.org (Moshe Zadka)
Date: 18 Dec 2002 05:26:19 -0000
Subject: [Twisted-Python] test_nmea failing
In-Reply-To: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>
References: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>
Message-ID: <20021218052619.25733.qmail@green.zadka.com>

On Tue, 17 Dec 2002, Bob Ippolito <bob at mastersofbranding.com> wrote:

> Yuck.. floating point precision bugs.. they should have a "close 
> enough" equality operator for the damn things.

No they shouldn't. K tried, IIRC, and it was a dud. You want epsilon
comparison? abs(x-y)<0.0001 works fine for me.
Never ever ever compare floats for equality.
Ever.



From bh at intevation.de  Wed Dec 18 04:21:21 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 18 Dec 2002 10:21:21 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <6qsmwvfzse.fsf@salmakis.intevation.de>

Gerhard H?ring <haering_python at gmx.de> writes:

> Hello,
> 
> I'd like to learn asynchronuous programming with Twisted, because I
> think this will make me a better programmer, no matter if I'll use this
> paradigma in the end or not.
> 
> So I thought about wrapping PostgreSQL's asynchronous interface to be
> usable from a Twisted app.

I forgot to mention this earlier: I have an asyncore based interface:
http://www.intevation.de/cgi-bin/viewcvs-hoko.cgi/geoserver/geoserver/src/GeoServer/psql.py?rev=1.11&content-type=text/vnd.viewcvs-markup

Maybe it can help with the twisted version

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From glyph at twistedmatrix.com  Wed Dec 18 09:26:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Dec 2002 08:26:47 -0600 (CST)
Subject: [Twisted-Python] woven nested lists
Message-ID: <20021218.082647.45096840.glyph@twistedmatrix.com>


This is on its way to becoming a FAQ, so when LordVan asked how to do list
nesting in woven on the IRC channel, I figured I should post something here
rather than just answer the question there.

http://www.twistedmatrix.com/users/glyph/py/src/nestedlist.py

As it happens, I discovered a woven bug in the process :-).  The code here has
2 embedded templates ('template' and 'brokenTemplate'), one of which works with
CVS as of a few days ago and one of which works with CVS as of a few minutes
ago.  You can see my commit message about that if you're interested in the
details:

http://www.twistedmatrix.com/pipermail/twisted-commits/2002-December/005021.html


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021218/c5171e20/attachment.pgp 

From dp at twistedmatrix.com  Wed Dec 18 11:36:20 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 18 Dec 2002 08:36:20 -0800
Subject: [Twisted-Python] woven nested lists
In-Reply-To: <20021218.082647.45096840.glyph@twistedmatrix.com>
Message-ID: <D695C803-12A6-11D7-B2DC-0050E425C324@twistedmatrix.com>

On Wednesday, December 18, 2002, at 06:26  AM, Glyph Lefkowitz wrote:
>
> As it happens, I discovered a woven bug in the process :-).  The code  
> here has
> 2 embedded templates ('template' and 'brokenTemplate'), one of which  
> works with
> CVS as of a few days ago and one of which works with CVS as of a few  
> minutes
> ago.  You can see my commit message about that if you're interested in  
> the
> details:
>
> http://www.twistedmatrix.com/pipermail/twisted-commits/2002-December/ 
> 005021.html

This bug stems from the fact that the List widget used to call getNode  
itself, thus finding only the first node below it's template node.  
getPattern will find all the pattern nodes below the widget's template  
node. The noNesting fix is a great solution, and hopefully will be  
enough of a fix.

Regarding the comment about anonymous lists: The outer list in this  
case is available using the name "mytable". So the template could be as  
so:

<table model="mytable" view="List">
	<tr listItemOf="mytable" view="List">
		<td pattern="listItem" view="Text">
		</td>
	</tr>
</table>

It's only the inner lists that are truly anonymous, because as the List  
widget is iterating the outer list, it sets the model attribute of the  
pattern nodes to model="0" model="1" model="2" etc. My first thought is  
to allow this type of syntax:

<table model="mytable" view="List">
	<tr listItemOf="mytable" view="List">
		<td listItemOf="." view="Text">
		</td>
	</tr>
</table>

Which would mean "the inner node is a pattern node with the name of the  
model on top of the model stack", but I'm not sure what that buys us  
over the current noNesting fix (which certainly is the way things  
should have worked, and is the way the code worked before the  
introduction of getPattern)

By the way, there is a test of nested lists in test_woven.py. It just  
counts the number of copied nodes, however, and should probably be  
updated to check that the *correct* nodes were copied.

Thanks Glyph
Donovan




From bob at redivi.com  Fri Dec 20 15:33:31 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 20 Dec 2002 15:33:31 -0500
Subject: [Twisted-Python] New SerialPort transport and associated goodies
Message-ID: <4DEC3047-145A-11D7-9547-0003938210D6@redivi.com>

For those of you that haven't noticed, I've added a SerialPort 
transport with some help from Itamar.  It's dependent on pyserial 
(http://pyserial.sf.net/), and currently supports posix and Jython.  
It'll eventually support win32.

I've done two GPS protocols, NMEA 0183 (almost all receivers support 
this) and Rockwell Zodiac (for the DeLorme Earthmate, which doesn't).  
There's other protocols for Trimble and Garmin receivers, but they 
support NMEA.

There is a new gpsfix example in doc/examples, and I've refactored the 
MouseMan example to use the new SerialPort transport.. however, I don't 
own any serial mice, so someone else is going to have to test it.

-bob




From bob at redivi.com  Fri Dec 20 15:33:47 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 20 Dec 2002 15:33:47 -0500
Subject: [Twisted-Python] New SerialPort transport and associated goodies
Message-ID: <576B56F2-145A-11D7-9547-0003938210D6@redivi.com>

For those of you that haven't noticed, I've added a SerialPort 
transport with some help from Itamar.  It's dependent on pyserial 
(http://pyserial.sf.net/), and currently supports posix and Jython.  
It'll eventually support win32.

I've done two GPS protocols, NMEA 0183 (almost all receivers support 
this) and Rockwell Zodiac (for the DeLorme Earthmate, which doesn't).  
There's other protocols for Trimble and Garmin receivers, but they 
support NMEA.

There is a new gpsfix example in doc/examples, and I've refactored the 
MouseMan example to use the new SerialPort transport.. however, I don't 
own any serial mice, so someone else is going to have to test it.

-bob




From nbm at mithrandr.moria.org  Fri Dec 20 16:40:43 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Fri, 20 Dec 2002 23:40:43 +0200
Subject: [Twisted-Python] SCGIChannel: SCGI protocol support
Message-ID: <20021220214042.GA4115@mithrandr.moria.org>

Hi all,

SCGI (http://www.mems-exchange.org/software/scgi/) is a replacement for
the CGI protocol, in a similar manner to FCGI.  Through mod_scgi on
apache, you can delegate sections of a web site served by apache to be
handled via SCGI:

        <Location "/jobsearch">
                SCGIServer 127.0.0.1 4000
                SCGIHandler On
        </Location>

SCGIChannel serves as a replacement to HTTPChannel, performing the
request with the information given over SCGI, and returning the reply.

A couple of changes are necessary to make use of inheritance of
HTTPChannel and server.Site to work as expected with its protocol.
These are in scgi-changes.patch.

I work around the lack of these changes in the scgichannel.py attached.
Use the above apache directives and this file to see what it does.

Opinions requested.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.64
diff -u -r1.64 http.py
--- protocols/http.py	3 Dec 2002 06:05:07 -0000	1.64
+++ protocols/http.py	20 Dec 2002 21:09:16 -0000
@@ -840,9 +840,9 @@
                 self.transport.loseConnection()
                 return
             command, request, version = parts
-            self.__command = command
-            self.__path = request
-            self.__version = version
+            self._command = command
+            self._path = request
+            self._version = version
             if version == 'HTTP/0.9':
                 self.allHeadersReceived()
                 self.allContentReceived()
@@ -873,15 +873,15 @@
         self.requests[-1].received_headers[header] = data
 
     def allContentReceived(self):
-        command = self.__command
-        path = self.__path
-        version = self.__version
+        command = self._command
+        path = self._path
+        version = self._version
 
         # reset ALL state variables, so we don't interfere with next request
         self.length = 0
-        self.__header = ''
+        self._header = ''
         self.__first_line = 1
-        del self.__command, self.__path, self.__version
+        del self._command, self._path, self._version
 
         req = self.requests[-1]
         req.requestReceived(command, path, version)
@@ -899,7 +899,7 @@
     def allHeadersReceived(self):
         req = self.requests[-1]
         req.parseCookies()
-        self.persistent = self.checkPersistence(req, self.__version)
+        self.persistent = self.checkPersistence(req, self._version)
         req.gotLength(self.length)
 
     def checkPersistence(self, request, version):
Index: web/server.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/server.py,v
retrieving revision 1.84
diff -u -r1.84 server.py
--- web/server.py	3 Dec 2002 17:24:27 -0000	1.84
+++ web/server.py	20 Dec 2002 21:09:18 -0000
@@ -416,7 +416,7 @@
     def buildProtocol(self, addr):
         """Generate a channel attached to this site.
         """
-        channel = http.HTTPChannel()
+        channel = self.protocol()
         channel.requestFactory = Request
         channel.site = self
         channel.factory = self
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.protocols import http
from twisted.web import server

class SCGITransport:
    def __init__(self, realtransport):
        self.realtransport = realtransport
        self.firstline = 1

    def write(self, data):
        if self.firstline:
            data = data.replace("HTTP/1.1", "Status:")
            self.firstline = 0
        self.realtransport.write(data)

    def writeSequence(self, data):
        for entry in data:
            self.write(entry)

    def setPeer(self, peer):
        self.peer = peer

    def setHost(self, host):
        self.host = host

    def getPeer(self):
        return self.peer

    def getHost(self):
        return self.host

    def loseConnection(self):
        self.realtransport.loseConnection()

class SCGIChannel(http.HTTPChannel):
    def __init__(self):
        http.HTTPChannel.__init__(self)
        self._buffer = ""
        self._maxbufferlength = None
        self.prefix = ""

    def dataReceived(self, data):
        self._buffer = self._buffer + data
        if not self._maxbufferlength:
            idx = self._buffer.index(":")
            if not idx:
                return
            self._maxbufferlength = long(self._buffer[:idx])

        if len(self._buffer) - (idx + 2) == self._maxbufferlength:
            scgistring = self._buffer[idx + 1:]
            items = scgistring.split("\0")
            items = items[:-1]
            assert len(items) % 2 == 0, "malformed headers"
            env = {}
            for i in range(0, len(items), 2):
                env[items[i]] = items[i+1]

            request = self.requestFactory(self, len(self.requests))
            self.requests.append(request)

            if env.has_key("HTTP_USER_AGENT"):
                request.received_headers["User-Agent"] = env["HTTP_USER_AGENT"]
            if env.has_key("HTTP_ACCEPT"):
                request.received_headers["Accept"] = env["HTTP_ACCEPT"]
            if env.has_key("SERVER_NAME"):
                request.received_headers["host"] = env["SERVER_NAME"]
            if env.has_key("CONTENT_LENGTH"):
                request.received_headers["Content-Length"] = env["CONTENT_LENGTH"]

            # XXX: working around use of __version, &c. in HTTPChannel
            self._HTTPChannel__command = env["REQUEST_METHOD"]
            self._HTTPChannel__path = env["REQUEST_URI"][len(self.prefix):]
            self._HTTPChannel__version = env["SERVER_PROTOCOL"]
            self.transport.setPeer(("INET", env["REMOTE_ADDR"], int(env["REMOTE_PORT"])))
            self.transport.setHost(("INET", env["SERVER_NAME"], int(env["SERVER_PORT"])))

            self.allHeadersReceived()
            self.allContentReceived()
                
    def requestDone(self, request):
        self.transport.loseConnection()

    def connectionMade(self):
        self.transport = SCGITransport(self.transport)

class SCGISite(server.Site):
    def __init__(self, resource, prefix = ""):
        server.Site.__init__(self, resource)
        self.protocol = SCGIChannel
        self.prefix = prefix

    # XXX: Fix when twisted.web.server.Site starts using self.protocol()
    def buildProtocol(self, addr):
        """Generate a channel attached to this site.
        """
        channel = self.protocol()
        channel.requestFactory = server.Request
        channel.site = self
        channel.factory = self
        channel.prefix = self.prefix
        return channel

def main():
    from twisted.internet import reactor
    from twisted.web import resource, widgets

    class IndexDisplay(widgets.Presentation):
        template = """<h1>Index</h1>"""

    gdgt = widgets.Gadget()
    gdgt.putWidget('', IndexDisplay())
    site = SCGISite(gdgt, "/jobsearch")
    site.protocol = SCGIChannel
    reactor.listenTCP(4000, site)
    reactor.run()

if __name__ == "__main__":
    main()

From glyph at twistedmatrix.com  Sat Dec 21 08:11:11 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Dec 2002 07:11:11 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
Message-ID: <20021221.071111.48667858.glyph@twistedmatrix.com>


I'm thinking of making some pretty substantial changes to the way that Twisted
deals with Sessions, as part of re-writing twisted.web.guard to work with
Woven.

Internally there are very few places where it's called (mostly in
twisted.web.guard, which is exactly what I'm looking to get rid of ...) and it
is a very naive, error-prone implementation.

I'm just wondering how many of you out there are using sessions currently, and
in what capacity, to see what upgrade path, if any, I should provide.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021221/93aabdf1/attachment.pgp 

From nbm at mithrandr.moria.org  Sat Dec 21 10:11:07 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Sat, 21 Dec 2002 17:11:07 +0200
Subject: [Twisted-Python] PcapIO
Message-ID: <20021221151107.GB9169@mithrandr.moria.org>

Hi again,

I'm currently using this PcapIO class in a traffic analyser, and thought
people might find it useful, possibly for inclusion in twisted.  It
relies on pylibpcap (http://pylibpcap.sourceforge.net/).  If interested,
it's easy enough to use the example code in the pylibpcap distribution
in your protocol's dataReceived.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

# system imports
import pcap
import sys

# Twisted Imports
from twisted.internet import abstract, protocol

# Sibling Imports
import pcapprotocol

class PcapIO(abstract.FileDescriptor):
    def __init__(self, protocol, dev):
        """Create me with a device dev to listen on.  Should probably
        accept files too, and allow choice of device promiscuity and
        snap lengths.
        """
        abstract.FileDescriptor.__init__(self)

        p = pcap.pcapObject()
        p.open_live(dev, 1600, 0, 100)
        p.setnonblock(1)

        self.fn = p.fileno()
        self.pcap = p
        self.protocol = protocol
        self.protocol.makeConnection(self)
        self.startReading()

    def fileno(self):
        return self.fn

    def doRead(self):
        try:
            output = self.pcap.next()
        except IOError, ioe:
            if ioe.args[0] == errno.EAGAIN:
                return
            else:
                return CONNECTION_LOST
        if not output:
            return CONNECTION_LOST
        self.protocol.dataReceived(output)

    def connectionLost(self, reason):
        self.protocol.connectionLost()

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Dec 21 12:26:04 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 21 Dec 2002 12:26:04 -0500
Subject: [Twisted-Python] usage of sessions in twisted.web?
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
Message-ID: <3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>

Glyph Lefkowitz wrote:

> I'm just wondering how many of you out there are using sessions currently, and
> in what capacity, to see what upgrade path, if any, I should provide.

We are not using sessions yet, but plan to in the near future.  
Currently we are using the twisted xmlrpc for communication 
to our GUI client (developed using wxPython), but we also 
plan to have a browser interface (almost certainly using Woven), 
a SOAP interface, and quite possibly others (e.g., PB and/or 
CORBA).  Do you plan to make your new Sessions implementation 
general enough to support all of these?  (Given your usual 
sound architectural principles, I would expect so, but you 
might have practical reasons to make it more specific, so just 
thought I'd ask. :^)

Cheers,
-- Steve.



From glyph at twistedmatrix.com  Sat Dec 21 15:22:39 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Dec 2002 14:22:39 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
	<3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021221.142239.20477130.glyph@twistedmatrix.com>

On Sat, 21 Dec 2002 12:26:04 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> We are not using sessions yet, but plan to in the near future.  

Good... the "near future" will be a good time to start :-)

> Currently we are using the twisted xmlrpc for communication to our GUI client
> (developed using wxPython), but we also plan to have a browser interface
> (almost certainly using Woven), a SOAP interface, and quite possibly others
> (e.g., PB and/or CORBA).

Wow!  Did Twisted inspire you to use such a diverse assortment of frontends, or
was it part of your charter and why you chose it in the first place? :)

> Do you plan to make your new Sessions implementation general enough to
> support all of these?

This is a hard question to answer as asked, so I'll take this opportunity to
lay out my vision for how multi-protocol "sessions" are supposed to work.

There are two answers: yes, I plan to make Session part of a system general
enough to support all of these front-ends.  Also: no, I do not plan to make
Session general enough to support all these itself :-).  If you've been a good
disciple of the Twisted Way, you'll have a Service with Perspectives that
represent the way that users interact with your system.  That's the focal point
of the conversations your users will have with your abstractions.  Web session
management is a mostly-separate system, more of a kludge over the HTTP protocol
than a general way of representing stateful interaction.  The cool thing about
the new web session wrapper (now checked into CVS in twisted.web.woven.guard)
is the fact that it can negotiate with the browser to discover whether cookies
are turned on, more or less automatically, and provide effectively the same
experience whether they are or not.

I'm still working on the web part of the cross-protocol part of this system.
In twisted.cred, there are 4 real abstractions documented so far: identity,
perspective, service, authorizer.  There is a 5th though, which has really only
been used by PB so far: the notion of a "client object".  (That's a terrible
name, I know, but it seems to describe its function.)

Abstractly, the client object is representative of the "other side" of some
connection to the user.  In PB, it's usually a RemoteReference that the client
sends as part of the authentication sequence, so the service's side of the
interface to this object will often be through callRemote.  (There are no
restrictions on what kind of object it is, though, so your service is welcome
to do whatever is appropriate.)

In the case of something like IRC, the "client" will simply be an instance
wrapping the IRC Protocol instance.  For the web, it will be an object stuck to
your Session (which has been initialized using the handshake code above).  In
the PB case, it's an instance of an object on the other side of the Broker, as
I said above.

Once you've decided what kind of client object you're using, however, the
'attached' method of your perspective will be called with it.  When you log out
/ your broker goes stale / your IRC connection drops / your web session times
out, the symmetric "detached" method is called.

I hope that this explains what how should be expecting to use the
authentication part of the new twisted.web.woven.guard once it's finished, but
feel free to ask for clarification.  I really can't think of how to express
this well :-).

> (Given your usual sound architectural principles, I would expect so, but you
> might have practical reasons to make it more specific, so just thought I'd
> ask. :^)

-YES-.  MY DESIGN-FU IS STRONG RARARA

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021221/9d379ced/attachment.pgp 

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Dec 21 15:47:24 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 21 Dec 2002 15:47:24 -0500
Subject: [Twisted-Python] usage of sessions in twisted.web?
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
		<3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov> <20021221.142239.20477130.glyph@twistedmatrix.com>
Message-ID: <3E04D35C.6406DDA3@beeblebrox.gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> On Sat, 21 Dec 2002 12:26:04 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> > We are not using sessions yet, but plan to in the near future.
> 
> Good... the "near future" will be a good time to start :-)

And my usage of the word "near" is very, um, relative there ... ;^)

> > Currently we are using the twisted xmlrpc for communication to our GUI client
> > (developed using wxPython), but we also plan to have a browser interface
> > (almost certainly using Woven), a SOAP interface, and quite possibly others
> > (e.g., PB and/or CORBA).
> 
> Wow!  Did Twisted inspire you to use such a diverse assortment of frontends, or
> was it part of your charter and why you chose it in the first place? :)

Yes.  :^)  It *is* part of our charter (which is to integrate things), 
but the prospects of our actually being able to implement this kind of 
diversity looked pretty slim until I discovered Twisted ... 

> > Do you plan to make your new Sessions implementation general enough to
> > support all of these?
> 
> This is a hard question to answer as asked, so I'll take this opportunity to
> lay out my vision for how multi-protocol "sessions" are supposed to work.
> 
> There are two answers: yes, I plan to make Session part of a system general
> enough to support all of these front-ends.  Also: no, I do not plan to make
> Session general enough to support all these itself :-).  

This is really the best answer I could have hoped for.  

> ... If you've been a good
> disciple of the Twisted Way, you'll have a Service with Perspectives that
> represent the way that users interact with your system.  That's the focal point
> of the conversations your users will have with your abstractions.  ...

Understood.  I'm just beginning work on the authentication aspects 
of our Service, which will use Perspectives and the dbauth stuff.  

> [ nice high-level explanation elided ... ]
> I hope that this explains what how should be expecting to use the
> authentication part of the new twisted.web.woven.guard once it's finished, but
> feel free to ask for clarification.  I really can't think of how to express
> this well :-).

That's just the right amount of explanation for now -- sounds like 
just the thing we'll need.  Please continue your sorcery!  

Thanks!
-- Steve.



From HaraldMassa at ghum.de  Sat Dec 21 16:12:57 2002
From: HaraldMassa at ghum.de (Harald Massa)
Date: Sat, 21 Dec 2002 22:12:57 +0100
Subject: [Twisted-Python] random security thoughts
Message-ID: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>

Glyph,
I was reading you Mail in the archive:
>Here is some internal rambling I've been doing about fixing up PB to be more
>bulletproof.  Apologies if it's not coherent to anyone else but I figured I'd
>better mention the idea on the list and see of someone smarter than me can fill
>in a gap or two :).
And actually I'm thinking about security in client/server and multi-tier communiation.
One idea I liked to discuss is:
why not crypt the transmitted data via public / private keys? 
So sending bad objects from somewhere would be a very hard process.

What do you think?

Harald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021221/6cebdc39/attachment.htm 

From twisted at moshez.org  Sun Dec 22 01:35:29 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 22 Dec 2002 06:35:29 -0000
Subject: [Twisted-Python] random security thoughts
In-Reply-To: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>
References: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>
Message-ID: <20021222063529.15910.qmail@green.zadka.com>

On Sat, 21 Dec 2002, "Harald Massa" <HaraldMassa at ghum.de> wrote:

> One idea I liked to discuss is:
> why not crypt the transmitted data via public / private keys?=20
> So sending bad objects from somewhere would be a very hard process.

Well, you have a server trusting the client. This is usually a no-no.
*Any* data you receive, no matter how well signed, should usually not
be trusted to not crash your application, unless that is the kind of
application you design (that is, a remote-control application).



From tv at twistedmatrix.com  Sat Dec 21 15:54:06 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 21 Dec 2002 22:54:06 +0200
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221.071111.48667858.glyph@twistedmatrix.com>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
Message-ID: <20021221205406.GA17366@ki.yok.utu.fi>

On Sat, Dec 21, 2002 at 07:11:11AM -0600, Glyph Lefkowitz wrote:
> I'm thinking of making some pretty substantial changes to the way that Twisted
> deals with Sessions, as part of re-writing twisted.web.guard to work with
> Woven.
> 
> Internally there are very few places where it's called (mostly in
> twisted.web.guard, which is exactly what I'm looking to get rid of ...) and it
> is a very naive, error-prone implementation.
> 
> I'm just wondering how many of you out there are using sessions currently, and
> in what capacity, to see what upgrade path, if any, I should provide.

	Ldaptor uses HTTP sessions for all everything else but
	read-only operations. A connection to the LDAP server is
	actually stored into the HTTP session data. One specific
	requirement is the ability to expire the HTTP session and
	ask for reauthentication when the LDAP server connection
	is lost.

	All in all, I suggest reading ldaptor sources, if you have
	time and can suppress the vomiting reflex -- there are parts
	that make me sick, too. But in general it's starting to shape
	up nicely.

	PS. Losing POST form input due to missing authentication
	sucks. If you can find a clean way around that, I would
	appreciate it.

-- 
:(){ :|:&};:



From lordvan at lordvan.com  Sun Dec 22 09:59:04 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 22 Dec 2002 15:59:04 +0100 (CET)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221205406.GA17366@ki.yok.utu.fi>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
        <20021221205406.GA17366@ki.yok.utu.fi>
Message-ID: <65235.62.47.64.183.1040569144.squirrel@mail-at.net>

I'll need sessions soon too ..

but please write some nice docs/examples *G*

greetings, LordVan

<quote who="Tommi Virtanen">
> On Sat, Dec 21, 2002 at 07:11:11AM -0600, Glyph Lefkowitz wrote:
>> I'm thinking of making some pretty substantial changes to the way that
>> Twisted deals with Sessions, as part of re-writing twisted.web.guard
>> to work with Woven.
>>
>> Internally there are very few places where it's called (mostly in
>> twisted.web.guard, which is exactly what I'm looking to get rid of
>> ...) and it is a very naive, error-prone implementation.
>>
>> I'm just wondering how many of you out there are using sessions
>> currently, and in what capacity, to see what upgrade path, if any, I
>> should provide.
>
> 	Ldaptor uses HTTP sessions for all everything else but
> 	read-only operations. A connection to the LDAP server is
> 	actually stored into the HTTP session data. One specific
> 	requirement is the ability to expire the HTTP session and
> 	ask for reauthentication when the LDAP server connection
> 	is lost.
>
> 	All in all, I suggest reading ldaptor sources, if you have
> 	time and can suppress the vomiting reflex -- there are parts
> 	that make me sick, too. But in general it's starting to shape
> 	up nicely.
>
> 	PS. Losing POST form input due to missing authentication
> 	sucks. If you can find a clean way around that, I would
> 	appreciate it.
>
> --
> :(){ :|:&};:
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From twisted at moshez.org  Sun Dec 22 12:05:21 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 22 Dec 2002 17:05:21 -0000
Subject: [Twisted-Python] Letting me (or the list) know about stuff
Message-ID: <20021222170521.19759.qmail@green.zadka.com>

Dear Twisted Developers,

As you may know, I am the Debian maintainer of Twisted. As you may also
know, the debian packages get built during the normal Twisted build.
Because of that, it often turns out that when the Debian packages Twisted
development machines use internally built, I am not present physically.
In fact, much work has been done to automate this process. However, sometimes
the Debian side of things needs to be managed. For example, new conch scripts
must be moved to the twisted-conch package, so I need to know when new
conch scripts get uploaded. Similarily, if Twisted gains the ability to use
a new external Python module, I need to know about that to properly indicate
that in the control package. Because of that, I request that whenever you
make a change like adding new scripts or adding new toplevel package, or
anything major, please drop either the list or me personally an e-mail about
this so I can respond to it in time. Please *do not* take this to mean you
should fiddle in the debian/ dir: what you should do is *send e-mail* to
*me or the list*.

Thanks in advance,
Your Debian maintainer,
Moshe Zadka

PS
Packages I upload to Debian I always build myself. But even then, some
changes sometimes slip by me.



From glyph at twistedmatrix.com  Sun Dec 22 12:13:25 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Dec 2002 11:13:25 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221205406.GA17366@ki.yok.utu.fi>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
	<20021221205406.GA17366@ki.yok.utu.fi>
Message-ID: <20021222.111325.20555732.glyph@twistedmatrix.com>


There's some good news, and some bad news.  First the bad news:

On Sat, 21 Dec 2002 22:54:06 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> All in all, I suggest reading ldaptor sources, if you have time and can
> suppress the vomiting reflex -- there are parts that make me sick, too. But
> in general it's starting to shape up nicely.

I just did so.  Ldaptor itself didn't gross me out too much.  However, the
webui module was... unfortunate :-(.  I notice you're using web.widgets (which
we have noisily been attempting to deprecate for the last 3 months or so) for
the UI.  I don't think there's really much of an upgrade path beyond "rewrite
most of your web UI logic", especially if you want to take advantage of some of
the new features coming online in woven.

Now for some good news:

Everything you're doing now will continue to work for quite some time into the
future, since twisted.web.widgets was the only way to do dynamic content in
Twisted for most of its lifetime.  Even the server.Session and
guard.ResourceGuard classes are being left in place and gradually deprecated in
favor of woven.guard.SessionWrapper and woven.guard.PerspectiveWrapper.  You
should be able to migrate one function at a time very gradually.

> Ldaptor uses HTTP sessions for all everything else but read-only
> operations. A connection to the LDAP server is actually stored into the HTTP
> session data. One specific requirement is the ability to expire the HTTP
> session and ask for reauthentication when the LDAP server connection is lost.

The new woven.guard module will feature not only session expiry but
authentication expiry without creating a new session.  Additionally it will
support URL-based sessions if your browser doesn't feel like allowing cookies.

It will also feature a more graceful way to log in to multiple perspectives at
a time.  If your application is amenable to it, you may even be able to perform
a simple sort of web-based capability exchange, where you can temporarily give
another user a limited permission to act as you in some regards but not others,
by exchanging a generated session URL.

> PS. Losing POST form input due to missing authentication sucks. If you can
> find a clean way around that, I would appreciate it.

And of course this will be fixed :-).  There are many reasons why I *wanted* to
rewrite the sessions stuff, but this is why I *had* to do it.  Pretty much
everything in the world that I need to be authenticated involves at least 3
form POSTs.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021222/8e02b676/attachment.pgp 

From nbm at mithrandr.moria.org  Mon Dec 23 10:26:58 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 23 Dec 2002 17:26:58 +0200
Subject: [Twisted-Python] SNMP support
Message-ID: <20021223152658.GA19263@mithrandr.moria.org>

Hi again,

I needed SNMP (client) support for something I'm writing, and managed to
hack my way to something that seems to work this aftenoon, based loosely
on the DNS Boss system that was in 1.0.0.  It uses the pure-python
pysnmp (http://pysnmp.sourceforge.net/) for message encoding/decoding.

I don't know whether this is the best way to organise this sort of
thing, but it seemed to be about the only way to handle UDP effectively.
I have no idea if I should be relying on transport.getHost() to return
the same value at send time and receive time, and different from every
other queries.  There doesn't seem to be a way to request an ID for the
SNMP request, but that may just be me not knowing how things work.

Anyway, I'd like to know how people would like this reworked, especially
if they can tell me how to think about it in a more twisted and/or
pythonic way.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.internet import defer, protocol, reactor, udp

from pysnmp.proto import v1, v2c

class SNMPBoss:
    def __init__(self, server, version = "1", community = "public"):
        try:
            snmp = eval('v' + version)
        except (NameError, AttributeError):
            print 'Unsupported SNMP protocol version: %s\n%s' % (version, usage)

        self.snmp = snmp
        self.community = community

        self.queries = {}
        self.server = server

        self.factory = protocol.Factory()
        self.factory.protocol = SNMPRequest
        self.factory.boss = self
        
    def gotResponse(self, peerinfo, data):
        (snmp, deferred) = self.queries[peerinfo]
        rsp = snmp.GetResponse()
        rsp.decode(data)
        deferred.callback(rsp)

    def makeRequest(self, oid):
        d = defer.Deferred()
        t = udp.Port(0, self.factory)
        t.startListening()
        transport = t.createConnection(self.server)
        self.queries[t.getHost()] = (self.snmp, d)
        transport.protocol.query(self.snmp, self.community, oid)
        return d

class SNMPRequest(protocol.Protocol):
    def query(self, snmp, community, oid):
        self.snmp = snmp
        self.req = snmp.GetRequest()
        self.req['community'].set(community)
        self.req['pdu']['get_request']['variable_bindings'].append(snmp.VarBind(name=snmp.ObjectName(oid)))
        self.transport.write(self.req.encode())

    def dataReceived(self, answer):
        self.factory.boss.gotResponse(self.transport.getHost(), answer)
        self.transport.loseConnection()

def success(rsp):
    oids = map(lambda x: x['name'].get(), \
        rsp['pdu'].values()[0]['variable_bindings'])
    vals = map(lambda x: x['value'], \
        rsp['pdu'].values()[0]['variable_bindings'])
    # Print out results
    for (oid, val) in map(None, oids, vals):
        print oid, ' ---> ', val.values()[0]

def makeQuery(boss):
    d = boss.makeRequest("1.3.6.1.2.1.2.2.1.10.2")
    d2 = boss.makeRequest("1.3.6.1.2.1.2.2.1.10.3")
    d.addCallback(success)
    d2.addCallback(success)
    reactor.callLater(5, makeQuery, (boss))

def main():
    boss = SNMPBoss(("archive",161), "2c" )
    reactor.callLater(1, makeQuery, (boss))
    reactor.run()

if __name__ == "__main__":
    main()

From twisted at itamarst.org  Mon Dec 23 11:19:53 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 11:19:53 -0500
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223111953.4fc0b692.twisted@itamarst.org>

On Mon, 23 Dec 2002 17:26:58 +0200
Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> I don't know whether this is the best way to organise this sort of
> thing, but it seemed to be about the only way to handle UDP
> effectively.

Never ever ever use udp or tcp modules directly. Always use reactor
APIs, e.e reactor.listenUDP and so on - they are documented in
twiusted.internet.interfaces.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Mon Dec 23 11:23:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 11:23:38 -0500
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223112338.370b6b47.twisted@itamarst.org>

You seem to be using the old UDP API - 1.0.1 has a new, much nicer API.



From skin_pup-twisted at damnable.happypoo.com  Mon Dec 23 12:09:03 2002
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Mon, 23 Dec 2002 12:09:03 -0500
Subject: [Twisted-Python] ReconnectingClientFactory
Message-ID: <20021223170903.GR32927@shitbomb.com>

ReconnectingClientFactory could not be pickled.  This did not seam to make
much sence :), well the cleanest way I could get it to is the
following.  It really is far from clean but works for me at least for me
now.  

Jeremy Rossi 


--- protocol.py	Mon Oct  7 20:29:22 2002
+++ protocol2.py	Mon Dec 23 12:00:10 2002
@@ -192,28 +192,24 @@
     retries = 0
     maxRetries = None
     _callID = None
+    _stop = None
     connector = None
 
     def clientConnectionFailed(self, connector, reason):
-        self.connector = connector
         if not reason.check(error.UserError):
-            self.retry()
+            self.retry(connector)
 
     def clientConnectionLost(self, connector, unused_reason):
-        self.connector = connector
-        self.retry()
+        self.retry(connector)
 
     def retry(self, connector=None):
         """Have this connector connect again, after a suitable delay.
         """
         if connector is None:
-            if self.connector is None:
-                raise ValueError("no connector to retry")
-            else:
-                connector = self.connector
+            raise ValueError("no connector to retry")
 
         self.retries += 1
-        if self.maxRetries is not None and (self.retries > self.maxRetries):
+        if self._stop or (self.maxRetries is not None and (self.retries > self.maxRetries)):
             log.msg("Abandoning %s after %d retries." %
                     (connector, self.retries))
             return
@@ -225,18 +221,13 @@
             
         log.msg("%s will retry in %d seconds" % (connector, self.delay,))
         from twisted.internet import reactor
-        self._callID = reactor.callLater(self.delay, connector.connect)
+        reactor.callLater(self.delay, connector.connect)
 
     def stopTrying(self):
         """I put a stop to any attempt to reconnect in progress.
         """
-        # ??? Is this function really stopFactory?
-        if self._callID:
-            self._callID.cancel()
-        if self.connector and self.connector.state == "connecting":
-            # Hopefully this doesn't just make clientConnectionFailed
-            # retry again.
-            self.connector.stopConnecting()
+        # XXX CHeap work around
+        self._stop = 1
 
     def resetDelay(self):
         """Call me after a successful connection to reset.




From bob at redivi.com  Mon Dec 23 15:52:01 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 23 Dec 2002 15:52:01 -0500
Subject: [Twisted-Python] DelayedCall enhancements
Message-ID: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>

Here's a patch that adds two particularly useful methods to the 
IDelayedCall interface and implementation.  It's quite possible to do 
it currently, but it's a kludge.

Essentially what I added were methods to delay a DelayedCall by a 
configurable amount of time, and to reset a DelayedCall to happen a 
configurable amount of time from now.

I also added a test case for each, and they pass.  I can check it in if 
someone gives me the OK.

-bob


Index: twisted/internet/interfaces.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/interfaces.py,v
retrieving revision 1.57
diff -r1.57 interfaces.py
317a318,319
 >                   It also may be rescheduled by calling its C{delay()}
 >                   or C{reset()} methods.
347a350,370
 >     def delay(self, secondsLater):
 >         """Delay the scheduled call.
 >         @param secondsLater: how many seconds from its current firing 
time to delay
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
 >
 >     def reset(self, secondsFromNow):
 >         """Reset the scheduled call's timer.
 >         @param secondsLater: how many seconds from now it should 
fire, equivalent
 >                              to C{self.cancel()} and then doing 
another
 >                              C{reactor.callLater(secondsLater, ...)}
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.29
diff -r1.29 base.py
48c48
<     def __init__(self, time, func, args, kw, cancel):
---
 >     def __init__(self, time, func, args, kw, cancel, reset):
49a50
 >         self.resetter = reset
61a63,79
 >     def reset(self, secondsFromNow):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time = time() + secondsFromNow
 >             self.resetter(self)
 >
 >     def delay(self, secondsLater):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time += secondsLater
 >             self.resetter(self)
266c284,290
<         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove)
---
 >         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove, self._resetCallLater)
 >         insort(self._pendingTimedCalls, tple)
 >         return tple
 >
 >     def _resetCallLater(self, tple):
 >         assert tple in self._pendingTimedCalls
 >         self._pendingTimedCalls.remove(tple)
Index: twisted/test/test_internet.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_internet.py,v
retrieving revision 1.13
diff -r1.13 test_internet.py
102a103,128
 >     def _resetcallback(self):
 >         self._resetcallbackTime = time.time()
 >
 >     def _delaycallback(self):
 >         self._delaycallbackTime = time.time()
 >
 >     def testCallLaterDelayAndReset(self):
 >         self._resetcallbackTime = None
 >         self._delaycallbackTime = None
 >         ireset = reactor.callLater(0.5, self._resetcallback)
 >         idelay = reactor.callLater(0.5, self._delaycallback)
 >         start = time.time()
 >         # chug a little before delaying
 >         while time.time() - start < 0.2:
 >             reactor.iterate(0.01)
 >         ireset.reset(0.3)
 >         idelay.delay(0.3)
 >         # both should be called sometime during this
 >         while time.time() - start < 0.9:
 >             reactor.iterate(0.01)
 >         self.assert_(0 < self._resetcallbackTime - start - 0.5 < 0.2)
 >         self.assert_(0 < self._delaycallbackTime - start - 0.8 < 0.2)
 >
 >         del self._resetcallbackTime
 >         del self._delaycallbackTime
 >




From twisted at itamarst.org  Mon Dec 23 15:57:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 15:57:07 -0500
Subject: [Twisted-Python] DelayedCall enhancements
In-Reply-To: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>
References: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>
Message-ID: <20021223155707.716f3afd.twisted@itamarst.org>

On Mon, 23 Dec 2002 15:52:01 -0500
Bob Ippolito <bob at redivi.com> wrote:

> Here's a patch that adds two particularly useful methods to the 
> IDelayedCall interface and implementation.  It's quite possible to do 
> it currently, but it's a kludge

i like it.



From nbm at mithrandr.moria.org  Mon Dec 23 16:46:02 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 23 Dec 2002 23:46:02 +0200
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223214602.GA20819@mithrandr.moria.org>

On Mon 2002-12-23 (17:26), Neil Blakey-Milner wrote:
> Anyway, I'd like to know how people would like this reworked, especially
> if they can tell me how to think about it in a more twisted and/or
> pythonic way.

Thanks to Itamar and Moshez for comments.  Updated to 1.0.1 udp (much
nicer), and added multiple oid queries.

I don't like the way things fail when they do.  If the host does not
exist in DNS, I get:
exceptions.AttributeError: 'NoneType' object has no attribute 'getHost'
because the transport doesn't exist if the DNS fails.

If the server is not running SNMP, I get:
socket.error: (61, 'Connection refused')
from udp.Port.doRead(), since it excepts to calling log.deferr.  My
requests do subsequently timeout, though, but I can't remove them from
my queries list.

Am I doing anything wrong? I just copied the general idea from the DNS
code again.

I also wonder whether I should be setting a timeout within the "boss",
even a configurable one.  Would it be better to leave it to the user as
to whether to wait, or assume a default if they don't pass a timeout to
the query and/or "boss"?

Thanks again,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.internet import defer, protocol, reactor, udp

from pysnmp.proto import v1, v2c

class SNMPv1Boss:
    def __init__(self, server, port = 161, community = "public"):
        self.snmp = v1
        self.community = community

        self.queries = {}
        self.server = server
        self.port = port

    def gotResponse(self, peerinfo, data):
        if self.queries.has_key(peerinfo):
            (snmp, deferred) = self.queries[peerinfo]
            rsp = snmp.GetResponse()
            rsp.decode(data)
            deferred.callback(rsp)
            del self.queries[peerinfo]

    def makeRequest(self, oids):
        d = defer.Deferred()
        req = SNMPRequest()
        req.boss = self
        reactor.connectUDP(self.server, self.port, req)
        req.id = req.transport.getHost()
        self.queries[req.id] = (self.snmp, d)
        req.query(self.snmp, self.community, oids)
        d.setTimeout(5)
        return d

class SNMPv2Boss(SNMPv1Boss):
    def __init__(self, server, port = 161, community = "public"):
        SNMPv1Boss.__init__(self, server, port, community)
        self.snmp = v2c

class SNMPRequest(protocol.ConnectedDatagramProtocol):
    def query(self, snmp, community, oids):
        self.snmp = snmp
        self.req = snmp.GetRequest()
        self.req['community'].set(community)
        self.req['pdu']['get_request']['variable_bindings'].extend(map(lambda x: snmp.VarBind(name=snmp.ObjectName(x)), oids))
        self.transport.write(self.req.encode())

    def datagramReceived(self, answer):
        self.boss.gotResponse(self.id, answer)
        self.transport.loseConnection()

def success(rsp):
    oids = map(lambda x: x['name'].get(), \
        rsp['pdu'].values()[0]['variable_bindings'])
    vals = map(lambda x: x['value'], \
        rsp['pdu'].values()[0]['variable_bindings'])
    # Print out results
    for (oid, val) in map(None, oids, vals):
        print oid, ' ---> ', val.values()[0]

def failed(reason):
    print reason

def makeQuery(boss):
    d = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.2"])
    d2 = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.3"])
    d.addCallbacks(success, failed)
    d2.addCallbacks(success, failed)
    d3 = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.2", "1.3.6.1.2.1.2.2.1.10.3"])
    d3.addCallbacks(success, failed)
    reactor.callLater(5, makeQuery, (boss))

def main():
    boss = SNMPv2Boss("archive", 161)
    reactor.callLater(1, makeQuery, (boss))
    reactor.run()

if __name__ == "__main__":
    main()

From tv-nospam.da39a3ee5e6b4b0d3255bfef95601890afd80709 at tv.debian.net  Mon Dec 23 07:20:21 2002
From: tv-nospam.da39a3ee5e6b4b0d3255bfef95601890afd80709 at tv.debian.net (Tommi Virtanen)
Date: Mon, 23 Dec 2002 14:20:21 +0200
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021222.111325.20555732.glyph@twistedmatrix.com>
References: <20021221.071111.48667858.glyph@twistedmatrix.com> <20021221205406.GA17366@ki.yok.utu.fi> <20021222.111325.20555732.glyph@twistedmatrix.com>
Message-ID: <20021223122021.GA2481@ki.yok.utu.fi>

On Sun, Dec 22, 2002 at 11:13:25AM -0600, Glyph Lefkowitz wrote:
> > All in all, I suggest reading ldaptor sources, if you have time and can
> > suppress the vomiting reflex -- there are parts that make me sick, too. But
> > in general it's starting to shape up nicely.
> I just did so.  Ldaptor itself didn't gross me out too much.  However, the
> webui module was... unfortunate :-(.  I notice you're using web.widgets (which
> we have noisily been attempting to deprecate for the last 3 months or so) for
> the UI.  I don't think there's really much of an upgrade path beyond "rewrite
> most of your web UI logic", especially if you want to take advantage of some of
> the new features coming online in woven.

	Oh, I *know*. It's just that the code has existed for ages
	already. I haven't figured out how to rewrite it _easily_
	bit-by-bit, so I may end up having to rewrite the whole and
	then just swapping out the old implementation. Which is
	horrible, as I'd have to work on two versions of it at the
	same time. But maybe this time around I'll figure out how to
	actually test the UI.

-- 
:(){ :|:&};:



From bob at mastersofbranding.com  Mon Dec 23 15:47:26 2002
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Mon, 23 Dec 2002 15:47:26 -0500
Subject: [Twisted-Python] DelayedCall enhancements
Message-ID: <BE9353E3-16B7-11D7-9430-000A95686CD8@mastersofbranding.com>

Here's a patch that adds two particularly useful methods to the 
IDelayedCall interface and implementation.  It's quite possible to do 
it currently, but it's a kludge.

Essentially what I added were methods to delay a DelayedCall by a 
configurable amount of time, and to reset a DelayedCall to happen a 
configurable amount of time from now.

I also added a test case for each, and they pass.  I can check it in if 
someone gives me the OK.

-bob


Index: twisted/internet/interfaces.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/interfaces.py,v
retrieving revision 1.57
diff -r1.57 interfaces.py
317a318,319
 >                   It also may be rescheduled by calling its C{delay()}
 >                   or C{reset()} methods.
347a350,370
 >     def delay(self, secondsLater):
 >         """Delay the scheduled call.
 >         @param secondsLater: how many seconds from its current firing 
time to delay
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
 >
 >     def reset(self, secondsFromNow):
 >         """Reset the scheduled call's timer.
 >         @param secondsLater: how many seconds from now it should 
fire, equivalent
 >                              to C{self.cancel()} and then doing 
another
 >                              C{reactor.callLater(secondsLater, ...)}
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.29
diff -r1.29 base.py
48c48
<     def __init__(self, time, func, args, kw, cancel):
---
 >     def __init__(self, time, func, args, kw, cancel, reset):
49a50
 >         self.resetter = reset
61a63,79
 >     def reset(self, secondsFromNow):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time = time() + secondsFromNow
 >             self.resetter(self)
 >
 >     def delay(self, secondsLater):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time += secondsLater
 >             self.resetter(self)
266c284,290
<         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove)
---
 >         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove, self._resetCallLater)
 >         insort(self._pendingTimedCalls, tple)
 >         return tple
 >
 >     def _resetCallLater(self, tple):
 >         assert tple in self._pendingTimedCalls
 >         self._pendingTimedCalls.remove(tple)
Index: twisted/test/test_internet.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_internet.py,v
retrieving revision 1.13
diff -r1.13 test_internet.py
102a103,128
 >     def _resetcallback(self):
 >         self._resetcallbackTime = time.time()
 >
 >     def _delaycallback(self):
 >         self._delaycallbackTime = time.time()
 >
 >     def testCallLaterDelayAndReset(self):
 >         self._resetcallbackTime = None
 >         self._delaycallbackTime = None
 >         ireset = reactor.callLater(0.5, self._resetcallback)
 >         idelay = reactor.callLater(0.5, self._delaycallback)
 >         start = time.time()
 >         # chug a little before delaying
 >         while time.time() - start < 0.2:
 >             reactor.iterate(0.01)
 >         ireset.reset(0.3)
 >         idelay.delay(0.3)
 >         # both should be called sometime during this
 >         while time.time() - start < 0.9:
 >             reactor.iterate(0.01)
 >         self.assert_(0 < self._resetcallbackTime - start - 0.5 < 0.2)
 >         self.assert_(0 < self._delaycallbackTime - start - 0.8 < 0.2)
 >
 >         del self._resetcallbackTime
 >         del self._delaycallbackTime
 > 




From glyph at twistedmatrix.com  Tue Dec 24 09:19:05 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Dec 2002 08:19:05 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] Deprecating __getattr__, encourage people to
 use .callMethod
In-Reply-To: <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
References: <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
Message-ID: <20021224.081905.101479174.glyph@twistedmatrix.com>

On Tue, 24 Dec 2002 00:42:03 -0600, moshez CVS <moshez at twistedmatrix.com> wrote:
> Modified files:
> Twisted/doc/examples/xmlrpcclient.py 1.2 1.3
> Twisted/twisted/web/xmlrpc.py 1.14 1.15

I'm just curious why this method was called "callMethod" rather than
"callRemote", as with PB?  Is there some difference in semantics I'm not
getting?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021224/b2873a5a/attachment.pgp 

From bob at redivi.com  Tue Dec 24 09:30:12 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 24 Dec 2002 09:30:12 -0500
Subject: [Twisted-Python] DelayedCall enhancements
In-Reply-To: <20021223155707.716f3afd.twisted@itamarst.org>
Message-ID: <361652CA-174C-11D7-A675-000A95686CD8@redivi.com>

On Monday, Dec 23, 2002, at 15:57 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Mon, 23 Dec 2002 15:52:01 -0500
> Bob Ippolito <bob at redivi.com> wrote:
>
>> Here's a patch that adds two particularly useful methods to the
>> IDelayedCall interface and implementation.  It's quite possible to do
>> it currently, but it's a kludge
>
> i like it.
>

As per Itamar's recommendation, I didn't hear any flak for a day (and 
the tests still pass), so I've committed them.

-bob




From twisted at moshez.org  Tue Dec 24 10:38:22 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 24 Dec 2002 15:38:22 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] Deprecating __getattr__, encourage people to use .callMethod
In-Reply-To: <20021224.081905.101479174.glyph@twistedmatrix.com>
References: <20021224.081905.101479174.glyph@twistedmatrix.com>, <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
Message-ID: <20021224153822.20181.qmail@green.zadka.com>

On Tue, 24 Dec 2002, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> I'm just curious why this method was called "callMethod" rather than
> "callRemote", as with PB?  Is there some difference in semantics I'm not
> getting?

Probably not.
I renamed it to callRemote. This means that some places which were expecting
a PB object can now get an XML-RPC proxy object, which is inherently cool
(naturally there are some limitations)



From lac at strakt.com  Fri Dec 27 01:46:39 2002
From: lac at strakt.com (Laura Creighton)
Date: Fri, 27 Dec 2002 07:46:39 +0100
Subject: [Twisted-Python] would-be twisted user in comp.lang.python
Message-ID: <200212270646.gBR6kdTT032023@ratthing-b246.strakt.com>

In http://mail.python.org/pipermail/python-list/2002-December/136243.html
dsavitsk wants to hear from people who use Twisted as a web server:

	'Last, Twisted seems really cool, but I don't know much
	about it and am looking for feedback from someone who has 
	done this and can say whether it is a good options or not.'

Laura Creighton



From dsavitsk at mail.e-coli.net  Fri Dec 27 02:59:36 2002
From: dsavitsk at mail.e-coli.net (douglas savitsky)
Date: Thu, 26 Dec 2002 23:59:36 -0800
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
Message-ID: <200212262359.AA2820210938@mail.e-coli.net>

I installed Python (2.2.1) from the port.  I installed twisted 1.0.1 by downloading and running

#python ./setup.py install

as root, i ran 

#mktap web --path /usr/www --port 80

when i then run 

# coil web.tap

I get the following traceback:

Traceback (most recent call last):
  File "/usr/local/bin/coil", line 30, in ?
    run()
  File "/usr/local/lib/python2.2/site-packages/twisted/scripts/coil.py", line 89, in run
    p.load()
  File "/usr/local/lib/python2.2/site-packages/twisted/python/plugin.py", line 40, in load
    return namedModule(self.module)
  File "/usr/local/lib/python2.2/site-packages/twisted/python/reflect.py", line 372, in namedModule
    topLevel = __import__(name)
  File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
    from twisted.names import dns
ImportError: cannot import name dns

Is there an easy way around this?

thanks,

doug



From m at moshez.org  Fri Dec 27 04:40:12 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Dec 2002 09:40:12 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212262359.AA2820210938@mail.e-coli.net>
References: <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227094012.27818.qmail@green.zadka.com>

On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:

> #mktap web --path /usr/www --port 80

NEVER RUN MKTAP AS ROOT.
I mean it. twistd will run the server as the user who ran mktap, by default.
Thus, you want to run mktap as www-data or give appropriate --uid/--gid
flags.

> when i then run 
> 
> # coil web.tap

coil isn't in a real working order...



From exarkun at intarweb.us  Fri Dec 27 10:00:33 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 27 Dec 2002 10:00:33 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212262359.AA2820210938@mail.e-coli.net>
References: <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227150033.GA22004@meson.dyndns.org>

On Thu, Dec 26, 2002 at 11:59:36PM -0800, douglas savitsky wrote:
> [snip]
>   File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
>     from twisted.names import dns
> ImportError: cannot import name dns
> 
> Is there an easy way around this?
> 

  Man, we really messed this up :)  The coil stuff should have been removed,
but a few nasty things slipped by and got into the release. 
twisted.names.dns no longer exists; one solution is to remove all the code
referring to it from various locations, mainly plugins.tml.  As Moshe
pointed out in his response, though, coil is somewhat defunct :)   You
probably won't be able to do much useful with it even once it works.

  I can't load www.moshez.org at the moment (dunno why) but, if I'm not
mistaken, there's a link to Moshe's twisted-web, which is some sort of t.web
configurator, and may be more along the lines of what you're looking for. 
Perhaps he can elaborate on it a bit.

 Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:00am up 11 days, 9:45, 7 users, load average: 0.26, 0.09, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021227/f26f073d/attachment.pgp 

From radix at twistedmatrix.com  Fri Dec 27 13:12:19 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 27 Dec 2002 13:12:19 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <20021227150033.GA22004@meson.dyndns.org>
References: <200212262359.AA2820210938@mail.e-coli.net> <20021227150033.GA22004@meson.dyndns.org>
Message-ID: <20021227181219.GC7934@toshi>

On Fri, Dec 27, 2002 at 10:00:33AM -0500, Jp Calderone wrote:
> On Thu, Dec 26, 2002 at 11:59:36PM -0800, douglas savitsky wrote:
> > [snip]
> >   File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
> >     from twisted.names import dns
> > ImportError: cannot import name dns
> > 
> > Is there an easy way around this?
> > 
> 
>   Man, we really messed this up :)  The coil stuff should have been removed,
> but a few nasty things slipped by and got into the release. 

This long-standing annoyance should be going away soon; I've updated
the website with 1.0.2alpha1's docs (which don't mention coil) so
people won't be mislead any longer.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Fri Dec 27 14:09:45 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Dec 2002 19:09:45 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <20021227150033.GA22004@meson.dyndns.org>
References: <20021227150033.GA22004@meson.dyndns.org>, <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227190945.1929.qmail@green.zadka.com>

On Fri, 27 Dec 2002, Jp Calderone <exarkun at intarweb.us> wrote:

>   I can't load www.moshez.org at the moment (dunno why)

Power failure, apparently. It should be back up

> but, if I'm not
> mistaken, there's a link to Moshe's twisted-web, which is some sort of t.web
> configurator, and may be more along the lines of what you're looking for.

Unlikely.

A. t-w is on tm.com, as are all of my twisted-related stuff:
   http://twistedmatrix.com/users/moshez/apt/
B. t-w is a Debian specific package. I believe the OP was using FreeBSD
C. t-w is not a "twisted-web configurator": it's a flexible configuration
   system for Twisted-Web, where I do all the non-portable stuff (like 
   determining file placement and put /etc/init.d scripts). If the OP
   wants to switch to the One True OS, I believe t-w is perfectly usable
   with the last Twisted alphas (it won't work with 1.0.1 or below).

> Perhaps he can elaborate on it a bit.

I can.



From elloyd at lancaster.lib.pa.us  Fri Dec 27 15:05:19 2002
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Fri, 27 Dec 2002 15:05:19 -0500
Subject: [Twisted-Python] twisted.names.dns
Message-ID: <200212271505.19911.elloyd@lancaster.lib.pa.us>

Hi all,

We are planning to support some in-house DNS service starting next year, and 
since I've been playing with Twisted, I recall that there used to be 
something along the lines of a basic DNS server built on top of 
twisted.names. Has this been removed, refactored somewhere else, or 
abandoned? Is anyone working on a production-quality but simple DNS server?

Cheers,

Eron

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From twisted at itamarst.org  Fri Dec 27 15:11:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 27 Dec 2002 15:11:18 -0500
Subject: [Twisted-Python] twisted.names.dns
In-Reply-To: <200212271505.19911.elloyd@lancaster.lib.pa.us>
References: <200212271505.19911.elloyd@lancaster.lib.pa.us>
Message-ID: <20021227151118.4630616b.twisted@itamarst.org>

On Fri, 27 Dec 2002 15:05:19 -0500
Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:

> since I've been playing with Twisted, I recall that there used to be 
> something along the lines of a basic DNS server built on top of 
> twisted.names. Has this been removed, refactored somewhere else, or 
> abandoned? Is anyone working on a production-quality but simple DNS
> server?

JP (exarkun) has rewritten it completely - you probably want to look at
CVS or 1.0.2alpha1 release. I'm not sure about "production quality", but
it seems to be getting there pretty quickly.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From elloyd at lancaster.lib.pa.us  Fri Dec 27 15:22:42 2002
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Fri, 27 Dec 2002 15:22:42 -0500
Subject: [Twisted-Python] twisted.names.dns
In-Reply-To: <20021227151118.4630616b.twisted@itamarst.org>
References: <200212271505.19911.elloyd@lancaster.lib.pa.us> <20021227151118.4630616b.twisted@itamarst.org>
Message-ID: <200212271522.42592.elloyd@lancaster.lib.pa.us>

Awesome! I don't mean production-quality other than it not being flaky enough
to make our boss take notice and us get into trouble ;^). I'm going to try and 
use this opportunity to introduce Twisted to our organization, and you know 
how first impressions matter.

Thanks for the info,

Eron (earthtone)

On Friday 27 December 2002 3:11 pm, Itamar Shtull-Trauring wrote:
> On Fri, 27 Dec 2002 15:05:19 -0500
>
> Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:
> > since I've been playing with Twisted, I recall that there used to be
> > something along the lines of a basic DNS server built on top of
> > twisted.names. Has this been removed, refactored somewhere else, or
> > abandoned? Is anyone working on a production-quality but simple DNS
> > server?
>
> JP (exarkun) has rewritten it completely - you probably want to look at
> CVS or 1.0.2alpha1 release. I'm not sure about "production quality", but
> it seems to be getting there pretty quickly.

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From bob at redivi.com  Fri Dec 27 22:04:13 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 27 Dec 2002 22:04:13 -0500
Subject: [Twisted-Python] admin/runtests on OS X
Message-ID: <0B4F88C2-1A11-11D7-86B9-000A95686CD8@redivi.com>

Just FYI on this one, as of now there's a lot less tests that fail on 
OS X 10.2.3 (Python 2.2).  All of the SSH stuff seems to have been 
resolved, just a few lingering failures elsewhere.. Itamar had 
mentioned that the rebuild failure was due to Python 2.2, I haven't 
looked into why the others fail.

======================================================================
ERROR: testNormalTermination 
(twisted.test.test_process.PosixProcessTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_process.py", line 207, 
in testNormalTermination
     p.reason.trap(error.ProcessDone)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.ProcessTerminated, process ended with exit code 1
]
======================================================================
ERROR: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 276, in 
testReconnect
     factory.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testFailing (twisted.test.test_tcp.LoopbackTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 131, in 
testFailing
     clientF.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testMessages (twisted.test.test_unix.UnixSocketTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_smtp.py", line 146, in 
testMessages
     self.loopback(protocol, clientProtocol)
   File "/Users/bob/src/Twisted/twisted/test/test_unix.py", line 27, in 
loopback
     loopback.loopbackUNIX(client, server)
   File "/Users/bob/src/Twisted/twisted/protocols/loopback.py", line 
132, in loopbackUNIX
     reactor.iterate()
   File "/Users/bob/src/Twisted/twisted/internet/base.py", line 219, in 
iterate
     self.doIteration(delay)
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/default.py", line 547, 
in doSelect
     why = getattr(selectable, method)()
   File "/Users/bob/src/Twisted/twisted/internet/abstract.py", line 102, 
in doWrite
     self.unsent = self.unsent[l:]
exceptions.TypeError: sequence index must be integer
======================================================================
FAIL: testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_rebuild.py", line 73, 
in testFileRebuild
     assert b.b() == 'c'
AssertionError
----------------------------------------------------------------------
Ran 369 tests in 92.723s

FAILED (failures=1, errors=4)




From dsavitsk at mail.e-coli.net  Fri Dec 27 23:23:08 2002
From: dsavitsk at mail.e-coli.net (douglas savitsky)
Date: Fri, 27 Dec 2002 20:23:08 -0800
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
Message-ID: <200212272023.AA2080178424@mail.e-coli.net>

---------- Original Message ----------------------------------
From: Moshe Zadka <m at moshez.org>
Reply-To: twisted-python at twistedmatrix.com
Date: 27 Dec 2002 09:40:12 -0000

>On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:
>
>> #mktap web --path /usr/www --port 80
>
>NEVER RUN MKTAP AS ROOT.
>I mean it. twistd will run the server as the user who ran mktap, by default.
>Thus, you want to run mktap as www-data or give appropriate --uid/--gid
>flags.

FreeBSD will only allow root to bind ports lower than 1024.   further

mktap --port=80 --path=/usr/www --uid=65534 --gid=65534

says that --uid is not recognised.  last

man mktap 

says there is no manpage so I am not sure where to look for this.

so. if I can't run as root, how do I run

(
65534 was obtained from
>>> pwd.getpwnam ('nobody')[2:4]
)

-doug



From radix at twistedmatrix.com  Fri Dec 27 23:30:38 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 27 Dec 2002 23:30:38 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212272023.AA2080178424@mail.e-coli.net>
References: <200212272023.AA2080178424@mail.e-coli.net>
Message-ID: <20021228043038.GD7934@toshi>

On Fri, Dec 27, 2002 at 08:23:08PM -0800, douglas savitsky wrote:
> >On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:
> >
> >> #mktap web --path /usr/www --port 80
> >
> >NEVER RUN MKTAP AS ROOT.
> >I mean it. twistd will run the server as the user who ran mktap, by default.
> >Thus, you want to run mktap as www-data or give appropriate --uid/--gid
> >flags.
> 
> FreeBSD will only allow root to bind ports lower than 1024.   further

mktap doesn't bind ports, twistd does. The point is that you run
`mktap' as the user who you ultimately want the process to be run as,
and if you need root privelages to bind the ports it uses, run
`twistd' as root. It'll drop privs right after it binds.

> mktap --port=80 --path=/usr/www --uid=65534 --gid=65534
> 
> says that --uid is not recognised.  last

That's odd. Can you check the output of `mktap --help'? Also mktap
--version.

> man mktap 
> 
> says there is no manpage so I am not sure where to look for this.

If you're using the Ports Twisted package, maybe the problem is with
it? If you're using the tarball, the manpages are located in doc/man.

> so. if I can't run as root, how do I run

Run mktap as nobody (or, once you figure out what the problem is, with
the --uid option), and twistd as root.

> 
> (
> 65534 was obtained from
> >>> pwd.getpwnam ('nobody')[2:4]
> )

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Sat Dec 28 01:05:58 2002
From: m at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 06:05:58 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212272023.AA2080178424@mail.e-coli.net>
References: <200212272023.AA2080178424@mail.e-coli.net>
Message-ID: <20021228060558.8024.qmail@green.zadka.com>

On Fri, 27 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:

> FreeBSD will only allow root to bind ports lower than 1024.

So?

>   further
> 
> mktap --port=80 --path=/usr/www --uid=65534 --gid=65534
> 
> says that --uid is not recognised.  last

In the source distribution, mktap's man page is in doc/man/mktap.1



From twisted at moshez.org  Sat Dec 28 05:54:07 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 10:54:07 -0000
Subject: [Twisted-Python] Documentation Lacks
Message-ID: <20021228105407.10208.qmail@green.zadka.com>

Hi.
The following things are undocumented -- any volunteers would be welcome:
 - conch HOWTO
 - Twisted chat HOWTO (im, words server, writing bots)
 - Add tkmktap/tktwistd to basics.html
 - Twisted news HOWTO
 - Twisted names HOWTO




From m at moshez.org  Sat Dec 28 10:22:22 2002
From: m at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 15:22:22 -0000
Subject: [Twisted-Python] dict implementation buggy
Message-ID: <20021228152222.12273.qmail@green.zadka.com>

For example, there is not a single call to self.d.errback -- there should
probably be at least two, one if the connection is lost, and one if the
server sends an error.

However, this is the least of dict's problems -- the whole interface looks
backwards, as it should probably be nicely wrapped up in a factory, so it
can also errback on connection failed.

I would request some more initial quality control on new protocol
implementations.

Thanks,
Moshe Zadka




From corydodt at yahoo.com  Sat Dec 28 15:31:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Sat, 28 Dec 2002 12:31:08 -0800 (PST)
Subject: [Twisted-Python] FYI: runtests on win32
Message-ID: <20021228203108.21448.qmail@web10008.mail.yahoo.com>

I've put up some logs of admin/runtests so that people can see how we're
doing on Windows, merely to inform.  You can't fix bugs if you don't know
about them. :-)

With the default SelectReactor...
here: http://twistedmatrix.com/users/moonfallen/test.dump.txt (stderr of
runtests -t)
and
here: http://twistedmatrix.com/users/moonfallen/test.log.txt (test.log
file generated by runtests)

Some of the errors are from doing obviously unix-only things like fcntl,
symlinks, AF_UNIX sockets.  A few others are not so obvious.


Also with Win32Reactor...
here: http://twistedmatrix.com/users/moonfallen/testwin32.dump.txt
and
here: http://twistedmatrix.com/users/moonfallen/testwin32.log.txt

The additional errors in using this reactor seem to be bugs in the reactor.

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From exarkun at intarweb.us  Sat Dec 28 16:11:12 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 28 Dec 2002 16:11:12 -0500
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20021228105407.10208.qmail@green.zadka.com>
References: <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20021228211112.GA30315@meson.dyndns.org>

On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> Hi.
> The following things are undocumented -- any volunteers would be welcome:
> [snip]
>  - Add tkmktap/tktwistd to basics.html
> [snip]

  tktwistd isn't quite ready for actual use yet.  I'll see about adding
tkmktap, though.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 12 days, 9:45, 2 users, load average: 0.00, 0.00, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021228/ca717074/attachment.pgp 

From twisted at itamarst.org  Sat Dec 28 17:48:10 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Dec 2002 17:48:10 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <E18S7Z8-0003A9-00@pyramid.twistedmatrix.com>
References: <E18S7Z8-0003A9-00@pyramid.twistedmatrix.com>
Message-ID: <20021228174810.3533fb79.twisted@itamarst.org>

On Fri, 27 Dec 2002 21:23:10 -0600
etrepum CVS <etrepum at twistedmatrix.com> wrote:

>          # Send as much data as you can.
>          l = self.writeSomeData(self.unsent)
> -        if l < 0:
> +        if l < 0 or isinstance(l, Exception):
>              return l
>          if l == 0 and self.unsent:
>              result = 0


Hmmmm... I'm not sure if writeSomeData is ever supposed to return an
exception. Who was returning what?



From bob at redivi.com  Sat Dec 28 18:45:06 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 28 Dec 2002 18:45:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <20021228174810.3533fb79.twisted@itamarst.org>
Message-ID: <64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>

On Saturday, Dec 28, 2002, at 17:48 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Fri, 27 Dec 2002 21:23:10 -0600
> etrepum CVS <etrepum at twistedmatrix.com> wrote:
>
>>          # Send as much data as you can.
>>          l = self.writeSomeData(self.unsent)
>> -        if l < 0:
>> +        if l < 0 or isinstance(l, Exception):
>>              return l
>>          if l == 0 and self.unsent:
>>              result = 0
>
>
> Hmmmm... I'm not sure if writeSomeData is ever supposed to return an
> exception. Who was returning what?
>

Well, at a glance.. twisted.internet.process.ProcessWriter, 
twisted.internet.process.PTYProcess, and 
twisted.internet.tcp.Connection can return main.CONNECTION_LOST (an 
Exception), or an integer >= 0




From twisted at itamarst.org  Sat Dec 28 19:00:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Dec 2002 19:00:15 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>
References: <20021228174810.3533fb79.twisted@itamarst.org>
	<64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>
Message-ID: <20021228190015.5e65f08b.twisted@itamarst.org>

On Sat, 28 Dec 2002 18:45:06 -0500
Bob Ippolito <bob at redivi.com> wrote:

> Well, at a glance.. twisted.internet.process.ProcessWriter, 
> twisted.internet.process.PTYProcess, and 
> twisted.internet.tcp.Connection can return main.CONNECTION_LOST (an 
> Exception), or an integer >= 0

Oh yes, CONNECTION_LOST used to be a negative integer.



From jk at xylema.org  Sat Dec 28 23:56:07 2002
From: jk at xylema.org (John Kozak)
Date: Sun, 29 Dec 2002 04:56:07 +0000
Subject: [Twisted-Python] woven: one <input> for each ListItem
Message-ID: <15886.32871.387962.495105@gargle.gargle.HOWL>

Using woven, how do I create an <input/> for each Item in a List?

e.g. suppose I wanted to do something like
  <table model="aList" view="List">
    <tr>
       <td><input ???/></td>
       ... want these replicated
    </tr>
  </table>
how would I go about this?  I've tried a few guesses based on the
examples, but aren't getting anywhere.

thanks

John Kozak



From tv at twistedmatrix.com  Sun Dec 29 12:13:00 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 29 Dec 2002 19:13:00 +0200
Subject: [Twisted-Python] t.p.usage suggestion: '--option='
Message-ID: <20021229171300.GA18076@ki.yok.utu.fi>

	As it is now, twisted.python.usage will not
	allow parameters to have empty strings as
	values. That is, these are invalid currently:

		--foo=
		--foo=''  (the same thing, more explicitly)
		--foo ''

	I think t.p.usage should not be dictating
	such policy for its users.

	It seems this only concerns optParameters users, "def
	opt_foo(self, x)" seems to be immune to this problem if
	I'm reading the code correctly.

	All the above cases are easily detectable, Here's a suggested
	patch; tell me if you want me to commit.

Index: twisted/python/usage.py
===================================================================
RCS file: /cvs/Twisted/twisted/python/usage.py,v
retrieving revision 1.36
diff -u -r1.36 usage.py
--- twisted/python/usage.py	10 Nov 2002 10:45:36 -0000	1.36
+++ twisted/python/usage.py	29 Dec 2002 17:06:03 -0000
@@ -242,7 +242,7 @@
         self.opts[flagName] = 1
 
     def _generic_parameter(self, parameterName, value):
-        if value in ('', None):
+        if value is None:
             raise UsageError, ("Parameter '%s' requires an argument."
                                % (parameterName,))
 

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Sun Dec 29 12:18:36 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 29 Dec 2002 19:18:36 +0200
Subject: [Twisted-Python] t.w.widgets.Form and radio buttons
Message-ID: <20021229171836.GB18076@ki.yok.utu.fi>

	I know twisted.web.widgets is deprecated, but I still have
	lots of code using it. So, here's a new feature:

	Form support for radio buttons.

	They work pretty much equally to checkgroups. I didn't see a
	point in supporting a single radio button, so I only
	implemented the group support.

	If nobody complains, I'll commit this soonish:

Index: twisted/web/widgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/widgets.py,v
retrieving revision 1.72
diff -u -r1.72 widgets.py
--- twisted/web/widgets.py	16 Nov 2002 08:10:33 -0000	1.72
+++ twisted/web/widgets.py	29 Dec 2002 17:09:56 -0000
@@ -244,6 +244,12 @@
         checked = (checked and 'checked = "1"') or ''
         write('<INPUT TYPE="checkbox" NAME="%s" VALUE="%s" %s />%s<br />\n' % (name, optionName, checked, displayName))
 
+def htmlFor_radio(write, name, value):
+    "A radio button group."
+    for optionName, displayName, checked in value:
+        checked = (checked and 'checked = "1"') or ''
+        write('<INPUT TYPE="radio" NAME="%s" VALUE="%s" %s />%s<br />\n' % (name, optionName, checked, displayName))
+
 class FormInputError(Exception):
     pass
 
@@ -283,7 +289,8 @@
         'multimenu': htmlFor_multimenu,
         'password': htmlFor_password,
         'checkbox': htmlFor_checkbox,
-        'checkgroup': htmlFor_checkgroup
+        'checkgroup': htmlFor_checkgroup,
+        'radio': htmlFor_radio,
     }
 
     formParse = {
@@ -325,6 +332,8 @@
 
           - 'checkgroup': a group of checkboxes
 
+          - 'radio': a group of radio buttons
+
           - 'password': a 'string' field where the contents are not visible as the user types
 
           - 'file': a file-upload form (EXPERIMENTAL)
@@ -339,8 +348,8 @@
         The 'Input Value' is usually a string, but its value can depend on the
         'Input Type'.  'int' it is an integer, 'menu' it is a list of pairs of
         strings, representing (value, name) pairs for the menu options.  Input
-        value for 'checkgroup' should be a list of ('inputName', 'Display
-        Name', 'checked') triplets.
+        value for 'checkgroup' and 'radio' should be a list of ('inputName',
+        'Display Name', 'checked') triplets.
 
         The 'Description' field is an (optional) string which describes the form
         item to the user.
@@ -381,7 +390,7 @@
                         inputValue = 0
                 else:
                     inputValue = 0
-            elif inputType == 'checkgroup':
+            elif inputType in ('checkgroup', 'radio'):
                 if request.args.has_key(inputName):
                     keys = request.args[inputName]
                 else:
@@ -483,7 +492,7 @@
                         formData = 0
                 else:
                     formData = 0
-            elif inputType in ['checkgroup', 'multimenu']:
+            elif inputType in ['checkgroup', 'radio', 'multimenu']:
                 if args.has_key(inputName):
                     formData = args[inputName]
                     del args[inputName]


-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Sun Dec 29 13:00:54 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Dec 2002 12:00:54 -0600 (CST)
Subject: [Twisted-Python] woven: one <input> for each ListItem
In-Reply-To: <15886.32871.387962.495105@gargle.gargle.HOWL>
References: <15886.32871.387962.495105@gargle.gargle.HOWL>
Message-ID: <20021229.120054.59674026.glyph@twistedmatrix.com>


On Sun, 29 Dec 2002 04:56:07 +0000, "John Kozak" <jk at xylema.org> wrote:
> Using woven, how do I create an <input/> for each Item in a List?
> 
> e.g. suppose I wanted to do something like
>   <table model="aList" view="List">
>     <tr>
>        <td><input ???/></td>
>        ... want these replicated

Here you probably want something like

    <td listItemOf="aList"> <input view="setMyName" /> </td>

(setMyName is an imaginary view, but I am pretty sure you'll want the input
widget to have a different name based on what the listItem is...)

That will repeat the <td> tag multiple times.  If you wanted to literally
repeat the input tag, then <input listItemOf="aList" view="setMyName" /> would
work.

By the way: you don't need the 'view="List"' attribute on your <table> tag if
the model aList is actually an instance of 'list' -- woven will use appropriate
views for various basic types.

>     </tr>
>   </table>
> how would I go about this?  I've tried a few guesses based on the
> examples, but aren't getting anywhere.
> 
> thanks
> 
> John Kozak

Hope that helps.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021229/d5af2f2b/attachment.pgp 

From glyph at twistedmatrix.com  Sun Dec 29 13:01:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Dec 2002 12:01:37 -0600 (CST)
Subject: [Twisted-Python] FYI: runtests on win32
In-Reply-To: <20021228203108.21448.qmail@web10008.mail.yahoo.com>
References: <20021228203108.21448.qmail@web10008.mail.yahoo.com>
Message-ID: <20021229.120137.122568779.glyph@twistedmatrix.com>

On Sat, 28 Dec 2002 12:31:08 -0800 (PST), Cory Dodt <corydodt at yahoo.com> wrote:
> I've put up some logs of admin/runtests so that people can see how we're
> doing on Windows, merely to inform.  You can't fix bugs if you don't know
> about them. :-)

Thanks, Cory.  Could you re-run these occasionally and put up new results so we
can see how we're doing over time?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021229/ebab9a14/attachment.pgp 

From tv at twistedmatrix.com  Sun Dec 29 17:47:04 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 30 Dec 2002 00:47:04 +0200
Subject: [Twisted-Python] DNS SRV support for Connectors
Message-ID: <20021229224704.GA21453@ki.yok.utu.fi>

	Hi. I wanted to have SRV record (RFC 2782) support connecting
	to services. So here we go.

	The following patch adds a new Connector class that takes
	service (smtp, http, ldap, ..) and domain (example.com), looks
	for a DNS SRV record and falls back sanely if not found.

	itamar pointed out that this might be more suitable in
	twisted.names.client -- feel free to point out what is the
	"right" place.

	Please give feedback.

	The patch also fixes the output of SRV-using example; it used
	to not output the interesting bits.

	The patch is attached, and the latest version is at
	http://www.twistedmatrix.com/users/tv/connectTCPService.patch

-- 
:(){ :|:&};:
-------------- next part --------------
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.53
diff -u -u -r1.53 default.py
--- twisted/internet/default.py	17 Dec 2002 02:31:59 -0000	1.53
+++ twisted/internet/default.py	29 Dec 2002 22:31:24 -0000
@@ -29,12 +29,15 @@
 import os
 import socket
 import sys
+import types
+import random
 
 from twisted.internet.interfaces import IReactorCore, IReactorTime, IReactorUNIX
 from twisted.internet.interfaces import IReactorTCP, IReactorUDP, IReactorSSL
 from twisted.internet.interfaces import IReactorProcess, IReactorFDSet, IReactorMulticast
 from twisted.internet import main, error, protocol, interfaces
 from twisted.internet import tcp, udp, task, defer
+from twisted.names import client
 
 
 from twisted.python import log, threadable, failure
@@ -142,6 +145,10 @@
 
     def __init__(self, reactor, host, port, factory, timeout, bindAddress):
         self.host = host
+        if isinstance(port, types.IntType):
+            port = port
+        else:
+            port = socket.getservbyname(port, 'tcp')
         self.port = port
         self.bindAddress = bindAddress
         BaseConnector.__init__(self, reactor, factory, timeout)
@@ -152,6 +159,107 @@
     def getDestination(self):
         return ('INET', self.host, self.port)
 
+class TCPServiceConnector(BaseConnector):
+    """See RFC2782."""
+    stopAfterDNS=0
+
+    def __init__(self, reactor, service, domain, factory, timeout, bindAddress):
+        self.service = service
+        self.domain = domain
+        self.bindAddress = bindAddress
+        BaseConnector.__init__(self, reactor, factory, timeout)
+
+        self.connector = None
+        self.servers = None
+        self.orderedServers = None # list of servers already used in this round
+
+    def connect(self):
+        if not self.servers:
+            d = client.theResolver.lookupService('_%s._tcp.%s' % (self.service, self.domain))
+            d.addCallback(self._cbGotServers)
+            d.addCallback(lambda x, self=self: self._reallyConnect())
+            d.addErrback(self.connectionFailed)
+        elif self.connector is None:
+            self._reallyConnect()
+        else:
+            self.connector.connect()
+
+    def _cbGotServers(self, answers):
+        if len(answers)==1 and answers[0].payload.target=='.':
+            # decidedly not available
+            raise error.DNSLookupError("Service %s not available for domain %s."
+                                       % (repr(self.service), repr(self.domain)))
+
+        self.servers = []
+        self.orderedServers = []
+        for a in answers:
+            self.orderedServers.append((a.payload.priority, a.payload.weight,
+                                        str(a.payload.target), a.payload.port))
+
+    def _serverCmp(self, a, b):
+        if a[0]!=b[0]:
+            return cmp(a[0], b[0])
+        else:
+            return cmp(a[1], b[1])
+
+    def pickServer(self):
+        assert self.servers is not None
+        assert self.orderedServers is not None
+
+        if not self.servers and not self.orderedServers:
+            # no SRV record, fall back..
+            return self.domain, self.service
+
+        if not self.servers and self.orderedServers:
+            # start new round
+            self.servers = self.orderedServers
+            self.orderedServers = []
+
+        assert self.servers
+
+        self.servers.sort(self._serverCmp)
+        minPriority=self.servers[0][0]
+
+        weightIndex = zip(xrange(len(self.servers)), [x[1] for x in self.servers if x[0]==minPriority])
+        weightSum = reduce(lambda x, y: (None, x[1]+y[1]), weightIndex, (None, 0))[1]
+        rand = random.randint(0, weightSum)
+
+        for index, weight in weightIndex:
+            weightSum -= weight
+            if weightSum <= 0:
+                chosen = self.servers[index]
+                del self.servers[index]
+                self.orderedServers.append(chosen)
+
+                p, w, host, port = chosen
+                print "HOST", host, port
+                return host, port
+
+        raise 'We really should never get here!'
+
+    def _reallyConnect(self):
+        if self.stopAfterDNS:
+            self.stopAfterDNS=0
+            return
+
+        self.host, self.port = self.pickServer()
+
+        # TODO connectSSL?
+        self.connector=self.reactor.connectTCP(self.host, self.port, self.factory)
+
+    def stopConnecting(self):
+        if self.connector:
+            self.connector.stopConnecting()
+        else:
+            self.stopAfterDNS=1
+
+    def disconnect(self):
+        if self.connector is not None:
+            self.connector.disconnect()
+
+    def getDestination(self):
+        assert self.connector
+        return self.connector.getDestination()
 
 class UNIXConnector(BaseConnector):
 
@@ -347,6 +455,13 @@
         """See twisted.internet.interfaces.IReactorTCP.connectTCP
         """
         c = TCPConnector(self, host, port, factory, timeout, bindAddress)
+        c.connect()
+        return c
+
+    def connectTCPService(self, service, domain, factory, timeout=30, bindAddress=None):
+        """See twisted.internet.interfaces.IReactorTCP.connectTCPService (TODO)
+        """
+        c = TCPServiceConnector(self, service, domain, factory, timeout, bindAddress)
         c.connect()
         return c
 
Index: doc/examples/dns-service.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/dns-service.py,v
retrieving revision 1.1
diff -u -u -r1.1 dns-service.py
--- doc/examples/dns-service.py	23 Dec 2002 22:22:53 -0000	1.1
+++ doc/examples/dns-service.py	29 Dec 2002 22:31:24 -0000
@@ -10,7 +10,7 @@
     if not len(answers):
         print 'No answers'
     else:
-        print '\n'.join(map(str, answers))
+        print '\n'.join([str(x.payload) for x in answers])
     reactor.stop()
 
 def printFailure(arg):

From exarkun at intarweb.us  Sun Dec 29 23:46:41 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 29 Dec 2002 23:46:41 -0500
Subject: [Twisted-Python] twisted.python.compat
Message-ID: <20021230044641.GA6919@meson.dyndns.org>

  Just a heads up, the backwards compatability code (what little of it there
was) in twisted.python.util has just moved to twisted.python.compat.  I left
a dict proxy in place that issues a deprecation warning, but all new code
should use twisted.python.compat.  Any future compatability code should go
in this module.

  Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 12:00am up 13 days, 9:45, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021229/f6453f85/attachment.pgp 

From exarkun at intarweb.us  Mon Dec 30 00:50:08 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 30 Dec 2002 00:50:08 -0500
Subject: [Twisted-Python] DNS changes
Message-ID: <20021230055008.GA7235@meson.dyndns.org>

  I've just committed some changes to the DNS client code that are not
backwards compatible.  I don't think many people are using it yet (Tv is
actually the only person I know of), but if you are, consider this your
heads up :)  The change is in all the lookup* methods - they now return a
tuple of 3 lists.  The first element of this tuple is the same list as was
previously returned, all by its lonesome.  There's also a new, high-level
interface available via getHostByName().  It returns just a string.

  Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021230/580a760f/attachment.pgp 

From abe at fettig.net  Mon Dec 30 11:27:23 2002
From: abe at fettig.net (Abe Fettig)
Date: 30 Dec 2002 11:27:23 -0500
Subject: [Twisted-Python] POP3 improvements
Message-ID: <1041265642.640.30.camel@mingus>

Over the weekend I was working on adding POP3 support to the messaging
library I'm working on.  I noticed that while downloading large messages
from a POP3 server on my local network my test app would use 100% CPU,
and would stop responding to events until it finished downloading the
message.  

Looking at the twisted.protocols.pop3.POP3Client code I saw that it was
handling downloaded messages by concatenating a string, adding one line
at a time.  This seemed like an inefficient way to do it, so I modified
the code to use a file-like object instead.  The result is much faster,
and gives you the option of writing a downloading message to a file as
it comes in rather than keeping it all in memory.

The modified POP3Client (attached) still has some work to be done, but I
was hoping to get some comments from the list first.  

Currently it works like this:  When you send a command that returns a
multi-line response (LIST or RETR), you pass an optional file-like
object that the response should be written to.  If no file argument is
supplied a StringIO is used.  When the server is finished sending the
response, handle_COMMANDNAME is called, passing back the file object
containing the downloaded response.

At this point I'm still not correcting byte-stuffed lines in downloaded
messages, so I need to do that.  Also, if it would be OK with everyone,
I think it might be nice to make POP3Client a little higher-level, so
that LIST, for example, would return an actual list instead of a file
(or, in the current implementation, a string) that the implementer has
to parse.  And it might be good to offer support for more POP3 commands
like TOP.

If somebody could take a look at my code and tell me what I'd need to do
to make it meet the Twisted standards I'd appreciate it.

(There are also some improvements that could probably be made to the
POP3 server code, but I thought those could wait 'till later).

Abe

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pop3support.py
Type: text/x-python
Size: 7903 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021230/7c92bc9e/attachment.py 

From twisted at itamarst.org  Mon Dec 30 11:44:21 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Dec 2002 11:44:21 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021230114421.00917ed4.twisted@itamarst.org>

On 30 Dec 2002 11:27:23 -0500
Abe Fettig <abe at fettig.net> wrote:

> The modified POP3Client (attached) still has some work to be done, but
> I was hoping to get some comments from the list first.  

Could you please send patches to the list as diffs, so we can see
exactly what you changed?



From twisted at itamarst.org  Mon Dec 30 11:48:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Dec 2002 11:48:25 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021230114825.4553701f.twisted@itamarst.org>

On 30 Dec 2002 11:27:23 -0500
Abe Fettig <abe at fettig.net> wrote:

> Currently it works like this:  When you send a command that returns a
> multi-line response (LIST or RETR), you pass an optional file-like
> object that the response should be written to.  If no file argument is
> supplied a StringIO is used.  When the server is finished sending the
> response, handle_COMMANDNAME is called, passing back the file object
> containing the downloaded response.

Instead of calling handle_COMMANDNAME, why not return a Deferred of the
success?

> At this point I'm still not correcting byte-stuffed lines in
> downloaded messages, so I need to do that.  Also, if it would be OK
> with everyone, I think it might be nice to make POP3Client a little
> higher-level, so that LIST, for example, would return an actual list
> instead of a file(or, in the current implementation, a string) that
> the implementer has to parse.  And it might be good to offer support
> for more POP3 commands like TOP.

Or perhaps the Deferred should return that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From abe at fettig.net  Mon Dec 30 13:09:52 2002
From: abe at fettig.net (Abe Fettig)
Date: 30 Dec 2002 13:09:52 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021230114825.4553701f.twisted@itamarst.org>
References: <1041265642.640.30.camel@mingus>
	 <20021230114825.4553701f.twisted@itamarst.org>
Message-ID: <1041271792.640.43.camel@mingus>

(diff attached to make it easier to see what I changed)

On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:

> 
> > Currently it works like this:  When you send a command that returns a
> > multi-line response (LIST or RETR), you pass an optional file-like
> > object that the response should be written to.  If no file argument is
> > supplied a StringIO is used.  When the server is finished sending the
> > response, handle_COMMANDNAME is called, passing back the file object
> > containing the downloaded response.
> 
> Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> success?

Based on other Twisted protocol handlers I thought that the preferred
way to handle events in protocols was to create methods that get called
in response to events.  That way you create a class that inherits from
POP3Client, and override the methods for events you want to handle. 
Being able use classes and inheritance this way is one of the things I
really like about Twisted.

Also, that's the way it was in the original POP3 module.


> 
> > At this point I'm still not correcting byte-stuffed lines in
> > downloaded messages, so I need to do that.  Also, if it would be OK
> > with everyone, I think it might be nice to make POP3Client a little
> > higher-level, so that LIST, for example, would return an actual list
> > instead of a file(or, in the current implementation, a string) that
> > the implementer has to parse.  And it might be good to offer support
> > for more POP3 commands like TOP.
> 
> Or perhaps the Deferred should return that.
-------------- next part --------------
--- /usr/lib/python2.2/site-packages/twisted/protocols/pop3.py	2002-07-24 15:04:56.000000000 -0400
+++ pop3support.py	2002-12-30 10:56:14.000000000 -0500
@@ -21,6 +21,7 @@
 from twisted.protocols import basic
 import os, time, string, operator, stat, md5, binascii
 from twisted.internet import protocol
+from cStringIO import StringIO
 
 class POP3Error(Exception):
     pass
@@ -167,11 +168,16 @@
     welcomeRe = re.compile('<(.*)>')
 
     def sendShort(self, command, params):
+        self.line_mode = 1
         self.transport.write('%s %s\r\n' % (command, params))
         self.command = command
         self.mode = SHORT
 
-    def sendLong(self, command, params):
+    def sendLong(self, command, params, dataFile=None):
+        if not dataFile: dataFile = StringIO()
+        self.dataFile = dataFile
+        self.dataFileTail = ""
+        self.line_mode = 1
         self.transport.write('%s %s\r\n' % (command, params))
         self.command = command
         self.mode = FIRST_LONG
@@ -189,23 +195,41 @@
             if m:
                 self.welcomeCode = m.group(1)
 
+    def rawDataReceived(self, data):
+        tail = self.dataFileTail + data[-5:]
+        if tail.endswith("\r\n.\r\n"):
+            self.dataFile.write(data[:-5])
+            method = getattr(self, 'handle_'+self.command, None)
+            if method is not None:
+                self.dataFile.seek(0)
+                method(self.dataFile)
+        else:
+            self.dataFile.write(data)
+            self.dataFileTail = data[-5:]
+
     def lineReceived(self, line):
-        if self.mode == SHORT or self.mode == FIRST_LONG:
+        if self.mode == SHORT:
             self.mode = NEXT[self.mode]
             method = getattr(self, 'handle_'+self.command, self.handle_default)
             method(line)
-        elif self.mode == LONG:
-            if line == '.':
-                self.mode = NEXT[self.mode]
-                method = getattr(self, 'handle_'+self.command+'_end', None)
-                if method is not None:
-                    method()
-                return
-            if line[:1] == '.':
-                line = line[1:]
-            method = getattr(self, 'handle_'+self.command+'_continue', None)
-            if method is not None:
-                method(line)
+        elif self.mode == FIRST_LONG:
+            self.mode = NEXT[self.mode]
+            self.line_mode = 0
+            method = getattr(self, 'handle_'+self.command+'_start', self.handle_default)
+            method(line)
+           
+        #elif self.mode == LONG:
+        #    if line == '.':
+        #        self.mode = NEXT[self.mode]
+        #        method = getattr(self, 'handle_'+self.command+'_end', None)
+        #        if method is not None:
+        #            method()
+        #        return
+        #    if line[:1] == '.':
+        #        line = line[1:]
+        #    method = getattr(self, 'handle_'+self.command+'_continue', None)
+        #    if method is not None:
+        #        method(line)
 
     def apopAuthenticate(self, user, password):
         digest = md5.new(magic+password).digest()
@@ -214,17 +238,24 @@
 
     def apop(self, user, digest):
         self.sendLong('APOP', user+' '+digest)
-    def retr(self, i):
-        self.sendLong('RETR', i)
+
+    def retr(self, i, destFile=None):
+        self.sendLong('RETR', i, destFile)
+
     def dele(self, i):
         self.sendShort('DELE', i)
+
     def list(self, i=''):
         self.sendLong('LIST', i)
+
     def uidl(self, i=''):
         self.sendLong('UIDL', i)
+
     def user(self, name):
         self.sendShort('USER', name)
+
     def pass_(self, pass_):
         self.sendShort('PASS', pass_)
+
     def quit(self):
         self.sendShort('QUIT', '')

From andrew-twisted at puzzling.org  Mon Dec 30 20:57:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 12:57:06 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041271792.640.43.camel@mingus>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus>
Message-ID: <20021231015705.GA20756@frobozz.local>

On Mon, Dec 30, 2002 at 01:09:52PM -0500, Abe Fettig wrote:
> (diff attached to make it easier to see what I changed)
> 
> On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:
> 
> > 
> > > Currently it works like this:  When you send a command that returns a
> > > multi-line response (LIST or RETR), you pass an optional file-like
> > > object that the response should be written to.  If no file argument is
> > > supplied a StringIO is used.  When the server is finished sending the
> > > response, handle_COMMANDNAME is called, passing back the file object
> > > containing the downloaded response.
> > 
> > Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> > success?
> 
> Based on other Twisted protocol handlers I thought that the preferred
> way to handle events in protocols was to create methods that get called
> in response to events.  That way you create a class that inherits from
> POP3Client, and override the methods for events you want to handle. 
> Being able use classes and inheritance this way is one of the things I
> really like about Twisted.

It depends; if the event is in response to a request, e.g. LIST, it makes
sense to return a Deferred that will receive a list of available messages.
FTPClient works this way, and is very convenient -- an FTPClient user can
queue commands (like LIST, RETR, etc), and as the server responds, the
Deferreds will fire... and there's no confusion if you issue multiple LIST
commands in different directories, whereas a handle_LIST callback doesn't
have the same advantage.

In your case, I'd recommend Deferreds.

If you're writing a server that waits for incoming events, then a
handle_COMMANDNAME scheme would make good sense.

> Also, that's the way it was in the original POP3 module.

Well, if you're breaking backwards-compatibility (are you?), that doesn't
really matter ;)

-Andrew.




From m at moshez.org  Mon Dec 30 23:57:51 2002
From: m at moshez.org (Moshe Zadka)
Date: 31 Dec 2002 04:57:51 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021231045751.12966.qmail@green.zadka.com>

On 30 Dec 2002, Abe Fettig <abe at fettig.net> wrote:

> The modified POP3Client (attached) still has some work to be done, but I
> was hoping to get some comments from the list first.  

Please send fixes as unified diffs (diff -u)



From radix at twistedmatrix.com  Tue Dec 31 00:47:24 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 31 Dec 2002 00:47:24 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231015705.GA20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local>
Message-ID: <20021231054724.GA13930@Radii>

On Tue, Dec 31, 2002 at 12:57:06PM +1100, Andrew Bennetts wrote:
> On Mon, Dec 30, 2002 at 01:09:52PM -0500, Abe Fettig wrote:
> > On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:
> > > > supplied a StringIO is used.  When the server is finished sending the
> > > > response, handle_COMMANDNAME is called, passing back the file object
> > > > containing the downloaded response.
> > > 
> > > Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> > > success?
> > 
> > Based on other Twisted protocol handlers I thought that the preferred
> > way to handle events in protocols was to create methods that get called
> > in response to events.  That way you create a class that inherits from
> > POP3Client, and override the methods for events you want to handle. 
> > Being able use classes and inheritance this way is one of the things I
> > really like about Twisted.
> 
> It depends; if the event is in response to a request, e.g. LIST, it makes
> sense to return a Deferred that will receive a list of available messages.
> FTPClient works this way, and is very convenient -- an FTPClient user can
> queue commands (like LIST, RETR, etc), and as the server responds, the
> Deferreds will fire... and there's no confusion if you issue multiple LIST
> commands in different directories, whereas a handle_LIST callback doesn't
> have the same advantage.
> 
> In your case, I'd recommend Deferreds.
> 
> If you're writing a server that waits for incoming events, then a
> handle_COMMANDNAME scheme would make good sense.

Nah, handle_FOO is useful outside of just servers (see IRCClient,
which I'll mention again in a second). It may be good to separate it
into two layers, the higher-level one returning Deferreds, which are
triggered from handle_FOO methods. This is especially useful if you
may have to wait for many low-level protocol messages before you have
the full response, but the handle_FOO idiom is nice, in general, as a
way of breaking up your protocol parsing into separate methods.

The one other place where I thought this might be useful is in
IRCClient. IRC commands often result in several messages in response
-- something like list, or whois, for example. If we wanted to
abstract this interface, we could have a "list" method that returned a
Deferred that didn't trigger until *all* the list lines have been
received.

So, as an _implementation_ strategy, the "handle_FOO" methods are
great when the mapping of message-level request to message-level
response is 1:many, and for interfaces, Deferreds are great.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Dec 31 01:16:39 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:16:39 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231054724.GA13930@Radii>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii>
Message-ID: <20021231061639.GB20756@frobozz.local>

On Tue, Dec 31, 2002 at 12:47:24AM -0500, Christopher Armstrong wrote:
> 
> The one other place where I thought this might be useful is in
> IRCClient. IRC commands often result in several messages in response
> -- something like list, or whois, for example. If we wanted to
> abstract this interface, we could have a "list" method that returned a
> Deferred that didn't trigger until *all* the list lines have been
> received.

Actually, I just realised, I fibbed about FTPClient... it does something
a little unusual, and I'm interested in opinions on this.

Say you call FTPClient.list().  You don't get a Deferred, you actually have
to pass in a Protocol *instance*, and as the data for FTPClient.list is
received, it gets passed straight to that Protocol, via dataReceived.  In
fact, the FTPClient internally makes a Factory for that connection, which
(essentially) uses that Protocol, but that's an implementation detail.  This
is a bit weird, though, because using an FTPClient involves creating
Protocols without associated Factories, and nowhere else in Twisted does
that.

[The reason why I got confused about Deferreds in the interface, is that I
use Deferreds internally in FTPClient to manage all this.]

So this is actually another interface, possibly specific to FTP, where you
pass a Protocol instance -- this allows for progressive processing of data,
rather than all-at-once, and this feels "more Twisted" to me :)
  
So, to parse the results of an FTP listing, you pass in a
FTPFileListProtocol... this is useful, but there probably should be a
higher-level interface to this that returns a Deferred, for when you don't
need to do custom parsing and don't care about progressive processing (i.e.
most of the time).

> So, as an _implementation_ strategy, the "handle_FOO" methods are
> great when the mapping of message-level request to message-level
> response is 1:many, and for interfaces, Deferreds are great.

Agreed.  In FTP, there is, basically, only one response per request, so I
don't have need for handle_FOO in the FTPClient.  In POP3, I think the
situation is similar (but simpler than FTP).  For IRC, handle_FOO makes good
sense.

-Andrew.




From radix at twistedmatrix.com  Tue Dec 31 01:24:40 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 31 Dec 2002 01:24:40 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231061639.GB20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local>
Message-ID: <20021231062440.GB13930@Radii>

On Tue, Dec 31, 2002 at 05:16:39PM +1100, Andrew Bennetts wrote:
> Actually, I just realised, I fibbed about FTPClient... it does something
> a little unusual, and I'm interested in opinions on this.
> 
> Say you call FTPClient.list().  You don't get a Deferred, you actually have
> to pass in a Protocol *instance*, and as the data for FTPClient.list is
> received, it gets passed straight to that Protocol, via dataReceived.  In
> fact, the FTPClient internally makes a Factory for that connection, which
> (essentially) uses that Protocol, but that's an implementation detail.  This
> is a bit weird, though, because using an FTPClient involves creating
> Protocols without associated Factories, and nowhere else in Twisted does
> that.
> 
> [The reason why I got confused about Deferreds in the interface, is that I
> use Deferreds internally in FTPClient to manage all this.]
> 
> So this is actually another interface, possibly specific to FTP, where you
> pass a Protocol instance -- this allows for progressive processing of data,
> rather than all-at-once, and this feels "more Twisted" to me :)
>   
> So, to parse the results of an FTP listing, you pass in a
> FTPFileListProtocol... this is useful, but there probably should be a
> higher-level interface to this that returns a Deferred, for when you don't
> need to do custom parsing and don't care about progressive processing (i.e.
> most of the time).

Euughhh.. that sounds really horrible at first glance. Are there any
cases you can think of that actually make use of passing in different
Protocol classes? Also, how much less flexible would it be to simply
set the protocols as attributes on the FTPClient if you want to
override?  (similar to Factory.protocol). The FTPClient would then just use
'self.whateverProtocol'. This agrees much more with what a lot of
Twisted already does, I think.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Dec 31 01:36:40 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:36:40 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021231063640.GC20756@frobozz.local>

On Mon, Dec 30, 2002 at 11:27:23AM -0500, Abe Fettig wrote:
> Over the weekend I was working on adding POP3 support to the messaging
> library I'm working on.  I noticed that while downloading large messages
> from a POP3 server on my local network my test app would use 100% CPU,
> and would stop responding to events until it finished downloading the
> message.  
> 
> Looking at the twisted.protocols.pop3.POP3Client code I saw that it was
> handling downloaded messages by concatenating a string, adding one line
> at a time.  This seemed like an inefficient way to do it, so I modified
> the code to use a file-like object instead.  The result is much faster,
> and gives you the option of writing a downloading message to a file as
> it comes in rather than keeping it all in memory.

Hang on... POP3Client *doesn't* do any concatenation.  Looking at it, it
merely fires handle_COMMAND, possibly followed by multiple
handle_COMMAND_continue and a handle_COMMAND_end, and at no time is more
than one line passed around.

Perhaps you mean basic.LineReceiver does concatenation?  How long are the
lines you are receiving?

If basic.LineReceiver is the culprit, I suspect it would make more sense to
fix it there than in POP3Client.

-Andrew.




From andrew-twisted at puzzling.org  Tue Dec 31 01:40:43 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:40:43 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231062440.GB13930@Radii>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii>
Message-ID: <20021231064043.GD20756@frobozz.local>

On Tue, Dec 31, 2002 at 01:24:40AM -0500, Christopher Armstrong wrote:
> 
> Euughhh.. that sounds really horrible at first glance. Are there any
> cases you can think of that actually make use of passing in different
> Protocol classes? Also, how much less flexible would it be to simply
> set the protocols as attributes on the FTPClient if you want to
> override?  (similar to Factory.protocol). The FTPClient would then just use
> 'self.whateverProtocol'. This agrees much more with what a lot of
> Twisted already does, I think.

I do need to use different protocols, or at least I did at a previous job...
I had a program that downloaded TIFF files and text files.  TIFF files
needed to be written to disk and processed, text files were written to disk
for posterity, but were processed as they came in.  

Also, an FTPClient can have multiple commands queued (It seems reasonable to
be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
instance attribute isn't a sane option.

Any other ideas, though?  I would like to make it cleaner.

-Andrew.




From bob at redivi.com  Tue Dec 31 01:42:50 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 31 Dec 2002 01:42:50 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231064043.GD20756@frobozz.local>
Message-ID: <1502E04A-1C8B-11D7-8041-000A95686CD8@redivi.com>

On Tuesday, Dec 31, 2002, at 01:40 America/New_York, Andrew Bennetts 
wrote:
>
> I do need to use different protocols, or at least I did at a previous 
> job...
> I had a program that downloaded TIFF files and text files.  TIFF files
> needed to be written to disk and processed, text files were written to 
> disk
> for posterity, but were processed as they came in.
>
> Also, an FTPClient can have multiple commands queued (It seems 
> reasonable to
> be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
> instance attribute isn't a sane option.
>
> Any other ideas, though?  I would like to make it cleaner.

Crazy idea, but maybe some extension to or subclass of Deferred is in 
order, where you would receive chunks until it's done?




From screwtape at froup.com  Tue Dec 31 02:08:22 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 31 Dec 2002 18:08:22 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231064043.GD20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local>
Message-ID: <20021231070822.GO944@ferd2.thristian.org>

On Tue, Dec 31, 2002 at 05:40:43PM +1100, Andrew Bennetts wrote:
> On Tue, Dec 31, 2002 at 01:24:40AM -0500, Christopher Armstrong wrote:
> > 
> > Euughhh.. that sounds really horrible at first glance. Are there any
> > cases you can think of that actually make use of passing in different
> > Protocol classes? Also, how much less flexible would it be to simply
> > set the protocols as attributes on the FTPClient if you want to
> > override?  (similar to Factory.protocol). The FTPClient would then just use
> > 'self.whateverProtocol'. This agrees much more with what a lot of
> > Twisted already does, I think.
> 
> I do need to use different protocols, or at least I did at a previous job...
> I had a program that downloaded TIFF files and text files.  TIFF files
> needed to be written to disk and processed, text files were written to disk
> for posterity, but were processed as they came in.  

IIRC, the TIFF files in question were very, very large, while the text
files were quite small. TIFF files you'd want to spool to disk as
quickly as possible, but text files you could build them up in a
buffer as they came in.

I imagine the HTTP client would face similar issues - how does it go
downloading large files?

> Also, an FTPClient can have multiple commands queued (It seems reasonable to
> be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
> instance attribute isn't a sane option.
> 
> Any other ideas, though?  I would like to make it cleaner.

I think it would be nice if Twisted had a DownloadingFile interface or
something - make a new DownloadingFile instance, then pass it to FTP's
RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
whatever. Then you can get the DownloadingFile instance to trigger
deferreds when it's complete, when it's progress is updated, that sort
of thing. It would make it easy to generate stats like download speed,
estimated time, and so forth.

Make a subclass DownloadingTIFFFile that saves the file to disk and
processes it, make a subclass DownloadingTextFile that processes the
file as it comes in, then saves it to disk.

Screwtape,
...yes, another crazy idea I don't particulary want to implement
myself. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The cruel angel's thesis bleeds" 
|



From twisted at moshez.org  Tue Dec 31 07:32:35 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 31 Dec 2002 12:32:35 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231070822.GO944@ferd2.thristian.org>
References: <20021231070822.GO944@ferd2.thristian.org>, <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local>
Message-ID: <20021231123235.16640.qmail@green.zadka.com>

On Tue, 31 Dec 2002, screwtape at froup.com wrote:

> I imagine the HTTP client would face similar issues - how does it go
> downloading large files?

One subclass saves files to filesystem (and calls a callback when done),
one subclass adds them up in a buffer and calls a callback when done.
Other suclasses are possible.

For more details, see twisted.web.client



From tv at twistedmatrix.com  Tue Dec 31 07:53:43 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 14:53:43 +0200
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231070822.GO944@ferd2.thristian.org>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org>
Message-ID: <20021231125343.GA30579@tv.stonesoft.com>

On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> I think it would be nice if Twisted had a DownloadingFile interface or
> something - make a new DownloadingFile instance, then pass it to FTP's
> RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> whatever. Then you can get the DownloadingFile instance to trigger
> deferreds when it's complete, when it's progress is updated, that sort
> of thing. It would make it easy to generate stats like download speed,
> estimated time, and so forth.

	How does that differ from the normal file interface?

	f.write(somestuff)
	f.write(somestuff)
	f.write(somestuff)
	f.close()



From abe at fettig.net  Tue Dec 31 09:18:57 2002
From: abe at fettig.net (Abe Fettig)
Date: 31 Dec 2002 09:18:57 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231054724.GA13930@Radii>
References: <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231054724.GA13930@Radii>
Message-ID: <1041344336.606.5.camel@mingus>

On Tue, 2002-12-31 at 00:47, Christopher Armstrong wrote:

> On Tue, Dec 31, 2002 at 12:57:06PM +1100, Andrew Bennetts wrote:

> > It depends; if the event is in response to a request, e.g. LIST, it makes
> > sense to return a Deferred that will receive a list of available messages.
> > FTPClient works this way, and is very convenient -- an FTPClient user can
> > queue commands (like LIST, RETR, etc), and as the server responds, the
> > Deferreds will fire... and there's no confusion if you issue multiple LIST
> > commands in different directories, whereas a handle_LIST callback doesn't
> > have the same advantage.
> > 
> > In your case, I'd recommend Deferreds.
> > 

> So, as an _implementation_ strategy, the "handle_FOO" methods are
> great when the mapping of message-level request to message-level
> response is 1:many, and for interfaces, Deferreds are great.

Makes sense to me.  In this case I'll use Deferreds.

Abe




From abe at fettig.net  Tue Dec 31 09:28:01 2002
From: abe at fettig.net (Abe Fettig)
Date: 31 Dec 2002 09:28:01 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231125343.GA30579@tv.stonesoft.com>
References: <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231061639.GB20756@frobozz.local>
	<20021231064043.GD20756@frobozz.local>
	<20021231070822.GO944@ferd2.thristian.org>
	<20021231125343.GA30579@tv.stonesoft.com>
Message-ID: <1041344881.607.15.camel@mingus>

On Tue, 2002-12-31 at 07:53, Tommi Virtanen wrote:
> On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> > I think it would be nice if Twisted had a DownloadingFile interface or
> > something - make a new DownloadingFile instance, then pass it to FTP's
> > RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> > whatever. Then you can get the DownloadingFile instance to trigger
> > deferreds when it's complete, when it's progress is updated, that sort
> > of thing. It would make it easy to generate stats like download speed,
> > estimated time, and so forth.
> 
> 	How does that differ from the normal file interface?
> 
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.close()
> 

This would be my question too.  Is there really a need to use a new
interface, or can I just stick with file-like objects?

Abe




From warner at lothar.com  Tue Dec 31 14:35:12 2002
From: warner at lothar.com (Brian Warner)
Date: Tue, 31 Dec 2002 11:35:12 -0800 (PST)
Subject: [Twisted-Python] intermittent test failures: fixed
Message-ID: <20021231.113512.48827462.warner@lothar.com>

Hi all..

I spent some time yesterday looking into the intermittent test failures in
test_tcp and test_threadpool. These failures only occurred when the full
test suite was run (./admin/runtests -v -t), not when test_tcp was run by
itself (./admin/runtests -v -t twisted.test.test_tcp). I finally figured out
what was happening and wanted to share my findings to help others track down
future problems.

 Early in the test sequence, test_woven did some kind of session/login
 thing. One particular test case was verifying an Unauthorized response,
 which involved creating a Deferred that was then .errback()'ed. However,
 there was no errback handler added to the Deferred.

 Inside that test, web.guard started a 60 second session timeout, with a
 callLater() function that referenced that Deferred (or an object holding
 it).

 test_woven finishes. The timer is still running. The Deferred (with pending
 error) is still alive, since the callLater timer prevents it from being
 garbage-collected.

 Other test cases run.

 [60 seconds pass]

 Some other innocent test case is running, depending upon the speed of the
 machine. On my CPU, it was usually test_tcp.

 During some call to reactor.iterate, the web.guard session timer expires,
 the callback does whatever callbacky things it likes, and an object gets
 freed. That leads to the Deferred being freed. The Deferred has a pending
 error but no .errback handler. Deferred.__del__ does log.msg() with the
 "Unhandled error in Deferred" message, and log.err() with the
 "Unauthorized" Failure object that wanted an .errback but had none.
 log.err() puts the message in the error queue. log.msg() goes into the
 test.log file, but not into the error queue.

 test_tcp finishes without problem, but unittest.py looks in the error queue
 and sees the Failure. It adds the traceback of the Failure (which is the
 call trace leading up to the creation of the Unauthorized exception, which
 is in web.guard, and doesn't mention test_woven at all) to the error
 results of the test.

 test_tcp is flunked, and as explanation unittest.py emits the error results
 (the Unauthorized exception and the web.guard stack trace)

The basic issue is timers that "leak" over from one unit test to another.
Unit tests are supposed to be isolated from each other, but if one test
changes the state of the reactor (by adding timers or establishing listenTCP
ports) without cleaning it up when it finishes, that state can affect other
tests.

This is not always obvious, as several modules create timers internally.
This is very convenient, and works fine in normal applications. It is only
in the unit tests where it causes a problem.

I've added IReactorTime.getDelayedCalls() as a reactor-portable way to
retrieve the list of pending callLater() timers, and changed unittest.py to
cancel all pending timers between test cases. This succeeded in moving the
failure back to the test that caused it. I've also added a warning message
(which goes into test.log) that indicates when a test leaves timers running
after it completes. There are a handful that do; most are benign but should
probably be cleaned up. This warning message may turn into a test failure
someday.

Some tools I used to track this down, in case they prove useful to others:

 added code to Deferred and DelayedCall to record the stack track when they
 are created, then print them in __repr__ or added to the "unhandled error
 in deferred" Failure. The traceback of creation is often more useful than
 the traceback of .callback, .errback, or timer execution.

 added .extra attribute to Failures, insert its contents in the traceback.
 I used this to display the Deferred-creation traceback.


There are still a few issues: I need to implement getDelayedCalls for the
cReactor, and my unit test for getDelayedCalls is stymied by a recurring
timer created when the 'popsicle' module is imported, but in general it
seems to make the unit test suite behave sensibly (no more intermittent
failures).


cheers,
 -Brian



From Bram at moolenaar.net  Tue Dec 31 11:47:18 2002
From: Bram at moolenaar.net (Bram Moolenaar)
Date: Tue, 31 Dec 2002 17:47:18 +0100
Subject: [Twisted-Python] Python and Win32 command execution
Message-ID: <200212311647.gBVGlI304515@moolenaar.net>

hello,

I noticed your message with an example of using CreateProcess():

	http://twistedmatrix.com/pipermail/twisted-python/2002-March/000882.html

I actually only need a version of the os.system() command that does
return the exit value.  The problem is that under Windows 95 and 98 the
return value if always zero, thus I don't know if the command actually
worked.  For my work on A-A-P (http://www.a-a-p.org) I do need to get
the exit value.

The key to solving the problem apparently is to avoid using command.com.

It seems your example can be changed to redirect the stdout and stderr
of the command, invoke CreateProcess() and obtain the exit value.  But
it's not that simple.

Do you perhaps know a better solution?

- Bram

-- 
hundred-and-one symptoms of being an internet addict:
244. You use more than 20 passwords.

 ///  Bram Moolenaar -- Bram at moolenaar.net -- http://www.moolenaar.net  \\\
///          Creator of Vim - Vi IMproved -- http://www.vim.org          \\\
\\\           Project leader for A-A-P -- http://www.a-a-p.org           ///
 \\\ Lord Of The Rings helps Uganda - http://iccf-holland.org/lotr.html ///



From twisted at itamarst.org  Tue Dec 31 15:18:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 15:18:34 -0500
Subject: [Twisted-Python] Python and Win32 command execution
In-Reply-To: <200212311647.gBVGlI304515@moolenaar.net>
References: <200212311647.gBVGlI304515@moolenaar.net>
Message-ID: <20021231151834.64a17b17.twisted@itamarst.org>

On Tue, 31 Dec 2002 17:47:18 +0100
Bram Moolenaar <Bram at moolenaar.net> wrote:

> It seems your example can be changed to redirect the stdout and stderr
> of the command, invoke CreateProcess() and obtain the exit value.  But
> it's not that simple.
> 
> Do you perhaps know a better solution?

Twisted's latest win32 process running code in
twisted.internet.win32eventreactor, but it might be overkill for what
you need. It's also kind of tied to the event loop.

I'm not sure if I ever intergrated for getting exit value, but there is
an API for it -
http://aspn.activestate.com//ASPN/Python/Reference/Products/ActivePython/PythonWin32Extensions/win32process__GetExitCodeProcess_meth.html

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From tv at twistedmatrix.com  Tue Dec 31 15:18:07 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:18:07 +0200
Subject: [Twisted-Python] t.p.usage suggestion: '--option='
In-Reply-To: <20021229171300.GA18076@ki.yok.utu.fi>
References: <20021229171300.GA18076@ki.yok.utu.fi>
Message-ID: <20021231201807.GA4327@ki.yok.utu.fi>

On Sun, Dec 29, 2002 at 07:13:00PM +0200, Tommi Virtanen wrote:

	Last chance to veto/protest, I'll commit this tomorrow.

> 	As it is now, twisted.python.usage will not
> 	allow parameters to have empty strings as
> 	values. That is, these are invalid currently:
> 
> 		--foo=
> 		--foo=''  (the same thing, more explicitly)
> 		--foo ''
> 
> 	I think t.p.usage should not be dictating
> 	such policy for its users.
> 
> 	It seems this only concerns optParameters users, "def
> 	opt_foo(self, x)" seems to be immune to this problem if
> 	I'm reading the code correctly.
> 
> 	All the above cases are easily detectable, Here's a suggested
> 	patch; tell me if you want me to commit.
> 
> Index: twisted/python/usage.py
> ===================================================================
> RCS file: /cvs/Twisted/twisted/python/usage.py,v
> retrieving revision 1.36
> diff -u -r1.36 usage.py
> --- twisted/python/usage.py	10 Nov 2002 10:45:36 -0000	1.36
> +++ twisted/python/usage.py	29 Dec 2002 17:06:03 -0000
> @@ -242,7 +242,7 @@
>          self.opts[flagName] = 1
>  
>      def _generic_parameter(self, parameterName, value):
> -        if value in ('', None):
> +        if value is None:
>              raise UsageError, ("Parameter '%s' requires an argument."
>                                 % (parameterName,))

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Tue Dec 31 15:32:45 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:32:45 +0200
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021229224704.GA21453@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
Message-ID: <20021231203245.GC4327@ki.yok.utu.fi>

On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:
> 	Hi. I wanted to have SRV record (RFC 2782) support connecting
> 	to services. So here we go.
> 
> 	The following patch adds a new Connector class that takes
> 	service (smtp, http, ldap, ..) and domain (example.com), looks
> 	for a DNS SRV record and falls back sanely if not found.
> 
> 	itamar pointed out that this might be more suitable in
> 	twisted.names.client -- feel free to point out what is the
> 	"right" place.
> 
> 	Please give feedback.
> 
> 	The patch also fixes the output of SRV-using example; it used
> 	to not output the interesting bits.
> 
> 	The patch is attached, and the latest version is at
> 	http://www.twistedmatrix.com/users/tv/connectTCPService.patch

	Please comment. I'm not familiar enough on what *YOU* want to
	do with reactors to know the right place for this, and whether
	e.g. a function like connectTCPService() should exist at all
	(and if so, how to implement it for other reactors).

	If I get no comments, I will

	1. Commit the change to TCPConnector that makes it accept
	   service names as port.

	2. Find and wear my asbestos underwear.

	3. Commit the TCPServiceConnector class.

	4. Sit and wait for flames.

	5. Commit the connectTCPService function.

	6. Run away.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Tue Dec 31 15:19:51 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:19:51 +0200
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041344881.607.15.camel@mingus>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <20021231015705.GA20756@frobozz.local> <20021231061639.GB20756@frobozz.local> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com> <1041344881.607.15.camel@mingus>
Message-ID: <20021231201951.GB4327@ki.yok.utu.fi>

On Tue, Dec 31, 2002 at 09:28:01AM -0500, Abe Fettig wrote:
> > 	How does that differ from the normal file interface?
> > 
> > 	f.write(somestuff)
> > 	f.write(somestuff)
> > 	f.write(somestuff)
> > 	f.close()
> 
> This would be my question too.  Is there really a need to use a new
> interface, or can I just stick with file-like objects?

	Stick with them until someone proves you can't.

-- 
:(){ :|:&};:



From twisted at itamarst.org  Tue Dec 31 15:48:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 15:48:52 -0500
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021231203245.GC4327@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
	<20021231203245.GC4327@ki.yok.utu.fi>
Message-ID: <20021231154852.08c01804.twisted@itamarst.org>

On Tue, 31 Dec 2002 22:32:45 +0200
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:

> 	Please comment. I'm not familiar enough on what *YOU* want to
> 	do with reactors to know the right place for this, and whether
> 	e.g. a function like connectTCPService() should exist at all
> 	(and if so, how to implement it for other reactors).

It should not be in twisted.internet.default, or in any reactor for that
matter. Where you should put is another question (twisted.names?).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From pp64 at cornell.edu  Tue Dec 31 17:02:58 2002
From: pp64 at cornell.edu (pp64 at cornell.edu)
Date: Tue, 31 Dec 2002 17:02:58 -0500 (EST)
Subject: [Twisted-Python] twisted.protocols.dict update
Message-ID: <200212312202.RAA20838@travelers.mail.cornell.edu>

Hi.
Could somebody slurp the partially rewritten dict.py 
and test_dict.py? The URLs are:
http://dunce.mine.nu:8080/twidict/Twisted/twisted/protoc
ols/dict.py
and
http://dunce.mine.nu:8080/twidict/Twisted/twisted/test/t
est_dict.py

Thank you.




From pp64 at cornell.edu  Tue Dec 31 17:11:31 2002
From: pp64 at cornell.edu (Paul Pergamenshchik)
Date: Tue, 31 Dec 2002 17:11:31 -0500
Subject: [Twisted-Python] twisted.protocols.dict update
Message-ID: <20021231171131.725a5db0.pp64@cornell.edu>

Please don't kick me in head. For some reason, Cornell's webmail thingie decided to send the previous e-mail with "twisted-python at twistedmatrix.com" in the From: field or something. Or maybe the mailing list is broken. The previous message was from me :)



From screwtape at froup.com  Tue Dec 31 18:21:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 1 Jan 2003 10:21:07 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231125343.GA30579@tv.stonesoft.com>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com>
Message-ID: <20021231232107.GP944@ferd2.thristian.org>

On Tue, Dec 31, 2002 at 02:53:43PM +0200, Tommi Virtanen wrote:
> On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> > I think it would be nice if Twisted had a DownloadingFile interface or
> > something - make a new DownloadingFile instance, then pass it to FTP's
> > RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> > whatever. Then you can get the DownloadingFile instance to trigger
> > deferreds when it's complete, when it's progress is updated, that sort
> > of thing. It would make it easy to generate stats like download speed,
> > estimated time, and so forth.
> 
> 	How does that differ from the normal file interface?
> 
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.close()

Because I still think of a file as a type, not an object. *sigh*

You're right, file objects would be good. At any rate using Protocols
would seem like overkill.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Universe-flavored. What you mortals call `butterscotch'." -- T&R, 1999-09-17
|



From exarkun at intarweb.us  Tue Dec 31 21:30:57 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 31 Dec 2002 21:30:57 -0500
Subject: [Twisted-Python] BooleanType support for jelly
Message-ID: <20030101023057.GA7348@meson.dyndns.org>

  Support for jellying <type 'bool'>, new in Python 2.3.  The approach and
actual values used were taken straight from TwistedJava.  This will be
Python 2.3 fix #3 if someone tells me it's alright :)

 Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
Index: twisted/spread/jelly.py
===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.38
diff -u -r1.38 jelly.py
--- twisted/spread/jelly.py	1 Jan 2003 00:29:13 -0000	1.38
+++ twisted/spread/jelly.py	1 Jan 2003 02:23:14 -0000
@@ -35,6 +35,8 @@
 
 This is how Jelly converts various objects to s-expressions:
 
+Boolean: True --> ['boolean', 'true']
+
 Integer: 1 --> 1
 
 List: [1, 2] --> ['list', 1, 2]
@@ -89,6 +91,11 @@
 from types import ClassType
 import copy
 
+try:
+    from types import BooleanType
+except ImportError:
+    BooleanType = None
+
 from new import instance
 from new import instancemethod
 
@@ -399,6 +406,8 @@
                         name]
             elif objType is ModuleType:
                 return ['module', obj.__name__]
+            elif objType is BooleanType:
+                return ['boolean', obj and 'true' or 'false']
             elif objType is ClassType:
                 return ['class', qual(obj)]
             else:
@@ -533,6 +542,13 @@
         else:
             return Unpersistable(exp[0])
 
+    def _unjelly_boolean(self, exp):
+        if BooleanType:
+            assert exp[0] in ('true', 'false')
+            return exp[0] == 'true'
+        else:
+            return Unpersistable(exp[0])
+
     def unjellyInto(self, obj, loc, jel):
         o = self.unjelly(jel)
         if isinstance(o, NotKnown):
@@ -726,6 +742,7 @@
         # I don't believe any of these types can ever pose a security hazard,
         # except perhaps "reference"...
         self.allowedTypes = {"None": 1,
+                             "boolean": 1,
                              "string": 1,
                              "str": 1,
                              "int": 1,
Index: twisted/test/test_jelly.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_jelly.py,v
retrieving revision 1.11
diff -u -r1.11 test_jelly.py
--- twisted/test/test_jelly.py	12 Dec 2002 08:43:53 -0000	1.11
+++ twisted/test/test_jelly.py	1 Jan 2003 02:23:14 -0000
@@ -179,7 +179,7 @@
         a = A()
         jelly.unjelly(jelly.jelly(a))
         jelly.unjelly(jelly.jelly(a.amethod))
-        items = [afunc, [1, 2, 3], 'test', 20.3, (1,2,3), None, A, unittest, {'a':1}, A.amethod]
+        items = [afunc, [1, 2, 3], not 1, not not 1, 'test', 20.3, (1,2,3), None, A, unittest, {'a':1}, A.amethod]
         for i in items:
             self.assertEquals(i, jelly.unjelly(jelly.jelly(i)))
     
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021231/6b4c6b31/attachment.pgp 

From twisted at itamarst.org  Tue Dec 31 22:01:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 22:01:18 -0500
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20030101023057.GA7348@meson.dyndns.org>
References: <20030101023057.GA7348@meson.dyndns.org>
Message-ID: <20021231220118.5df93343.twisted@itamarst.org>

On Tue, 31 Dec 2002 21:30:57 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   Support for jellying <type 'bool'>, new in Python 2.3.  The approach
>   and
> actual values used were taken straight from TwistedJava.  This will be
> Python 2.3 fix #3 if someone tells me it's alright :)

i'd rather have a boolean type in twisted.python.compat so we can do
booleans pre-2.3 as well.

***> http://VoteNoWar.org -- vote/donate/volunteer <***



From screwtape at froup.com  Tue Dec 31 22:55:38 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 1 Jan 2003 14:55:38 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20021228105407.10208.qmail@green.zadka.com>
References: <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20030101035538.GR944@ferd2.thristian.org>

On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> Hi.
> The following things are undocumented -- any volunteers would be welcome:
>  - Twisted chat HOWTO (im, words server, writing bots)

In case I accidentally stumble upon some time in the near future, what
are the requirements for documentation writing? Are plain text files
good enough, or HTML?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Y. Carnica lecked stempser something? Stedder vorlems chir-ped lookin ferrets.
|



From andrew-twisted at puzzling.org  Tue Dec 31 23:32:47 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 1 Jan 2003 15:32:47 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101035538.GR944@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org>
Message-ID: <20030101043247.GA12923@frobozz.local>

On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > Hi.
> > The following things are undocumented -- any volunteers would be welcome:
> >  - Twisted chat HOWTO (im, words server, writing bots)
> 
> In case I accidentally stumble upon some time in the near future, what
> are the requirements for documentation writing? Are plain text files
> good enough, or HTML?

Look at the existing docs in doc/howto for examples.  They are in "Lore"
format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
details (or http://twistedmatrix.com/documents/howto/doc-standard).

-Andrew.




From exarkun at intarweb.us  Tue Dec 31 23:51:55 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 31 Dec 2002 23:51:55 -0500
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20021231220118.5df93343.twisted@itamarst.org>
References: <20030101023057.GA7348@meson.dyndns.org> <20021231220118.5df93343.twisted@itamarst.org>
Message-ID: <20030101045155.GA7559@meson.dyndns.org>

On Tue, Dec 31, 2002 at 10:01:18PM -0500, Itamar Shtull-Trauring wrote:
> On Tue, 31 Dec 2002 21:30:57 -0500
> Jp Calderone <exarkun at intarweb.us> wrote:
> 
> >   Support for jellying <type 'bool'>, new in Python 2.3.  The approach
> >   and
> > actual values used were taken straight from TwistedJava.  This will be
> > Python 2.3 fix #3 if someone tells me it's alright :)
> 
> i'd rather have a boolean type in twisted.python.compat so we can do
> booleans pre-2.3 as well.
> 

  That's straight-forward enough, the only thing that changes is where
BooleanType is imported from.  I was more worried about whether it created
any security issues, since I'm not terribly familiar with jelly.

 Jp

> ***> http://VoteNoWar.org -- vote/donate/volunteer <***
> 

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021231/ef2b071c/attachment.pgp 

From twisted at moshez.org  Mon Dec  2 04:34:31 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Dec 2002 11:34:31 -0000
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
Message-ID: <20021202113431.30978.qmail@green.zadka.com>

I've already talked to z3p in private about this, but this has done
no good. _common is a binding to some more parts of the gmp library 
for Python, which is included in conch for speed-ups. I would like it
to be moved to a different project for Python/gmp bindings (upstream Python,
gmpy.sf.net or a new sf-based or tm.com-based project). If it will be
so moved, I'll do the Debian packaging and upload, and have the conch
packages recommend it. As is, I've currently disabled it in the Debian
build, because integrating it is just too hairy.

The coding standard specifically advises against such behaviour, for good
reasons.

Thanks,
Moshe



From twisted at moshez.org  Mon Dec  2 04:44:56 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Dec 2002 11:44:56 -0000
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
In-Reply-To: <20021202113431.30978.qmail@green.zadka.com>
References: <20021202113431.30978.qmail@green.zadka.com>
Message-ID: <20021202114456.31014.qmail@green.zadka.com>

On 2 Dec 2002, Moshe Zadka <twisted at moshez.org> wrote:

> to be moved to a different project for Python/gmp bindings (upstream Python,
> gmpy.sf.net or a new sf-based or tm.com-based project).

z3p complained about gmpy not compiling out of the box. The following
patch makes it compile:

moshez at pyramid:~/sources/gmpy$ diff -u gmpy.c gmpy.c.fixed
--- gmpy.c      Fri Jan 26 06:32:51 2001
+++ gmpy.c.fixed        Mon Dec  2 05:35:27 2002
@@ -5050,7 +5050,7 @@
         } else {
             PympzObject *resob = Pympz_new();
             if(resob) {
-                mpz_set(resob->z, randstate->seed);
+                mpz_set(resob->z, randstate->_mp_seed);
                 result = (PyObject*)resob;
             }
         }




From radix at twistedmatrix.com  Mon Dec  2 10:07:30 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 2 Dec 2002 12:07:30 -0500
Subject: [Twisted-Python] twisted/conch/_common violates standard. also annoying.
In-Reply-To: <20021202113431.30978.qmail@green.zadka.com>
References: <20021202113431.30978.qmail@green.zadka.com>
Message-ID: <20021202170730.GA3951@toshi>

On Mon, Dec 02, 2002 at 11:34:31AM -0000, Moshe Zadka wrote:
> I would like it to be moved to a different project for Python/gmp
> bindings (upstream Python, gmpy.sf.net or a new sf-based or
> tm.com-based project).

YES

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From dave at krondo.com  Mon Dec  2 17:20:26 2002
From: dave at krondo.com (Dave Peticolas)
Date: 02 Dec 2002 16:20:26 -0800
Subject: [Twisted-Python] PATCH: policy test fix for gtk/gtk2
Message-ID: <1038874826.20720.8.camel@oneiros>

The attached patch fixes the policy test for the gtk & gtk2 reactors.
The test results for the other reactors I can run (default, poll, qt)
are still good with this patch.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch
Type: text/x-patch
Size: 2731 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021202/49d7f06c/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20021202/49d7f06c/attachment.sig>

From typo at soniq.net  Mon Dec  2 20:08:01 2002
From: typo at soniq.net (Paul Boehm)
Date: Tue, 3 Dec 2002 04:08:01 +0100
Subject: [Twisted-Python] fixes for web.proxy
Message-ID: <20021203030801.GC4287@soniq.net>

hi,
twisted.web.proxy didn't work for me.

i've included two fixes.. a) makes Proxy a factory which
current twisted can use.

and b) is a neccesary change to deal with pages sending just \n
i dunno how to implemented this best, but proxy or HTTPClient
are unusable if they depend on \r\n being sent.

maybe lineReceiver needs a new mode to accept \r\n AND \n
as delimiters, but removing both?

here are my diffs:

diff -u -r1.9 proxy.py
--- web/proxy.py    15 Nov 2002 20:47:36 -0000  1.9
+++ web/proxy.py    3 Dec 2002 03:05:18 -0000
@@ -27,6 +27,7 @@


 class ProxyClient(http.HTTPClient):
+    delimiter = '\n'

     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -106,9 +107,15 @@
                                s, self)
         reactor.connectTCP(host, port, clientFactory)

-class Proxy(http.HTTPChannel):
-
-    requestFactory = ProxyRequest
+class Proxy(http.HTTPFactory):
+    def buildProtocol(self, addr):
+        """Generate a channel attached to this site.
+        """
+        channel = http.HTTPChannel()
+        channel.requestFactory = ProxyRequest
+        channel.site = self
+        channel.factory = self
+        return channel


 class ReverseProxyRequest(http.Request):
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.63
diff -u -r1.63 http.py
--- protocols/http.py   15 Nov 2002 20:57:58 -0000  1.63
+++ protocols/http.py   3 Dec 2002 03:05:20 -0000
@@ -268,6 +268,7 @@
     length = None
     firstLine = 1
     __buffer = ''
+    delimiter = '\n'

     def sendCommand(self, command, path):
         self.transport.write('%s %s HTTP/1.0\r\n' % (command, path))
@@ -279,6 +280,8 @@
         self.transport.write('\r\n')

     def lineReceived(self, line):
+        if line[-1] == '\r':
+            line = line[0:-1]
         if self.firstLine:
             self.firstLine = 0
             try:




From typo at soniq.net  Tue Dec  3 07:03:04 2002
From: typo at soniq.net (Paul Boehm)
Date: Tue, 3 Dec 2002 15:03:04 +0100
Subject: [Twisted-Python] fixes for web.proxy
In-Reply-To: <20021203030801.GC4287@soniq.net>
References: <20021203030801.GC4287@soniq.net>
Message-ID: <20021203140303.GA7172@soniq.net>

this is a more generic fix, that adds special handling for services
where crlf and lf are interchangeable.

comments, please!

also i'd like to get feedback on proxy maintainership.
if noone disagrees i'll make a plugin for proxy,
and try to polish it up, so that it becomes actually useable.

  paul

Index: protocols/basic.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/basic.py,v
retrieving revision 1.27
diff -u -r1.27 basic.py
--- protocols/basic.py	15 Nov 2002 14:56:18 -0000	1.27
+++ protocols/basic.py	3 Dec 2002 13:57:30 -0000
@@ -147,6 +147,7 @@
     line_mode = 1
     __buffer = ''
     delimiter = '\r\n'
+    crlfhack = 0
     MAX_LENGTH = 16384
 
     def dataReceived(self, data):
@@ -157,7 +158,16 @@
         self.__buffer = self.__buffer+data
         while self.line_mode:
             try:
-                line, self.__buffer = self.__buffer.split(self.delimiter, 1)
+                if self.crlfhack:
+                    delimiter = '\n'
+                else:
+                    delimiter = self.delimiter
+
+                line, self.__buffer = self.__buffer.split(delimiter, 1)
+
+                if self.crlfhack:
+                    line = line.replace('\r', '')
+
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
                     self.transport.loseConnection()
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.63
diff -u -r1.63 http.py
--- protocols/http.py	15 Nov 2002 20:57:58 -0000	1.63
+++ protocols/http.py	3 Dec 2002 13:57:32 -0000
@@ -268,6 +268,8 @@
     length = None
     firstLine = 1
     __buffer = ''
+    delimiter = '\r\n'
+    crlfhack = 1
 
     def sendCommand(self, command, path):
         self.transport.write('%s %s HTTP/1.0\r\n' % (command, path))
Index: web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.9
diff -u -r1.9 proxy.py
--- web/proxy.py	15 Nov 2002 20:47:36 -0000	1.9
+++ web/proxy.py	3 Dec 2002 13:57:32 -0000
@@ -106,9 +106,15 @@
                                s, self)
         reactor.connectTCP(host, port, clientFactory)
 
-class Proxy(http.HTTPChannel):
-
-    requestFactory = ProxyRequest
+class Proxy(http.HTTPFactory):
+    def buildProtocol(self, addr):
+        """Generate a channel attached to this site.
+        """
+        channel = http.HTTPChannel()
+        channel.requestFactory = ProxyRequest
+        channel.site = self
+        channel.factory = self
+        return channel
 
 
 class ReverseProxyRequest(http.Request):



From missive at hotmail.com  Tue Dec  3 07:33:00 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 03 Dec 2002 14:33:00 +0000
Subject: [Twisted-Python] /doc/howto/listings/application/app3.py
Message-ID: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>

Hi;

This patch fixes a typo in one of the example apps.


9:09 >cvs diff -u
? app3.py.original
cvs server: Diffing .
Index: app3.py
===================================================================
RCS file: /cvs/Twisted/doc/howto/listings/application/app3.py,v
retrieving revision 1.1
diff -u -r1.1 app3.py
--- app3.py     8 Oct 2002 06:05:35 -0000       1.1
+++ app3.py     3 Dec 2002 14:21:39 -0000
@@ -12,10 +12,10 @@

def main():
     # namespaces are weird. See the comment in doc/examples/echoserv.py
-    import app1
+    import app3
     from twisted.internet.app import Application
     f = Factory()
-    f.protocol = app1.OneTimeKey
+    f.protocol = app3.OneTimeKey
     f.nextkey = 0
     app = Application("otk")
     app.listenTCP(8123, f)






_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From twisted at moshez.org  Tue Dec  3 09:18:46 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 3 Dec 2002 16:18:46 -0000
Subject: [Twisted-Python] tcs-common
Message-ID: <20021203161846.16733.qmail@green.zadka.com>

I have a Debian package for tcs_common.
Remarks, in decreasing order of importance
* No license (show stopper) 
* No version number (almost show stopper)
* Can something be done about the name, please? it's a silly name
* Not developed sanely via a CVS module.

Thanks.
Moshe Zadka



From z3p at twistedmatrix.com  Tue Dec  3 11:11:35 2002
From: z3p at twistedmatrix.com (z3p at twistedmatrix.com)
Date: Tue, 3 Dec 2002 13:11:35 -0500
Subject: [Twisted-Python] RE: tcs-common
Message-ID: <244640-220021223181135786@M2W097.mail2web.com>

I'll fix 1 and 2 when I get home (LGPL and 1.0).  As for 3, I'm open to
suggestions.  I don't have any plans to set up CVS for it because the
module is for all intents and purposes finshed except for a possible name
change.

-p

Original Message:
-----------------
From: Moshe Zadka twisted at moshez.org
Date: 3 Dec 2002 16:18:46 -0000
To: twisted-python at twistedmatrix.com, z3p at twistedmatrix.com
Subject: tcs-common


I have a Debian package for tcs_common.
Remarks, in decreasing order of importance
* No license (show stopper) 
* No version number (almost show stopper)
* Can something be done about the name, please? it's a silly name
* Not developed sanely via a CVS module.

Thanks.
Moshe Zadka

--------------------------------------------------------------------
mail2web - Check your email from the web at
http://mail2web.com/ .





From twisted at moshez.org  Tue Dec  3 11:23:45 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 3 Dec 2002 18:23:45 -0000
Subject: [Twisted-Python] RE: tcs-common
In-Reply-To: <244640-220021223181135786@M2W097.mail2web.com>
References: <244640-220021223181135786@M2W097.mail2web.com>
Message-ID: <20021203182345.18409.qmail@green.zadka.com>

On Tue, 3 Dec 2002, "z3p at twistedmatrix.com" <z3p at twistedmatrix.com> wrote:

> As for 3, I'm open to suggestions

Here are some, off the top of my head:
tgmp
twnumber
gmpow
twmpz

Any of them would be better than a historical reminder.

> I don't have any plans to set up CVS for it because the
> module is for all intents and purposes finshed except for a possible name
> change
...and adding the debian/ subdirectory
...and fixing bugs
...and finding more gmp bindings which can speed up ssh or other protocols



From dave at krondo.com  Tue Dec  3 16:48:13 2002
From: dave at krondo.com (Dave Peticolas)
Date: 03 Dec 2002 15:48:13 -0800
Subject: [Twisted-Python] PATCH: dns server patch
Message-ID: <1038959293.20714.11.camel@oneiros>

This patch fixes a function call with too many arguments.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch2
Type: text/x-patch
Size: 593 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021203/810316f4/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20021203/810316f4/attachment.sig>

From glyph at twistedmatrix.com  Tue Dec  3 18:27:24 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 19:27:24 -0600 (CST)
Subject: [Twisted-Python] PATCH: adbapi.py string escaping
In-Reply-To: <1037871572.3454.12.camel@oneiros>
References: <1037871572.3454.12.camel@oneiros>
Message-ID: <20021203.192724.78728397.glyph@twistedmatrix.com>


On 21 Nov 2002 01:39:32 -0800, Dave Peticolas <dave at krondo.com> wrote:
> The 'safe' function in twisted.enterprise.adbapi escapes single
> quotes, but I know at least Postgres and MySQL also accept backslash
> escapes, which means embedded backslashes need to be escaped as well,
> or they will be removed.

> The attached patch escapes embedded backslashes. I haven't tested
> it on databases other than Postgres or MySQL.

I'm committing this patch, even though it's not really correct, since AFAIK
nobody is using Twisted with a different database :-).

We should probably be doing escaping using DB-API's interpolation facilities to
make sure that it's right for each database (and if it isn't it becomes a
driver problem, not a Twisted problem).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021203/7172ad2d/attachment.sig>

From glyph at twistedmatrix.com  Tue Dec  3 18:29:45 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 19:29:45 -0600 (CST)
Subject: [Twisted-Python] gtk2reactor
In-Reply-To: <1037914536.1101.16.camel@oneiros>
References: <1037914536.1101.16.camel@oneiros>
Message-ID: <20021203.192945.126785336.glyph@twistedmatrix.com>


On 21 Nov 2002 13:35:36 -0800, Dave Peticolas <dave at krondo.com> wrote:

> Attached is a reactor for pygtk using Gtk 2.0.  It is basically gtkreactor
> with fixes for api changes from pygtk 1->2.

Committed, thanks.  Any chance you could contribute a basic test as well? :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021203/a4576836/attachment.sig>

From glyph at twistedmatrix.com  Tue Dec  3 20:10:12 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 03 Dec 2002 21:10:12 -0600 (CST)
Subject: [Twisted-Python] PATCH: dns server patch
In-Reply-To: <1038959293.20714.11.camel@oneiros>
References: <1038959293.20714.11.camel@oneiros>
Message-ID: <20021203.211012.74731212.glyph@twistedmatrix.com>

On 03 Dec 2002 15:48:13 -0800, Dave Peticolas <dave at krondo.com> wrote:
> This patch fixes a function call with too many arguments.

Thanks, committed as well.  Do you want CVS access?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021203/7f08aa0c/attachment.sig>

From z3p at twistedmatrix.com  Tue Dec  3 22:26:57 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 04 Dec 2002 00:26:57 -0500
Subject: [Twisted-Python] RE: tcs-common
In-Reply-To: <20021203182345.18409.qmail@green.zadka.com>
References: <244640-220021223181135786@M2W097.mail2web.com>
Message-ID: <3DED4BD1.2053.21F11E1@localhost>

On 3 Dec 2002 at 18:23, Moshe Zadka wrote:

> On Tue, 3 Dec 2002, "z3p at twistedmatrix.com" <z3p at twistedmatrix.com> wrote:
> 
> > As for 3, I'm open to suggestions
> 
> Here are some, off the top of my head:
> tgmp

This is our winner.  Get it at 
http://www.twistedmatrix.com/users/z3p/files/tgmp-
1.0.tar.gz

> > I don't have any plans to set up CVS for it because the
> > module is for all intents and purposes finshed except for a possible name
> > change

It's in CVS now, but not on a generally network-
accessable computer.  Might move it later.

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From dave at krondo.com  Wed Dec  4 00:37:03 2002
From: dave at krondo.com (Dave Peticolas)
Date: 03 Dec 2002 23:37:03 -0800
Subject: [Twisted-Python] PATCH: gtk2 testing
In-Reply-To: <1038959293.20714.11.camel@oneiros>
References: <1038959293.20714.11.camel@oneiros>
Message-ID: <1038987423.20714.21.camel@oneiros>

This patch adds a 'gtk2' test type argument which uses the gtk2 reactor
for the test suite. Both gtk & gtk2 reactor fail more tests than the 
default reactor. A previous patch I sent fixes the policy test. I will
be looking into the others.

dave

-------------- next part --------------
? dirdbm.rebuild.test
? wovenTestOutput1.html
? wovenTestOutput2.html
? wovenTestOutput3.html
? wovenTestOutput4.html
? wovenTestOutput5.html
? wovenTestOutput6.html
Index: runtests
===================================================================
RCS file: /cvs/Twisted/admin/runtests,v
retrieving revision 1.15
diff -u -r1.15 runtests
--- runtests	24 Sep 2002 17:35:15 -0000	1.15
+++ runtests	4 Dec 2002 07:31:23 -0000
@@ -114,6 +114,7 @@
         else:
             reactorTypes = {
                 'gtk': 'twisted.internet.gtkreactor',
+                'gtk2': 'twisted.internet.gtk2reactor',
                 'default': 'twisted.internet.default',
                 'win32': 'twisted.internet.win32eventreactor',
                 'win': 'twisted.internet.win32eventreactor',
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20021203/bbf0fe24/attachment.sig>

From warner at lothar.com  Wed Dec  4 01:31:18 2002
From: warner at lothar.com (Brian Warner)
Date: 04 Dec 2002 00:31:18 -0800
Subject: [Twisted-Python] /doc/howto/listings/application/app3.py
In-Reply-To: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>
References: <F149RWYEzQ50jibjd2L00021ded@hotmail.com>
Message-ID: <873cpe5go9.fsf@luther.lothar.com>

"Lee Harr" <missive at hotmail.com> writes:
> 
> This patch fixes a typo in one of the example apps.

Applied, thanks.

 -Brian



From naesten at myrealbox.com  Wed Dec  4 09:49:13 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 04 Dec 2002 11:49:13 -0500
Subject: [Twisted-Python] apploader patch, take 2
Message-ID: <3DEE3209.2080605@myrealbox.com>

This time its twisted.persisted.apploader. Please give feedback.
--SamB
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: apploader.patch
URL: </pipermail/twisted-python/attachments/20021204/1ea3f880/attachment.ksh>

From smurf at noris.de  Wed Dec  4 10:04:13 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 4 Dec 2002 18:04:13 +0100
Subject: [Twisted-Python] apploader patch, take 2
In-Reply-To: <3DEE3209.2080605@myrealbox.com>; from naesten@myrealbox.com on Wed, Dec 04, 2002 at 11:49:13AM -0500
References: <3DEE3209.2080605@myrealbox.com>
Message-ID: <20021204180413.G8059@noris.de>

Hi,

Samuel Bronson:
> This time its twisted.persisted.apploader. Please give feedback.

Perusing this patch:
> --- TwistedClean/twisted/scripts/mktap.py	Mon Sep 30 04:25:20 2002
> +++ Twisted/twisted/scripts/mktap.py	Mon Dec  2 16:34:24 2002
> @@ -39,7 +39,7 @@
>  
>  def loadPlugins(debug = 0, progress = 0):
>      try:
> -        plugins = getPlugIns("tap", debug, progress)
> +        plugins = getPlugIns("tap", debug, progres`s)

Oops! Let me guess -- you forgot to test this.  ;-)

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021204/41f91270/attachment.sig>

From naesten at myrealbox.com  Wed Dec  4 10:20:24 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 04 Dec 2002 12:20:24 -0500
Subject: [Twisted-Python] apploader patch, take 2
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de>
Message-ID: <3DEE3958.30104@myrealbox.com>


Matthias Urlichs wrote

>Oops! Let me guess -- you forgot to test this.  ;-)
>

Oops, I did!




From smurf at noris.de  Wed Dec  4 11:04:21 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 4 Dec 2002 19:04:21 +0100
Subject: [Twisted-Python] apploader patch, take 2
In-Reply-To: <3DEE3958.30104@myrealbox.com>; from naesten@myrealbox.com on Wed, Dec 04, 2002 at 12:20:24PM -0500
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de> <3DEE3958.30104@myrealbox.com>
Message-ID: <20021204190420.H8059@noris.de>

Hi,

Samuel Bronson:
> Matthias Urlichs wrote
> >Oops! Let me guess -- you forgot to test this.  ;-)
> 
> Oops, I did!
> 
Then you must have hit a few random keys while sending that patch.
The line I quoted isn't valid Python...

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021204/52d1d77b/attachment.sig>

From bh at intevation.de  Wed Dec  4 11:14:17 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 04 Dec 2002 19:14:17 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
Message-ID: <6qd6ohejnq.fsf@salmakis.intevation.de>

Hi all,

I've been working on a project using twisted for the last few weeks. In
the process I've written quite a few unittests most of which need to run
a twisted reactor either directly as reactor.run or via an Application
instance's run() method.

It's amazing how difficult that is, given that twisted itself has an
extensive set of unittests. Running only one test with a main loop is
simple but running several tests that need to listen and unlisten the
same ports or that have timeouts, etc. seems much more difficult than it
should be.

How difficult would it be to implement at least one of the following
features?

 1. a way to reset a reactor so that e.g. a new unit test could start
    with a clean state. It's OK for me if the unittest itself has to
    take care to do some things automatically such as disconnecting
    connections or unlistenting.

 2. A base class (derived from unittest.TestCase or as a mix-in class)
    for tests that need to run the main loop. There should perhaps be
    two of them, one for plain reactor usage and for test with
    Application instances. 

    Obviously this would require having 1. to a certain extent. However,
    it's OK if the class knew how to achieve a reset in as far as that
    is necessary for test cases. For instance, the base class could
    require that derived classes don't call the reactor directly to
    listen or to add delayed calls and go through some method instead to
    e.g. keep track of the ids returned by reactor.callLater.


AFAICT neither is currently implemented in twisted. There even seems to
be one unit test (test_sister) that's not implemented because of this.

I have effectively implemented no. 2 as part of my unit-tests but only
as much as I needed it so far. It didn't take much code but there are
some tricky things:

 1. After and unlisten when the loop has already been left, call
    reactor.iterate() to make sure the port is properly freed again.
    This was relatively easy to figure out because some twisted test
    cases do this.

 2. Application.run() will only run the reactor mainloop if main.running
    is not true. Unfortunately, main.running is not unset when
    main.shutdown or main.crash is called, so when trying to enter
    application main loops more than once, even for different
    application instances, once has to explicitly unset main.running.

My code will eventually be available under GPL as part of the
'GREAT-ER'[1] software we're developing, but it's not yet in CVS. 

If there's interest in including my test case base class in twisted I
could make it available sooner and under LGPL.


   Bernhard


[1] http://great-er.intevation.de/


-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From m at moshez.org  Wed Dec  4 11:39:26 2002
From: m at moshez.org (Moshe Zadka)
Date: 4 Dec 2002 18:39:26 -0000
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qd6ohejnq.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
Message-ID: <20021204183926.32354.qmail@green.zadka.com>

Hi Bernhard!
Glad to see you're using Twisted.

On 04 Dec 2002, Bernhard Herzog <bh at intevation.de> wrote:

>  1. a way to reset a reactor so that e.g. a new unit test could start
>     with a clean state. It's OK for me if the unittest itself has to
>     take care to do some things automatically such as disconnecting
>     connections or unlistenting.

In general, a way to reset the reactor would be cool.

> If there's interest in including my test case base class in twisted I
> could make it available sooner and under LGPL.

FYI: Twisted patches must also be copyrighted by Glyph.

Thanks,
Moshe



From carball at hush.com  Thu Dec  5 01:53:53 2002
From: carball at hush.com (carball at hush.com)
Date: Thu,  5 Dec 2002 00:53:53 -0800
Subject: [Twisted-Python] ldaptor authorizer / getObjectAtSSL
Message-ID: <200212050853.gB58rs4s039628@mailserver4.hushmail.com>


ok, got a ldap authorizer for pb working, using most of the code that's
in ldaptor-webui ( had to subclass some "auth stuff" in pb, as well
as roll my own pb.connect processing chain to bypass the md5 challenge/auth ) and now i'm passing the password in the clear
during login, which is not a good thing. . but i'm pretty sure
i have to do this. . ( any alternative suggestions? )

so now, i have a situation where SSL'itizing pb is a necessity
and i cant deploy my app without it. .

ppl say they are doing it, i know now that it is not a trivial thing
( got myself the orielly openssl book, to ease my understanding )

so i go to use pb.getObjectAtSSL, and i see that it's not passing
in a ctxFactory to reactor.connectSSL??

so i plug a ssl.ClientContextFactory in and try to run the pbsimple.py
and pbsimpleclient.py ( from docs/examples ) with the same setup as
echoserv_ssl.py and echoclient_ssl.py, to no avail. .

i ran a tcpdump, seems the client starts, the server responds,
the client says something back, and that's it. . the first deferred never returns, i do a ctrl-c and it runs the errback with a 'connection lost' failure. .

--------------------------------

with all that out of the way, my questions:

has anyone written pb/ssl code that works?

what are the hurdles that must be cleared in order to get
tricky twisted protocols ( in this case i'm talking about
pb and ldaptor ) to work through SSL?

------------------------
thank you
car 



Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From radix at twistedmatrix.com  Thu Dec  5 11:10:47 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 5 Dec 2002 13:10:47 -0500
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qd6ohejnq.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
Message-ID: <20021205181047.GA12298@Radii>

On Wed, Dec 04, 2002 at 07:14:17PM +0100, Bernhard Herzog wrote:
> My code will eventually be available under GPL as part of the
> 'GREAT-ER'[1] software we're developing, but it's not yet in CVS. 
> 
> If there's interest in including my test case base class in twisted I
> could make it available sooner and under LGPL.

We'd *really* appreciate such a thing. A lot of the existing tests are so ugly
that it's hard to extend them right now, and something like this would make it
a lot easier to clean all of these up.

Also, as moshez said, Glyph needs the copyright on contributions, but you can
still retain your own copyright on it.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From ab at pobox.com  Thu Dec  5 10:26:44 2002
From: ab at pobox.com (Amir Bakhtiar)
Date: Thu, 5 Dec 2002 12:26:44 -0500
Subject: [Twisted-Python] (no subject)
Message-ID: <014701c29c83$7bfd1e70$877ba8c0@OldDell>

confirm 927740
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20021205/353abfd5/attachment.html>

From brian64007 at bellsouth.net  Fri Dec  6 12:54:32 2002
From: brian64007 at bellsouth.net (Brian Kaplan)
Date: Fri, 06 Dec 2002 14:54:32 -0500
Subject: [Twisted-Python] twisted.words question
Message-ID: <62MH9XTIHZYXVMHB0NKOMWU5XTC7YT.3df10078@toni>

Not to be rude,
Definitely not to intrude,
But why in the heck,
Is irc_LIST a rejec',
What security hole,
Does it actually hold,
What security hole does it actually mold?
-----------------------------------------------------------------------
Brian Kaplan
http://brios.cprogrammer.org

 





From lordvan at lordvan.com  Fri Dec  6 13:26:32 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Fri, 6 Dec 2002 21:26:32 +0100 (CET)
Subject: [Twisted-Python] fzZzy: patch for t/web/woven/template.py
Message-ID: <65406.62.47.64.183.1039206392.squirrel@mail-at.net>

Hi!

cuz i needed it i fixed that bug with DOMTemplate stuff not accepting
self.template="some string"

maybe there should be checked too if templateFile&Dir are specified(and
should be used then .. but that's your choice ;)

greetings, LordVan


--- /usr/portage/distfiles/cvs-src/Twisted/twisted/web/woven/template.py  
    2
002-11-25 08:42:55.000000000 +0100
+++ /usr/lib/python2.2/site-packages/twisted/web/woven/template.py     
2002-12-
06 21:20:57.000000000 +0100
@@ -188,7 +188,7 @@
         """
         Resource.__init__(self)
         if templateFile:
-            self.templateFile = templateFile
+          self.templateFile = templateFile

         self.outstandingCallbacks = 0
         self.failed = 0
@@ -225,6 +225,8 @@
         as the template. The first time the template is used it is cached
         for speed.
         """
+        if self.template:
+          return microdom.parseString(self.template)
         if not self.templateDirectory:
             mod = sys.modules[self.__module__]
             if hasattr(mod, '__file__'):


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From naesten at myrealbox.com  Fri Dec  6 17:08:05 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Fri, 06 Dec 2002 19:08:05 -0500
Subject: [Twisted-Python] apploader patch, take 2
References: <3DEE3209.2080605@myrealbox.com> <20021204180413.G8059@noris.de> <3DEE3958.30104@myrealbox.com> <20021204190420.H8059@noris.de>
Message-ID: <3DF13BE5.4070605@myrealbox.com>

>
>
>>>Oops! Let me guess -- you forgot to test this.  ;-)
>>>      
>>>
>>Oops, I did!
>>
>>    
>>
>Then you must have hit a few random keys while sending that patch.
>The line I quoted isn't valid Python...
>
No, I meant oops, I did forget. Anyway I think its okay if you forget
about that hunk.




From cdodt at fcoe.k12.ca.us  Fri Dec  6 11:58:18 2002
From: cdodt at fcoe.k12.ca.us (Cory Dodt)
Date: Fri, 6 Dec 2002 10:58:18 -0800
Subject: [Twisted-Python] Long patch: Win32 Shortcuts
Message-ID: <000d01c29d59$70d80290$e301340a@cyberhigh.fcoe.k12.ca.us>

Description
-----------
This patch establishes the beginning stages of creating shortcut Icons
on Win32.  It uses a new feature in distutils 1.03(CVS) which allows
post-installation code to run by specifying --install-script on the
command line.

The patch is fully backward compatible with distutils 1.02 if you don't
want the new features.

Instructions
------------
1. Apply the patch.
2. Get and install CVS distutils.
3. python setup.py build --compiler=(mingw|cygwin)
(It helps if you have python22/libs/python22.a, so you can get a
complete build.)
4. python setup.py bdist_wininst --install-script=twisted-post-install

Will this work if you're building on Unix? I don't know.


Functionality
-------------
The installer creates a folder under Start Menu>Programs>Twisted
{version} for all users (so the installer needs admin privileges to run,
but this is pretty much the norm for Windows people).

The first icon in that folder launches a command prompt with an
environment set such that twisted scripts can be run from the command
line without tinkering with paths, pathext's, etc.

An uninstall icon is also added.

Next Steps
----------
* icons for the tk* scripts can be added (once those work in Windows)
* script to turn create icons from taps should also be pretty easy
* doc icon should be trivial to add

Another script to turn a tap into a service is also well within reason
(although not directly related to this effort).

Known Bugs
----------
The shortcuts are not removed when Twisted is uninstalled from
Add/Remove Programs.  The post-install script also gets run
post-uninstallation so, in theory, twisted-post-install could detect
whether installation or uninstallation was taking place and decide
whether to add or remove icons on that basis.  In practice, the only way
to detect this is to see if the icons are already there, and this method
will create havoc if you're installing over an existing installation.

The PyShortcut class in t.scripts.postinstall should have a home
somewhere else. Any suggestions on where to put it?

Patch:
_______ snip _______
diff -x '*CVS*' -Nabur Twisted/setup.py Twisted-win/setup.py
--- Twisted/setup.py	2002-12-04 23:59:26.000000000 -0800
+++ Twisted-win/setup.py	2002-12-06 10:15:39.000000000 -0800
@@ -223,6 +223,7 @@
         'bin/coil', 'bin/tapconvert', 'bin/websetroot',
         'bin/generatelore', 'bin/html2latex', 'bin/hlint',
         'bin/tkmktap', 'bin/conch',
+        'twisted-post-install'
     ],
     'cmdclass': {
         'install_scripts': install_scripts_twisted,
@@ -239,7 +240,8 @@
 
 imPath = os.path.join('twisted', 'im')
 setup_args['data_files'] = [(imPath, [os.path.join(imPath,
'instancemessenger.glade')]),
-                            ('twisted', [os.path.join('twisted',
'plugins.tml')])]
+                            ('twisted', [os.path.join('twisted',
'plugins.tml')]),
+                            ('twisted', [os.path.join('twisted',
'twistenv.bat')])]
 
 # always define WIN32 under Windows
 if os.name == 'nt':
diff -x '*CVS*' -Nabur Twisted/twisted/scripts/postinstall.py
Twisted-win/twisted/scripts/postinstall.py
--- Twisted/twisted/scripts/postinstall.py	1969-12-31
16:00:00.000000000 -0800
+++ Twisted-win/twisted/scripts/postinstall.py	2002-12-06
10:53:01.000000000 -0800
@@ -0,0 +1,111 @@
+import sys
+import os.path
+from distutils import sysconfig
+import twisted.copyright
+from twisted.python.runtime import platform
+import win32api
+import win32con
+
+from win32com.shell import shell
+import pythoncom, os, sys
+
+class PyShortcut: # this definitely belongs somewhere else
+  def __init__(self, 
+               path=None,
+               arguments=None, 
+               description=None,
+               workingdir=None):
+    self._base = pythoncom.CoCreateInstance(
+      shell.CLSID_ShellLink, None,
+      pythoncom.CLSCTX_INPROC_SERVER, shell.IID_IShellLink
+    )
+    data = map(None, 
+               [path, arguments, description, workingdir], 
+               ("SetPath", "SetArguments", "SetDescription",
"SetWorkingDirectory") )
+    for value, function in data:
+      if value and function:
+        # call function on each non-null value
+        getattr(self, function)(value)
+
+  def load( self, filename ):
+    # Get an IPersist interface
+    # which allows save/restore of object to/from files
+    self._base.QueryInterface( pythoncom.IID_IPersistFile ).Load(
filename )
+  def save( self, filename ):
+    self._base.QueryInterface( pythoncom.IID_IPersistFile ).Save(
filename,
+0 )
+  def __getattr__( self, name ):
+    if name != "_base":
+      return getattr( self._base, name )
+
+
+def getProgramsMenuPath():
+  """getStartMenuPath() -> String|None
+  Return the filesystem location of the common Start Menu.
+  """
+  if not platform.isWinNT:
+    return "C:\\Windows\\Start Menu\\Programs"
+  hShellFolders=win32api.RegOpenKeyEx(win32con.HKEY_LOCAL_MACHINE,
+      'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell
Folders',
+                                      0, 
+                                      win32con.KEY_READ)
+  common_start_menu=win32api.RegQueryValueEx(hShellFolders, 'Common
Start Menu')[0]
+  return os.path.join(common_start_menu, "Programs")
+
+def getBatFilename():
+  """getBatFilename() -> String|None
+  Return the location of the environment setup script.
+  """
+  python_dir=sysconfig.get_config_var("prefix")
+  return os.path.join(python_dir,
+                      'lib', 'site-packages', 'twisted',
'twistenv.bat')
+
+def run():
+    if platform.type != "win32":
+      pass
+    else:
+      print "Installing environment script...",
+      scripts_dir=os.path.join(sysconfig.get_config_var("prefix"),
"scripts")
+      # FIXME - this list needs some work
+      twisted_scripts=" ".join(["twistd", "mktap", "im",
"generatelore",
+                                "hlint", "manhole", "t-im",
"tapconvert",
+                                "html2latex"])
+      batch_script="""@echo off
+set PATHEXT=%%PATHEXT%%;.py
+set PATH=%(scripts_dir)s;%%PATH%%
+set PATH
+echo -:- -:- -:- -:- -:--:- -:- -:- -:- -:--:- -:- -:- -:- -:-
+echo Commands available in twisted: %(twisted_scripts)s
+echo -:- -:- -:- -:- -:--:- -:- -:- -:- -:--:- -:- -:- -:- -:-
+""" % locals()
+      bat_location=getBatFilename()
+      bat_file=open(bat_location, 'w')
+      bat_file.write(batch_script)
+      bat_file.close()
+
+      print "Done."
+      print 'Installing Icons for Twisted...',
+      sys.stdout.flush()
+      menu_path=os.path.join(getProgramsMenuPath(),
+                             "Twisted %s" %twisted.copyright.version)
+      try:
+        os.mkdir(menu_path)
+      except OSError:
+        pass
+
+      shortcut=PyShortcut(os.getenv("ComSpec"),
+                          "/k %s" % bat_location,
+                          workingdir="C:\\")
+      shortcut.save(os.path.join(menu_path, "Twisted Command
Prompt.lnk"))
+      python_dir=sysconfig.get_config_var("prefix")
+      remove_exe=os.path.join(python_dir, "RemoveTwisted.exe")
+      remove_log=os.path.join(python_dir, "Twisted-wininst.log")
+      shortcut=PyShortcut(remove_exe, '-u "%s"' % remove_log)
+      shortcut.save(os.path.join(menu_path, "Uninstall Twisted.lnk"))
+
+      print "Done."
+      print "Post-install successful!"
+
+if __name__=='__main__':
+  run()
+
diff -x '*CVS*' -Nabur Twisted/twisted/twistenv.bat
Twisted-win/twisted/twistenv.bat
--- Twisted/twisted/twistenv.bat	1969-12-31 16:00:00.000000000
-0800
+++ Twisted-win/twisted/twistenv.bat	2002-12-03 17:27:40.000000000
-0800
@@ -0,0 +1,2 @@
+ at echo Twisted was not correctly installed! +pause diff -x '*CVS*'
-Nabur Twisted/twisted-post-install Twisted-win/twisted-post-install
--- Twisted/twisted-post-install	1969-12-31 16:00:00.000000000
-0800
+++ Twisted-win/twisted-post-install	2002-12-04 07:41:12.000000000
-0800
@@ -0,0 +1,29 @@
+#!/usr/bin/env python
+
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General
Public
+# License as published by the Free Software Foundation.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
USA
+
+### Twisted Preamble
+# This makes sure that users don't have to set up their environment
+# specially in order to run these programs from bin/.
+import sys, os, string
+if string.find(os.path.abspath(sys.argv[0]), os.sep+'Twisted') != -1:
+    sys.path.insert(0,
os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]), os.pardir,
os.pardir)))
+sys.path.insert(0, os.curdir)
+### end of preamble
+
+from twisted.scripts import postinstall
+postinstall.run()




From carball at hush.com  Sat Dec  7 01:40:55 2002
From: carball at hush.com (carball at hush.com)
Date: Sat,  7 Dec 2002 00:40:55 -0800
Subject: [Twisted-Python] cacheable.stoppedObserving not being called on client disconnect?
Message-ID: <200212070840.gB78et0l086352@mailserver3.hushmail.com>

arg, cacheable.stoppedObserving is not being called on
client disconnect for me. .

just wondering if anyone else has seen similar problems or
if it's something incorrect on my end. .

--------------------

in regards to my earlier question on ssl, i've decided to
use stunnel until i become savvy enough with twisted to hack
it out myself. .

-------------------

thank you
car



Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From theller at python.net  Mon Dec  9 01:11:56 2002
From: theller at python.net (Thomas Heller)
Date: 09 Dec 2002 09:11:56 +0100
Subject: [Twisted-Python] Re: Long patch: Win32 Shortcuts
References: <000d01c29d59$70d80290$e301340a@cyberhigh.fcoe.k12.ca.us>
Message-ID: <r8crbohf.fsf@python.net>

"Cory Dodt" <cdodt at fcoe.k12.ca.us> writes:

> Description
> -----------
> This patch establishes the beginning stages of creating shortcut Icons
> on Win32.  It uses a new feature in distutils 1.03(CVS) which allows
> post-installation code to run by specifying --install-script on the
> command line.
[...]
> Known Bugs
> ----------
> The shortcuts are not removed when Twisted is uninstalled from
> Add/Remove Programs.  The post-install script also gets run
> post-uninstallation so, in theory, twisted-post-install could detect
> whether installation or uninstallation was taking place and decide
> whether to add or remove icons on that basis.  In practice, the only way
> to detect this is to see if the icons are already there, and this method
> will create havoc if you're installing over an existing installation.

Cory,

I really should write up some docs for the postinstall command on windows.
Here is some info which should probably solve some of your problems:

The postinstall script is run witt sys.argv[1] set to '-install' or
'-remove' depending on what is done, so there is no guesswork needed.

The easiest way to make sure files or directories are removed at
uninstallation is to register them with the installation log file,
then they will automatically be removed.  This can be done by calling
the file_created(path) or directory_created(path) functions. These
functions are available when bdist_wininst runs the postinstall script.

Thomas





From corydodt at yahoo.com  Mon Dec  9 10:57:00 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 9 Dec 2002 09:57:00 -0800 (PST)
Subject: [Twisted-Python] Updated icons patch (as attachment)
In-Reply-To: <20021209123407.22931.58904.Mailman@pyramid.twistedmatrix.com>
Message-ID: <20021209175700.23633.qmail@web10006.mail.yahoo.com>

> From: Thomas Heller <theller at python.net>
>
> Here is some info which should probably solve some of your problems:
> 
> The postinstall script is run witt sys.argv[1] set to '-install' or
> '-remove' depending on what is done, so there is no guesswork needed.
> 
> The easiest way to make sure files or directories are removed at
> uninstallation is to register them with the installation log file,
> then they will automatically be removed.  This can be done by calling
> the file_created(path) or directory_created(path) functions. These
> functions are available when bdist_wininst runs the postinstall script.
> 
> Thomas

Yes! Those tips solved my problems. :-)  Thanks a million Thomas.

I have updated the patch; icons now get removed when Twisted is
uninstalled.  I am attaching (not pasting) it so that long lines don't wrap.

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: win-patch-20021209.tar.gz
Type: application/x-gzip
Size: 5230 bytes
Desc: win-patch-20021209.tar.gz
URL: </pipermail/twisted-python/attachments/20021209/eeb1959f/attachment-0002.bin>

From typo at soniq.net  Mon Dec  9 10:16:25 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 9 Dec 2002 18:16:25 +0100
Subject: [Twisted-Python] internet.stdio
Message-ID: <20021209171625.GA4622@soniq.net>

hi,

i'm having a little trouble with twisted.internet.stdio:
because stdio.StandardIO does fdesc.setNonBlocking(self.fileno())
writes to stdout fail with EAGAIN.

possible fixes:
 make stdio blocking, maybe wrapped with a select and retry attempts.

 catch IOError/EAGAIN and retry a little later

thanks,
  paul



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Dec  9 13:29:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 09 Dec 2002 15:29:29 -0500
Subject: [Twisted-Python] adbapi.operationDone
Message-ID: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>

Twisted Gurus,

Yet another sophomoric question :^) ...

The only way I've come up with to pass in a value to 
adbapi.Augmentation.operationDone(done) is as follows:

class MyAug(Augmentation):
    def addThingy(self, whatever):
        args = munge(whatever) # make some sql, etc.
        out = self.runOperation(*args)
        out.addCallback(lambda x: self.operationDone('addThingy'))
        out.addErrback(self.operationError)
...

This works, but is there a more orthodox(/elegant) way?  I've 
tried many permutations of using callbackArgs, without success.

BTW, thanks for all the new twisted stuff ... I'm just starting 
to use lore ... very cool!  

Cheers,
-- Steve.



From andrew-twisted at puzzling.org  Mon Dec  9 15:33:37 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Dec 2002 09:33:37 +1100
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021209223337.GB3867@frobozz.local>

On Mon, Dec 09, 2002 at 03:29:29PM -0500, Steve Waterbury wrote:
> Twisted Gurus,
> 
> Yet another sophomoric question :^) ...
> 
> The only way I've come up with to pass in a value to 
> adbapi.Augmentation.operationDone(done) is as follows:
> 
> class MyAug(Augmentation):
>     def addThingy(self, whatever):
>         args = munge(whatever) # make some sql, etc.
>         out = self.runOperation(*args)
>         out.addCallback(lambda x: self.operationDone('addThingy'))
>         out.addErrback(self.operationError)
> ...
> 
> This works, but is there a more orthodox(/elegant) way?  I've 
> tried many permutations of using callbackArgs, without success.

What about:
   out.addCallback(self.operationDone)
?

The idea of course is that you subclass operationDone to be whatever you
want.  You're also free to ignore it; it's a convenience function.

I probably should update the "Introduction to Twisted Enterprise" doc to
make this clearer :)

> BTW, thanks for all the new twisted stuff ... I'm just starting 
> to use lore ... very cool!  

Thanks! :)

Lore's quite new though, so if you've got any feedback Moshe and I would
love to hear it.

-Andrew.




From bob at redivi.com  Mon Dec  9 15:48:56 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 9 Dec 2002 17:48:56 -0500
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov>
Message-ID: <65D8CAC4-0BC8-11D7-A1DC-0003938210D6@redivi.com>

On Monday, Dec 9, 2002, at 15:29 America/New_York, Steve Waterbury 
wrote:

> Twisted Gurus,
>
> Yet another sophomoric question :^) ...
>
> The only way I've come up with to pass in a value to
> adbapi.Augmentation.operationDone(done) is as follows:
>

You probably don't want to use self.operationDone() .. it's the default 
callback, and it sounds like you're trying to do more work than you 
have to (supposing you have more than one operation that your 
augmentation can do).  Why don't you do:

class MyAug(Augmentation):
   def addThingy(self, whatever):
     ...
     out.addCallback(self.addThingyDone)

   def addThingyDone(self):  # you might need to do def 
addThingyDone(self, noresult), I think the callback on the defer might 
throw an arg there
     .. do what you need to do

-bob




From corydodt at yahoo.com  Mon Dec  9 16:08:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 9 Dec 2002 15:08:08 -0800 (PST)
Subject: [Twisted-Python] Revised winicons patch
Message-ID: <20021209230808.23941.qmail@web10007.mail.yahoo.com>

Changes from last time:
- Win9x works


Where:
- http://twistedmatrix.com/users/moonfallen/winicons-20021209-2.tar.gz


Instructions:
- CVS distutils installed
- Untar over CVS Twisted
- libpython22.a in c:\python22\libs
C:\Twisted>python setup.py build --compiler=mingw32
C:\Twisted>python setup.py bdist_wininst
--install-script=twisted-post-install.py
C:\Twisted>dist\Twisted*.exe
- Observe the pretty icons.  Are they not magnificent?

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Dec  9 21:16:10 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 09 Dec 2002 23:16:10 -0500
Subject: [Twisted-Python] adbapi.operationDone
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov> <20021209223337.GB3867@frobozz.local>
Message-ID: <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>

Andrew Bennetts wrote:
> 
> On Mon, Dec 09, 2002 at 03:29:29PM -0500, Steve Waterbury wrote:
> > The only way I've come up with to pass in a value to
> > adbapi.Augmentation.operationDone(done) is as follows:
> > [ lambda folderol omitted ... ]
> 
> What about:
>    out.addCallback(self.operationDone)
> ?
> 
> The idea of course is that you subclass operationDone to be whatever you
> want.  You're also free to ignore it; it's a convenience function.

Ah, yes, I knew it would be something simple -- thanks Andrew 
(and Bob).  

> I probably should update the "Introduction to Twisted Enterprise" doc to
> make this clearer :)

Actually, you might want to start with the doc string for 
operationDone, which says:

        """Default callback for database operation success."""

I'd suggest something like:

        """Template for [or "example of"] callback indicating 
           operation success -- subclass as desired."""

I think I would have got the idea if it had said that.  
(It isn't really what I would call a default because it isn't 
called by default ... one has to explicitly call it, which, 
as you point out, isn't the intent ... kind of a nit, but 
enough to confuse a literalist such as myself ... ;^)  

I try to adhere as closely as possible to what I think is 
the design intent of the Twisted developers (since it tends to 
make life easier in the long run ;^), so doc string hints about 
subclassing, etc., are much appreciated -- as are the Twisted 
docs, of course, which are continuously improving -- thanks!  

> > BTW, thanks for all the new twisted stuff ... I'm just starting
> > to use lore ... very cool!
> 
> Lore's quite new though, so if you've got any feedback Moshe and I would
> love to hear it.

Okay.  I'm setting it up for our application docs, so I should 
have some comments soon.  (I had been using LyX, which is pretty 
nice, but it's even nicer to have better integrated, all-Python 
solution. ;^)  

BTW, has anyone here checked out Leo? ... seems interesting 
and might be integrable with lore ... so many documentation 
technologies, so little time ... 

Cheers,
-- Steve.



From andrew-twisted at puzzling.org  Mon Dec  9 21:59:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 10 Dec 2002 15:59:55 +1100
Subject: [Twisted-Python] adbapi.operationDone
In-Reply-To: <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>
References: <3DF4FD29.E71A2201@beeblebrox.gsfc.nasa.gov> <20021209223337.GB3867@frobozz.local> <3DF56A8A.23B21607@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021210045955.GB4014@frobozz.local>

On Mon, Dec 09, 2002 at 11:16:10PM -0500, Steve Waterbury wrote:
> Andrew Bennetts wrote:
> > 
> > I probably should update the "Introduction to Twisted Enterprise" doc to
> > make this clearer :)
> 
> Actually, you might want to start with the doc string for 
> operationDone, which says:
> 
>         """Default callback for database operation success."""
> 
> I'd suggest something like:
> 
>         """Template for [or "example of"] callback indicating 
>            operation success -- subclass as desired."""

I've decided to go with:
        """Example callback for database operation success.

        Override this, and/or define your own callbacks.
        """

That's now in CVS.

> I think I would have got the idea if it had said that.  
> (It isn't really what I would call a default because it isn't 
> called by default ... one has to explicitly call it, which, 
> as you point out, isn't the intent ... kind of a nit, but 
> enough to confuse a literalist such as myself ... ;^)  

Yeah, it was confusing, and needed to be fixed.

> I try to adhere as closely as possible to what I think is 
> the design intent of the Twisted developers (since it tends to 
> make life easier in the long run ;^), so doc string hints about 
> subclassing, etc., are much appreciated -- as are the Twisted 
> docs, of course, which are continuously improving -- thanks!  

The docs should always try to encourage "best practice" use of the code;
which means using the appropriate idioms in examples, and so on. 

Let us know if you find any other problems like this :)

> BTW, has anyone here checked out Leo? ... seems interesting 
> and might be integrable with lore ... so many documentation 
> technologies, so little time ... 

Leo is on my list of "things I'll look at when I have some spare time" ;)

-Andrew.




From twisted at itamarst.org  Tue Dec 10 06:26:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Dec 2002 08:26:05 -0500
Subject: [Twisted-Python] Fw: can you forward this
Message-ID: <20021210082605.1e98ae78.twisted@itamarst.org>

Laura is having routing issues, so she asked me to forward this:

-----------------------------------------------------------------------
Date: Tue, 10 Dec 2002 09:37:26 +0100
From: Laura Creighton <lac at strakt.com>
Message-Id: <200212100837.gBA8bQHO002296 at ratthing-b246.strakt.com>
To: twisted-python at twistedmatrix.com
Subject: Strakt's Python Success Story for the Upcoming O'Reilly Book

is about finished.  It contains this paragraph:

Our subsystems communicate securely, thanks to PyOpenSSL, and use
asynchronous architectures based on Twisted-Matrix 
(http://www.twistedmatrix.com) to achieve high scalability and
responsiveness.

1.  Does Twisted Matrix have or not have a hyphen?
2.  Would you like us to say something else as well?

Laura Creighton

(for details about Python Success Stories see: 
http://www.pythonology.org/successguide

A second volume is planned.  It is never too late to have a Python
success story)

Thank you all once again for Twisted.


- --gBACwvFm026322.1039525177/theraft.strakt.com--

------- End of Forwarded Message



From m at moshez.org  Tue Dec 10 08:04:08 2002
From: m at moshez.org (Moshe Zadka)
Date: 10 Dec 2002 15:04:08 -0000
Subject: [Twisted-Python] Fw: can you forward this
In-Reply-To: <20021210082605.1e98ae78.twisted@itamarst.org>
References: <20021210082605.1e98ae78.twisted@itamarst.org>
Message-ID: <20021210150408.19145.qmail@green.zadka.com>

On Tue, 10 Dec 2002, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> Our subsystems communicate securely, thanks to PyOpenSSL, and use
> asynchronous architectures based on Twisted-Matrix 
> (http://www.twistedmatrix.com) to achieve high scalability and
> responsiveness.
s/-Matrix//

The framework is simply called "Twisted"
 



From missive at hotmail.com  Tue Dec 10 08:59:15 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 10 Dec 2002 15:59:15 +0000
Subject: [Twisted-Python] /doc/index.html and /documents/
Message-ID: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>

Hi;

I am trying to figure out the relationship between /doc in the
cvs repository and /documents on the website. Are these in sync?

Also: It would be handy if there were an index.html in the /doc
directory which (at least minimally) pointed to the website.
(I know you can get this from "python setup.py --url" but I did
not know that until I started working on distributing my own
applications... before I would have just looked in /doc)

Thanks.

Lee Harr
missive at hotmail.com




_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From andrew-twisted at puzzling.org  Tue Dec 10 17:05:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 11 Dec 2002 11:05:49 +1100
Subject: [Twisted-Python] /doc/index.html and /documents/
In-Reply-To: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>
References: <F104ZNuIkdg0MZMtjQ4000075b6@hotmail.com>
Message-ID: <20021211000549.GA6950@frobozz.local>

On Tue, Dec 10, 2002 at 03:59:15PM +0000, Lee Harr wrote:
> Hi;
> 
> I am trying to figure out the relationship between /doc in the
> cvs repository and /documents on the website. Are these in sync?

The documentation on the website is in sync with the docs from the most
recent Twisted release.

-Andrew.




From lac at strakt.com  Tue Dec 10 01:37:26 2002
From: lac at strakt.com (Laura Creighton)
Date: Tue, 10 Dec 2002 09:37:26 +0100
Subject: [Twisted-Python] Strakt's Python Success Story for the Upcoming O'Reilly Book
Message-ID: <200212100837.gBA8bQHO002296@ratthing-b246.strakt.com>

is about finished.  It contains this paragraph:

Our subsystems communicate securely, thanks to PyOpenSSL, and use
asynchronous architectures based on Twisted-Matrix 
(http://www.twistedmatrix.com) to achieve high scalability and responsiveness.

1.  Does Twisted Matrix have or not have a hyphen?
2.  Would you like us to say something else as well?

Laura Creighton

(for details about Python Success Stories see: 
http://www.pythonology.org/successguide

A second volume is planned.  It is never too late to have a Python
success story)

Thank you all once again for Twisted.




From ac at strakt.com  Wed Dec 11 03:20:08 2002
From: ac at strakt.com (=?iso-8859-1?Q?Anders_Chrigstr=F6m?=)
Date: Wed, 11 Dec 2002 11:20:08 +0100 (CET)
Subject: [Twisted-Python] qtreactor.py is broken (and a patch for it)
Message-ID: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>

The TwistedSocketNotifier in qtreactor.py does not call setEnabled
properly, causing writing to the socket to halt.

Patch to fix it follows:
Index: twisted/internet/qtreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/qtreactor.py,v
retrieving revision 1.9
diff -u -3 -r1.9 qtreactor.py
--- twisted/internet/qtreactor.py	27 Sep 2002 15:38:18 -0000	1.9
+++ twisted/internet/qtreactor.py	11 Dec 2002 10:09:34 -0000
@@ -102,7 +102,7 @@
                 log.deferr()
             self.reactor.removeReader(w)
             self.reactor.removeWriter(w)
-        elif why is not None:
+        elif self.watcher:
             self.setEnabled(1)
         self.reactor.simulate()


Best regards,
	Anders

-- 
Anders Chrigström               Email: ac at strakt.com
AB Strakt                       Phone: +46 31 749 08 96
Norra Ågatan 10
416 64 Göteborg
SWEDEN




From twisted at itamarst.org  Wed Dec 11 13:51:04 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 11 Dec 2002 15:51:04 -0500
Subject: [Twisted-Python] qtreactor.py is broken (and a patch for it)
In-Reply-To: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>
References: <Pine.LNX.4.44.0212111116510.3690-100000@ashera.strakt.com>
Message-ID: <20021211155104.61a46e08.twisted@itamarst.org>

On Wed, 11 Dec 2002 11:20:08 +0100 (CET)
Anders Chrigström <ac at strakt.com> wrote:

> The TwistedSocketNotifier in qtreactor.py does not call setEnabled
> properly, causing writing to the socket to halt.

Fixed it in CVS. Thanks for the patch.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Wed Dec 11 17:58:38 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 11 Dec 2002 19:58:38 -0500
Subject: [Twisted-Python] debian/rules
Message-ID: <20021212005838.GA18176@meson.dyndns.org>

  funroll-loops(@#twisted at freenode.net) pointed out line 63 of debian/rules;
apparently the [ ]'s should not be present.  (I have no clue about this,
just thought I'd make a more visible report)

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 1 day, 22:16, 5 users, load average: 0.02, 0.05, 0.07
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021211/f8c4a4a2/attachment.sig>

From twisted at moshez.org  Wed Dec 11 19:10:05 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 12 Dec 2002 02:10:05 -0000
Subject: [Twisted-Python] debian/rules
In-Reply-To: <20021212005838.GA18176@meson.dyndns.org>
References: <20021212005838.GA18176@meson.dyndns.org>
Message-ID: <20021212021005.8699.qmail@green.zadka.com>

On Wed, 11 Dec 2002, Jp Calderone <exarkun at meson.dyndns.org> wrote:

>   funroll-loops(@#twisted at freenode.net) pointed out line 63 of debian/rules;
> apparently the [ ]'s should not be present.  (I have no clue about this,
> just thought I'd make a more visible report)

Thanks.
Remvoed [], together with line 63 itself.



From exarkun at meson.dyndns.org  Thu Dec 12 00:57:03 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 12 Dec 2002 02:57:03 -0500
Subject: [Twisted-Python] t.p.rebuild
Message-ID: <20021212075703.GA19604@meson.dyndns.org>

  twisted.python.rebuild.rebuild() currently breaks in some bizarre
circumstances (which I still cannot really say I understand completely),
however, the below fixes it.  

  The drawbacks: greater up-front costs for rebuilding (whereas the old
behavior spread the costs out over time); doesn't work with Python 2.1
(oops); imho is less desirable, for depending on gc.get_referrers().

  Advantages: -12 lines, +1 line; it works; it unifies one old/new style
class conditional.

  I'm not sure what my point is, except, here's the fix.  If it isn't
appropriate for it to go in for another few months (or however long we go
before deciding 2.1 support is no longer important) I probably don't mind,
I'll just use a locally modified version.

  Jp

===================================================================
RCS file: /cvs/Twisted/twisted/python/rebuild.py,v
retrieving revision 1.14
diff -u -r1.14 rebuild.py
--- rebuild.py  20 Sep 2002 20:29:41 -0000      1.14
+++ rebuild.py  12 Dec 2002 07:36:34 -0000
@@ -193,18 +193,19 @@
     if doLog:
         log.msg('  (cleaning %s): ' % str(module.__name__))
 
-    for clazz in classes:
-        if getattr(module, clazz.__name__) is clazz:
-            log.msg("WARNING: class %s not replaced by reload!" % reflect.qual(clazz))
-        else:
-            if doLog:
-                log.logfile.write("x")
-                log.logfile.flush()
-            clazz.__bases__ = ()
-            clazz.__dict__.clear()
-            clazz.__getattr__ = __getattr__
-            clazz.__module__ = module.__name__
-    for nclass in newclasses:
+    for nclass in classes + newclasses:
         ga = getattr(module, nclass.__name__)
         if ga is nclass:
             log.msg("WARNING: new-class %s not replaced by reload!" % reflect.qual(nclass))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021212/e7d972e4/attachment.sig>

From andrew-twisted at puzzling.org  Thu Dec 12 01:53:12 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 12 Dec 2002 19:53:12 +1100
Subject: [Twisted-Python] Lore and microdom problem.
Message-ID: <20021212085312.GA10010@frobozz.local>

There's a small glitch in Lore's LaTeX generation, and I'm not sure of the
best way to solve it.

In XHTML (and probably normal HTML), you link to http://foo.com/path?x=1&y=2
with <a href="http://foo.com/path?x=1&amp;y=2">.  Note the "&amp;".

Microdom is returning that still escaped, i.e. with the & intact, when I
suspect that it should be unescaping text in attribute values.  Is this a
bug?  If not, what should I being doing?

Also, I note there's no test cases sux or microdom -- tsk tsk ;)

-Andrew.




From bob at redivi.com  Thu Dec 12 08:53:51 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 12 Dec 2002 10:53:51 -0500
Subject: [Twisted-Python] Failed test cases w/ Twisted CVS on Mac OS X 10.2.x w/ (mostly) stock Python 2.2
Message-ID: <E8EDE678-0DE9-11D7-AE4D-0003938210D6@redivi.com>

I haven't looked very far into these.. but I do have a potential fix 
and a workaround..

for twisted.test.test_popsicle.PicklesicleTest.testPickle, the fix is 
likely as simple as changing True and False to 1 and 0 (2.2 doesn't 
know True and False, but 2.2.1 does... Apple hasn't updated to 2.2.2 
yet as of 10.2.3 build 6G24)

I suppose that the conch tests should be ignored if you're missing 
Crypto?

Note that I'm running an extra test suite (test_nmea.py) for the NMEA 
0183 GPS protocol I've submitted to Itamar, so my count is 352 instead 
of 351.

I try and keep my python pretty stock so I know what's going to run on 
untainted systems, I believe the only modules I've installed myself 
that twisted uses anywhere are ssl and the xml-sig stuff, since Apple 
obviously isn't very good at compiling python yet.

-bob

======================================================================
ERROR: Test DNS 'PTR' record queries
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/internet/udp.py", line 110, in 
doRead
     self.protocol.datagramReceived(data, addr)
   File "/Users/bob/src/Twisted/twisted/protocols/dns.py", line 809, in 
datagramReceived
     d.callback(m)
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 162, in 
callback
     self._startRunCallbacks(result, 0)
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 213, in 
_startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/defer.py", line 227, in 
_runCallbacks
     (self.result,)+tuple(args), kw)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 334, in 
_deferredFUEqualCallback
     self.failUnlessEqual(expected, success)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
exceptions.AssertionError: [<twisted.protocols.dns.Record_PTR instance 
at 0xccaec0>] != []
======================================================================
ERROR: testPickle (twisted.test.test_popsicle.PicklesicleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_popsicle.py", line 
113, in testPickle
     alice._tracker = gcall(l.append, True)
NameError: global name 'True' is not defined
======================================================================
ERROR: testNormalTermination 
(twisted.test.test_process.PosixProcessTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_process.py", line 207, 
in testNormalTermination
     p.reason.trap(error.ProcessDone)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.ProcessTerminated, process ended with exit code 1
]
======================================================================
ERROR: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 276, in 
testReconnect
     factory.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testFailing (twisted.test.test_tcp.LoopbackTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 131, in 
testFailing
     clientF.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testMessages (twisted.test.test_unix.UnixSocketTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_smtp.py", line 146, in 
testMessages
     self.loopback(protocol, clientProtocol)
   File "/Users/bob/src/Twisted/twisted/test/test_unix.py", line 27, in 
loopback
     loopback.loopbackUNIX(client, server)
   File "/Users/bob/src/Twisted/twisted/protocols/loopback.py", line 
132, in loopbackUNIX
     reactor.iterate()
   File "/Users/bob/src/Twisted/twisted/internet/base.py", line 201, in 
iterate
     self.doIteration(delay)
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/default.py", line 547, 
in doSelect
     why = getattr(selectable, method)()
   File "/Users/bob/src/Twisted/twisted/internet/abstract.py", line 102, 
in doWrite
     self.unsent = self.unsent[l:]
exceptions.TypeError: sequence index must be integer
======================================================================
FAIL: testCallLater (twisted.test.test_internet.InterfaceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_internet.py", line 96, 
in testCallLater
     self.assertEquals(self._called, 1)
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
AssertionError: 0 != 1
======================================================================
FAIL: testReadLimit (twisted.test.test_policies.ThrottlingTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_policies.py", line 
201, in testReadLimit
     self.assertEquals(c1.buffer, "01234567890123456789")
   File "/Users/bob/src/Twisted/pyunit/unittest.py", line 279, in 
failUnlessEqual
     raise self.failureException, (msg or '%s != %s' % (repr(first), 
repr(second)))
AssertionError: '0123456789' != '01234567890123456789'
======================================================================
FAIL: testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_rebuild.py", line 73, 
in testFileRebuild
     assert b.b() == 'c'
AssertionError
----------------------------------------------------------------------
Ran 352 tests in 151.419s

FAILED (failures=3, errors=6)
The following test modules had errors when loading:

* twisted.test.test_conch:
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_all.py", line 80, in 
loadTestsFromMyPackage
     locals(), globals(), [name])
   File "/Users/bob/src/Twisted/twisted/test/test_conch.py", line 19, in 
?
     from twisted.conch.ssh import keys, transport, factory, userauth, 
connection, common, session
   File "/Users/bob/src/Twisted/twisted/conch/ssh/keys.py", line 32, in ?
     from Crypto.Cipher import DES
ImportError: No module named Crypto.Cipher




From wilk-ml at flibuste.net  Fri Dec 13 06:58:07 2002
From: wilk-ml at flibuste.net (William Dode)
Date: 13 Dec 2002 14:58:07 +0100
Subject: [Twisted-Python] shared web hosting
Message-ID: <874r9i6mxc.fsf@flibuste.net>

hi,

Is there a pythonic way to use twistedmatrix in a shared web hosting ?
by pythonic way i mean to don't run an interpreter for each cgi script,
but to run each virtual host in a sand box (with different uid for each
virtualhost).
Like suexec with apache.

-- 
William Dode - http://flibuste.net



From alexandre.fayolle at free.fr  Fri Dec 13 07:38:58 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 13 Dec 2002 15:38:58 +0100
Subject: [Twisted-Python] running as nobody
Message-ID: <20021213143858.GB857@calvin.fayauffre.org>

What's the best way to get a twisted server to run as user nobody ?

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
Développement logiciel avancé - Intelligence Artificielle - Formations



From paul at nfg.nl  Fri Dec 13 07:54:07 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 13 Dec 2002 15:54:07 +0100
Subject: [Twisted-Python] running as nobody
In-Reply-To: <20021213143858.GB857@calvin.fayauffre.org>
References: <20021213143858.GB857@calvin.fayauffre.org>
Message-ID: <3DF9F48F.3020601@nfg.nl>

Alexandre Fayolle wrote:

>What's the best way to get a twisted server to run as user nobody ?
>
>  
>
mktap -u 65534 web ...

or whatever uid nobody has on your machine.


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl





From alexandre.fayolle at free.fr  Fri Dec 13 08:43:50 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 13 Dec 2002 16:43:50 +0100
Subject: [Twisted-Python] running as nobody
In-Reply-To: <3DF9F48F.3020601@nfg.nl>
References: <20021213143858.GB857@calvin.fayauffre.org> <3DF9F48F.3020601@nfg.nl>
Message-ID: <20021213154350.GC857@calvin.fayauffre.org>

On Fri, Dec 13, 2002 at 03:54:07PM +0100, Paul Stevens wrote:
> Alexandre Fayolle wrote:
> 
> >What's the best way to get a twisted server to run as user nobody ?
> >
> > 
> >
> mktap -u 65534 web ...
> 
> or whatever uid nobody has on your machine.

Oh. Sorry for the stupid question. I'd completely overread this. 

Thanks for the quick answer.

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
Développement logiciel avancé - Intelligence Artificielle - Formations



From glyph at twistedmatrix.com  Fri Dec 13 18:11:08 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Dec 2002 19:11:08 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com>
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com>
Message-ID: <20021213.191108.133290078.glyph@twistedmatrix.com>


On Fri, 13 Dec 2002 16:33:37 -0600, exarkun CVS <exarkun at twistedmatrix.com> wrote:
> Modified files:
> Twisted/twisted/python/plugin.py 1.11 1.12
> 
> Log message:
> blocking is the mindkiller

No... *threading* is the mindkiller.

What is the point of the addition of this function?  I note that it's not yet
used anywhere (thank goodness).  The use of a thread for loading plugins like
this is going to run non-thread-safe code in a thread for sure.  (Heck, is
__import__ even threadsafe?)

If you want a deferred version of this, maybe it would be more appropriate to
chunk the work from getPluginFileList so that it can be run with callLater with
some short timeout?


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021213/22b8cc22/attachment.sig>

From lordvan at lordvan.com  Sat Dec 14 10:19:20 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sat, 14 Dec 2002 18:19:20 +0100 (CET)
Subject: [Twisted-Python] Mailinglist & news
Message-ID: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>

hi!
got a few questions:

1.) can twisted do mailinglists? (google just gave me the tm lists itself)
2.) if so can mailinglists be in sync with a news-server(mirror of lists
to nntp)

greetings, LordVan

-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From twisted at moshez.org  Sat Dec 14 11:38:25 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 14 Dec 2002 18:38:25 -0000
Subject: [Twisted-Python] Mailinglist & news
In-Reply-To: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>
References: <65227.62.47.64.183.1039886360.squirrel@mail-at.net>
Message-ID: <20021214183825.12550.qmail@green.zadka.com>

On Sat, 14 Dec 2002, "Thomas Raschbacher" <lordvan at lordvan.com> wrote:

> 1.) can twisted do mailinglists? (google just gave me the tm lists itself)

Not directly.

> 2.) if so can mailinglists be in sync with a news-server(mirror of lists
> to nntp)

Well, I'm pretty sure it shouldn't be *too* hard to get twisted.mail
to spawn off mailman (by which I mean <30-40 line of Python code). Mailman
can do the injecting of messages into the Twisted NNTP server. The mail
and news can share a proces.



From smurf at noris.de  Sat Dec 14 19:22:26 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sun, 15 Dec 2002 03:22:26 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <20021213.191108.133290078.glyph@twistedmatrix.com>; from glyph@twistedmatrix.com on Fri, Dec 13, 2002 at 07:11:08PM -0600
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com>
Message-ID: <20021215032226.U8059@noris.de>

Hi,

Glyph Lefkowitz:
> No... *threading* is the mindkiller.
> 
Sometimes you can't work well without it. Database accesses are one common
example; so are file accesses across a network.

That being said, anything you only do _once_ shouldn't require threading -- 
and importing stuff certainly qualifies. An additional half-second
slowdown sometime after startup doesn't hurt anybody.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
To think is to differ.
		-- Clarence Darrow, Scopes trial, July 1925
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021215/8cf0e3e0/attachment.sig>

From exarkun at meson.dyndns.org  Sat Dec 14 20:20:43 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 14 Dec 2002 22:20:43 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <20021215032226.U8059@noris.de>
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de>
Message-ID: <20021215032043.GA16288@meson.dyndns.org>

On Sun, Dec 15, 2002 at 03:22:26AM +0100, Matthias Urlichs wrote:
> Hi,
> 
> Glyph Lefkowitz:
> > No... *threading* is the mindkiller.
> > 
> Sometimes you can't work well without it. Database accesses are one common
> example; so are file accesses across a network.
> 
> That being said, anything you only do _once_ shouldn't require threading -- 
> and importing stuff certainly qualifies. An additional half-second

*cough*tenseconds*cough*

> slowdown sometime after startup doesn't hurt anybody.

  twisted.python.plugin.getPlugIns *should* do caching, but I'm not up to
working out just how that should work; the threaded hack was committed in a
moment of laziness (and it is now in my code instead of twisted, even though
it is probably "correct" ;)  I could also see some neat ways to break it up
w/ a generator and have it called piecewise... mmh, but threading works for
me for the moment; maybe some other time.

> 
> -- 
> Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
> -- 
> To think is to differ.
> 		-- Clarence Darrow, Scopes trial, July 1925



-- 
"If you find a neighbor in need, you're responsible for serving that
neighbor in need, you're responsible for loving a neighbor just like you'd
like to love yourself." -- George W. Bush, Sept. 16, 2002
--
 12:00am up 4 days, 22:17, 4 users, load average: 0.08, 0.09, 0.04
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021214/3cd04485/attachment.sig>

From bruce at cubik.org  Sat Dec 14 20:29:32 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Sat, 14 Dec 2002 20:29:32 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de>
Message-ID: <3DFBF71C.1040501@cubik.org>

Matthias Urlichs wrote:
> Hi,
> 
> Glyph Lefkowitz:
> 
>>No... *threading* is the mindkiller.
>>
> 
> Sometimes you can't work well without it. Database accesses are one common
> example; so are file accesses across a network.

Postgres (and likely other DBs) support an asynchronous interface.  You 
don't *really* need threads to do database access as DB client.

  - Bruce




From screwtape at froup.com  Sun Dec 15 03:25:14 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 15 Dec 2002 21:25:14 +1100
Subject: [Twisted-Python] Web proxy docstrings
Message-ID: <20021215102514.GH944@ferd2.thristian.org>

The other day, I decided to write myself a little bandwidth limiting
web proxy, so I could see how quickly the webpages I was working on
would load over a 28.8k modem, as opposed to the 100Mbit LAN I was on
at the time.

Well, despite my high expectations, Twisted impressed me yet *again*,
since all the pieces I needed were all ready written. However, a large
chunk of my time was taken up finding out how all the various pieces I
had at my disposal actually fitted together. Accordingly, I've
attached a little patch to twisted/web/proxy.py that contains the
documentation I wish I'd found there.

I don't know much about Twisted's documentation standards, but I
figure this little patch is better than nothing. If you do feel the
need to trim it down, though, the detail I most wanted is in the
docstring for the Proxy class.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Darn rhodents, sigging anything that moves! -- Nils Desle
|
-------------- next part --------------
Index: twisted/web/proxy.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/proxy.py,v
retrieving revision 1.9
diff -u -r1.9 proxy.py
--- twisted/web/proxy.py	15 Nov 2002 20:47:36 -0000	1.9
+++ twisted/web/proxy.py	15 Dec 2002 10:34:04 -0000
@@ -14,7 +14,21 @@
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
-"""Simplistic HTTP proxy support."""
+"""Simplistic HTTP proxy support.
+
+This comes in two main variants - the Proxy and the ReverseProxy. 
+
+When a Proxy is in use, a browser trying to connect to a server (say,
+www.yahoo.com) will be intercepted by the Proxy, and the proxy will covertly
+connect to the server, and return the result.
+
+When a ReverseProxy is in use, the client connects directly to the ReverseProxy
+(say, www.yahoo.com) which farms off the request to one of a pool of servers,
+and returns the result.
+
+Normally, a Proxy is used on the client end of an Internet connection, while a
+ReverseProxy is used on the server end.
+"""
 
 # twisted imports
 from twisted.protocols import http
@@ -27,6 +41,7 @@
 
 
 class ProxyClient(http.HTTPClient):
+    """Used by ProxyClientFactory to implement a simple web proxy."""
 
     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -58,6 +73,7 @@
 
 
 class ProxyClientFactory(protocol.ClientFactory):
+    """Used by ProxyRequest to implement a simple web proxy."""
 
     def __init__(self, command, rest, version, headers, data, father):
         self.father = father
@@ -82,6 +98,7 @@
 
 
 class ProxyRequest(http.Request):
+    """Used by Proxy to impelement a simple web proxy."""
 
     protocols = {'http': ProxyClientFactory}
     ports = {'http': 80}
@@ -107,11 +124,23 @@
         reactor.connectTCP(host, port, clientFactory)
 
 class Proxy(http.HTTPChannel):
+    """This class implements a simple web proxy.
+
+    Since it inherits from twisted.protocols.http.HTTPChannel, to use it you
+    should do something like this:
+
+        from twisted.protocols import http
+        f = http.HTTPFactory()
+        f.HTTPChannel = Proxy
+
+    Make the HTTPFactory a listener on a port as per usual, and you have
+    a fully-functioning web proxy!"""
 
     requestFactory = ProxyRequest
 
 
 class ReverseProxyRequest(http.Request):
+    """Used by ReverseProxy to implement a simple reverse proxy."""
 
     def process(self):
         self.received_headers['host'] = self.factory.host
@@ -123,11 +152,15 @@
                            clientFactory)
 
 class ReverseProxy(http.HTTPChannel):
+    """Implements a simple reverse proxy.
+
+    For details of usage, see the file examples/proxy.py"""
 
     requestFactory = ReverseProxyRequest
 
 
 class ReverseProxyResource(resource.Resource):
+    """Apparently unused."""
 
     def __init__(self, host, port, path):
         resource.Resource.__init__(self)

From smurf at noris.de  Sun Dec 15 03:54:07 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sun, 15 Dec 2002 11:54:07 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] blocking is the mindkiller
In-Reply-To: <3DFBF71C.1040501@cubik.org>; from bruce@cubik.org on Sat, Dec 14, 2002 at 08:29:32PM -0700
References: <E18MyNF-0000qv-00@pyramid.twistedmatrix.com> <20021213.191108.133290078.glyph@twistedmatrix.com> <20021215032226.U8059@noris.de> <3DFBF71C.1040501@cubik.org>
Message-ID: <20021215115407.X8059@noris.de>

Hi,

Bruce Mitchener:
> > Sometimes you can't work well without it. Database accesses are one common
> > example; so are file accesses across a network.
> 
> Postgres (and likely other DBs) support an asynchronous interface.  You 
> don't *really* need threads to do database access as DB client.
> 
I know -- it's just a network connection, after all. Unfortunately,
many interfaces (as well es Python's DBI) just Don't Do That.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
Sell a country! Why not sell the air, the great sea, as well as the
earth? Did not the Great Spirit make them all for the use of his children?
		-- Tecumseh, (Shawnee)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021215/47a6df95/attachment.sig>

From twisted at moshez.org  Sun Dec 15 04:04:25 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 15 Dec 2002 11:04:25 -0000
Subject: [Twisted-Python] Web proxy docstrings
In-Reply-To: <20021215102514.GH944@ferd2.thristian.org>
References: <20021215102514.GH944@ferd2.thristian.org>
Message-ID: <20021215110425.20839.qmail@green.zadka.com>

On Sun, 15 Dec 2002, screwtape at froup.com wrote:

> I don't know much about Twisted's documentation standards, but I
> figure this little patch is better than nothing. If you do feel the
> need to trim it down, though, the detail I most wanted is in the
> docstring for the Proxy class.
 
Thanks, commited.
ReverseProxyResource is not unused -- see, for example, the using-twistedweb
HOWTO.




From haering_python at gmx.de  Sun Dec 15 09:13:49 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Sun, 15 Dec 2002 17:13:49 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
Message-ID: <20021215161349.GA2658@lilith.ghaering.test>

Hello,

I'd like to learn asynchronuous programming with Twisted, because I
think this will make me a better programmer, no matter if I'll use this
paradigma in the end or not.

So I thought about wrapping PostgreSQL's asynchronous interface to be
usable from a Twisted app. I did once chat a little with Itamar about
this on #twisted, and now I finally got around starting this.

I don't really know much about twisted, so please correct me if this is
wrong:

    A reactor is the Twisted main loop, which selects on selectables,
    and invokes doRead() on them when data is available.

Itamar told me I'd need to implement
twisted.internet.abstract.FileDescriptor, so this is what I did (very
incomplete code):

#v+
from twisted.internet import abstract
from pyPgSQL import libpq

class PgAsyncConn(abstract.FileDescriptor):
    def __init__(self):
        abstract.FileDescriptor.__init__(self)

        # PostgreSQL stuff
        self.conn = libpq.PQconnectdb("host=gargamel dbname=gerhard")
        self.fileno = self.conn.socket.fileno
        self.startReading()

    def write(self, data):
        print "writing"

    def query(self, callback, errback, *args, **kwargs):
        print "sending query ..."
        self.conn.sendQuery(*args)
        self.callback, self.errback = callback, errback
        print "query sent."

    def operation(self, callback, errback, *args, **kwargs):
        print "operation"
        
    def doRead(self):
        self.conn.consumeInput()
        if not self.conn.isBusy:
            print "data available"
            res = self.conn.getResult()
            print "got result."

            bla = self.conn.getResult()
            assert bla is None
            print "query sucessfully processed."

            # call callback here
            self.callback(res)

    def connectionLost(self, reason):
        """The connection was lost.
        """
        self.conn.finish()
#v-

Now I'm at the point where I'd like to try this code out. *But*
obviously something is still missing. I believe my PgAsyncConn would
need to be registered with the reactor?! Is this true and if yes, how do
I do it?

Btw. I'll try to keep my new baby interface-compatible with
twisted.enterprise.adbapi as much as possible.

Next question: I'd like to try my code out. Is there a good way to test
this under Twisted, apart from writing a little server like the Echo
example of the docs, and trying to call PgAsyncConn from it?

TIA,

Gerhard
-- 
Favourite database:             http://www.postgresql.org/
Favourite programming language: http://www.python.org/
Combine the two:                http://pypgsql.sf.net/



From twisted at itamarst.org  Sun Dec 15 10:30:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Dec 2002 12:30:40 -0500
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <20021215123040.197e74c3.twisted@itamarst.org>

On Sun, 15 Dec 2002 17:13:49 +0100
Gerhard Häring <haering_python at gmx.de> wrote:

> I don't really know much about twisted, so please correct me if this
> is wrong:
> 
>     A reactor is the Twisted main loop, which selects on selectables,
>     and invokes doRead() on them when data is available.

That is correct.

> Now I'm at the point where I'd like to try this code out. *But*
> obviously something is still missing. I believe my PgAsyncConn would
> need to be registered with the reactor?! Is this true and if yes, how
> do I do it?

If you look at abstract.FileDescriptor.__init__, you'll see it wants to
get a reactor as an argument, and if not uses the global one. In general
the code seems ok, except that you really ought to be using Deferreds
instead of callback/errback pairs. See
http://twistedmatrix.com/documents/howto/defer for details.

> Btw. I'll try to keep my new baby interface-compatible with
> twisted.enterprise.adbapi as much as possible.

Cool!

> Next question: I'd like to try my code out. Is there a good way to
> test this under Twisted, apart from writing a little server like the
> Echo example of the docs, and trying to call PgAsyncConn from it?

Well, look at how we do tests in twisted.test - you can write a unit
test suite for your code, with the limitation of course that you'd need
a live postgresql server to test it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bob at redivi.com  Sun Dec 15 11:28:09 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 15 Dec 2002 13:28:09 -0500
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <F63A2509-105A-11D7-87AD-0003938210D6@redivi.com>

On Sunday, Dec 15, 2002, at 11:13 America/New_York, Gerhard Häring 
wrote:

> class PgAsyncConn(abstract.FileDescriptor):
>     def __init__(self):
>         abstract.FileDescriptor.__init__(self)
>
>         # PostgreSQL stuff
>         self.conn = libpq.PQconnectdb("host=gargamel dbname=gerhard")
>         self.fileno = self.conn.socket.fileno
>         self.startReading()


fileno needs to be a function

i.e.

self.fd = self.conn.socket.fileno
(after __init__)

def fileno(self):
   return self.fd

-bob



From liiwi at iki.fi  Sun Dec 15 12:30:47 2002
From: liiwi at iki.fi (Jaakko Niemi)
Date: Sun, 15 Dec 2002 21:30:47 +0200
Subject: [Twisted-Python] woven headache
Message-ID: <87smwzt6zc.fsf@jumper.lonesom.pp.fi>

 Hello,

 So, I tried to do a list of links from a list. Is the
 right way to do this to point href in self.attributes
 into a list? If it cannot handle a list, then I don't
 see how this could be done.

                    --j



From haering_python at gmx.de  Sun Dec 15 16:47:22 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Mon, 16 Dec 2002 00:47:22 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215123040.197e74c3.twisted@itamarst.org>
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org>
Message-ID: <20021215234722.GA11488@lilith.ghaering.test>

* Itamar Shtull-Trauring <twisted at itamarst.org> [2002-12-15 12:30 -0500]:
> Gerhard Häring <haering_python at gmx.de> wrote:
> > [...] I believe my PgAsyncConn would need to be registered with the
> > reactor?! [...]
> 
> If you look at abstract.FileDescriptor.__init__, you'll see it wants
> to get a reactor as an argument, and if not uses the global one.

Thanks.

> In general the code seems ok, except that you really ought to be using
> Deferreds instead of callback/errback pairs.

Tell that to whoever wrote twisted.enterprise.adbapi. That's where I got
the idea for this interface from ;-)

> See http://twistedmatrix.com/documents/howto/defer for details.

I'll do.

> > Btw. I'll try to keep my new baby interface-compatible with
> > twisted.enterprise.adbapi as much as possible.
> 
> Cool!

Even cooler is that this now works basically :-D Even with a simplistic
connection pool built upon.

Perhaps you have a tip on how to improve my connection pool? Here's some
rough code I produced a few minutes ago:

class PgConnPool:
    def __init__(self, reactor=None, connstr="", cp_min=3, cp_max=5):
        main.callDuringShutdown(self.close)        
        self.connections = []
        for i in range(cp_min):
            conn = PgAsyncConn(reactor)
            conn.connect(connstr)
            self.connections.append(conn)

    def findConn(self):
        # Whoa. Quite likely race condition here :-/
        for conn in self.connections:
            if conn.ready:
                print "using connection", conn
                return conn
        return None
    
    def query(self, callback, errback, *args, **kwargs):
        conn = self.findConn()
        assert conn is not None

    [snip more code]

Now the "assert conn is not None" isn't very helpful. What is best done
if all connections are busy? I could detect the availability of a free
connection in the doRead method of one of the PgAsyncConn in the
connection pool. But where to go from this knowledge as far as
PgConnPool is concerned? :-)

(Btw. the connection pool in adbapi seems to be a fake one. I don't see
where it'd respect the upper and lower limits for the pool.)

> > Next question: I'd like to try my code out. Is there a good way to
> > test this under Twisted, apart from writing a little server like the
> > Echo example of the docs, and trying to call PgAsyncConn from it?
> 
> Well, look at how we do tests in twisted.test - you can write a unit
> test suite for your code, with the limitation of course that you'd
> need a live postgresql server to test it.

Uh, this seems hard. I believe I'd need to start a reactor in my test
case, as this is a client-side API only and there's no way I'll just
quickly implement PostgreSQL in Python. Any hints on how to do this?

Thanks,

Gerhard
-- 
Favourite database:             http://www.postgresql.org/
Favourite programming language: http://www.python.org/
Combine the two:                http://pypgsql.sf.net/



From andrew-twisted at puzzling.org  Sun Dec 15 18:05:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 16 Dec 2002 12:05:49 +1100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215234722.GA11488@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org> <20021215234722.GA11488@lilith.ghaering.test>
Message-ID: <20021216010549.GA1081@frobozz.local>

On Mon, Dec 16, 2002 at 12:47:22AM +0100, Gerhard H?ring wrote:
> > > Next question: I'd like to try my code out. Is there a good way to
> > > test this under Twisted, apart from writing a little server like the
> > > Echo example of the docs, and trying to call PgAsyncConn from it?
> > 
> > Well, look at how we do tests in twisted.test - you can write a unit
> > test suite for your code, with the limitation of course that you'd
> > need a live postgresql server to test it.
> 
> Uh, this seems hard. I believe I'd need to start a reactor in my test
> case, as this is a client-side API only and there's no way I'll just
> quickly implement PostgreSQL in Python. Any hints on how to do this?

Starting a reactor is easy:
    from twisted.internet import reactor
    # Make connections, schedule events, etc, here.
    reactor.run()

Of course, there's the problem of stopping the reactor.  Most of our test
cases do something more like:
    from twisted.internet import reactor
    self.done = 0
    # Do stuff
    while not self.done:
        reactor.iterate()

Then it's just a matter of making sure you set self.done when the test
passes or fails.  You could also set timeouts with something like
"reactor.callLater(3, self.blowUp)", or by calling "d.setTimeout(3,
self.blowUp)" on an appropriate Deferred.  You should make sure you cancel
unfired timeouts, though, or they will interfere with later tests -- this is
a deficiency in the testing framework that we're hoping to fix at some
point.

As to starting PostgreSQL, I'd just make the test assume that PostgreSQL is
running.  Perhaps use the standard synchronous interface to test that it's
running, otherwise skip the tests?

-Andrew.




From smurf at noris.de  Sun Dec 15 22:33:24 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Mon, 16 Dec 2002 06:33:24 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215234722.GA11488@lilith.ghaering.test>; from haering_python@gmx.de on Mon, Dec 16, 2002 at 12:47:22AM +0100
References: <20021215161349.GA2658@lilith.ghaering.test> <20021215123040.197e74c3.twisted@itamarst.org> <20021215234722.GA11488@lilith.ghaering.test>
Message-ID: <20021216063324.B17124@noris.de>

Hi,

Gerhard Häring:
> Perhaps you have a tip on how to improve my connection pool? Here's some
> rough code I produced a few minutes ago:
> 
Take the connection out of the pool while it's in use.
Use a Deferred to return the connection.

Something along these lines:

class ConnectionPool:
	def __init__(size=5):
		self.waiting=[]
		self.connections=[]
		for i in range(size):
			conn = PoolConnection()
			conn.is_free=1
			self.connections.append(conn)

	def findConn(self):
		d=Deferred()
		try:
			conn = self.connections.pop()
		except IndexError:
			self.waiting.append(d)
		else:
			conn.is_free=0
			d.callback(conn)
		return d
			
	def freeConn(self,conn):
		if conn.is_free:
			return
		try:
			d = self.waiting.pop()
		except IndexError:
			conn.is_free=1
			self.connections.push(conn)
		else:
			d.callback(conn)
		
For bonus points, subclass your db connection to self-add itself back to
the pool when it's no longer in use:

class PoolConnection(YourDatabaseConnection):
	def __init__(self,pool,*args,**kwargs):
		YourDatabaseConnection.__init__(self,*args,**kwargs)
		self.__pool=weakref.ref(__pool)
	def __del__(self):
		pool=self.__pool()
		try:
			pool.freeConn(self)
		except:
			pass
		
-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-- 
The teacher comes when the soul calls--and thank goodness, for the ego
is never fully ready.
		-- Clarissa Pinkola Estes, "Women Who Run With the Wolves"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021216/463c67f2/attachment.sig>

From dp at twistedmatrix.com  Mon Dec 16 00:32:59 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 15 Dec 2002 23:32:59 -0800
Subject: [Twisted-Python] woven headache
Message-ID: <440248C7-10C9-11D7-822D-0050E425C324@twistedmatrix.com>

A List of Links into HTML

The easiest way to do this is to use the List and Anchor widgets to 
handle the list and a string, respectively. If you had an RPY that 
looked like this (the main model is a list of strings):

LinkList.rpy
----
from twisted.web.woven import page

resource = page.Page(['http://www.google.com', 'http://www.foo.com'], 
templateFile="LinkList.html")
----

Your template file would look like this:

LinkList.html
----
<html>
	<ul view="List" model=".">
		<!-- Use the current model as this node's model.
			Use the List widget in widgets.py to turn this model into html. -->

		<li pattern="listItem">
			<!-- The pattern node will be copied once for each element in the 
list
				by the List widget. Each copy will have a model= attribute with
				the index of the current list item set. When woven recurses into
				the new, copied nodes, the list element will be pushed onto the
				stack. -->
			<a view="Anchor" model="." />
			<!-- When woven descended into the li node, it pushed a string onto
				the model stack. We now want to render that string into HTML
				using the Anchor widget. We specify ".", the top of the model stack.
			-->
		</li>
	</ul>
</html>
----

There you go.

Unfortunately the base Anchor widget is pretty dumb. It just takes a 
string model, and sets the node href= to the string, and adds a text 
node to the <a> node. Next installment: writing a custom widget that 
does fancier stuff.

Donovan




From bh at intevation.de  Mon Dec 16 13:02:04 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 16 Dec 2002 21:02:04 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <6qk7i9d96r.fsf@salmakis.intevation.de>

Gerhard Häring <haering_python at gmx.de> writes:

> So I thought about wrapping PostgreSQL's asynchronous interface to be
> usable from a Twisted app.

I hope you're using PostgreSQL 7.3. The non-blocking interface doesn't
work properly in earlier versions unless you patch libpq.

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From deus_x at pobox.com  Tue Dec 17 08:48:31 2002
From: deus_x at pobox.com (l.m.orchard)
Date: Tue, 17 Dec 2002 10:48:31 -0500
Subject: [Twisted-Python] Event-driven version of gzip module?
Message-ID: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>

Still getting my head around Twisted, so hopefully I make sense in 
asking this:

Does there happen to be an event-driven version of the gzip module for 
Twisted?  That is, instead of expecting a file object to actively read 
and seek at will, it accepts chunks of data from a stream and hits a 
callback with decompressed chunks as they're available.  (Would this 
involve a deferred?)  I was trying to do something with just zlib, but 
I forgot that that doesn't do anything to handle the header of a gzip 
stream like the gzip module itself does.

Trying to handle on-the-fly HTTP decompression - at present things work 
fine if I slurp the whole response body down into a file object and let 
gzip have at it, but I'd rather stream things through a pipeline a 
chunk at a time than buffer it all up first.

Dropped into #twisted on freenode, but didn't get much response, so I 
figured I'd post here too.

--
l.m.orchard <deus_x at pobox.com> http://www.decafbad.com
...see you space cowboy




From exarkun at meson.dyndns.org  Tue Dec 17 10:05:07 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Tue, 17 Dec 2002 12:05:07 -0500
Subject: [Twisted-Python] test_nmea failing
Message-ID: <20021217170507.GA14416@meson.dyndns.org>

exarkun:~/projects/python/Twisted$ python2.1 admin/runtests -v -t --file twisted/test/test_nmea.py
reactor class: twisted.internet.default.SelectReactor
testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase) ... FAIL

======================================================================
FAIL: testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./twisted/test/test_nmea.py", line 114, in testGPSMessages
    self.failUnlessEqual(expectedResult, actualResult,
"\nInput:\n%s\nExpected: %r\nResults: %r\n" % (message, expectedResult, actualResult))
  File "./pyunit/unittest.py", line 279, in failUnlessEqual
    raise self.failureException, (msg or '%s != %s' % (repr(first), repr(second)))
AssertionError:
Input:
$GPGLL,4250.5589,S,14718.5084,E,092204.999,A*2D
Expected: (-42.842648333299998, 147.30847333299999, 33724.999000000003, 1)
Results: (-42.842648333333337, 147.30847333333332, 33724.999000000003, 1)

----------------------------------------------------------------------

It does occassionally pass with 2.1, and it seems to always pass with 2.2.

  Jp

-- 
Examinations are formidable even to the best prepared, for
even the greatest fool may ask more than the wisest man can answer.
                -- C.C. Colton
--
 12:00am up 1 day, 9:44, 2 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021217/4459196f/attachment.sig>

From abo at minkirri.apana.org.au  Tue Dec 17 14:59:52 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: 18 Dec 2002 08:59:52 +1100
Subject: [Twisted-Python] Event-driven version of gzip module?
In-Reply-To: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>
References: <FE09C524-11D6-11D7-B5C6-003065FB23D2@pobox.com>
Message-ID: <1040162392.2747.45.camel@ngapa.apana.org.au>

On Wed, 2002-12-18 at 02:48, l.m.orchard wrote:
> Still getting my head around Twisted, so hopefully I make sense in 
> asking this:
> 
> Does there happen to be an event-driven version of the gzip module for 
> Twisted?  That is, instead of expecting a file object to actively read 
> and seek at will, it accepts chunks of data from a stream and hits a 
> callback with decompressed chunks as they're available.  (Would this 
> involve a deferred?)  I was trying to do something with just zlib, but 
> I forgot that that doesn't do anything to handle the header of a gzip 
> stream like the gzip module itself does.
[...]

the Python zlib module can compress/uncompress gzip data a block at a
time; perfect for what you want.

I'm not sure you need the gzip header stuff for http decompression, but
it you do, just have a look at the gzip.py source... the gzip module is
written in python and uses the zlib module. You might find once you look
at the gzip module implementation that it can actualy do what you want
anyway (it seems to support block at a time read/write, and provided you
use a stringIO file type should not block).






From bob at mastersofbranding.com  Tue Dec 17 10:26:25 2002
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Tue, 17 Dec 2002 12:26:25 -0500
Subject: [Twisted-Python] test_nmea failing
In-Reply-To: <20021217170507.GA14416@meson.dyndns.org>
Message-ID: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>

Yuck.. floating point precision bugs.. they should have a "close 
enough" equality operator for the damn things.  I'll do some ugly hack 
to make it play nice.. but note that it's not *really* failing, that's 
perfectly acceptable output (other than the exception).

I don't have a copy of 2.1 to test against, but I'll fix it.. maybe 
change it into strings, and only check up to 10**-4 or so since that's 
about the precision you get from a NMEA message in the first place.

On Tuesday, Dec 17, 2002, at 12:05 America/New_York, Jp Calderone wrote:

> exarkun:~/projects/python/Twisted$ python2.1 admin/runtests -v -t 
> --file twisted/test/test_nmea.py
> testGPSMessages (twisted.test.test_nmea.NMEAReceiverTestCase) ... FAIL
> Expected: (-42.842648333299998, 147.30847333299999, 
> 33724.999000000003, 1)
> Results: (-42.842648333333337, 147.30847333333332, 33724.999000000003, 
> 1)
> ----------------------------------------------------------------------
> It does occassionally pass with 2.1, and it seems to always pass with 
> 2.2.




From m at moshez.org  Tue Dec 17 22:26:19 2002
From: m at moshez.org (Moshe Zadka)
Date: 18 Dec 2002 05:26:19 -0000
Subject: [Twisted-Python] test_nmea failing
In-Reply-To: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>
References: <AB92143E-11E4-11D7-BEA4-0003938210D6@mastersofbranding.com>
Message-ID: <20021218052619.25733.qmail@green.zadka.com>

On Tue, 17 Dec 2002, Bob Ippolito <bob at mastersofbranding.com> wrote:

> Yuck.. floating point precision bugs.. they should have a "close 
> enough" equality operator for the damn things.

No they shouldn't. K tried, IIRC, and it was a dud. You want epsilon
comparison? abs(x-y)<0.0001 works fine for me.
Never ever ever compare floats for equality.
Ever.



From bh at intevation.de  Wed Dec 18 02:21:21 2002
From: bh at intevation.de (Bernhard Herzog)
Date: 18 Dec 2002 10:21:21 +0100
Subject: [Twisted-Python] Creating a new selectable (for Pg async interface)
In-Reply-To: <20021215161349.GA2658@lilith.ghaering.test>
References: <20021215161349.GA2658@lilith.ghaering.test>
Message-ID: <6qsmwvfzse.fsf@salmakis.intevation.de>

Gerhard Häring <haering_python at gmx.de> writes:

> Hello,
> 
> I'd like to learn asynchronuous programming with Twisted, because I
> think this will make me a better programmer, no matter if I'll use this
> paradigma in the end or not.
> 
> So I thought about wrapping PostgreSQL's asynchronous interface to be
> usable from a Twisted app.

I forgot to mention this earlier: I have an asyncore based interface:
http://www.intevation.de/cgi-bin/viewcvs-hoko.cgi/geoserver/geoserver/src/GeoServer/psql.py?rev=1.11&content-type=text/vnd.viewcvs-markup

Maybe it can help with the twisted version

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From glyph at twistedmatrix.com  Wed Dec 18 07:26:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 18 Dec 2002 08:26:47 -0600 (CST)
Subject: [Twisted-Python] woven nested lists
Message-ID: <20021218.082647.45096840.glyph@twistedmatrix.com>


This is on its way to becoming a FAQ, so when LordVan asked how to do list
nesting in woven on the IRC channel, I figured I should post something here
rather than just answer the question there.

http://www.twistedmatrix.com/users/glyph/py/src/nestedlist.py

As it happens, I discovered a woven bug in the process :-).  The code here has
2 embedded templates ('template' and 'brokenTemplate'), one of which works with
CVS as of a few days ago and one of which works with CVS as of a few minutes
ago.  You can see my commit message about that if you're interested in the
details:

http://www.twistedmatrix.com/pipermail/twisted-commits/2002-December/005021.html


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021218/c5171e20/attachment.sig>

From dp at twistedmatrix.com  Wed Dec 18 09:36:20 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 18 Dec 2002 08:36:20 -0800
Subject: [Twisted-Python] woven nested lists
In-Reply-To: <20021218.082647.45096840.glyph@twistedmatrix.com>
Message-ID: <D695C803-12A6-11D7-B2DC-0050E425C324@twistedmatrix.com>

On Wednesday, December 18, 2002, at 06:26  AM, Glyph Lefkowitz wrote:
>
> As it happens, I discovered a woven bug in the process :-).  The code  
> here has
> 2 embedded templates ('template' and 'brokenTemplate'), one of which  
> works with
> CVS as of a few days ago and one of which works with CVS as of a few  
> minutes
> ago.  You can see my commit message about that if you're interested in  
> the
> details:
>
> http://www.twistedmatrix.com/pipermail/twisted-commits/2002-December/ 
> 005021.html

This bug stems from the fact that the List widget used to call getNode  
itself, thus finding only the first node below it's template node.  
getPattern will find all the pattern nodes below the widget's template  
node. The noNesting fix is a great solution, and hopefully will be  
enough of a fix.

Regarding the comment about anonymous lists: The outer list in this  
case is available using the name "mytable". So the template could be as  
so:

<table model="mytable" view="List">
	<tr listItemOf="mytable" view="List">
		<td pattern="listItem" view="Text">
		</td>
	</tr>
</table>

It's only the inner lists that are truly anonymous, because as the List  
widget is iterating the outer list, it sets the model attribute of the  
pattern nodes to model="0" model="1" model="2" etc. My first thought is  
to allow this type of syntax:

<table model="mytable" view="List">
	<tr listItemOf="mytable" view="List">
		<td listItemOf="." view="Text">
		</td>
	</tr>
</table>

Which would mean "the inner node is a pattern node with the name of the  
model on top of the model stack", but I'm not sure what that buys us  
over the current noNesting fix (which certainly is the way things  
should have worked, and is the way the code worked before the  
introduction of getPattern)

By the way, there is a test of nested lists in test_woven.py. It just  
counts the number of copied nodes, however, and should probably be  
updated to check that the *correct* nodes were copied.

Thanks Glyph
Donovan




From bob at redivi.com  Fri Dec 20 13:33:31 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 20 Dec 2002 15:33:31 -0500
Subject: [Twisted-Python] New SerialPort transport and associated goodies
Message-ID: <4DEC3047-145A-11D7-9547-0003938210D6@redivi.com>

For those of you that haven't noticed, I've added a SerialPort 
transport with some help from Itamar.  It's dependent on pyserial 
(http://pyserial.sf.net/), and currently supports posix and Jython.  
It'll eventually support win32.

I've done two GPS protocols, NMEA 0183 (almost all receivers support 
this) and Rockwell Zodiac (for the DeLorme Earthmate, which doesn't).  
There's other protocols for Trimble and Garmin receivers, but they 
support NMEA.

There is a new gpsfix example in doc/examples, and I've refactored the 
MouseMan example to use the new SerialPort transport.. however, I don't 
own any serial mice, so someone else is going to have to test it.

-bob




From bob at redivi.com  Fri Dec 20 13:33:47 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 20 Dec 2002 15:33:47 -0500
Subject: [Twisted-Python] New SerialPort transport and associated goodies
Message-ID: <576B56F2-145A-11D7-9547-0003938210D6@redivi.com>

For those of you that haven't noticed, I've added a SerialPort 
transport with some help from Itamar.  It's dependent on pyserial 
(http://pyserial.sf.net/), and currently supports posix and Jython.  
It'll eventually support win32.

I've done two GPS protocols, NMEA 0183 (almost all receivers support 
this) and Rockwell Zodiac (for the DeLorme Earthmate, which doesn't).  
There's other protocols for Trimble and Garmin receivers, but they 
support NMEA.

There is a new gpsfix example in doc/examples, and I've refactored the 
MouseMan example to use the new SerialPort transport.. however, I don't 
own any serial mice, so someone else is going to have to test it.

-bob




From nbm at mithrandr.moria.org  Fri Dec 20 14:40:43 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Fri, 20 Dec 2002 23:40:43 +0200
Subject: [Twisted-Python] SCGIChannel: SCGI protocol support
Message-ID: <20021220214042.GA4115@mithrandr.moria.org>

Hi all,

SCGI (http://www.mems-exchange.org/software/scgi/) is a replacement for
the CGI protocol, in a similar manner to FCGI.  Through mod_scgi on
apache, you can delegate sections of a web site served by apache to be
handled via SCGI:

        <Location "/jobsearch">
                SCGIServer 127.0.0.1 4000
                SCGIHandler On
        </Location>

SCGIChannel serves as a replacement to HTTPChannel, performing the
request with the information given over SCGI, and returning the reply.

A couple of changes are necessary to make use of inheritance of
HTTPChannel and server.Site to work as expected with its protocol.
These are in scgi-changes.patch.

I work around the lack of these changes in the scgichannel.py attached.
Use the above apache directives and this file to see what it does.

Opinions requested.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
Index: protocols/http.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/http.py,v
retrieving revision 1.64
diff -u -r1.64 http.py
--- protocols/http.py	3 Dec 2002 06:05:07 -0000	1.64
+++ protocols/http.py	20 Dec 2002 21:09:16 -0000
@@ -840,9 +840,9 @@
                 self.transport.loseConnection()
                 return
             command, request, version = parts
-            self.__command = command
-            self.__path = request
-            self.__version = version
+            self._command = command
+            self._path = request
+            self._version = version
             if version == 'HTTP/0.9':
                 self.allHeadersReceived()
                 self.allContentReceived()
@@ -873,15 +873,15 @@
         self.requests[-1].received_headers[header] = data
 
     def allContentReceived(self):
-        command = self.__command
-        path = self.__path
-        version = self.__version
+        command = self._command
+        path = self._path
+        version = self._version
 
         # reset ALL state variables, so we don't interfere with next request
         self.length = 0
-        self.__header = ''
+        self._header = ''
         self.__first_line = 1
-        del self.__command, self.__path, self.__version
+        del self._command, self._path, self._version
 
         req = self.requests[-1]
         req.requestReceived(command, path, version)
@@ -899,7 +899,7 @@
     def allHeadersReceived(self):
         req = self.requests[-1]
         req.parseCookies()
-        self.persistent = self.checkPersistence(req, self.__version)
+        self.persistent = self.checkPersistence(req, self._version)
         req.gotLength(self.length)
 
     def checkPersistence(self, request, version):
Index: web/server.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/server.py,v
retrieving revision 1.84
diff -u -r1.84 server.py
--- web/server.py	3 Dec 2002 17:24:27 -0000	1.84
+++ web/server.py	20 Dec 2002 21:09:18 -0000
@@ -416,7 +416,7 @@
     def buildProtocol(self, addr):
         """Generate a channel attached to this site.
         """
-        channel = http.HTTPChannel()
+        channel = self.protocol()
         channel.requestFactory = Request
         channel.site = self
         channel.factory = self
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.protocols import http
from twisted.web import server

class SCGITransport:
    def __init__(self, realtransport):
        self.realtransport = realtransport
        self.firstline = 1

    def write(self, data):
        if self.firstline:
            data = data.replace("HTTP/1.1", "Status:")
            self.firstline = 0
        self.realtransport.write(data)

    def writeSequence(self, data):
        for entry in data:
            self.write(entry)

    def setPeer(self, peer):
        self.peer = peer

    def setHost(self, host):
        self.host = host

    def getPeer(self):
        return self.peer

    def getHost(self):
        return self.host

    def loseConnection(self):
        self.realtransport.loseConnection()

class SCGIChannel(http.HTTPChannel):
    def __init__(self):
        http.HTTPChannel.__init__(self)
        self._buffer = ""
        self._maxbufferlength = None
        self.prefix = ""

    def dataReceived(self, data):
        self._buffer = self._buffer + data
        if not self._maxbufferlength:
            idx = self._buffer.index(":")
            if not idx:
                return
            self._maxbufferlength = long(self._buffer[:idx])

        if len(self._buffer) - (idx + 2) == self._maxbufferlength:
            scgistring = self._buffer[idx + 1:]
            items = scgistring.split("\0")
            items = items[:-1]
            assert len(items) % 2 == 0, "malformed headers"
            env = {}
            for i in range(0, len(items), 2):
                env[items[i]] = items[i+1]

            request = self.requestFactory(self, len(self.requests))
            self.requests.append(request)

            if env.has_key("HTTP_USER_AGENT"):
                request.received_headers["User-Agent"] = env["HTTP_USER_AGENT"]
            if env.has_key("HTTP_ACCEPT"):
                request.received_headers["Accept"] = env["HTTP_ACCEPT"]
            if env.has_key("SERVER_NAME"):
                request.received_headers["host"] = env["SERVER_NAME"]
            if env.has_key("CONTENT_LENGTH"):
                request.received_headers["Content-Length"] = env["CONTENT_LENGTH"]

            # XXX: working around use of __version, &c. in HTTPChannel
            self._HTTPChannel__command = env["REQUEST_METHOD"]
            self._HTTPChannel__path = env["REQUEST_URI"][len(self.prefix):]
            self._HTTPChannel__version = env["SERVER_PROTOCOL"]
            self.transport.setPeer(("INET", env["REMOTE_ADDR"], int(env["REMOTE_PORT"])))
            self.transport.setHost(("INET", env["SERVER_NAME"], int(env["SERVER_PORT"])))

            self.allHeadersReceived()
            self.allContentReceived()
                
    def requestDone(self, request):
        self.transport.loseConnection()

    def connectionMade(self):
        self.transport = SCGITransport(self.transport)

class SCGISite(server.Site):
    def __init__(self, resource, prefix = ""):
        server.Site.__init__(self, resource)
        self.protocol = SCGIChannel
        self.prefix = prefix

    # XXX: Fix when twisted.web.server.Site starts using self.protocol()
    def buildProtocol(self, addr):
        """Generate a channel attached to this site.
        """
        channel = self.protocol()
        channel.requestFactory = server.Request
        channel.site = self
        channel.factory = self
        channel.prefix = self.prefix
        return channel

def main():
    from twisted.internet import reactor
    from twisted.web import resource, widgets

    class IndexDisplay(widgets.Presentation):
        template = """<h1>Index</h1>"""

    gdgt = widgets.Gadget()
    gdgt.putWidget('', IndexDisplay())
    site = SCGISite(gdgt, "/jobsearch")
    site.protocol = SCGIChannel
    reactor.listenTCP(4000, site)
    reactor.run()

if __name__ == "__main__":
    main()

From glyph at twistedmatrix.com  Sat Dec 21 06:11:11 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Dec 2002 07:11:11 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
Message-ID: <20021221.071111.48667858.glyph@twistedmatrix.com>


I'm thinking of making some pretty substantial changes to the way that Twisted
deals with Sessions, as part of re-writing twisted.web.guard to work with
Woven.

Internally there are very few places where it's called (mostly in
twisted.web.guard, which is exactly what I'm looking to get rid of ...) and it
is a very naive, error-prone implementation.

I'm just wondering how many of you out there are using sessions currently, and
in what capacity, to see what upgrade path, if any, I should provide.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021221/93aabdf1/attachment.sig>

From nbm at mithrandr.moria.org  Sat Dec 21 08:11:07 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Sat, 21 Dec 2002 17:11:07 +0200
Subject: [Twisted-Python] PcapIO
Message-ID: <20021221151107.GB9169@mithrandr.moria.org>

Hi again,

I'm currently using this PcapIO class in a traffic analyser, and thought
people might find it useful, possibly for inclusion in twisted.  It
relies on pylibpcap (http://pylibpcap.sourceforge.net/).  If interested,
it's easy enough to use the example code in the pylibpcap distribution
in your protocol's dataReceived.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

# system imports
import pcap
import sys

# Twisted Imports
from twisted.internet import abstract, protocol

# Sibling Imports
import pcapprotocol

class PcapIO(abstract.FileDescriptor):
    def __init__(self, protocol, dev):
        """Create me with a device dev to listen on.  Should probably
        accept files too, and allow choice of device promiscuity and
        snap lengths.
        """
        abstract.FileDescriptor.__init__(self)

        p = pcap.pcapObject()
        p.open_live(dev, 1600, 0, 100)
        p.setnonblock(1)

        self.fn = p.fileno()
        self.pcap = p
        self.protocol = protocol
        self.protocol.makeConnection(self)
        self.startReading()

    def fileno(self):
        return self.fn

    def doRead(self):
        try:
            output = self.pcap.next()
        except IOError, ioe:
            if ioe.args[0] == errno.EAGAIN:
                return
            else:
                return CONNECTION_LOST
        if not output:
            return CONNECTION_LOST
        self.protocol.dataReceived(output)

    def connectionLost(self, reason):
        self.protocol.connectionLost()

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Dec 21 10:26:04 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 21 Dec 2002 12:26:04 -0500
Subject: [Twisted-Python] usage of sessions in twisted.web?
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
Message-ID: <3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>

Glyph Lefkowitz wrote:

> I'm just wondering how many of you out there are using sessions currently, and
> in what capacity, to see what upgrade path, if any, I should provide.

We are not using sessions yet, but plan to in the near future.  
Currently we are using the twisted xmlrpc for communication 
to our GUI client (developed using wxPython), but we also 
plan to have a browser interface (almost certainly using Woven), 
a SOAP interface, and quite possibly others (e.g., PB and/or 
CORBA).  Do you plan to make your new Sessions implementation 
general enough to support all of these?  (Given your usual 
sound architectural principles, I would expect so, but you 
might have practical reasons to make it more specific, so just 
thought I'd ask. :^)

Cheers,
-- Steve.



From glyph at twistedmatrix.com  Sat Dec 21 13:22:39 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Dec 2002 14:22:39 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
	<3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021221.142239.20477130.glyph@twistedmatrix.com>

On Sat, 21 Dec 2002 12:26:04 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> We are not using sessions yet, but plan to in the near future.  

Good... the "near future" will be a good time to start :-)

> Currently we are using the twisted xmlrpc for communication to our GUI client
> (developed using wxPython), but we also plan to have a browser interface
> (almost certainly using Woven), a SOAP interface, and quite possibly others
> (e.g., PB and/or CORBA).

Wow!  Did Twisted inspire you to use such a diverse assortment of frontends, or
was it part of your charter and why you chose it in the first place? :)

> Do you plan to make your new Sessions implementation general enough to
> support all of these?

This is a hard question to answer as asked, so I'll take this opportunity to
lay out my vision for how multi-protocol "sessions" are supposed to work.

There are two answers: yes, I plan to make Session part of a system general
enough to support all of these front-ends.  Also: no, I do not plan to make
Session general enough to support all these itself :-).  If you've been a good
disciple of the Twisted Way, you'll have a Service with Perspectives that
represent the way that users interact with your system.  That's the focal point
of the conversations your users will have with your abstractions.  Web session
management is a mostly-separate system, more of a kludge over the HTTP protocol
than a general way of representing stateful interaction.  The cool thing about
the new web session wrapper (now checked into CVS in twisted.web.woven.guard)
is the fact that it can negotiate with the browser to discover whether cookies
are turned on, more or less automatically, and provide effectively the same
experience whether they are or not.

I'm still working on the web part of the cross-protocol part of this system.
In twisted.cred, there are 4 real abstractions documented so far: identity,
perspective, service, authorizer.  There is a 5th though, which has really only
been used by PB so far: the notion of a "client object".  (That's a terrible
name, I know, but it seems to describe its function.)

Abstractly, the client object is representative of the "other side" of some
connection to the user.  In PB, it's usually a RemoteReference that the client
sends as part of the authentication sequence, so the service's side of the
interface to this object will often be through callRemote.  (There are no
restrictions on what kind of object it is, though, so your service is welcome
to do whatever is appropriate.)

In the case of something like IRC, the "client" will simply be an instance
wrapping the IRC Protocol instance.  For the web, it will be an object stuck to
your Session (which has been initialized using the handshake code above).  In
the PB case, it's an instance of an object on the other side of the Broker, as
I said above.

Once you've decided what kind of client object you're using, however, the
'attached' method of your perspective will be called with it.  When you log out
/ your broker goes stale / your IRC connection drops / your web session times
out, the symmetric "detached" method is called.

I hope that this explains what how should be expecting to use the
authentication part of the new twisted.web.woven.guard once it's finished, but
feel free to ask for clarification.  I really can't think of how to express
this well :-).

> (Given your usual sound architectural principles, I would expect so, but you
> might have practical reasons to make it more specific, so just thought I'd
> ask. :^)

-YES-.  MY DESIGN-FU IS STRONG RARARA

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021221/9d379ced/attachment.sig>

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Dec 21 13:47:24 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 21 Dec 2002 15:47:24 -0500
Subject: [Twisted-Python] usage of sessions in twisted.web?
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
		<3E04A42C.45AE32A0@beeblebrox.gsfc.nasa.gov> <20021221.142239.20477130.glyph@twistedmatrix.com>
Message-ID: <3E04D35C.6406DDA3@beeblebrox.gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> On Sat, 21 Dec 2002 12:26:04 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> > We are not using sessions yet, but plan to in the near future.
> 
> Good... the "near future" will be a good time to start :-)

And my usage of the word "near" is very, um, relative there ... ;^)

> > Currently we are using the twisted xmlrpc for communication to our GUI client
> > (developed using wxPython), but we also plan to have a browser interface
> > (almost certainly using Woven), a SOAP interface, and quite possibly others
> > (e.g., PB and/or CORBA).
> 
> Wow!  Did Twisted inspire you to use such a diverse assortment of frontends, or
> was it part of your charter and why you chose it in the first place? :)

Yes.  :^)  It *is* part of our charter (which is to integrate things), 
but the prospects of our actually being able to implement this kind of 
diversity looked pretty slim until I discovered Twisted ... 

> > Do you plan to make your new Sessions implementation general enough to
> > support all of these?
> 
> This is a hard question to answer as asked, so I'll take this opportunity to
> lay out my vision for how multi-protocol "sessions" are supposed to work.
> 
> There are two answers: yes, I plan to make Session part of a system general
> enough to support all of these front-ends.  Also: no, I do not plan to make
> Session general enough to support all these itself :-).  

This is really the best answer I could have hoped for.  

> ... If you've been a good
> disciple of the Twisted Way, you'll have a Service with Perspectives that
> represent the way that users interact with your system.  That's the focal point
> of the conversations your users will have with your abstractions.  ...

Understood.  I'm just beginning work on the authentication aspects 
of our Service, which will use Perspectives and the dbauth stuff.  

> [ nice high-level explanation elided ... ]
> I hope that this explains what how should be expecting to use the
> authentication part of the new twisted.web.woven.guard once it's finished, but
> feel free to ask for clarification.  I really can't think of how to express
> this well :-).

That's just the right amount of explanation for now -- sounds like 
just the thing we'll need.  Please continue your sorcery!  

Thanks!
-- Steve.



From HaraldMassa at ghum.de  Sat Dec 21 14:12:57 2002
From: HaraldMassa at ghum.de (Harald Massa)
Date: Sat, 21 Dec 2002 22:12:57 +0100
Subject: [Twisted-Python] random security thoughts
Message-ID: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>

Glyph,
I was reading you Mail in the archive:
>Here is some internal rambling I've been doing about fixing up PB to be more
>bulletproof.  Apologies if it's not coherent to anyone else but I figured I'd
>better mention the idea on the list and see of someone smarter than me can fill
>in a gap or two :).
And actually I'm thinking about security in client/server and multi-tier communiation.
One idea I liked to discuss is:
why not crypt the transmitted data via public / private keys? 
So sending bad objects from somewhere would be a very hard process.

What do you think?

Harald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20021221/6cebdc39/attachment.html>

From twisted at moshez.org  Sat Dec 21 23:35:29 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 22 Dec 2002 06:35:29 -0000
Subject: [Twisted-Python] random security thoughts
In-Reply-To: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>
References: <000201c2a93b$eab329d0$642aa8c0@TEMPLEOFGHUM>
Message-ID: <20021222063529.15910.qmail@green.zadka.com>

On Sat, 21 Dec 2002, "Harald Massa" <HaraldMassa at ghum.de> wrote:

> One idea I liked to discuss is:
> why not crypt the transmitted data via public / private keys?=20
> So sending bad objects from somewhere would be a very hard process.

Well, you have a server trusting the client. This is usually a no-no.
*Any* data you receive, no matter how well signed, should usually not
be trusted to not crash your application, unless that is the kind of
application you design (that is, a remote-control application).



From tv at twistedmatrix.com  Sat Dec 21 13:54:06 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 21 Dec 2002 22:54:06 +0200
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221.071111.48667858.glyph@twistedmatrix.com>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
Message-ID: <20021221205406.GA17366@ki.yok.utu.fi>

On Sat, Dec 21, 2002 at 07:11:11AM -0600, Glyph Lefkowitz wrote:
> I'm thinking of making some pretty substantial changes to the way that Twisted
> deals with Sessions, as part of re-writing twisted.web.guard to work with
> Woven.
> 
> Internally there are very few places where it's called (mostly in
> twisted.web.guard, which is exactly what I'm looking to get rid of ...) and it
> is a very naive, error-prone implementation.
> 
> I'm just wondering how many of you out there are using sessions currently, and
> in what capacity, to see what upgrade path, if any, I should provide.

	Ldaptor uses HTTP sessions for all everything else but
	read-only operations. A connection to the LDAP server is
	actually stored into the HTTP session data. One specific
	requirement is the ability to expire the HTTP session and
	ask for reauthentication when the LDAP server connection
	is lost.

	All in all, I suggest reading ldaptor sources, if you have
	time and can suppress the vomiting reflex -- there are parts
	that make me sick, too. But in general it's starting to shape
	up nicely.

	PS. Losing POST form input due to missing authentication
	sucks. If you can find a clean way around that, I would
	appreciate it.

-- 
:(){ :|:&};:



From lordvan at lordvan.com  Sun Dec 22 07:59:04 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 22 Dec 2002 15:59:04 +0100 (CET)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221205406.GA17366@ki.yok.utu.fi>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
        <20021221205406.GA17366@ki.yok.utu.fi>
Message-ID: <65235.62.47.64.183.1040569144.squirrel@mail-at.net>

I'll need sessions soon too ..

but please write some nice docs/examples *G*

greetings, LordVan

<quote who="Tommi Virtanen">
> On Sat, Dec 21, 2002 at 07:11:11AM -0600, Glyph Lefkowitz wrote:
>> I'm thinking of making some pretty substantial changes to the way that
>> Twisted deals with Sessions, as part of re-writing twisted.web.guard
>> to work with Woven.
>>
>> Internally there are very few places where it's called (mostly in
>> twisted.web.guard, which is exactly what I'm looking to get rid of
>> ...) and it is a very naive, error-prone implementation.
>>
>> I'm just wondering how many of you out there are using sessions
>> currently, and in what capacity, to see what upgrade path, if any, I
>> should provide.
>
> 	Ldaptor uses HTTP sessions for all everything else but
> 	read-only operations. A connection to the LDAP server is
> 	actually stored into the HTTP session data. One specific
> 	requirement is the ability to expire the HTTP session and
> 	ask for reauthentication when the LDAP server connection
> 	is lost.
>
> 	All in all, I suggest reading ldaptor sources, if you have
> 	time and can suppress the vomiting reflex -- there are parts
> 	that make me sick, too. But in general it's starting to shape
> 	up nicely.
>
> 	PS. Losing POST form input due to missing authentication
> 	sucks. If you can find a clean way around that, I would
> 	appreciate it.
>
> --
> :(){ :|:&};:
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From twisted at moshez.org  Sun Dec 22 10:05:21 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 22 Dec 2002 17:05:21 -0000
Subject: [Twisted-Python] Letting me (or the list) know about stuff
Message-ID: <20021222170521.19759.qmail@green.zadka.com>

Dear Twisted Developers,

As you may know, I am the Debian maintainer of Twisted. As you may also
know, the debian packages get built during the normal Twisted build.
Because of that, it often turns out that when the Debian packages Twisted
development machines use internally built, I am not present physically.
In fact, much work has been done to automate this process. However, sometimes
the Debian side of things needs to be managed. For example, new conch scripts
must be moved to the twisted-conch package, so I need to know when new
conch scripts get uploaded. Similarily, if Twisted gains the ability to use
a new external Python module, I need to know about that to properly indicate
that in the control package. Because of that, I request that whenever you
make a change like adding new scripts or adding new toplevel package, or
anything major, please drop either the list or me personally an e-mail about
this so I can respond to it in time. Please *do not* take this to mean you
should fiddle in the debian/ dir: what you should do is *send e-mail* to
*me or the list*.

Thanks in advance,
Your Debian maintainer,
Moshe Zadka

PS
Packages I upload to Debian I always build myself. But even then, some
changes sometimes slip by me.



From glyph at twistedmatrix.com  Sun Dec 22 10:13:25 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 22 Dec 2002 11:13:25 -0600 (CST)
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021221205406.GA17366@ki.yok.utu.fi>
References: <20021221.071111.48667858.glyph@twistedmatrix.com>
	<20021221205406.GA17366@ki.yok.utu.fi>
Message-ID: <20021222.111325.20555732.glyph@twistedmatrix.com>


There's some good news, and some bad news.  First the bad news:

On Sat, 21 Dec 2002 22:54:06 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> All in all, I suggest reading ldaptor sources, if you have time and can
> suppress the vomiting reflex -- there are parts that make me sick, too. But
> in general it's starting to shape up nicely.

I just did so.  Ldaptor itself didn't gross me out too much.  However, the
webui module was... unfortunate :-(.  I notice you're using web.widgets (which
we have noisily been attempting to deprecate for the last 3 months or so) for
the UI.  I don't think there's really much of an upgrade path beyond "rewrite
most of your web UI logic", especially if you want to take advantage of some of
the new features coming online in woven.

Now for some good news:

Everything you're doing now will continue to work for quite some time into the
future, since twisted.web.widgets was the only way to do dynamic content in
Twisted for most of its lifetime.  Even the server.Session and
guard.ResourceGuard classes are being left in place and gradually deprecated in
favor of woven.guard.SessionWrapper and woven.guard.PerspectiveWrapper.  You
should be able to migrate one function at a time very gradually.

> Ldaptor uses HTTP sessions for all everything else but read-only
> operations. A connection to the LDAP server is actually stored into the HTTP
> session data. One specific requirement is the ability to expire the HTTP
> session and ask for reauthentication when the LDAP server connection is lost.

The new woven.guard module will feature not only session expiry but
authentication expiry without creating a new session.  Additionally it will
support URL-based sessions if your browser doesn't feel like allowing cookies.

It will also feature a more graceful way to log in to multiple perspectives at
a time.  If your application is amenable to it, you may even be able to perform
a simple sort of web-based capability exchange, where you can temporarily give
another user a limited permission to act as you in some regards but not others,
by exchanging a generated session URL.

> PS. Losing POST form input due to missing authentication sucks. If you can
> find a clean way around that, I would appreciate it.

And of course this will be fixed :-).  There are many reasons why I *wanted* to
rewrite the sessions stuff, but this is why I *had* to do it.  Pretty much
everything in the world that I need to be authenticated involves at least 3
form POSTs.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021222/8e02b676/attachment.sig>

From nbm at mithrandr.moria.org  Mon Dec 23 08:26:58 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 23 Dec 2002 17:26:58 +0200
Subject: [Twisted-Python] SNMP support
Message-ID: <20021223152658.GA19263@mithrandr.moria.org>

Hi again,

I needed SNMP (client) support for something I'm writing, and managed to
hack my way to something that seems to work this aftenoon, based loosely
on the DNS Boss system that was in 1.0.0.  It uses the pure-python
pysnmp (http://pysnmp.sourceforge.net/) for message encoding/decoding.

I don't know whether this is the best way to organise this sort of
thing, but it seemed to be about the only way to handle UDP effectively.
I have no idea if I should be relying on transport.getHost() to return
the same value at send time and receive time, and different from every
other queries.  There doesn't seem to be a way to request an ID for the
SNMP request, but that may just be me not knowing how things work.

Anyway, I'd like to know how people would like this reworked, especially
if they can tell me how to think about it in a more twisted and/or
pythonic way.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.internet import defer, protocol, reactor, udp

from pysnmp.proto import v1, v2c

class SNMPBoss:
    def __init__(self, server, version = "1", community = "public"):
        try:
            snmp = eval('v' + version)
        except (NameError, AttributeError):
            print 'Unsupported SNMP protocol version: %s\n%s' % (version, usage)

        self.snmp = snmp
        self.community = community

        self.queries = {}
        self.server = server

        self.factory = protocol.Factory()
        self.factory.protocol = SNMPRequest
        self.factory.boss = self
        
    def gotResponse(self, peerinfo, data):
        (snmp, deferred) = self.queries[peerinfo]
        rsp = snmp.GetResponse()
        rsp.decode(data)
        deferred.callback(rsp)

    def makeRequest(self, oid):
        d = defer.Deferred()
        t = udp.Port(0, self.factory)
        t.startListening()
        transport = t.createConnection(self.server)
        self.queries[t.getHost()] = (self.snmp, d)
        transport.protocol.query(self.snmp, self.community, oid)
        return d

class SNMPRequest(protocol.Protocol):
    def query(self, snmp, community, oid):
        self.snmp = snmp
        self.req = snmp.GetRequest()
        self.req['community'].set(community)
        self.req['pdu']['get_request']['variable_bindings'].append(snmp.VarBind(name=snmp.ObjectName(oid)))
        self.transport.write(self.req.encode())

    def dataReceived(self, answer):
        self.factory.boss.gotResponse(self.transport.getHost(), answer)
        self.transport.loseConnection()

def success(rsp):
    oids = map(lambda x: x['name'].get(), \
        rsp['pdu'].values()[0]['variable_bindings'])
    vals = map(lambda x: x['value'], \
        rsp['pdu'].values()[0]['variable_bindings'])
    # Print out results
    for (oid, val) in map(None, oids, vals):
        print oid, ' ---> ', val.values()[0]

def makeQuery(boss):
    d = boss.makeRequest("1.3.6.1.2.1.2.2.1.10.2")
    d2 = boss.makeRequest("1.3.6.1.2.1.2.2.1.10.3")
    d.addCallback(success)
    d2.addCallback(success)
    reactor.callLater(5, makeQuery, (boss))

def main():
    boss = SNMPBoss(("archive",161), "2c" )
    reactor.callLater(1, makeQuery, (boss))
    reactor.run()

if __name__ == "__main__":
    main()

From twisted at itamarst.org  Mon Dec 23 09:19:53 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 11:19:53 -0500
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223111953.4fc0b692.twisted@itamarst.org>

On Mon, 23 Dec 2002 17:26:58 +0200
Neil Blakey-Milner <nbm at mithrandr.moria.org> wrote:

> I don't know whether this is the best way to organise this sort of
> thing, but it seemed to be about the only way to handle UDP
> effectively.

Never ever ever use udp or tcp modules directly. Always use reactor
APIs, e.e reactor.listenUDP and so on - they are documented in
twiusted.internet.interfaces.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Mon Dec 23 09:23:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 11:23:38 -0500
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223112338.370b6b47.twisted@itamarst.org>

You seem to be using the old UDP API - 1.0.1 has a new, much nicer API.



From skin_pup-twisted at damnable.happypoo.com  Mon Dec 23 10:09:03 2002
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Mon, 23 Dec 2002 12:09:03 -0500
Subject: [Twisted-Python] ReconnectingClientFactory
Message-ID: <20021223170903.GR32927@shitbomb.com>

ReconnectingClientFactory could not be pickled.  This did not seam to make
much sence :), well the cleanest way I could get it to is the
following.  It really is far from clean but works for me at least for me
now.  

Jeremy Rossi 


--- protocol.py	Mon Oct  7 20:29:22 2002
+++ protocol2.py	Mon Dec 23 12:00:10 2002
@@ -192,28 +192,24 @@
     retries = 0
     maxRetries = None
     _callID = None
+    _stop = None
     connector = None
 
     def clientConnectionFailed(self, connector, reason):
-        self.connector = connector
         if not reason.check(error.UserError):
-            self.retry()
+            self.retry(connector)
 
     def clientConnectionLost(self, connector, unused_reason):
-        self.connector = connector
-        self.retry()
+        self.retry(connector)
 
     def retry(self, connector=None):
         """Have this connector connect again, after a suitable delay.
         """
         if connector is None:
-            if self.connector is None:
-                raise ValueError("no connector to retry")
-            else:
-                connector = self.connector
+            raise ValueError("no connector to retry")
 
         self.retries += 1
-        if self.maxRetries is not None and (self.retries > self.maxRetries):
+        if self._stop or (self.maxRetries is not None and (self.retries > self.maxRetries)):
             log.msg("Abandoning %s after %d retries." %
                     (connector, self.retries))
             return
@@ -225,18 +221,13 @@
             
         log.msg("%s will retry in %d seconds" % (connector, self.delay,))
         from twisted.internet import reactor
-        self._callID = reactor.callLater(self.delay, connector.connect)
+        reactor.callLater(self.delay, connector.connect)
 
     def stopTrying(self):
         """I put a stop to any attempt to reconnect in progress.
         """
-        # ??? Is this function really stopFactory?
-        if self._callID:
-            self._callID.cancel()
-        if self.connector and self.connector.state == "connecting":
-            # Hopefully this doesn't just make clientConnectionFailed
-            # retry again.
-            self.connector.stopConnecting()
+        # XXX CHeap work around
+        self._stop = 1
 
     def resetDelay(self):
         """Call me after a successful connection to reset.




From bob at redivi.com  Mon Dec 23 13:52:01 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 23 Dec 2002 15:52:01 -0500
Subject: [Twisted-Python] DelayedCall enhancements
Message-ID: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>

Here's a patch that adds two particularly useful methods to the 
IDelayedCall interface and implementation.  It's quite possible to do 
it currently, but it's a kludge.

Essentially what I added were methods to delay a DelayedCall by a 
configurable amount of time, and to reset a DelayedCall to happen a 
configurable amount of time from now.

I also added a test case for each, and they pass.  I can check it in if 
someone gives me the OK.

-bob


Index: twisted/internet/interfaces.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/interfaces.py,v
retrieving revision 1.57
diff -r1.57 interfaces.py
317a318,319
 >                   It also may be rescheduled by calling its C{delay()}
 >                   or C{reset()} methods.
347a350,370
 >     def delay(self, secondsLater):
 >         """Delay the scheduled call.
 >         @param secondsLater: how many seconds from its current firing 
time to delay
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
 >
 >     def reset(self, secondsFromNow):
 >         """Reset the scheduled call's timer.
 >         @param secondsLater: how many seconds from now it should 
fire, equivalent
 >                              to C{self.cancel()} and then doing 
another
 >                              C{reactor.callLater(secondsLater, ...)}
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.29
diff -r1.29 base.py
48c48
<     def __init__(self, time, func, args, kw, cancel):
---
 >     def __init__(self, time, func, args, kw, cancel, reset):
49a50
 >         self.resetter = reset
61a63,79
 >     def reset(self, secondsFromNow):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time = time() + secondsFromNow
 >             self.resetter(self)
 >
 >     def delay(self, secondsLater):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time += secondsLater
 >             self.resetter(self)
266c284,290
<         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove)
---
 >         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove, self._resetCallLater)
 >         insort(self._pendingTimedCalls, tple)
 >         return tple
 >
 >     def _resetCallLater(self, tple):
 >         assert tple in self._pendingTimedCalls
 >         self._pendingTimedCalls.remove(tple)
Index: twisted/test/test_internet.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_internet.py,v
retrieving revision 1.13
diff -r1.13 test_internet.py
102a103,128
 >     def _resetcallback(self):
 >         self._resetcallbackTime = time.time()
 >
 >     def _delaycallback(self):
 >         self._delaycallbackTime = time.time()
 >
 >     def testCallLaterDelayAndReset(self):
 >         self._resetcallbackTime = None
 >         self._delaycallbackTime = None
 >         ireset = reactor.callLater(0.5, self._resetcallback)
 >         idelay = reactor.callLater(0.5, self._delaycallback)
 >         start = time.time()
 >         # chug a little before delaying
 >         while time.time() - start < 0.2:
 >             reactor.iterate(0.01)
 >         ireset.reset(0.3)
 >         idelay.delay(0.3)
 >         # both should be called sometime during this
 >         while time.time() - start < 0.9:
 >             reactor.iterate(0.01)
 >         self.assert_(0 < self._resetcallbackTime - start - 0.5 < 0.2)
 >         self.assert_(0 < self._delaycallbackTime - start - 0.8 < 0.2)
 >
 >         del self._resetcallbackTime
 >         del self._delaycallbackTime
 >




From twisted at itamarst.org  Mon Dec 23 13:57:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Dec 2002 15:57:07 -0500
Subject: [Twisted-Python] DelayedCall enhancements
In-Reply-To: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>
References: <62B71B14-16B8-11D7-9430-000A95686CD8@redivi.com>
Message-ID: <20021223155707.716f3afd.twisted@itamarst.org>

On Mon, 23 Dec 2002 15:52:01 -0500
Bob Ippolito <bob at redivi.com> wrote:

> Here's a patch that adds two particularly useful methods to the 
> IDelayedCall interface and implementation.  It's quite possible to do 
> it currently, but it's a kludge

i like it.



From nbm at mithrandr.moria.org  Mon Dec 23 14:46:02 2002
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 23 Dec 2002 23:46:02 +0200
Subject: [Twisted-Python] SNMP support
In-Reply-To: <20021223152658.GA19263@mithrandr.moria.org>
References: <20021223152658.GA19263@mithrandr.moria.org>
Message-ID: <20021223214602.GA20819@mithrandr.moria.org>

On Mon 2002-12-23 (17:26), Neil Blakey-Milner wrote:
> Anyway, I'd like to know how people would like this reworked, especially
> if they can tell me how to think about it in a more twisted and/or
> pythonic way.

Thanks to Itamar and Moshez for comments.  Updated to 1.0.1 udp (much
nicer), and added multiple oid queries.

I don't like the way things fail when they do.  If the host does not
exist in DNS, I get:
exceptions.AttributeError: 'NoneType' object has no attribute 'getHost'
because the transport doesn't exist if the DNS fails.

If the server is not running SNMP, I get:
socket.error: (61, 'Connection refused')
from udp.Port.doRead(), since it excepts to calling log.deferr.  My
requests do subsequently timeout, though, but I can't remove them from
my queries list.

Am I doing anything wrong? I just copied the general idea from the DNS
code again.

I also wonder whether I should be setting a timeout within the "boss",
even a configurable one.  Would it be better to leave it to the user as
to whether to wait, or assume a default if they don't pass a timeout to
the query and/or "boss"?

Thanks again,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

from twisted.internet import defer, protocol, reactor, udp

from pysnmp.proto import v1, v2c

class SNMPv1Boss:
    def __init__(self, server, port = 161, community = "public"):
        self.snmp = v1
        self.community = community

        self.queries = {}
        self.server = server
        self.port = port

    def gotResponse(self, peerinfo, data):
        if self.queries.has_key(peerinfo):
            (snmp, deferred) = self.queries[peerinfo]
            rsp = snmp.GetResponse()
            rsp.decode(data)
            deferred.callback(rsp)
            del self.queries[peerinfo]

    def makeRequest(self, oids):
        d = defer.Deferred()
        req = SNMPRequest()
        req.boss = self
        reactor.connectUDP(self.server, self.port, req)
        req.id = req.transport.getHost()
        self.queries[req.id] = (self.snmp, d)
        req.query(self.snmp, self.community, oids)
        d.setTimeout(5)
        return d

class SNMPv2Boss(SNMPv1Boss):
    def __init__(self, server, port = 161, community = "public"):
        SNMPv1Boss.__init__(self, server, port, community)
        self.snmp = v2c

class SNMPRequest(protocol.ConnectedDatagramProtocol):
    def query(self, snmp, community, oids):
        self.snmp = snmp
        self.req = snmp.GetRequest()
        self.req['community'].set(community)
        self.req['pdu']['get_request']['variable_bindings'].extend(map(lambda x: snmp.VarBind(name=snmp.ObjectName(x)), oids))
        self.transport.write(self.req.encode())

    def datagramReceived(self, answer):
        self.boss.gotResponse(self.id, answer)
        self.transport.loseConnection()

def success(rsp):
    oids = map(lambda x: x['name'].get(), \
        rsp['pdu'].values()[0]['variable_bindings'])
    vals = map(lambda x: x['value'], \
        rsp['pdu'].values()[0]['variable_bindings'])
    # Print out results
    for (oid, val) in map(None, oids, vals):
        print oid, ' ---> ', val.values()[0]

def failed(reason):
    print reason

def makeQuery(boss):
    d = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.2"])
    d2 = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.3"])
    d.addCallbacks(success, failed)
    d2.addCallbacks(success, failed)
    d3 = boss.makeRequest(["1.3.6.1.2.1.2.2.1.10.2", "1.3.6.1.2.1.2.2.1.10.3"])
    d3.addCallbacks(success, failed)
    reactor.callLater(5, makeQuery, (boss))

def main():
    boss = SNMPv2Boss("archive", 161)
    reactor.callLater(1, makeQuery, (boss))
    reactor.run()

if __name__ == "__main__":
    main()

From tv-nospam.da39a3ee5e6b4b0d3255bfef95601890afd80709 at tv.debian.net  Mon Dec 23 05:20:21 2002
From: tv-nospam.da39a3ee5e6b4b0d3255bfef95601890afd80709 at tv.debian.net (Tommi Virtanen)
Date: Mon, 23 Dec 2002 14:20:21 +0200
Subject: [Twisted-Python] usage of sessions in twisted.web?
In-Reply-To: <20021222.111325.20555732.glyph@twistedmatrix.com>
References: <20021221.071111.48667858.glyph@twistedmatrix.com> <20021221205406.GA17366@ki.yok.utu.fi> <20021222.111325.20555732.glyph@twistedmatrix.com>
Message-ID: <20021223122021.GA2481@ki.yok.utu.fi>

On Sun, Dec 22, 2002 at 11:13:25AM -0600, Glyph Lefkowitz wrote:
> > All in all, I suggest reading ldaptor sources, if you have time and can
> > suppress the vomiting reflex -- there are parts that make me sick, too. But
> > in general it's starting to shape up nicely.
> I just did so.  Ldaptor itself didn't gross me out too much.  However, the
> webui module was... unfortunate :-(.  I notice you're using web.widgets (which
> we have noisily been attempting to deprecate for the last 3 months or so) for
> the UI.  I don't think there's really much of an upgrade path beyond "rewrite
> most of your web UI logic", especially if you want to take advantage of some of
> the new features coming online in woven.

	Oh, I *know*. It's just that the code has existed for ages
	already. I haven't figured out how to rewrite it _easily_
	bit-by-bit, so I may end up having to rewrite the whole and
	then just swapping out the old implementation. Which is
	horrible, as I'd have to work on two versions of it at the
	same time. But maybe this time around I'll figure out how to
	actually test the UI.

-- 
:(){ :|:&};:



From bob at mastersofbranding.com  Mon Dec 23 13:47:26 2002
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Mon, 23 Dec 2002 15:47:26 -0500
Subject: [Twisted-Python] DelayedCall enhancements
Message-ID: <BE9353E3-16B7-11D7-9430-000A95686CD8@mastersofbranding.com>

Here's a patch that adds two particularly useful methods to the 
IDelayedCall interface and implementation.  It's quite possible to do 
it currently, but it's a kludge.

Essentially what I added were methods to delay a DelayedCall by a 
configurable amount of time, and to reset a DelayedCall to happen a 
configurable amount of time from now.

I also added a test case for each, and they pass.  I can check it in if 
someone gives me the OK.

-bob


Index: twisted/internet/interfaces.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/interfaces.py,v
retrieving revision 1.57
diff -r1.57 interfaces.py
317a318,319
 >                   It also may be rescheduled by calling its C{delay()}
 >                   or C{reset()} methods.
347a350,370
 >     def delay(self, secondsLater):
 >         """Delay the scheduled call.
 >         @param secondsLater: how many seconds from its current firing 
time to delay
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
 >
 >     def reset(self, secondsFromNow):
 >         """Reset the scheduled call's timer.
 >         @param secondsLater: how many seconds from now it should 
fire, equivalent
 >                              to C{self.cancel()} and then doing 
another
 >                              C{reactor.callLater(secondsLater, ...)}
 >
 >         @raises twisted.internet.error.AlreadyCalled: if the call has 
already
 >             happened.
 >         @raises twisted.internet.error.AlreadyCancelled: if the call 
has already
 >             been cancelled.
 >         """
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.29
diff -r1.29 base.py
48c48
<     def __init__(self, time, func, args, kw, cancel):
---
 >     def __init__(self, time, func, args, kw, cancel, reset):
49a50
 >         self.resetter = reset
61a63,79
 >     def reset(self, secondsFromNow):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time = time() + secondsFromNow
 >             self.resetter(self)
 >
 >     def delay(self, secondsLater):
 >         if self.cancelled:
 >             raise error.AlreadyCancelled
 >         elif self.called:
 >             raise error.AlreadyCalled
 >         else:
 >             self.time += secondsLater
 >             self.resetter(self)
266c284,290
<         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove)
---
 >         tple = DelayedCall(time() + seconds, f, args, kw, 
self._pendingTimedCalls.remove, self._resetCallLater)
 >         insort(self._pendingTimedCalls, tple)
 >         return tple
 >
 >     def _resetCallLater(self, tple):
 >         assert tple in self._pendingTimedCalls
 >         self._pendingTimedCalls.remove(tple)
Index: twisted/test/test_internet.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_internet.py,v
retrieving revision 1.13
diff -r1.13 test_internet.py
102a103,128
 >     def _resetcallback(self):
 >         self._resetcallbackTime = time.time()
 >
 >     def _delaycallback(self):
 >         self._delaycallbackTime = time.time()
 >
 >     def testCallLaterDelayAndReset(self):
 >         self._resetcallbackTime = None
 >         self._delaycallbackTime = None
 >         ireset = reactor.callLater(0.5, self._resetcallback)
 >         idelay = reactor.callLater(0.5, self._delaycallback)
 >         start = time.time()
 >         # chug a little before delaying
 >         while time.time() - start < 0.2:
 >             reactor.iterate(0.01)
 >         ireset.reset(0.3)
 >         idelay.delay(0.3)
 >         # both should be called sometime during this
 >         while time.time() - start < 0.9:
 >             reactor.iterate(0.01)
 >         self.assert_(0 < self._resetcallbackTime - start - 0.5 < 0.2)
 >         self.assert_(0 < self._delaycallbackTime - start - 0.8 < 0.2)
 >
 >         del self._resetcallbackTime
 >         del self._delaycallbackTime
 > 




From glyph at twistedmatrix.com  Tue Dec 24 07:19:05 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Dec 2002 08:19:05 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] Deprecating __getattr__, encourage people to
 use .callMethod
In-Reply-To: <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
References: <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
Message-ID: <20021224.081905.101479174.glyph@twistedmatrix.com>

On Tue, 24 Dec 2002 00:42:03 -0600, moshez CVS <moshez at twistedmatrix.com> wrote:
> Modified files:
> Twisted/doc/examples/xmlrpcclient.py 1.2 1.3
> Twisted/twisted/web/xmlrpc.py 1.14 1.15

I'm just curious why this method was called "callMethod" rather than
"callRemote", as with PB?  Is there some difference in semantics I'm not
getting?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021224/b2873a5a/attachment.sig>

From bob at redivi.com  Tue Dec 24 07:30:12 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 24 Dec 2002 09:30:12 -0500
Subject: [Twisted-Python] DelayedCall enhancements
In-Reply-To: <20021223155707.716f3afd.twisted@itamarst.org>
Message-ID: <361652CA-174C-11D7-A675-000A95686CD8@redivi.com>

On Monday, Dec 23, 2002, at 15:57 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Mon, 23 Dec 2002 15:52:01 -0500
> Bob Ippolito <bob at redivi.com> wrote:
>
>> Here's a patch that adds two particularly useful methods to the
>> IDelayedCall interface and implementation.  It's quite possible to do
>> it currently, but it's a kludge
>
> i like it.
>

As per Itamar's recommendation, I didn't hear any flak for a day (and 
the tests still pass), so I've committed them.

-bob




From twisted at moshez.org  Tue Dec 24 08:38:22 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 24 Dec 2002 15:38:22 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] Deprecating __getattr__, encourage people to use .callMethod
In-Reply-To: <20021224.081905.101479174.glyph@twistedmatrix.com>
References: <20021224.081905.101479174.glyph@twistedmatrix.com>, <E18QilP-0007sk-00@pyramid.twistedmatrix.com>
Message-ID: <20021224153822.20181.qmail@green.zadka.com>

On Tue, 24 Dec 2002, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> I'm just curious why this method was called "callMethod" rather than
> "callRemote", as with PB?  Is there some difference in semantics I'm not
> getting?

Probably not.
I renamed it to callRemote. This means that some places which were expecting
a PB object can now get an XML-RPC proxy object, which is inherently cool
(naturally there are some limitations)



From lac at strakt.com  Thu Dec 26 23:46:39 2002
From: lac at strakt.com (Laura Creighton)
Date: Fri, 27 Dec 2002 07:46:39 +0100
Subject: [Twisted-Python] would-be twisted user in comp.lang.python
Message-ID: <200212270646.gBR6kdTT032023@ratthing-b246.strakt.com>

In http://mail.python.org/pipermail/python-list/2002-December/136243.html
dsavitsk wants to hear from people who use Twisted as a web server:

	'Last, Twisted seems really cool, but I don't know much
	about it and am looking for feedback from someone who has 
	done this and can say whether it is a good options or not.'

Laura Creighton



From dsavitsk at mail.e-coli.net  Fri Dec 27 00:59:36 2002
From: dsavitsk at mail.e-coli.net (douglas savitsky)
Date: Thu, 26 Dec 2002 23:59:36 -0800
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
Message-ID: <200212262359.AA2820210938@mail.e-coli.net>

I installed Python (2.2.1) from the port.  I installed twisted 1.0.1 by downloading and running

#python ./setup.py install

as root, i ran 

#mktap web --path /usr/www --port 80

when i then run 

# coil web.tap

I get the following traceback:

Traceback (most recent call last):
  File "/usr/local/bin/coil", line 30, in ?
    run()
  File "/usr/local/lib/python2.2/site-packages/twisted/scripts/coil.py", line 89, in run
    p.load()
  File "/usr/local/lib/python2.2/site-packages/twisted/python/plugin.py", line 40, in load
    return namedModule(self.module)
  File "/usr/local/lib/python2.2/site-packages/twisted/python/reflect.py", line 372, in namedModule
    topLevel = __import__(name)
  File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
    from twisted.names import dns
ImportError: cannot import name dns

Is there an easy way around this?

thanks,

doug



From m at moshez.org  Fri Dec 27 02:40:12 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Dec 2002 09:40:12 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212262359.AA2820210938@mail.e-coli.net>
References: <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227094012.27818.qmail@green.zadka.com>

On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:

> #mktap web --path /usr/www --port 80

NEVER RUN MKTAP AS ROOT.
I mean it. twistd will run the server as the user who ran mktap, by default.
Thus, you want to run mktap as www-data or give appropriate --uid/--gid
flags.

> when i then run 
> 
> # coil web.tap

coil isn't in a real working order...



From exarkun at intarweb.us  Fri Dec 27 08:00:33 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 27 Dec 2002 10:00:33 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212262359.AA2820210938@mail.e-coli.net>
References: <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227150033.GA22004@meson.dyndns.org>

On Thu, Dec 26, 2002 at 11:59:36PM -0800, douglas savitsky wrote:
> [snip]
>   File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
>     from twisted.names import dns
> ImportError: cannot import name dns
> 
> Is there an easy way around this?
> 

  Man, we really messed this up :)  The coil stuff should have been removed,
but a few nasty things slipped by and got into the release. 
twisted.names.dns no longer exists; one solution is to remove all the code
referring to it from various locations, mainly plugins.tml.  As Moshe
pointed out in his response, though, coil is somewhat defunct :)   You
probably won't be able to do much useful with it even once it works.

  I can't load www.moshez.org at the moment (dunno why) but, if I'm not
mistaken, there's a link to Moshe's twisted-web, which is some sort of t.web
configurator, and may be more along the lines of what you're looking for. 
Perhaps he can elaborate on it a bit.

 Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:00am up 11 days, 9:45, 7 users, load average: 0.26, 0.09, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021227/f26f073d/attachment.sig>

From radix at twistedmatrix.com  Fri Dec 27 11:12:19 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 27 Dec 2002 13:12:19 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <20021227150033.GA22004@meson.dyndns.org>
References: <200212262359.AA2820210938@mail.e-coli.net> <20021227150033.GA22004@meson.dyndns.org>
Message-ID: <20021227181219.GC7934@toshi>

On Fri, Dec 27, 2002 at 10:00:33AM -0500, Jp Calderone wrote:
> On Thu, Dec 26, 2002 at 11:59:36PM -0800, douglas savitsky wrote:
> > [snip]
> >   File "/usr/local/lib/python2.2/site-packages/twisted/coil/plugins/names.py", line 21, in ?
> >     from twisted.names import dns
> > ImportError: cannot import name dns
> > 
> > Is there an easy way around this?
> > 
> 
>   Man, we really messed this up :)  The coil stuff should have been removed,
> but a few nasty things slipped by and got into the release. 

This long-standing annoyance should be going away soon; I've updated
the website with 1.0.2alpha1's docs (which don't mention coil) so
people won't be mislead any longer.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Fri Dec 27 12:09:45 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Dec 2002 19:09:45 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <20021227150033.GA22004@meson.dyndns.org>
References: <20021227150033.GA22004@meson.dyndns.org>, <200212262359.AA2820210938@mail.e-coli.net>
Message-ID: <20021227190945.1929.qmail@green.zadka.com>

On Fri, 27 Dec 2002, Jp Calderone <exarkun at intarweb.us> wrote:

>   I can't load www.moshez.org at the moment (dunno why)

Power failure, apparently. It should be back up

> but, if I'm not
> mistaken, there's a link to Moshe's twisted-web, which is some sort of t.web
> configurator, and may be more along the lines of what you're looking for.

Unlikely.

A. t-w is on tm.com, as are all of my twisted-related stuff:
   http://twistedmatrix.com/users/moshez/apt/
B. t-w is a Debian specific package. I believe the OP was using FreeBSD
C. t-w is not a "twisted-web configurator": it's a flexible configuration
   system for Twisted-Web, where I do all the non-portable stuff (like 
   determining file placement and put /etc/init.d scripts). If the OP
   wants to switch to the One True OS, I believe t-w is perfectly usable
   with the last Twisted alphas (it won't work with 1.0.1 or below).

> Perhaps he can elaborate on it a bit.

I can.



From elloyd at lancaster.lib.pa.us  Fri Dec 27 13:05:19 2002
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Fri, 27 Dec 2002 15:05:19 -0500
Subject: [Twisted-Python] twisted.names.dns
Message-ID: <200212271505.19911.elloyd@lancaster.lib.pa.us>

Hi all,

We are planning to support some in-house DNS service starting next year, and 
since I've been playing with Twisted, I recall that there used to be 
something along the lines of a basic DNS server built on top of 
twisted.names. Has this been removed, refactored somewhere else, or 
abandoned? Is anyone working on a production-quality but simple DNS server?

Cheers,

Eron

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From twisted at itamarst.org  Fri Dec 27 13:11:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 27 Dec 2002 15:11:18 -0500
Subject: [Twisted-Python] twisted.names.dns
In-Reply-To: <200212271505.19911.elloyd@lancaster.lib.pa.us>
References: <200212271505.19911.elloyd@lancaster.lib.pa.us>
Message-ID: <20021227151118.4630616b.twisted@itamarst.org>

On Fri, 27 Dec 2002 15:05:19 -0500
Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:

> since I've been playing with Twisted, I recall that there used to be 
> something along the lines of a basic DNS server built on top of 
> twisted.names. Has this been removed, refactored somewhere else, or 
> abandoned? Is anyone working on a production-quality but simple DNS
> server?

JP (exarkun) has rewritten it completely - you probably want to look at
CVS or 1.0.2alpha1 release. I'm not sure about "production quality", but
it seems to be getting there pretty quickly.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From elloyd at lancaster.lib.pa.us  Fri Dec 27 13:22:42 2002
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Fri, 27 Dec 2002 15:22:42 -0500
Subject: [Twisted-Python] twisted.names.dns
In-Reply-To: <20021227151118.4630616b.twisted@itamarst.org>
References: <200212271505.19911.elloyd@lancaster.lib.pa.us> <20021227151118.4630616b.twisted@itamarst.org>
Message-ID: <200212271522.42592.elloyd@lancaster.lib.pa.us>

Awesome! I don't mean production-quality other than it not being flaky enough
to make our boss take notice and us get into trouble ;^). I'm going to try and 
use this opportunity to introduce Twisted to our organization, and you know 
how first impressions matter.

Thanks for the info,

Eron (earthtone)

On Friday 27 December 2002 3:11 pm, Itamar Shtull-Trauring wrote:
> On Fri, 27 Dec 2002 15:05:19 -0500
>
> Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:
> > since I've been playing with Twisted, I recall that there used to be
> > something along the lines of a basic DNS server built on top of
> > twisted.names. Has this been removed, refactored somewhere else, or
> > abandoned? Is anyone working on a production-quality but simple DNS
> > server?
>
> JP (exarkun) has rewritten it completely - you probably want to look at
> CVS or 1.0.2alpha1 release. I'm not sure about "production quality", but
> it seems to be getting there pretty quickly.

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From bob at redivi.com  Fri Dec 27 20:04:13 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 27 Dec 2002 22:04:13 -0500
Subject: [Twisted-Python] admin/runtests on OS X
Message-ID: <0B4F88C2-1A11-11D7-86B9-000A95686CD8@redivi.com>

Just FYI on this one, as of now there's a lot less tests that fail on 
OS X 10.2.3 (Python 2.2).  All of the SSH stuff seems to have been 
resolved, just a few lingering failures elsewhere.. Itamar had 
mentioned that the rebuild failure was due to Python 2.2, I haven't 
looked into why the others fail.

======================================================================
ERROR: testNormalTermination 
(twisted.test.test_process.PosixProcessTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_process.py", line 207, 
in testNormalTermination
     p.reason.trap(error.ProcessDone)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.ProcessTerminated, process ended with exit code 1
]
======================================================================
ERROR: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 276, in 
testReconnect
     factory.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testFailing (twisted.test.test_tcp.LoopbackTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_tcp.py", line 131, in 
testFailing
     clientF.reason.trap(error.ConnectionRefusedError)
   File "/Users/bob/src/Twisted/twisted/python/failure.py", line 230, in 
trap
     raise self
Failure: [Failure instance: Traceback! 
twisted.internet.error.TimeoutError,
]
======================================================================
ERROR: testMessages (twisted.test.test_unix.UnixSocketTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_smtp.py", line 146, in 
testMessages
     self.loopback(protocol, clientProtocol)
   File "/Users/bob/src/Twisted/twisted/test/test_unix.py", line 27, in 
loopback
     loopback.loopbackUNIX(client, server)
   File "/Users/bob/src/Twisted/twisted/protocols/loopback.py", line 
132, in loopbackUNIX
     reactor.iterate()
   File "/Users/bob/src/Twisted/twisted/internet/base.py", line 219, in 
iterate
     self.doIteration(delay)
--- <exception caught here> ---
   File "/Users/bob/src/Twisted/twisted/internet/default.py", line 547, 
in doSelect
     why = getattr(selectable, method)()
   File "/Users/bob/src/Twisted/twisted/internet/abstract.py", line 102, 
in doWrite
     self.unsent = self.unsent[l:]
exceptions.TypeError: sequence index must be integer
======================================================================
FAIL: testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
   File "/Users/bob/src/Twisted/twisted/test/test_rebuild.py", line 73, 
in testFileRebuild
     assert b.b() == 'c'
AssertionError
----------------------------------------------------------------------
Ran 369 tests in 92.723s

FAILED (failures=1, errors=4)




From dsavitsk at mail.e-coli.net  Fri Dec 27 21:23:08 2002
From: dsavitsk at mail.e-coli.net (douglas savitsky)
Date: Fri, 27 Dec 2002 20:23:08 -0800
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
Message-ID: <200212272023.AA2080178424@mail.e-coli.net>

---------- Original Message ----------------------------------
From: Moshe Zadka <m at moshez.org>
Reply-To: twisted-python at twistedmatrix.com
Date: 27 Dec 2002 09:40:12 -0000

>On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:
>
>> #mktap web --path /usr/www --port 80
>
>NEVER RUN MKTAP AS ROOT.
>I mean it. twistd will run the server as the user who ran mktap, by default.
>Thus, you want to run mktap as www-data or give appropriate --uid/--gid
>flags.

FreeBSD will only allow root to bind ports lower than 1024.   further

mktap --port=80 --path=/usr/www --uid=65534 --gid=65534

says that --uid is not recognised.  last

man mktap 

says there is no manpage so I am not sure where to look for this.

so. if I can't run as root, how do I run

(
65534 was obtained from
>>> pwd.getpwnam ('nobody')[2:4]
)

-doug



From radix at twistedmatrix.com  Fri Dec 27 21:30:38 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 27 Dec 2002 23:30:38 -0500
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212272023.AA2080178424@mail.e-coli.net>
References: <200212272023.AA2080178424@mail.e-coli.net>
Message-ID: <20021228043038.GD7934@toshi>

On Fri, Dec 27, 2002 at 08:23:08PM -0800, douglas savitsky wrote:
> >On Thu, 26 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:
> >
> >> #mktap web --path /usr/www --port 80
> >
> >NEVER RUN MKTAP AS ROOT.
> >I mean it. twistd will run the server as the user who ran mktap, by default.
> >Thus, you want to run mktap as www-data or give appropriate --uid/--gid
> >flags.
> 
> FreeBSD will only allow root to bind ports lower than 1024.   further

mktap doesn't bind ports, twistd does. The point is that you run
`mktap' as the user who you ultimately want the process to be run as,
and if you need root privelages to bind the ports it uses, run
`twistd' as root. It'll drop privs right after it binds.

> mktap --port=80 --path=/usr/www --uid=65534 --gid=65534
> 
> says that --uid is not recognised.  last

That's odd. Can you check the output of `mktap --help'? Also mktap
--version.

> man mktap 
> 
> says there is no manpage so I am not sure where to look for this.

If you're using the Ports Twisted package, maybe the problem is with
it? If you're using the tarball, the manpages are located in doc/man.

> so. if I can't run as root, how do I run

Run mktap as nobody (or, once you figure out what the problem is, with
the --uid option), and twistd as root.

> 
> (
> 65534 was obtained from
> >>> pwd.getpwnam ('nobody')[2:4]
> )

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Fri Dec 27 23:05:58 2002
From: m at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 06:05:58 -0000
Subject: [Twisted-Python] twisted.web problem on FreeBSD 4.7
In-Reply-To: <200212272023.AA2080178424@mail.e-coli.net>
References: <200212272023.AA2080178424@mail.e-coli.net>
Message-ID: <20021228060558.8024.qmail@green.zadka.com>

On Fri, 27 Dec 2002, "douglas savitsky" <dsavitsk at mail.e-coli.net> wrote:

> FreeBSD will only allow root to bind ports lower than 1024.

So?

>   further
> 
> mktap --port=80 --path=/usr/www --uid=65534 --gid=65534
> 
> says that --uid is not recognised.  last

In the source distribution, mktap's man page is in doc/man/mktap.1



From twisted at moshez.org  Sat Dec 28 03:54:07 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 10:54:07 -0000
Subject: [Twisted-Python] Documentation Lacks
Message-ID: <20021228105407.10208.qmail@green.zadka.com>

Hi.
The following things are undocumented -- any volunteers would be welcome:
 - conch HOWTO
 - Twisted chat HOWTO (im, words server, writing bots)
 - Add tkmktap/tktwistd to basics.html
 - Twisted news HOWTO
 - Twisted names HOWTO




From m at moshez.org  Sat Dec 28 08:22:22 2002
From: m at moshez.org (Moshe Zadka)
Date: 28 Dec 2002 15:22:22 -0000
Subject: [Twisted-Python] dict implementation buggy
Message-ID: <20021228152222.12273.qmail@green.zadka.com>

For example, there is not a single call to self.d.errback -- there should
probably be at least two, one if the connection is lost, and one if the
server sends an error.

However, this is the least of dict's problems -- the whole interface looks
backwards, as it should probably be nicely wrapped up in a factory, so it
can also errback on connection failed.

I would request some more initial quality control on new protocol
implementations.

Thanks,
Moshe Zadka




From corydodt at yahoo.com  Sat Dec 28 13:31:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Sat, 28 Dec 2002 12:31:08 -0800 (PST)
Subject: [Twisted-Python] FYI: runtests on win32
Message-ID: <20021228203108.21448.qmail@web10008.mail.yahoo.com>

I've put up some logs of admin/runtests so that people can see how we're
doing on Windows, merely to inform.  You can't fix bugs if you don't know
about them. :-)

With the default SelectReactor...
here: http://twistedmatrix.com/users/moonfallen/test.dump.txt (stderr of
runtests -t)
and
here: http://twistedmatrix.com/users/moonfallen/test.log.txt (test.log
file generated by runtests)

Some of the errors are from doing obviously unix-only things like fcntl,
symlinks, AF_UNIX sockets.  A few others are not so obvious.


Also with Win32Reactor...
here: http://twistedmatrix.com/users/moonfallen/testwin32.dump.txt
and
here: http://twistedmatrix.com/users/moonfallen/testwin32.log.txt

The additional errors in using this reactor seem to be bugs in the reactor.

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From exarkun at intarweb.us  Sat Dec 28 14:11:12 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 28 Dec 2002 16:11:12 -0500
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20021228105407.10208.qmail@green.zadka.com>
References: <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20021228211112.GA30315@meson.dyndns.org>

On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> Hi.
> The following things are undocumented -- any volunteers would be welcome:
> [snip]
>  - Add tkmktap/tktwistd to basics.html
> [snip]

  tktwistd isn't quite ready for actual use yet.  I'll see about adding
tkmktap, though.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 12 days, 9:45, 2 users, load average: 0.00, 0.00, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021228/ca717074/attachment.sig>

From twisted at itamarst.org  Sat Dec 28 15:48:10 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Dec 2002 17:48:10 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <E18S7Z8-0003A9-00@pyramid.twistedmatrix.com>
References: <E18S7Z8-0003A9-00@pyramid.twistedmatrix.com>
Message-ID: <20021228174810.3533fb79.twisted@itamarst.org>

On Fri, 27 Dec 2002 21:23:10 -0600
etrepum CVS <etrepum at twistedmatrix.com> wrote:

>          # Send as much data as you can.
>          l = self.writeSomeData(self.unsent)
> -        if l < 0:
> +        if l < 0 or isinstance(l, Exception):
>              return l
>          if l == 0 and self.unsent:
>              result = 0


Hmmmm... I'm not sure if writeSomeData is ever supposed to return an
exception. Who was returning what?



From bob at redivi.com  Sat Dec 28 16:45:06 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 28 Dec 2002 18:45:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <20021228174810.3533fb79.twisted@itamarst.org>
Message-ID: <64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>

On Saturday, Dec 28, 2002, at 17:48 America/New_York, Itamar 
Shtull-Trauring wrote:

> On Fri, 27 Dec 2002 21:23:10 -0600
> etrepum CVS <etrepum at twistedmatrix.com> wrote:
>
>>          # Send as much data as you can.
>>          l = self.writeSomeData(self.unsent)
>> -        if l < 0:
>> +        if l < 0 or isinstance(l, Exception):
>>              return l
>>          if l == 0 and self.unsent:
>>              result = 0
>
>
> Hmmmm... I'm not sure if writeSomeData is ever supposed to return an
> exception. Who was returning what?
>

Well, at a glance.. twisted.internet.process.ProcessWriter, 
twisted.internet.process.PTYProcess, and 
twisted.internet.tcp.Connection can return main.CONNECTION_LOST (an 
Exception), or an integer >= 0




From twisted at itamarst.org  Sat Dec 28 17:00:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Dec 2002 19:00:15 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] fixed a docstring typo in twisted.internet.tcp (callse -> calls, or something like that)
In-Reply-To: <64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>
References: <20021228174810.3533fb79.twisted@itamarst.org>
	<64938A2B-1ABE-11D7-A792-000A95686CD8@redivi.com>
Message-ID: <20021228190015.5e65f08b.twisted@itamarst.org>

On Sat, 28 Dec 2002 18:45:06 -0500
Bob Ippolito <bob at redivi.com> wrote:

> Well, at a glance.. twisted.internet.process.ProcessWriter, 
> twisted.internet.process.PTYProcess, and 
> twisted.internet.tcp.Connection can return main.CONNECTION_LOST (an 
> Exception), or an integer >= 0

Oh yes, CONNECTION_LOST used to be a negative integer.



From jk at xylema.org  Sat Dec 28 21:56:07 2002
From: jk at xylema.org (John Kozak)
Date: Sun, 29 Dec 2002 04:56:07 +0000
Subject: [Twisted-Python] woven: one <input> for each ListItem
Message-ID: <15886.32871.387962.495105@gargle.gargle.HOWL>

Using woven, how do I create an <input/> for each Item in a List?

e.g. suppose I wanted to do something like
  <table model="aList" view="List">
    <tr>
       <td><input ???/></td>
       ... want these replicated
    </tr>
  </table>
how would I go about this?  I've tried a few guesses based on the
examples, but aren't getting anywhere.

thanks

John Kozak



From tv at twistedmatrix.com  Sun Dec 29 10:13:00 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 29 Dec 2002 19:13:00 +0200
Subject: [Twisted-Python] t.p.usage suggestion: '--option='
Message-ID: <20021229171300.GA18076@ki.yok.utu.fi>

	As it is now, twisted.python.usage will not
	allow parameters to have empty strings as
	values. That is, these are invalid currently:

		--foo=
		--foo=''  (the same thing, more explicitly)
		--foo ''

	I think t.p.usage should not be dictating
	such policy for its users.

	It seems this only concerns optParameters users, "def
	opt_foo(self, x)" seems to be immune to this problem if
	I'm reading the code correctly.

	All the above cases are easily detectable, Here's a suggested
	patch; tell me if you want me to commit.

Index: twisted/python/usage.py
===================================================================
RCS file: /cvs/Twisted/twisted/python/usage.py,v
retrieving revision 1.36
diff -u -r1.36 usage.py
--- twisted/python/usage.py	10 Nov 2002 10:45:36 -0000	1.36
+++ twisted/python/usage.py	29 Dec 2002 17:06:03 -0000
@@ -242,7 +242,7 @@
         self.opts[flagName] = 1
 
     def _generic_parameter(self, parameterName, value):
-        if value in ('', None):
+        if value is None:
             raise UsageError, ("Parameter '%s' requires an argument."
                                % (parameterName,))
 

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Sun Dec 29 10:18:36 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 29 Dec 2002 19:18:36 +0200
Subject: [Twisted-Python] t.w.widgets.Form and radio buttons
Message-ID: <20021229171836.GB18076@ki.yok.utu.fi>

	I know twisted.web.widgets is deprecated, but I still have
	lots of code using it. So, here's a new feature:

	Form support for radio buttons.

	They work pretty much equally to checkgroups. I didn't see a
	point in supporting a single radio button, so I only
	implemented the group support.

	If nobody complains, I'll commit this soonish:

Index: twisted/web/widgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/widgets.py,v
retrieving revision 1.72
diff -u -r1.72 widgets.py
--- twisted/web/widgets.py	16 Nov 2002 08:10:33 -0000	1.72
+++ twisted/web/widgets.py	29 Dec 2002 17:09:56 -0000
@@ -244,6 +244,12 @@
         checked = (checked and 'checked = "1"') or ''
         write('<INPUT TYPE="checkbox" NAME="%s" VALUE="%s" %s />%s<br />\n' % (name, optionName, checked, displayName))
 
+def htmlFor_radio(write, name, value):
+    "A radio button group."
+    for optionName, displayName, checked in value:
+        checked = (checked and 'checked = "1"') or ''
+        write('<INPUT TYPE="radio" NAME="%s" VALUE="%s" %s />%s<br />\n' % (name, optionName, checked, displayName))
+
 class FormInputError(Exception):
     pass
 
@@ -283,7 +289,8 @@
         'multimenu': htmlFor_multimenu,
         'password': htmlFor_password,
         'checkbox': htmlFor_checkbox,
-        'checkgroup': htmlFor_checkgroup
+        'checkgroup': htmlFor_checkgroup,
+        'radio': htmlFor_radio,
     }
 
     formParse = {
@@ -325,6 +332,8 @@
 
           - 'checkgroup': a group of checkboxes
 
+          - 'radio': a group of radio buttons
+
           - 'password': a 'string' field where the contents are not visible as the user types
 
           - 'file': a file-upload form (EXPERIMENTAL)
@@ -339,8 +348,8 @@
         The 'Input Value' is usually a string, but its value can depend on the
         'Input Type'.  'int' it is an integer, 'menu' it is a list of pairs of
         strings, representing (value, name) pairs for the menu options.  Input
-        value for 'checkgroup' should be a list of ('inputName', 'Display
-        Name', 'checked') triplets.
+        value for 'checkgroup' and 'radio' should be a list of ('inputName',
+        'Display Name', 'checked') triplets.
 
         The 'Description' field is an (optional) string which describes the form
         item to the user.
@@ -381,7 +390,7 @@
                         inputValue = 0
                 else:
                     inputValue = 0
-            elif inputType == 'checkgroup':
+            elif inputType in ('checkgroup', 'radio'):
                 if request.args.has_key(inputName):
                     keys = request.args[inputName]
                 else:
@@ -483,7 +492,7 @@
                         formData = 0
                 else:
                     formData = 0
-            elif inputType in ['checkgroup', 'multimenu']:
+            elif inputType in ['checkgroup', 'radio', 'multimenu']:
                 if args.has_key(inputName):
                     formData = args[inputName]
                     del args[inputName]


-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Sun Dec 29 11:00:54 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Dec 2002 12:00:54 -0600 (CST)
Subject: [Twisted-Python] woven: one <input> for each ListItem
In-Reply-To: <15886.32871.387962.495105@gargle.gargle.HOWL>
References: <15886.32871.387962.495105@gargle.gargle.HOWL>
Message-ID: <20021229.120054.59674026.glyph@twistedmatrix.com>


On Sun, 29 Dec 2002 04:56:07 +0000, "John Kozak" <jk at xylema.org> wrote:
> Using woven, how do I create an <input/> for each Item in a List?
> 
> e.g. suppose I wanted to do something like
>   <table model="aList" view="List">
>     <tr>
>        <td><input ???/></td>
>        ... want these replicated

Here you probably want something like

    <td listItemOf="aList"> <input view="setMyName" /> </td>

(setMyName is an imaginary view, but I am pretty sure you'll want the input
widget to have a different name based on what the listItem is...)

That will repeat the <td> tag multiple times.  If you wanted to literally
repeat the input tag, then <input listItemOf="aList" view="setMyName" /> would
work.

By the way: you don't need the 'view="List"' attribute on your <table> tag if
the model aList is actually an instance of 'list' -- woven will use appropriate
views for various basic types.

>     </tr>
>   </table>
> how would I go about this?  I've tried a few guesses based on the
> examples, but aren't getting anywhere.
> 
> thanks
> 
> John Kozak

Hope that helps.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021229/d5af2f2b/attachment.sig>

From glyph at twistedmatrix.com  Sun Dec 29 11:01:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Dec 2002 12:01:37 -0600 (CST)
Subject: [Twisted-Python] FYI: runtests on win32
In-Reply-To: <20021228203108.21448.qmail@web10008.mail.yahoo.com>
References: <20021228203108.21448.qmail@web10008.mail.yahoo.com>
Message-ID: <20021229.120137.122568779.glyph@twistedmatrix.com>

On Sat, 28 Dec 2002 12:31:08 -0800 (PST), Cory Dodt <corydodt at yahoo.com> wrote:
> I've put up some logs of admin/runtests so that people can see how we're
> doing on Windows, merely to inform.  You can't fix bugs if you don't know
> about them. :-)

Thanks, Cory.  Could you re-run these occasionally and put up new results so we
can see how we're doing over time?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021229/ebab9a14/attachment.sig>

From tv at twistedmatrix.com  Sun Dec 29 15:47:04 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 30 Dec 2002 00:47:04 +0200
Subject: [Twisted-Python] DNS SRV support for Connectors
Message-ID: <20021229224704.GA21453@ki.yok.utu.fi>

	Hi. I wanted to have SRV record (RFC 2782) support connecting
	to services. So here we go.

	The following patch adds a new Connector class that takes
	service (smtp, http, ldap, ..) and domain (example.com), looks
	for a DNS SRV record and falls back sanely if not found.

	itamar pointed out that this might be more suitable in
	twisted.names.client -- feel free to point out what is the
	"right" place.

	Please give feedback.

	The patch also fixes the output of SRV-using example; it used
	to not output the interesting bits.

	The patch is attached, and the latest version is at
	http://www.twistedmatrix.com/users/tv/connectTCPService.patch

-- 
:(){ :|:&};:
-------------- next part --------------
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.53
diff -u -u -r1.53 default.py
--- twisted/internet/default.py	17 Dec 2002 02:31:59 -0000	1.53
+++ twisted/internet/default.py	29 Dec 2002 22:31:24 -0000
@@ -29,12 +29,15 @@
 import os
 import socket
 import sys
+import types
+import random
 
 from twisted.internet.interfaces import IReactorCore, IReactorTime, IReactorUNIX
 from twisted.internet.interfaces import IReactorTCP, IReactorUDP, IReactorSSL
 from twisted.internet.interfaces import IReactorProcess, IReactorFDSet, IReactorMulticast
 from twisted.internet import main, error, protocol, interfaces
 from twisted.internet import tcp, udp, task, defer
+from twisted.names import client
 
 
 from twisted.python import log, threadable, failure
@@ -142,6 +145,10 @@
 
     def __init__(self, reactor, host, port, factory, timeout, bindAddress):
         self.host = host
+        if isinstance(port, types.IntType):
+            port = port
+        else:
+            port = socket.getservbyname(port, 'tcp')
         self.port = port
         self.bindAddress = bindAddress
         BaseConnector.__init__(self, reactor, factory, timeout)
@@ -152,6 +159,107 @@
     def getDestination(self):
         return ('INET', self.host, self.port)
 
+class TCPServiceConnector(BaseConnector):
+    """See RFC2782."""
+    stopAfterDNS=0
+
+    def __init__(self, reactor, service, domain, factory, timeout, bindAddress):
+        self.service = service
+        self.domain = domain
+        self.bindAddress = bindAddress
+        BaseConnector.__init__(self, reactor, factory, timeout)
+
+        self.connector = None
+        self.servers = None
+        self.orderedServers = None # list of servers already used in this round
+
+    def connect(self):
+        if not self.servers:
+            d = client.theResolver.lookupService('_%s._tcp.%s' % (self.service, self.domain))
+            d.addCallback(self._cbGotServers)
+            d.addCallback(lambda x, self=self: self._reallyConnect())
+            d.addErrback(self.connectionFailed)
+        elif self.connector is None:
+            self._reallyConnect()
+        else:
+            self.connector.connect()
+
+    def _cbGotServers(self, answers):
+        if len(answers)==1 and answers[0].payload.target=='.':
+            # decidedly not available
+            raise error.DNSLookupError("Service %s not available for domain %s."
+                                       % (repr(self.service), repr(self.domain)))
+
+        self.servers = []
+        self.orderedServers = []
+        for a in answers:
+            self.orderedServers.append((a.payload.priority, a.payload.weight,
+                                        str(a.payload.target), a.payload.port))
+
+    def _serverCmp(self, a, b):
+        if a[0]!=b[0]:
+            return cmp(a[0], b[0])
+        else:
+            return cmp(a[1], b[1])
+
+    def pickServer(self):
+        assert self.servers is not None
+        assert self.orderedServers is not None
+
+        if not self.servers and not self.orderedServers:
+            # no SRV record, fall back..
+            return self.domain, self.service
+
+        if not self.servers and self.orderedServers:
+            # start new round
+            self.servers = self.orderedServers
+            self.orderedServers = []
+
+        assert self.servers
+
+        self.servers.sort(self._serverCmp)
+        minPriority=self.servers[0][0]
+
+        weightIndex = zip(xrange(len(self.servers)), [x[1] for x in self.servers if x[0]==minPriority])
+        weightSum = reduce(lambda x, y: (None, x[1]+y[1]), weightIndex, (None, 0))[1]
+        rand = random.randint(0, weightSum)
+
+        for index, weight in weightIndex:
+            weightSum -= weight
+            if weightSum <= 0:
+                chosen = self.servers[index]
+                del self.servers[index]
+                self.orderedServers.append(chosen)
+
+                p, w, host, port = chosen
+                print "HOST", host, port
+                return host, port
+
+        raise 'We really should never get here!'
+
+    def _reallyConnect(self):
+        if self.stopAfterDNS:
+            self.stopAfterDNS=0
+            return
+
+        self.host, self.port = self.pickServer()
+
+        # TODO connectSSL?
+        self.connector=self.reactor.connectTCP(self.host, self.port, self.factory)
+
+    def stopConnecting(self):
+        if self.connector:
+            self.connector.stopConnecting()
+        else:
+            self.stopAfterDNS=1
+
+    def disconnect(self):
+        if self.connector is not None:
+            self.connector.disconnect()
+
+    def getDestination(self):
+        assert self.connector
+        return self.connector.getDestination()
 
 class UNIXConnector(BaseConnector):
 
@@ -347,6 +455,13 @@
         """See twisted.internet.interfaces.IReactorTCP.connectTCP
         """
         c = TCPConnector(self, host, port, factory, timeout, bindAddress)
+        c.connect()
+        return c
+
+    def connectTCPService(self, service, domain, factory, timeout=30, bindAddress=None):
+        """See twisted.internet.interfaces.IReactorTCP.connectTCPService (TODO)
+        """
+        c = TCPServiceConnector(self, service, domain, factory, timeout, bindAddress)
         c.connect()
         return c
 
Index: doc/examples/dns-service.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/dns-service.py,v
retrieving revision 1.1
diff -u -u -r1.1 dns-service.py
--- doc/examples/dns-service.py	23 Dec 2002 22:22:53 -0000	1.1
+++ doc/examples/dns-service.py	29 Dec 2002 22:31:24 -0000
@@ -10,7 +10,7 @@
     if not len(answers):
         print 'No answers'
     else:
-        print '\n'.join(map(str, answers))
+        print '\n'.join([str(x.payload) for x in answers])
     reactor.stop()
 
 def printFailure(arg):

From exarkun at intarweb.us  Sun Dec 29 21:46:41 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 29 Dec 2002 23:46:41 -0500
Subject: [Twisted-Python] twisted.python.compat
Message-ID: <20021230044641.GA6919@meson.dyndns.org>

  Just a heads up, the backwards compatability code (what little of it there
was) in twisted.python.util has just moved to twisted.python.compat.  I left
a dict proxy in place that issues a deprecation warning, but all new code
should use twisted.python.compat.  Any future compatability code should go
in this module.

  Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 12:00am up 13 days, 9:45, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021229/f6453f85/attachment.sig>

From exarkun at intarweb.us  Sun Dec 29 22:50:08 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 30 Dec 2002 00:50:08 -0500
Subject: [Twisted-Python] DNS changes
Message-ID: <20021230055008.GA7235@meson.dyndns.org>

  I've just committed some changes to the DNS client code that are not
backwards compatible.  I don't think many people are using it yet (Tv is
actually the only person I know of), but if you are, consider this your
heads up :)  The change is in all the lookup* methods - they now return a
tuple of 3 lists.  The first element of this tuple is the same list as was
previously returned, all by its lonesome.  There's also a new, high-level
interface available via getHostByName().  It returns just a string.

  Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021230/580a760f/attachment.sig>

From abe at fettig.net  Mon Dec 30 09:27:23 2002
From: abe at fettig.net (Abe Fettig)
Date: 30 Dec 2002 11:27:23 -0500
Subject: [Twisted-Python] POP3 improvements
Message-ID: <1041265642.640.30.camel@mingus>

Over the weekend I was working on adding POP3 support to the messaging
library I'm working on.  I noticed that while downloading large messages
from a POP3 server on my local network my test app would use 100% CPU,
and would stop responding to events until it finished downloading the
message.  

Looking at the twisted.protocols.pop3.POP3Client code I saw that it was
handling downloaded messages by concatenating a string, adding one line
at a time.  This seemed like an inefficient way to do it, so I modified
the code to use a file-like object instead.  The result is much faster,
and gives you the option of writing a downloading message to a file as
it comes in rather than keeping it all in memory.

The modified POP3Client (attached) still has some work to be done, but I
was hoping to get some comments from the list first.  

Currently it works like this:  When you send a command that returns a
multi-line response (LIST or RETR), you pass an optional file-like
object that the response should be written to.  If no file argument is
supplied a StringIO is used.  When the server is finished sending the
response, handle_COMMANDNAME is called, passing back the file object
containing the downloaded response.

At this point I'm still not correcting byte-stuffed lines in downloaded
messages, so I need to do that.  Also, if it would be OK with everyone,
I think it might be nice to make POP3Client a little higher-level, so
that LIST, for example, would return an actual list instead of a file
(or, in the current implementation, a string) that the implementer has
to parse.  And it might be good to offer support for more POP3 commands
like TOP.

If somebody could take a look at my code and tell me what I'd need to do
to make it meet the Twisted standards I'd appreciate it.

(There are also some improvements that could probably be made to the
POP3 server code, but I thought those could wait 'till later).

Abe

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pop3support.py
Type: text/x-python
Size: 7903 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021230/7c92bc9e/attachment-0002.py>

From twisted at itamarst.org  Mon Dec 30 09:44:21 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Dec 2002 11:44:21 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021230114421.00917ed4.twisted@itamarst.org>

On 30 Dec 2002 11:27:23 -0500
Abe Fettig <abe at fettig.net> wrote:

> The modified POP3Client (attached) still has some work to be done, but
> I was hoping to get some comments from the list first.  

Could you please send patches to the list as diffs, so we can see
exactly what you changed?



From twisted at itamarst.org  Mon Dec 30 09:48:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 30 Dec 2002 11:48:25 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021230114825.4553701f.twisted@itamarst.org>

On 30 Dec 2002 11:27:23 -0500
Abe Fettig <abe at fettig.net> wrote:

> Currently it works like this:  When you send a command that returns a
> multi-line response (LIST or RETR), you pass an optional file-like
> object that the response should be written to.  If no file argument is
> supplied a StringIO is used.  When the server is finished sending the
> response, handle_COMMANDNAME is called, passing back the file object
> containing the downloaded response.

Instead of calling handle_COMMANDNAME, why not return a Deferred of the
success?

> At this point I'm still not correcting byte-stuffed lines in
> downloaded messages, so I need to do that.  Also, if it would be OK
> with everyone, I think it might be nice to make POP3Client a little
> higher-level, so that LIST, for example, would return an actual list
> instead of a file(or, in the current implementation, a string) that
> the implementer has to parse.  And it might be good to offer support
> for more POP3 commands like TOP.

Or perhaps the Deferred should return that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From abe at fettig.net  Mon Dec 30 11:09:52 2002
From: abe at fettig.net (Abe Fettig)
Date: 30 Dec 2002 13:09:52 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021230114825.4553701f.twisted@itamarst.org>
References: <1041265642.640.30.camel@mingus>
	 <20021230114825.4553701f.twisted@itamarst.org>
Message-ID: <1041271792.640.43.camel@mingus>

(diff attached to make it easier to see what I changed)

On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:

> 
> > Currently it works like this:  When you send a command that returns a
> > multi-line response (LIST or RETR), you pass an optional file-like
> > object that the response should be written to.  If no file argument is
> > supplied a StringIO is used.  When the server is finished sending the
> > response, handle_COMMANDNAME is called, passing back the file object
> > containing the downloaded response.
> 
> Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> success?

Based on other Twisted protocol handlers I thought that the preferred
way to handle events in protocols was to create methods that get called
in response to events.  That way you create a class that inherits from
POP3Client, and override the methods for events you want to handle. 
Being able use classes and inheritance this way is one of the things I
really like about Twisted.

Also, that's the way it was in the original POP3 module.


> 
> > At this point I'm still not correcting byte-stuffed lines in
> > downloaded messages, so I need to do that.  Also, if it would be OK
> > with everyone, I think it might be nice to make POP3Client a little
> > higher-level, so that LIST, for example, would return an actual list
> > instead of a file(or, in the current implementation, a string) that
> > the implementer has to parse.  And it might be good to offer support
> > for more POP3 commands like TOP.
> 
> Or perhaps the Deferred should return that.
-------------- next part --------------
--- /usr/lib/python2.2/site-packages/twisted/protocols/pop3.py	2002-07-24 15:04:56.000000000 -0400
+++ pop3support.py	2002-12-30 10:56:14.000000000 -0500
@@ -21,6 +21,7 @@
 from twisted.protocols import basic
 import os, time, string, operator, stat, md5, binascii
 from twisted.internet import protocol
+from cStringIO import StringIO
 
 class POP3Error(Exception):
     pass
@@ -167,11 +168,16 @@
     welcomeRe = re.compile('<(.*)>')
 
     def sendShort(self, command, params):
+        self.line_mode = 1
         self.transport.write('%s %s\r\n' % (command, params))
         self.command = command
         self.mode = SHORT
 
-    def sendLong(self, command, params):
+    def sendLong(self, command, params, dataFile=None):
+        if not dataFile: dataFile = StringIO()
+        self.dataFile = dataFile
+        self.dataFileTail = ""
+        self.line_mode = 1
         self.transport.write('%s %s\r\n' % (command, params))
         self.command = command
         self.mode = FIRST_LONG
@@ -189,23 +195,41 @@
             if m:
                 self.welcomeCode = m.group(1)
 
+    def rawDataReceived(self, data):
+        tail = self.dataFileTail + data[-5:]
+        if tail.endswith("\r\n.\r\n"):
+            self.dataFile.write(data[:-5])
+            method = getattr(self, 'handle_'+self.command, None)
+            if method is not None:
+                self.dataFile.seek(0)
+                method(self.dataFile)
+        else:
+            self.dataFile.write(data)
+            self.dataFileTail = data[-5:]
+
     def lineReceived(self, line):
-        if self.mode == SHORT or self.mode == FIRST_LONG:
+        if self.mode == SHORT:
             self.mode = NEXT[self.mode]
             method = getattr(self, 'handle_'+self.command, self.handle_default)
             method(line)
-        elif self.mode == LONG:
-            if line == '.':
-                self.mode = NEXT[self.mode]
-                method = getattr(self, 'handle_'+self.command+'_end', None)
-                if method is not None:
-                    method()
-                return
-            if line[:1] == '.':
-                line = line[1:]
-            method = getattr(self, 'handle_'+self.command+'_continue', None)
-            if method is not None:
-                method(line)
+        elif self.mode == FIRST_LONG:
+            self.mode = NEXT[self.mode]
+            self.line_mode = 0
+            method = getattr(self, 'handle_'+self.command+'_start', self.handle_default)
+            method(line)
+           
+        #elif self.mode == LONG:
+        #    if line == '.':
+        #        self.mode = NEXT[self.mode]
+        #        method = getattr(self, 'handle_'+self.command+'_end', None)
+        #        if method is not None:
+        #            method()
+        #        return
+        #    if line[:1] == '.':
+        #        line = line[1:]
+        #    method = getattr(self, 'handle_'+self.command+'_continue', None)
+        #    if method is not None:
+        #        method(line)
 
     def apopAuthenticate(self, user, password):
         digest = md5.new(magic+password).digest()
@@ -214,17 +238,24 @@
 
     def apop(self, user, digest):
         self.sendLong('APOP', user+' '+digest)
-    def retr(self, i):
-        self.sendLong('RETR', i)
+
+    def retr(self, i, destFile=None):
+        self.sendLong('RETR', i, destFile)
+
     def dele(self, i):
         self.sendShort('DELE', i)
+
     def list(self, i=''):
         self.sendLong('LIST', i)
+
     def uidl(self, i=''):
         self.sendLong('UIDL', i)
+
     def user(self, name):
         self.sendShort('USER', name)
+
     def pass_(self, pass_):
         self.sendShort('PASS', pass_)
+
     def quit(self):
         self.sendShort('QUIT', '')

From andrew-twisted at puzzling.org  Mon Dec 30 18:57:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 12:57:06 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041271792.640.43.camel@mingus>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus>
Message-ID: <20021231015705.GA20756@frobozz.local>

On Mon, Dec 30, 2002 at 01:09:52PM -0500, Abe Fettig wrote:
> (diff attached to make it easier to see what I changed)
> 
> On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:
> 
> > 
> > > Currently it works like this:  When you send a command that returns a
> > > multi-line response (LIST or RETR), you pass an optional file-like
> > > object that the response should be written to.  If no file argument is
> > > supplied a StringIO is used.  When the server is finished sending the
> > > response, handle_COMMANDNAME is called, passing back the file object
> > > containing the downloaded response.
> > 
> > Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> > success?
> 
> Based on other Twisted protocol handlers I thought that the preferred
> way to handle events in protocols was to create methods that get called
> in response to events.  That way you create a class that inherits from
> POP3Client, and override the methods for events you want to handle. 
> Being able use classes and inheritance this way is one of the things I
> really like about Twisted.

It depends; if the event is in response to a request, e.g. LIST, it makes
sense to return a Deferred that will receive a list of available messages.
FTPClient works this way, and is very convenient -- an FTPClient user can
queue commands (like LIST, RETR, etc), and as the server responds, the
Deferreds will fire... and there's no confusion if you issue multiple LIST
commands in different directories, whereas a handle_LIST callback doesn't
have the same advantage.

In your case, I'd recommend Deferreds.

If you're writing a server that waits for incoming events, then a
handle_COMMANDNAME scheme would make good sense.

> Also, that's the way it was in the original POP3 module.

Well, if you're breaking backwards-compatibility (are you?), that doesn't
really matter ;)

-Andrew.




From m at moshez.org  Mon Dec 30 21:57:51 2002
From: m at moshez.org (Moshe Zadka)
Date: 31 Dec 2002 04:57:51 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021231045751.12966.qmail@green.zadka.com>

On 30 Dec 2002, Abe Fettig <abe at fettig.net> wrote:

> The modified POP3Client (attached) still has some work to be done, but I
> was hoping to get some comments from the list first.  

Please send fixes as unified diffs (diff -u)



From radix at twistedmatrix.com  Mon Dec 30 22:47:24 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 31 Dec 2002 00:47:24 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231015705.GA20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local>
Message-ID: <20021231054724.GA13930@Radii>

On Tue, Dec 31, 2002 at 12:57:06PM +1100, Andrew Bennetts wrote:
> On Mon, Dec 30, 2002 at 01:09:52PM -0500, Abe Fettig wrote:
> > On Mon, 2002-12-30 at 11:48, Itamar Shtull-Trauring wrote:
> > > > supplied a StringIO is used.  When the server is finished sending the
> > > > response, handle_COMMANDNAME is called, passing back the file object
> > > > containing the downloaded response.
> > > 
> > > Instead of calling handle_COMMANDNAME, why not return a Deferred of the
> > > success?
> > 
> > Based on other Twisted protocol handlers I thought that the preferred
> > way to handle events in protocols was to create methods that get called
> > in response to events.  That way you create a class that inherits from
> > POP3Client, and override the methods for events you want to handle. 
> > Being able use classes and inheritance this way is one of the things I
> > really like about Twisted.
> 
> It depends; if the event is in response to a request, e.g. LIST, it makes
> sense to return a Deferred that will receive a list of available messages.
> FTPClient works this way, and is very convenient -- an FTPClient user can
> queue commands (like LIST, RETR, etc), and as the server responds, the
> Deferreds will fire... and there's no confusion if you issue multiple LIST
> commands in different directories, whereas a handle_LIST callback doesn't
> have the same advantage.
> 
> In your case, I'd recommend Deferreds.
> 
> If you're writing a server that waits for incoming events, then a
> handle_COMMANDNAME scheme would make good sense.

Nah, handle_FOO is useful outside of just servers (see IRCClient,
which I'll mention again in a second). It may be good to separate it
into two layers, the higher-level one returning Deferreds, which are
triggered from handle_FOO methods. This is especially useful if you
may have to wait for many low-level protocol messages before you have
the full response, but the handle_FOO idiom is nice, in general, as a
way of breaking up your protocol parsing into separate methods.

The one other place where I thought this might be useful is in
IRCClient. IRC commands often result in several messages in response
-- something like list, or whois, for example. If we wanted to
abstract this interface, we could have a "list" method that returned a
Deferred that didn't trigger until *all* the list lines have been
received.

So, as an _implementation_ strategy, the "handle_FOO" methods are
great when the mapping of message-level request to message-level
response is 1:many, and for interfaces, Deferreds are great.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Dec 30 23:16:39 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:16:39 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231054724.GA13930@Radii>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii>
Message-ID: <20021231061639.GB20756@frobozz.local>

On Tue, Dec 31, 2002 at 12:47:24AM -0500, Christopher Armstrong wrote:
> 
> The one other place where I thought this might be useful is in
> IRCClient. IRC commands often result in several messages in response
> -- something like list, or whois, for example. If we wanted to
> abstract this interface, we could have a "list" method that returned a
> Deferred that didn't trigger until *all* the list lines have been
> received.

Actually, I just realised, I fibbed about FTPClient... it does something
a little unusual, and I'm interested in opinions on this.

Say you call FTPClient.list().  You don't get a Deferred, you actually have
to pass in a Protocol *instance*, and as the data for FTPClient.list is
received, it gets passed straight to that Protocol, via dataReceived.  In
fact, the FTPClient internally makes a Factory for that connection, which
(essentially) uses that Protocol, but that's an implementation detail.  This
is a bit weird, though, because using an FTPClient involves creating
Protocols without associated Factories, and nowhere else in Twisted does
that.

[The reason why I got confused about Deferreds in the interface, is that I
use Deferreds internally in FTPClient to manage all this.]

So this is actually another interface, possibly specific to FTP, where you
pass a Protocol instance -- this allows for progressive processing of data,
rather than all-at-once, and this feels "more Twisted" to me :)
  
So, to parse the results of an FTP listing, you pass in a
FTPFileListProtocol... this is useful, but there probably should be a
higher-level interface to this that returns a Deferred, for when you don't
need to do custom parsing and don't care about progressive processing (i.e.
most of the time).

> So, as an _implementation_ strategy, the "handle_FOO" methods are
> great when the mapping of message-level request to message-level
> response is 1:many, and for interfaces, Deferreds are great.

Agreed.  In FTP, there is, basically, only one response per request, so I
don't have need for handle_FOO in the FTPClient.  In POP3, I think the
situation is similar (but simpler than FTP).  For IRC, handle_FOO makes good
sense.

-Andrew.




From radix at twistedmatrix.com  Mon Dec 30 23:24:40 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 31 Dec 2002 01:24:40 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231061639.GB20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local>
Message-ID: <20021231062440.GB13930@Radii>

On Tue, Dec 31, 2002 at 05:16:39PM +1100, Andrew Bennetts wrote:
> Actually, I just realised, I fibbed about FTPClient... it does something
> a little unusual, and I'm interested in opinions on this.
> 
> Say you call FTPClient.list().  You don't get a Deferred, you actually have
> to pass in a Protocol *instance*, and as the data for FTPClient.list is
> received, it gets passed straight to that Protocol, via dataReceived.  In
> fact, the FTPClient internally makes a Factory for that connection, which
> (essentially) uses that Protocol, but that's an implementation detail.  This
> is a bit weird, though, because using an FTPClient involves creating
> Protocols without associated Factories, and nowhere else in Twisted does
> that.
> 
> [The reason why I got confused about Deferreds in the interface, is that I
> use Deferreds internally in FTPClient to manage all this.]
> 
> So this is actually another interface, possibly specific to FTP, where you
> pass a Protocol instance -- this allows for progressive processing of data,
> rather than all-at-once, and this feels "more Twisted" to me :)
>   
> So, to parse the results of an FTP listing, you pass in a
> FTPFileListProtocol... this is useful, but there probably should be a
> higher-level interface to this that returns a Deferred, for when you don't
> need to do custom parsing and don't care about progressive processing (i.e.
> most of the time).

Euughhh.. that sounds really horrible at first glance. Are there any
cases you can think of that actually make use of passing in different
Protocol classes? Also, how much less flexible would it be to simply
set the protocols as attributes on the FTPClient if you want to
override?  (similar to Factory.protocol). The FTPClient would then just use
'self.whateverProtocol'. This agrees much more with what a lot of
Twisted already does, I think.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Dec 30 23:36:40 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:36:40 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041265642.640.30.camel@mingus>
References: <1041265642.640.30.camel@mingus>
Message-ID: <20021231063640.GC20756@frobozz.local>

On Mon, Dec 30, 2002 at 11:27:23AM -0500, Abe Fettig wrote:
> Over the weekend I was working on adding POP3 support to the messaging
> library I'm working on.  I noticed that while downloading large messages
> from a POP3 server on my local network my test app would use 100% CPU,
> and would stop responding to events until it finished downloading the
> message.  
> 
> Looking at the twisted.protocols.pop3.POP3Client code I saw that it was
> handling downloaded messages by concatenating a string, adding one line
> at a time.  This seemed like an inefficient way to do it, so I modified
> the code to use a file-like object instead.  The result is much faster,
> and gives you the option of writing a downloading message to a file as
> it comes in rather than keeping it all in memory.

Hang on... POP3Client *doesn't* do any concatenation.  Looking at it, it
merely fires handle_COMMAND, possibly followed by multiple
handle_COMMAND_continue and a handle_COMMAND_end, and at no time is more
than one line passed around.

Perhaps you mean basic.LineReceiver does concatenation?  How long are the
lines you are receiving?

If basic.LineReceiver is the culprit, I suspect it would make more sense to
fix it there than in POP3Client.

-Andrew.




From andrew-twisted at puzzling.org  Mon Dec 30 23:40:43 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 31 Dec 2002 17:40:43 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231062440.GB13930@Radii>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii>
Message-ID: <20021231064043.GD20756@frobozz.local>

On Tue, Dec 31, 2002 at 01:24:40AM -0500, Christopher Armstrong wrote:
> 
> Euughhh.. that sounds really horrible at first glance. Are there any
> cases you can think of that actually make use of passing in different
> Protocol classes? Also, how much less flexible would it be to simply
> set the protocols as attributes on the FTPClient if you want to
> override?  (similar to Factory.protocol). The FTPClient would then just use
> 'self.whateverProtocol'. This agrees much more with what a lot of
> Twisted already does, I think.

I do need to use different protocols, or at least I did at a previous job...
I had a program that downloaded TIFF files and text files.  TIFF files
needed to be written to disk and processed, text files were written to disk
for posterity, but were processed as they came in.  

Also, an FTPClient can have multiple commands queued (It seems reasonable to
be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
instance attribute isn't a sane option.

Any other ideas, though?  I would like to make it cleaner.

-Andrew.




From bob at redivi.com  Mon Dec 30 23:42:50 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 31 Dec 2002 01:42:50 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231064043.GD20756@frobozz.local>
Message-ID: <1502E04A-1C8B-11D7-8041-000A95686CD8@redivi.com>

On Tuesday, Dec 31, 2002, at 01:40 America/New_York, Andrew Bennetts 
wrote:
>
> I do need to use different protocols, or at least I did at a previous 
> job...
> I had a program that downloaded TIFF files and text files.  TIFF files
> needed to be written to disk and processed, text files were written to 
> disk
> for posterity, but were processed as they came in.
>
> Also, an FTPClient can have multiple commands queued (It seems 
> reasonable to
> be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
> instance attribute isn't a sane option.
>
> Any other ideas, though?  I would like to make it cleaner.

Crazy idea, but maybe some extension to or subclass of Deferred is in 
order, where you would receive chunks until it's done?




From screwtape at froup.com  Tue Dec 31 00:08:22 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 31 Dec 2002 18:08:22 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231064043.GD20756@frobozz.local>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local>
Message-ID: <20021231070822.GO944@ferd2.thristian.org>

On Tue, Dec 31, 2002 at 05:40:43PM +1100, Andrew Bennetts wrote:
> On Tue, Dec 31, 2002 at 01:24:40AM -0500, Christopher Armstrong wrote:
> > 
> > Euughhh.. that sounds really horrible at first glance. Are there any
> > cases you can think of that actually make use of passing in different
> > Protocol classes? Also, how much less flexible would it be to simply
> > set the protocols as attributes on the FTPClient if you want to
> > override?  (similar to Factory.protocol). The FTPClient would then just use
> > 'self.whateverProtocol'. This agrees much more with what a lot of
> > Twisted already does, I think.
> 
> I do need to use different protocols, or at least I did at a previous job...
> I had a program that downloaded TIFF files and text files.  TIFF files
> needed to be written to disk and processed, text files were written to disk
> for posterity, but were processed as they came in.  

IIRC, the TIFF files in question were very, very large, while the text
files were quite small. TIFF files you'd want to spool to disk as
quickly as possible, but text files you could build them up in a
buffer as they came in.

I imagine the HTTP client would face similar issues - how does it go
downloading large files?

> Also, an FTPClient can have multiple commands queued (It seems reasonable to
> be able to do f.cd('foo/bar'); f.retr('file1'); f.retr('file2')), so an
> instance attribute isn't a sane option.
> 
> Any other ideas, though?  I would like to make it cleaner.

I think it would be nice if Twisted had a DownloadingFile interface or
something - make a new DownloadingFile instance, then pass it to FTP's
RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
whatever. Then you can get the DownloadingFile instance to trigger
deferreds when it's complete, when it's progress is updated, that sort
of thing. It would make it easy to generate stats like download speed,
estimated time, and so forth.

Make a subclass DownloadingTIFFFile that saves the file to disk and
processes it, make a subclass DownloadingTextFile that processes the
file as it comes in, then saves it to disk.

Screwtape,
...yes, another crazy idea I don't particulary want to implement
myself. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The cruel angel's thesis bleeds" 
|



From twisted at moshez.org  Tue Dec 31 05:32:35 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 31 Dec 2002 12:32:35 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231070822.GO944@ferd2.thristian.org>
References: <20021231070822.GO944@ferd2.thristian.org>, <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local>
Message-ID: <20021231123235.16640.qmail@green.zadka.com>

On Tue, 31 Dec 2002, screwtape at froup.com wrote:

> I imagine the HTTP client would face similar issues - how does it go
> downloading large files?

One subclass saves files to filesystem (and calls a callback when done),
one subclass adds them up in a buffer and calls a callback when done.
Other suclasses are possible.

For more details, see twisted.web.client



From tv at twistedmatrix.com  Tue Dec 31 05:53:43 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 14:53:43 +0200
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231070822.GO944@ferd2.thristian.org>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org>
Message-ID: <20021231125343.GA30579@tv.stonesoft.com>

On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> I think it would be nice if Twisted had a DownloadingFile interface or
> something - make a new DownloadingFile instance, then pass it to FTP's
> RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> whatever. Then you can get the DownloadingFile instance to trigger
> deferreds when it's complete, when it's progress is updated, that sort
> of thing. It would make it easy to generate stats like download speed,
> estimated time, and so forth.

	How does that differ from the normal file interface?

	f.write(somestuff)
	f.write(somestuff)
	f.write(somestuff)
	f.close()



From abe at fettig.net  Tue Dec 31 07:18:57 2002
From: abe at fettig.net (Abe Fettig)
Date: 31 Dec 2002 09:18:57 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231054724.GA13930@Radii>
References: <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231054724.GA13930@Radii>
Message-ID: <1041344336.606.5.camel@mingus>

On Tue, 2002-12-31 at 00:47, Christopher Armstrong wrote:

> On Tue, Dec 31, 2002 at 12:57:06PM +1100, Andrew Bennetts wrote:

> > It depends; if the event is in response to a request, e.g. LIST, it makes
> > sense to return a Deferred that will receive a list of available messages.
> > FTPClient works this way, and is very convenient -- an FTPClient user can
> > queue commands (like LIST, RETR, etc), and as the server responds, the
> > Deferreds will fire... and there's no confusion if you issue multiple LIST
> > commands in different directories, whereas a handle_LIST callback doesn't
> > have the same advantage.
> > 
> > In your case, I'd recommend Deferreds.
> > 

> So, as an _implementation_ strategy, the "handle_FOO" methods are
> great when the mapping of message-level request to message-level
> response is 1:many, and for interfaces, Deferreds are great.

Makes sense to me.  In this case I'll use Deferreds.

Abe




From abe at fettig.net  Tue Dec 31 07:28:01 2002
From: abe at fettig.net (Abe Fettig)
Date: 31 Dec 2002 09:28:01 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231125343.GA30579@tv.stonesoft.com>
References: <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231061639.GB20756@frobozz.local>
	<20021231064043.GD20756@frobozz.local>
	<20021231070822.GO944@ferd2.thristian.org>
	<20021231125343.GA30579@tv.stonesoft.com>
Message-ID: <1041344881.607.15.camel@mingus>

On Tue, 2002-12-31 at 07:53, Tommi Virtanen wrote:
> On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> > I think it would be nice if Twisted had a DownloadingFile interface or
> > something - make a new DownloadingFile instance, then pass it to FTP's
> > RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> > whatever. Then you can get the DownloadingFile instance to trigger
> > deferreds when it's complete, when it's progress is updated, that sort
> > of thing. It would make it easy to generate stats like download speed,
> > estimated time, and so forth.
> 
> 	How does that differ from the normal file interface?
> 
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.close()
> 

This would be my question too.  Is there really a need to use a new
interface, or can I just stick with file-like objects?

Abe




From warner at lothar.com  Tue Dec 31 12:35:12 2002
From: warner at lothar.com (Brian Warner)
Date: Tue, 31 Dec 2002 11:35:12 -0800 (PST)
Subject: [Twisted-Python] intermittent test failures: fixed
Message-ID: <20021231.113512.48827462.warner@lothar.com>

Hi all..

I spent some time yesterday looking into the intermittent test failures in
test_tcp and test_threadpool. These failures only occurred when the full
test suite was run (./admin/runtests -v -t), not when test_tcp was run by
itself (./admin/runtests -v -t twisted.test.test_tcp). I finally figured out
what was happening and wanted to share my findings to help others track down
future problems.

 Early in the test sequence, test_woven did some kind of session/login
 thing. One particular test case was verifying an Unauthorized response,
 which involved creating a Deferred that was then .errback()'ed. However,
 there was no errback handler added to the Deferred.

 Inside that test, web.guard started a 60 second session timeout, with a
 callLater() function that referenced that Deferred (or an object holding
 it).

 test_woven finishes. The timer is still running. The Deferred (with pending
 error) is still alive, since the callLater timer prevents it from being
 garbage-collected.

 Other test cases run.

 [60 seconds pass]

 Some other innocent test case is running, depending upon the speed of the
 machine. On my CPU, it was usually test_tcp.

 During some call to reactor.iterate, the web.guard session timer expires,
 the callback does whatever callbacky things it likes, and an object gets
 freed. That leads to the Deferred being freed. The Deferred has a pending
 error but no .errback handler. Deferred.__del__ does log.msg() with the
 "Unhandled error in Deferred" message, and log.err() with the
 "Unauthorized" Failure object that wanted an .errback but had none.
 log.err() puts the message in the error queue. log.msg() goes into the
 test.log file, but not into the error queue.

 test_tcp finishes without problem, but unittest.py looks in the error queue
 and sees the Failure. It adds the traceback of the Failure (which is the
 call trace leading up to the creation of the Unauthorized exception, which
 is in web.guard, and doesn't mention test_woven at all) to the error
 results of the test.

 test_tcp is flunked, and as explanation unittest.py emits the error results
 (the Unauthorized exception and the web.guard stack trace)

The basic issue is timers that "leak" over from one unit test to another.
Unit tests are supposed to be isolated from each other, but if one test
changes the state of the reactor (by adding timers or establishing listenTCP
ports) without cleaning it up when it finishes, that state can affect other
tests.

This is not always obvious, as several modules create timers internally.
This is very convenient, and works fine in normal applications. It is only
in the unit tests where it causes a problem.

I've added IReactorTime.getDelayedCalls() as a reactor-portable way to
retrieve the list of pending callLater() timers, and changed unittest.py to
cancel all pending timers between test cases. This succeeded in moving the
failure back to the test that caused it. I've also added a warning message
(which goes into test.log) that indicates when a test leaves timers running
after it completes. There are a handful that do; most are benign but should
probably be cleaned up. This warning message may turn into a test failure
someday.

Some tools I used to track this down, in case they prove useful to others:

 added code to Deferred and DelayedCall to record the stack track when they
 are created, then print them in __repr__ or added to the "unhandled error
 in deferred" Failure. The traceback of creation is often more useful than
 the traceback of .callback, .errback, or timer execution.

 added .extra attribute to Failures, insert its contents in the traceback.
 I used this to display the Deferred-creation traceback.


There are still a few issues: I need to implement getDelayedCalls for the
cReactor, and my unit test for getDelayedCalls is stymied by a recurring
timer created when the 'popsicle' module is imported, but in general it
seems to make the unit test suite behave sensibly (no more intermittent
failures).


cheers,
 -Brian



From Bram at moolenaar.net  Tue Dec 31 09:47:18 2002
From: Bram at moolenaar.net (Bram Moolenaar)
Date: Tue, 31 Dec 2002 17:47:18 +0100
Subject: [Twisted-Python] Python and Win32 command execution
Message-ID: <200212311647.gBVGlI304515@moolenaar.net>

hello,

I noticed your message with an example of using CreateProcess():

	http://twistedmatrix.com/pipermail/twisted-python/2002-March/000882.html

I actually only need a version of the os.system() command that does
return the exit value.  The problem is that under Windows 95 and 98 the
return value if always zero, thus I don't know if the command actually
worked.  For my work on A-A-P (http://www.a-a-p.org) I do need to get
the exit value.

The key to solving the problem apparently is to avoid using command.com.

It seems your example can be changed to redirect the stdout and stderr
of the command, invoke CreateProcess() and obtain the exit value.  But
it's not that simple.

Do you perhaps know a better solution?

- Bram

-- 
hundred-and-one symptoms of being an internet addict:
244. You use more than 20 passwords.

 ///  Bram Moolenaar -- Bram at moolenaar.net -- http://www.moolenaar.net  \\\
///          Creator of Vim - Vi IMproved -- http://www.vim.org          \\\
\\\           Project leader for A-A-P -- http://www.a-a-p.org           ///
 \\\ Lord Of The Rings helps Uganda - http://iccf-holland.org/lotr.html ///



From twisted at itamarst.org  Tue Dec 31 13:18:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 15:18:34 -0500
Subject: [Twisted-Python] Python and Win32 command execution
In-Reply-To: <200212311647.gBVGlI304515@moolenaar.net>
References: <200212311647.gBVGlI304515@moolenaar.net>
Message-ID: <20021231151834.64a17b17.twisted@itamarst.org>

On Tue, 31 Dec 2002 17:47:18 +0100
Bram Moolenaar <Bram at moolenaar.net> wrote:

> It seems your example can be changed to redirect the stdout and stderr
> of the command, invoke CreateProcess() and obtain the exit value.  But
> it's not that simple.
> 
> Do you perhaps know a better solution?

Twisted's latest win32 process running code in
twisted.internet.win32eventreactor, but it might be overkill for what
you need. It's also kind of tied to the event loop.

I'm not sure if I ever intergrated for getting exit value, but there is
an API for it -
http://aspn.activestate.com//ASPN/Python/Reference/Products/ActivePython/PythonWin32Extensions/win32process__GetExitCodeProcess_meth.html

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From tv at twistedmatrix.com  Tue Dec 31 13:18:07 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:18:07 +0200
Subject: [Twisted-Python] t.p.usage suggestion: '--option='
In-Reply-To: <20021229171300.GA18076@ki.yok.utu.fi>
References: <20021229171300.GA18076@ki.yok.utu.fi>
Message-ID: <20021231201807.GA4327@ki.yok.utu.fi>

On Sun, Dec 29, 2002 at 07:13:00PM +0200, Tommi Virtanen wrote:

	Last chance to veto/protest, I'll commit this tomorrow.

> 	As it is now, twisted.python.usage will not
> 	allow parameters to have empty strings as
> 	values. That is, these are invalid currently:
> 
> 		--foo=
> 		--foo=''  (the same thing, more explicitly)
> 		--foo ''
> 
> 	I think t.p.usage should not be dictating
> 	such policy for its users.
> 
> 	It seems this only concerns optParameters users, "def
> 	opt_foo(self, x)" seems to be immune to this problem if
> 	I'm reading the code correctly.
> 
> 	All the above cases are easily detectable, Here's a suggested
> 	patch; tell me if you want me to commit.
> 
> Index: twisted/python/usage.py
> ===================================================================
> RCS file: /cvs/Twisted/twisted/python/usage.py,v
> retrieving revision 1.36
> diff -u -r1.36 usage.py
> --- twisted/python/usage.py	10 Nov 2002 10:45:36 -0000	1.36
> +++ twisted/python/usage.py	29 Dec 2002 17:06:03 -0000
> @@ -242,7 +242,7 @@
>          self.opts[flagName] = 1
>  
>      def _generic_parameter(self, parameterName, value):
> -        if value in ('', None):
> +        if value is None:
>              raise UsageError, ("Parameter '%s' requires an argument."
>                                 % (parameterName,))

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Tue Dec 31 13:32:45 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:32:45 +0200
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021229224704.GA21453@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
Message-ID: <20021231203245.GC4327@ki.yok.utu.fi>

On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:
> 	Hi. I wanted to have SRV record (RFC 2782) support connecting
> 	to services. So here we go.
> 
> 	The following patch adds a new Connector class that takes
> 	service (smtp, http, ldap, ..) and domain (example.com), looks
> 	for a DNS SRV record and falls back sanely if not found.
> 
> 	itamar pointed out that this might be more suitable in
> 	twisted.names.client -- feel free to point out what is the
> 	"right" place.
> 
> 	Please give feedback.
> 
> 	The patch also fixes the output of SRV-using example; it used
> 	to not output the interesting bits.
> 
> 	The patch is attached, and the latest version is at
> 	http://www.twistedmatrix.com/users/tv/connectTCPService.patch

	Please comment. I'm not familiar enough on what *YOU* want to
	do with reactors to know the right place for this, and whether
	e.g. a function like connectTCPService() should exist at all
	(and if so, how to implement it for other reactors).

	If I get no comments, I will

	1. Commit the change to TCPConnector that makes it accept
	   service names as port.

	2. Find and wear my asbestos underwear.

	3. Commit the TCPServiceConnector class.

	4. Sit and wait for flames.

	5. Commit the connectTCPService function.

	6. Run away.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Tue Dec 31 13:19:51 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 31 Dec 2002 22:19:51 +0200
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <1041344881.607.15.camel@mingus>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <20021231015705.GA20756@frobozz.local> <20021231061639.GB20756@frobozz.local> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com> <1041344881.607.15.camel@mingus>
Message-ID: <20021231201951.GB4327@ki.yok.utu.fi>

On Tue, Dec 31, 2002 at 09:28:01AM -0500, Abe Fettig wrote:
> > 	How does that differ from the normal file interface?
> > 
> > 	f.write(somestuff)
> > 	f.write(somestuff)
> > 	f.write(somestuff)
> > 	f.close()
> 
> This would be my question too.  Is there really a need to use a new
> interface, or can I just stick with file-like objects?

	Stick with them until someone proves you can't.

-- 
:(){ :|:&};:



From twisted at itamarst.org  Tue Dec 31 13:48:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 15:48:52 -0500
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021231203245.GC4327@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
	<20021231203245.GC4327@ki.yok.utu.fi>
Message-ID: <20021231154852.08c01804.twisted@itamarst.org>

On Tue, 31 Dec 2002 22:32:45 +0200
Tommi Virtanen <tv at twistedmatrix.com> wrote:

> On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:

> 	Please comment. I'm not familiar enough on what *YOU* want to
> 	do with reactors to know the right place for this, and whether
> 	e.g. a function like connectTCPService() should exist at all
> 	(and if so, how to implement it for other reactors).

It should not be in twisted.internet.default, or in any reactor for that
matter. Where you should put is another question (twisted.names?).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From pp64 at cornell.edu  Tue Dec 31 15:02:58 2002
From: pp64 at cornell.edu (pp64 at cornell.edu)
Date: Tue, 31 Dec 2002 17:02:58 -0500 (EST)
Subject: [Twisted-Python] twisted.protocols.dict update
Message-ID: <200212312202.RAA20838@travelers.mail.cornell.edu>

Hi.
Could somebody slurp the partially rewritten dict.py 
and test_dict.py? The URLs are:
http://dunce.mine.nu:8080/twidict/Twisted/twisted/protoc
ols/dict.py
and
http://dunce.mine.nu:8080/twidict/Twisted/twisted/test/t
est_dict.py

Thank you.




From pp64 at cornell.edu  Tue Dec 31 15:11:31 2002
From: pp64 at cornell.edu (Paul Pergamenshchik)
Date: Tue, 31 Dec 2002 17:11:31 -0500
Subject: [Twisted-Python] twisted.protocols.dict update
Message-ID: <20021231171131.725a5db0.pp64@cornell.edu>

Please don't kick me in head. For some reason, Cornell's webmail thingie decided to send the previous e-mail with "twisted-python at twistedmatrix.com" in the From: field or something. Or maybe the mailing list is broken. The previous message was from me :)



From screwtape at froup.com  Tue Dec 31 16:21:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 1 Jan 2003 10:21:07 +1100
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231125343.GA30579@tv.stonesoft.com>
References: <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <1041271792.640.43.camel@mingus> <20021231015705.GA20756@frobozz.local> <20021231054724.GA13930@Radii> <20021231061639.GB20756@frobozz.local> <20021231062440.GB13930@Radii> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com>
Message-ID: <20021231232107.GP944@ferd2.thristian.org>

On Tue, Dec 31, 2002 at 02:53:43PM +0200, Tommi Virtanen wrote:
> On Tue, Dec 31, 2002 at 06:08:22PM +1100, screwtape at froup.com wrote:
> > I think it would be nice if Twisted had a DownloadingFile interface or
> > something - make a new DownloadingFile instance, then pass it to FTP's
> > RETR, HTTP's GET, an IRC DCC transfer, a twisted.conch scp session, or
> > whatever. Then you can get the DownloadingFile instance to trigger
> > deferreds when it's complete, when it's progress is updated, that sort
> > of thing. It would make it easy to generate stats like download speed,
> > estimated time, and so forth.
> 
> 	How does that differ from the normal file interface?
> 
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.write(somestuff)
> 	f.close()

Because I still think of a file as a type, not an object. *sigh*

You're right, file objects would be good. At any rate using Protocols
would seem like overkill.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Universe-flavored. What you mortals call `butterscotch'." -- T&R, 1999-09-17
|



From exarkun at intarweb.us  Tue Dec 31 19:30:57 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 31 Dec 2002 21:30:57 -0500
Subject: [Twisted-Python] BooleanType support for jelly
Message-ID: <20030101023057.GA7348@meson.dyndns.org>

  Support for jellying <type 'bool'>, new in Python 2.3.  The approach and
actual values used were taken straight from TwistedJava.  This will be
Python 2.3 fix #3 if someone tells me it's alright :)

 Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
Index: twisted/spread/jelly.py
===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.38
diff -u -r1.38 jelly.py
--- twisted/spread/jelly.py	1 Jan 2003 00:29:13 -0000	1.38
+++ twisted/spread/jelly.py	1 Jan 2003 02:23:14 -0000
@@ -35,6 +35,8 @@
 
 This is how Jelly converts various objects to s-expressions:
 
+Boolean: True --> ['boolean', 'true']
+
 Integer: 1 --> 1
 
 List: [1, 2] --> ['list', 1, 2]
@@ -89,6 +91,11 @@
 from types import ClassType
 import copy
 
+try:
+    from types import BooleanType
+except ImportError:
+    BooleanType = None
+
 from new import instance
 from new import instancemethod
 
@@ -399,6 +406,8 @@
                         name]
             elif objType is ModuleType:
                 return ['module', obj.__name__]
+            elif objType is BooleanType:
+                return ['boolean', obj and 'true' or 'false']
             elif objType is ClassType:
                 return ['class', qual(obj)]
             else:
@@ -533,6 +542,13 @@
         else:
             return Unpersistable(exp[0])
 
+    def _unjelly_boolean(self, exp):
+        if BooleanType:
+            assert exp[0] in ('true', 'false')
+            return exp[0] == 'true'
+        else:
+            return Unpersistable(exp[0])
+
     def unjellyInto(self, obj, loc, jel):
         o = self.unjelly(jel)
         if isinstance(o, NotKnown):
@@ -726,6 +742,7 @@
         # I don't believe any of these types can ever pose a security hazard,
         # except perhaps "reference"...
         self.allowedTypes = {"None": 1,
+                             "boolean": 1,
                              "string": 1,
                              "str": 1,
                              "int": 1,
Index: twisted/test/test_jelly.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_jelly.py,v
retrieving revision 1.11
diff -u -r1.11 test_jelly.py
--- twisted/test/test_jelly.py	12 Dec 2002 08:43:53 -0000	1.11
+++ twisted/test/test_jelly.py	1 Jan 2003 02:23:14 -0000
@@ -179,7 +179,7 @@
         a = A()
         jelly.unjelly(jelly.jelly(a))
         jelly.unjelly(jelly.jelly(a.amethod))
-        items = [afunc, [1, 2, 3], 'test', 20.3, (1,2,3), None, A, unittest, {'a':1}, A.amethod]
+        items = [afunc, [1, 2, 3], not 1, not not 1, 'test', 20.3, (1,2,3), None, A, unittest, {'a':1}, A.amethod]
         for i in items:
             self.assertEquals(i, jelly.unjelly(jelly.jelly(i)))
     
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021231/6b4c6b31/attachment.sig>

From twisted at itamarst.org  Tue Dec 31 20:01:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 31 Dec 2002 22:01:18 -0500
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20030101023057.GA7348@meson.dyndns.org>
References: <20030101023057.GA7348@meson.dyndns.org>
Message-ID: <20021231220118.5df93343.twisted@itamarst.org>

On Tue, 31 Dec 2002 21:30:57 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   Support for jellying <type 'bool'>, new in Python 2.3.  The approach
>   and
> actual values used were taken straight from TwistedJava.  This will be
> Python 2.3 fix #3 if someone tells me it's alright :)

i'd rather have a boolean type in twisted.python.compat so we can do
booleans pre-2.3 as well.

***> http://VoteNoWar.org -- vote/donate/volunteer <***



From screwtape at froup.com  Tue Dec 31 20:55:38 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Wed, 1 Jan 2003 14:55:38 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20021228105407.10208.qmail@green.zadka.com>
References: <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20030101035538.GR944@ferd2.thristian.org>

On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> Hi.
> The following things are undocumented -- any volunteers would be welcome:
>  - Twisted chat HOWTO (im, words server, writing bots)

In case I accidentally stumble upon some time in the near future, what
are the requirements for documentation writing? Are plain text files
good enough, or HTML?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Y. Carnica lecked stempser something? Stedder vorlems chir-ped lookin ferrets.
|



From andrew-twisted at puzzling.org  Tue Dec 31 21:32:47 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 1 Jan 2003 15:32:47 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101035538.GR944@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org>
Message-ID: <20030101043247.GA12923@frobozz.local>

On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > Hi.
> > The following things are undocumented -- any volunteers would be welcome:
> >  - Twisted chat HOWTO (im, words server, writing bots)
> 
> In case I accidentally stumble upon some time in the near future, what
> are the requirements for documentation writing? Are plain text files
> good enough, or HTML?

Look at the existing docs in doc/howto for examples.  They are in "Lore"
format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
details (or http://twistedmatrix.com/documents/howto/doc-standard).

-Andrew.




From exarkun at intarweb.us  Tue Dec 31 21:51:55 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 31 Dec 2002 23:51:55 -0500
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20021231220118.5df93343.twisted@itamarst.org>
References: <20030101023057.GA7348@meson.dyndns.org> <20021231220118.5df93343.twisted@itamarst.org>
Message-ID: <20030101045155.GA7559@meson.dyndns.org>

On Tue, Dec 31, 2002 at 10:01:18PM -0500, Itamar Shtull-Trauring wrote:
> On Tue, 31 Dec 2002 21:30:57 -0500
> Jp Calderone <exarkun at intarweb.us> wrote:
> 
> >   Support for jellying <type 'bool'>, new in Python 2.3.  The approach
> >   and
> > actual values used were taken straight from TwistedJava.  This will be
> > Python 2.3 fix #3 if someone tells me it's alright :)
> 
> i'd rather have a boolean type in twisted.python.compat so we can do
> booleans pre-2.3 as well.
> 

  That's straight-forward enough, the only thing that changes is where
BooleanType is imported from.  I was more worried about whether it created
any security issues, since I'm not terribly familiar with jelly.

 Jp

> ***> http://VoteNoWar.org -- vote/donate/volunteer <***
> 

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 14 days, 9:45, 3 users, load average: 0.15, 0.25, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021231/ef2b071c/attachment.sig>

From andrew-twisted at puzzling.org  Tue Dec 31 22:06:40 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 1 Jan 2003 16:06:40 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101043247.GA12923@frobozz.local>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local>
Message-ID: <20030101050640.GB12923@frobozz.local>

On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > 
> > In case I accidentally stumble upon some time in the near future, what
> > are the requirements for documentation writing? Are plain text files
> > good enough, or HTML?
> 
> Look at the existing docs in doc/howto for examples.  They are in "Lore"
> format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> details (or http://twistedmatrix.com/documents/howto/doc-standard).

And, of course, we will gratefully accept documentation in any reasonable
format!  It's just that we'll be more grateful if it's in Lore :)

-Andrew.




From exarkun at intarweb.us  Tue Dec 31 22:23:06 2002
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 1 Jan 2003 00:23:06 -0500
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021229224704.GA21453@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
Message-ID: <20030101052306.GB7559@meson.dyndns.org>

On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:
> 	Hi. I wanted to have SRV record (RFC 2782) support connecting
> 	to services. So here we go.
> 
> 	The following patch adds a new Connector class that takes
> 	service (smtp, http, ldap, ..) and domain (example.com), looks
> 	for a DNS SRV record and falls back sanely if not found.
> 
> 	itamar pointed out that this might be more suitable in
> 	twisted.names.client -- feel free to point out what is the
> 	"right" place.
> 
> 	Please give feedback.

  Hooray. :)  One thing that concerns me is that these won't be serialized
correctly.  I -thought- you might be able to drop the resulting connector
into theApplication.tcpConnectors by hand, but at a closer look it doesn't
seem that would work.  Does anyone have any ideas on this?  Since
connectTCPService does depend on t.names, I agree with itamar that it isn't
appropriate for inclusion in t.internet, which rules out changing
Application to suit it specifically.  Perhaps a general interface for
user-specified connector functions?  Something like...

    app.connectWith(connectTCPService, 'service', 'domain', ...)

  so that the call info could be serialized and re-invoked on the next run.

  Good?  Bad?

  Jp

-- 
"The problem is, of course, that not only is economics bankrupt but it has
 always been nothing more than politics in disguise ... economics is a form
 of brain damage."  -- Hazel Henderson
--
 12:00am up 16 days, 9:46, 4 users, load average: 0.08, 0.09, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030101/767a4f36/attachment.sig>

From m at moshez.org  Tue Dec 31 23:22:26 2002
From: m at moshez.org (Moshe Zadka)
Date: 1 Jan 2003 06:22:26 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231201951.GB4327@ki.yok.utu.fi>
References: <20021231201951.GB4327@ki.yok.utu.fi>, <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <20021231015705.GA20756@frobozz.local> <20021231061639.GB20756@frobozz.local> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com> <1041344881.607.15.camel@mingus>
Message-ID: <20030101062226.26100.qmail@green.zadka.com>

On Tue, 31 Dec 2002, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> > > 	How does that differ from the normal file interface?
> 
> 	Stick with them until someone proves you can't.

\begin{proof}
What if there's an error? Like, the connection gets lost prematurely
(in the middle of a line, or something), or the connection never starts?
\end{proof}



From twisted at moshez.org  Tue Dec 31 23:25:12 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 1 Jan 2003 06:25:12 -0000
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101035538.GR944@ferd2.thristian.org>
References: <20030101035538.GR944@ferd2.thristian.org>, <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20030101062512.26170.qmail@green.zadka.com>

On Wed, 1 Jan 2003, screwtape at froup.com wrote:

> In case I accidentally stumble upon some time in the near future, what
> are the requirements for documentation writing? Are plain text files
> good enough, or HTML?

See the "Documenting Twisted" HOWTO, in the HOWTO collection. It gives
more information than you want about it.



