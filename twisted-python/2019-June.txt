From chris at cmsconstruct.com  Sat Jun  1 18:07:43 2019
From: chris at cmsconstruct.com (Chris Satterthwaite)
Date: Sat, 1 Jun 2019 19:07:43 -0500
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?
In-Reply-To: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
References: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
Message-ID: <00fe01d518d7$33f3f940$9bdbebc0$@cmsconstruct.com>

Hi Griatch,

 

Our stack-based solution for customers hosting our platform requires the same.  We could compile and distribute, but then we’d have to support dependencies… and I’ve never been a fan of embedded dependencies.  We do that for software installation (embedding python and libs into a binary via PyInstaller), but for production run-time it’s just the modules – hence similar dependencies on developer tools being installed.

 

The Microsoft link has changed over the years.  I’ve pasted what we have in our documentation for those tools below, which looks like it’s validated on Windows 10 Pro, Win server 2012 R2, and Win server 2016.  Also, on the Server side, I believe you also need to be mindful of the .NET versioning… in case there’s another application dependency.

 

=======================

Get the developer tools from Microsoft:

 

1.	Go to the following URL:  https://www.visualstudio.com/vs/community/
2.	Download and run the vs_community file 
3.	Select "Desktop development with C++" 
4.	Reboot when finished 

 

-Chris

 

 

From: Twisted-Python <twisted-python-bounces at twistedmatrix.com> On Behalf Of Griatch Art
Sent: Tuesday, May 28, 2019 6:04 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?

 

Hi, 

 

I'm investigating installing the Evennia MU* server on Windows. We use Twisted and will be requiring Python3.7 in our next release. I need to make easy-to-use install instructions since a lot of Windows users use our library. 

 

I tested with a Windows7 64bit VM and installed everything from scratch to emulate what a non-dev Windows user would see. I don't have Windows10 so can't compare to the install experience there (but Windows7 64bit is still relevant, having something like 24% of the active Windows user-base according to Steam).

 

Using pip to install Evennia, at the Twisted requirement install step I run into an error telling me that I need "Microsoft Visual C++ build tools" from the URL https://visualstudio.microsoft.com/downloads. The first issue is that there does not appear to be any build-tools package named like that on that page or sub-page (at least not what I could find after digging around). I tried to install a few similarly-named packages, like "Visual Studio Build Tools", but  had no luck getting past the Twisted install point. So that recommendation-string should likely be updated. 

 

The thing is though, while I could probably personally figure out how to set it up eventually, our Windows users are likely the least tech-savvy of our users. Requiring them to set up a compiler environment (despite us telling them that Python code does not need compilation) a bit too much. 

It seems Twisted has distributed binary Windows wheels in the past, would it be possible to get them again? Or should I recommend some other, specific install procedure for our Windows users?

 

Cheers, 

Griatch, Evennia dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190601/97d64101/attachment.html>

From trac at twistedmatrix.com  Sun Jun  2 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Jun 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1559455518.06.7657318951579114776@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190602/3ccb7fb5/attachment.html>

From thomas.westfeld at currenta.de  Wed Jun  5 05:52:56 2019
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Wed, 5 Jun 2019 11:52:56 +0000
Subject: [Twisted-Python] Returning Failure when requestAvatarID to indicate
 a failed login is not working for me
Message-ID: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>

Dear all,

I am experiencing a problem with a custom credential checker for twisted cred based on an external server.

    @defer.inlineCallbacks
    def requestAvatarId(self, credentials):
        user = <query external server with credentials>
        try:
            # Check password with external server, raises InvalidCredentials error
	# if successful return user entry
	user_entry = yield checkCredentialsWithExternalServer(user, credentials.password)
            defer.returnValue(user_entry)
        except InvalidCredentials:
            self.log.debug("Invalid password for username {user}", user=user_entry.dn.getText())
            defer.returnValue(Failure(error.UnauthorizedLogin("username/password is wrong")))

My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

I also tried to raise the error but this does not work for me. I also tried to return a defer.fail(error.UnauthorizedLogin()).

This is what the requestAvatarID method documentation (https://github.com/twisted/twisted/blob/f9e12bd88618682f7cdba342fbaea1212073533f/src/twisted/cred/checkers.py#L26) says about the return value

        @return: a Deferred which will fire a string which identifies an
        avatar, an empty tuple to specify an authenticated anonymous user
        (provided as checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin).
        Alternatively, return the result itself.

I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.

Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

Any help is appreciated,
Thomas

From glyph at twistedmatrix.com  Wed Jun  5 23:35:53 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jun 2019 22:35:53 -0700
Subject: [Twisted-Python] Returning Failure when requestAvatarID to
 indicate a failed login is not working for me
In-Reply-To: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
References: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
Message-ID: <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>



> On Jun 5, 2019, at 4:52 AM, Thomas Westfeld <thomas.westfeld at currenta.de> wrote:
> 
> Dear all,

Hi Thomas!

> I am experiencing a problem with a custom credential checker for twisted cred based on an external server.
> 
> My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

This is surprising, because unless something else is broken, the example you gave definitely behaves like that.  Which suggests to me that something else is broken.

> I also tried to raise the error but this does not work for me.

This should also work.

> I also tried to return a defer.fail(error.UnauthorizedLogin()).

This, however, is a mistake; you can't returnValue(someDeferred()) in inlineCallbacks; you have to wait for deferreds with 'yield'.  So this failing is expected.

> I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.
> 
> Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

No, this should indeed work as you describe.

It would be helpful if you could construct the most minimal possible example of your issue.

For example, here's a super minimal illustration of the fact that the two techniques that should work, do in fact work:

from twisted.internet.defer import inlineCallbacks, returnValue, fail
from twisted.python.failure import Failure
from twisted.cred.error import UnauthorizedLogin

@inlineCallbacks
def returnFailure():
    if 0:
        yield
    returnValue(Failure(UnauthorizedLogin()))

@inlineCallbacks
def returnFailResult():
    if 0:
        yield
    returnValue(fail(UnauthorizedLogin()))

@inlineCallbacks
def raiseException():
    if 0:
        yield
    raise UnauthorizedLogin()

returnFailure().addErrback(lambda eb: print(eb))
# returnFailResult().addErrback(lambda eb: print(eb))
raiseException().addErrback(lambda eb: print(eb))

Could you reduce your checker to something suitably minimal that can be run directly without actually talking to your auth backend?  My guess is that you'll discover a bug as you're doing this, but the possibility definitely remains that there's an issue with Twisted; I just can't guess what it might be without more information.

Thanks for using Twisted,

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190605/b4cfb2e6/attachment.html>

From hawkowl at atleastfornow.net  Thu Jun  6 08:46:36 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Fri, 7 Jun 2019 00:46:36 +1000
Subject: [Twisted-Python] [SECURITY] Twisted 19.2.1 Release Announcement
Message-ID: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the 
release of Twisted 19.2.1!

This is a security release, and contains the following changes:

- All HTTP clients in twisted.web.client now raise a ValueError when 
called with a method and/or URL that contain invalid characters. This 
mitigates CVE-2019-12387. Thanks to Alex Brasetvik for reporting this 
vulnerability.

It is recommended you update to this release as soon as is practical.

Additional mitigation may be required if Twisted is not your only HTTP 
client library:

- This bug is present in all current versions of urllib2 in CPython. 
More information can be found on the Python bug tracker: 
https://bugs.python.org/issue30458
- This bug was present in urllib3 up until version 1.24.3. More 
information can be found on the urllib3 bug tracker: 
https://github.com/urllib3/urllib3/issues/1553

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or 
alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS 
file is also available at 
<https://github.com/twisted/twisted/blob/twisted-19.2.1/NEWS.rst>.

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190607/dd3d7700/attachment.html>

From glyph at twistedmatrix.com  Thu Jun  6 16:01:58 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 6 Jun 2019 15:01:58 -0700
Subject: [Twisted-Python] [SECURITY] Twisted 19.2.1 Release Announcement
In-Reply-To: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>
References: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>
Message-ID: <5AB68AD8-0367-4F50-A633-E2A3E51AF16F@twistedmatrix.com>

> On Jun 6, 2019, at 7:46 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 19.2.1!

Thank you very much to Mark and Amber for their rapid-response work in getting this fix deployed, to Alex Brasetvik for discovering and reporting the issue via security at twistedmatrix.com, and Alex Gaynor for serving as our security contact and coordinator.  Go Team!

A reminder to anyone who has security issues to report, or who may want to work on security issues for Twisted in the future: on the front page here <https://twistedmatrix.com/trac/#Reportasecurityissue> we have a link to our reporting and remediation processes: <https://twistedmatrix.com/trac/wiki/Security>.

Thanks again all!

-glyph


From trac at twistedmatrix.com  Sun Jun  9 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1560060320.02.3139044063802631304@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190609/63c91343/attachment.html>

From griatch at gmail.com  Sun Jun  9 01:10:47 2019
From: griatch at gmail.com (Griatch Art)
Date: Sun, 9 Jun 2019 09:10:47 +0200
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?
In-Reply-To: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
References: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
Message-ID: <CAJmuMNd6mu3AthXf7LzsqoYsLwjZw1Jw3cGXDbexYXUp56DrGA@mail.gmail.com>

Thanks for the replies. Distributing a binary specifically for Windows is
something I'd like to avoid. I'll look into the downloads suggested by
Chris though (thanks!).
But if it would be possible to have binary wheels, like Glyph mentions,
that would indeed help our Window users a ton, and allow us to homogenize
the install instructions across platforms as well.

Den tis 28 maj 2019 13:04Griatch Art <griatch at gmail.com> skrev:

> Hi,
>
> I'm investigating installing the Evennia MU* server on Windows. We use
> Twisted and will be requiring Python3.7 in our next release. I need to make
> easy-to-use install instructions since a lot of Windows users use our
> library.
>
> I tested with a Windows7 64bit VM and installed everything from scratch to
> emulate what a non-dev Windows user would see. I don't have Windows10 so
> can't compare to the install experience there (but Windows7 64bit is still
> relevant, having something like 24% of the active Windows user-base
> according to Steam).
>
> Using pip to install Evennia, at the Twisted requirement install step I
> run into an error telling me that I need "Microsoft Visual C++ build tools"
> from the URL https://visualstudio.microsoft.com/downloads. The first
> issue is that there does not appear to be any build-tools package named
> like that on that page or sub-page (at least not what I could find after
> digging around). I tried to install a few similarly-named packages, like
> "Visual Studio Build Tools", but  had no luck getting past the Twisted
> install point. So that recommendation-string should likely be updated.
>
> The thing is though, while I could probably personally figure out how to
> set it up eventually, our Windows users are likely the least tech-savvy of
> our users. Requiring them to set up a compiler environment (despite us
> telling them that Python code does not need compilation) a bit too much.
> It seems Twisted has distributed binary Windows wheels in the past, would
> it be possible to get them again? Or should I recommend some other,
> specific install procedure for our Windows users?
>
> Cheers,
> Griatch, Evennia dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190609/d44dc7e6/attachment.html>

From touch.sereysethy at gmail.com  Tue Jun 11 13:40:50 2019
From: touch.sereysethy at gmail.com (Sereysethy TOUCH)
Date: Tue, 11 Jun 2019 21:40:50 +0200
Subject: [Twisted-Python] Conch question regarding command execution status
Message-ID: <CAJB=Z87nya-fVGFK347w4e4z2TTbRrogMCcvgKAwiH3JHGR9Vg@mail.gmail.com>

Hi,

I have a question regarding conch ssh connection. I opened a channel to an
ssh server,
my requirement is to know when can I submit my next command after the first
command execution finished. Is there a way to check that the command
execution finished in case that there is no data received? Is there an
exit_status or an ACK?

I read the SSH RFC (https://tools.ietf.org/html/rfc4254#section-6.10) there
is a returning exit status (even it is optionnel), twisted conch implements
this?

Thanks,
Sethy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190611/7c5e3905/attachment.html>

From thomas.westfeld at currenta.de  Wed Jun 12 02:05:06 2019
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Wed, 12 Jun 2019 08:05:06 +0000
Subject: [Twisted-Python] Returning Failure when requestAvatarID to
 indicate a failed login is not working for me
In-Reply-To: <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>
References: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
 <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>
Message-ID: <3df8b98711ad4a209ff072bd31fe74f6@BYEX35.de.bayer.cnb>

Hello Glyph,

it was an error at a different place as you expected. Now it is working very nicely.

Thanks for your help,
Thomas


From: Twisted-Python [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Glyph
Sent: Thursday, June 06, 2019 7:36 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Returning Failure when requestAvatarID to indicate a failed login is not working for me




On Jun 5, 2019, at 4:52 AM, Thomas Westfeld <thomas.westfeld at currenta.de> wrote:

Dear all,

Hi Thomas!


I am experiencing a problem with a custom credential checker for twisted cred based on an external server.
My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

This is surprising, because unless something else is broken, the example you gave definitely behaves like that.  Which suggests to me that something else is broken.


I also tried to raise the error but this does not work for me.

This should also work.


I also tried to return a defer.fail(error.UnauthorizedLogin()).

This, however, is a mistake; you can't returnValue(someDeferred()) in inlineCallbacks; you have to wait for deferreds with 'yield'.  So this failing is expected.


I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.

Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

No, this should indeed work as you describe.

It would be helpful if you could construct the most minimal possible example of your issue.

For example, here's a super minimal illustration of the fact that the two techniques that should work, do in fact work:

from twisted.internet.defer import inlineCallbacks, returnValue, fail
from twisted.python.failure import Failure
from twisted.cred.error import UnauthorizedLogin

@inlineCallbacks
def returnFailure():
    if 0:
        yield
    returnValue(Failure(UnauthorizedLogin()))

@inlineCallbacks
def returnFailResult():
    if 0:
        yield
    returnValue(fail(UnauthorizedLogin()))

@inlineCallbacks
def raiseException():
    if 0:
        yield
    raise UnauthorizedLogin()

returnFailure().addErrback(lambda eb: print(eb))
# returnFailResult().addErrback(lambda eb: print(eb))
raiseException().addErrback(lambda eb: print(eb))

Could you reduce your checker to something suitably minimal that can be run directly without actually talking to your auth backend?  My guess is that you'll discover a bug as you're doing this, but the possibility definitely remains that there's an issue with Twisted; I just can't guess what it might be without more information.

Thanks for using Twisted,

-g

From trac at twistedmatrix.com  Sun Jun 16 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1560665120.48.2559741071349903746@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190616/5a89061c/attachment.html>

From exarkun at twistedmatrix.com  Fri Jun 21 07:39:21 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 21 Jun 2019 09:39:21 -0400
Subject: [Twisted-Python] Azure Pipelines
Message-ID: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>

Hello,

I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> /
PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit
over a week ago.  It is suffering from a red mark on the CI report due to
Azure Pipelines complaining there was some "communication" problem "with
the server".  I imagine this is a spurious failure due to transient network
conditions on the CI system.  There doesn't appear to be a retry button to
find out, though.

I can't see any Azure Pipeline configuration in the repository, I don't see
much information on the ticket that (maybe?) introduced Azure Pipeline usage
<https://twistedmatrix.com/trac/ticket/9454>.  I can't sign in to Azure or
whatever the system driving this is called.

What is to become of this PR?

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/d7e990c3/attachment.html>

From glyph at twistedmatrix.com  Fri Jun 21 10:05:12 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Jun 2019 09:05:12 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
Message-ID: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>



> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> / PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit over a week ago.  It is suffering from a red mark on the CI report due to Azure Pipelines complaining there was some "communication" problem "with the server".  I imagine this is a spurious failure due to transient network conditions on the CI system.  There doesn't appear to be a retry button to find out, though.

You need to be signed in to see it, but there is a "retry" button under the vertical-ellipsis button in the top right, next to "all logs".

I clicked it for you (annoyingly I had to do this twice, there was another transient CI-system-related error on a different pipeline, maybe they've been having an outage?) and the build is now green.

> I can't see any Azure Pipeline configuration in the repository, I don't see much information on the ticket that (maybe?) introduced Azure Pipeline usage <https://twistedmatrix.com/trac/ticket/9454>.

Once you're logged in, I think you can also see the build configuration, under "edit pipeline" in the same menu the "retry" item is in.  Not sure if there are some permissions to manage here for either the retry or edit buttons.  If there are, and you can't see either of them, let's get them set up for anyone who wants them; but I think Github org membership should be sufficient, since from what I can tell in their control panel that's how I had permission.

> I can't sign in to Azure or whatever the system driving this is called.

The system is broadly called "Microsoft", I think :-), but you do have to log in to this specific corner of it (Azure DevOps?).

Anyway - if you click on the Azure build status "Details" link on Github, you'll get to this page:

https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958 <https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958>

On that page, there's a "Sign in" link in the top right.  When you click it, you'll see a login.microsoftonline.com <http://login.microsoftonline.com/> page with a "sign in with github" link at the bottom.  Use that and you should be all set.

> What is to become of this PR?

Hopefully it'll get landed now ;).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/095c1620/attachment.html>

From exarkun at twistedmatrix.com  Fri Jun 21 10:09:52 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 21 Jun 2019 12:09:52 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
Message-ID: <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>

On Fri, Jun 21, 2019 at 12:05 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Hello,
>
> I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> /
> PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit
> over a week ago.  It is suffering from a red mark on the CI report due to
> Azure Pipelines complaining there was some "communication" problem "with
> the server".  I imagine this is a spurious failure due to transient network
> conditions on the CI system.  There doesn't appear to be a retry button to
> find out, though.
>
>
> You need to be signed in to see it, but there is a "retry" button under
> the vertical-ellipsis button in the top right, next to "all logs".
>
> I clicked it for you (annoyingly I had to do this twice, there was another
> transient CI-system-related error on a different pipeline, maybe they've
> been having an outage?) and the build is now green.
>

Annoying, indeed. :/


>
> I can't see any Azure Pipeline configuration in the repository, I don't
> see much information on the ticket that (maybe?) introduced Azure
> Pipeline usage <https://twistedmatrix.com/trac/ticket/9454>.
>
>
> Once you're logged in, I think you can also see the build configuration,
> under "edit pipeline" in the same menu the "retry" item is in.  Not sure if
> there are some permissions to manage here for either the retry or edit
> buttons.  If there are, and you can't see either of them, let's get them
> set up for anyone who wants them; but I think Github org membership should
> be sufficient, since from what I can tell in their control panel that's how
> I had permission.
>
> I can't sign in to Azure or whatever the system driving this is called.
>
>
> The system is broadly called "Microsoft", I think :-), but you do have to
> log in to this specific corner of it (Azure DevOps?).
>
> Anyway - if you click on the Azure build status "Details" link on Github,
> you'll get to this page:
>
> https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958
>
> On that page, there's a "Sign in" link in the top right.  When you click
> it, you'll see a login.microsoftonline.com page with a "sign in with
> github" link at the bottom.  Use that and you should be all set.
>

When I follow that link and grant permission on the GitHub side, I get
taken back to a microsoft.com URL that eventually fails with an infinite
redirect error. :/  So I am not able to look at the build page while signed
in.

Presumably there is something about my browser profile that triggers this
but, of course, I have no idea what.

Jean-Paul


>
> What is to become of this PR?
>
>
> Hopefully it'll get landed now ;).
>

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/e467c478/attachment.html>

From glyph at twistedmatrix.com  Fri Jun 21 10:22:06 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Jun 2019 09:22:06 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>
Message-ID: <8A9BCD23-4DAD-4803-8AD2-C61E329DAC2F@twistedmatrix.com>



> On Jun 21, 2019, at 9:09 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> When I follow that link and grant permission on the GitHub side, I get taken back to a microsoft.com <http://microsoft.com/> URL that eventually fails with an infinite redirect error. :/  So I am not able to look at the build page while signed in.
> 
> Presumably there is something about my browser profile that triggers this but, of course, I have no idea what.

Oh, no. I've been in this state once before, and it's definitely annoying to get out of.  Can you log in in incognito mode?

I think the way I eventually fixed it was manually clearing cookies for a whole slew of Microsoft domains and logging in afresh; off the top of my head, these were the ones I nuked:

microsoftonline.com <http://microsoftonline.com/>
microsoft.com <http://microsoft.com/>
live.com <http://live.com/>
skype.com <http://skype.com/>
visualstudio.com <http://visualstudio.com/>

and all subdomains thereof.

I'm Cc:ing the generous fellow who set us up with Azure Pipelines to begin with - Steve Dower (and you directly because I don't think Steve is on this list) because I mentioned to him at PyCon that I'd had trouble with this login mess before, but by the time I was talking with him I was no longer in this state and had no useful information for a repro other than "everything about this sucks".  Maybe you could save those cookies before deleting them, or otherwise help figure this out so others won't have the same issue?

Good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/cca00feb/attachment-0001.html>

From sda at fstab.net  Fri Jun 21 12:51:27 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Fri, 21 Jun 2019 14:51:27 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
Message-ID: <e394ad0d947ad691e1389e60b79c97ae@fstab.net>

On 2019-06-21 12:05, Glyph wrote:

>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>> <exarkun at twistedmatrix.com> wrote:
>> I can't see any Azure Pipeline configuration in the repository, I 
>> don't see much information on the ticket that (maybe?) introduced 
>> Azure Pipeline usage.
> 
> Once you're logged in, I think you can also see the build 
> configuration, under "edit pipeline" in the same menu the "retry" item 
> is in.  Not sure if there are some permissions to manage here for 
> either the retry or edit buttons.  If there are, and you can't see 
> either of them, let's get them set up for anyone who wants them; but I 
> think Github org membership should be sufficient, since from what I can 
> tell in their control panel that's how I had permission.

Do we want Azure Pipelines config on their website while Travis, 
AppVeyor, and Circle are all in our source repository?

Cheers,
-kyle


From hawkowl at atleastfornow.net  Fri Jun 21 16:40:17 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sat, 22 Jun 2019 08:40:17 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
Message-ID: <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>

The matrix stuff we're using is not yet supported as a pipeline 
workflow, so, when it is, we will move it :)

- Amber

On 22/6/19 4:51 am, Kyle Altendorf wrote:
> On 2019-06-21 12:05, Glyph wrote:
>
>>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>>> <exarkun at twistedmatrix.com> wrote:
>>> I can't see any Azure Pipeline configuration in the repository, I 
>>> don't see much information on the ticket that (maybe?) introduced 
>>> Azure Pipeline usage.
>>
>> Once you're logged in, I think you can also see the build 
>> configuration, under "edit pipeline" in the same menu the "retry" 
>> item is in.  Not sure if there are some permissions to manage here 
>> for either the retry or edit buttons.  If there are, and you can't 
>> see either of them, let's get them set up for anyone who wants them; 
>> but I think Github org membership should be sufficient, since from 
>> what I can tell in their control panel that's how I had permission.
>
> Do we want Azure Pipelines config on their website while Travis, 
> AppVeyor, and Circle are all in our source repository?
>
> Cheers,
> -kyle
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From sda at fstab.net  Fri Jun 21 17:59:05 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Fri, 21 Jun 2019 19:59:05 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
Message-ID: <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>



On 2019-06-21 18:40, Amber Brown wrote:
> The matrix stuff we're using is not yet supported as a pipeline
> workflow, so, when it is, we will move it :)

Hmm...  I'm running Python inside a build to generate the matrix for 
that build (with a yaml file for a pipeline).  Now I'm curious what 
matrixing is being used that isn't supported yet.  But perhaps it isn't 
worth bothering to work through.

Cheers,
-kyle

> On 22/6/19 4:51 am, Kyle Altendorf wrote:
>> On 2019-06-21 12:05, Glyph wrote:
>> 
>>>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>>>> <exarkun at twistedmatrix.com> wrote:
>>>> I can't see any Azure Pipeline configuration in the repository, I 
>>>> don't see much information on the ticket that (maybe?) introduced 
>>>> Azure Pipeline usage.
>>> 
>>> Once you're logged in, I think you can also see the build 
>>> configuration, under "edit pipeline" in the same menu the "retry" 
>>> item is in.  Not sure if there are some permissions to manage here 
>>> for either the retry or edit buttons.  If there are, and you can't 
>>> see either of them, let's get them set up for anyone who wants them; 
>>> but I think Github org membership should be sufficient, since from 
>>> what I can tell in their control panel that's how I had permission.
>> 
>> Do we want Azure Pipelines config on their website while Travis, 
>> AppVeyor, and Circle are all in our source repository?
>> 
>> Cheers,
>> -kyle
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From hawkowl at atleastfornow.net  Sat Jun 22 12:05:55 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 23 Jun 2019 04:05:55 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
Message-ID: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>

On 22/6/19 9:59 am, Kyle Altendorf wrote:
>
> Hmm...  I'm running Python inside a build to generate the matrix for 
> that build (with a yaml file for a pipeline).  Now I'm curious what 
> matrixing is being used that isn't supported yet.  But perhaps it 
> isn't worth bothering to work through.
>
> Cheers,
> -kyle

It now says:

#Multi-configuration and multi-agent job options are not exported to 
YAML. Configure these options using documentation guidance: 
https://docs.microsoft.com/vsts/pipelines/process/phases

So maybe it'd work? Anyone want to volunteer to see? :)

- Amber


From glyph at twistedmatrix.com  Sat Jun 22 16:04:52 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 22 Jun 2019 15:04:52 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
Message-ID: <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>



> On Jun 22, 2019, at 11:05 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>> 
>> Hmm...  I'm running Python inside a build to generate the matrix for that build (with a yaml file for a pipeline).  Now I'm curious what matrixing is being used that isn't supported yet.  But perhaps it isn't worth bothering to work through.
>> 
>> Cheers,
>> -kyle
> 
> It now says:
> 
> #Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases
> 
> So maybe it'd work? Anyone want to volunteer to see? :)

I'm a little confused - I thought maybe you meant "now" instead of "not"; but then the only place Google could find this exact phrasing was https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml <https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml>, and it definitely says "not".  Except then the "phases" link you sent clearly shows some YAML under the "Multi-configuration" section.

Did something change?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190622/62cef138/attachment.html>

From hawkowl at atleastfornow.net  Sat Jun 22 16:31:32 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 23 Jun 2019 08:31:32 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
 <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>
Message-ID: <3ddaed01-e49e-74b7-37d8-c3955147925e@atleastfornow.net>


On 23/6/19 8:04 am, Glyph wrote:
>
>
>> On Jun 22, 2019, at 11:05 AM, Amber Brown <hawkowl at atleastfornow.net 
>> <mailto:hawkowl at atleastfornow.net>> wrote:
>>
>> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>>>
>>> Hmm...  I'm running Python inside a build to generate the matrix for 
>>> that build (with a yaml file for a pipeline).  Now I'm curious what 
>>> matrixing is being used that isn't supported yet.  But perhaps it 
>>> isn't worth bothering to work through.
>>>
>>> Cheers,
>>> -kyle
>>
>> It now says:
>>
>> #Multi-configuration and multi-agent job options are not exported to 
>> YAML. Configure these options using documentation guidance: 
>> https://docs.microsoft.com/vsts/pipelines/process/phases
>>
>> So maybe it'd work? Anyone want to volunteer to see? :)
>
> I'm a little confused - I thought maybe you meant "now" instead of 
> "not"; but then the only place Google could find this exact phrasing 
> was 
> https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml, 
> and it definitely says "not".  Except then the "phases" link you sent 
> clearly shows some YAML under the "Multi-configuration" section.
>
> Did something change?
>
> -glyph
>
I think it means it doesn't have the functionality to export the 
options, but you could write it yourself.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/d267d748/attachment.html>

From trac at twistedmatrix.com  Sun Jun 23 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1561269920.14.9014131631087128547@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/a0d2b053/attachment-0001.html>

From sda at fstab.net  Sun Jun 23 09:11:09 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Sun, 23 Jun 2019 11:11:09 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
Message-ID: <6de20054ff4ff80b96f395c90d802b7b@fstab.net>



On 2019-06-22 14:05, Amber Brown wrote:
> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>> 
>> Hmm...  I'm running Python inside a build to generate the matrix for 
>> that build (with a yaml file for a pipeline).  Now I'm curious what 
>> matrixing is being used that isn't supported yet.  But perhaps it 
>> isn't worth bothering to work through.
>> 
>> Cheers,
>> -kyle
> 
> It now says:
> 
> #Multi-configuration and multi-agent job options are not exported to
> YAML. Configure these options using documentation guidance:
> https://docs.microsoft.com/vsts/pipelines/process/phases
> 
> So maybe it'd work? Anyone want to volunteer to see? :)

I don't know what our setup is now so I can't really compare.  Do we 
have a matrix built from a few axes?  Like Windows/macOS and py2.7/3.7 
generating 4 builds for us?  AFAIK that isn't yet supported.

https://github.com/microsoft/azure-pipelines-yaml/issues/20

But, you can certainly write a job and list out the four (or whatever) 
parameter sets you want it to be run against.  For romp I went ahead and 
implemented a little Python cross matrixer which runs as the first job 
and outputs JSON.  It's output is used as the matrix def for another job 
which does whatever it's supposed to.  So there are options anywhere 
from hand-coded YAML to build-parameter-dependent on-the-fly-generated 
JSON to configure a 'matrix', and whatever in between.  I'm guessing at 
present we'd be satisfied with just hand-coded YAML parameter sets.  
Maybe if we moved all platforms etc to Azure we'd like a generated 
matrix (either a manual script when the matrix definition is changed or 
in-build generation though that of course adds a bit of build time).  
Honestly, I would expect to usually want exceptions to any basic matrix 
cross-producting system so just defining it with regular Python code 
from the get-go has some upsides.

I need to tweak exttrs a bit and romp has a bit of a specialized purpose 
but they are the two examples I have.

https://github.com/altendky/exttr/blob/60aa5d6e9f04631b8e86552620f2d9cd2a0a3a04/azure_job_template.yml#L15-L43
https://github.com/altendky/romp/blob/0b05a7830ba1b02e503dd0004ffdce5e0ae3164f/azure-pipelines.yml#L43

After all that...  is this actually what we are talking about when it 
comes to matrixing?

Cheers,
-kyle


From chengi.liu.86 at gmail.com  Sun Jun 23 17:39:48 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Sun, 23 Jun 2019 19:39:48 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in twisted
Message-ID: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>

Hi,
 I tried posting on SO, but havent been able to solve the problem.
https://stackoverflow.com/questions/56696562/running-long-blocking-calculations-in-parallel-in-twisted

I have a very noob question.

I have a function, which takes a second or two to process (CPU bounded) and
then there is a for loop which runs that for loop.. Lets take this example

def func(x):
     return x*x

res = [func(i) for i in range(20)]


Now, think of func being something complicated.. But the above is the idea.

How do I run this function concurrently/ simultaneously using twisted
framework.
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/95b7e660/attachment.html>

From dynamicgl at gmail.com  Sun Jun 23 23:28:11 2019
From: dynamicgl at gmail.com (Gelin Yan)
Date: Mon, 24 Jun 2019 13:28:11 +0800
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
Message-ID: <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>

Hi

   If your purpose is merely not to block the reactor, you can run your
code in a separate thread by using deferToThread. If you want to benefit
from multi cores, you may consider use https://github.com/twisted/ampoule
or other similar tools.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/ab53201d/attachment.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 12:34:03 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 14:34:03 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
Message-ID: <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>

Thanks for pointing that out. Is there a dead simply example on how to
parallelize a function using ampoule.
Again, I have a function.. I have a for loop.. the function takes in an
argument from loop.. but the for loop is extremely parallelizable.

Also, I was going thru this awesome twisted tutorial from pycon 2107 (
https://www.youtube.com/watch?v=ztkBG4qLR_4)
I found couple of use features.
(defer.ensureDeferred
and

defer.gatherResults

)
Can these two be used instead of deferToThread.
When are the above defered used and when to use deferToThread.

Thanks for entertaining my dumb questions.

On Mon, Jun 24, 2019 at 1:28 AM Gelin Yan <dynamicgl at gmail.com> wrote:

> Hi
>
>    If your purpose is merely not to block the reactor, you can run your
> code in a separate thread by using deferToThread. If you want to benefit
> from multi cores, you may consider use https://github.com/twisted/ampoule
> or other similar tools.
>
> Regards
>
> gelin yan
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/055808b0/attachment.html>

From moshez at zadka.club  Mon Jun 24 13:40:06 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 12:40:06 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
Message-ID: <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>

Hi Cheng,

deferToThread *returns* a deferred, and sends the work to a thread pool. The other two functions are useful for manipulating deferreds or other promises, but will not send work to a separate thread, so they cannot be used instead.

The simple example is pretty simple, it's pretty much

@inlineCallbacks
def some_function():
 d1 = deferToThread(cpu_heavy_square, 5)
 d2 = deferToThread(cpu_heavy_square, 6)
 five_squared, six_squared = yield gatherResults([d1, d2])
 returnValue(five_squared + six_squared)

Note that the tutorial below can be downloaded in notebook form from https://github.com/moshez/twisted-tutorial/blob/master/Twisted-Tutorial.ipynb

However, as explained, this will *defer to threads*, but will *not* use multiple cores, since Python is single-core. This is not entirely accurate: if your heavy functions are using numpy, numpy will release the GIL sometimes. Otherwise, you might want to use ampoule, but there are no easy tutorials for it that I'm aware of. You might want to consider something like dask + deferToThread for using multiple cores. See https://github.com/dask/dask-tutorial/blob/master/01_dask.delayed.ipynb for a simple example: you just plan your computation, and run the `compute` method in a thread. In this case, the only thing the thread is doing is avoiding blocking the reactor, while dask internally apportions computations.

(Thank you for the kind of words about the tutorial -- I'm one of the presenters.)

Moshe Z.

On Mon, Jun 24, 2019, at 11:34, Chengi Liu wrote:
> Thanks for pointing that out. Is there a dead simply example on how to parallelize a function using ampoule.
> Again, I have a function.. I have a for loop.. the function takes in an argument from loop.. but the for loop is extremely parallelizable.
> 
> Also, I was going thru this awesome twisted tutorial from pycon 2107 (https://www.youtube.com/watch?v=ztkBG4qLR_4)
> I found couple of use features.
> (defer.*ensureDeferred*
> and
> defer.*gatherResults*
> )
> Can these two be used instead of deferToThread.
> When are the above defered used and when to use deferToThread.
> 
> Thanks for entertaining my dumb questions.
> 
> On Mon, Jun 24, 2019 at 1:28 AM Gelin Yan <dynamicgl at gmail.com> wrote:
>> Hi
>> 
>>  If your purpose is merely not to block the reactor, you can run your code in a separate thread by using deferToThread. If you want to benefit from multi cores, you may consider use https://github.com/twisted/ampoule or other similar tools.
>> 
>> Regards
>> 
>> gelin yan
>> _______________________________________________
>>  Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/4462b994/attachment.html>

From meejah at meejah.ca  Mon Jun 24 13:48:45 2019
From: meejah at meejah.ca (meejah)
Date: Mon, 24 Jun 2019 23:48:45 +0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com> (Moshe
 Zadka's message of "Mon, 24 Jun 2019 12:40:06 -0700")
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
Message-ID: <86r27iu5lu.fsf@atlantis.meejah.ca>


As a clarification to the above, parallelization of Python code across
cores is not unique to Twisted; all Python code has this same
limitation.

To use multiple cores with Python code, you need multiple Python
processes (as has been pointed out). One way to achieve this is to have
the multiple processes talking to each other (using some kind of RPC
protocol).

Another way is to simply spawn some number of subprocesses (and Twisted
has good support for running subprocesses). So, for example, if you
write a CLI tool that can be told to run "part of your problem" then
your parent Twisted process can simply spawn some number of those with
appropriate arguments to split up the problem (e.g. give each process 1
/ num_cores of the problem). This will incur some startup penalty as
each process starts up (especially if you're using PyPy, which you
should be if you care about speed) but is way simpler.

Obviously, an RPC-style communication system avoids the startup penalty
(but can be more complex).

-- 
meejah


From chengi.liu.86 at gmail.com  Mon Jun 24 17:26:33 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 19:26:33 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <86r27iu5lu.fsf@atlantis.meejah.ca>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
Message-ID: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>

Thanks Moshe & Meejah & Gelin for the suggestions and advice. This is super
helpful.

I think, I am able to move forward with this.
Let me just summarize this..
My usecase is.. fetch the data.. and then you assemble the data. Fetching
data is network bound, assembling data is like CPU bound.

Can you guys confirm if what I am doing makes sense?

def compute_heavy_function(x):
    return x*x

@defer.inlinecallbacks
def network_get(x):
     x = yield treq.get('http://localhost:8081')
   content = yield x.content()
   defer.returnValue(val)

@defer.inlinecallbacks
def twisted_do_your_magic():
     nets, cpus = [], []
      for i in range(10):
             t = defer.ensureDeferred(network_get(i))
              nets.append(t)
             d = threads.deferToThread(compute_heavy_function, i)
             cpus.append(d)

     cpu_res = yield defer.gatherResults(cpus)
  network_res = yield defer.gatherResults(nets)
  defer.returnValue({'cpu': cpu_res, 'network': network_res})

if __name__ == '__main__':
    twisted_do_your_magic()
        reactor.callLater(2, reactor.stop)
    reactor.run()


I ran it locally.. it seems to be running fine. But just want to make sure
that I got the concept on what to deferToThread & what to "ensureDeferred".
>From the SO, I got the impression that network based IO benefits from
`deferToThread` but from video tutorial.. I got the impression that
ensureDefer followed by gatherResults seems to be the right way to go?



Moshe.. One last question..
I was trying to follow the tutorial on video lecture..
But, I wasnt able to make it run on python3.


Say, I have an async function

async def foo():
     resp = await treq.get("localhost:1234/foo")
     content = await resp.content()
     return json.loads(content.decode("utf-8")

async def func():
     d1 = defer.ensureDeffered(foo())
     d2 = defer.ensureDeffered(foo())
     res = await defer.gatherResults([d1, d2])
     return res

if __name__ == '__main__'
     x = func()
     reactor.callLater(2, reactor.stop)
  reactor.run()

In this case, I get an error (x = func() in main code block)..
 RuntimeWarning: coroutine 'func' was never awaited
How do i fix this.

Again, thanks for all the help, support and advice in getting me started
with twisted.



On Mon, Jun 24, 2019 at 3:49 PM meejah <meejah at meejah.ca> wrote:

>
> As a clarification to the above, parallelization of Python code across
> cores is not unique to Twisted; all Python code has this same
> limitation.
>
> To use multiple cores with Python code, you need multiple Python
> processes (as has been pointed out). One way to achieve this is to have
> the multiple processes talking to each other (using some kind of RPC
> protocol).
>
> Another way is to simply spawn some number of subprocesses (and Twisted
> has good support for running subprocesses). So, for example, if you
> write a CLI tool that can be told to run "part of your problem" then
> your parent Twisted process can simply spawn some number of those with
> appropriate arguments to split up the problem (e.g. give each process 1
> / num_cores of the problem). This will incur some startup penalty as
> each process starts up (especially if you're using PyPy, which you
> should be if you care about speed) but is way simpler.
>
> Obviously, an RPC-style communication system avoids the startup penalty
> (but can be more complex).
>
> --
> meejah
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/38b7b3db/attachment-0001.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 17:27:21 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 19:27:21 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <CAONdThqmoNC8ar6MevfH4hNiqTRZvN4TbDAQ6Pmfs37=Pw7mKg@mail.gmail.com>

The stack overflow link:
https://stackoverflow.com/questions/56696562/running-long-blocking-calculations-in-parallel-in-twisted

On Mon, Jun 24, 2019 at 7:26 PM Chengi Liu <chengi.liu.86 at gmail.com> wrote:

> Thanks Moshe & Meejah & Gelin for the suggestions and advice. This is
> super helpful.
>
> I think, I am able to move forward with this.
> Let me just summarize this..
> My usecase is.. fetch the data.. and then you assemble the data. Fetching
> data is network bound, assembling data is like CPU bound.
>
> Can you guys confirm if what I am doing makes sense?
>
> def compute_heavy_function(x):
>     return x*x
>
> @defer.inlinecallbacks
> def network_get(x):
>      x = yield treq.get('http://localhost:8081')
>    content = yield x.content()
>    defer.returnValue(val)
>
> @defer.inlinecallbacks
> def twisted_do_your_magic():
>      nets, cpus = [], []
>       for i in range(10):
>              t = defer.ensureDeferred(network_get(i))
>               nets.append(t)
>              d = threads.deferToThread(compute_heavy_function, i)
>
>              cpus.append(d)
>
>      cpu_res = yield defer.gatherResults(cpus)
>   network_res = yield defer.gatherResults(nets)
>   defer.returnValue({'cpu': cpu_res, 'network': network_res})
>
> if __name__ == '__main__':
>     twisted_do_your_magic()
>         reactor.callLater(2, reactor.stop)
>     reactor.run()
>
>
> I ran it locally.. it seems to be running fine. But just want to make sure
> that I got the concept on what to deferToThread & what to "ensureDeferred".
> From the SO, I got the impression that network based IO benefits from
> `deferToThread` but from video tutorial.. I got the impression that
> ensureDefer followed by gatherResults seems to be the right way to go?
>
>
>
> Moshe.. One last question..
> I was trying to follow the tutorial on video lecture..
> But, I wasnt able to make it run on python3.
>
>
> Say, I have an async function
>
> async def foo():
>      resp = await treq.get("localhost:1234/foo")
>      content = await resp.content()
>      return json.loads(content.decode("utf-8")
>
> async def func():
>      d1 = defer.ensureDeffered(foo())
>      d2 = defer.ensureDeffered(foo())
>      res = await defer.gatherResults([d1, d2])
>      return res
>
> if __name__ == '__main__'
>      x = func()
>      reactor.callLater(2, reactor.stop)
>   reactor.run()
>
> In this case, I get an error (x = func() in main code block)..
>  RuntimeWarning: coroutine 'func' was never awaited
> How do i fix this.
>
> Again, thanks for all the help, support and advice in getting me started
> with twisted.
>
>
>
> On Mon, Jun 24, 2019 at 3:49 PM meejah <meejah at meejah.ca> wrote:
>
>>
>> As a clarification to the above, parallelization of Python code across
>> cores is not unique to Twisted; all Python code has this same
>> limitation.
>>
>> To use multiple cores with Python code, you need multiple Python
>> processes (as has been pointed out). One way to achieve this is to have
>> the multiple processes talking to each other (using some kind of RPC
>> protocol).
>>
>> Another way is to simply spawn some number of subprocesses (and Twisted
>> has good support for running subprocesses). So, for example, if you
>> write a CLI tool that can be told to run "part of your problem" then
>> your parent Twisted process can simply spawn some number of those with
>> appropriate arguments to split up the problem (e.g. give each process 1
>> / num_cores of the problem). This will incur some startup penalty as
>> each process starts up (especially if you're using PyPy, which you
>> should be if you care about speed) but is way simpler.
>>
>> Obviously, an RPC-style communication system avoids the startup penalty
>> (but can be more complex).
>>
>> --
>> meejah
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/17799ae9/attachment.html>

From moshez at zadka.club  Mon Jun 24 17:37:26 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 16:37:26 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>

On Mon, Jun 24, 2019, at 16:27, Chengi Liu wrote:
>  cpu_res *= yield *defer.*gatherResults*(cpus)

Remember: This will not block the reactor (Good!) but will still limit you to one CPU core (in general, some caveats, but true.) If you are CPU bound, this is woefully underutilizing modern CPU resources (again, some caveats here).

> if __name__ == '__main__':

In general, the best thing to do is to to use twisted.internet.task.react for main. This would also solve the other problem you point out below.

https://twistedmatrix.com/documents/current/api/twisted.internet.task.html#react has a good example.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/f6f5b223/attachment.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 18:24:00 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 20:24:00 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
 <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
Message-ID: <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>

I think I got around the second problem (thanks for sharing the react
documentation)

How do I use more multiple CPU cores? I guess atleast the fact that twisted
app wont be blocking is good, but what would be a good way to use multiple
cores.

I do see that meejah suggested using multiple python processes while
setting up the reactor?

My question is that.. say.. I set up multiple twisted based python
processes by leveraging the spawnProcess..

And then we setup a resource 'foo'.. When the request is hit to `foo` end
point... will the parallelization happen here..
say.. I have spawned 2 processes and one request came and hit the 'foo' end
point.. I am guessing.. the fact that 2 processes is running would help
responding to multiple requests simultaneously.

I think that level of parallelization is good and I will take it.. But
here.. what I want is... when you hit "foo".. then there is a function that
is parallelizable..
Like.. you hit "foo" endpoint.. I fetch data from somewhere.. (yay treq)..
and then there is a function that is called when we hit "foo" end point and
that function is extremely parallelizable over for loop. Now, what is great
is that with all your help, I am able to make this flow non-blocking. But,
would definitely like to exploit parallellism wherever feasible.



On Mon, Jun 24, 2019 at 7:37 PM Moshe Zadka <moshez at zadka.club> wrote:

> On Mon, Jun 24, 2019, at 16:27, Chengi Liu wrote:
>
>      cpu_res *= yield *defer.*gatherResults*(cpus)
>
>
> Remember: This will not block the reactor (Good!) but will still limit you
> to one CPU core (in general, some caveats, but true.) If you are CPU bound,
> this is woefully underutilizing modern CPU resources (again, some caveats
> here).
>
> if __name__ == '__main__':
>
>
> In general, the best thing to do is to to use twisted.internet.task.react
> for main. This would also solve the other problem you point out below.
>
>
> https://twistedmatrix.com/documents/current/api/twisted.internet.task.html#react has
> a good example.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/f5486a90/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Jun 24 22:08:27 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 24 Jun 2019 21:08:27 -0700
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <9B57A9CB-06D5-4830-9D8C-99155D2DED55@twistedmatrix.com>



> On Jun 24, 2019, at 4:26 PM, Chengi Liu <chengi.liu.86 at gmail.com> wrote:
> 
>              t = defer.ensureDeferred(network_get(i))

The meaning of "ensureDeferred" is, "ensure [that this thing, which may be a coroutine or Deferred, is a] Deferred".  You don't need to use it with things decorated with @inlineCallbacks, only with `async def`; it does nothing in your example.

We should really have a more explicit version of this, like a classmethod, Deferred.fromCoroutine(), that makes more sense in terms of what context you need to use it in.  (The naming here comes from asyncio.ensure_future, but that does have the somewhat more explicit loop.create_task to pair with it.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/bd43a02e/attachment.html>

From moshez at zadka.club  Mon Jun 24 23:16:17 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 22:16:17 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
 <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
 <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>
Message-ID: <6c1f2b9f-2ca5-4fe9-9125-611146cba60c@www.fastmail.com>

On Mon, Jun 24, 2019, at 17:24, Chengi Liu wrote:
> How do I use more multiple CPU cores? I guess atleast the fact that twisted app wont be blocking is good, but what would be a good way to use multiple cores.

It *really* depends on what is the function that is CPU heavy, and why it is CPU heavy.
You have a lot of options here, and they're all subtly different.

But I'll start with noting that this is *no longer* a Twisted question: using multiple cores from Python is genuinely a problem for which there is no single good solution, just a number of different ones with trade-offs. As I mentioned, you can use `dask`. I think that might be the simplest solution for you -- dask has a lot of good tutorials, and if your only goal is using multiple CPUs, it has an "auto-setup". Another option is to see if you can use a library that natively releases the Global Interpreter Lock. If, for example, your function is numeric computation heavy, than numpy does release the GIL. You can also use ampoule, though the set-up becomes non-trivial -- you will need to either change your process initialization or maintain a process pool from the main process. Either option can become non-trivial fast. Finally, the option of writing the CPU heavy code in Cython, and then releasing the GIL explicitly around the area it is not needed, exists.

To sum up:

* Dask
* Something that releases the GIL, like numpy
* Setting up an ampoule process pool
* Move CPU heavy logic to Cython, and release GIL explicitly

As I said, none of these options are really Twisted-related (the only one vaguely connected is the ampoule one, but even then, the fact that you'll use Twisted to manage the pool is incidental). There are even more exotic options, of course, but I think this e-mail might already be confusing enough.

Moshe Z.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/67bc2496/attachment.html>

From wk80333 at gmail.com  Wed Jun 26 00:48:24 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Tue, 25 Jun 2019 23:48:24 -0700
Subject: [Twisted-Python] Twisted tips for designing highly concurrent
 twisted REST API
Message-ID: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>

Hello folks,
  I recently stumbled upon twisted and was wondering if it could suit my
needs. On one hand, I want to use python but on another hand there are all
these scalability concerns with this language so, I though I would pick the
brains of the community. So.. a flask based app would look something like
this.

similar_types = ['foo', 'bar', 'baz']


def long_computation(rec_type):
     # some long computation
     return recs

@app.route('/fetch_similar_users/<user_id>'
def fetch_similar_users(user_id)
        r = json.loads(requests.get('url/to/fetch/%s'%user_id).text)
        recs = {}
        for stype in similar_types:
             recs[stype] = long_computation(rec_type)
       return recs



Now, I tried to "twistify" but it failed.

@defer.inlinecallbacks

def long_computation(rec_type):
     # some long computation
     *defer.returnValue(recs)*

@defer.inlinecallbacks
def fetch_data(user_id):
        r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
     defer.returnValue(r)


@defer.inlinecallbacks
def fetch_recs(user_id):
       data = yield fetch_data(user_id)
        recs = {}
       for stype in similar_types:
            d = defer.ToThread(fetch_data, *(stype))
           rec = yield d
           recs[stype] = rec
     defer.returnValue(recs)



I wrapped all the above in twisted render_Get method.. but then I did a
load test with locust (https://docs.locust.io/en/latest/what-is-locust.html)
framework.
It choked. As the time progressed, the response time increased.
I am guessing, things are still blocking.

Can you please help me look into the right place. Why exactly am I seeing
increase in response time as the time progresses. I am guessing things are
still working in "blocking" fashion but i thought the above should run
things in async.
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190625/95941cff/attachment.html>

From wk80333 at gmail.com  Wed Jun 26 00:50:57 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Tue, 25 Jun 2019 23:50:57 -0700
Subject: [Twisted-Python] Twisted tips for designing highly concurrent
 twisted REST API
In-Reply-To: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>
References: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>
Message-ID: <CAJuJkHN6ODsRZwBz4THpY23ZkcaMZ9hpnNCwDcQx4w94bHuOZA@mail.gmail.com>

Sorry I had a typo in twisted program

@defer.inlinecallbacks

def long_computation(rec_type, data):
     # some long computation
     *defer.returnValue(recs)*

@defer.inlinecallbacks
def fetch_data(user_id):
        r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
     defer.returnValue(r)


@defer.inlinecallbacks
def fetch_recs(user_id):
       data = yield fetch_data(user_id)
        recs = {}
       for stype in similar_types:
            *d = defer.ToThread(long_computation, *(stype, data)) // typo
was here*
           rec = yield d
           recs[stype] = rec
     defer.returnValue(recs)


On Tue, Jun 25, 2019 at 11:48 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hello folks,
>   I recently stumbled upon twisted and was wondering if it could suit my
> needs. On one hand, I want to use python but on another hand there are all
> these scalability concerns with this language so, I though I would pick the
> brains of the community. So.. a flask based app would look something like
> this.
>
> similar_types = ['foo', 'bar', 'baz']
>
>
> def long_computation(rec_type):
>      # some long computation
>      return recs
>
> @app.route('/fetch_similar_users/<user_id>'
> def fetch_similar_users(user_id)
>         r = json.loads(requests.get('url/to/fetch/%s'%user_id).text)
>         recs = {}
>         for stype in similar_types:
>              recs[stype] = long_computation(rec_type)
>        return recs
>
>
>
> Now, I tried to "twistify" but it failed.
>
> @defer.inlinecallbacks
>
> def long_computation(rec_type):
>      # some long computation
>      *defer.returnValue(recs)*
>
> @defer.inlinecallbacks
> def fetch_data(user_id):
>         r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
>      defer.returnValue(r)
>
>
> @defer.inlinecallbacks
> def fetch_recs(user_id):
>        data = yield fetch_data(user_id)
>         recs = {}
>        for stype in similar_types:
>             d = defer.ToThread(fetch_data, *(stype))
>            rec = yield d
>            recs[stype] = rec
>      defer.returnValue(recs)
>
>
>
> I wrapped all the above in twisted render_Get method.. but then I did a
> load test with locust (
> https://docs.locust.io/en/latest/what-is-locust.html) framework.
> It choked. As the time progressed, the response time increased.
> I am guessing, things are still blocking.
>
> Can you please help me look into the right place. Why exactly am I seeing
> increase in response time as the time progresses. I am guessing things are
> still working in "blocking" fashion but i thought the above should run
> things in async.
> Thanks
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190625/608e78e2/attachment.html>

From barry.scott at forcepoint.com  Wed Jun 26 09:14:46 2019
From: barry.scott at forcepoint.com (Scott, Barry)
Date: Wed, 26 Jun 2019 15:14:46 +0000
Subject: [Twisted-Python] TB in tls.py
Message-ID: <4281881.qKIB4Hqnya@barry-scott-desktop>

I'm see this TB often and I'm wondering how to fix it.

  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 
902, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2333, in forceAbortClient
    self.transport.abortConnection()
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/tls.py", line 
435, in abortConnection
    self._shutdownTLS()
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/tls.py", line 
338, in _shutdownTLS
    shutdownSuccess = self._tlsConnection.shutdown()
exceptions.AttributeError: 'NoneType' object has no attribute 'shutdown'

I can see in TLSMemoryBIOProtocol.connectionLost that _tlsConnection
is set to None. Which I think is racing with the call later that calls 
forceAbortClient().

If that is the case then I think this is a possible fix?
Thoughts?

--- twisted-upstream/src/twisted/protocols/tls.py	2019-06-26 
16:10:54.329822916 +0100
+++ _diff_.tmp	2019-06-26 16:12:17.992418082 +0100
@@ -334,7 +334,7 @@
         Initiate, or reply to, the shutdown handshake of the TLS layer.
         """
         try:
-            shutdownSuccess = self._tlsConnection.shutdown()
+            shutdownSuccess = self._tlsConnection is not None and 
self._tlsConnection.shutdown()
         except Error:
             # Mid-handshake, a call to shutdown() can result in a
             # WantWantReadError, or rather an SSL_ERR_WANT_READ; but 
pyOpenSSL

Barry




From glyph at twistedmatrix.com  Thu Jun 27 01:40:48 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Jun 2019 00:40:48 -0700
Subject: [Twisted-Python] TB in tls.py
In-Reply-To: <4281881.qKIB4Hqnya@barry-scott-desktop>
References: <4281881.qKIB4Hqnya@barry-scott-desktop>
Message-ID: <CA13C887-CAFA-4E18-AFE1-F5EF471E66B4@twistedmatrix.com>



> On Jun 26, 2019, at 8:14 AM, Scott, Barry <barry.scott at forcepoint.com> wrote:
> 
> I'm see this TB often and I'm wondering how to fix it.

Looks like there's already been some investigation / discussion of this issue :-).

https://twistedmatrix.com/trac/ticket/9462 <https://twistedmatrix.com/trac/ticket/9462>

Possibly illuminating to review this, and the linked tickets?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190627/125f2008/attachment.html>

From barry.scott at forcepoint.com  Thu Jun 27 10:58:33 2019
From: barry.scott at forcepoint.com (Scott, Barry)
Date: Thu, 27 Jun 2019 16:58:33 +0000
Subject: [Twisted-Python] TB calling _IdentityTransferDecoder after decode
 finished.
Message-ID: <4341558.FJlWP1KbY8@barry-scott-desktop>

I'm in the middle of trying to figure what causes this TB.
Has this been seen before?

  File "/usr/local/lib/python2.7/site-packages/twisted/internet/posixbase.py", 
line 614, in _doReadOrWrite
    why = selectable.doRead()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/unix.py", line 
191, in doRead
    return self._dataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/tcp.py", line 
249, in _dataReceived
    rval = self.protocol.dataReceived(data)
  File "/opt/webdefence/lib/filtering_proxy_listener.py", line 144, in 
dataReceived
    return http.HTTPChannel.dataReceived(self, data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2211, in dataReceived
    return basic.LineReceiver.dataReceived(self, data)
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/basic.py", 
line 579, in dataReceived
    why = self.rawDataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2218, in rawDataReceived
    self._transferDecoder.dataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
1681, in dataReceived
    "_IdentityTransferDecoder cannot decode data after finishing")
exceptions.RuntimeError: _IdentityTransferDecoder cannot decode data after 
finishing

The code at filtering_proxy_listener.py:144  is keeping track of the received 
data size and then calls into the base class dataReceived().

Barry




From trac at twistedmatrix.com  Sun Jun 30 00:05:17 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Jun 2019 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1561874717.96.8880754043323001554@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190630/b202b33c/attachment.html>

From chris at cmsconstruct.com  Sat Jun  1 18:07:43 2019
From: chris at cmsconstruct.com (Chris Satterthwaite)
Date: Sat, 1 Jun 2019 19:07:43 -0500
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?
In-Reply-To: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
References: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
Message-ID: <00fe01d518d7$33f3f940$9bdbebc0$@cmsconstruct.com>

Hi Griatch,

 

Our stack-based solution for customers hosting our platform requires the same.  We could compile and distribute, but then we’d have to support dependencies… and I’ve never been a fan of embedded dependencies.  We do that for software installation (embedding python and libs into a binary via PyInstaller), but for production run-time it’s just the modules – hence similar dependencies on developer tools being installed.

 

The Microsoft link has changed over the years.  I’ve pasted what we have in our documentation for those tools below, which looks like it’s validated on Windows 10 Pro, Win server 2012 R2, and Win server 2016.  Also, on the Server side, I believe you also need to be mindful of the .NET versioning… in case there’s another application dependency.

 

=======================

Get the developer tools from Microsoft:

 

1.	Go to the following URL:  https://www.visualstudio.com/vs/community/
2.	Download and run the vs_community file 
3.	Select "Desktop development with C++" 
4.	Reboot when finished 

 

-Chris

 

 

From: Twisted-Python <twisted-python-bounces at twistedmatrix.com> On Behalf Of Griatch Art
Sent: Tuesday, May 28, 2019 6:04 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?

 

Hi, 

 

I'm investigating installing the Evennia MU* server on Windows. We use Twisted and will be requiring Python3.7 in our next release. I need to make easy-to-use install instructions since a lot of Windows users use our library. 

 

I tested with a Windows7 64bit VM and installed everything from scratch to emulate what a non-dev Windows user would see. I don't have Windows10 so can't compare to the install experience there (but Windows7 64bit is still relevant, having something like 24% of the active Windows user-base according to Steam).

 

Using pip to install Evennia, at the Twisted requirement install step I run into an error telling me that I need "Microsoft Visual C++ build tools" from the URL https://visualstudio.microsoft.com/downloads. The first issue is that there does not appear to be any build-tools package named like that on that page or sub-page (at least not what I could find after digging around). I tried to install a few similarly-named packages, like "Visual Studio Build Tools", but  had no luck getting past the Twisted install point. So that recommendation-string should likely be updated. 

 

The thing is though, while I could probably personally figure out how to set it up eventually, our Windows users are likely the least tech-savvy of our users. Requiring them to set up a compiler environment (despite us telling them that Python code does not need compilation) a bit too much. 

It seems Twisted has distributed binary Windows wheels in the past, would it be possible to get them again? Or should I recommend some other, specific install procedure for our Windows users?

 

Cheers, 

Griatch, Evennia dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190601/97d64101/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jun  2 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Jun 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1559455518.06.7657318951579114776@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190602/3ccb7fb5/attachment-0002.html>

From thomas.westfeld at currenta.de  Wed Jun  5 05:52:56 2019
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Wed, 5 Jun 2019 11:52:56 +0000
Subject: [Twisted-Python] Returning Failure when requestAvatarID to indicate
 a failed login is not working for me
Message-ID: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>

Dear all,

I am experiencing a problem with a custom credential checker for twisted cred based on an external server.

    @defer.inlineCallbacks
    def requestAvatarId(self, credentials):
        user = <query external server with credentials>
        try:
            # Check password with external server, raises InvalidCredentials error
	# if successful return user entry
	user_entry = yield checkCredentialsWithExternalServer(user, credentials.password)
            defer.returnValue(user_entry)
        except InvalidCredentials:
            self.log.debug("Invalid password for username {user}", user=user_entry.dn.getText())
            defer.returnValue(Failure(error.UnauthorizedLogin("username/password is wrong")))

My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

I also tried to raise the error but this does not work for me. I also tried to return a defer.fail(error.UnauthorizedLogin()).

This is what the requestAvatarID method documentation (https://github.com/twisted/twisted/blob/f9e12bd88618682f7cdba342fbaea1212073533f/src/twisted/cred/checkers.py#L26) says about the return value

        @return: a Deferred which will fire a string which identifies an
        avatar, an empty tuple to specify an authenticated anonymous user
        (provided as checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin).
        Alternatively, return the result itself.

I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.

Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

Any help is appreciated,
Thomas

From glyph at twistedmatrix.com  Wed Jun  5 23:35:53 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Jun 2019 22:35:53 -0700
Subject: [Twisted-Python] Returning Failure when requestAvatarID to
 indicate a failed login is not working for me
In-Reply-To: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
References: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
Message-ID: <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>



> On Jun 5, 2019, at 4:52 AM, Thomas Westfeld <thomas.westfeld at currenta.de> wrote:
> 
> Dear all,

Hi Thomas!

> I am experiencing a problem with a custom credential checker for twisted cred based on an external server.
> 
> My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

This is surprising, because unless something else is broken, the example you gave definitely behaves like that.  Which suggests to me that something else is broken.

> I also tried to raise the error but this does not work for me.

This should also work.

> I also tried to return a defer.fail(error.UnauthorizedLogin()).

This, however, is a mistake; you can't returnValue(someDeferred()) in inlineCallbacks; you have to wait for deferreds with 'yield'.  So this failing is expected.

> I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.
> 
> Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

No, this should indeed work as you describe.

It would be helpful if you could construct the most minimal possible example of your issue.

For example, here's a super minimal illustration of the fact that the two techniques that should work, do in fact work:

from twisted.internet.defer import inlineCallbacks, returnValue, fail
from twisted.python.failure import Failure
from twisted.cred.error import UnauthorizedLogin

@inlineCallbacks
def returnFailure():
    if 0:
        yield
    returnValue(Failure(UnauthorizedLogin()))

@inlineCallbacks
def returnFailResult():
    if 0:
        yield
    returnValue(fail(UnauthorizedLogin()))

@inlineCallbacks
def raiseException():
    if 0:
        yield
    raise UnauthorizedLogin()

returnFailure().addErrback(lambda eb: print(eb))
# returnFailResult().addErrback(lambda eb: print(eb))
raiseException().addErrback(lambda eb: print(eb))

Could you reduce your checker to something suitably minimal that can be run directly without actually talking to your auth backend?  My guess is that you'll discover a bug as you're doing this, but the possibility definitely remains that there's an issue with Twisted; I just can't guess what it might be without more information.

Thanks for using Twisted,

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190605/b4cfb2e6/attachment-0002.html>

From hawkowl at atleastfornow.net  Thu Jun  6 08:46:36 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Fri, 7 Jun 2019 00:46:36 +1000
Subject: [Twisted-Python] [SECURITY] Twisted 19.2.1 Release Announcement
Message-ID: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the 
release of Twisted 19.2.1!

This is a security release, and contains the following changes:

- All HTTP clients in twisted.web.client now raise a ValueError when 
called with a method and/or URL that contain invalid characters. This 
mitigates CVE-2019-12387. Thanks to Alex Brasetvik for reporting this 
vulnerability.

It is recommended you update to this release as soon as is practical.

Additional mitigation may be required if Twisted is not your only HTTP 
client library:

- This bug is present in all current versions of urllib2 in CPython. 
More information can be found on the Python bug tracker: 
https://bugs.python.org/issue30458
- This bug was present in urllib3 up until version 1.24.3. More 
information can be found on the urllib3 bug tracker: 
https://github.com/urllib3/urllib3/issues/1553

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or 
alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS 
file is also available at 
<https://github.com/twisted/twisted/blob/twisted-19.2.1/NEWS.rst>.

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190607/dd3d7700/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jun  6 16:01:58 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 6 Jun 2019 15:01:58 -0700
Subject: [Twisted-Python] [SECURITY] Twisted 19.2.1 Release Announcement
In-Reply-To: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>
References: <c3bbe552-74bb-bb10-867c-da816f9fa8da@atleastfornow.net>
Message-ID: <5AB68AD8-0367-4F50-A633-E2A3E51AF16F@twistedmatrix.com>

> On Jun 6, 2019, at 7:46 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 19.2.1!

Thank you very much to Mark and Amber for their rapid-response work in getting this fix deployed, to Alex Brasetvik for discovering and reporting the issue via security at twistedmatrix.com, and Alex Gaynor for serving as our security contact and coordinator.  Go Team!

A reminder to anyone who has security issues to report, or who may want to work on security issues for Twisted in the future: on the front page here <https://twistedmatrix.com/trac/#Reportasecurityissue> we have a link to our reporting and remediation processes: <https://twistedmatrix.com/trac/wiki/Security>.

Thanks again all!

-glyph



From trac at twistedmatrix.com  Sun Jun  9 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1560060320.02.3139044063802631304@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190609/63c91343/attachment-0002.html>

From griatch at gmail.com  Sun Jun  9 01:10:47 2019
From: griatch at gmail.com (Griatch Art)
Date: Sun, 9 Jun 2019 09:10:47 +0200
Subject: [Twisted-Python] Binary wheels for Twisted on Windows?
In-Reply-To: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
References: <CAJmuMNd9LfSjahxGEf2H15BXZDkUmxgRJ6dEvJnosDH1mhPK_g@mail.gmail.com>
Message-ID: <CAJmuMNd6mu3AthXf7LzsqoYsLwjZw1Jw3cGXDbexYXUp56DrGA@mail.gmail.com>

Thanks for the replies. Distributing a binary specifically for Windows is
something I'd like to avoid. I'll look into the downloads suggested by
Chris though (thanks!).
But if it would be possible to have binary wheels, like Glyph mentions,
that would indeed help our Window users a ton, and allow us to homogenize
the install instructions across platforms as well.

Den tis 28 maj 2019 13:04Griatch Art <griatch at gmail.com> skrev:

> Hi,
>
> I'm investigating installing the Evennia MU* server on Windows. We use
> Twisted and will be requiring Python3.7 in our next release. I need to make
> easy-to-use install instructions since a lot of Windows users use our
> library.
>
> I tested with a Windows7 64bit VM and installed everything from scratch to
> emulate what a non-dev Windows user would see. I don't have Windows10 so
> can't compare to the install experience there (but Windows7 64bit is still
> relevant, having something like 24% of the active Windows user-base
> according to Steam).
>
> Using pip to install Evennia, at the Twisted requirement install step I
> run into an error telling me that I need "Microsoft Visual C++ build tools"
> from the URL https://visualstudio.microsoft.com/downloads. The first
> issue is that there does not appear to be any build-tools package named
> like that on that page or sub-page (at least not what I could find after
> digging around). I tried to install a few similarly-named packages, like
> "Visual Studio Build Tools", but  had no luck getting past the Twisted
> install point. So that recommendation-string should likely be updated.
>
> The thing is though, while I could probably personally figure out how to
> set it up eventually, our Windows users are likely the least tech-savvy of
> our users. Requiring them to set up a compiler environment (despite us
> telling them that Python code does not need compilation) a bit too much.
> It seems Twisted has distributed binary Windows wheels in the past, would
> it be possible to get them again? Or should I recommend some other,
> specific install procedure for our Windows users?
>
> Cheers,
> Griatch, Evennia dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190609/d44dc7e6/attachment-0002.html>

From touch.sereysethy at gmail.com  Tue Jun 11 13:40:50 2019
From: touch.sereysethy at gmail.com (Sereysethy TOUCH)
Date: Tue, 11 Jun 2019 21:40:50 +0200
Subject: [Twisted-Python] Conch question regarding command execution status
Message-ID: <CAJB=Z87nya-fVGFK347w4e4z2TTbRrogMCcvgKAwiH3JHGR9Vg@mail.gmail.com>

Hi,

I have a question regarding conch ssh connection. I opened a channel to an
ssh server,
my requirement is to know when can I submit my next command after the first
command execution finished. Is there a way to check that the command
execution finished in case that there is no data received? Is there an
exit_status or an ACK?

I read the SSH RFC (https://tools.ietf.org/html/rfc4254#section-6.10) there
is a returning exit status (even it is optionnel), twisted conch implements
this?

Thanks,
Sethy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190611/7c5e3905/attachment-0002.html>

From thomas.westfeld at currenta.de  Wed Jun 12 02:05:06 2019
From: thomas.westfeld at currenta.de (Thomas Westfeld)
Date: Wed, 12 Jun 2019 08:05:06 +0000
Subject: [Twisted-Python] Returning Failure when requestAvatarID to
 indicate a failed login is not working for me
In-Reply-To: <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>
References: <588c34674fd945e5bccd58c19bc27f73@BYEX35.de.bayer.cnb>
 <23E59DC4-A32B-4D59-BE2A-9A1C685D789A@twistedmatrix.com>
Message-ID: <3df8b98711ad4a209ff072bd31fe74f6@BYEX35.de.bayer.cnb>

Hello Glyph,

it was an error at a different place as you expected. Now it is working very nicely.

Thanks for your help,
Thomas


From: Twisted-Python [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Glyph
Sent: Thursday, June 06, 2019 7:36 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Returning Failure when requestAvatarID to indicate a failed login is not working for me




On Jun 5, 2019, at 4:52 AM, Thomas Westfeld <thomas.westfeld at currenta.de> wrote:

Dear all,

Hi Thomas!


I am experiencing a problem with a custom credential checker for twisted cred based on an external server.
My problem is, that the Failure in the last line does not trigger the Errback of the deferred of the calling method to signal that the login failed.

This is surprising, because unless something else is broken, the example you gave definitely behaves like that.  Which suggests to me that something else is broken.


I also tried to raise the error but this does not work for me.

This should also work.


I also tried to return a defer.fail(error.UnauthorizedLogin()).

This, however, is a mistake; you can't returnValue(someDeferred()) in inlineCallbacks; you have to wait for deferreds with 'yield'.  So this failing is expected.


I am now a bit puzzled that it could be problematic, because the @inlineCallbacks decorator makes the function itself return a deferred already. It would be great to have an inlineCallbacked method as getAvatarID method, because I am doing some networking calls in it which are all returning deferreds.

Do I have to rewrite the getAvatarID implementation to not use inlineCallbacks?

No, this should indeed work as you describe.

It would be helpful if you could construct the most minimal possible example of your issue.

For example, here's a super minimal illustration of the fact that the two techniques that should work, do in fact work:

from twisted.internet.defer import inlineCallbacks, returnValue, fail
from twisted.python.failure import Failure
from twisted.cred.error import UnauthorizedLogin

@inlineCallbacks
def returnFailure():
    if 0:
        yield
    returnValue(Failure(UnauthorizedLogin()))

@inlineCallbacks
def returnFailResult():
    if 0:
        yield
    returnValue(fail(UnauthorizedLogin()))

@inlineCallbacks
def raiseException():
    if 0:
        yield
    raise UnauthorizedLogin()

returnFailure().addErrback(lambda eb: print(eb))
# returnFailResult().addErrback(lambda eb: print(eb))
raiseException().addErrback(lambda eb: print(eb))

Could you reduce your checker to something suitably minimal that can be run directly without actually talking to your auth backend?  My guess is that you'll discover a bug as you're doing this, but the possibility definitely remains that there's an issue with Twisted; I just can't guess what it might be without more information.

Thanks for using Twisted,

-g

From trac at twistedmatrix.com  Sun Jun 16 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1560665120.48.2559741071349903746@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190616/5a89061c/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jun 21 07:39:21 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 21 Jun 2019 09:39:21 -0400
Subject: [Twisted-Python] Azure Pipelines
Message-ID: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>

Hello,

I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> /
PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit
over a week ago.  It is suffering from a red mark on the CI report due to
Azure Pipelines complaining there was some "communication" problem "with
the server".  I imagine this is a spurious failure due to transient network
conditions on the CI system.  There doesn't appear to be a retry button to
find out, though.

I can't see any Azure Pipeline configuration in the repository, I don't see
much information on the ticket that (maybe?) introduced Azure Pipeline usage
<https://twistedmatrix.com/trac/ticket/9454>.  I can't sign in to Azure or
whatever the system driving this is called.

What is to become of this PR?

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/d7e990c3/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jun 21 10:05:12 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Jun 2019 09:05:12 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
Message-ID: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>



> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> / PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit over a week ago.  It is suffering from a red mark on the CI report due to Azure Pipelines complaining there was some "communication" problem "with the server".  I imagine this is a spurious failure due to transient network conditions on the CI system.  There doesn't appear to be a retry button to find out, though.

You need to be signed in to see it, but there is a "retry" button under the vertical-ellipsis button in the top right, next to "all logs".

I clicked it for you (annoyingly I had to do this twice, there was another transient CI-system-related error on a different pipeline, maybe they've been having an outage?) and the build is now green.

> I can't see any Azure Pipeline configuration in the repository, I don't see much information on the ticket that (maybe?) introduced Azure Pipeline usage <https://twistedmatrix.com/trac/ticket/9454>.

Once you're logged in, I think you can also see the build configuration, under "edit pipeline" in the same menu the "retry" item is in.  Not sure if there are some permissions to manage here for either the retry or edit buttons.  If there are, and you can't see either of them, let's get them set up for anyone who wants them; but I think Github org membership should be sufficient, since from what I can tell in their control panel that's how I had permission.

> I can't sign in to Azure or whatever the system driving this is called.

The system is broadly called "Microsoft", I think :-), but you do have to log in to this specific corner of it (Azure DevOps?).

Anyway - if you click on the Azure build status "Details" link on Github, you'll get to this page:

https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958 <https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958>

On that page, there's a "Sign in" link in the top right.  When you click it, you'll see a login.microsoftonline.com <http://login.microsoftonline.com/> page with a "sign in with github" link at the bottom.  Use that and you should be all set.

> What is to become of this PR?

Hopefully it'll get landed now ;).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/095c1620/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Jun 21 10:09:52 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 21 Jun 2019 12:09:52 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
Message-ID: <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>

On Fri, Jun 21, 2019 at 12:05 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> Hello,
>
> I submitted ticket:9655 <https://twistedmatrix.com/trac/ticket/9655> /
> PR#1155 <https://github.com/twisted/twisted/pull/1155> for review a bit
> over a week ago.  It is suffering from a red mark on the CI report due to
> Azure Pipelines complaining there was some "communication" problem "with
> the server".  I imagine this is a spurious failure due to transient network
> conditions on the CI system.  There doesn't appear to be a retry button to
> find out, though.
>
>
> You need to be signed in to see it, but there is a "retry" button under
> the vertical-ellipsis button in the top right, next to "all logs".
>
> I clicked it for you (annoyingly I had to do this twice, there was another
> transient CI-system-related error on a different pipeline, maybe they've
> been having an outage?) and the build is now green.
>

Annoying, indeed. :/


>
> I can't see any Azure Pipeline configuration in the repository, I don't
> see much information on the ticket that (maybe?) introduced Azure
> Pipeline usage <https://twistedmatrix.com/trac/ticket/9454>.
>
>
> Once you're logged in, I think you can also see the build configuration,
> under "edit pipeline" in the same menu the "retry" item is in.  Not sure if
> there are some permissions to manage here for either the retry or edit
> buttons.  If there are, and you can't see either of them, let's get them
> set up for anyone who wants them; but I think Github org membership should
> be sufficient, since from what I can tell in their control panel that's how
> I had permission.
>
> I can't sign in to Azure or whatever the system driving this is called.
>
>
> The system is broadly called "Microsoft", I think :-), but you do have to
> log in to this specific corner of it (Azure DevOps?).
>
> Anyway - if you click on the Azure build status "Details" link on Github,
> you'll get to this page:
>
> https://twistedmatrix.visualstudio.com/twisted/_build/results?buildId=958
>
> On that page, there's a "Sign in" link in the top right.  When you click
> it, you'll see a login.microsoftonline.com page with a "sign in with
> github" link at the bottom.  Use that and you should be all set.
>

When I follow that link and grant permission on the GitHub side, I get
taken back to a microsoft.com URL that eventually fails with an infinite
redirect error. :/  So I am not able to look at the build page while signed
in.

Presumably there is something about my browser profile that triggers this
but, of course, I have no idea what.

Jean-Paul


>
> What is to become of this PR?
>
>
> Hopefully it'll get landed now ;).
>

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/e467c478/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jun 21 10:22:06 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Jun 2019 09:22:06 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <CAEeXt4NQfhSMPAV8=vd0-Rj0mEHeMp7vam7VmTfs+VF9G9QvvA@mail.gmail.com>
Message-ID: <8A9BCD23-4DAD-4803-8AD2-C61E329DAC2F@twistedmatrix.com>



> On Jun 21, 2019, at 9:09 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> When I follow that link and grant permission on the GitHub side, I get taken back to a microsoft.com <http://microsoft.com/> URL that eventually fails with an infinite redirect error. :/  So I am not able to look at the build page while signed in.
> 
> Presumably there is something about my browser profile that triggers this but, of course, I have no idea what.

Oh, no. I've been in this state once before, and it's definitely annoying to get out of.  Can you log in in incognito mode?

I think the way I eventually fixed it was manually clearing cookies for a whole slew of Microsoft domains and logging in afresh; off the top of my head, these were the ones I nuked:

microsoftonline.com <http://microsoftonline.com/>
microsoft.com <http://microsoft.com/>
live.com <http://live.com/>
skype.com <http://skype.com/>
visualstudio.com <http://visualstudio.com/>

and all subdomains thereof.

I'm Cc:ing the generous fellow who set us up with Azure Pipelines to begin with - Steve Dower (and you directly because I don't think Steve is on this list) because I mentioned to him at PyCon that I'd had trouble with this login mess before, but by the time I was talking with him I was no longer in this state and had no useful information for a repro other than "everything about this sucks".  Maybe you could save those cookies before deleting them, or otherwise help figure this out so others won't have the same issue?

Good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190621/cca00feb/attachment-0002.html>

From sda at fstab.net  Fri Jun 21 12:51:27 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Fri, 21 Jun 2019 14:51:27 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
Message-ID: <e394ad0d947ad691e1389e60b79c97ae@fstab.net>

On 2019-06-21 12:05, Glyph wrote:

>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>> <exarkun at twistedmatrix.com> wrote:
>> I can't see any Azure Pipeline configuration in the repository, I 
>> don't see much information on the ticket that (maybe?) introduced 
>> Azure Pipeline usage.
> 
> Once you're logged in, I think you can also see the build 
> configuration, under "edit pipeline" in the same menu the "retry" item 
> is in.  Not sure if there are some permissions to manage here for 
> either the retry or edit buttons.  If there are, and you can't see 
> either of them, let's get them set up for anyone who wants them; but I 
> think Github org membership should be sufficient, since from what I can 
> tell in their control panel that's how I had permission.

Do we want Azure Pipelines config on their website while Travis, 
AppVeyor, and Circle are all in our source repository?

Cheers,
-kyle



From hawkowl at atleastfornow.net  Fri Jun 21 16:40:17 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sat, 22 Jun 2019 08:40:17 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
Message-ID: <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>

The matrix stuff we're using is not yet supported as a pipeline 
workflow, so, when it is, we will move it :)

- Amber

On 22/6/19 4:51 am, Kyle Altendorf wrote:
> On 2019-06-21 12:05, Glyph wrote:
>
>>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>>> <exarkun at twistedmatrix.com> wrote:
>>> I can't see any Azure Pipeline configuration in the repository, I 
>>> don't see much information on the ticket that (maybe?) introduced 
>>> Azure Pipeline usage.
>>
>> Once you're logged in, I think you can also see the build 
>> configuration, under "edit pipeline" in the same menu the "retry" 
>> item is in.  Not sure if there are some permissions to manage here 
>> for either the retry or edit buttons.  If there are, and you can't 
>> see either of them, let's get them set up for anyone who wants them; 
>> but I think Github org membership should be sufficient, since from 
>> what I can tell in their control panel that's how I had permission.
>
> Do we want Azure Pipelines config on their website while Travis, 
> AppVeyor, and Circle are all in our source repository?
>
> Cheers,
> -kyle
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sda at fstab.net  Fri Jun 21 17:59:05 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Fri, 21 Jun 2019 19:59:05 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
Message-ID: <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>



On 2019-06-21 18:40, Amber Brown wrote:
> The matrix stuff we're using is not yet supported as a pipeline
> workflow, so, when it is, we will move it :)

Hmm...  I'm running Python inside a build to generate the matrix for 
that build (with a yaml file for a pipeline).  Now I'm curious what 
matrixing is being used that isn't supported yet.  But perhaps it isn't 
worth bothering to work through.

Cheers,
-kyle

> On 22/6/19 4:51 am, Kyle Altendorf wrote:
>> On 2019-06-21 12:05, Glyph wrote:
>> 
>>>> On Jun 21, 2019, at 6:39 AM, Jean-Paul Calderone 
>>>> <exarkun at twistedmatrix.com> wrote:
>>>> I can't see any Azure Pipeline configuration in the repository, I 
>>>> don't see much information on the ticket that (maybe?) introduced 
>>>> Azure Pipeline usage.
>>> 
>>> Once you're logged in, I think you can also see the build 
>>> configuration, under "edit pipeline" in the same menu the "retry" 
>>> item is in.  Not sure if there are some permissions to manage here 
>>> for either the retry or edit buttons.  If there are, and you can't 
>>> see either of them, let's get them set up for anyone who wants them; 
>>> but I think Github org membership should be sufficient, since from 
>>> what I can tell in their control panel that's how I had permission.
>> 
>> Do we want Azure Pipelines config on their website while Travis, 
>> AppVeyor, and Circle are all in our source repository?
>> 
>> Cheers,
>> -kyle
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From hawkowl at atleastfornow.net  Sat Jun 22 12:05:55 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 23 Jun 2019 04:05:55 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
Message-ID: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>

On 22/6/19 9:59 am, Kyle Altendorf wrote:
>
> Hmm...  I'm running Python inside a build to generate the matrix for 
> that build (with a yaml file for a pipeline).  Now I'm curious what 
> matrixing is being used that isn't supported yet.  But perhaps it 
> isn't worth bothering to work through.
>
> Cheers,
> -kyle

It now says:

#Multi-configuration and multi-agent job options are not exported to 
YAML. Configure these options using documentation guidance: 
https://docs.microsoft.com/vsts/pipelines/process/phases

So maybe it'd work? Anyone want to volunteer to see? :)

- Amber



From glyph at twistedmatrix.com  Sat Jun 22 16:04:52 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 22 Jun 2019 15:04:52 -0700
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
Message-ID: <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>



> On Jun 22, 2019, at 11:05 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>> 
>> Hmm...  I'm running Python inside a build to generate the matrix for that build (with a yaml file for a pipeline).  Now I'm curious what matrixing is being used that isn't supported yet.  But perhaps it isn't worth bothering to work through.
>> 
>> Cheers,
>> -kyle
> 
> It now says:
> 
> #Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases
> 
> So maybe it'd work? Anyone want to volunteer to see? :)

I'm a little confused - I thought maybe you meant "now" instead of "not"; but then the only place Google could find this exact phrasing was https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml <https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml>, and it definitely says "not".  Except then the "phases" link you sent clearly shows some YAML under the "Multi-configuration" section.

Did something change?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190622/62cef138/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Jun 22 16:31:32 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 23 Jun 2019 08:31:32 +1000
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
 <06B204C6-6DC3-41B3-9C6B-80034E00DEC1@twistedmatrix.com>
Message-ID: <3ddaed01-e49e-74b7-37d8-c3955147925e@atleastfornow.net>


On 23/6/19 8:04 am, Glyph wrote:
>
>
>> On Jun 22, 2019, at 11:05 AM, Amber Brown <hawkowl at atleastfornow.net 
>> <mailto:hawkowl at atleastfornow.net>> wrote:
>>
>> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>>>
>>> Hmm...  I'm running Python inside a build to generate the matrix for 
>>> that build (with a yaml file for a pipeline).  Now I'm curious what 
>>> matrixing is being used that isn't supported yet.  But perhaps it 
>>> isn't worth bothering to work through.
>>>
>>> Cheers,
>>> -kyle
>>
>> It now says:
>>
>> #Multi-configuration and multi-agent job options are not exported to 
>> YAML. Configure these options using documentation guidance: 
>> https://docs.microsoft.com/vsts/pipelines/process/phases
>>
>> So maybe it'd work? Anyone want to volunteer to see? :)
>
> I'm a little confused - I thought maybe you meant "now" instead of 
> "not"; but then the only place Google could find this exact phrasing 
> was 
> https://github.com/Azure/azure-iot-sdk-python-preview/blob/master/vsts/build.yaml, 
> and it definitely says "not".  Except then the "phases" link you sent 
> clearly shows some YAML under the "Multi-configuration" section.
>
> Did something change?
>
> -glyph
>
I think it means it doesn't have the functionality to export the 
options, but you could write it yourself.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/d267d748/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jun 23 00:05:20 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Jun 2019 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1561269920.14.9014131631087128547@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/a0d2b053/attachment-0002.html>

From sda at fstab.net  Sun Jun 23 09:11:09 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Sun, 23 Jun 2019 11:11:09 -0400
Subject: [Twisted-Python] Azure Pipelines
In-Reply-To: <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
References: <CAEeXt4Mt_PmogExWZhQEQWhBFzNF790GAVT6h3c-DfAKA6ffAQ@mail.gmail.com>
 <6404121F-F31D-41D0-A5E8-C1824AF3745A@twistedmatrix.com>
 <e394ad0d947ad691e1389e60b79c97ae@fstab.net>
 <51aac9ba-a2d3-6109-818e-39181ed8e8d0@atleastfornow.net>
 <9fcd1f1beab188994064bd1b0a2c534c@fstab.net>
 <70018375-b3fe-4495-8bd6-35ad721ff3f1@atleastfornow.net>
Message-ID: <6de20054ff4ff80b96f395c90d802b7b@fstab.net>



On 2019-06-22 14:05, Amber Brown wrote:
> On 22/6/19 9:59 am, Kyle Altendorf wrote:
>> 
>> Hmm...  I'm running Python inside a build to generate the matrix for 
>> that build (with a yaml file for a pipeline).  Now I'm curious what 
>> matrixing is being used that isn't supported yet.  But perhaps it 
>> isn't worth bothering to work through.
>> 
>> Cheers,
>> -kyle
> 
> It now says:
> 
> #Multi-configuration and multi-agent job options are not exported to
> YAML. Configure these options using documentation guidance:
> https://docs.microsoft.com/vsts/pipelines/process/phases
> 
> So maybe it'd work? Anyone want to volunteer to see? :)

I don't know what our setup is now so I can't really compare.  Do we 
have a matrix built from a few axes?  Like Windows/macOS and py2.7/3.7 
generating 4 builds for us?  AFAIK that isn't yet supported.

https://github.com/microsoft/azure-pipelines-yaml/issues/20

But, you can certainly write a job and list out the four (or whatever) 
parameter sets you want it to be run against.  For romp I went ahead and 
implemented a little Python cross matrixer which runs as the first job 
and outputs JSON.  It's output is used as the matrix def for another job 
which does whatever it's supposed to.  So there are options anywhere 
from hand-coded YAML to build-parameter-dependent on-the-fly-generated 
JSON to configure a 'matrix', and whatever in between.  I'm guessing at 
present we'd be satisfied with just hand-coded YAML parameter sets.  
Maybe if we moved all platforms etc to Azure we'd like a generated 
matrix (either a manual script when the matrix definition is changed or 
in-build generation though that of course adds a bit of build time).  
Honestly, I would expect to usually want exceptions to any basic matrix 
cross-producting system so just defining it with regular Python code 
from the get-go has some upsides.

I need to tweak exttrs a bit and romp has a bit of a specialized purpose 
but they are the two examples I have.

https://github.com/altendky/exttr/blob/60aa5d6e9f04631b8e86552620f2d9cd2a0a3a04/azure_job_template.yml#L15-L43
https://github.com/altendky/romp/blob/0b05a7830ba1b02e503dd0004ffdce5e0ae3164f/azure-pipelines.yml#L43

After all that...  is this actually what we are talking about when it 
comes to matrixing?

Cheers,
-kyle



From chengi.liu.86 at gmail.com  Sun Jun 23 17:39:48 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Sun, 23 Jun 2019 19:39:48 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in twisted
Message-ID: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>

Hi,
 I tried posting on SO, but havent been able to solve the problem.
https://stackoverflow.com/questions/56696562/running-long-blocking-calculations-in-parallel-in-twisted

I have a very noob question.

I have a function, which takes a second or two to process (CPU bounded) and
then there is a for loop which runs that for loop.. Lets take this example

def func(x):
     return x*x

res = [func(i) for i in range(20)]


Now, think of func being something complicated.. But the above is the idea.

How do I run this function concurrently/ simultaneously using twisted
framework.
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190623/95b7e660/attachment-0002.html>

From dynamicgl at gmail.com  Sun Jun 23 23:28:11 2019
From: dynamicgl at gmail.com (Gelin Yan)
Date: Mon, 24 Jun 2019 13:28:11 +0800
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
Message-ID: <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>

Hi

   If your purpose is merely not to block the reactor, you can run your
code in a separate thread by using deferToThread. If you want to benefit
from multi cores, you may consider use https://github.com/twisted/ampoule
or other similar tools.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/ab53201d/attachment-0002.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 12:34:03 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 14:34:03 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
Message-ID: <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>

Thanks for pointing that out. Is there a dead simply example on how to
parallelize a function using ampoule.
Again, I have a function.. I have a for loop.. the function takes in an
argument from loop.. but the for loop is extremely parallelizable.

Also, I was going thru this awesome twisted tutorial from pycon 2107 (
https://www.youtube.com/watch?v=ztkBG4qLR_4)
I found couple of use features.
(defer.ensureDeferred
and

defer.gatherResults

)
Can these two be used instead of deferToThread.
When are the above defered used and when to use deferToThread.

Thanks for entertaining my dumb questions.

On Mon, Jun 24, 2019 at 1:28 AM Gelin Yan <dynamicgl at gmail.com> wrote:

> Hi
>
>    If your purpose is merely not to block the reactor, you can run your
> code in a separate thread by using deferToThread. If you want to benefit
> from multi cores, you may consider use https://github.com/twisted/ampoule
> or other similar tools.
>
> Regards
>
> gelin yan
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/055808b0/attachment-0002.html>

From moshez at zadka.club  Mon Jun 24 13:40:06 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 12:40:06 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
Message-ID: <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>

Hi Cheng,

deferToThread *returns* a deferred, and sends the work to a thread pool. The other two functions are useful for manipulating deferreds or other promises, but will not send work to a separate thread, so they cannot be used instead.

The simple example is pretty simple, it's pretty much

@inlineCallbacks
def some_function():
 d1 = deferToThread(cpu_heavy_square, 5)
 d2 = deferToThread(cpu_heavy_square, 6)
 five_squared, six_squared = yield gatherResults([d1, d2])
 returnValue(five_squared + six_squared)

Note that the tutorial below can be downloaded in notebook form from https://github.com/moshez/twisted-tutorial/blob/master/Twisted-Tutorial.ipynb

However, as explained, this will *defer to threads*, but will *not* use multiple cores, since Python is single-core. This is not entirely accurate: if your heavy functions are using numpy, numpy will release the GIL sometimes. Otherwise, you might want to use ampoule, but there are no easy tutorials for it that I'm aware of. You might want to consider something like dask + deferToThread for using multiple cores. See https://github.com/dask/dask-tutorial/blob/master/01_dask.delayed.ipynb for a simple example: you just plan your computation, and run the `compute` method in a thread. In this case, the only thing the thread is doing is avoiding blocking the reactor, while dask internally apportions computations.

(Thank you for the kind of words about the tutorial -- I'm one of the presenters.)

Moshe Z.

On Mon, Jun 24, 2019, at 11:34, Chengi Liu wrote:
> Thanks for pointing that out. Is there a dead simply example on how to parallelize a function using ampoule.
> Again, I have a function.. I have a for loop.. the function takes in an argument from loop.. but the for loop is extremely parallelizable.
> 
> Also, I was going thru this awesome twisted tutorial from pycon 2107 (https://www.youtube.com/watch?v=ztkBG4qLR_4)
> I found couple of use features.
> (defer.*ensureDeferred*
> and
> defer.*gatherResults*
> )
> Can these two be used instead of deferToThread.
> When are the above defered used and when to use deferToThread.
> 
> Thanks for entertaining my dumb questions.
> 
> On Mon, Jun 24, 2019 at 1:28 AM Gelin Yan <dynamicgl at gmail.com> wrote:
>> Hi
>> 
>>  If your purpose is merely not to block the reactor, you can run your code in a separate thread by using deferToThread. If you want to benefit from multi cores, you may consider use https://github.com/twisted/ampoule or other similar tools.
>> 
>> Regards
>> 
>> gelin yan
>> _______________________________________________
>>  Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/4462b994/attachment-0002.html>

From meejah at meejah.ca  Mon Jun 24 13:48:45 2019
From: meejah at meejah.ca (meejah)
Date: Mon, 24 Jun 2019 23:48:45 +0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com> (Moshe
 Zadka's message of "Mon, 24 Jun 2019 12:40:06 -0700")
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
Message-ID: <86r27iu5lu.fsf@atlantis.meejah.ca>


As a clarification to the above, parallelization of Python code across
cores is not unique to Twisted; all Python code has this same
limitation.

To use multiple cores with Python code, you need multiple Python
processes (as has been pointed out). One way to achieve this is to have
the multiple processes talking to each other (using some kind of RPC
protocol).

Another way is to simply spawn some number of subprocesses (and Twisted
has good support for running subprocesses). So, for example, if you
write a CLI tool that can be told to run "part of your problem" then
your parent Twisted process can simply spawn some number of those with
appropriate arguments to split up the problem (e.g. give each process 1
/ num_cores of the problem). This will incur some startup penalty as
each process starts up (especially if you're using PyPy, which you
should be if you care about speed) but is way simpler.

Obviously, an RPC-style communication system avoids the startup penalty
(but can be more complex).

-- 
meejah



From chengi.liu.86 at gmail.com  Mon Jun 24 17:26:33 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 19:26:33 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <86r27iu5lu.fsf@atlantis.meejah.ca>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
Message-ID: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>

Thanks Moshe & Meejah & Gelin for the suggestions and advice. This is super
helpful.

I think, I am able to move forward with this.
Let me just summarize this..
My usecase is.. fetch the data.. and then you assemble the data. Fetching
data is network bound, assembling data is like CPU bound.

Can you guys confirm if what I am doing makes sense?

def compute_heavy_function(x):
    return x*x

@defer.inlinecallbacks
def network_get(x):
     x = yield treq.get('http://localhost:8081')
   content = yield x.content()
   defer.returnValue(val)

@defer.inlinecallbacks
def twisted_do_your_magic():
     nets, cpus = [], []
      for i in range(10):
             t = defer.ensureDeferred(network_get(i))
              nets.append(t)
             d = threads.deferToThread(compute_heavy_function, i)
             cpus.append(d)

     cpu_res = yield defer.gatherResults(cpus)
  network_res = yield defer.gatherResults(nets)
  defer.returnValue({'cpu': cpu_res, 'network': network_res})

if __name__ == '__main__':
    twisted_do_your_magic()
        reactor.callLater(2, reactor.stop)
    reactor.run()


I ran it locally.. it seems to be running fine. But just want to make sure
that I got the concept on what to deferToThread & what to "ensureDeferred".
>From the SO, I got the impression that network based IO benefits from
`deferToThread` but from video tutorial.. I got the impression that
ensureDefer followed by gatherResults seems to be the right way to go?



Moshe.. One last question..
I was trying to follow the tutorial on video lecture..
But, I wasnt able to make it run on python3.


Say, I have an async function

async def foo():
     resp = await treq.get("localhost:1234/foo")
     content = await resp.content()
     return json.loads(content.decode("utf-8")

async def func():
     d1 = defer.ensureDeffered(foo())
     d2 = defer.ensureDeffered(foo())
     res = await defer.gatherResults([d1, d2])
     return res

if __name__ == '__main__'
     x = func()
     reactor.callLater(2, reactor.stop)
  reactor.run()

In this case, I get an error (x = func() in main code block)..
 RuntimeWarning: coroutine 'func' was never awaited
How do i fix this.

Again, thanks for all the help, support and advice in getting me started
with twisted.



On Mon, Jun 24, 2019 at 3:49 PM meejah <meejah at meejah.ca> wrote:

>
> As a clarification to the above, parallelization of Python code across
> cores is not unique to Twisted; all Python code has this same
> limitation.
>
> To use multiple cores with Python code, you need multiple Python
> processes (as has been pointed out). One way to achieve this is to have
> the multiple processes talking to each other (using some kind of RPC
> protocol).
>
> Another way is to simply spawn some number of subprocesses (and Twisted
> has good support for running subprocesses). So, for example, if you
> write a CLI tool that can be told to run "part of your problem" then
> your parent Twisted process can simply spawn some number of those with
> appropriate arguments to split up the problem (e.g. give each process 1
> / num_cores of the problem). This will incur some startup penalty as
> each process starts up (especially if you're using PyPy, which you
> should be if you care about speed) but is way simpler.
>
> Obviously, an RPC-style communication system avoids the startup penalty
> (but can be more complex).
>
> --
> meejah
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/38b7b3db/attachment-0002.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 17:27:21 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 19:27:21 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <CAONdThqmoNC8ar6MevfH4hNiqTRZvN4TbDAQ6Pmfs37=Pw7mKg@mail.gmail.com>

The stack overflow link:
https://stackoverflow.com/questions/56696562/running-long-blocking-calculations-in-parallel-in-twisted

On Mon, Jun 24, 2019 at 7:26 PM Chengi Liu <chengi.liu.86 at gmail.com> wrote:

> Thanks Moshe & Meejah & Gelin for the suggestions and advice. This is
> super helpful.
>
> I think, I am able to move forward with this.
> Let me just summarize this..
> My usecase is.. fetch the data.. and then you assemble the data. Fetching
> data is network bound, assembling data is like CPU bound.
>
> Can you guys confirm if what I am doing makes sense?
>
> def compute_heavy_function(x):
>     return x*x
>
> @defer.inlinecallbacks
> def network_get(x):
>      x = yield treq.get('http://localhost:8081')
>    content = yield x.content()
>    defer.returnValue(val)
>
> @defer.inlinecallbacks
> def twisted_do_your_magic():
>      nets, cpus = [], []
>       for i in range(10):
>              t = defer.ensureDeferred(network_get(i))
>               nets.append(t)
>              d = threads.deferToThread(compute_heavy_function, i)
>
>              cpus.append(d)
>
>      cpu_res = yield defer.gatherResults(cpus)
>   network_res = yield defer.gatherResults(nets)
>   defer.returnValue({'cpu': cpu_res, 'network': network_res})
>
> if __name__ == '__main__':
>     twisted_do_your_magic()
>         reactor.callLater(2, reactor.stop)
>     reactor.run()
>
>
> I ran it locally.. it seems to be running fine. But just want to make sure
> that I got the concept on what to deferToThread & what to "ensureDeferred".
> From the SO, I got the impression that network based IO benefits from
> `deferToThread` but from video tutorial.. I got the impression that
> ensureDefer followed by gatherResults seems to be the right way to go?
>
>
>
> Moshe.. One last question..
> I was trying to follow the tutorial on video lecture..
> But, I wasnt able to make it run on python3.
>
>
> Say, I have an async function
>
> async def foo():
>      resp = await treq.get("localhost:1234/foo")
>      content = await resp.content()
>      return json.loads(content.decode("utf-8")
>
> async def func():
>      d1 = defer.ensureDeffered(foo())
>      d2 = defer.ensureDeffered(foo())
>      res = await defer.gatherResults([d1, d2])
>      return res
>
> if __name__ == '__main__'
>      x = func()
>      reactor.callLater(2, reactor.stop)
>   reactor.run()
>
> In this case, I get an error (x = func() in main code block)..
>  RuntimeWarning: coroutine 'func' was never awaited
> How do i fix this.
>
> Again, thanks for all the help, support and advice in getting me started
> with twisted.
>
>
>
> On Mon, Jun 24, 2019 at 3:49 PM meejah <meejah at meejah.ca> wrote:
>
>>
>> As a clarification to the above, parallelization of Python code across
>> cores is not unique to Twisted; all Python code has this same
>> limitation.
>>
>> To use multiple cores with Python code, you need multiple Python
>> processes (as has been pointed out). One way to achieve this is to have
>> the multiple processes talking to each other (using some kind of RPC
>> protocol).
>>
>> Another way is to simply spawn some number of subprocesses (and Twisted
>> has good support for running subprocesses). So, for example, if you
>> write a CLI tool that can be told to run "part of your problem" then
>> your parent Twisted process can simply spawn some number of those with
>> appropriate arguments to split up the problem (e.g. give each process 1
>> / num_cores of the problem). This will incur some startup penalty as
>> each process starts up (especially if you're using PyPy, which you
>> should be if you care about speed) but is way simpler.
>>
>> Obviously, an RPC-style communication system avoids the startup penalty
>> (but can be more complex).
>>
>> --
>> meejah
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/17799ae9/attachment-0002.html>

From moshez at zadka.club  Mon Jun 24 17:37:26 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 16:37:26 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>

On Mon, Jun 24, 2019, at 16:27, Chengi Liu wrote:
>  cpu_res *= yield *defer.*gatherResults*(cpus)

Remember: This will not block the reactor (Good!) but will still limit you to one CPU core (in general, some caveats, but true.) If you are CPU bound, this is woefully underutilizing modern CPU resources (again, some caveats here).

> if __name__ == '__main__':

In general, the best thing to do is to to use twisted.internet.task.react for main. This would also solve the other problem you point out below.

https://twistedmatrix.com/documents/current/api/twisted.internet.task.html#react has a good example.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/f6f5b223/attachment-0002.html>

From chengi.liu.86 at gmail.com  Mon Jun 24 18:24:00 2019
From: chengi.liu.86 at gmail.com (Chengi Liu)
Date: Mon, 24 Jun 2019 20:24:00 -0400
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
 <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
Message-ID: <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>

I think I got around the second problem (thanks for sharing the react
documentation)

How do I use more multiple CPU cores? I guess atleast the fact that twisted
app wont be blocking is good, but what would be a good way to use multiple
cores.

I do see that meejah suggested using multiple python processes while
setting up the reactor?

My question is that.. say.. I set up multiple twisted based python
processes by leveraging the spawnProcess..

And then we setup a resource 'foo'.. When the request is hit to `foo` end
point... will the parallelization happen here..
say.. I have spawned 2 processes and one request came and hit the 'foo' end
point.. I am guessing.. the fact that 2 processes is running would help
responding to multiple requests simultaneously.

I think that level of parallelization is good and I will take it.. But
here.. what I want is... when you hit "foo".. then there is a function that
is parallelizable..
Like.. you hit "foo" endpoint.. I fetch data from somewhere.. (yay treq)..
and then there is a function that is called when we hit "foo" end point and
that function is extremely parallelizable over for loop. Now, what is great
is that with all your help, I am able to make this flow non-blocking. But,
would definitely like to exploit parallellism wherever feasible.



On Mon, Jun 24, 2019 at 7:37 PM Moshe Zadka <moshez at zadka.club> wrote:

> On Mon, Jun 24, 2019, at 16:27, Chengi Liu wrote:
>
>      cpu_res *= yield *defer.*gatherResults*(cpus)
>
>
> Remember: This will not block the reactor (Good!) but will still limit you
> to one CPU core (in general, some caveats, but true.) If you are CPU bound,
> this is woefully underutilizing modern CPU resources (again, some caveats
> here).
>
> if __name__ == '__main__':
>
>
> In general, the best thing to do is to to use twisted.internet.task.react
> for main. This would also solve the other problem you point out below.
>
>
> https://twistedmatrix.com/documents/current/api/twisted.internet.task.html#react has
> a good example.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/f5486a90/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Jun 24 22:08:27 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 24 Jun 2019 21:08:27 -0700
Subject: [Twisted-Python] Running CPU bound function concurrently in
 twisted
In-Reply-To: <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
Message-ID: <9B57A9CB-06D5-4830-9D8C-99155D2DED55@twistedmatrix.com>



> On Jun 24, 2019, at 4:26 PM, Chengi Liu <chengi.liu.86 at gmail.com> wrote:
> 
>              t = defer.ensureDeferred(network_get(i))

The meaning of "ensureDeferred" is, "ensure [that this thing, which may be a coroutine or Deferred, is a] Deferred".  You don't need to use it with things decorated with @inlineCallbacks, only with `async def`; it does nothing in your example.

We should really have a more explicit version of this, like a classmethod, Deferred.fromCoroutine(), that makes more sense in terms of what context you need to use it in.  (The naming here comes from asyncio.ensure_future, but that does have the somewhat more explicit loop.create_task to pair with it.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/bd43a02e/attachment-0002.html>

From moshez at zadka.club  Mon Jun 24 23:16:17 2019
From: moshez at zadka.club (Moshe Zadka)
Date: Mon, 24 Jun 2019 22:16:17 -0700
Subject: [Twisted-Python] 
 =?utf-8?q?Running_CPU_bound_function_concurrent?=
 =?utf-8?q?ly_in_twisted?=
In-Reply-To: <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>
References: <CAONdThrU8Qn6CcLu_uL8KfdSCs2-fDiYFdvpeWiQ_W8LfYu6iQ@mail.gmail.com>
 <CABkOF6QaFYU0UncY2u2Yfz7RtW=zg9mPdzqXEzGGt2O4TOqDRw@mail.gmail.com>
 <CAONdThriNuEVV7rc2OMmcHyiW9G+gumiC_Y5CXKoavmDJiquoA@mail.gmail.com>
 <9834d492-7399-4099-b807-255b68721e9b@www.fastmail.com>
 <86r27iu5lu.fsf@atlantis.meejah.ca>
 <CAONdThp7H8QSKHqTSqenE-m+CxjuZxYRUJUGh_Civewjz0-RAw@mail.gmail.com>
 <00cd45d4-4e25-41a2-aa61-e23e29af23e1@www.fastmail.com>
 <CAONdThq=B2javP6jKxKDAVxPOYYA71dTMs=vbWHpyU+3iE0O6A@mail.gmail.com>
Message-ID: <6c1f2b9f-2ca5-4fe9-9125-611146cba60c@www.fastmail.com>

On Mon, Jun 24, 2019, at 17:24, Chengi Liu wrote:
> How do I use more multiple CPU cores? I guess atleast the fact that twisted app wont be blocking is good, but what would be a good way to use multiple cores.

It *really* depends on what is the function that is CPU heavy, and why it is CPU heavy.
You have a lot of options here, and they're all subtly different.

But I'll start with noting that this is *no longer* a Twisted question: using multiple cores from Python is genuinely a problem for which there is no single good solution, just a number of different ones with trade-offs. As I mentioned, you can use `dask`. I think that might be the simplest solution for you -- dask has a lot of good tutorials, and if your only goal is using multiple CPUs, it has an "auto-setup". Another option is to see if you can use a library that natively releases the Global Interpreter Lock. If, for example, your function is numeric computation heavy, than numpy does release the GIL. You can also use ampoule, though the set-up becomes non-trivial -- you will need to either change your process initialization or maintain a process pool from the main process. Either option can become non-trivial fast. Finally, the option of writing the CPU heavy code in Cython, and then releasing the GIL explicitly around the area it is not needed, exists.

To sum up:

* Dask
* Something that releases the GIL, like numpy
* Setting up an ampoule process pool
* Move CPU heavy logic to Cython, and release GIL explicitly

As I said, none of these options are really Twisted-related (the only one vaguely connected is the ampoule one, but even then, the fact that you'll use Twisted to manage the pool is incidental). There are even more exotic options, of course, but I think this e-mail might already be confusing enough.

Moshe Z.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190624/67bc2496/attachment-0002.html>

From wk80333 at gmail.com  Wed Jun 26 00:48:24 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Tue, 25 Jun 2019 23:48:24 -0700
Subject: [Twisted-Python] Twisted tips for designing highly concurrent
 twisted REST API
Message-ID: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>

Hello folks,
  I recently stumbled upon twisted and was wondering if it could suit my
needs. On one hand, I want to use python but on another hand there are all
these scalability concerns with this language so, I though I would pick the
brains of the community. So.. a flask based app would look something like
this.

similar_types = ['foo', 'bar', 'baz']


def long_computation(rec_type):
     # some long computation
     return recs

@app.route('/fetch_similar_users/<user_id>'
def fetch_similar_users(user_id)
        r = json.loads(requests.get('url/to/fetch/%s'%user_id).text)
        recs = {}
        for stype in similar_types:
             recs[stype] = long_computation(rec_type)
       return recs



Now, I tried to "twistify" but it failed.

@defer.inlinecallbacks

def long_computation(rec_type):
     # some long computation
     *defer.returnValue(recs)*

@defer.inlinecallbacks
def fetch_data(user_id):
        r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
     defer.returnValue(r)


@defer.inlinecallbacks
def fetch_recs(user_id):
       data = yield fetch_data(user_id)
        recs = {}
       for stype in similar_types:
            d = defer.ToThread(fetch_data, *(stype))
           rec = yield d
           recs[stype] = rec
     defer.returnValue(recs)



I wrapped all the above in twisted render_Get method.. but then I did a
load test with locust (https://docs.locust.io/en/latest/what-is-locust.html)
framework.
It choked. As the time progressed, the response time increased.
I am guessing, things are still blocking.

Can you please help me look into the right place. Why exactly am I seeing
increase in response time as the time progresses. I am guessing things are
still working in "blocking" fashion but i thought the above should run
things in async.
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190625/95941cff/attachment-0002.html>

From wk80333 at gmail.com  Wed Jun 26 00:50:57 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Tue, 25 Jun 2019 23:50:57 -0700
Subject: [Twisted-Python] Twisted tips for designing highly concurrent
 twisted REST API
In-Reply-To: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>
References: <CAJuJkHMZPUu0gNi=XcFyUNpGLrsJPMifgb24_14i0e=caa1hnA@mail.gmail.com>
Message-ID: <CAJuJkHN6ODsRZwBz4THpY23ZkcaMZ9hpnNCwDcQx4w94bHuOZA@mail.gmail.com>

Sorry I had a typo in twisted program

@defer.inlinecallbacks

def long_computation(rec_type, data):
     # some long computation
     *defer.returnValue(recs)*

@defer.inlinecallbacks
def fetch_data(user_id):
        r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
     defer.returnValue(r)


@defer.inlinecallbacks
def fetch_recs(user_id):
       data = yield fetch_data(user_id)
        recs = {}
       for stype in similar_types:
            *d = defer.ToThread(long_computation, *(stype, data)) // typo
was here*
           rec = yield d
           recs[stype] = rec
     defer.returnValue(recs)


On Tue, Jun 25, 2019 at 11:48 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hello folks,
>   I recently stumbled upon twisted and was wondering if it could suit my
> needs. On one hand, I want to use python but on another hand there are all
> these scalability concerns with this language so, I though I would pick the
> brains of the community. So.. a flask based app would look something like
> this.
>
> similar_types = ['foo', 'bar', 'baz']
>
>
> def long_computation(rec_type):
>      # some long computation
>      return recs
>
> @app.route('/fetch_similar_users/<user_id>'
> def fetch_similar_users(user_id)
>         r = json.loads(requests.get('url/to/fetch/%s'%user_id).text)
>         recs = {}
>         for stype in similar_types:
>              recs[stype] = long_computation(rec_type)
>        return recs
>
>
>
> Now, I tried to "twistify" but it failed.
>
> @defer.inlinecallbacks
>
> def long_computation(rec_type):
>      # some long computation
>      *defer.returnValue(recs)*
>
> @defer.inlinecallbacks
> def fetch_data(user_id):
>         r = yieldjson.loads(requests.get('url/to/fetch/%s'%user_id).text)
>      defer.returnValue(r)
>
>
> @defer.inlinecallbacks
> def fetch_recs(user_id):
>        data = yield fetch_data(user_id)
>         recs = {}
>        for stype in similar_types:
>             d = defer.ToThread(fetch_data, *(stype))
>            rec = yield d
>            recs[stype] = rec
>      defer.returnValue(recs)
>
>
>
> I wrapped all the above in twisted render_Get method.. but then I did a
> load test with locust (
> https://docs.locust.io/en/latest/what-is-locust.html) framework.
> It choked. As the time progressed, the response time increased.
> I am guessing, things are still blocking.
>
> Can you please help me look into the right place. Why exactly am I seeing
> increase in response time as the time progresses. I am guessing things are
> still working in "blocking" fashion but i thought the above should run
> things in async.
> Thanks
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190625/608e78e2/attachment-0002.html>

From barry.scott at forcepoint.com  Wed Jun 26 09:14:46 2019
From: barry.scott at forcepoint.com (Scott, Barry)
Date: Wed, 26 Jun 2019 15:14:46 +0000
Subject: [Twisted-Python] TB in tls.py
Message-ID: <4281881.qKIB4Hqnya@barry-scott-desktop>

I'm see this TB often and I'm wondering how to fix it.

  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 
902, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2333, in forceAbortClient
    self.transport.abortConnection()
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/tls.py", line 
435, in abortConnection
    self._shutdownTLS()
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/tls.py", line 
338, in _shutdownTLS
    shutdownSuccess = self._tlsConnection.shutdown()
exceptions.AttributeError: 'NoneType' object has no attribute 'shutdown'

I can see in TLSMemoryBIOProtocol.connectionLost that _tlsConnection
is set to None. Which I think is racing with the call later that calls 
forceAbortClient().

If that is the case then I think this is a possible fix?
Thoughts?

--- twisted-upstream/src/twisted/protocols/tls.py	2019-06-26 
16:10:54.329822916 +0100
+++ _diff_.tmp	2019-06-26 16:12:17.992418082 +0100
@@ -334,7 +334,7 @@
         Initiate, or reply to, the shutdown handshake of the TLS layer.
         """
         try:
-            shutdownSuccess = self._tlsConnection.shutdown()
+            shutdownSuccess = self._tlsConnection is not None and 
self._tlsConnection.shutdown()
         except Error:
             # Mid-handshake, a call to shutdown() can result in a
             # WantWantReadError, or rather an SSL_ERR_WANT_READ; but 
pyOpenSSL

Barry





From glyph at twistedmatrix.com  Thu Jun 27 01:40:48 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Jun 2019 00:40:48 -0700
Subject: [Twisted-Python] TB in tls.py
In-Reply-To: <4281881.qKIB4Hqnya@barry-scott-desktop>
References: <4281881.qKIB4Hqnya@barry-scott-desktop>
Message-ID: <CA13C887-CAFA-4E18-AFE1-F5EF471E66B4@twistedmatrix.com>



> On Jun 26, 2019, at 8:14 AM, Scott, Barry <barry.scott at forcepoint.com> wrote:
> 
> I'm see this TB often and I'm wondering how to fix it.

Looks like there's already been some investigation / discussion of this issue :-).

https://twistedmatrix.com/trac/ticket/9462 <https://twistedmatrix.com/trac/ticket/9462>

Possibly illuminating to review this, and the linked tickets?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190627/125f2008/attachment-0002.html>

From barry.scott at forcepoint.com  Thu Jun 27 10:58:33 2019
From: barry.scott at forcepoint.com (Scott, Barry)
Date: Thu, 27 Jun 2019 16:58:33 +0000
Subject: [Twisted-Python] TB calling _IdentityTransferDecoder after decode
 finished.
Message-ID: <4341558.FJlWP1KbY8@barry-scott-desktop>

I'm in the middle of trying to figure what causes this TB.
Has this been seen before?

  File "/usr/local/lib/python2.7/site-packages/twisted/internet/posixbase.py", 
line 614, in _doReadOrWrite
    why = selectable.doRead()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/unix.py", line 
191, in doRead
    return self._dataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/tcp.py", line 
249, in _dataReceived
    rval = self.protocol.dataReceived(data)
  File "/opt/webdefence/lib/filtering_proxy_listener.py", line 144, in 
dataReceived
    return http.HTTPChannel.dataReceived(self, data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2211, in dataReceived
    return basic.LineReceiver.dataReceived(self, data)
  File "/usr/local/lib/python2.7/site-packages/twisted/protocols/basic.py", 
line 579, in dataReceived
    why = self.rawDataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
2218, in rawDataReceived
    self._transferDecoder.dataReceived(data)
  File "/usr/local/lib/python2.7/site-packages/twisted/web/http.py", line 
1681, in dataReceived
    "_IdentityTransferDecoder cannot decode data after finishing")
exceptions.RuntimeError: _IdentityTransferDecoder cannot decode data after 
finishing

The code at filtering_proxy_listener.py:144  is keeping track of the received 
data size and then calls into the base class dataReceived().

Barry





From trac at twistedmatrix.com  Sun Jun 30 00:05:17 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Jun 2019 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1561874717.96.8880754043323001554@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190630/b202b33c/attachment-0002.html>

