From glyph at twistedmatrix.com  Mon Apr  1 03:01:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:01:51 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA440C7.5020501@itamarst.org>
References: <3CA440C7.5020501@itamarst.org>
Message-ID: <1017477341.333.27.camel@janus>

On Fri, 2002-03-29 at 04:24, Itamar Shtull-Trauring wrote:
> Now you can configure your TAP files through the web!

Nifty, but not quite in line with the vision I have for the way Twisted
ought to work.  It raises an interesting problem though because I can't
figure out how I'd implement such functionality, and I think it's useful
functionality to have :-).

The goal of the .tap/twistd system is to separate the configuration of
the application objects from the way they are run.  The goal of this
separation is to run the same TAP file with multiple "loader" programs,
(theoretically) one for each platform/mainloop.  A development server
might run in a GTK mainloop that instruments various things, to allow
you to view what ports are open, and to where.  The Win32 loader would
allow you to load the same config through an NT Service GUI, or a system
tray icon, depending on whether you purchased the "Duplo" or "Lego"
version of the win32 API.

I can't think of a general solution to the "run a tool which requires
starting up a Twisted service, but also requires arguments" problem, but
it might be useful for each loader to have a "run a coil on this
Application object" option.  (Keep in mind also that it would be neat to
have certain loaders be able to run multiple concurrent application
objects)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020401/b5e74f6b/attachment.pgp 

From glyph at twistedmatrix.com  Mon Apr  1 03:01:50 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:01:50 -0600
Subject: [Twisted-Python] More coil TODOs
In-Reply-To: <3CA445CC.8070804@itamarst.org>
References: <3CA445CC.8070804@itamarst.org>
Message-ID: <1017476432.333.11.camel@janus>

On Fri, 2002-03-29 at 04:45, Itamar Shtull-Trauring wrote:
> == Make ports visible ==
> Currently, tcp/udp/ssl are treated as collections of protocol factories. I 
> am going to change this to collections of Ports, so that you can configure 
> interfaces to listen on, context factories for SSL, etc. The protocol 
> factory will just be another attribute.

> This should have no effect on people who are coiling their apps.

Does this affect the API?  I don't want to have listenTCP et. al. taking
something other than a factory (might as well go back to addPort, then).

> == Make old TAPs work ==
> The refactor broke old taps - they can no longer be loaded since they refer 
> to non-existence classes in twisted.internet.app.
> 
> This can probably be easily solved (make a dummy PortsCollection class and 
> delete the attributes of the loaded application that refer to it.)

Please consider this *really* high-priority; I hate to do releases where
previous-version TAP loading is broken.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020401/1505e418/attachment.pgp 

From glyph at twistedmatrix.com  Mon Apr  1 03:10:14 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:10:14 -0600
Subject: [Twisted-Python] New Member
In-Reply-To: <200203270911.KAA29726@osona.apb.es>
References: <200203270911.KAA29726@osona.apb.es>
Message-ID: <1017648614.659.1.camel@janus>

It sounds like you want some combination of twisted.internet.process and
twisted.python.delay.  Without knowing more about the specifics of your
application it will be tough to help you.

It's not clear, for example, what you mean by "on demand"... through a
web interface?  A GUI?  A wearable device?

On Wed, 2002-03-27 at 03:11, Joan Torres wrote:
> Hi,
>  My name is Joan Torres, I'm working in Port of Barcelona (spain), and 
>  I'm interested in learning more about how to use Twisted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020401/1490ac6b/attachment.pgp 

From twisted at itamarst.org  Mon Apr  1 04:05:28 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 12:05:28 +0300
Subject: [Twisted-Python] More coil TODOs
References: <3CA445CC.8070804@itamarst.org> <1017476432.333.11.camel@janus>
Message-ID: <3CA822D8.1060804@itamarst.org>

Glyph Lefkowitz wrote:

>>This should have no effect on people who are coiling their apps.
>>
> 
> Does this affect the API?  I don't want to have listenTCP et. al. taking
> something other than a factory (might as well go back to addPort, then).

No, it won't. I'd just be changing the Collections attached to an
Application by the Configurator. This is why it's good that coil is no
seperate - no need to mess with classes. And no TAP backwards compatability
issues either ;)





From twisted at itamarst.org  Mon Apr  1 04:09:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 12:09:40 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>
Message-ID: <3CA823D4.7050002@itamarst.org>

Glyph Lefkowitz wrote:

> The goal of the .tap/twistd system is to separate the configuration of
> the application objects from the way they are run.

So? when I use the coil app I do not run the .tap, I just configure it.

When I use the twistd app I run the .tap.

What is the issue?





From glyph at twistedmatrix.com  Mon Apr  1 04:15:25 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 03:15:25 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA823D4.7050002@itamarst.org>
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>
	 <3CA823D4.7050002@itamarst.org>
Message-ID: <1017652525.658.31.camel@janus>

On Mon, 2002-04-01 at 03:09, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > The goal of the .tap/twistd system is to separate the configuration of
> > the application objects from the way they are run.
> 
> So? when I use the coil app I do not run the .tap, I just configure it.
> 
> When I use the twistd app I run the .tap.
> 
> What is the issue?

The coil app is an app by itself, right?  And *that* app runs.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020401/d451f1c9/attachment.pgp 

From twisted at itamarst.org  Mon Apr  1 05:18:49 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 13:18:49 +0300
Subject: [Twisted-Python] ANN: Twisted 0.16.0
Message-ID: <3CA83409.8080401@itamarst.org>

Twisted is an event-based framework for internet applications. For more
information, visit:

    http://www.twistedmatrix.com

or join the list at:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Twisted joins the fight against Software Piracy
===============================================

The main focus of this release is our new licensing scheme. The Business
Software Alliance may have put it best, in their page on anti-piracy
(http://www.bsa.org/usa/antipiracy/):

"Software pirates not only steal from the companies that make the software,
but with less money for research and development of new software, all users
are hurt.  That's why all software piracy - even one copy you make for a
friend, is illegal."

Software piracy is a serious crime, and one that the Open Source community
has been remarkably lax in pursuing and protecting against.  This is why
Twisted Matrix Laboratories is taking the forefront in Open Source software
registration technology.

In order to do your part to prevent the tragedy of unregistered, unlicensed
software, all you need to do is go to http://www.twistedmatrix.com/license
and enter your user information to obtain a license key.  You can provide us
with as much or as little information as you like!

For more information on how Twisted helps you run licensed, unpirated
Open-Source software, visit:
http://twistedmatrix.com/documents/howto/register


What's New in 0.16.0
====================

- Added Qt event loop support

- FTP client protocol support

- Reworked coil - a web-based configuration system for Twisted servers

- Win32 event loop can now run subprocesses

- Automatic log rotation for servers (and USR1 signal for manual rotation)

- Improved support for registering shutdown methods

- Better XML-RPC integration

- Bug fixes, small feature improvements, and more.


What is Twisted?
================

Twisted is an event-based framework for internet applications.  It includes
a web server, a telnet server, a multiplayer RPG engine, a generic client
and server for remote object access, and APIs for creating new protocols and
services. Twisted supports integration of the Tk, GTK+, Qt or wxPython event
loop with its main event loop. The Win32 event loop is also supported, as is
basic support for running servers on top of Jython.

Twisted currently supports the following protocols, all implemented in pure
python, most of them as both servers and clients:

     - FTP
     - HTTP
     - SOCKSv4
     - SMTP
     - IRC
     - telnet
     - POP3
     - AOL's instant messaging TOC
     - OSCAR, used by AOL-IM as well as ICQ (client only)
     - DNS
     - LDAP (client only)
     - finger
     - Echo, discard, chargen and friends
     - Twisted Perspective Broker

For more information, visit http://www.twistedmatrix.com, or join the list
at http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Mon Apr  1 05:22:36 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 13:22:36 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus>
Message-ID: <3CA834EC.1020206@itamarst.org>

Glyph Lefkowitz wrote:

> The coil app is an app by itself, right?  And *that* app runs.

Yes, but it's a different one than the one that being configured. Again, 
what is the issue?




From glyph at twistedmatrix.com  Mon Apr  1 05:38:29 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 04:38:29 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA834EC.1020206@itamarst.org>
References: <3CA440C7.5020501@itamarst.org>
	<1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org>
	<1017652525.658.31.camel@janus>  <3CA834EC.1020206@itamarst.org>
Message-ID: <1017657509.659.33.camel@janus>

The issue is that there's no mechanism for the user to select which
mainloop the configuration app should be using.  The default mainloop
might not work on your platform (java, for example)

On Mon, 2002-04-01 at 04:22, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > The coil app is an app by itself, right?  And *that* app runs.
> 
> Yes, but it's a different one than the one that being configured. Again, 
> what is the issue?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020401/c2406ab4/attachment.pgp 

From twisted at itamarst.org  Mon Apr  1 07:08:58 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 15:08:58 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org>	<1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org>	<1017652525.658.31.camel@janus>  <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus>
Message-ID: <3CA84DDA.6010008@itamarst.org>

Glyph Lefkowitz wrote:

> The issue is that there's no mechanism for the user to select which
> mainloop the configuration app should be using.  The default mainloop
> might not work on your platform (java, for example)

Ah. Well, coil could be turned into a python module, together with a shell 
script/.bat that uses twistd to run it. Once you do the promised event loop 
refactor, that is. :)

What module organization should that be? Tv suggested 
twisted.internet.eventloops.{gtk, select, poll, ...}

The current system is icky. ingtkernet is *such* a bad name, and the others 
aren't any better.





From andrew-twisted at puzzling.org  Mon Apr  1 23:39:13 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 14:39:13 +1000
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA84DDA.6010008@itamarst.org>
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus> <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus> <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus> <3CA84DDA.6010008@itamarst.org>
Message-ID: <20020402043913.GA2072@ritsuko.xware.cx>

On Mon, Apr 01, 2002 at 03:08:58PM +0300, Itamar Shtull-Trauring wrote:
> 
> Ah. Well, coil could be turned into a python module, together with a shell 
> script/.bat that uses twistd to run it. Once you do the promised event loop 
> refactor, that is. :)
> 
> What module organization should that be? Tv suggested 
> twisted.internet.eventloops.{gtk, select, poll, ...}

I like the idea of calling them "eventloops", or basically anything other
than "main".  "main" tends to clash with functions in my modules, and
"eventloop" gives a clearer idea of its purpose.

Tv's suggestion looks reasonable to me... although aren't there really two
types of modules being grouped together there:
  1) Alternatives to the select-based loop (poll, win32)
  2) Add-ons that integrate Twisted's loop with other loops, e.g. gtk,
     Tk, etc...

Or do the 2nd type all assume a select-based loop?  If that's the case, I'd 
suggest they are generalised (it'd be nice for Tk to work with the win32
loop).

I guess then I'd be proposing something like:
  * twisted.internet.eventloops.{select, poll, win32}
  * twisted.internet.eventloops.addons.{gtk, tk, wx, asyncore?, ...}

I'm not really thrilled with the name "addons", but you get the idea.

-Andrew.




From twisted at itamarst.org  Tue Apr  2 04:52:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 11:52:15 +0200
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus> <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus> <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus> <3CA84DDA.6010008@itamarst.org> <20020402043913.GA2072@ritsuko.xware.cx>
Message-ID: <3CA97F4F.6060101@itamarst.org>

Andrew Bennetts wrote:

> Tv's suggestion looks reasonable to me... although aren't there really two
> types of modules being grouped together there:
>   1) Alternatives to the select-based loop (poll, win32)
>   2) Add-ons that integrate Twisted's loop with other loops, e.g. gtk,
>      Tk, etc...
> 
> Or do the 2nd type all assume a select-based loop?  If that's the case, I'd 
> suggest they are generalised (it'd be nice for Tk to work with the win32
> loop)
Actually, it's more complex:

1a) There's select(), poll() or win32
1b) GTK+ and Qt also replace the event loop, so they are in category (1)
2) wxPython can integrate with anything in (1a), I think
3) Jython totally replaces everything, including the TCP support

The Tk event loop is in category (2) I *think*.




From andrew-twisted at puzzling.org  Tue Apr  2 04:52:31 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 19:52:31 +1000
Subject: [Twisted-Python] Oddities in calling loseConnection from tcp.Port.approveConnection
Message-ID: <20020402095231.GA6286@ritsuko.xware.cx>

Ok, so I know approveConnection is probably going to be removed anyway,
but...

If I have a tcp.Port subclass which calls self.loseConnection() in
approveConnection (e.g. so that it will only accept one connection), then I
get two errors.  First is:
Traceback (most recent call last):
  File "w:\andrew\cvs\Twisted\twisted\internet\main.py", line 206, in doSelect
    if not handfn or handfn() == -1:
  File "w:\andrew\cvs\Twisted\twisted\internet\abstract.py", line 244, in fileno
    raise NotImplementedError(str(self.__class__)+' has no fileno method')
exceptions.NotImplementedError: twisted.protocols.ftp.FTPDataPort has no fileno method

I think the fix for this might be:
diff -u -r1.65 main.py
--- twisted/internet/main.py    1 Apr 2002 06:35:16 -0000       1.65
+++ twisted/internet/main.py    2 Apr 2002 09:41:07 -0000
@@ -203,7 +203,10 @@
             try:
                 why = getattr(selectable, method)()
                 handfn = getattr(selectable, 'fileno', None)
-                if not handfn or handfn() == -1:
+                try:
+                    if not handfn or handfn() == -1:
+                        why = CONNECTION_LOST
+                except NotImplementedError:
                     why = CONNECTION_LOST
             except:
                 log.deferr()

The second error is:
Traceback (most recent call last):
  File "w:\andrew\cvs\Twisted\twisted\internet\main.py", line 215, in doSelect
    selectable.connectionLost()
  File "w:\andrew\cvs\Twisted\twisted\internet\tcp.py", line 476, in connectionLost
    self.socket.close()
exceptions.AttributeError: FTPDataPort instance has no attribute 'socket'

This appears to be because connectionLost is called twice; once when I
originally called loseConnection and again from the select loop.  I'm not
sure what the correct fix is... I don't understand why the select loop is
calling it because removeReader is calling in loseConnection, but perhaps
connectionLost should check self.connected and gracefully deal with being
called twice?

I'll probably be doing my loseConnection from buildProtocol instead of
approveConnection soon, but I suspect that I'll hit these problems there as
well.

-Andrew.




From andrew-twisted at puzzling.org  Tue Apr  2 05:46:57 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 20:46:57 +1000
Subject: [Twisted-Python] Oddities in calling loseConnection from tcp.Port.approveConnection
In-Reply-To: <20020402095231.GA6286@ritsuko.xware.cx>
References: <20020402095231.GA6286@ritsuko.xware.cx>
Message-ID: <20020402104657.GA7759@ritsuko.xware.cx>

On Tue, Apr 02, 2002 at 07:52:31PM +1000, I wrote:
> 
> I'll probably be doing my loseConnection from buildProtocol instead of
> approveConnection soon, but I suspect that I'll hit these problems there as
> well.

This is just to confirm that it still happens when I do loseConnection from 
within buildProtocol of my Factory, which is what you'd expect, looking at 
the code for tcp.Port...

-Andrew.





From twisted at itamarst.org  Tue Apr  2 12:20:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 19:20:12 +0200
Subject: [Twisted-Python] Re: ANN: Twisted 0.16.0
References: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com>
Message-ID: <3CA9E84C.7010601@itamarst.org>

Michal Wallace wrote:

> Okay, I see this was posted yesterday (April Fools day), but
> the site's still up today. 
> 
> Is this for real?

bin/twistd can load license files, yes. If you don't have one it prints 
a nice long error message (which I removed in CVS, so it won't be in 
0.16.1).

Glyph has some insane reason he wants it to be in (rumor has it a rogue 
Pavlovian has linked the registration form to a Certain Person's cage, 
giving him a food pellet every time someone registers. Try not to 
overfeed him.)

> If so, why? How can piracy be a problem for an open source
> project?  How does this licensing scheme prevent it? 

Well, let's quote one the BSA's latest press release:

"""
Washington, DC (March 21) ?In its ongoing effort to protect consumers 
from Internet software pirates and support a safe, secure and legal 
online community, the Business Software Alliance (BSA) announced that 
last month it executed three unannounced court-ordered seizures on 
individuals whom BSA investigated for selling unlicensed software out of 
their homes in Kentucky, Missouri and Pennsylvania. Under the 
supervision of the U.S. Marshals, BSA carried away computers, equipment 
and CDs used in the mail-order operations.

...

The following are helpful tips on safe shopping for software online:

  * Trust Your Instincts -- Whether it is being sold as new or used,
    if a price for software seems too good to be true, it probably is.

...
"""

Now, you wouldn't want any Sikrit PSU Agents showing up at your house, 
asking to see *your* Twisted license, and not being able to show one, 
now would you? And do you really trust a bunch of people giving away 
software for FREE?




From kuran42 at yahoo.com  Tue Apr  2 12:02:56 2002
From: kuran42 at yahoo.com (Jp Calderone)
Date: Tue, 02 Apr 2002 12:02:56 -0500
Subject: [Twisted-Python] OT, sorry [was: Re: ANN: Twisted 0.16.0]
References: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com> <3CA9E84C.7010601@itamarst.org>
Message-ID: <3CA9E440.3010002@yahoo.com>

My country makes me sick.

Itamar Shtull-Trauring wrote:

>
> Well, let's quote one the BSA's latest press release:
>
> """
> Washington, DC (March 21) ?In its ongoing effort to protect consumers 
> from Internet software pirates and support a safe, secure and legal 
> online community, the Business Software Alliance (BSA) announced that 
> last month it executed three unannounced court-ordered seizures on 
> individuals whom BSA investigated for selling unlicensed software out 
> of their homes in Kentucky, Missouri and Pennsylvania. Under the 
> supervision of the U.S. Marshals, BSA carried away computers, 
> equipment and CDs used in the mail-order operations.
>
> ...
>
> The following are helpful tips on safe shopping for software online:
>
>  * Trust Your Instincts -- Whether it is being sold as new or used,
>    if a price for software seems too good to be true, it probably is.
>
> ...
> """






From sabren at manifestation.com  Tue Apr  2 10:55:58 2002
From: sabren at manifestation.com (Michal Wallace)
Date: Tue, 2 Apr 2002 10:55:58 -0500 (EST)
Subject: [Twisted-Python] Re: ANN: Twisted 0.16.0
In-Reply-To: <3CA83409.8080401@itamarst.org>
Message-ID: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com>

On Mon, 1 Apr 2002, Itamar Shtull-Trauring wrote:
 
> For more information on how Twisted helps you run licensed, unpirated
> Open-Source software, visit:
> http://twistedmatrix.com/documents/howto/register

Okay, I see this was posted yesterday (April Fools day), but
the site's still up today. 

Is this for real?

If so, why? How can piracy be a problem for an open source
project?  How does this licensing scheme prevent it? 

Cheers,

- Michal   http://www.sabren.net/   sabren at manifestation.com 
------------------------------------------------------------
Give your ideas the perfect home: http://www.cornerhost.com/
 cvs - weblogs - php - linux shell - perl/python/cgi - java
------------------------------------------------------------




From mattcampbell at pobox.com  Tue Apr  2 14:29:40 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 2 Apr 2002 13:29:40 -0600
Subject: [Twisted-Python] The Twisted registration form
Message-ID: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com>

I noticed that the URL to which the Twisted registration form is
submitted, http://www.twistedmatrix.com/license/twisted-registration,
has no extension at the end.  So is this form handled by a .epy
script?  If not, how was the form handler registered with the Web
server?  THanks.
--
Matt Campbell
E-mail and MSN Messenger Service:  mattcampbell at pobox.com
Web site:  http://pobox.com/~mattcampbell/




From twisted at itamarst.org  Tue Apr  2 15:34:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 22:34:42 +0200
Subject: [Twisted-Python] The Twisted registration form
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com>
Message-ID: <3CAA15E2.2060309@itamarst.org>

Matt Campbell wrote:

> I noticed that the URL to which the Twisted registration form is
> submitted, http://www.twistedmatrix.com/license/twisted-registration,
> has no extension at the end.  So is this form handled by a .epy
> script?  If not, how was the form handler registered with the Web
> server?  THanks.

The code is in doc/examples/regserver.py, something like that (in 0.16.0
tarball). Either uses twisted.web.widgets, or it's a custom
twisted.web.resource.Resource, I don't remember.





From mattcampbell at pobox.com  Tue Apr  2 14:45:53 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 2 Apr 2002 13:45:53 -0600
Subject: [Twisted-Python] The Twisted registration form
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org>
Message-ID: <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>

I see that the RegServer class is a subclass of Form, which is a type
of widget.  But how does one add this widget to a Web server which
seems to use primarily static content?  Is the widget instantiated and
called from a .epy script, or is some other technique used?  Thanks.

Itamar wrote:
> The code is in doc/examples/regserver.py, something like that (in
0.16.0
> tarball). Either uses twisted.web.widgets, or it's a custom
> twisted.web.resource.Resource, I don't remember.




From carmstro at twistedmatrix.com  Tue Apr  2 14:54:14 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 2 Apr 2002 13:54:14 -0600
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>
Message-ID: <20020402195414.GA31050@twistedmatrix.com>

On Tue, Apr 02, 2002 at 01:45:53PM -0600, Matt Campbell wrote:
> I see that the RegServer class is a subclass of Form, which is a type
> of widget.  But how does one add this widget to a Web server which
> seems to use primarily static content?  Is the widget instantiated and
> called from a .epy script, or is some other technique used?  Thanks.

It's a pain to deploy Widgets-based apps as of yet. We're planning on
doing something that will allow you to just throw any Resource-defining
modules in a directory and have it show up on your server, but we haven't
figured out exactly how it will work yet.

Right now you either have to be able to instantiate a widget through
telnet or manhole interfaces on an already-running server, or create
your own .tac file that instantiates a web.server.Site with a Widget in it.



From cpaul at telemetrybox.org  Tue Apr  2 15:15:58 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 2 Apr 2002 10:15:58 -1000
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <20020402195414.GA31050@twistedmatrix.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com> <20020402195414.GA31050@twistedmatrix.com>
Message-ID: <20020402101558.A19217@Skaffen.pdchawaii.com>

On Tue, Apr 02, 2002 at 01:54:14PM -0600, Chris Armstrong wrote:
> It's a pain to deploy Widgets-based apps as of yet. We're planning on
> doing something that will allow you to just throw any Resource-defining
> modules in a directory and have it show up on your server, but we haven't
> figured out exactly how it will work yet.
> 
> Right now you either have to be able to instantiate a widget through
> telnet or manhole interfaces on an already-running server, or create
> your own .tac file that instantiates a web.server.Site with a Widget in it.

Can someone show an example of a .tac file that does just that?



From carmstro at twistedmatrix.com  Tue Apr  2 15:30:46 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 2 Apr 2002 14:30:46 -0600
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <20020402101558.A19217@Skaffen.pdchawaii.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com> <20020402195414.GA31050@twistedmatrix.com> <20020402101558.A19217@Skaffen.pdchawaii.com>
Message-ID: <20020402203045.GA31989@twistedmatrix.com>

On Tue, Apr 02, 2002 at 10:15:58AM -1000, cpaul at telemetrybox.org wrote:
> On Tue, Apr 02, 2002 at 01:54:14PM -0600, Chris Armstrong wrote:
> > It's a pain to deploy Widgets-based apps as of yet. We're planning on
> > doing something that will allow you to just throw any Resource-defining
> > modules in a directory and have it show up on your server, but we haven't
> > figured out exactly how it will work yet.
> > 
> > Right now you either have to be able to instantiate a widget through
> > telnet or manhole interfaces on an already-running server, or create
> > your own .tac file that instantiates a web.server.Site with a Widget in it.
> 
> Can someone show an example of a .tac file that does just that?


here's a simple one off the top of my head:

-- snip --

from twisted.internet import app
from twisted.web import server

import my_web_app

application = app.Application("my_web_app")
s = server.Site(my_web_app.MyGadget())
application.listenTCP(80, s)

-- snip --

You can also look in Twisted/doc/examples/; for example, bugs.tac is a
webwidgets app.



From andrew-twisted at puzzling.org  Thu Apr  4 19:06:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Apr 2002 10:06:46 +1000
Subject: [Twisted-Python] Deferreds
Message-ID: <20020405000646.GA472@frobozz.local>

I've been thinking about Deferreds lately, and I think they are lacking
something that I would find very handy.

Chaining success and error callbacks is very handy, but occasionally I find
myself having to do:

    deferred = obj.runAsynchronousThing(...)
    deferred.addCallbacks(success, error)
    # Ensure that we close the objectoid
    deferred.addCallbacks(lambda x, obj=obj: obj.close(),
                          lambda x, obj=obj: obj.close())
    
It'd be nice to have a deferred equivalent of "finally", so that you could
simply do this instead:

    deferred = obj.runAsynchronousThing(...)
    deferred.addCallbacks(success, error)
    # Ensure that we close the objectoid
    deferred.finally(obj.close)

You could of course register multiple final callbacks, all of which take no
arguments.

Would other people find this useful?

On a related note, I recall an IRC discussion where a few of us thought that
Deferred.callback(..) should be Deferred.finish(..) and similarly
.errback(..) should be .fail(..).

-Andrew.




From andrew-twisted at puzzling.org  Thu Apr  4 19:35:00 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Apr 2002 10:35:00 +1000
Subject: [Twisted-Python] Deferreds
In-Reply-To: <20020405000646.GA472@frobozz.local>
References: <20020405000646.GA472@frobozz.local>
Message-ID: <20020405003500.GC472@frobozz.local>

I feel silly replying to myself, but anyway...

On Fri, Apr 05, 2002 at 10:06:46AM +1000, Andrew Bennetts wrote:
> I've been thinking about Deferreds lately, and I think they are lacking

I've been chatting about Deferreds on IRC with Drew, and he's made me
realise a few more things:
  1) There's currently no way to cancel a Deferred
  2) It looks like you can fire a Deferred multiple times.

You could workaround 1 by calling the errback if it wasn't for 2.

Point 2 surprised me; I expected Deferreds to be single shot (though I can
imagine that a multi-use Deferred would be ideal for some situations).

----
class AlreadyCalledError(Exception):
    pass

class OneShotDeferred(Deferred):
    def _runCallbacks(self, result, isError):
        if self.called:
            raise AlreadyCalledError
        Deferred._runCallbacks(self, result, isError)
----

But I think that this behaviour should probably be the default anyway (while
still providing the old behaviour).

-Andrew.




From twisted at itamarst.org  Fri Apr  5 04:02:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 05 Apr 2002 11:02:56 +0200
Subject: [Twisted-Python] Deferreds
References: <20020405000646.GA472@frobozz.local> <20020405003500.GC472@frobozz.local>
Message-ID: <3CAD6840.90700@itamarst.org>

Andrew Bennetts wrote:

>   1) There's currently no way to cancel a Deferred
>   2) It looks like you can fire a Deferred multiple times.

Cancel? That's not really possible. You don't know when the .arm() was 
called, so for all you know the callbacks will be called immediately 
when you passed the result.

> Point 2 surprised me; I expected Deferreds to be single shot (though I can
> imagine that a multi-use Deferred would be ideal for some situations).

I think yer right and that this shouldn't be possible.




From twisted at itamarst.org  Fri Apr  5 07:06:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 05 Apr 2002 14:06:27 +0200
Subject: [Twisted-Python] Component Architecture in coil
Message-ID: <3CAD9343.4070504@itamarst.org>

This is all based on Zope3 component architecture:
http://cvs.zope.org/Docs/ZopeComponentArchitecture/PythonProgrammerTutorial/Chapter1/

Specificially the 5th part, but I recommend going through the whole thing.


Quick intro - classes can say they implement interfaces.

  class A:
       __implements__ == (IProducer, IBlarg)

Notice that interfaces are separate from inheritance.

Next, we have adapters. This is a registry of classes, kinda like the 
Configurator registry for coil.

getAdapter(o, IFoo) returns an object that wraps o, so that the wrapped 
object implements interface IFoo. If o already implements it, then o is 
returned, otherwise it is looked up in the registry, wrapped, and an 
object implementing IFoo is returned. (There's a PEP that talks about 
something in this vein - http://www.python.org/peps/pep-0246.html).

Now, on to coil. For coil, we really need two interfaces - 
IConfigurator, for properties, and IConfigCollection. So, where before 
hand we wanted configurable classes to inherit from Collection, now we 
have a much better system.

When we want a configurator we do:

    cfg = getAdapter(o, IConfigurator)

More or less like now. When we want a collection-like interface, we do:

    collection = getAdapter(o, IConfigCollection)

Now, note the benefits. We can write a configuration class that 
implements both IConfigurator and IConfigCollection for our class, and 
then it will be returned in both cases - regardless of what o's class 
inherits from. So, we don't have to worry about what our classes inherit 
from, classes can implement IConfigurator or IConfigCollection 
themselves if they want, etc..

In other words, we have a much more flexible system, and we solved the 
"what if both Configurator and configurable inherit from Collection" 
issue, and in general we got rid of all the horrible special cases in 
webcoil. And this is generally extendable.

I'm sure we will find other uses for this as well - we already are using 
a hard-coded system for this in Configurators, and I'm sure there are 
many more places where this is useful.





From twisted at itamarst.org  Sun Apr  7 08:26:04 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Apr 2002 15:26:04 +0300
Subject: [Twisted-Python] First pass of components/adapters stuff now in CVS
Message-ID: <3CB03ADC.3050101@itamarst.org>

In module twisted.python.components

I followed shapr's suggestion of writing test code first - it's a nice 
coding technique.






From twisted at itamarst.org  Sun Apr  7 13:27:55 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Apr 2002 20:27:55 +0300
Subject: [Twisted-Python] Yet another coil refactor
Message-ID: <3CB0819B.6090509@itamarst.org>

As I said in my previous email - coil will now use components.

What this means:

Collections used by coil are collections of Interfaces objects. That means 
you need an Interface for anything that is addable in a coil collection.

I needed to add about 4 interface classes to the non-coil parts of Twisted 
for coil to work: protocol factory, service, web resource, dns domain. 
That's it. So I don't think this is such a bother.

In fact. it's much cleaner for things like DNS domains where there wasn't a 
base class for all Domains (same goes for mail domains.) Which is after all 
the purpose of interfaces. It does mean extra typing of __implements__ in 
certain cases, but all in all it's more flexible, and webcoil is cleaner.

I have this all working now - not I just need to clean up.

Here's an example of the different sort of things you can do now - notice 
how static.Files allow you to configure mime-types and resources.

=============================================
class SiteConfigurator(coil.Configurator):
     """Configurator for web sites."""

     __implements__ = [coil.IConfigurator, coil.IStaticCollection]

     configurableClass = server.Site
     configTypes = {'resource': [resource.IResource, "Resource",
                    "The resource at the site's root."] }
     configName = 'HTTP Web Site'

     def listStaticEntities(self):
         return [['resource', self.instance.resource]]

     def getStaticEntity(self, name):
         if name == 'resource':
             return self.instance.resource

components.registerAdapter(SiteConfigurator, server.Site, coil.ICollection)


# ... deleted from example ...


class MimeTypeCollection(coil.ConfigCollection):

     entityType = types.StringType

class ResourceCollection:
     """Wrap an existing Resource as a ConfigCollection."""

     __implements__ = [coil.IConfigCollection]

     def __init__(self, resource):
         self._resource = resource

     def __getattr__(self, attr):
         return getattr(self._resource, attr)


class StaticConfigurator(coil.Configurator, coil.StaticCollection):

     __implements__ = [coil.IConfigurator, coil.IStaticCollection]

     configurableClass = static.File

     configTypes = {'path': [types.StringType, "Path", "The path in the 
filesystem to be served."],
          'execCGI': ['boolean', "Execute CGIs", "Support running CGI"],
          'execEPY': ['boolean', "Execute EPYs", "Support running EPY"],
          'defaultType': [types.StringType, "Default MIME Type",""]
                   }

     configName = 'Web Filesystem Access'

     def __init__(self, instance):
         coil.Configurator.__init__(self, instance)
         coil.StaticCollection.__init__(self)
         self.putEntity("Mime-types", \
            MimeTypeCollection(self.instance.contentTypes))
         self.putEntity("Resources", ResourceCollection(self.instance))
         self.lock()

     # ... deleted, the config interfce is unchanged from CVS ...

def staticFactory(container, name):
     return static.File("somewhere/outthere")

coil.registerConfigurator(StaticConfigurator, staticFactory)
components.registerAdapter(StaticConfigurator, static.File,coil.ICollection)




From carmstro at twistedmatrix.com  Sun Apr  7 14:48:46 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 07 Apr 2002 13:48:46 -0500
Subject: [Twisted-Python] First pass of components/adapters stuff now in
	CVS
In-Reply-To: <3CB03ADC.3050101@itamarst.org>
References: <3CB03ADC.3050101@itamarst.org>
Message-ID: <1018205328.3829.3.camel@radii>

On Sun, 2002-04-07 at 07:26, Itamar Shtull-Trauring wrote:
> In module twisted.python.components
> 
> I followed shapr's suggestion of writing test code first - it's a nice 
> coding technique.


And I quote:
"""More importantly, try to avoid meaningless words. In particular,
words like "handler", "processor", "engine", "manager", and "component"
don't really indicate what something does, only that it does
*something*.
""" -- The Twisted Coding Standard

What the heck is a component? :-)

bwahaha-now-I-get-to-avenge-the-death-of-twisted.pretzel-ly yrs,

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From torresj at apb.es  Mon Apr  8 06:10:23 2002
From: torresj at apb.es (Joan Torres)
Date: Mon, 8 Apr 2002 12:10:23 +0200 (MET DST)
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
Message-ID: <200204081010.MAA05931@osona.apb.es>

Hi,
 I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
 I found a FTPClient.py example in ./doc/examples. I've modified the example
 and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
 don't know is how to setup the fileProtocol and also the FTPserver part.

 I suppose this may be easy, but I'm new in twisted.
 Could someone help me?
 Thanks in advanced
 Joan Torres
  



From twisted at itamarst.org  Mon Apr  8 06:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Apr 2002 13:16:45 +0300
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <3CB16E0D.4080007@itamarst.org>

$ bin/mktap ftp --help
Usage: mktap ftp [options].
     WARNING: This FTP server currently is very simple and will
     not work with a number of clients. We are working on making
     it more interoperable.
Options:
   -a, --anonymous       allow anonymous logins
   -3, --thirdparty      allow third-party connections
       --otp             activate One-Time Passwords
   -p, --port=           set the port number [default: 2121]
   -r, --root=           define the root of the ftp-site. [default:
                         /usr/local/ftp]
       --useranonymous=  [default: anonymous]
       --help

$ bin/mktap ftp -a
Saving ftp application to ftp.tap...
Saved.

$ bin/twistd -n -f ftp.tap
...
08/04/2002 13:15 [-] Loading ftp.tap...
08/04/2002 13:15 [-] Loaded.
08/04/2002 13:15 [*ftp*] twisted.protocols.ftp.FTPFactory starting on 2121





From andrew-twisted at puzzling.org  Mon Apr  8 07:00:52 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Apr 2002 21:00:52 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <200204081010.MAA05931@osona.apb.es>
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <20020408110052.GB924@frobozz.local>

On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> Hi,
>  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
>  I found a FTPClient.py example in ./doc/examples. I've modified the example
>  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
>  don't know is how to setup the fileProtocol and also the FTPserver part.
> 
>  I suppose this may be easy, but I'm new in twisted.
>  Could someone help me?

I'm the guy who wrote the FTPClient class, so blame me if it's too hard :)

First I'll mention that the FTPClient in CVS has much better documentation
than the last release, so you might want to use that.

Are you familiar with the idea of a Protocol?  If not, have a look at the
Writing Servers how-to:
    http://twistedmatrix.com/documents/howto/servers

The idea is that as the file is retrieved, you can use any arbitrary
Protocol you like to process it.  For simply saving to disk, that could be:

----
from twisted.protocols.protocol import Protocol

class FileWriterProtocol(Protocol):
    def __init__(self, filename):
        self.file = open(filename, 'w')

    def dataReceived(self, data):
        self.file.write(data)
----

You could then instantiate this class and pass it as the second argument to
retrieveFile.

I probably should improve the ftpclient.py example to cover this, as it is a
fairly typical sort of use I imagine.  Incidentally, does anyone know if
there is a FileWriterProtocol or similar already in Twisted somewhere?  I
can't think of one off the top of my head.

-Andrew.




From glyph at twistedmatrix.com  Mon Apr  8 18:08:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 17:08:18 -0500
Subject: [Twisted-Python] Yet another coil refactor
In-Reply-To: <3CB0819B.6090509@itamarst.org>
References: <3CB0819B.6090509@itamarst.org>
Message-ID: <1018303698.671.52.camel@janus>

On Sun, 2002-04-07 at 12:27, Itamar Shtull-Trauring wrote:
> As I said in my previous email - coil will now use components.

Looks cool.

Twisted is still in a development state right now, and __implements__
leaves no way for Twisted to warn you that between 0.17.0 and 0.19.2
some very important things changed and your code no longer fully
conforms to the interfaces that you thought it did.  Inheritance does,
but itamar and others have convinced me that there are problems with
using inheritance to specify interface implementation.

So I propose a compromise: I think that classes which implement
interfaces should be required to inherit from an Implementor class, in
order to facilitate evolution of interfaces.  This Implementor class
could even be a metaclass, ensuring at least trivial implementation
constraints at import-time, possibly spotting bugs early on.

Any comments?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020408/3e3584b1/attachment.pgp 

From glyph at twistedmatrix.com  Mon Apr  8 18:08:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 17:08:37 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin
 to be born?
Message-ID: <1018303717.671.55.camel@janus>

I just checked in a substantial refactoring and change to Jelly,
finalizing what I think Jelly ought to look like in PB's wire protocol. 
Before I declare that it is well and truly standard, however, there are
a few things I'd like to resolve, and I'd be interested to hear a few
opinions on them...

1: use of the word "tuple".

Jelly uses the word "tuple" on the wire, which is fairly
Python-specific.  Really it ought to be "immutable-list" or something
similar (perhaps leaving the door open for more immutable types in the
future?).  Thoughts on this, especially from implementors in other
languages?

2: jellying of arguments/kwargs

Arguments and keyword arguments to methods are currently serialized in
their native Python form; a tuple and a dict.  This is probably not the
most natural way to serialize args in other languages (especially those
so deficient as not to have keyword arguments).  A couple of possible
small improvements come to mind:

    * provide alternate forms of proto_message which alternatively do or
do not send arguments, keyword args, or either

    * call jelly on the tuple/dict, but decompose them such that the
argument format does not include the leading "tuple" or "dictionary"
string (to make life easier for PB authors who do not want to implement
Jelly initially)

    * jelly the tuple and the dict together in one pass (this is really
more like a bug, since objects referred to once as an arg and once as a
kw arg will be serialized twice...)

3: eliminate "cachemessage" somehow

This is really an eyesore, but I can't easily think how to get rid of
it.  Perhaps cache IDs could be component somehow, not just integers?

4: always assume exactly one reference

some work is probably wasted right now in maintaining distributed
reference counts; the peer really only cares whether the other side has
a reference or it doesn't.  The one place that this is a little weird is
the decache/uncache handshake.

I can't think of any other issues to address before we call it final. 
Anyone?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020408/f67ce758/attachment.pgp 

From bob at redivi.com  Mon Apr  8 18:53:50 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 8 Apr 2002 18:53:50 -0400
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin to be born?
In-Reply-To: <1018303717.671.55.camel@janus>
Message-ID: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>

On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:

> I just checked in a substantial refactoring and change to Jelly,
> finalizing what I think Jelly ought to look like in PB's wire protocol.
> Before I declare that it is well and truly standard, however, there are
> a few things I'd like to resolve, and I'd be interested to hear a few
> opinions on them...
>
> 1: use of the word "tuple".
>
> Jelly uses the word "tuple" on the wire, which is fairly
> Python-specific.  Really it ought to be "immutable-list" or something
> similar (perhaps leaving the door open for more immutable types in the
> future?).  Thoughts on this, especially from implementors in other
> languages?
>

I'd say that tuple is pretty standard terminology.  It's used quite 
heavily in PostgreSQL's source code for example, and I've heard mention 
of it in reference to common lisp.. Other things probably use it, I 
don't think it had anything to do with python, I think python's use of 
it is just the most prolific.

-bob




From glyph at twistedmatrix.com  Mon Apr  8 19:17:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 18:17:48 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
References: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
Message-ID: <1018307868.671.63.camel@janus>

On Mon, 2002-04-08 at 17:53, Bob Ippolito wrote:
> 
> On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:

> > 1: use of the word "tuple".

> I'd say that tuple is pretty standard terminology.  It's used quite 
> heavily in PostgreSQL's source code for example, and I've heard mention 
> of it in reference to common lisp.. Other things probably use it, I 
> don't think it had anything to do with python, I think python's use of 
> it is just the most prolific.

dictionaries define "tuple" as:

    "In functional languages, a data object containing two or more
    components. Also known as a product type or pair, triple, quad, etc.
    Tuples of different sizes have different types, in contrast to lists
    where the type is independent of the length. The components of a
    tuple may be of different types whereas all elements of a list have
    the same type."

This is not quite what Python means.  PostgreSQL defines tuple as:

    "an individual state of a row; each UPDATE of a row creates a new
    tuple for the same logical row".

In Python, it means simply "a list which is immutable".  I think that
these three definitions are sufficiently incompatible that one should
not use the word in a vocabulary for a protocol which is supposed to be
cross-langauge.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020408/0eaff022/attachment.pgp 

From sabren at manifestation.com  Mon Apr  8 19:36:45 2002
From: sabren at manifestation.com (Michal Wallace)
Date: Mon, 8 Apr 2002 19:36:45 -0400 (EDT)
Subject: [Twisted-Python] Yet another coil refactor
In-Reply-To: <1018303698.671.52.camel@janus>
Message-ID: <Pine.LNX.4.44.0204081935070.9242-100000@mercury.sabren.com>

On 8 Apr 2002, Glyph Lefkowitz wrote:

> Twisted is still in a development state right now, and
> __implements__ leaves no way for Twisted to warn you that
> between 0.17.0 and 0.19.2 some very important things
> changed and your code no longer fully conforms to the
> interfaces that you thought it did.  Inheritance does, but
> itamar and others have convinced me that there are
> problems with using inheritance to specify interface
> implementation.


You know... A while back, someone posted to the pyunit list
a tool that would check whether a particular object
implemented a particular interface. I didn't look at it
too closely, but you might want to take a look:

 http://www.geocrawler.com/archives/3/2943/2001/11/0/7131322/


Cheers,

- Michal   http://www.sabren.net/   sabren at manifestation.com 
------------------------------------------------------------
Give your ideas the perfect home: http://www.cornerhost.com/
 cvs - weblogs - php - linux shell - perl/python/cgi - java
------------------------------------------------------------




From abo at minkirri.apana.org.au  Mon Apr  8 19:53:55 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 9 Apr 2002 09:53:55 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <200204081010.MAA05931@osona.apb.es>
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <20020408235355.GB5143@minkirri.apana.org.au>

On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> Hi,
>  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
>  I found a FTPClient.py example in ./doc/examples. I've modified the example
>  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
>  don't know is how to setup the fileProtocol and also the FTPserver part.

last time I looked the ftp server support in twisted was very primative.
Certainly the medusa ftp server was more complete, but also needs some tweaks.

I'm also interested in ftp server stuff. If anyone wants to collaborate on
something...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From mahler at cyc.com  Mon Apr  8 19:54:10 2002
From: mahler at cyc.com (Daniel Mahler)
Date: Mon, 8 Apr 2002 18:54:10 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <1018307868.671.63.camel@janus>
References: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
	<1018307868.671.63.camel@janus>
Message-ID: <15538.11682.9431.347145@mcallister.cyc.com>

I believe common meaning of "tuple" extends beyond computing
and means something like element of the cartesian product.
The dictionary definition below seems to come from a computing
dictionary and assumes a strongly typed language.
The online Merriam-Webster just says:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
One entry found for -tuple.
Main Entry: -tu?ple
Pronunciation: "t&-p&l, "t?-
Function: noun combining form
Etymology: quintuple, sextuple
: set of (so many) elements -- usually used of sets with ordered
elements <the ordered 2-tuple (a, b)>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Which seems compatible with Python usage.
I think the Python usage is consistent with
programming/math uses I am familiar with.
It is even consistent with the dictionary definition
given below;
it is the definition 'list' that is incompatible,
since there is no same type restriction
on python list elements.
However, all untyped/dynamically typed languages
have list types without it.
However, in most languages lists are linked structures:
python lists correspond to vectors/arrays in other languages.

D

Glyph Lefkowitz writes:
 > On Mon, 2002-04-08 at 17:53, Bob Ippolito wrote:
 > > 
 > > On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:
 > 
 > > > 1: use of the word "tuple".
 > 
 > > I'd say that tuple is pretty standard terminology.  It's used quite 
 > > heavily in PostgreSQL's source code for example, and I've heard mention 
 > > of it in reference to common lisp.. Other things probably use it, I 
 > > don't think it had anything to do with python, I think python's use of 
 > > it is just the most prolific.
 > 
 > dictionaries define "tuple" as:
 > 
 >     "In functional languages, a data object containing two or more
 >     components. Also known as a product type or pair, triple, quad, etc.
 >     Tuples of different sizes have different types, in contrast to lists
 >     where the type is independent of the length. The components of a
 >     tuple may be of different types whereas all elements of a list have
 >     the same type."
 > 
 > This is not quite what Python means.  PostgreSQL defines tuple as:
 > 
 >     "an individual state of a row; each UPDATE of a row creates a new
 >     tuple for the same logical row".
 > 
 > In Python, it means simply "a list which is immutable".  I think that
 > these three definitions are sufficiently incompatible that one should
 > not use the word in a vocabulary for a protocol which is supposed to be
 > cross-langauge.
 > 
 > -- 
 >  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 >  |   < _/ >   |  Lead Developer,  the Twisted project  |
 >  |  < ___/ >  |      http://www.twistedmatrix.com      |




From andrew-twisted at puzzling.org  Mon Apr  8 21:22:47 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 11:22:47 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020408235355.GB5143@minkirri.apana.org.au>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au>
Message-ID: <20020409012247.GA15163@ritsuko.xware.cx>

On Tue, Apr 09, 2002 at 09:53:55AM +1000, Donovan Baarda wrote:
> On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> > Hi,
> >  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
> >  I found a FTPClient.py example in ./doc/examples. I've modified the example
> >  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
> >  don't know is how to setup the fileProtocol and also the FTPserver part.
> 
> last time I looked the ftp server support in twisted was very primative.
> Certainly the medusa ftp server was more complete, but also needs some tweaks.
> 
> I'm also interested in ftp server stuff. If anyone wants to collaborate on
> something...

I've already agreed with Glyph that I should at some point refactor the
FTP server to use Resources like the web server does (can? -- I'm not
familiar with the structure of it yet), essentially meaning that FTP
servers would be identical to web servers, except that they use FTP not
HTTP -- the same dynamic content and what-not could be served over them,
and perhaps they could also share authentication info?

More pressingly, the FTP server and client need to be refactored to
reuse some code.  They are currently two completely seperate code bases
with zero reuse :(

If other people are interested in helping with this, then all the better! :)

-Andrew.




From mbac at netgraft.com  Mon Apr  8 22:20:06 2002
From: mbac at netgraft.com (Michael Bacarella)
Date: Mon, 8 Apr 2002 22:20:06 -0400
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409012247.GA15163@ritsuko.xware.cx>; from andrew-twisted@puzzling.org on Tue, Apr 09, 2002 at 11:22:47AM +1000
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx>
Message-ID: <20020408222006.A5014@romulus.netgraft.com>

On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> More pressingly, the FTP server and client need to be refactored to
> reuse some code.  They are currently two completely seperate code bases
> with zero reuse :(

How much code could they share that hasn't already been implemented
in the rest of Twisted?

-- 
Michael Bacarella  | Netgraft Corporation
                   | 545 Eighth Ave #401
 Systems Analysis  | New York, NY 10018
Technical Support  | 212 946-1038 | 917 670-6982
 Managed Services  | mbac at netgraft.com




From andrew-twisted at puzzling.org  Mon Apr  8 22:55:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 12:55:14 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020408222006.A5014@romulus.netgraft.com>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com>
Message-ID: <20020409025514.GA16521@ritsuko.xware.cx>

On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> > More pressingly, the FTP server and client need to be refactored to
> > reuse some code.  They are currently two completely seperate code bases
> > with zero reuse :(
> 
> How much code could they share that hasn't already been implemented
> in the rest of Twisted?

Good question.  Probably not a huge amount.  The FTPFileListingProtocol
could probably be taught to write as well as read; and perhaps the
opening and connecting of data connections could be shared.  The data
connections, conceptually at least, are symmetrical.  And I intend to
implement file uploading in the client soon, so data really will flow
both ways.

As for the rest of it, probably not much.  But I'd like to at least try
to see what can be done before trying to build on it much further, when
it will be even harder to do.

-Andrew.




From andrew-twisted at puzzling.org  Mon Apr  8 23:04:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 13:04:14 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409025514.GA16521@ritsuko.xware.cx>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx>
Message-ID: <20020409030414.GB16521@ritsuko.xware.cx>

*sigh* Replying to myself again...

While we're on the topic of FTP, I was wondering if there's any reason
why I shouldn't use a single listening socket per FTPClient for active
transfers?

Currently, for each active transfer, it opens a new FTPDataPort to
accept the connection, which ends out being quite icky due to the
sequencing of events.  I've realised that because I don't pipeline FTP
commands in the client (because it's tricky to do right and some servers
can't do it anyway), there's no ambiguity with re-using the same
FTPDataPort over and over...

The only downside should be that all the hard work Glyph and Itamar put
into tracking down the connectionLost from inside tcp.doRead bug for me
will now be unnecessary ;)

If you're wondering, I think it would make the code *alot* cleaner.
Especially in .retrieve and .generatePortCommand, which do messy things
with Deferreds.  I just want to convince myself that it's a perfectly
safe change that won't break anything before I do it.

-Andrew.




From twisted at itamarst.org  Tue Apr  9 02:25:47 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:25:47 +0300
Subject: [Twisted-Python] Yet another coil refactor
References: <Pine.LNX.4.44.0204081935070.9242-100000@mercury.sabren.com>
Message-ID: <3CB2896B.6050303@itamarst.org>

Michal Wallace wrote:

> You know... A while back, someone posted to the pyunit list
> a tool that would check whether a particular object
> implemented a particular interface. I didn't look at it
> too closely, but you might want to take a look:
> 
>  http://www.geocrawler.com/archives/3/2943/2001/11/0/7131322/

Thanks for the link - I have code for this, I'm sure Zope does, and I'll 
take a look at this. The general reason for interfaces in this case was for 
documentation, and as a way to group disparate classes that implement the 
same external API.

Running any of the these tools requires that the interface class implement 
all methods of the API, something I was too lazy to do in some cases. But I 
have done it in my code, and it's useful as a verbose test to check you 
haven't forgotten to implement a method.






From twisted at itamarst.org  Tue Apr  9 02:35:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:35:27 +0300
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin to be born?
References: <1018303717.671.55.camel@janus>
Message-ID: <3CB28BAF.3060505@itamarst.org>

Glyph Lefkowitz wrote:

0: we need documentation and interop suite

I need to update Java Jelly to the new format. and I don't know what changes 
you made. So I'll have to generate stuff by hand.

What were the changes you made? How do I choose between simple and complex 
jelly? etc. etc.

I do have echopb and simplepb examples working with Java, for string/integer 
values, so it can't have changed *that* much.

> 1: use of the word "tuple".

Remind me why we need tuples? for dictionary keys to work? Couldn't this 
just be done by a smart unjellier? For other things I really don't see the 
benefit of an immutable list.

> 2: jellying of arguments/kwargs

>     * provide alternate forms of proto_message which alternatively do or
> do not send arguments, keyword args, or either

In Java I was thinking of just making a Referenceable that drops (or raises 
a error "bad args" error) on any keyword args passed to it, so from the 
user's point of view they just need to know about Java's regular argument 
lists. Which from the other side is just like a builtin python function that 
doesn't take keyword args.

>     * call jelly on the tuple/dict, but decompose them such that the
> argument format does not include the leading "tuple" or "dictionary"
> string (to make life easier for PB authors who do not want to implement
> Jelly initially)

I don't see how this helps, say Java. And for these simple cases, they can 
just drop the "tuple" or "dictionary" manually if they don't want to 
implement jelly.

>     * jelly the tuple and the dict together in one pass (this is really
> more like a bug, since objects referred to once as an arg and once as a
> kw arg will be serialized twice...)

Likewise.

> 3: eliminate "cachemessage" somehow

> 4: always assume exactly one reference

Unfortanutely I don't yet know how the cache parts work, since I haven't yet
implemented them :/




From twisted at itamarst.org  Tue Apr  9 02:59:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:59:14 +0300
Subject: [Twisted-Python] Yet another coil refactor
References: <3CB0819B.6090509@itamarst.org> <1018303698.671.52.camel@janus>
Message-ID: <3CB29142.9090601@itamarst.org>

Glyph Lefkowitz wrote:

> So I propose a compromise: I think that classes which implement
> interfaces should be required to inherit from an Implementor class, in
> order to facilitate evolution of interfaces.  This Implementor class
> could even be a metaclass, ensuring at least trivial implementation
> constraints at import-time, possibly spotting bugs early on.

First of all, runtime checking can only catch gross miscompliance of 
interfaces. However, since interfaces talk about external APIs, not internal 
representation, changes to the interface are much less likely, esp. once we 
hit a stable release.

That is, someone currently writing for Twisted has to say - "this is for 
Twisted 0.15.5" or whatever, because we do have occasional changes of 
underlying interfaces, e.g. coil ;). Once we hit 1.0 the interfaces will 
*not* change in the stable branch.

So, we really just need to list any changes to interfaces in the changelog - 
there's no real way we can fix other people's code. I don't see how this is 
any different than the previous way things worked where we had implicit 
interfaces that changed (e.g. addShutdown was removed from t.i.main).


Next, conside this - we add these two functions to components module:

def registerImplementor(klass):
     """Register a class that implements interfaces."""

def addInterface(klass, interface):
     """Register that the class implements an interface not listed in
        its __implements__."""

and we would require this for any methods that wants to work with the 
components thing.

Benefits:
1. Checking of interface compliance can be done in an easier fashion (and I 
  already have the code for it).

2. The ability to add interfaces without sticking them in __implements__ - 
this could help solve the issue where twisted.web.resource depends on coil.

3. No need to mess with meta-classes, and it'll work pre-2.2 (and if you 
want to use pre-2.2 meta-classes, you're even crazier than previously thought ;)

Disadvantages:
*Possibly* need to add an extra line for each class, not just inherit in 
super-classes. However, if we implement addInterface() so that it mutates 
the __implements__, this won't be necessary, you'll only need to register 
the superclass.

This implies that registerImplementor is basically only used for testing 
interface compliance and can't have other side effects.





From twisted at itamarst.org  Tue Apr  9 06:48:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 13:48:56 +0300
Subject: [Twisted-Python] dispensers for coil
Message-ID: <3CB2C718.9020803@itamarst.org>

I just took a look - config dispensers are totally broken.

The whole way they work for web coil is wrong (i.e. they are only available 
when an object is newly created, if you load in an existing tap you won't 
have dispensers.) This is because they are added only when a new object is 
first created.

The solution is scanning the whole heirarchy for dispensers when it's first 
loaded. Or rather each time a plugin is loaded.

This will probably create duplicate dispensers for each run the current way 
web stores dispensers. This can be fixed by having webcoil store, instead of 
the id(!!!!) of the method, a tuple of the configurator class, the dispenser 
name, and the instance from which the dispensers were gotten (dispensers are 
specific to an object.)

Summary:
We scan for dispensers every time a new plugin is loaded.
Add dispensers upon object creation.
Change how we store "references" to dispenser methods.
Move this functionality into coil.py where it belongs, maybe

Any comments?




From abo at minkirri.apana.org.au  Tue Apr  9 09:05:06 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 9 Apr 2002 23:05:06 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409025514.GA16521@ritsuko.xware.cx>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx>
Message-ID: <20020409130505.GE31612@minkirri.apana.org.au>

On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
> On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> > On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
[...]
> Good question.  Probably not a huge amount.  The FTPFileListingProtocol
> could probably be taught to write as well as read; and perhaps the
[...]

I have code for this, non-twisted specific. I'm interested in supporting
this in conjunction with a few other useful utility modules, so any
changes/suggestions etc are welcome.

Attached.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------
-------------- next part --------------
# Generate and parse unix style ls output lines in the following format
#      mode nlink uid gid size date file [ -> link]
# mode is a string in the form "drwxrwxrwx", with all modes supported.
# nlink, uid, gid, and size are all numeric.
# Date has an abreviated format as explained below.
import stat,string,time
from strptime import strptime

def getuid(name):
    try:
        import pwd
        return pwd.getpwnam(name)[2]
    except:
        try: return int(name)
        except: return 0
    
def getgid(name):
    try:
        import grp
        return grp.getgrnam(name)[2]
    except:
        try: return int(name)
        except: return 0

def getuname(uid):
    try:
        import pwd
        return pwd.getpwuid(uid)[0]
    except:
        return '0'
    
def getgname(gid):
    try:
        import grp
        return grp.getgrgid(gid)[0]
    except:
        return '0'
    
def lsunparse ((name, stat_info, link)):
    mode = lsmodeunparse (stat_info[stat.ST_MODE])
    date = lsdateunparse (stat_info[stat.ST_MTIME])
    if link:
        name = name + " -> " + link
    return '%s %3d %-8s %-8s %8d %s %s' % (
        mode,
        stat_info[stat.ST_NLINK],
        getuname(stat_info[stat.ST_UID]),
        getgname(stat_info[stat.ST_GID]),
        stat_info[stat.ST_SIZE],
        date,
        name)
                
def lsparse (line):
    mode,nlink,uid,gid,size,rest = string.split(line,maxsplit=5)
    mode = lsmodeparse(mode)
    nlink = int(nlink)
    uid  = getuid(uid)
    gid  = getgid(gid)
    size = int(size)
    date = lsdateparse(rest[:12])
    name = string.strip(rest[12:])
    try:
        name,link = string.split(name," -> ")
    except ValueError:
        link = None
    return name,(mode,0,0,nlink,uid,gid,size,date,date,date),link
    
    
dchr_table = {
    'd':stat.S_IFDIR,
    'c':stat.S_IFCHR,
    'b':stat.S_IFBLK,
    '-':stat.S_IFREG,
    'f':stat.S_IFIFO,
    'l':stat.S_IFLNK,
    's':stat.S_IFSOCK
    }

ifmt_table = {
    stat.S_IFDIR:'d',
    stat.S_IFCHR:'c',
    stat.S_IFBLK:'b',
    stat.S_IFREG:'-',
    stat.S_IFIFO:'f',
    stat.S_IFLNK:'l',
    stat.S_IFSOCK:'s'
    }

def lsmodeparse(text):
    mode = dchr_table[text[0]]
    if text[1]=='r': mode = mode | stat.S_IRUSR
    if text[2]=='w': mode = mode | stat.S_IWUSR
    if text[3] in 'xs': mode = mode | stat.S_IXUSR
    if text[3] in 'Ss': mode = mode | stat.S_ISUID
    if text[4]=='r': mode = mode | stat.S_IRGRP
    if text[5]=='w': mode = mode | stat.S_IWGRP
    if text[6] in 'xs': mode = mode | stat.S_IXGRP
    if text[6] in 'Ss': mode = mode | stat.S_ISGID
    if text[7]=='r': mode = mode | stat.S_IROTH
    if text[8]=='w': mode = mode | stat.S_IWOTH
    if text[9] in 'xt': mode = mode | stat.S_IXOTH
    if text[9] in 'tT': mode = mode | stat.S_ISVTX
    return mode
    
def lsmodeunparse(mode):
    text = list(ifmt_table[stat.S_IFMT(mode)]+ "---------")
    if mode & stat.S_IRUSR: text[1]='r'
    if mode & stat.S_IWUSR: text[2]='w'
    if mode & stat.S_IXUSR:
        if mode & stat.S_ISUID: text[3]='s'
        else: text[3]='x'
    elif mode & stat.S_ISUID:
        text[3]='S'
    if mode & stat.S_IRGRP: text[4]='r'
    if mode & stat.S_IWGRP: text[5]='w'
    if mode & stat.S_IXGRP:
        if mode & stat.S_ISGID: text[6]='s'
        else: text[6]='x'
    elif mode & stat.S_ISGID:
        text[6]='S'
    if mode & stat.S_IROTH: text[7]='r'
    if mode & stat.S_IWOTH: text[8]='w'
    if mode & stat.S_IXOTH:
        if mode & stat.S_ISVTX: text[9]='t'
        else: text[9]='x'
    elif mode & stat.S_ISVTX:
        text[9]='T'
    return string.join(text,'')

# Emulate the unix 'ls' command's date field.
# it has two formats - if the date is more than 180
# days in the past, then it's like this:
# Oct 19  1995
# otherwise, it looks like this:
# Oct 19 17:33
def lsdateparse (text):
    if string.find(text,":") != -1:
        info = list(strptime(text,"%b %d %H:%M"))
        now = time.localtime(time.time())
        if now[1] < info[1]:
            info[0] = now[0]-1
        else:
            info[0] = now[0]
    else:
        info = list(strptime(text,"%b %d  %Y"))
    info[8]=0
    return time.mktime(info) + time.timezone

def lsdateunparse (t):
    try:
        info = time.gmtime (t)
    except:
        info = time.gmtime (0)
    # 15,600,000 == 180 days
    if (long(time.time()) - t) > 15600000:
        return time.strftime("%b %d  %Y",info)
    else:
        return time.strftime("%b %d %H:%M",info)

From washort at twistedmatrix.com  Tue Apr  9 09:29:34 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 09 Apr 2002 08:29:34 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <1018303717.671.55.camel@janus>
References: <1018303717.671.55.camel@janus>
Message-ID: <1018358974.2905.11.camel@ghostwheel>

On Mon, 08 Apr 2002, Glyph Lefkowitz did violence to a keyboard thusly:

> I just checked in a substantial refactoring and change to Jelly,
> finalizing what I think Jelly ought to look like in PB's wire protocol. 
> Before I declare that it is well and truly standard, however, there are
> a few things I'd like to resolve, and I'd be interested to hear a few
> opinions on them...
> 
> 1: use of the word "tuple".
> 
> Jelly uses the word "tuple" on the wire, which is fairly
> Python-specific.  Really it ought to be "immutable-list" or something
> similar (perhaps leaving the door open for more immutable types in the
> future?).  Thoughts on this, especially from implementors in other
> languages?

More immutable types would be nice, yes. (Oz, for example, has 'records'
which in effect are immutable dicts.) I dont know if there's any
advantage to making 'immutable' a separate protocol element or if such
data structures should just be identified as such in their name.... for
that matter. 'tuple' isn't the worst thing you could call it -- i dont
think jelly would suffer from being called unabashedly python-centric.
:)

> 2: jellying of arguments/kwargs
> A couple of possible small improvements come to mind:

> * provide alternate forms of proto_message which alternatively do or
>   do not send arguments, keyword args, or either

To my mind, this seems the cleanest way to solve it.

> 4: always assume exactly one reference
> 
> some work is probably wasted right now in maintaining distributed
> reference counts; the peer really only cares whether the other side has
> a reference or it doesn't.  The one place that this is a little weird is
> the decache/uncache handshake.

well, my opinion on enforcing single referece counts has been expressed
before :) this would be quite nice but i'm unsure how it would interact
with Python semantics... would jelly refuse to send refs to objects that
it had already sent?

-- 
Allen Short         Programmer-Archaeologist        
washort at twistedmatrix.com
"optimization is hacker crack. " -- Johan Kullstam, c.l.l



From andrew-twisted at puzzling.org  Tue Apr  9 10:20:24 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 10 Apr 2002 00:20:24 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409130505.GE31612@minkirri.apana.org.au>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx> <20020409130505.GE31612@minkirri.apana.org.au>
Message-ID: <20020409142024.GA1007@frobozz.local>

On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
> On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
> > On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> > > On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> [...]
> > Good question.  Probably not a huge amount.  The FTPFileListingProtocol
> > could probably be taught to write as well as read; and perhaps the
> [...]
> 
> I have code for this, non-twisted specific. I'm interested in supporting
> this in conjunction with a few other useful utility modules, so any
> changes/suggestions etc are welcome.

Certainly the writing (or "unparsing" as you call it :) part of this could
be used.

The parsing bits also look useful, especially the date parsing.
Unfortunately, strptime isn't portable (in particular, I don't think Windows
has it :( ).  But you're using some module called "strptime" -- that's not
from the standard library?

I don't think uid/gid should be numeric or translated to local names when
parsing -- ProFTPD at least returns names, and besides remote uids may not
match local ones.

Also, I'm curious as to how much more reliable this is at parsing wacky
formats than the regular expression in
twisted.protocols.ftp.FTPFileListingProtocol in CVS...

-Andrew.




From bob at redivi.com  Tue Apr  9 10:39:03 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 9 Apr 2002 10:39:03 -0400
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409142024.GA1007@frobozz.local>
Message-ID: <89A58249-4BC7-11D6-BBF7-0003938210D6@redivi.com>

On Tuesday, April 9, 2002, at 10:20 AM, Andrew Bennetts wrote:

> On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
>> On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
>>> On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
>>>> On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
>> [...]
>>> Good question.  Probably not a huge amount.  The 
>>> FTPFileListingProtocol
>>> could probably be taught to write as well as read; and perhaps the
>> [...]
>>
>> I have code for this, non-twisted specific. I'm interested in 
>> supporting
>> this in conjunction with a few other useful utility modules, so any
>> changes/suggestions etc are welcome.
>
> Certainly the writing (or "unparsing" as you call it :) part of this 
> could
> be used.
>
> The parsing bits also look useful, especially the date parsing.
> Unfortunately, strptime isn't portable (in particular, I don't think 
> Windows
> has it :( ).  But you're using some module called "strptime" -- that's 
> not
> from the standard library?

I don't believe OS X has strptime, either.  I have no time.strptime 
here, and man doesn't know anything about it.  There is always 
mx.DateTime though :)

>
> I don't think uid/gid should be numeric or translated to local names 
> when
> parsing -- ProFTPD at least returns names, and besides remote uids may 
> not
> match local ones.
>
> Also, I'm curious as to how much more reliable this is at parsing wacky
> formats than the regular expression in
> twisted.protocols.ftp.FTPFileListingProtocol in CVS...
>
> -Andrew.




From abo at minkirri.apana.org.au  Tue Apr  9 10:50:26 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 10 Apr 2002 00:50:26 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409142024.GA1007@frobozz.local>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx> <20020409130505.GE31612@minkirri.apana.org.au> <20020409142024.GA1007@frobozz.local>
Message-ID: <20020409145025.GA16096@minkirri.apana.org.au>

On Wed, Apr 10, 2002 at 12:20:24AM +1000, Andrew Bennetts wrote:
> On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
[...]
> > I have code for this, non-twisted specific. I'm interested in supporting
> > this in conjunction with a few other useful utility modules, so any
> > changes/suggestions etc are welcome.
> 
> Certainly the writing (or "unparsing" as you call it :) part of this could
> be used.

the term "unparse" is taken strait from the Python urlparse module. I've
sorta followed the same api. I also have a "netlocparse.py" that
parses/unparses the netlock part ([user[:passwd]@]host[:port]) which the
urlparse module neglects to do anything with.

> The parsing bits also look useful, especially the date parsing.
> Unfortunately, strptime isn't portable (in particular, I don't think Windows
> has it :( ).  But you're using some module called "strptime" -- that's not
> from the standard library?

I'm using a pure-python implementation by Andy Eskilsson... I forget where I
found it. It's a bit longer than lsparse.py so I won't post it here, email
me directly if you want a copy.

> I don't think uid/gid should be numeric or translated to local names when
> parsing -- ProFTPD at least returns names, and besides remote uids may not
> match local ones.

The point of this was to return a proper stat tupple, which always uses
numeric uid/gid values. The whole local vs remote uid issue is messy... this
code will attempt the conversions with sensible fallbacks if it fails.
Generaly, the gid/uid info is useless because of the remote vs local issue
anyway, but they are included for completeness.

> Also, I'm curious as to how much more reliable this is at parsing wacky
> formats than the regular expression in
> twisted.protocols.ftp.FTPFileListingProtocol in CVS...

It's probably pretty unforgiving... it was designed exclusively to
parse/unparse ls style info.

This plus more is part of my osVFS package, which is a drop-in replacement
for for the standard os module that replaces all the file interface routines
with an Virtual File System. I already have working fake-root, mountable,
and ftp VFS backends, but I want to include a caching mixin using my
GCache.py module before I release it. I should just get off my butt and do
it...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From nick-twisted at nickpiper.co.uk  Tue Apr  9 14:14:10 2002
From: nick-twisted at nickpiper.co.uk (Nicholas Piper)
Date: Tue, 9 Apr 2002 19:14:10 +0100
Subject: [Twisted-Python] stopFactory() called twice
Message-ID: <20020409181410.GH12257@piamox7.haus>

radix suggested I report this to the mailing list. It happens both
with CVS and 0.16.0

Example output from my program is:

(own == one wire network)

nicholas at piamox7:~/projects/twisted/Twisted$ python play.py       
Enabling Multithreading. 
play.onewireprotocolfactory starting on 8007
Creating own             ## This line from startFactory(self):
Gained Holder Nicholas     ## from the ownthread
Starting shutdown sequence. # I pressed Ctrl-C
Stopping main loop. 
Main loop terminated .
(Port 8007 Closed) 
stopFactory() called      
own thread finished     #stopFactory() sets a variable on ownthread to
                        # notify it to finish up, then waits a few seconds
deleting self.own      # shouldn't hang around in the tap, so I delete
                       # it in stopFactory
Saving OWN application to OWN-shutdown.tap...
Saved.
stopFactory() called    # what, again ?
stopFactory() has been called for the second time! # yes, really again!
play.onewireprotocolfactory starting on 8007   # eh ?
Creating own                           # it's started it all up again!
Gained Holder Nicholas        ## from the ownthread

My code is very messy and bad probably :-) and my threads are probably
quite dangerous. It can be found at
www.nickpiper.co.uk/ibutton/play.py for the next few days.

 Nick

-- 
Part 3 MEng Cybernetics; Reading, UK       http://www.nickpiper.co.uk/
GPG Encrypted mail welcome!                             1024D/3ED8B27F
Choose life. Be Vegan :-) Please reduce needless cruelty + suffering !



From twisted at itamarst.org  Wed Apr 10 07:12:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Apr 2002 14:12:25 +0300
Subject: [Twisted-Python] Re: [Twisted-commits] (no subject)
References: <E16v5B7-0003xu-00@zaibach.twistedmatrix.com>
Message-ID: <3CB41E19.7040003@itamarst.org>

rob CVS wrote:
> Modified files:
> Twisted/twisted/spread/jelly.py 1.22 1.23

Rob? Who's rob?





From carmstro at twistedmatrix.com  Wed Apr 10 12:07:09 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 10 Apr 2002 12:07:09 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] (no subject)
In-Reply-To: <3CB41E19.7040003@itamarst.org>
References: <E16v5B7-0003xu-00@zaibach.twistedmatrix.com> 
	<3CB41E19.7040003@itamarst.org>
Message-ID: <1018454830.31154.1.camel@radii>

On Wed, 2002-04-10 at 07:12, Itamar Shtull-Trauring wrote:
> rob CVS wrote:
> > Modified files:
> > Twisted/twisted/spread/jelly.py 1.22 1.23
> 
> Rob? Who's rob?

With my unmatched hax0ring skills I have discovered the following
information:

Login: rob                              Name: Robert Knopf
Directory: /home/rob                    Shell: /bin/bash
Last login Tue Apr  9 18:41 (CDT) on NODEVssh from crue.ninjaneering.com
No mail.
No Plan.

>From this information I have learned that 1) rob is Robert Knopf, 2)
Robert Knof is a ninja, and 3) He is obviously going nowhere in life.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Wed Apr 10 17:45:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Apr 2002 23:45:31 +0200
Subject: [Twisted-Python] Towards 1.0
Message-ID: <3CB4B27B.4070202@itamarst.org>

Hi everyone,

We are trying to move forwards towards a 1.0 release, with as many of 
the APIs as possible in a stable state (obviously some parts are not 
going to be stable).

If you are a developer have any work in progress, please try to finish 
it up, so everything is in decent shape.

Examples:
Manhole's gnome spelunk thing should either work or not show up.
Correct bounce handling in mail.

Most of all however, we need test code and documentation. Please 
everyone - join in and help. It's a great way to learn, and few things 
beat the fuzzy, warm feeling of having another 10 tests pass.




From moore at ict.usc.edu  Thu Apr 11 17:27:48 2002
From: moore at ict.usc.edu (Ben Moore)
Date: 11 Apr 2002 14:27:48 -0700
Subject: [Twisted-Python] HTTP PUT support in twisted.web
Message-ID: <1018560469.1313.9.camel@spike>

I'm trying to do some wacky stuff with HTTP and was wondering if the
twisted HTTP server supports the PUT command.  And if so how do you use
it?

Using curl's HTTP upload function I get the following response:
<head><title>404 - No Such Resource</title></head>
<body><h1>No Such Resource</h1>
<p>Unable to access file.</p>
</body></html>


Ben
-- 
    ________________
   /  _/ ____/_  __/  Benjamin A. Moore
   / // /     / /    e-mail: moore at ict.usc.edu
 _/ // /___  / /    priv: ben at netjunki.org
/___/\____/ /_/    
     




From mjmstahl at one.net  Thu Apr 11 22:53:57 2002
From: mjmstahl at one.net (M.J. Stahl)
Date: Thu, 11 Apr 2002 22:53:57 -0400
Subject: [Twisted-Python] Towards 1.0
References: <3CB4B27B.4070202@itamarst.org>
Message-ID: <3CB64C45.8070701@one.net>

> We are trying to move forwards towards a 1.0 release, with as many of 
> the APIs as possible in a stable state (obviously some parts are not 
> going to be stable).
> Most of all however, we need test code and documentation. Please 
> everyone - join in and help. It's a great way to learn, and few things 
> beat the fuzzy, warm feeling of having another 10 tests pass.
>

Excellent... I having been wanting to write documentation on Twisted for 
a while, and my interest has increased due to my large interest in Reality.

The only problem that I have when trying to get involved in this aspect 
is the needed directions from the people running the show. I would like 
to know what you need documented and how you would like the docs to 
look. (info about the system in general, tutorials, as well as a listing 
of API's and the information needed for programmers to use them).

I consider myself a good writer, but this is not my project (I would 
just like to assist with it), therefore, I would like to know how the 
owners of the project (project leads) would like things done (ie, I am 
all for being the peon =).

Regards,

-M.




From andrew-twisted at puzzling.org  Thu Apr 11 23:06:01 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Apr 2002 13:06:01 +1000
Subject: [Twisted-Python] Towards 1.0
In-Reply-To: <3CB64C45.8070701@one.net>
References: <3CB4B27B.4070202@itamarst.org> <3CB64C45.8070701@one.net>
Message-ID: <20020412030601.GC30669@ritsuko.xware.cx>

On Thu, Apr 11, 2002 at 10:53:57PM -0400, M.J. Stahl wrote:
> Excellent... I having been wanting to write documentation on Twisted for 
> a while, and my interest has increased due to my large interest in Reality.
> 
> The only problem that I have when trying to get involved in this aspect 
> is the needed directions from the people running the show. I would like 
> to know what you need documented and how you would like the docs to 
> look. (info about the system in general, tutorials, as well as a listing 
> of API's and the information needed for programmers to use them).

I believe there is a Twisted Documentation Standard now distributed
with 0.17.0 and later.  Alternatively, see:
    http://twistedmatrix.com/documents/howto/doc-standard

As for what we need documented, basically everything! :)

See doc/howto/book.html in a recent Twisted distribution to get some
idea of what is wanted.

Thanks!  People who write docs rock!

-Andrew.




From twisted at itamarst.org  Sat Apr 13 13:17:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Apr 2002 19:17:08 +0200
Subject: [Twisted-Python] Persistent/Pipelined HTTP - progress resport
Message-ID: <3CB86814.9080003@itamarst.org>

1) All tests except for the buffer one (which has to change anyway due 
to the nature of the changes) pass without errors.

2) No API changes were made to the twisted.web framework.

3) I was able to view (the error page for a) web widget from lynx.

4) I'm able to use emacs now with enough basic proficiency that I can 
work over ssh, although slower than I usually work in my usual setup. 
Before this I a hard time working without a GUI, so this is good. I 
think I'll try using emacs as default editor from now on. Glyph, I want 
that tutorial now :)

Tomorrow I will proceed to write test code, verifying that the 
persistence and pipelining is acting correctly. Hopefully the checkin 
will be tommorow or monday.

We still don't have full HTTP/1.1 support, of course, and truth be told 
persistence isn't required for that. But this should be good for 
performance at least (benchmarks tommorow as well).

Anyone know of a test suite for HTTP compliance?




From Drew.Whitehouse at anu.edu.au  Sun Apr 14 08:09:07 2002
From: Drew.Whitehouse at anu.edu.au (Drew Whitehouse)
Date: 14 Apr 2002 22:09:07 +1000
Subject: [Twisted-Python] of interest
Message-ID: <wlhemelbx8.fsf@anu.edu.au>

This might be of interest to the twisted minds, deferred's on
steroids...

http://research.microsoft.com/Users/luca/Papers/Polyphony%20ECOOP.A4.pdf

(via http://lambda.weblogs.com/, one of my favourite programming
BLOGS)

-Drew
-- 
;; Drew.Whitehouse at anu.edu.au      Sci-Viz/VR Programmer
;; http://anusf.anu.edu.au/~drw900          ANUSF VIZLAB
;; Australian National University Supercomputer Facility



From twisted at itamarst.org  Sun Apr 14 10:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Apr 2002 17:16:45 +0300
Subject: [Twisted-Python] Banana greeting and profiles
Message-ID: <3CB98F4D.4070407@itamarst.org>

In the new banana, it starts out by sending a message with a list of 
profiles it supports:

    ["pb", "none"]

Now, the thing is, the "pb" profile doesn't imply you're running the PB 
protocol, it just means that you're defining some extra banana types that 
are used by the PB protocol, but for all you know this server may be running 
a different protocol. This is especially true when you get this list:

    ["none"]

So, you know it's using banana - but what protocol is running on *top* of 
banana?

As I'm seeing from HTTP, telling the client what protocol you run is rather 
important.

So, this implies that maybe the banana greeting should also include the 
protocol that it is running on top of Banana in it's greeting:

     ["Perspective Broker v6", ["pb", "none"]]




From twisted at itamarst.org  Sun Apr 14 10:22:23 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Apr 2002 17:22:23 +0300
Subject: [Twisted-Python] HTTP updated
Message-ID: <3CB9909F.6010206@itamarst.org>

twisted's HTTP now does persistent and pipelined connections in HTTP/1.1 
(HTTP/1.0 is as before, with no support for persistent connections). If you 
set a content-length header, then data is sent as is, otherwise data is sent 
in chunked format.

Additional tests are probably needed.

What's left for full HTTP/1.1 support:
1. Ability for server to read chunked data.
2. 100 continue status (I wonder if anyone uses it)
3. universal content-range support

probably more stuff as well.




From washort at twistedmatrix.com  Sun Apr 14 14:15:30 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 14 Apr 2002 13:15:30 -0500
Subject: [Twisted-Python] of interest
In-Reply-To: <wlhemelbx8.fsf@anu.edu.au>
References: <wlhemelbx8.fsf@anu.edu.au>
Message-ID: <1018808130.12167.3.camel@ghostwheel>

On Sun, 2002-04-14 at 07:09, Drew Whitehouse wrote:
> 
> This might be of interest to the twisted minds, deferred's on
> steroids...
> 
> http://research.microsoft.com/Users/luca/Papers/Polyphony%20ECOOP.A4.pdf

yeah, looked at that -- it's not all that much more powerful than actual
deferreds, so far as i can tell, and the patterns it produces seem odd.
i'm betting that E (http://erights.org/) has a better answer to these
sorts of concurrency problems. (besides, i am instantly suspicious of
people who use the word 'calculus' when talking about programming)

-- 
Allen Short        Programmer-Archaeologist        
washort at twistedmatrix.com
And it should be the law: If you use the word `paradigm' without knowing
what
the dictionary says it means, you go to jail.  No exceptions.  -- David
Jones



From glyph at twistedmatrix.com  Sun Apr 14 15:31:13 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Apr 2002 14:31:13 -0500
Subject: [Twisted-Python] HTTP updated
In-Reply-To: <3CB9909F.6010206@itamarst.org>
References: <3CB9909F.6010206@itamarst.org>
Message-ID: <20020414193113.GA9914@twistedmatrix.com>

On Sun, Apr 14, 2002 at 05:22:23PM +0300, Itamar Shtull-Trauring wrote:
> twisted's HTTP now does persistent and pipelined connections in HTTP/1.1 
> (HTTP/1.0 is as before, with no support for persistent connections). If you 
> set a content-length header, then data is sent as is, otherwise data is 
> sent in chunked format.

Itamar is a twisted hero once again!  Yaay!

> Additional tests are probably needed.

> What's left for full HTTP/1.1 support:

> 1. Ability for server to read chunked data.

How hard is this?

> 2. 100 continue status (I wonder if anyone uses it)

I read this section of the RFC; it sounds useless... do you know what is
the intent?

> 3. universal content-range support

Is this necessary for HTTP/1.1?  static.File supports it, I suppose
static.Data should too; but I imagine that most dynamic content pages on
web app sites don't support content-range...


There's probably an unspoken "4. run a website with it for 6 months to
makme sure it's actually stable"... :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From bob at redivi.com  Sun Apr 14 16:23:36 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 14 Apr 2002 16:23:36 -0400
Subject: [Twisted-Python] HTTP updated
In-Reply-To: <20020414193113.GA9914@twistedmatrix.com>
Message-ID: <800793F7-4FE5-11D6-AF78-0003938210D6@redivi.com>

I think continue is for when the server wants to respond but is going to 
need some time to generate the content.. I think IIS does this a lot 
especially when doing SOAP.

This is just off the top of my head though, I'd have to look into it, 
but I think that's right.

-bob

On Sunday, April 14, 2002, at 03:31 PM, Glyph Lefkowitz wrote:

> On Sun, Apr 14, 2002 at 05:22:23PM +0300, Itamar Shtull-Trauring wrote:
>> twisted's HTTP now does persistent and pipelined connections in 
>> HTTP/1.1
>> (HTTP/1.0 is as before, with no support for persistent connections). 
>> If you
>> set a content-length header, then data is sent as is, otherwise data is
>> sent in chunked format.
>
> Itamar is a twisted hero once again!  Yaay!
>
>> Additional tests are probably needed.
>
>> What's left for full HTTP/1.1 support:
>
>> 1. Ability for server to read chunked data.
>
> How hard is this?
>
>> 2. 100 continue status (I wonder if anyone uses it)
>
> I read this section of the RFC; it sounds useless... do you know what is
> the intent?
>
>> 3. universal content-range support
>
> Is this necessary for HTTP/1.1?  static.File supports it, I suppose
> static.Data should too; but I imagine that most dynamic content pages on
> web app sites don't support content-range...
>
>
> There's probably an unspoken "4. run a website with it for 6 months to
> makme sure it's actually stable"... :)
>
> --
> ______      you are in a maze of twisted little applications, all
> |   |_\     remarkably consistent.
> |     |          -- glyph lefkowitz, glyph @ twisted matrix . com
> |_____|             http://www.twistedmatrix.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Sun Apr 14 18:05:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Apr 2002 00:05:15 +0200
Subject: [Twisted-Python] HTTP updated
References: <3CB9909F.6010206@itamarst.org> <20020414193113.GA9914@twistedmatrix.com>
Message-ID: <3CB9FD1B.5070805@itamarst.org>

Glyph Lefkowitz wrote:

>>1. Ability for server to read chunked data.
> 
> 
> How hard is this?

Pretty easy - just need the raw mode in linereciever to parse the data 
instead of just sending it onwards. Probably need to implement a 3rd 
mode in addition to raw, actually - but it's pretty simple (length in 
hex, CRLF, data, CRLF - repeat until all data is sent and then "0" and 
CRLF to end, plus some extra headers after. no big deal.)

>>2. 100 continue status (I wonder if anyone uses it)
> 
> 
> I read this section of the RFC; it sounds useless... do you know what is
> the intent?

"I am about to send 300MB of data. Is this acceptable?"

i.e. probably no one uses it in the real world except in specialized 
protocols that run on top of HTTP.

And yeah, this needs to run for a while, and lots of tests would be good 
too (I'm *sure* Zope3 e.g. has more.)







From twisted at itamarst.org  Mon Apr 15 05:14:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Apr 2002 12:14:30 +0300
Subject: [Twisted-Python] CVS in python
Message-ID: <3CBA99F6.50901@itamarst.org>

I just rediscovered - the Demos/pdist/ directory in python comes with a some 
sort of a RCS and CVS implementation. It uses a pickle based RPC protocol. 
Anyone with some spare time want to take a look and see how compatible this 
is with real CVS?




From glyph at twistedmatrix.com  Mon Apr 15 16:55:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Apr 2002 15:55:06 -0500
Subject: [Twisted-Python] Banana greeting and profiles
In-Reply-To: <3CB98F4D.4070407@itamarst.org>
References: <3CB98F4D.4070407@itamarst.org>
Message-ID: <1018904106.361.2.camel@janus>

On Sun, 2002-04-14 at 09:16, Itamar Shtull-Trauring wrote:
> In the new banana, it starts out by sending a message with a list of 
> profiles it supports:

This sounds like a good proposal -- check it in soon though!  I will be
documenting / finalizing the protocol very soon.

One thing I might add to this

>      ["Perspective Broker v6", ["pb", "none"]]

is to make it more symmetrical, so that the client can select what
protocol it wants to speak.  e.g.:

[["Simple Banana Chat v2", "Perspective Broker v6", "Perspective Broker
v7"],
 ["pb", "none"]]

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020415/64539196/attachment.pgp 

From carmstro at twistedmatrix.com  Mon Apr 15 21:52:05 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 15 Apr 2002 21:52:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] OK, maybe distributed servers work again with
 files...
In-Reply-To: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com>
References: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com>
Message-ID: <1018921927.956.10.camel@radii>

On Mon, 2002-04-15 at 20:21, glyph CVS wrote:
> Modified files:
> Twisted/twisted/web/distrib.py 1.33 1.34
> 
> Log message:
> OK, maybe distributed servers work again with files...

HOORAY! Thanks a lot. If everything's OK, I'll get onto releasing
0.17.2. Anyone have any objections?

Anyway, real purpose of this message -- I noticed that this fix breaks
backwards-compatibility with old servers again (at least when the --user
server is running 0.17.1 and --personal is running CVS; I assume it's
also broken for the opposite). This is really starting to bug me,
because all of our users on Zaibach have to restart their servers for
their web sites to work after an upgrade. Of course, I don't care for
_my_ server, but the big one is snibril's Moin server.

#1. Would it be possible to make future changes to distributed web
without breaking old servers, if we try hard enough? (I doubt it)

#2. Can we make servers easier to rebuild in-place so we don't actually
have to restart them? (I doubt it)

#3. Can we set up a system on zaibach to have a central script that runs
or restarts all of the users' servers? I think just going through the
list of user web-servers and 'su <user> -c <restart command>' should do
the trick.

If #3 never comes about, then I'd like to get snibril's permission to
restart his server when I make a release. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Mon Apr 15 22:10:26 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Apr 2002 21:10:26 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] OK, maybe distributed servers work again with files...
In-Reply-To: <1018921927.956.10.camel@radii>
References: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com> <1018921927.956.10.camel@radii>
Message-ID: <20020416021026.GA7713@twistedmatrix.com>

On Mon, Apr 15, 2002 at 09:52:05PM -0400, Christopher Armstrong wrote:
> #1. Would it be possible to make future changes to distributed web
> without breaking old servers, if we try hard enough? (I doubt it)

This is really the goal.  Ideally there will actually be a published
protocol for HTTPoPB at some point.  The speed at which the PB protocol
evolves should be slowing down a lot now, and Itamar's recent refactor
to web.resource (what broke it this time ...) should be starting to
finalize what a "web request" is in Twisted.

If you feel like this is really a significant problem, working in
backwards-compatibility hooks to PB is probably a good idea.  (In fact,
probably it's a good idea either way ^_^).  Most of the changes that
have broken t.w.d have been basic protocol changes to PB, which could
not be helped; the final, release version of PB will have a way of
regressing to old versions when appropriate.

In other words; expect minor problems until we stamp "1.0" on the
package; after that it should be smooth sailing.



From twisted at itamarst.org  Tue Apr 16 06:38:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Apr 2002 13:38:18 +0300
Subject: [Twisted-Python] ANN: TwistedJava 0.5
Message-ID: <3CBBFF1A.30605@itamarst.org>

I just released v0.5 of TwistedJava, implementing Perspective Broker 
(twisted.spread) for Java. It now passes the interop tests with 0.17.x in 
CVS, has improved APIs and less bugs.

Get it at http://itamarst.org/software/




From twisted at itamarst.org  Thu Apr 18 07:53:00 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 14:53:00 +0300
Subject: [Twisted-Python] Issues in new checkin from Donovan
Message-ID: <3CBEB39C.8000406@itamarst.org>

First of all - good work!

1. Use of unicode literals and XML in domtemplate.py - it won't run in 
1.5.2. When are we gonna drop 1.5.2 support?  It's a pretty neat templating 
system, actually, for certain uses. I still think ZPT is better though.

2. No example blog.html for the blog, so users won't know how to make 
templates. The docs in domtemplate make it pretty obvious how to use though.

How do I add posts to a blog - not implemented yet?

I think the blog code should not be part of Twisted core. Start a new CVS 
respository and make it a plugin is my suggestion.




From twisted at itamarst.org  Thu Apr 18 07:56:50 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 14:56:50 +0300
Subject: [Twisted-Python] Webcred and guard
Message-ID: <3CBEB482.7020208@itamarst.org>

There seems to be duplicate code in twisted.web.guard and 
twisted.web.webcred. What gives? What is webcred for? What's the difference?




From abo at minkirri.apana.org.au  Thu Apr 18 08:26:04 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 18 Apr 2002 22:26:04 +1000
Subject: [Twisted-Python] Issues in new checkin from Donovan
In-Reply-To: <3CBEB39C.8000406@itamarst.org>
References: <3CBEB39C.8000406@itamarst.org>
Message-ID: <20020418122604.GF14159@minkirri.apana.org.au>

On Thu, Apr 18, 2002 at 02:53:00PM +0300, Itamar Shtull-Trauring wrote:
> First of all - good work!
> 

I did a checkin? Not I! You must be thinking of someone else, unless there
is another Donovan who did it.

Love the glory, but better give credit where credit is due :-)

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Thu Apr 18 08:51:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 15:51:12 +0300
Subject: [Twisted-Python] Issues in new checkin from Donovan
References: <3CBEB39C.8000406@itamarst.org> <20020418122604.GF14159@minkirri.apana.org.au>
Message-ID: <3CBEC140.7090400@itamarst.org>

Donovan Baarda wrote:

> I did a checkin? Not I! You must be thinking of someone else, unless there
> is another Donovan who did it.
> 
> Love the glory, but better give credit where credit is due :-)

There's another Donovan, Donovan Preston.

I must say, it makes me feel real good to know there is only ONE Itamar 
Shtull-Trauring in the world (though there are of course other Itamars.)





From andrew-twisted at puzzling.org  Thu Apr 18 09:14:28 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 18 Apr 2002 23:14:28 +1000
Subject: [Twisted-Python] Issues in new checkin from Donovan
In-Reply-To: <3CBEC140.7090400@itamarst.org>
References: <3CBEB39C.8000406@itamarst.org> <20020418122604.GF14159@minkirri.apana.org.au> <3CBEC140.7090400@itamarst.org>
Message-ID: <20020418131428.GA1834@frobozz.local>

On Thu, Apr 18, 2002 at 03:51:12PM +0300, Itamar Shtull-Trauring wrote:
> 
> I must say, it makes me feel real good to know there is only ONE Itamar 
> Shtull-Trauring in the world (though there are of course other Itamars.)

Only until someone writes twisted.intelligence.itamar_shtulltrauring...

-Andrew.




From bob at redivi.com  Thu Apr 18 20:49:41 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Apr 2002 20:49:41 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020418131428.GA1834@frobozz.local>
Message-ID: <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>

I'm doing some twisted.enterprise crap and I was wondering if it was 
safe to use thread mutexes to make sure that only one interaction goes 
at a time?  I have some queries that shouldn't run in parallel under 
certain conditions and I believe forcing it w/ mutexes would be the 
safest and easiest solution... but I haven't looked much into what's 
going on under the hood and I'm wondering if it'll do Very Bad Things?

I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the 
moment because it's in testing for a few weeks.

-bob




From andrew-twisted at puzzling.org  Thu Apr 18 21:04:10 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 11:04:10 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>
References: <20020418131428.GA1834@frobozz.local> <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <20020419010410.GA4699@ritsuko.xware.cx>

On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
> 
> I'm doing some twisted.enterprise crap and I was wondering if it was 
> safe to use thread mutexes to make sure that only one interaction goes 
> at a time?  I have some queries that shouldn't run in parallel under 
> certain conditions and I believe forcing it w/ mutexes would be the 
> safest and easiest solution... but I haven't looked much into what's 
> going on under the hood and I'm wondering if it'll do Very Bad Things?

Interactions all run inside a db transaction, I think (someone please
correct me if I'm wrong).  So if your DB supports transactions, then you
should be fine already.  I'm presuming that by "interaction" you mean
twisted.enterprise.adbapi.Augmentation.runInteraction?

> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the 
> moment because it's in testing for a few weeks.

So already we have legacy systems to support :)

I'm not aware of any significant changes to twisted.enterprise since
0.15.2.

-Andrew.




From bob at redivi.com  Thu Apr 18 21:14:28 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Apr 2002 21:14:28 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020419010410.GA4699@ritsuko.xware.cx>
Message-ID: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>

Well see the thing is that yes, the db supports transactions [postgres], 
but I need to make sure the db processes requests in the order that 
they're received over the wire, not whenever that particular db 
connection gets around to it.

I don't think I'm currently having issues w/ it right now, but I'm just 
concerned that potentially it could be a problem someday.

On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:

> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>
>> I'm doing some twisted.enterprise crap and I was wondering if it was
>> safe to use thread mutexes to make sure that only one interaction goes
>> at a time?  I have some queries that shouldn't run in parallel under
>> certain conditions and I believe forcing it w/ mutexes would be the
>> safest and easiest solution... but I haven't looked much into what's
>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>
> Interactions all run inside a db transaction, I think (someone please
> correct me if I'm wrong).  So if your DB supports transactions, then you
> should be fine already.  I'm presuming that by "interaction" you mean
> twisted.enterprise.adbapi.Augmentation.runInteraction?
>
>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>> moment because it's in testing for a few weeks.
>
> So already we have legacy systems to support :)
>
> I'm not aware of any significant changes to twisted.enterprise since
> 0.15.2.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrew-twisted at puzzling.org  Thu Apr 18 21:32:50 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 11:32:50 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
References: <20020419010410.GA4699@ritsuko.xware.cx> <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <20020419013250.GA5095@ritsuko.xware.cx>

On Thu, Apr 18, 2002 at 09:14:28PM -0400, Bob Ippolito wrote:
> Well see the thing is that yes, the db supports transactions [postgres], 
> but I need to make sure the db processes requests in the order that 
> they're received over the wire, not whenever that particular db 
> connection gets around to it.

Ok.  Well, mutexes aren't going to guarantee order, either.  IIRC,
there's no guarantee that mutexes will be woken in the order they called
.acquire().  I'd recommend that the network reading thread pushes the
data onto a Queue.Queue that is being popped by a DB thread.  If this is
all you are doing with the DB, then perhaps you don't even need
twisted.enterprise, which is more designed for getting data than
inserting it.

I actually have a module somewhere that basically does exactly that, and
returns Deferreds that trigger when individual data items are inserted.
I might see if I can find it, and if it is not too specific that I can
post it.

> I don't think I'm currently having issues w/ it right now, but I'm just 
> concerned that potentially it could be a problem someday.

Yeah, best to be cautious.  That sort of bug can be hell to track down
later on :(

-Andrew.




From andrew-twisted at puzzling.org  Thu Apr 18 22:14:48 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 12:14:48 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020419013250.GA5095@ritsuko.xware.cx>
References: <20020419010410.GA4699@ritsuko.xware.cx> <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com> <20020419013250.GA5095@ritsuko.xware.cx>
Message-ID: <20020419021448.GA5514@ritsuko.xware.cx>

On Fri, Apr 19, 2002 at 11:32:50AM +1000, Andrew Bennetts wrote:
> .acquire().  I'd recommend that the network reading thread pushes the
> data onto a Queue.Queue that is being popped by a DB thread.  If this is
> all you are doing with the DB, then perhaps you don't even need
> twisted.enterprise, which is more designed for getting data than
> inserting it.
> 
> I actually have a module somewhere that basically does exactly that, and
> returns Deferreds that trigger when individual data items are inserted.
> I might see if I can find it, and if it is not too specific that I can
> post it.

And here is that module.

It has a few issues, it assumes you're using mx.ODBC.Windows to talk to
MS SQL Server using a DSN rather than an ODBC link, and it has the
beginnings of some code to ensure that packets don't get lost if the DB
goes down, but isn't being used yet.  It could do with general tidying
up and documentation.  On the other hand, it seems to work for the
simple uses I've put it to. 

Oh, I forgot to add this comment: call .insertPacket(None) to terminate
the thread when it is done.  That can be handy combined with the
daemonic flag you can pass to __init__, because you can use it to ensure
that your program doesn't exit until the DB done.

If there's sufficient interest, I'll look into fixing it up and checking
it in...

-Andrew.

----
# Twisted imports
from twisted.python import threadable, defer, failure
from twisted.internet import task

# Standard library imports
from Queue import Queue
from cStringIO import StringIO
import threading, traceback, time

# Twiddle the mx.ODBC.Windows module to, well, work.
import mx.ODBC.Windows
from mx.ODBC.Windows import DataError, IntegrityError, ProgrammingError, \
                            InternalError
# Required by DBAPI 2.0 -- it should already be there, but isn't :(
mx.ODBC.Windows.threadsafety = 2
# For some reason, the default connect function doesn't work with our DSNs
mx.ODBC.Windows.connect = mx.ODBC.Windows.DriverConnect

threadable.init(1)

class PacketInserter:
    """Class for inserting data from network packets into a DB
    
    It creates a seperate thread for processing SQL statements.  
    """
    dsn = ("driver={SQL Server};provider=sqloledb;server=db02;"
           "uid=sa;pwd=*****;database=Test;app=Twisted;")
    
    
    def __init__(self, daemonic=1):
        self.queue = Queue()
        self.recoveryQueue = Queue()
        self.dbThread = threading.Thread(target=self._processQueue,
                                         name='DB-Thread-')
        self.dbThread.setDaemon(daemonic)
        self.successCount = self.errorCount = 0
        self.active = 0
        self._db = None
        self.dbThread.start()

    def insertPacket(self, packet):
        """Insert a packet into the db.

        packet should be an instance of something with a .toSQL method.
        
        It returns a defer.Deferred that is called with the packet that was
        passed to this method.  The Deferred will be called after the packet
        has been inserted (or it will have its errback called).
        """
        d = defer.Deferred()
        self.queue.put((packet, d))
        return d

    def _getNext(self):
        if self.queue.empty():
            self.active = 0
        packet, deferred = self.queue.get()
        self.active = 1
        return packet, deferred
        
    def _getCursor(self):
        if self._db is not None:
            try:
                self._db.close()
            except:
                pass
            self._db = None

        cursor = None
        try:
            self._db = mx.ODBC.Windows.connect(self.dsn)
            cursor = self._db.cursor()
            cursor.execute('set implicit_transactions off;')
            print 'Connected to DB'
            #self._doRecovery()  FIXME
        except Exception, e:
            print 'Unable to create DB connection:', e
        return cursor
        
    def _doRecovery(self):
        print 'Retrying missed packets...'
        while not self.recoveryQueue.empty():
            # FIXME
            pass
        
    def _processQueue(self):
        cursor = self._getCursor()
        packet, deferred = self._getNext()
        start = time.time()
        while 1:
            if packet is None:
                print 'End of queue marker found, DB-Thread terminating'
                break

            if cursor is None:
                time.sleep(1)
                cursor = self._getCursor()
                continue

            try:
                cursor.execute(packet.toSQL())

            except (ProgrammingError, DataError, IntegrityError, 
                    InternalError), e:
                # InternalErrors include 
                # "COMMIT TRAN has no corresponding BEGIN TRAN" errors, which
                # should be a programming error...
                print 'Error inserting SQL: "%s"' % (packet.toSQL(),)
                traceback.print_exc()

                print 'Discarding statement'
                self.errorCount += 1
                task.schedule(deferred.errback, Failure(e))
                packet, deferred = self._getNext()

            except Exception, e:
                print 'Error inserting SQL: "%s"' % (packet.toSQL(),)
                traceback.print_exc()

                print 'Queuing statement'
                # FIXME  self.recoveryQueue.put(packet)
                print 'Reconnecting to DB'
                task.schedule(deferred.errback, Failure(e))
                cursor = self._getCursor()
            else:
                # If the last statement executed ok, then get the next one
                self.successCount += 1
                task.schedule(deferred.callback, packet)
                packet, deferred = self._getNext()

        end = time.time()
        print 'DB-Thread processed %d packets (and rejected %d) in %0.3f secs' \
              % (self.successCount, self.errorCount, (end - start),)
        print '%0.3f packets/sec' % ((end - start)/self.successCount,)

----




From sean at twistedmatrix.com  Thu Apr 18 22:50:15 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 18 Apr 2002 21:50:15 -0500
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEFMCFAA.sean@twistedmatrix.com>

well, knowing nothing about your application... relying on the order of rows
in a relational database table is generally a bad practice - this order is
really arbitrary and in some cases could actually change (depending on the
db you are using - clustered indices as primary keys for example). If you
want sequence information, I'd recommend you embed it in your rows - don't
rely on the order of the rows in the table.

anyway.. you can perform syncronous operations through a
twisted.enterprise.ConnectionPool by creating your own Transaction objects
and passing them to ConnectionPool::_runIteraction(). Maybe a queue with a
single db thread that you use syncronously?

twisted.enterprise needs more docs... especially the Row interface, but it
is good to hear that someone else is using it.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Bob Ippolito
Sent: Thursday, April 18, 2002 8:14 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] mutexes in twisted.enterprise?


Well see the thing is that yes, the db supports transactions [postgres],
but I need to make sure the db processes requests in the order that
they're received over the wire, not whenever that particular db
connection gets around to it.

I don't think I'm currently having issues w/ it right now, but I'm just
concerned that potentially it could be a problem someday.

On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:

> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>
>> I'm doing some twisted.enterprise crap and I was wondering if it was
>> safe to use thread mutexes to make sure that only one interaction goes
>> at a time?  I have some queries that shouldn't run in parallel under
>> certain conditions and I believe forcing it w/ mutexes would be the
>> safest and easiest solution... but I haven't looked much into what's
>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>
> Interactions all run inside a db transaction, I think (someone please
> correct me if I'm wrong).  So if your DB supports transactions, then you
> should be fine already.  I'm presuming that by "interaction" you mean
> twisted.enterprise.adbapi.Augmentation.runInteraction?
>
>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>> moment because it's in testing for a few weeks.
>
> So already we have legacy systems to support :)
>
> I'm not aware of any significant changes to twisted.enterprise since
> 0.15.2.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From carmstro at twistedmatrix.com  Thu Apr 18 23:34:04 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 18 Apr 2002 23:34:04 -0400
Subject: [Twisted-Python] bugs, bugs. (http)
Message-ID: <1019187245.5635.6.camel@radii>

Didn't notice these till after Twisted 0.17.2 was released (oh, btw,
Twisted 0.17.2 is released: http://twistedmatrix.com/):

* when I wget a file off of my web server, it seems to hang after
completion. Issue with persistent connection support?

* Static files are acting very sporadically. It looks like more HTTP
protocol issues. I *sometimes* get this (double-)traceback for them: 

[Broker,0,unix] <GET /users/carmstro.twistd/files/944.png HTTP/1.1>
[Broker,0,unix] Peer Will Receive PB Traceback:
[Broker,0,unix] Traceback (most recent call last):
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/pb.py", line 689, in _recvMessage
[Broker,0,unix]     netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/flavors.py", line 108, in remoteMessageReceived
[Broker,0,unix]     state = apply(method, args, kw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/distrib.py", line 45, in remote_resumeProducing
[Broker,0,unix]     self.producer.resumeProducing()
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/static.py", line 308, in resumeProducing
[Broker,0,unix]     self.request.unregisterProducer()
[Broker,0,unix]   File "/twisted/Twisted/twisted/protocols/http.py", line 412, in unregisterProducer
[Broker,0,unix]     self.transport.unregisterProducer()
[Broker,0,unix] exceptions.AttributeError: Request instance has no attribute 'transport'
[Broker,0,unix] Peer Will Receive PB Traceback:
[Broker,0,unix] Traceback (most recent call last):
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/pb.py", line 689, in _recvMessage
[Broker,0,unix]     netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/flavors.py", line 108, in remoteMessageReceived
[Broker,0,unix]     state = apply(method, args, kw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/distrib.py", line 45, in remote_resumeProducing
[Broker,0,unix]     self.producer.resumeProducing()
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/static.py", line 308, in resumeProducing
[Broker,0,unix]     self.request.unregisterProducer()
[Broker,0,unix]   File "/twisted/Twisted/twisted/protocols/http.py", line 412, in unregisterProducer
[Broker,0,unix]     self.transport.unregisterProducer()
[Broker,0,unix] exceptions.AttributeError: Request instance has no attribute 'transport'

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From bob at redivi.com  Fri Apr 19 02:53:44 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Apr 2002 02:53:44 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEFMCFAA.sean@twistedmatrix.com>
Message-ID: <309B2201-5362-11D6-B58C-0003938210D6@redivi.com>

It's not the order of the rows, it's the order in which the database 
*processes* those rows.  I'm not doing inserts, I'm calling user defined 
functions that do a pretty complex set of updates and inserts on 
multiple tables depending on the new data and existing data.  It really 
needs to process them in the order that they are received.

It's not that the order of every row is significant, the rows represent 
certain events.  Such as remove or add.  There's a big difference 
between add and then remove versus remove and then add.. it's very much 
not commutative, like matrix multiplication.  The order has meaning.  
Each row does have a timestamp, but there isn't a way to say "process 
this once you're sure you're not going to receive another row with an 
earlier timestamp than yourself" and it's not easy to insert rows out of 
order because you need to know exactly what the preceding row(s) 
accomplished, roll it all back, do your thing, and then commit them 
again.

If I can make sure that the rows are processed in the order that they 
are received, I don't have to worry about the consistency.

On Thursday, April 18, 2002, at 10:50 PM, Sean Riley wrote:

> well, knowing nothing about your application... relying on the order of 
> rows
> in a relational database table is generally a bad practice - this order 
> is
> really arbitrary and in some cases could actually change (depending on 
> the
> db you are using - clustered indices as primary keys for example). If 
> you
> want sequence information, I'd recommend you embed it in your rows - 
> don't
> rely on the order of the rows in the table.
>
> anyway.. you can perform syncronous operations through a
> twisted.enterprise.ConnectionPool by creating your own Transaction 
> objects
> and passing them to ConnectionPool::_runIteraction(). Maybe a queue 
> with a
> single db thread that you use syncronously?
>
> twisted.enterprise needs more docs... especially the Row interface, but 
> it
> is good to hear that someone else is using it.
>
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Bob Ippolito
> Sent: Thursday, April 18, 2002 8:14 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] mutexes in twisted.enterprise?
>
>
> Well see the thing is that yes, the db supports transactions [postgres],
> but I need to make sure the db processes requests in the order that
> they're received over the wire, not whenever that particular db
> connection gets around to it.
>
> I don't think I'm currently having issues w/ it right now, but I'm just
> concerned that potentially it could be a problem someday.
>
> On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:
>
>> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>>
>>> I'm doing some twisted.enterprise crap and I was wondering if it was
>>> safe to use thread mutexes to make sure that only one interaction goes
>>> at a time?  I have some queries that shouldn't run in parallel under
>>> certain conditions and I believe forcing it w/ mutexes would be the
>>> safest and easiest solution... but I haven't looked much into what's
>>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>>
>> Interactions all run inside a db transaction, I think (someone please
>> correct me if I'm wrong).  So if your DB supports transactions, then 
>> you
>> should be fine already.  I'm presuming that by "interaction" you mean
>> twisted.enterprise.adbapi.Augmentation.runInteraction?
>>
>>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>>> moment because it's in testing for a few weeks.
>>
>> So already we have legacy systems to support :)
>>
>> I'm not aware of any significant changes to twisted.enterprise since
>> 0.15.2.
>>
>> -Andrew.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Fri Apr 19 07:20:03 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Apr 2002 13:20:03 +0200
Subject: [Twisted-Python] mutexes in twisted.enterprise?
References: <309B2201-5362-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <3CBFFD63.3030200@itamarst.org>

Bob Ippolito wrote:

> It's not the order of the rows, it's the order in which the database 
> *processes* those rows.  I'm not doing inserts, I'm calling user defined 
> functions that do a pretty complex set of updates and inserts on 
> multiple tables depending on the new data and existing data.  It really 
> needs to process them in the order that they are received.

Basically, you should do what Sean suggested - setup a ConnectionPool or
whatever it's called, that only uses one thread. That way only one command
will run at once, and it'll run in order.

Check how enterprise.adbapi interacts with the threadtask module - a 
patch may be necessary in order to be able to use custom thread pools,
in which case you should patch your local install. Meanwhile I'll see if 
I can add this feature so it's in 0.17.3 or whatever the next release is.




From twisted at itamarst.org  Fri Apr 19 07:58:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Apr 2002 13:58:29 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] fixed POST in cgi under distribed web servers
References: <E16yW3D-0007PR-00@zaibach.twistedmatrix.com>
Message-ID: <3CC00665.3000800@itamarst.org>

I patched /twisted/Twisted/ on zaibach with this fix as well, so zaibach 
is now running 0.17.3 + this patch (it was the only way I could test if 
I solved it - we need a CGI accepttest that uses POST, where the web 
server is running over distrib.)




From acapnotic at twistedmatrix.com  Sat Apr 20 12:43:01 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 20 Apr 2002 09:43:01 -0700
Subject: [Twisted-Python] CVS toys today
Message-ID: <1019320981.16863.71.camel@troglodyte.funhouse>

As you have noticed, there is a funny little animal that watches all
your CVS commits and reports them to a mailing list.  I am trying to
turn this from "that thing Kevin set up" into something people use and
understand.  The last two days have seen two critical steps take place
toward this goal: a mostly-automatic test script, and the ability to
re-load the configuration file. 

That is the file freshCfg in the CVSROOT module.  Check it out, change
it, check it back in, run `loginfo.py --reconfigure` on the server and
you should have magic new shoes without me needing to re-start the
process. 

The source code for my CVS toys is currently in
~acapnotic/co-me/cvstoys/

Other questions: 

Say the protocol (or something else) breaks and the service does need to
be re-started.  Which user should be running this process?  Some account
which any CVS-admin can sudo to? 

What's the best way to get rid of those silly "Starting shutdown
sequence..." lines?  

Should I move the code for this into Zaibach's shared CVS repository? 
Before I do, does anyone have any suggestions for naming?  "cvstoys" and
particularly "fresher" seem pretty lame, but it's the best I came up
when I had to put something in the File Save dialog.


Share and enjoy,

 - Kevin

-- 
The moon is first quarter, 48.7% illuminated, 7.3 days old.



From twisted at itamarst.org  Sun Apr 21 15:19:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 21 Apr 2002 21:19:42 +0200
Subject: [Twisted-Python] Twisted and Component Architecture
Message-ID: <3CC310CE.9000405@itamarst.org>

Well, since it's been mentioned here, guess I'll step in.

First, I implemented a simplistic system because I needed adapters for 
Twisted's config system (it used to use mixin classes *shudder*), so I 
quickly wrote up something which implemented them. The fact that 
__implements__ checks the class is an implementation artifact - I can 
easily change it so it works like Zope3's.

Which brings us to the next issue - should I be using Zope3's CA? 
Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and 
even we drop 1.5.2 support we will be using 2.1 as the baseline. 
Interface packages and CA package are 2.2 only.

So, this is what I think I'll do - I'll refactor the minimum 
implementation Twisted's uses, making sure that it uses the same 
semantics and syntax as Zope3's (e.g. __implements__ being a 
tuple/singelton instead of lists - why was this made inconsistent in 
Zope, anyway?). If Zope3 is importable then Zope.CA's implementation 
will be used instead.

Any issues anyone can think of in doing this?




From pje at telecommunity.com  Sun Apr 21 16:32:08 2002
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sun, 21 Apr 2002 15:32:08 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
In-Reply-To: <3CC310CE.9000405@itamarst.org>
Message-ID: <5.1.0.14.0.20020421151013.05a6d780@telecommunity.com>

At 09:19 PM 4/21/02 +0200, Itamar Shtull-Trauring wrote:
>Well, since it's been mentioned here, guess I'll step in.
>
>First, I implemented a simplistic system because I needed adapters for 
>Twisted's config system (it used to use mixin classes *shudder*), so I 
>quickly wrote up something which implemented them. The fact that 
>__implements__ checks the class is an implementation artifact - I can 
>easily change it so it works like Zope3's.

I think it should be sufficient to use Zope 2's Interface implementation, 
with your own adapter system.


>Which brings us to the next issue - should I be using Zope3's CA? 
>Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and even 
>we drop 1.5.2 support we will be using 2.1 as the baseline. Interface 
>packages and CA package are 2.2 only.

As far as I know, older versions of the Interface package are compatible 
with 1.5.2, and the one currently in Zope 2.x is certainly compatible with 
2.1 - maybe 1.5.2 as well.


>So, this is what I think I'll do - I'll refactor the minimum 
>implementation Twisted's uses, making sure that it uses the same semantics 
>and syntax as Zope3's (e.g. __implements__ being a tuple/singelton instead 
>of lists - why was this made inconsistent in Zope, anyway?).

Tuples because they're immutable, and therefore can be used as dictionary 
keys for caching purposes.  Singletons or nested tuples because it's really 
easy to forget to put the comma on the end, and it allows you to join base 
class __implements__ values thusly:

class Foo(Bar,Baz):
     __implements__ = Bar.__implements__, Baz.__implements__

Personally, I'd have preferred to make interfaces addable, such that:

class Foo(Bar,Baz):
     __implements__ = Bar.__implements__ + Baz.__implements__

would actually yield a new Interface object that inherited from the 
previous ones.  Then, an interface assertion would always *be* an interface 
object, which IMHO would simplify many things.  But that's a subject for 
future discussion on Zope3-Dev, methinks.  :)


>  If Zope3 is importable then Zope.CA's implementation will be used instead.
>
>Any issues anyone can think of in doing this?

Having had to deal with Z2 vs. Z3 Interface package quirks in TransWarp, my 
suggestion would be to use the Zope 2 Interface package rather than create 
a new one.  For TransWarp, I'm simply requiring the user to install the 
Interface package; but I imagine you could include it in your distribution 
if the ZPL licensing is agreeable.

For the adapter registry, I would suggest that you use your own, 
independent of Zope 3.  Since Zope 3 allows you to replace its principal 
components (such as the adapter registry), you can always at a later time 
elect to either hook your adapter registry API to the one in Zope, or hook 
the one in Zope to call yours.  So there's no need to worry about it much.

The main issues are in __implements__, __class_implements__, the type 
registry, and the Interface package.  If you don't use the same Interface 
package, then people can't write components that work with both Twisted and 
Zope, because they won't be using the same Interface metaclass, etc.

The alternative, if you don't want to deal with all of this, is to use a 
different attribute name, like __twisted_interfaces__ or something of that 
sort.  Then, a component being used for both has to create two different 
interfaces and declare them both via different attributes, but at least you 
can write something that'll work with both.

Maybe once enough of the Z3 CA stabilizes, and maybe a few cleanups of the 
Interface package occur, we should all lobby to get Interface in the Python 
standard library, where all of these various frameworks could use it.  :)




From bob at redivi.com  Sun Apr 21 17:28:01 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 21 Apr 2002 17:28:01 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <5.1.0.14.0.20020421151013.05a6d780@telecommunity.com>
Message-ID: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com>

I think that wxWindows could be a better choice for the GUI apps 
included with Twisted.  Of course, in Linux, wxWindows maps right onto 
GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
only available for Mac OS X when running XDarwin, which certainly isn't 
preferable.  There is a project to map Gtk to MacOS X, but it's in its 
infancy and I don't see it making any real progress.

Thoughts?

-bob




From twisted at itamarst.org  Tue Apr 23 06:52:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 13:52:27 +0300
Subject: [Twisted-Python] PB and public key cryptography
Message-ID: <3CC53CEB.7000101@itamarst.org>

I've been thinking a bit about this - maybe it ought to be done on the SSL 
level, since SSL already has the public key infrastructure, but the SSL 
model is very annoying and cumbersome to work with. I think the SDSI/SPKI 
infrastructure might suite PB's model very well.

I can't be sure of this, I haven't read in detail, but the model seems to 
match cred's service/perspective/identity model very very well.

E.g., read this - http://theory.lcs.mit.edu/~cis/sdsi/sdsi2/sdsi20_1.html

In cred terms, we would say a service's authorizer is what he describes as a 
"phone book", a name is an identity, and to each identity we can attach 
perspectives - what SPKI calls permissions. So this gives us the capability 
to have certificates for service/identity/perspective grants.

Further info at http://theory.lcs.mit.edu/~cis/sdsi.html

Implementation options:
1. SSL server has certificate, client has no certificate (like the way most 
public web servers work) so SSL is just used for transport encryption. The 
SPKI authentication is done over this, and works the same as it would for 
TCP. Well, not SSL, TLS, but the idea is the same.

2. SPKI may be mappable to SSL certificates, so the user's client 
certificate would include the identity and perspective. This would be a 
horrible PITA.

3. Build a crypto handshake based on SPKI (e.g. there's a simple demo one 
that comes with the Python SPKI toolkit Pisces, I'm sure someone has written 
others). Of course, this adds a whole new level of requirements for 
implementing PB.

All in all (1) seems easiest.




From twisted at itamarst.org  Tue Apr 23 07:18:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 14:18:39 +0300
Subject: [Twisted-Python] PB and public key cryptography
References: <3CC53CEB.7000101@itamarst.org>
Message-ID: <3CC5430F.7050301@itamarst.org>

Two more points - we could use a subset of SPKI that fits our needs, in 
order to not require full support.

E's info about this may be interesting
http://www.erights.org/elib/distrib/index.html

Apparently e-speak, HP's open source protocol (which had a Python 
implementation - HP was doing a lot of Python at one point and perhaps still 
are), used capabilities and SPKI. e-speak seems to have been killed by HP in 
favor of "web services" (http://www.e-speak.net):

"""
HP is pleased to announce the availability of the HP Web Services Platform,
Developer Edition, the next generation of e-Speak. HP has evolved our Web
services pioneering product by delivering dynamic discovery and intelligent
conversations between services in a new standards-based platform. The HP Web
Services Platform, Developer Edition provides support for key Web services
standards such as WSDL, SOAP, UDDI, and XML. By adopting these key standards,
HP enables you to more easily interoperate with disparate environments such as
Microsoft's .NET.
"""

I really like the 'interoperate with disparate environments such as 
Microsoft's .NET.' at the end :)





From twisted at itamarst.org  Tue Apr 23 07:26:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 14:26:34 +0300
Subject: [Twisted-Python] More on e-speak
Message-ID: <3CC544EA.7020907@itamarst.org>

from E FAQ - e-speak sounds more and more like PB (although it did use XML 
IIRC).


6.5. How does E relate to other efforts such as e-speak, EROS, and Mozart?

E is a language and infrastructure for secure distributed applications; 
e-speak provides only the infrastructure. Both E and e-speak use capability 
mechanisms for access control, while e-speak also has mechanisms for naming 
and discovery. Both E and e-speak have trusted code that mediates requests, 
allowing a degree of manageability not provided by systems that don't 
mediate, such as Jini. Unlike E, e-speak is language independent, having had 
programming libraries for Java, Python, C++, and Perl (in various stages of 
completeness) in addition to a version for document exchange programming in 
XML. The E language makes security guarantees that e-speak cannot. For 
example, an E program can be analyzed for capability confinement. [Alan Karp]




From jim at zope.com  Tue Apr 23 09:29:05 2002
From: jim at zope.com (Jim Fulton)
Date: Tue, 23 Apr 2002 09:29:05 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
References: <3CC310CE.9000405@itamarst.org>
Message-ID: <3CC561A1.F38B3994@zope.com>

Itamar Shtull-Trauring wrote:
> 
> Well, since it's been mentioned here, guess I'll step in.
> 
> First, I implemented a simplistic system because I needed adapters for
> Twisted's config system (it used to use mixin classes *shudder*), so I
> quickly wrote up something which implemented them. The fact that
> __implements__ checks the class is an implementation artifact - I can
> easily change it so it works like Zope3's.

Great!

> Which brings us to the next issue - should I be using Zope3's CA?
> Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and
> even we drop 1.5.2 support we will be using 2.1 as the baseline.
> Interface packages and CA package are 2.2 only.

Hm. I don't remember if there's any important reason why the Interface
and ComponentArchitecture packages depend on python 2.2. I suspect that
there isn't. Assuming that there is no important reason for them to
depend on 2.2, I'd be happy to see them work with Python 2 or, if necessary
Python 1.5. Perhaps, as Phillip suggests, it would be best to focus on
interfaces. I ended up doing a bunch of cleanup and refactoring in the
Interface package for Zope 3 and it would be nice to make that available
for earlier versions of Python, especially Python 2.
 
> So, this is what I think I'll do - I'll refactor the minimum
> implementation Twisted's uses, making sure that it uses the same
> semantics and syntax as Zope3's (e.g. __implements__ being a
> tuple/singelton instead of lists - why was this made inconsistent in
> Zope, anyway?).

Inconsistent? With what? Tuples and interfaces are allowed so that:

  - it's easy to spell implementing one interface:

      __implements__ = Ifoo

    which is very common

  - make it easy to compose implementation specifications:

      __implements__ = IFoo, some_base_class.__implements__

  - Make the specifications immutable to facilitate caching.

> If Zope3 is importable then Zope.CA's implementation
> will be used instead.
> 
> Any issues anyone can think of in doing this?

CA is a lot younger than Interface, so it's still changing quite
a bit. You might want to wait a little longer for the changes to
settle out.

Let us know what you want to do and we'll be willing to port the
software back.

Jim

--
Jim Fulton           mailto:jim at zope.com       Python Powered!        
CTO                  (888) 344-4332            http://www.python.org  
Zope Corporation     http://www.zope.com       http://www.zope.org



From jason at crash.org  Tue Apr 23 13:39:38 2002
From: jason at crash.org (Jason Asbahr)
Date: Tue, 23 Apr 2002 12:39:38 -0500
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com>
Message-ID: <15C1E992-56E1-11D6-A212-000393753460@crash.org>

I've used wxPython on Windows and I like it -- it produces a GUI that 
looks and feels like users expect it should.  It was easy to work with 
and had all the features I needed for that project.  I haven't tried it 
on other platforms -- curious to hear reports from anyone who has.  The 
fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
is a big plus.

Jason



On Sunday, April 21, 2002, at 04:28 PM, Bob Ippolito wrote:

>
> I think that wxWindows could be a better choice for the GUI apps 
> included with Twisted.  Of course, in Linux, wxWindows maps right onto 
> GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
> native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
> only available for Mac OS X when running XDarwin, which certainly isn't 
> preferable.  There is a project to map Gtk to MacOS X, but it's in its 
> infancy and I don't see it making any real progress.
>
> Thoughts?
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From bob at redivi.com  Tue Apr 23 14:24:13 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 23 Apr 2002 14:24:13 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <15C1E992-56E1-11D6-A212-000393753460@crash.org>
Message-ID: <505E70CC-56E7-11D6-8196-0003938210D6@redivi.com>

Well, it sort of runs on Mac OS X, but it's a helluva lot closer than 
GTK is to running without an X11 server on OS X :)

On Tuesday, April 23, 2002, at 01:39 PM, Jason Asbahr wrote:

>
> I've used wxPython on Windows and I like it -- it produces a GUI that 
> looks and feels like users expect it should.  It was easy to work with 
> and had all the features I needed for that project.  I haven't tried it 
> on other platforms -- curious to hear reports from anyone who has.  The 
> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
> is a big plus.
>
> Jason
>
>
>
> On Sunday, April 21, 2002, at 04:28 PM, Bob Ippolito wrote:
>
>>
>> I think that wxWindows could be a better choice for the GUI apps 
>> included with Twisted.  Of course, in Linux, wxWindows maps right onto 
>> GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
>> native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
>> only available for Mac OS X when running XDarwin, which certainly 
>> isn't preferable.  There is a project to map Gtk to MacOS X, but it's 
>> in its infancy and I don't see it making any real progress.
>>
>> Thoughts?
>>
>> -bob
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Apr 23 14:40:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Apr 2002 13:40:35 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
In-Reply-To: <3CC561A1.F38B3994@zope.com>
References: <3CC310CE.9000405@itamarst.org> <3CC561A1.F38B3994@zope.com>
Message-ID: <20020423184035.GB11824@twistedmatrix.com>

On Tue, Apr 23, 2002 at 09:29:05AM -0400, Jim Fulton wrote:
> Itamar Shtull-Trauring wrote:
> > So, this is what I think I'll do - I'll refactor the minimum
> > implementation Twisted's uses, making sure that it uses the same
> > semantics and syntax as Zope3's (e.g. __implements__ being a
> > tuple/singelton instead of lists - why was this made inconsistent in
> > Zope, anyway?).
> 
> Inconsistent? With what? Tuples and interfaces are allowed so that:

It's inconsistent with itself.  This is an unfortunate wart of Python, I
think, that because it's easy to forget the trailing ',' to create a
tuple, spelling gets mixed up in the way metadata is defined.
__implements__ can an interface or a tuple which contains either tuples,
interfaces, or both.  While this isn't really a big problem, it sure
makes writing code that deals with __implements__ (from the other side)
annoying.

> CA is a lot younger than Interface, so it's still changing quite
> a bit. You might want to wait a little longer for the changes to
> settle out.
> 
> Let us know what you want to do and we'll be willing to port the
> software back.

(Correct me if I'm wrong, itamar, but) I think that the implementation
we have right now is adequate for our purposes -- we'll try to keep
evolving it so that Twisted will work with Zope3 components.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From cpaul at telemetrybox.org  Tue Apr 23 14:51:30 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 23 Apr 2002 08:51:30 -1000
Subject: [Twisted-Python] International SysOp Appreciation Day
Message-ID: <20020423085130.B1632@Skaffen.pdchawaii.com>

May 2nd is International SysOp Appreciation Day.

This is the day to show your gratitude to the hard working SysOp who makes the
+IT in your organization run smoothly.  You can show your respect by giving
+candy, flowers, small gifts or even a simple GPG-signed "Thank You" email.


Take care,
Charles Paul




From carmstro at twistedmatrix.com  Tue Apr 23 16:03:26 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 23 Apr 2002 15:03:26 -0500
Subject: [Twisted-Python] International SysOp Appreciation Day
In-Reply-To: <20020423085130.B1632@Skaffen.pdchawaii.com>
References: <20020423085130.B1632@Skaffen.pdchawaii.com>
Message-ID: <20020423200325.GA13730@twistedmatrix.com>

SysOp? I don't think my company runs a BBS. It'd be cool if they did...

On Tue, Apr 23, 2002 at 08:51:30AM -1000, cpaul at telemetrybox.org wrote:
> May 2nd is International SysOp Appreciation Day.
> 
> This is the day to show your gratitude to the hard working SysOp who makes the
> +IT in your organization run smoothly.  You can show your respect by giving
> +candy, flowers, small gifts or even a simple GPG-signed "Thank You" email.



From abo at minkirri.apana.org.au  Tue Apr 23 20:08:26 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 24 Apr 2002 10:08:26 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <15C1E992-56E1-11D6-A212-000393753460@crash.org>
References: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com> <15C1E992-56E1-11D6-A212-000393753460@crash.org>
Message-ID: <20020424000826.GA11824@minkirri.apana.org.au>

On Tue, Apr 23, 2002 at 12:39:38PM -0500, Jason Asbahr wrote:
> 
> I've used wxPython on Windows and I like it -- it produces a GUI that 
> looks and feels like users expect it should.  It was easy to work with 
> and had all the features I needed for that project.  I haven't tried it 
> on other platforms -- curious to hear reports from anyone who has.  The 
> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
> is a big plus.

I've been down the GUI+Python research path a while ago. There is quite a
bit of info on wxWindows and Python, but perhaps most significant is that
pretty much the only reason why wxWindows has not replaced Tk as the
standard Python GUI is platform support, in particular Mac. Last time I
looked, wxWindows+Mac was getting there, but not yet.

I believe even Guido did a test project using both wxWindows and Tk, and
came to the conclusion wxWindows was easyer to develop with, faster, looked
nicer, etc. 

GTK+Glade is a nice combo for working on linux, but portability issues on
Windoze and Mac pretty much count it out for me.

Tk is still a contender just because of it's age.

wxWindows+Boa Constructor would be my tool of choice for a new GUI project.
Boa is still pretty beta, but amazingly functional considering how quick it
was developed.

Things like Qt I didn't really look at, probably because I'm still license
shy for no logical reason.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From bob at redivi.com  Tue Apr 23 22:22:46 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 23 Apr 2002 22:22:46 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <20020424000826.GA11824@minkirri.apana.org.au>
Message-ID: <2AAD40C2-572A-11D6-A50F-0003938210D6@redivi.com>

On Tuesday, April 23, 2002, at 08:08 PM, Donovan Baarda wrote:

> On Tue, Apr 23, 2002 at 12:39:38PM -0500, Jason Asbahr wrote:
>>
>> I've used wxPython on Windows and I like it -- it produces a GUI that
>> looks and feels like users expect it should.  It was easy to work with
>> and had all the features I needed for that project.  I haven't tried it
>> on other platforms -- curious to hear reports from anyone who has.  The
>> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-)
>> is a big plus.
>
> I've been down the GUI+Python research path a while ago. There is 
> quite a
> bit of info on wxWindows and Python, but perhaps most significant is 
> that
> pretty much the only reason why wxWindows has not replaced Tk as the
> standard Python GUI is platform support, in particular Mac. Last time I
> looked, wxWindows+Mac was getting there, but not yet.

I don't know about its support for Mac OS9, but as far as Mac OS X goes 
it seems to be very far along.  It did have some assertion errors when 
running the demo, about a missing menu resource, but they were 
nonfatal.  I think it did crash once when I tried to close something, 
but nonetheless it seemed to be pretty far along.  Visually it looked 
pretty damn close to correct, some of the spacing on the buttons was a 
little off, but even IE has problems with that.  This is from the latest 
CVS, so any of these errors could be works in progress.  The Aqua 
version of Tk isn't really that great either, I've seen it crash and 
I've seen a lot of visual errors.

>
> I believe even Guido did a test project using both wxWindows and Tk, and
> came to the conclusion wxWindows was easyer to develop with, faster, 
> looked
> nicer, etc.
>
> GTK+Glade is a nice combo for working on linux, but portability issues 
> on
> Windoze and Mac pretty much count it out for me.
>

I've done gtk+glade for linux, it works pretty well.. except for the 
fact that the glade tool is terrible to use, I spent more time  fighting 
bugs in the glade designer than it would've taken for me to mock it up 
in gimp/photoshop and then do the XML or python code by hand.

> Tk is still a contender just because of it's age.
>
> wxWindows+Boa Constructor would be my tool of choice for a new GUI 
> project.
> Boa is still pretty beta, but amazingly functional considering how 
> quick it
> was developed.

I don't have experience with Boa Constructor, but it sounds like it's 
better off than glade, from my experience with that ;)

>
> Things like Qt I didn't really look at, probably because I'm still 
> license
> shy for no logical reason.
>

Qt's license is great for X11, but I'm not willing to pay > $1000 (per 
developer+platform combination) to use it for open source work on 
anything else, it really leaves it in a worse spot than GTK or 
wxWindows.  I'd rather donate that money to the wxWindows team or to 
have the GUI portion rewritten with a native library.

-bob




From glyph at twistedmatrix.com  Wed Apr 24 00:58:58 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Apr 2002 23:58:58 -0500
Subject: [Twisted-Python] ANN: glyph-discuss (narcissus would have blushed)
Message-ID: <20020424045858.GA24494@twistedmatrix.com>

My compulsive laziness and baseless arrogance has driven me to create
not only an open-source server framework in python, but also a forum for
my fans to discuss my wacky antics:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/glyph-discuss

I plan to set up a weblog eventually (Donovan Preston has been kind
enough to relieve me of the responsibility of coding it first), but
writing the articles myself all the time takes effort.  I figure, why
write about myself all the time if I can get others to do it for me?

Have fun :-)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From twisted at itamarst.org  Wed Apr 24 09:48:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Apr 2002 16:48:56 +0300
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
References: <3CC310CE.9000405@itamarst.org> <3CC561A1.F38B3994@zope.com>
Message-ID: <3CC6B7C8.7050202@itamarst.org>

OK, in CVS twisted interfaces now act a lot more like Zope's -
__implements__ is a single object or a tuple (or tuple of tuples, etc.) and 
the check if an instance implements an interface is done on the instance, 
not on the object's class.






From shandy at geeky.net  Wed Apr 24 12:04:23 2002
From: shandy at geeky.net (Shandy Brown)
Date: 24 Apr 2002 12:04:23 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <E170KxL-0008F7-00@zaibach.twistedmatrix.com>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com>
Message-ID: <1019664264.1245.18.camel@shitbox>

Everybody's got an opinion.  Here's mine. (these opinions are from my
experience only)

Tk:
 Pros: cross platform
 Cons: ugly results, ugly language

GTK / Glade (LibGlade):
 Pros: separates application logic from interface*
       easy
       looks nice
 Cons: platforms not all there
       2.0 bindings not yet complete (at 1.99.9)

wxWindows:
 Pros: cross platform
 Cons: ??

and then the overlooked option... 

XUL:
 Pros: separates application logic from interface*
       cross platform
       REALLY knows how to use XML (CSS, HTML for free, etc)
 Cons: just became frozen, so docs hard to find
       i suggest here: http://www.xml.com/pub/r/1330

* this is the most important feature I consider with my projects.

Shandy


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020424/2e5f1f35/attachment.pgp 

From twisted at itamarst.org  Wed Apr 24 12:08:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Apr 2002 19:08:25 +0300
Subject: [Twisted-Python] wxWindows vs Gtk
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <3CC6D879.4030203@itamarst.org>

Shandy Brown wrote:

> wxWindows:
>  Pros: cross platform
>  Cons: ??

One con is the fact that it uses lots and lots of memory.


> XUL:
>  Pros: separates application logic from interface*
>        cross platform
>        REALLY knows how to use XML (CSS, HTML for free, etc)
>  Cons: just became frozen, so docs hard to find
>        i suggest here: http://www.xml.com/pub/r/1330

Additonal cons:
Requires the huge Mozilla runtime, far less widgets than other toolkits.

However, if you want to contribute XUL event loop integration we'd be glad 
to have it :)






From glyph at twistedmatrix.com  Wed Apr 24 12:35:19 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 24 Apr 2002 11:35:19 -0500
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <3CC6D879.4030203@itamarst.org>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox> <3CC6D879.4030203@itamarst.org>
Message-ID: <20020424163519.GA4532@twistedmatrix.com>

On Wed, Apr 24, 2002 at 07:08:25PM +0300, Itamar Shtull-Trauring wrote:
> Shandy Brown wrote:
> 
> >wxWindows:
> > Pros: cross platform
> > Cons: ??
> 
> One con is the fact that it uses lots and lots of memory.

Does anybody else find that wxWindows just does packing subtly wrong on
everything but win32?  All the screenshots look just a *little* off
(enough to drive me crazy ^_^)

> >XUL:
> > Pros: separates application logic from interface*
> >       cross platform
> >       REALLY knows how to use XML (CSS, HTML for free, etc)
> > Cons: just became frozen, so docs hard to find
> >       i suggest here: http://www.xml.com/pub/r/1330
> 
> Additonal cons:
> Requires the huge Mozilla runtime, far less widgets than other toolkits.

Even more additional cons:

ugly, slow, javascript-centric

Additional pro:

supports theming and graphics very well

> However, if you want to contribute XUL event loop integration we'd be glad 
> to have it :)

That would be nice, yes :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From arashi1 at pd.jaring.my  Wed Apr 24 13:01:21 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Thu, 25 Apr 2002 01:01:21 +0800
Subject: [Twisted-Python] Twisted is confusing...but I'm not giving up yet!
Message-ID: <200204250101.21166.arashi1@pd.jaring.my>

Hello everyone,

I'm new here. I thought trying to use zope in 1.x days was confusing but 
boy...twisted is realy out there. I can serve static web pages and do some 
cgi stuff but I'm more interested in making web-applications, primarily.

The thing is, from the docs I've read (and that's pretty much all in the 
distro) I'm still confused about what goes where and what to use. It seems 
the Twisted Framework can be used for just about anything except make coffee!

I think there-in lies the "problem". It's overwhelming for the new user. It 
would be nice if I could make a step-by-step tutorial. And I _will_ -  if 
only I can understand it first. When I first got the "hang" of zope, I made a 
tutorial that takes the user from zero to a functioning publicly postable 
job-board with searching facilities. It illustrated zopes potential to a 
newbie using some basic components (custom zclasses).

I'd like to make a similar tutorial for Twisted. If I can hack it, that is...

Basically, I'd have a bunch of classes, each has a "view" method ("display()" 
in Twisted?) and some other methods that would implement some kind of set and 
get functionality to the objects. (I have no idea how to do "searching" in 
Twisted at all). Btw...how do I implement persistence? 

I have a job-board instance that contains multiple job-posting instances. So 
that when you call the job-board's "view", it iterates over the job-posting 
instances there-in and calls their individual "view" methods. The job-board's 
"view" method creates a skeleton where the individual job-posting instances' 
"view" method "slots in".

In zope, I used zclasses to implement it (the tutorial was a zclass tutorial). 
So ZODB pretty much took care of persistence automatically for me. How do I 
do object persistence in Twisted? 

Also...what is "coil"? And how do I use it? It seems to have the same sorta 
modules that is in twisted.tap but I can't figure it out. From the 
literature, I think coil (or is it plugin?) is Twisted's way of doing zope's 
"python-based Products". Am I wrong?

Is there an analogous thingamajig to zope's zodb in Twisted?

-- 
Still-dazed-after-3-days-of-reading-Twisted-code-and-docs,
Mukhsein Johari



From abo at minkirri.apana.org.au  Wed Apr 24 13:23:12 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 25 Apr 2002 03:23:12 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <1019664264.1245.18.camel@shitbox>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <20020424172311.GA11372@minkirri.apana.org.au>

On Wed, Apr 24, 2002 at 12:04:23PM -0400, Shandy Brown wrote:
> Everybody's got an opinion.  Here's mine. (these opinions are from my
> experience only)
[...]
> wxWindows:
>  Pros: cross platform
>  Cons: ??

There was some work going into XML GUI definition support in wxWindows, but
I dunno how far they've got. I think they were aiming for a libglade type
thing.

> and then the overlooked option... 
> 
> XUL:
>  Pros: separates application logic from interface*
>        cross platform

If you can count running under mozillaOS as cross platform...

>        REALLY knows how to use XML (CSS, HTML for free, etc)
>  Cons: just became frozen, so docs hard to find

c'mon, I know it's slow, but frozen is a bit harsh... plodding maybe :-)


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From andrew-twisted at puzzling.org  Thu Apr 25 00:24:37 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 25 Apr 2002 14:24:37 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <1019664264.1245.18.camel@shitbox>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <20020425042437.GA478@frobozz.local>

On Wed, Apr 24, 2002 at 12:04:23PM -0400, Shandy Brown wrote:
> wxWindows:
>  Pros: cross platform
>  Cons: ??

Cons: Very poorly documented.  Unstable.  Code copied and pasted from the
demo app can mysteriously fail to work when used standalone.  Not as
cross-platform as it should be -- I had a weird layout bug once where the
solution was to grovel through the mailing list archives for a few hours
until I saw someone say "Oh yeah, to do blah from the blargh, you need to do
bleep on win32, because it does it like this...".  There was *no* indication
in the documentation that I was doing anything that would have trouble used
cross-platform -- oh, that's right, there is no wxPython documentation, just
links to the C++ API.

In case you couldn't tell, I'm rather scarred by my experience with
wxPython...

-Andrew.




From glyph at twistedmatrix.com  Thu Apr 25 02:15:01 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 25 Apr 2002 01:15:01 -0500
Subject: [Twisted-Python] Twisted is confusing...but I'm not giving up yet!
In-Reply-To: <200204250101.21166.arashi1@pd.jaring.my>
References: <200204250101.21166.arashi1@pd.jaring.my>
Message-ID: <20020425061501.GA19760@twistedmatrix.com>

On Thu, Apr 25, 2002 at 01:01:21AM +0800, Mukhsein Johari wrote:
> Hello everyone,
> 
> I'm new here. I thought trying to use zope in 1.x days was confusing but 
> boy...twisted is realy out there. I can serve static web pages and do some 
> cgi stuff but I'm more interested in making web-applications, primarily.

Glad to hear you're giving it a try.  twisted.web has been lacking in
direction for a little while, but hopefully Donovan will be answering
some of these questions in depth.  Take a look at his "Blog" application
in CVS...

> The thing is, from the docs I've read (and that's pretty much all in the 
> distro) I'm still confused about what goes where and what to use. It seems 
> the Twisted Framework can be used for just about anything except make coffee!

Yes, indeed.  All you have to do in order to use Twisted for something
is write lots of code ;-).

> I think there-in lies the "problem". It's overwhelming for the new user. It 
> would be nice if I could make a step-by-step tutorial. And I _will_ -  if 
> only I can understand it first. When I first got the "hang" of zope, I made a 
> tutorial that takes the user from zero to a functioning publicly postable 
> job-board with searching facilities. It illustrated zopes potential to a 
> newbie using some basic components (custom zclasses).

Step-by-step tutorials to "twisted" are probably a bad idea.  If you are
looking to write web applications, that's one specific facet of Twisted,
but keep in mind that it can be used at multiple levels; writing a web
application in Twisted is very different from Zope; we do not offer a
comprehensive web development framework.  (Yet.)

> I'd like to make a similar tutorial for Twisted. If I can hack it, that is...

HOORAY.  We need a good writer who can dedicate some time to this.  I
hope that we can be responsive enough in answering your questions :).

> Basically, I'd have a bunch of classes, each has a "view" method ("display()" 
> in Twisted?) and some other methods that would implement some kind of set and 
> get functionality to the objects. (I have no idea how to do "searching" in 
> Twisted at all). Btw...how do I implement persistence? 

As it stands, all your objects will be dumped into one big pickle; so
just implement __getstate__ if you need to do something special;
otherwise, don't :-).

> I have a job-board instance that contains multiple job-posting instances. So 
> that when you call the job-board's "view", it iterates over the job-posting 
> instances there-in and calls their individual "view" methods. The job-board's 
> "view" method creates a skeleton where the individual job-posting instances' 
> "view" method "slots in".

Are you looking to back this with a database or just in-memory objects?

> In zope, I used zclasses to implement it (the tutorial was a zclass tutorial).

In twisted, you would likely use regular Python classes to implement it;
most likely (at this point) from twisted.web.widgets; although
the new twisted.web.domtemplate is the future.

> So ZODB pretty much took care of persistence automatically for me. How do I 
> do object persistence in Twisted? 

(See above, and...) if you are looking for something like ZODB, Twisted
doesn't offer it.  Our approach is: either you need a database, or you
need objects.  If you need an object database with all the attendant
trappings, using ZODB is probably your best bet; but if you need just a
reasonable quantity of objects persisted, just use the Application class
as the root of your system, and have it automatically persist.

If you require a relational databse, see twisted.enterprise; especially
twisted.enterprise.adbapi and twisted.enterprise.row.  These are still
works in progress but there is a basic outline there for how a
database-backed application would be written.

> Also...what is "coil"? And how do I use it? It seems to have the same sorta 
> modules that is in twisted.tap but I can't figure it out. From the 
> literature, I think coil (or is it plugin?) is Twisted's way of doing zope's 
> "python-based Products". Am I wrong?

That's pretty close to accurate; except for the fact that Products are
specifically web services and COIL provides configuration for
*everything*.

> Is there an analogous thingamajig to zope's zodb in Twisted?

No.  Nor do we have plans for it.  At one point, I thought that it might
be possible to improve upon the ZODB; after implementing some prototypes
and trying to devise a strategy I came to the conclusion that ZODB is
pretty darn good for what it does, and that the perceived deficiencies I
wanted to correct are inherent to object databases.  Still, I find that
when one has a large amount of data to persist, a non-OODBMS strategy is
best.  I do have a peculiar perspective though, because the datasets I
have to work with are usually either VERY large or VERY small.

Still, ZODB is good at that.  itamar's work on integrating Twisted and
Zope will hopefully make that easy.

> -- 
> Still-dazed-after-3-days-of-reading-Twisted-code-and-docs,
> Mukhsein Johari

I don't think that feeling ever goes away -- I've been *writing* Twisted
code for two years and I still feel dazed ;-).  Maybe you can help by
documenting some of this stuff properly!

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From glyph at twistedmatrix.com  Thu Apr 25 20:03:41 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 25 Apr 2002 19:03:41 -0500
Subject: [Twisted-Python] twistedmatrix.com now un-wedged
Message-ID: <20020426000341.GA2058@twistedmatrix.com>

If you were running a personal server on twistedmatrix.com, you'll have
to restart it now.

Zaibach was effectively crashed today for several hours, while various
services failed due to memory allocation errors.

We are conducting a thorough investigation of the cause.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From twisted at itamarst.org  Fri Apr 26 10:13:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Apr 2002 16:13:22 +0200
Subject: [Twisted-Python] DICE Job - Austin-Games (Network, Server) Programmer
Message-ID: <3CC96082.10907@itamarst.org>

Maybe someone's interested? ;)

<http://www.dice.com/DandL/c/cxspi.JO63203LEJD.html>




From a.d.stribblehill at durham.ac.uk  Fri Apr 26 09:24:14 2002
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Fri, 26 Apr 2002 14:24:14 +0100
Subject: [Twisted-Python] [PATCH] Recognise multiple possible line-endings for LineReciever
Message-ID: <20020426132414.GH9850@womble.dur.ac.uk>

The attached patch changes LineReceiver to call out to
self.splitAtNewline for line splitting rather than doing it within
dataReceived. It doesn't change the default behaviour in any way.

However, if the user chooses to change their protocol from:

| class MyProto(base.LineReceiver):
|    ...

to

| class MyProto(base.MultiLinebreakMixin, base.LineReceiver)
|    ...

lines will be split on the first (or longest, if there's a tie)
line-break in the list self.newlines (by default, CRLF, CR, LF). This
has the effect that I can netcat (nc) to servers and they'll treat my
\n as a newline.

I dropped a unit test into test_protocol.py and it even passes!

I'm afraid the patch is relative to 0.17-3; I can't cope with new
versions every day ;)

Oh yeah: I hereby relinquish copyright for the code in the attached
patch and any subsequent code I contribute to Twisted, to Matthew
Lefkowitz. Much good may it do him :>

-- 
PORTLAND PLYMOUTH
MAINLY WESTERLY 5 OR 6. SHOWERS. GOOD
-------------- next part --------------
diff -u --exclude=*.pyc -r twisted-0.17.3.orig/twisted/protocols/basic.py twisted-0.17.3/twisted/protocols/basic.py
--- twisted-0.17.3.orig/twisted/protocols/basic.py	Mon Jan 21 23:06:37 2002
+++ twisted-0.17.3/twisted/protocols/basic.py	Fri Apr 26 12:52:41 2002
@@ -139,6 +139,9 @@
     delimiter = '\r\n'
     MAX_LENGTH = 16384
 
+    def splitAtNewline(self, data):
+        return string.split(self.__buffer, self.delimiter, 1)
+
     def dataReceived(self, data):
         """Protocol.dataReceived.
         Translates bytes into lines, and calls lineReceived (or
@@ -147,8 +150,7 @@
         self.__buffer = self.__buffer+data
         while self.line_mode:
             try:
-                line, self.__buffer = string.split(self.__buffer,
-                                                   self.delimiter, 1)
+                line, self.__buffer = self.splitAtNewline(self.__buffer)
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
                     self.transport.loseConnection()
@@ -198,6 +200,38 @@
         """Sends a line to the other end of the connection.
         """
         self.transport.write(line + self.delimiter)
+
+
+class MultiLinebreakMixin:
+    """A mixin class, designed for LineReciever. List \'newlines\'
+    is a list of the possible line endings (default CRLF, CR, LF).
+
+    This does _not_ affect the output line ending.
+    """
+    newlines = ['\r\n', '\n', '\r']
+
+    def splitAtNewline(self, data):
+        """Split a string of data on the first (and longest)
+        line-separator of self.newlines.
+        """
+        def cmpPossibleSplits(a,b):
+            if a[0] == -1: return +1
+            if b[0] == -1: return -1
+            epsilon=cmp(a[0], b[0])
+            if epsilon != 0:
+                return epsilon
+            else:
+                return -cmp(len(a[1]), len(b[1]))
+
+        newlineHits=map(
+            lambda delim, data=data: (string.find(data,delim),delim),
+            self.newlines)
+        newlineHits.sort(cmpPossibleSplits)
+        bestBreak = newlineHits[0]
+        if bestBreak[1] == -1:
+            return [data]
+        else:
+            return string.split(data, bestBreak[1], 1)
 
 
 class Int32StringReceiver(protocol.Protocol):
diff -u --exclude=*.pyc -r twisted-0.17.3.orig/twisted/test/test_protocols.py twisted-0.17.3/twisted/test/test_protocols.py
--- twisted-0.17.3.orig/twisted/test/test_protocols.py	Tue Apr  9 21:37:03 2002
+++ twisted-0.17.3/twisted/test/test_protocols.py	Fri Apr 26 13:24:30 2002
@@ -122,6 +122,20 @@
                 a.dataReceived(s)
             self.failUnlessEqual(self.output, a.received)
 
+
+class MultiLinebreakTestCase(unittest.TestCase):
+
+    def testNoLineEnding(self):
+        testData = {'foo bar': ['foo bar'],
+                    'foo\nbar': ['foo', 'bar'],
+                    'foo\rbar': ['foo', 'bar'],
+                    'foo\r\nbar': ['foo', 'bar'],
+                    'foo\nbar\nbaz': ['foo', 'bar\nbaz']}
+        a = basic.MultiLinebreakMixin()
+        for i,o in testData.items():
+            self.failUnlessEqual(a.splitAtNewline(i), o)
+    
+
 class TestNetstring(basic.NetstringReceiver):
 
     def connectionMade(self):
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020426/32f60ae3/attachment.pgp 

From twisted at itamarst.org  Sat Apr 27 10:56:59 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Apr 2002 16:56:59 +0200
Subject: [Twisted-Python] WebDAV / FTP / etc.
Message-ID: <3CCABC3B.1080201@itamarst.org>

Various thoughts - if someone ever implements this stuff or refactors 
FTP server, talk to me first.

1. WebDAV, FTP, sftp, HTTP for file serving - they're all basically 
using three interfaces (only WebDAV makes this explicit.)

   ICollection - collection of IEntities (a "directory")
   IEntity - an entity that stores data (a "file")
   IProperyManager - set and get properties (implemented by ICollections
                     and IEntities.)

So, we define the interfaces, and then write at least one implemntation, 
a filesystem backed one. FTP, WebDAV and twisted.web.static would all 
depend on these interfaces, and given a FS-backed implementation could 
serve files.

2. WebDAV does *not* depend on twisted.web - it's a separate HTTP-based 
protocol. Note that WebDAV has its own port (e.g. because it breaks with 
certain web proxies) and in general the concept of twisted.web's 
Resource doesn't map to WebDAV, since WebDAV isn't supposed to be 
*doing* stuff, it's for *editing* entities.




From twisted at itamarst.org  Sun Apr 28 18:07:48 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Apr 2002 00:07:48 +0200
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
Message-ID: <3CCC72B4.50601@itamarst.org>

Want an email yourname at sikrit.info? Want a subdomain yourname.sikrit.info?

I am now offering both, under the following terms - you must write 10 
tests a month for Twisted as rent. These tests can't be the same as 
those you may use to get other domains with similar agreements. In 
return, you will get an email address and subdomain forwarded to an IP 
of your choice, or URL forwarding.

Offers to write documentation instead of tests are also accepted.




From glyph at twistedmatrix.com  Sun Apr 28 17:27:03 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Apr 2002 16:27:03 -0500
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
In-Reply-To: <3CCC72B4.50601@itamarst.org>
References: <3CCC72B4.50601@itamarst.org>
Message-ID: <20020428212703.GA29011@twistedmatrix.com>

In a similar offer, twistedmatrix.com subdomains are available under the
following terms:

If you maintain twisted.names to the point where it can serve all of
twistedmatrix.com's needs (BIND zone transfers and all), you get
yourname.twistedmatrix.com for life.  Until that point, you can get
yourname.twistedmatrix.com by writing 20 tests in one month, with the
same 10-test-a-month upkeep as sikrit.info.

On Mon, Apr 29, 2002 at 12:07:48AM +0200, Itamar Shtull-Trauring wrote:
> Want an email yourname at sikrit.info? Want a subdomain yourname.sikrit.info?
> 
> I am now offering both, under the following terms - you must write 10 
> tests a month for Twisted as rent. These tests can't be the same as 
> those you may use to get other domains with similar agreements. In 
> return, you will get an email address and subdomain forwarded to an IP 
> of your choice, or URL forwarding.
> 
> Offers to write documentation instead of tests are also accepted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From carmstro at twistedmatrix.com  Sun Apr 28 17:39:30 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 28 Apr 2002 17:39:30 -0400
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
In-Reply-To: <20020428212703.GA29011@twistedmatrix.com>
References: <3CCC72B4.50601@itamarst.org> 
	<20020428212703.GA29011@twistedmatrix.com>
Message-ID: <1020029972.975.1.camel@radii>

On Sun, 2002-04-28 at 17:27, Glyph Lefkowitz wrote:
> In a similar offer, twistedmatrix.com subdomains are available under the
> following terms:
> 
> If you maintain twisted.names to the point where it can serve all of
> twistedmatrix.com's needs (BIND zone transfers and all), you get
> yourname.twistedmatrix.com for life.  Until that point, you can get
> yourname.twistedmatrix.com by writing 20 tests in one month, with the
> same 10-test-a-month upkeep as sikrit.info.

I've wanted this for a long time. Sign me up for the tests. Got a list
of tests yet? =)
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From coop at coopweb.org  Sun Apr 28 17:29:09 2002
From: coop at coopweb.org (Gavin Cooper)
Date: Sun, 28 Apr 2002 16:29:09 -0500
Subject: [Twisted-Python] get email plus subdomain at fakeroot.org (#@%^@
Message-ID: <20020428212909.GB11246@europa.tranquility.net>

Imagine, you at fakeroot.org! i.never.fakeroot.org! Yes, ~!@ Vanity @!~ 
email addresses and 31337 subdomains can be yours. How is such an 
outragiously great offer possible? Shouldn't an opprotunity like this 
be illegal?

You too are eligable for a vanity subdomain by simple working on 
twisted.names and twisted.mail until their functionality is complete 
and reliable.

What are you waiting for? Start coding for your own subdomain now!

*cough* moshez *cough* squish.fakeroot.org *cough*

Gavin Cooper / skreech



From twisted at itamarst.org  Mon Apr 29 07:00:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Apr 2002 14:00:25 +0300
Subject: [Twisted-Python] Tests we need - a very partial list
Message-ID: <3CCD27C9.1040505@itamarst.org>

1. twisted.protocols.socks

2. twisted.protocols.telnet

3. twisted.protocols.ftp

4. TOC and OSCAR real server testing - make fake accounts on AIM and ICQ 
servers and then test all functionality - sending messages. logon messages, 
etc..

5. twisted.protocols.oscar

6. Make sure transports close connection after loseConnection:
    - immediately if no data is in buffer
    - after they send all buffered data if there is some
    - after producer finishes if a producer is registered

7. Test producers with transports.

8. More tests for everything else (e.g. NNTP and news)

9. Automated CGI and distrib tests for twisted.web - moving tests from 
acceptests into twisted.tests.

10. There are probably lots of other untested things in twisted.web - test them.

11. Tests for all methods of twisted.protocols.http.Request.




From chase at iac.net  Mon Apr 29 16:16:30 2002
From: chase at iac.net (Tim Chase)
Date: Mon, 29 Apr 2002 20:16:30 +0000
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
Message-ID: <20020429201630.C768B6D9C7@fastmail.fm>

Twisted folks,

I experimented briefly with twisted several months ago. After banging
my head against the Zope wall for a while, I am back to twisted. One
ray of hope in the Zope confusion was Zope Page Templates (ZPT).
According to http://www.zopelabs.com/cookbook/998065931, ZPT can be
used outside of Zope. I can kind of envision this, but I am not yet
twisted enough. Is anyone already working on using Page Templates
within a twisted web?

I also saw some mention of using WebWare as a presentation layer. Are
there any examples of using WebWare with twisted web.

Thanks,

Tim Chase
chase at iac.net



From glyph at twistedmatrix.com  Mon Apr 29 17:14:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 29 Apr 2002 16:14:17 -0500
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
In-Reply-To: <20020429201630.C768B6D9C7@fastmail.fm>
References: <20020429201630.C768B6D9C7@fastmail.fm>
Message-ID: <1020114857.714.47.camel@janus>

On Mon, 2002-04-29 at 15:16, Tim Chase wrote:
> Twisted folks,

Hi, Tim! [An eerie chorous of the Twisted minions' voices chants a beat
later: "Hi, Tim!"]

> I experimented briefly with twisted several months ago. After banging
> my head against the Zope wall for a while, I am back to twisted. One
> ray of hope in the Zope confusion was Zope Page Templates (ZPT).
> According to http://www.zopelabs.com/cookbook/998065931, ZPT can be
> used outside of Zope. I can kind of envision this, but I am not yet
> twisted enough. Is anyone already working on using Page Templates
> within a twisted web?

That was originally the plan.  However (*nudge to dp here...*) none of
us have had a good experience with ZPT yet, and very few of us have had
experience with ZPT at all.  If I had any major web projects coming up
in the future, I'd probably implement it myself just to give it a try,
but my work seems to be taking me down a decidedly non-web path for the
time being.  (And those web things I do wouldn't be sufficiently aided
by ZPT to justify the effort.)

> I also saw some mention of using WebWare as a presentation layer. Are
> there any examples of using WebWare with twisted web.

No.  I've mostly decided against webware, since it has a rather naive
worldview and I've been unimpressed with the software technically.  My
impression of the webware _project_ is that it's very well run; their
documentation and support by *far* put Twisted to shame.   However, that
project is producing an application server I'm not too interested in.

Donovan Preston has recently become the de-facto web guru for Twisted,
and his work so far (twisted.web.domtemplate) I find fascinating; it
seems to have most of the advantages of ZPT, but it is a lot simpler.  I
have even somehow managed to coerce him into writing a little bit of
documentation, currently in CVS...

Check that out and let me know if it solves your templating issues.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020429/06ed0e5e/attachment.pgp 

From twisted at itamarst.org  Tue Apr 30 06:08:47 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Apr 2002 12:08:47 +0200
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
References: <20020429201630.C768B6D9C7@fastmail.fm>
Message-ID: <3CCE6D2F.7080001@itamarst.org>

Tim Chase wrote:

 > I experimented briefly with twisted several months ago. After
 > banging my head against the Zope wall for a while, I am back to
 > twisted. One ray of hope in the Zope confusion was Zope Page
 > Templates (ZPT). According to
 > http://www.zopelabs.com/cookbook/998065931, ZPT can be used outside
 > of Zope. I can kind of envision this, but I am not yet twisted
 > enough. Is anyone already working on using Page Templates within a
 > twisted web?

At some point I might try to do it. The main issue is how to deal with
expressions that returns Deferreds. The options are:

1. Render page templates in threads
2. Use stackless
3. Hack the rendering loop so that it can deal with Deferreds correctly.

(2) is coolest, but problematic due to stackless' cross-platform issues. 
(1) is probably slowest option, (3) may be difficult to do, depending on 
how the code is structured.





From twisted at itamarst.org  Tue Apr 30 05:47:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Apr 2002 12:47:18 +0300
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
References: <20020429201630.C768B6D9C7@fastmail.fm> <3CCE6D2F.7080001@itamarst.org>
Message-ID: <3CCE6826.10704@itamarst.org>

Itamar Shtull-Trauring wrote:

> At some point I might try to do it. The main issue is how to deal with
> expressions that returns Deferreds. The options are:

And BTW, domtemplate's lack of Deferred support is also problematic. The Web 
As We Know It is a big database front end, mostly. And database calls block.

I'm thinking we should have a threaded web server for cases where the 
backend is ZODB or RDBMS only, and just access the database directly, 
without using twisted.enterprises.





From acapnotic at twistedmatrix.com  Tue Apr 30 13:05:33 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Apr 2002 10:05:33 -0700
Subject: [Twisted-Python] Intra-process callRemote
Message-ID: <1020186333.6382.22.camel@troglodyte.funhouse>

I've got an arrangement where the obvious way to do things is with a
Viewable...

class StorageThing(pb.Viewable):
    def view_setMessage(self, who, what):
        self._store[who.identityName] = what

class Who(pb.Perspective):
    def setMyMessage(self, what):
        self.storageView.callRemote("setMessage", what)

only, it turns out that some of the "who"s don't really need to be in a
seperate process from the Viewable; storageView is actually a reference
to a ViewPoint instead of a *remote* reference to a ViewPoint, and
ViewPoints don't have callRemote (because, well, they're not remote).

I don't know, maybe PB just isn't quite as transparent as I desire it to
be.  I did so much like the idea of writing this code to communicate
locally now, and just being able to drop in remote objects instead
later.

I could of course do

    def setMyMessage(self, what):
        self.storageView.view_setMessage(self, what)

but that doesn't look nearly as elegant, and I'll have to make duplicate
code with a callRemote if storageView ever becomes remote.

"Still-trying-to-get-this-distributed-object-thing"-ly,

 - Kevin

-- 
The moon is waning gibbous, 86.0% illuminated, 18.4 days old.



From glyph at twistedmatrix.com  Tue Apr 30 14:17:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Apr 2002 13:17:21 -0500
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
In-Reply-To: <3CCE6826.10704@itamarst.org>
References: <20020429201630.C768B6D9C7@fastmail.fm>
	<3CCE6D2F.7080001@itamarst.org>  <3CCE6826.10704@itamarst.org>
Message-ID: <1020190641.330.16.camel@janus>

On Tue, 2002-04-30 at 04:47, Itamar Shtull-Trauring wrote:
> Itamar Shtull-Trauring wrote:
> 
> > At some point I might try to do it. The main issue is how to deal with
> > expressions that returns Deferreds. The options are:
> 
> And BTW, domtemplate's lack of Deferred support is also problematic. The Web 
> As We Know It is a big database front end, mostly. And database calls block.
> 
> I'm thinking we should have a threaded web server for cases where the 
> backend is ZODB or RDBMS only, and just access the database directly, 
> without using twisted.enterprises.

Certainly.  At this point it's still in development, but I think that
DOMtemplate could be modified to support Deferreds pretty easily (after
all, it's almost like WebWidgets, except instead of returning lists of
Deferreds and strings, it returns lists of Deferreds and Nodes).

I may even get around to doing this :-).

As far as threading goes -- we need a threadsafe version of web.Request,
and a way to dispatch requests in an MT way, yes, I agree.  The fact
that this is inefficient should be offset by the fact that every other
web-app framework in the world is at least 3x less efficient than _that_
:)


-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020430/eca9e01c/attachment.pgp 

From glyph at twistedmatrix.com  Tue Apr 30 14:33:54 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Apr 2002 13:33:54 -0500
Subject: [Twisted-Python] Intra-process callRemote
In-Reply-To: <1020186333.6382.22.camel@troglodyte.funhouse>
References: <1020186333.6382.22.camel@troglodyte.funhouse>
Message-ID: <1020191634.330.39.camel@janus>

On Tue, 2002-04-30 at 12:05, Kevin Turner wrote:
> I've got an arrangement where the obvious way to do things is with a
> Viewable...

> only, it turns out that some of the "who"s don't really need to be in a
> seperate process from the Viewable; storageView is actually a reference
> to a ViewPoint instead of a *remote* reference to a ViewPoint, and
> ViewPoints don't have callRemote (because, well, they're not remote).

The reason that this isn't automatic is because PB has the option to
*do* stuff when you send state to other people (such as tracking the
fact that they have said state).  In most simple cases, such as yours,
it's not necessary to completely replicate PB's object-copying
semantics; however, this sort of short-cut for simplicity's sake is not
something the framework can make a decision about for you; trying to run
certain kinds of remote code locally would break it.  (Think about P2P
applications that try to connect to each other by determining the other
end of the connection's IP)

The reason I introduced callRemote was to facilitate this sort of
thing.  Since the only message you expect your object to respond to is
"callRemote", simply implement "callRemote" on a pseudo-ViewPoint,
(similarly to twisted.spread.util.LocalAsRemote -- maybe
LocalAsViewPoint?)
 
> I don't know, maybe PB just isn't quite as transparent as I desire it to
> be.  I did so much like the idea of writing this code to communicate
> locally now, and just being able to drop in remote objects instead
> later.

PB isn't supposed to be transparent.  I think I've made my argument
against transparency before, but it boils down to what I said above;
sometimes, transparency is wrong.  In the cases where it's not, it's
easy to fake using Twisted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020430/113b77b5/attachment.pgp 

From acapnotic at twistedmatrix.com  Fri Apr 26 19:01:56 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 26 Apr 2002 16:01:56 -0700
Subject: [Twisted-Python] Re: processes leaking CPU -- maybe memory?
In-Reply-To: <1019858689.412.4.camel@janus>
References: <20020426172824.GA6909@twistedmatrix.com> 
	<1019857092.18395.36.camel@nero>  <1019858689.412.4.camel@janus>
Message-ID: <1019862116.31991.24.camel@troglodyte.funhouse>

On Fri, 2002-04-26 at 15:04, Glyph Lefkowitz wrote:
> If I'm reading this right, the main server has used 1 minute of CPU
> time; yours has used 5.  The CPU leak in Twisted has been resolved as
> far as I know... does yours have something to do with fresher? 
> (Itamar's server, by contrast, has used 3 CPU seconds and radix's has
> used 0)

Yeah, I guess the leak in Twisted has been resolved, or the other
processes would be racking up more time too.  I don't know, maybe I have
a timeout mis-specified somewhere?

http://twistedmatrix.com/users/acapnotic/mycvs/cvstoys/fresher.py

-- 
The moon is full, 99.7% illuminated, 14.2 days old.



From glyph at twistedmatrix.com  Mon Apr  1 01:01:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:01:51 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA440C7.5020501@itamarst.org>
References: <3CA440C7.5020501@itamarst.org>
Message-ID: <1017477341.333.27.camel@janus>

On Fri, 2002-03-29 at 04:24, Itamar Shtull-Trauring wrote:
> Now you can configure your TAP files through the web!

Nifty, but not quite in line with the vision I have for the way Twisted
ought to work.  It raises an interesting problem though because I can't
figure out how I'd implement such functionality, and I think it's useful
functionality to have :-).

The goal of the .tap/twistd system is to separate the configuration of
the application objects from the way they are run.  The goal of this
separation is to run the same TAP file with multiple "loader" programs,
(theoretically) one for each platform/mainloop.  A development server
might run in a GTK mainloop that instruments various things, to allow
you to view what ports are open, and to where.  The Win32 loader would
allow you to load the same config through an NT Service GUI, or a system
tray icon, depending on whether you purchased the "Duplo" or "Lego"
version of the win32 API.

I can't think of a general solution to the "run a tool which requires
starting up a Twisted service, but also requires arguments" problem, but
it might be useful for each loader to have a "run a coil on this
Application object" option.  (Keep in mind also that it would be neat to
have certain loaders be able to run multiple concurrent application
objects)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020401/b5e74f6b/attachment.sig>

From glyph at twistedmatrix.com  Mon Apr  1 01:01:50 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:01:50 -0600
Subject: [Twisted-Python] More coil TODOs
In-Reply-To: <3CA445CC.8070804@itamarst.org>
References: <3CA445CC.8070804@itamarst.org>
Message-ID: <1017476432.333.11.camel@janus>

On Fri, 2002-03-29 at 04:45, Itamar Shtull-Trauring wrote:
> == Make ports visible ==
> Currently, tcp/udp/ssl are treated as collections of protocol factories. I 
> am going to change this to collections of Ports, so that you can configure 
> interfaces to listen on, context factories for SSL, etc. The protocol 
> factory will just be another attribute.

> This should have no effect on people who are coiling their apps.

Does this affect the API?  I don't want to have listenTCP et. al. taking
something other than a factory (might as well go back to addPort, then).

> == Make old TAPs work ==
> The refactor broke old taps - they can no longer be loaded since they refer 
> to non-existence classes in twisted.internet.app.
> 
> This can probably be easily solved (make a dummy PortsCollection class and 
> delete the attributes of the loaded application that refer to it.)

Please consider this *really* high-priority; I hate to do releases where
previous-version TAP loading is broken.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020401/1505e418/attachment.sig>

From glyph at twistedmatrix.com  Mon Apr  1 01:10:14 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 02:10:14 -0600
Subject: [Twisted-Python] New Member
In-Reply-To: <200203270911.KAA29726@osona.apb.es>
References: <200203270911.KAA29726@osona.apb.es>
Message-ID: <1017648614.659.1.camel@janus>

It sounds like you want some combination of twisted.internet.process and
twisted.python.delay.  Without knowing more about the specifics of your
application it will be tough to help you.

It's not clear, for example, what you mean by "on demand"... through a
web interface?  A GUI?  A wearable device?

On Wed, 2002-03-27 at 03:11, Joan Torres wrote:
> Hi,
>  My name is Joan Torres, I'm working in Port of Barcelona (spain), and 
>  I'm interested in learning more about how to use Twisted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020401/1490ac6b/attachment.sig>

From twisted at itamarst.org  Mon Apr  1 02:05:28 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 12:05:28 +0300
Subject: [Twisted-Python] More coil TODOs
References: <3CA445CC.8070804@itamarst.org> <1017476432.333.11.camel@janus>
Message-ID: <3CA822D8.1060804@itamarst.org>

Glyph Lefkowitz wrote:

>>This should have no effect on people who are coiling their apps.
>>
> 
> Does this affect the API?  I don't want to have listenTCP et. al. taking
> something other than a factory (might as well go back to addPort, then).

No, it won't. I'd just be changing the Collections attached to an
Application by the Configurator. This is why it's good that coil is no
seperate - no need to mess with classes. And no TAP backwards compatability
issues either ;)





From twisted at itamarst.org  Mon Apr  1 02:09:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 12:09:40 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>
Message-ID: <3CA823D4.7050002@itamarst.org>

Glyph Lefkowitz wrote:

> The goal of the .tap/twistd system is to separate the configuration of
> the application objects from the way they are run.

So? when I use the coil app I do not run the .tap, I just configure it.

When I use the twistd app I run the .tap.

What is the issue?





From glyph at twistedmatrix.com  Mon Apr  1 02:15:25 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 03:15:25 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA823D4.7050002@itamarst.org>
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>
	 <3CA823D4.7050002@itamarst.org>
Message-ID: <1017652525.658.31.camel@janus>

On Mon, 2002-04-01 at 03:09, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > The goal of the .tap/twistd system is to separate the configuration of
> > the application objects from the way they are run.
> 
> So? when I use the coil app I do not run the .tap, I just configure it.
> 
> When I use the twistd app I run the .tap.
> 
> What is the issue?

The coil app is an app by itself, right?  And *that* app runs.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020401/d451f1c9/attachment.sig>

From twisted at itamarst.org  Mon Apr  1 03:18:49 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 13:18:49 +0300
Subject: [Twisted-Python] ANN: Twisted 0.16.0
Message-ID: <3CA83409.8080401@itamarst.org>

Twisted is an event-based framework for internet applications. For more
information, visit:

    http://www.twistedmatrix.com

or join the list at:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Twisted joins the fight against Software Piracy
===============================================

The main focus of this release is our new licensing scheme. The Business
Software Alliance may have put it best, in their page on anti-piracy
(http://www.bsa.org/usa/antipiracy/):

"Software pirates not only steal from the companies that make the software,
but with less money for research and development of new software, all users
are hurt.  That's why all software piracy - even one copy you make for a
friend, is illegal."

Software piracy is a serious crime, and one that the Open Source community
has been remarkably lax in pursuing and protecting against.  This is why
Twisted Matrix Laboratories is taking the forefront in Open Source software
registration technology.

In order to do your part to prevent the tragedy of unregistered, unlicensed
software, all you need to do is go to http://www.twistedmatrix.com/license
and enter your user information to obtain a license key.  You can provide us
with as much or as little information as you like!

For more information on how Twisted helps you run licensed, unpirated
Open-Source software, visit:
http://twistedmatrix.com/documents/howto/register


What's New in 0.16.0
====================

- Added Qt event loop support

- FTP client protocol support

- Reworked coil - a web-based configuration system for Twisted servers

- Win32 event loop can now run subprocesses

- Automatic log rotation for servers (and USR1 signal for manual rotation)

- Improved support for registering shutdown methods

- Better XML-RPC integration

- Bug fixes, small feature improvements, and more.


What is Twisted?
================

Twisted is an event-based framework for internet applications.  It includes
a web server, a telnet server, a multiplayer RPG engine, a generic client
and server for remote object access, and APIs for creating new protocols and
services. Twisted supports integration of the Tk, GTK+, Qt or wxPython event
loop with its main event loop. The Win32 event loop is also supported, as is
basic support for running servers on top of Jython.

Twisted currently supports the following protocols, all implemented in pure
python, most of them as both servers and clients:

     - FTP
     - HTTP
     - SOCKSv4
     - SMTP
     - IRC
     - telnet
     - POP3
     - AOL's instant messaging TOC
     - OSCAR, used by AOL-IM as well as ICQ (client only)
     - DNS
     - LDAP (client only)
     - finger
     - Echo, discard, chargen and friends
     - Twisted Perspective Broker

For more information, visit http://www.twistedmatrix.com, or join the list
at http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Mon Apr  1 03:22:36 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 13:22:36 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus>
Message-ID: <3CA834EC.1020206@itamarst.org>

Glyph Lefkowitz wrote:

> The coil app is an app by itself, right?  And *that* app runs.

Yes, but it's a different one than the one that being configured. Again, 
what is the issue?




From glyph at twistedmatrix.com  Mon Apr  1 03:38:29 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 01 Apr 2002 04:38:29 -0600
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA834EC.1020206@itamarst.org>
References: <3CA440C7.5020501@itamarst.org>
	<1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org>
	<1017652525.658.31.camel@janus>  <3CA834EC.1020206@itamarst.org>
Message-ID: <1017657509.659.33.camel@janus>

The issue is that there's no mechanism for the user to select which
mainloop the configuration app should be using.  The default mainloop
might not work on your platform (java, for example)

On Mon, 2002-04-01 at 04:22, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > The coil app is an app by itself, right?  And *that* app runs.
> 
> Yes, but it's a different one than the one that being configured. Again, 
> what is the issue?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020401/c2406ab4/attachment.sig>

From twisted at itamarst.org  Mon Apr  1 05:08:58 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Apr 2002 15:08:58 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org>	<1017477341.333.27.camel@janus>	 <3CA823D4.7050002@itamarst.org>	<1017652525.658.31.camel@janus>  <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus>
Message-ID: <3CA84DDA.6010008@itamarst.org>

Glyph Lefkowitz wrote:

> The issue is that there's no mechanism for the user to select which
> mainloop the configuration app should be using.  The default mainloop
> might not work on your platform (java, for example)

Ah. Well, coil could be turned into a python module, together with a shell 
script/.bat that uses twistd to run it. Once you do the promised event loop 
refactor, that is. :)

What module organization should that be? Tv suggested 
twisted.internet.eventloops.{gtk, select, poll, ...}

The current system is icky. ingtkernet is *such* a bad name, and the others 
aren't any better.





From andrew-twisted at puzzling.org  Mon Apr  1 21:39:13 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 14:39:13 +1000
Subject: [Twisted-Python] We now have a coil command-line app in CVS
In-Reply-To: <3CA84DDA.6010008@itamarst.org>
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus> <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus> <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus> <3CA84DDA.6010008@itamarst.org>
Message-ID: <20020402043913.GA2072@ritsuko.xware.cx>

On Mon, Apr 01, 2002 at 03:08:58PM +0300, Itamar Shtull-Trauring wrote:
> 
> Ah. Well, coil could be turned into a python module, together with a shell 
> script/.bat that uses twistd to run it. Once you do the promised event loop 
> refactor, that is. :)
> 
> What module organization should that be? Tv suggested 
> twisted.internet.eventloops.{gtk, select, poll, ...}

I like the idea of calling them "eventloops", or basically anything other
than "main".  "main" tends to clash with functions in my modules, and
"eventloop" gives a clearer idea of its purpose.

Tv's suggestion looks reasonable to me... although aren't there really two
types of modules being grouped together there:
  1) Alternatives to the select-based loop (poll, win32)
  2) Add-ons that integrate Twisted's loop with other loops, e.g. gtk,
     Tk, etc...

Or do the 2nd type all assume a select-based loop?  If that's the case, I'd 
suggest they are generalised (it'd be nice for Tk to work with the win32
loop).

I guess then I'd be proposing something like:
  * twisted.internet.eventloops.{select, poll, win32}
  * twisted.internet.eventloops.addons.{gtk, tk, wx, asyncore?, ...}

I'm not really thrilled with the name "addons", but you get the idea.

-Andrew.




From twisted at itamarst.org  Tue Apr  2 02:52:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 11:52:15 +0200
Subject: [Twisted-Python] We now have a coil command-line app in CVS
References: <3CA440C7.5020501@itamarst.org> <1017477341.333.27.camel@janus> <3CA823D4.7050002@itamarst.org> <1017652525.658.31.camel@janus> <3CA834EC.1020206@itamarst.org> <1017657509.659.33.camel@janus> <3CA84DDA.6010008@itamarst.org> <20020402043913.GA2072@ritsuko.xware.cx>
Message-ID: <3CA97F4F.6060101@itamarst.org>

Andrew Bennetts wrote:

> Tv's suggestion looks reasonable to me... although aren't there really two
> types of modules being grouped together there:
>   1) Alternatives to the select-based loop (poll, win32)
>   2) Add-ons that integrate Twisted's loop with other loops, e.g. gtk,
>      Tk, etc...
> 
> Or do the 2nd type all assume a select-based loop?  If that's the case, I'd 
> suggest they are generalised (it'd be nice for Tk to work with the win32
> loop)
Actually, it's more complex:

1a) There's select(), poll() or win32
1b) GTK+ and Qt also replace the event loop, so they are in category (1)
2) wxPython can integrate with anything in (1a), I think
3) Jython totally replaces everything, including the TCP support

The Tk event loop is in category (2) I *think*.




From andrew-twisted at puzzling.org  Tue Apr  2 02:52:31 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 19:52:31 +1000
Subject: [Twisted-Python] Oddities in calling loseConnection from tcp.Port.approveConnection
Message-ID: <20020402095231.GA6286@ritsuko.xware.cx>

Ok, so I know approveConnection is probably going to be removed anyway,
but...

If I have a tcp.Port subclass which calls self.loseConnection() in
approveConnection (e.g. so that it will only accept one connection), then I
get two errors.  First is:
Traceback (most recent call last):
  File "w:\andrew\cvs\Twisted\twisted\internet\main.py", line 206, in doSelect
    if not handfn or handfn() == -1:
  File "w:\andrew\cvs\Twisted\twisted\internet\abstract.py", line 244, in fileno
    raise NotImplementedError(str(self.__class__)+' has no fileno method')
exceptions.NotImplementedError: twisted.protocols.ftp.FTPDataPort has no fileno method

I think the fix for this might be:
diff -u -r1.65 main.py
--- twisted/internet/main.py    1 Apr 2002 06:35:16 -0000       1.65
+++ twisted/internet/main.py    2 Apr 2002 09:41:07 -0000
@@ -203,7 +203,10 @@
             try:
                 why = getattr(selectable, method)()
                 handfn = getattr(selectable, 'fileno', None)
-                if not handfn or handfn() == -1:
+                try:
+                    if not handfn or handfn() == -1:
+                        why = CONNECTION_LOST
+                except NotImplementedError:
                     why = CONNECTION_LOST
             except:
                 log.deferr()

The second error is:
Traceback (most recent call last):
  File "w:\andrew\cvs\Twisted\twisted\internet\main.py", line 215, in doSelect
    selectable.connectionLost()
  File "w:\andrew\cvs\Twisted\twisted\internet\tcp.py", line 476, in connectionLost
    self.socket.close()
exceptions.AttributeError: FTPDataPort instance has no attribute 'socket'

This appears to be because connectionLost is called twice; once when I
originally called loseConnection and again from the select loop.  I'm not
sure what the correct fix is... I don't understand why the select loop is
calling it because removeReader is calling in loseConnection, but perhaps
connectionLost should check self.connected and gracefully deal with being
called twice?

I'll probably be doing my loseConnection from buildProtocol instead of
approveConnection soon, but I suspect that I'll hit these problems there as
well.

-Andrew.




From andrew-twisted at puzzling.org  Tue Apr  2 03:46:57 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Apr 2002 20:46:57 +1000
Subject: [Twisted-Python] Oddities in calling loseConnection from tcp.Port.approveConnection
In-Reply-To: <20020402095231.GA6286@ritsuko.xware.cx>
References: <20020402095231.GA6286@ritsuko.xware.cx>
Message-ID: <20020402104657.GA7759@ritsuko.xware.cx>

On Tue, Apr 02, 2002 at 07:52:31PM +1000, I wrote:
> 
> I'll probably be doing my loseConnection from buildProtocol instead of
> approveConnection soon, but I suspect that I'll hit these problems there as
> well.

This is just to confirm that it still happens when I do loseConnection from 
within buildProtocol of my Factory, which is what you'd expect, looking at 
the code for tcp.Port...

-Andrew.





From twisted at itamarst.org  Tue Apr  2 10:20:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 19:20:12 +0200
Subject: [Twisted-Python] Re: ANN: Twisted 0.16.0
References: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com>
Message-ID: <3CA9E84C.7010601@itamarst.org>

Michal Wallace wrote:

> Okay, I see this was posted yesterday (April Fools day), but
> the site's still up today. 
> 
> Is this for real?

bin/twistd can load license files, yes. If you don't have one it prints 
a nice long error message (which I removed in CVS, so it won't be in 
0.16.1).

Glyph has some insane reason he wants it to be in (rumor has it a rogue 
Pavlovian has linked the registration form to a Certain Person's cage, 
giving him a food pellet every time someone registers. Try not to 
overfeed him.)

> If so, why? How can piracy be a problem for an open source
> project?  How does this licensing scheme prevent it? 

Well, let's quote one the BSA's latest press release:

"""
Washington, DC (March 21) ?In its ongoing effort to protect consumers 
from Internet software pirates and support a safe, secure and legal 
online community, the Business Software Alliance (BSA) announced that 
last month it executed three unannounced court-ordered seizures on 
individuals whom BSA investigated for selling unlicensed software out of 
their homes in Kentucky, Missouri and Pennsylvania. Under the 
supervision of the U.S. Marshals, BSA carried away computers, equipment 
and CDs used in the mail-order operations.

...

The following are helpful tips on safe shopping for software online:

  * Trust Your Instincts -- Whether it is being sold as new or used,
    if a price for software seems too good to be true, it probably is.

...
"""

Now, you wouldn't want any Sikrit PSU Agents showing up at your house, 
asking to see *your* Twisted license, and not being able to show one, 
now would you? And do you really trust a bunch of people giving away 
software for FREE?




From kuran42 at yahoo.com  Tue Apr  2 10:02:56 2002
From: kuran42 at yahoo.com (Jp Calderone)
Date: Tue, 02 Apr 2002 12:02:56 -0500
Subject: [Twisted-Python] OT, sorry [was: Re: ANN: Twisted 0.16.0]
References: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com> <3CA9E84C.7010601@itamarst.org>
Message-ID: <3CA9E440.3010002@yahoo.com>

My country makes me sick.

Itamar Shtull-Trauring wrote:

>
> Well, let's quote one the BSA's latest press release:
>
> """
> Washington, DC (March 21) ?In its ongoing effort to protect consumers 
> from Internet software pirates and support a safe, secure and legal 
> online community, the Business Software Alliance (BSA) announced that 
> last month it executed three unannounced court-ordered seizures on 
> individuals whom BSA investigated for selling unlicensed software out 
> of their homes in Kentucky, Missouri and Pennsylvania. Under the 
> supervision of the U.S. Marshals, BSA carried away computers, 
> equipment and CDs used in the mail-order operations.
>
> ...
>
> The following are helpful tips on safe shopping for software online:
>
>  * Trust Your Instincts -- Whether it is being sold as new or used,
>    if a price for software seems too good to be true, it probably is.
>
> ...
> """






From sabren at manifestation.com  Tue Apr  2 08:55:58 2002
From: sabren at manifestation.com (Michal Wallace)
Date: Tue, 2 Apr 2002 10:55:58 -0500 (EST)
Subject: [Twisted-Python] Re: ANN: Twisted 0.16.0
In-Reply-To: <3CA83409.8080401@itamarst.org>
Message-ID: <Pine.LNX.4.44.0204021043340.31094-100000@mercury.sabren.com>

On Mon, 1 Apr 2002, Itamar Shtull-Trauring wrote:
 
> For more information on how Twisted helps you run licensed, unpirated
> Open-Source software, visit:
> http://twistedmatrix.com/documents/howto/register

Okay, I see this was posted yesterday (April Fools day), but
the site's still up today. 

Is this for real?

If so, why? How can piracy be a problem for an open source
project?  How does this licensing scheme prevent it? 

Cheers,

- Michal   http://www.sabren.net/   sabren at manifestation.com 
------------------------------------------------------------
Give your ideas the perfect home: http://www.cornerhost.com/
 cvs - weblogs - php - linux shell - perl/python/cgi - java
------------------------------------------------------------




From mattcampbell at pobox.com  Tue Apr  2 12:29:40 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 2 Apr 2002 13:29:40 -0600
Subject: [Twisted-Python] The Twisted registration form
Message-ID: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com>

I noticed that the URL to which the Twisted registration form is
submitted, http://www.twistedmatrix.com/license/twisted-registration,
has no extension at the end.  So is this form handled by a .epy
script?  If not, how was the form handler registered with the Web
server?  THanks.
--
Matt Campbell
E-mail and MSN Messenger Service:  mattcampbell at pobox.com
Web site:  http://pobox.com/~mattcampbell/




From twisted at itamarst.org  Tue Apr  2 13:34:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Apr 2002 22:34:42 +0200
Subject: [Twisted-Python] The Twisted registration form
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com>
Message-ID: <3CAA15E2.2060309@itamarst.org>

Matt Campbell wrote:

> I noticed that the URL to which the Twisted registration form is
> submitted, http://www.twistedmatrix.com/license/twisted-registration,
> has no extension at the end.  So is this form handled by a .epy
> script?  If not, how was the form handler registered with the Web
> server?  THanks.

The code is in doc/examples/regserver.py, something like that (in 0.16.0
tarball). Either uses twisted.web.widgets, or it's a custom
twisted.web.resource.Resource, I don't remember.





From mattcampbell at pobox.com  Tue Apr  2 12:45:53 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 2 Apr 2002 13:45:53 -0600
Subject: [Twisted-Python] The Twisted registration form
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org>
Message-ID: <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>

I see that the RegServer class is a subclass of Form, which is a type
of widget.  But how does one add this widget to a Web server which
seems to use primarily static content?  Is the widget instantiated and
called from a .epy script, or is some other technique used?  Thanks.

Itamar wrote:
> The code is in doc/examples/regserver.py, something like that (in
0.16.0
> tarball). Either uses twisted.web.widgets, or it's a custom
> twisted.web.resource.Resource, I don't remember.




From carmstro at twistedmatrix.com  Tue Apr  2 12:54:14 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 2 Apr 2002 13:54:14 -0600
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com>
Message-ID: <20020402195414.GA31050@twistedmatrix.com>

On Tue, Apr 02, 2002 at 01:45:53PM -0600, Matt Campbell wrote:
> I see that the RegServer class is a subclass of Form, which is a type
> of widget.  But how does one add this widget to a Web server which
> seems to use primarily static content?  Is the widget instantiated and
> called from a .epy script, or is some other technique used?  Thanks.

It's a pain to deploy Widgets-based apps as of yet. We're planning on
doing something that will allow you to just throw any Resource-defining
modules in a directory and have it show up on your server, but we haven't
figured out exactly how it will work yet.

Right now you either have to be able to instantiate a widget through
telnet or manhole interfaces on an already-running server, or create
your own .tac file that instantiates a web.server.Site with a Widget in it.



From cpaul at telemetrybox.org  Tue Apr  2 13:15:58 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 2 Apr 2002 10:15:58 -1000
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <20020402195414.GA31050@twistedmatrix.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com> <20020402195414.GA31050@twistedmatrix.com>
Message-ID: <20020402101558.A19217@Skaffen.pdchawaii.com>

On Tue, Apr 02, 2002 at 01:54:14PM -0600, Chris Armstrong wrote:
> It's a pain to deploy Widgets-based apps as of yet. We're planning on
> doing something that will allow you to just throw any Resource-defining
> modules in a directory and have it show up on your server, but we haven't
> figured out exactly how it will work yet.
> 
> Right now you either have to be able to instantiate a widget through
> telnet or manhole interfaces on an already-running server, or create
> your own .tac file that instantiates a web.server.Site with a Widget in it.

Can someone show an example of a .tac file that does just that?



From carmstro at twistedmatrix.com  Tue Apr  2 13:30:46 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 2 Apr 2002 14:30:46 -0600
Subject: [Twisted-Python] The Twisted registration form
In-Reply-To: <20020402101558.A19217@Skaffen.pdchawaii.com>
References: <000d01c1da7c$bc601d60$08f71d41@KSCABLE.com> <3CAA15E2.2060309@itamarst.org> <001c01c1da7f$005421e0$08f71d41@KSCABLE.com> <20020402195414.GA31050@twistedmatrix.com> <20020402101558.A19217@Skaffen.pdchawaii.com>
Message-ID: <20020402203045.GA31989@twistedmatrix.com>

On Tue, Apr 02, 2002 at 10:15:58AM -1000, cpaul at telemetrybox.org wrote:
> On Tue, Apr 02, 2002 at 01:54:14PM -0600, Chris Armstrong wrote:
> > It's a pain to deploy Widgets-based apps as of yet. We're planning on
> > doing something that will allow you to just throw any Resource-defining
> > modules in a directory and have it show up on your server, but we haven't
> > figured out exactly how it will work yet.
> > 
> > Right now you either have to be able to instantiate a widget through
> > telnet or manhole interfaces on an already-running server, or create
> > your own .tac file that instantiates a web.server.Site with a Widget in it.
> 
> Can someone show an example of a .tac file that does just that?


here's a simple one off the top of my head:

-- snip --

from twisted.internet import app
from twisted.web import server

import my_web_app

application = app.Application("my_web_app")
s = server.Site(my_web_app.MyGadget())
application.listenTCP(80, s)

-- snip --

You can also look in Twisted/doc/examples/; for example, bugs.tac is a
webwidgets app.



From andrew-twisted at puzzling.org  Thu Apr  4 17:06:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Apr 2002 10:06:46 +1000
Subject: [Twisted-Python] Deferreds
Message-ID: <20020405000646.GA472@frobozz.local>

I've been thinking about Deferreds lately, and I think they are lacking
something that I would find very handy.

Chaining success and error callbacks is very handy, but occasionally I find
myself having to do:

    deferred = obj.runAsynchronousThing(...)
    deferred.addCallbacks(success, error)
    # Ensure that we close the objectoid
    deferred.addCallbacks(lambda x, obj=obj: obj.close(),
                          lambda x, obj=obj: obj.close())
    
It'd be nice to have a deferred equivalent of "finally", so that you could
simply do this instead:

    deferred = obj.runAsynchronousThing(...)
    deferred.addCallbacks(success, error)
    # Ensure that we close the objectoid
    deferred.finally(obj.close)

You could of course register multiple final callbacks, all of which take no
arguments.

Would other people find this useful?

On a related note, I recall an IRC discussion where a few of us thought that
Deferred.callback(..) should be Deferred.finish(..) and similarly
.errback(..) should be .fail(..).

-Andrew.




From andrew-twisted at puzzling.org  Thu Apr  4 17:35:00 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Apr 2002 10:35:00 +1000
Subject: [Twisted-Python] Deferreds
In-Reply-To: <20020405000646.GA472@frobozz.local>
References: <20020405000646.GA472@frobozz.local>
Message-ID: <20020405003500.GC472@frobozz.local>

I feel silly replying to myself, but anyway...

On Fri, Apr 05, 2002 at 10:06:46AM +1000, Andrew Bennetts wrote:
> I've been thinking about Deferreds lately, and I think they are lacking

I've been chatting about Deferreds on IRC with Drew, and he's made me
realise a few more things:
  1) There's currently no way to cancel a Deferred
  2) It looks like you can fire a Deferred multiple times.

You could workaround 1 by calling the errback if it wasn't for 2.

Point 2 surprised me; I expected Deferreds to be single shot (though I can
imagine that a multi-use Deferred would be ideal for some situations).

----
class AlreadyCalledError(Exception):
    pass

class OneShotDeferred(Deferred):
    def _runCallbacks(self, result, isError):
        if self.called:
            raise AlreadyCalledError
        Deferred._runCallbacks(self, result, isError)
----

But I think that this behaviour should probably be the default anyway (while
still providing the old behaviour).

-Andrew.




From twisted at itamarst.org  Fri Apr  5 02:02:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 05 Apr 2002 11:02:56 +0200
Subject: [Twisted-Python] Deferreds
References: <20020405000646.GA472@frobozz.local> <20020405003500.GC472@frobozz.local>
Message-ID: <3CAD6840.90700@itamarst.org>

Andrew Bennetts wrote:

>   1) There's currently no way to cancel a Deferred
>   2) It looks like you can fire a Deferred multiple times.

Cancel? That's not really possible. You don't know when the .arm() was 
called, so for all you know the callbacks will be called immediately 
when you passed the result.

> Point 2 surprised me; I expected Deferreds to be single shot (though I can
> imagine that a multi-use Deferred would be ideal for some situations).

I think yer right and that this shouldn't be possible.




From twisted at itamarst.org  Fri Apr  5 05:06:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 05 Apr 2002 14:06:27 +0200
Subject: [Twisted-Python] Component Architecture in coil
Message-ID: <3CAD9343.4070504@itamarst.org>

This is all based on Zope3 component architecture:
http://cvs.zope.org/Docs/ZopeComponentArchitecture/PythonProgrammerTutorial/Chapter1/

Specificially the 5th part, but I recommend going through the whole thing.


Quick intro - classes can say they implement interfaces.

  class A:
       __implements__ == (IProducer, IBlarg)

Notice that interfaces are separate from inheritance.

Next, we have adapters. This is a registry of classes, kinda like the 
Configurator registry for coil.

getAdapter(o, IFoo) returns an object that wraps o, so that the wrapped 
object implements interface IFoo. If o already implements it, then o is 
returned, otherwise it is looked up in the registry, wrapped, and an 
object implementing IFoo is returned. (There's a PEP that talks about 
something in this vein - http://www.python.org/peps/pep-0246.html).

Now, on to coil. For coil, we really need two interfaces - 
IConfigurator, for properties, and IConfigCollection. So, where before 
hand we wanted configurable classes to inherit from Collection, now we 
have a much better system.

When we want a configurator we do:

    cfg = getAdapter(o, IConfigurator)

More or less like now. When we want a collection-like interface, we do:

    collection = getAdapter(o, IConfigCollection)

Now, note the benefits. We can write a configuration class that 
implements both IConfigurator and IConfigCollection for our class, and 
then it will be returned in both cases - regardless of what o's class 
inherits from. So, we don't have to worry about what our classes inherit 
from, classes can implement IConfigurator or IConfigCollection 
themselves if they want, etc..

In other words, we have a much more flexible system, and we solved the 
"what if both Configurator and configurable inherit from Collection" 
issue, and in general we got rid of all the horrible special cases in 
webcoil. And this is generally extendable.

I'm sure we will find other uses for this as well - we already are using 
a hard-coded system for this in Configurators, and I'm sure there are 
many more places where this is useful.





From twisted at itamarst.org  Sun Apr  7 06:26:04 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Apr 2002 15:26:04 +0300
Subject: [Twisted-Python] First pass of components/adapters stuff now in CVS
Message-ID: <3CB03ADC.3050101@itamarst.org>

In module twisted.python.components

I followed shapr's suggestion of writing test code first - it's a nice 
coding technique.






From twisted at itamarst.org  Sun Apr  7 11:27:55 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Apr 2002 20:27:55 +0300
Subject: [Twisted-Python] Yet another coil refactor
Message-ID: <3CB0819B.6090509@itamarst.org>

As I said in my previous email - coil will now use components.

What this means:

Collections used by coil are collections of Interfaces objects. That means 
you need an Interface for anything that is addable in a coil collection.

I needed to add about 4 interface classes to the non-coil parts of Twisted 
for coil to work: protocol factory, service, web resource, dns domain. 
That's it. So I don't think this is such a bother.

In fact. it's much cleaner for things like DNS domains where there wasn't a 
base class for all Domains (same goes for mail domains.) Which is after all 
the purpose of interfaces. It does mean extra typing of __implements__ in 
certain cases, but all in all it's more flexible, and webcoil is cleaner.

I have this all working now - not I just need to clean up.

Here's an example of the different sort of things you can do now - notice 
how static.Files allow you to configure mime-types and resources.

=============================================
class SiteConfigurator(coil.Configurator):
     """Configurator for web sites."""

     __implements__ = [coil.IConfigurator, coil.IStaticCollection]

     configurableClass = server.Site
     configTypes = {'resource': [resource.IResource, "Resource",
                    "The resource at the site's root."] }
     configName = 'HTTP Web Site'

     def listStaticEntities(self):
         return [['resource', self.instance.resource]]

     def getStaticEntity(self, name):
         if name == 'resource':
             return self.instance.resource

components.registerAdapter(SiteConfigurator, server.Site, coil.ICollection)


# ... deleted from example ...


class MimeTypeCollection(coil.ConfigCollection):

     entityType = types.StringType

class ResourceCollection:
     """Wrap an existing Resource as a ConfigCollection."""

     __implements__ = [coil.IConfigCollection]

     def __init__(self, resource):
         self._resource = resource

     def __getattr__(self, attr):
         return getattr(self._resource, attr)


class StaticConfigurator(coil.Configurator, coil.StaticCollection):

     __implements__ = [coil.IConfigurator, coil.IStaticCollection]

     configurableClass = static.File

     configTypes = {'path': [types.StringType, "Path", "The path in the 
filesystem to be served."],
          'execCGI': ['boolean', "Execute CGIs", "Support running CGI"],
          'execEPY': ['boolean', "Execute EPYs", "Support running EPY"],
          'defaultType': [types.StringType, "Default MIME Type",""]
                   }

     configName = 'Web Filesystem Access'

     def __init__(self, instance):
         coil.Configurator.__init__(self, instance)
         coil.StaticCollection.__init__(self)
         self.putEntity("Mime-types", \
            MimeTypeCollection(self.instance.contentTypes))
         self.putEntity("Resources", ResourceCollection(self.instance))
         self.lock()

     # ... deleted, the config interfce is unchanged from CVS ...

def staticFactory(container, name):
     return static.File("somewhere/outthere")

coil.registerConfigurator(StaticConfigurator, staticFactory)
components.registerAdapter(StaticConfigurator, static.File,coil.ICollection)




From carmstro at twistedmatrix.com  Sun Apr  7 12:48:46 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 07 Apr 2002 13:48:46 -0500
Subject: [Twisted-Python] First pass of components/adapters stuff now in
	CVS
In-Reply-To: <3CB03ADC.3050101@itamarst.org>
References: <3CB03ADC.3050101@itamarst.org>
Message-ID: <1018205328.3829.3.camel@radii>

On Sun, 2002-04-07 at 07:26, Itamar Shtull-Trauring wrote:
> In module twisted.python.components
> 
> I followed shapr's suggestion of writing test code first - it's a nice 
> coding technique.


And I quote:
"""More importantly, try to avoid meaningless words. In particular,
words like "handler", "processor", "engine", "manager", and "component"
don't really indicate what something does, only that it does
*something*.
""" -- The Twisted Coding Standard

What the heck is a component? :-)

bwahaha-now-I-get-to-avenge-the-death-of-twisted.pretzel-ly yrs,

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From torresj at apb.es  Mon Apr  8 04:10:23 2002
From: torresj at apb.es (Joan Torres)
Date: Mon, 8 Apr 2002 12:10:23 +0200 (MET DST)
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
Message-ID: <200204081010.MAA05931@osona.apb.es>

Hi,
 I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
 I found a FTPClient.py example in ./doc/examples. I've modified the example
 and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
 don't know is how to setup the fileProtocol and also the FTPserver part.

 I suppose this may be easy, but I'm new in twisted.
 Could someone help me?
 Thanks in advanced
 Joan Torres
  



From twisted at itamarst.org  Mon Apr  8 04:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Apr 2002 13:16:45 +0300
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <3CB16E0D.4080007@itamarst.org>

$ bin/mktap ftp --help
Usage: mktap ftp [options].
     WARNING: This FTP server currently is very simple and will
     not work with a number of clients. We are working on making
     it more interoperable.
Options:
   -a, --anonymous       allow anonymous logins
   -3, --thirdparty      allow third-party connections
       --otp             activate One-Time Passwords
   -p, --port=           set the port number [default: 2121]
   -r, --root=           define the root of the ftp-site. [default:
                         /usr/local/ftp]
       --useranonymous=  [default: anonymous]
       --help

$ bin/mktap ftp -a
Saving ftp application to ftp.tap...
Saved.

$ bin/twistd -n -f ftp.tap
...
08/04/2002 13:15 [-] Loading ftp.tap...
08/04/2002 13:15 [-] Loaded.
08/04/2002 13:15 [*ftp*] twisted.protocols.ftp.FTPFactory starting on 2121





From andrew-twisted at puzzling.org  Mon Apr  8 05:00:52 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Apr 2002 21:00:52 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <200204081010.MAA05931@osona.apb.es>
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <20020408110052.GB924@frobozz.local>

On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> Hi,
>  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
>  I found a FTPClient.py example in ./doc/examples. I've modified the example
>  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
>  don't know is how to setup the fileProtocol and also the FTPserver part.
> 
>  I suppose this may be easy, but I'm new in twisted.
>  Could someone help me?

I'm the guy who wrote the FTPClient class, so blame me if it's too hard :)

First I'll mention that the FTPClient in CVS has much better documentation
than the last release, so you might want to use that.

Are you familiar with the idea of a Protocol?  If not, have a look at the
Writing Servers how-to:
    http://twistedmatrix.com/documents/howto/servers

The idea is that as the file is retrieved, you can use any arbitrary
Protocol you like to process it.  For simply saving to disk, that could be:

----
from twisted.protocols.protocol import Protocol

class FileWriterProtocol(Protocol):
    def __init__(self, filename):
        self.file = open(filename, 'w')

    def dataReceived(self, data):
        self.file.write(data)
----

You could then instantiate this class and pass it as the second argument to
retrieveFile.

I probably should improve the ftpclient.py example to cover this, as it is a
fairly typical sort of use I imagine.  Incidentally, does anyone know if
there is a FileWriterProtocol or similar already in Twisted somewhere?  I
can't think of one off the top of my head.

-Andrew.




From glyph at twistedmatrix.com  Mon Apr  8 16:08:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 17:08:18 -0500
Subject: [Twisted-Python] Yet another coil refactor
In-Reply-To: <3CB0819B.6090509@itamarst.org>
References: <3CB0819B.6090509@itamarst.org>
Message-ID: <1018303698.671.52.camel@janus>

On Sun, 2002-04-07 at 12:27, Itamar Shtull-Trauring wrote:
> As I said in my previous email - coil will now use components.

Looks cool.

Twisted is still in a development state right now, and __implements__
leaves no way for Twisted to warn you that between 0.17.0 and 0.19.2
some very important things changed and your code no longer fully
conforms to the interfaces that you thought it did.  Inheritance does,
but itamar and others have convinced me that there are problems with
using inheritance to specify interface implementation.

So I propose a compromise: I think that classes which implement
interfaces should be required to inherit from an Implementor class, in
order to facilitate evolution of interfaces.  This Implementor class
could even be a metaclass, ensuring at least trivial implementation
constraints at import-time, possibly spotting bugs early on.

Any comments?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020408/3e3584b1/attachment.sig>

From glyph at twistedmatrix.com  Mon Apr  8 16:08:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 17:08:37 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin
 to be born?
Message-ID: <1018303717.671.55.camel@janus>

I just checked in a substantial refactoring and change to Jelly,
finalizing what I think Jelly ought to look like in PB's wire protocol. 
Before I declare that it is well and truly standard, however, there are
a few things I'd like to resolve, and I'd be interested to hear a few
opinions on them...

1: use of the word "tuple".

Jelly uses the word "tuple" on the wire, which is fairly
Python-specific.  Really it ought to be "immutable-list" or something
similar (perhaps leaving the door open for more immutable types in the
future?).  Thoughts on this, especially from implementors in other
languages?

2: jellying of arguments/kwargs

Arguments and keyword arguments to methods are currently serialized in
their native Python form; a tuple and a dict.  This is probably not the
most natural way to serialize args in other languages (especially those
so deficient as not to have keyword arguments).  A couple of possible
small improvements come to mind:

    * provide alternate forms of proto_message which alternatively do or
do not send arguments, keyword args, or either

    * call jelly on the tuple/dict, but decompose them such that the
argument format does not include the leading "tuple" or "dictionary"
string (to make life easier for PB authors who do not want to implement
Jelly initially)

    * jelly the tuple and the dict together in one pass (this is really
more like a bug, since objects referred to once as an arg and once as a
kw arg will be serialized twice...)

3: eliminate "cachemessage" somehow

This is really an eyesore, but I can't easily think how to get rid of
it.  Perhaps cache IDs could be component somehow, not just integers?

4: always assume exactly one reference

some work is probably wasted right now in maintaining distributed
reference counts; the peer really only cares whether the other side has
a reference or it doesn't.  The one place that this is a little weird is
the decache/uncache handshake.

I can't think of any other issues to address before we call it final. 
Anyone?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020408/f67ce758/attachment.sig>

From bob at redivi.com  Mon Apr  8 16:53:50 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 8 Apr 2002 18:53:50 -0400
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin to be born?
In-Reply-To: <1018303717.671.55.camel@janus>
Message-ID: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>

On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:

> I just checked in a substantial refactoring and change to Jelly,
> finalizing what I think Jelly ought to look like in PB's wire protocol.
> Before I declare that it is well and truly standard, however, there are
> a few things I'd like to resolve, and I'd be interested to hear a few
> opinions on them...
>
> 1: use of the word "tuple".
>
> Jelly uses the word "tuple" on the wire, which is fairly
> Python-specific.  Really it ought to be "immutable-list" or something
> similar (perhaps leaving the door open for more immutable types in the
> future?).  Thoughts on this, especially from implementors in other
> languages?
>

I'd say that tuple is pretty standard terminology.  It's used quite 
heavily in PostgreSQL's source code for example, and I've heard mention 
of it in reference to common lisp.. Other things probably use it, I 
don't think it had anything to do with python, I think python's use of 
it is just the most prolific.

-bob




From glyph at twistedmatrix.com  Mon Apr  8 17:17:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 08 Apr 2002 18:17:48 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
References: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
Message-ID: <1018307868.671.63.camel@janus>

On Mon, 2002-04-08 at 17:53, Bob Ippolito wrote:
> 
> On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:

> > 1: use of the word "tuple".

> I'd say that tuple is pretty standard terminology.  It's used quite 
> heavily in PostgreSQL's source code for example, and I've heard mention 
> of it in reference to common lisp.. Other things probably use it, I 
> don't think it had anything to do with python, I think python's use of 
> it is just the most prolific.

dictionaries define "tuple" as:

    "In functional languages, a data object containing two or more
    components. Also known as a product type or pair, triple, quad, etc.
    Tuples of different sizes have different types, in contrast to lists
    where the type is independent of the length. The components of a
    tuple may be of different types whereas all elements of a list have
    the same type."

This is not quite what Python means.  PostgreSQL defines tuple as:

    "an individual state of a row; each UPDATE of a row creates a new
    tuple for the same logical row".

In Python, it means simply "a list which is immutable".  I think that
these three definitions are sufficiently incompatible that one should
not use the word in a vocabulary for a protocol which is supposed to be
cross-langauge.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020408/0eaff022/attachment.sig>

From sabren at manifestation.com  Mon Apr  8 17:36:45 2002
From: sabren at manifestation.com (Michal Wallace)
Date: Mon, 8 Apr 2002 19:36:45 -0400 (EDT)
Subject: [Twisted-Python] Yet another coil refactor
In-Reply-To: <1018303698.671.52.camel@janus>
Message-ID: <Pine.LNX.4.44.0204081935070.9242-100000@mercury.sabren.com>

On 8 Apr 2002, Glyph Lefkowitz wrote:

> Twisted is still in a development state right now, and
> __implements__ leaves no way for Twisted to warn you that
> between 0.17.0 and 0.19.2 some very important things
> changed and your code no longer fully conforms to the
> interfaces that you thought it did.  Inheritance does, but
> itamar and others have convinced me that there are
> problems with using inheritance to specify interface
> implementation.


You know... A while back, someone posted to the pyunit list
a tool that would check whether a particular object
implemented a particular interface. I didn't look at it
too closely, but you might want to take a look:

 http://www.geocrawler.com/archives/3/2943/2001/11/0/7131322/


Cheers,

- Michal   http://www.sabren.net/   sabren at manifestation.com 
------------------------------------------------------------
Give your ideas the perfect home: http://www.cornerhost.com/
 cvs - weblogs - php - linux shell - perl/python/cgi - java
------------------------------------------------------------




From abo at minkirri.apana.org.au  Mon Apr  8 17:53:55 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 9 Apr 2002 09:53:55 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <200204081010.MAA05931@osona.apb.es>
References: <200204081010.MAA05931@osona.apb.es>
Message-ID: <20020408235355.GB5143@minkirri.apana.org.au>

On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> Hi,
>  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
>  I found a FTPClient.py example in ./doc/examples. I've modified the example
>  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
>  don't know is how to setup the fileProtocol and also the FTPserver part.

last time I looked the ftp server support in twisted was very primative.
Certainly the medusa ftp server was more complete, but also needs some tweaks.

I'm also interested in ftp server stuff. If anyone wants to collaborate on
something...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From mahler at cyc.com  Mon Apr  8 17:54:10 2002
From: mahler at cyc.com (Daniel Mahler)
Date: Mon, 8 Apr 2002 18:54:10 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <1018307868.671.63.camel@janus>
References: <7E283DD9-4B43-11D6-843A-0003938210D6@redivi.com>
	<1018307868.671.63.camel@janus>
Message-ID: <15538.11682.9431.347145@mcallister.cyc.com>

I believe common meaning of "tuple" extends beyond computing
and means something like element of the cartesian product.
The dictionary definition below seems to come from a computing
dictionary and assumes a strongly typed language.
The online Merriam-Webster just says:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
One entry found for -tuple.
Main Entry: -tu·ple
Pronunciation: "t&-p&l, "tü-
Function: noun combining form
Etymology: quintuple, sextuple
: set of (so many) elements -- usually used of sets with ordered
elements <the ordered 2-tuple (a, b)>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Which seems compatible with Python usage.
I think the Python usage is consistent with
programming/math uses I am familiar with.
It is even consistent with the dictionary definition
given below;
it is the definition 'list' that is incompatible,
since there is no same type restriction
on python list elements.
However, all untyped/dynamically typed languages
have list types without it.
However, in most languages lists are linked structures:
python lists correspond to vectors/arrays in other languages.

D

Glyph Lefkowitz writes:
 > On Mon, 2002-04-08 at 17:53, Bob Ippolito wrote:
 > > 
 > > On Monday, April 8, 2002, at 06:08 PM, Glyph Lefkowitz wrote:
 > 
 > > > 1: use of the word "tuple".
 > 
 > > I'd say that tuple is pretty standard terminology.  It's used quite 
 > > heavily in PostgreSQL's source code for example, and I've heard mention 
 > > of it in reference to common lisp.. Other things probably use it, I 
 > > don't think it had anything to do with python, I think python's use of 
 > > it is just the most prolific.
 > 
 > dictionaries define "tuple" as:
 > 
 >     "In functional languages, a data object containing two or more
 >     components. Also known as a product type or pair, triple, quad, etc.
 >     Tuples of different sizes have different types, in contrast to lists
 >     where the type is independent of the length. The components of a
 >     tuple may be of different types whereas all elements of a list have
 >     the same type."
 > 
 > This is not quite what Python means.  PostgreSQL defines tuple as:
 > 
 >     "an individual state of a row; each UPDATE of a row creates a new
 >     tuple for the same logical row".
 > 
 > In Python, it means simply "a list which is immutable".  I think that
 > these three definitions are sufficiently incompatible that one should
 > not use the word in a vocabulary for a protocol which is supposed to be
 > cross-langauge.
 > 
 > -- 
 >  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 >  |   < _/ >   |  Lead Developer,  the Twisted project  |
 >  |  < ___/ >  |      http://www.twistedmatrix.com      |




From andrew-twisted at puzzling.org  Mon Apr  8 19:22:47 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 11:22:47 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020408235355.GB5143@minkirri.apana.org.au>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au>
Message-ID: <20020409012247.GA15163@ritsuko.xware.cx>

On Tue, Apr 09, 2002 at 09:53:55AM +1000, Donovan Baarda wrote:
> On Mon, Apr 08, 2002 at 12:10:23PM +0200, Joan Torres wrote:
> > Hi,
> >  I'm trying to setup a FTPserver, FTPClient for sending a File Transfer.
> >  I found a FTPClient.py example in ./doc/examples. I've modified the example
> >  and add "ftpClent.retrieveFile('file_name', fileProtocol). What I really
> >  don't know is how to setup the fileProtocol and also the FTPserver part.
> 
> last time I looked the ftp server support in twisted was very primative.
> Certainly the medusa ftp server was more complete, but also needs some tweaks.
> 
> I'm also interested in ftp server stuff. If anyone wants to collaborate on
> something...

I've already agreed with Glyph that I should at some point refactor the
FTP server to use Resources like the web server does (can? -- I'm not
familiar with the structure of it yet), essentially meaning that FTP
servers would be identical to web servers, except that they use FTP not
HTTP -- the same dynamic content and what-not could be served over them,
and perhaps they could also share authentication info?

More pressingly, the FTP server and client need to be refactored to
reuse some code.  They are currently two completely seperate code bases
with zero reuse :(

If other people are interested in helping with this, then all the better! :)

-Andrew.




From mbac at netgraft.com  Mon Apr  8 20:20:06 2002
From: mbac at netgraft.com (Michael Bacarella)
Date: Mon, 8 Apr 2002 22:20:06 -0400
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409012247.GA15163@ritsuko.xware.cx>; from andrew-twisted@puzzling.org on Tue, Apr 09, 2002 at 11:22:47AM +1000
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx>
Message-ID: <20020408222006.A5014@romulus.netgraft.com>

On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> More pressingly, the FTP server and client need to be refactored to
> reuse some code.  They are currently two completely seperate code bases
> with zero reuse :(

How much code could they share that hasn't already been implemented
in the rest of Twisted?

-- 
Michael Bacarella  | Netgraft Corporation
                   | 545 Eighth Ave #401
 Systems Analysis  | New York, NY 10018
Technical Support  | 212 946-1038 | 917 670-6982
 Managed Services  | mbac at netgraft.com




From andrew-twisted at puzzling.org  Mon Apr  8 20:55:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 12:55:14 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020408222006.A5014@romulus.netgraft.com>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com>
Message-ID: <20020409025514.GA16521@ritsuko.xware.cx>

On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> > More pressingly, the FTP server and client need to be refactored to
> > reuse some code.  They are currently two completely seperate code bases
> > with zero reuse :(
> 
> How much code could they share that hasn't already been implemented
> in the rest of Twisted?

Good question.  Probably not a huge amount.  The FTPFileListingProtocol
could probably be taught to write as well as read; and perhaps the
opening and connecting of data connections could be shared.  The data
connections, conceptually at least, are symmetrical.  And I intend to
implement file uploading in the client soon, so data really will flow
both ways.

As for the rest of it, probably not much.  But I'd like to at least try
to see what can be done before trying to build on it much further, when
it will be even harder to do.

-Andrew.




From andrew-twisted at puzzling.org  Mon Apr  8 21:04:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Apr 2002 13:04:14 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409025514.GA16521@ritsuko.xware.cx>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx>
Message-ID: <20020409030414.GB16521@ritsuko.xware.cx>

*sigh* Replying to myself again...

While we're on the topic of FTP, I was wondering if there's any reason
why I shouldn't use a single listening socket per FTPClient for active
transfers?

Currently, for each active transfer, it opens a new FTPDataPort to
accept the connection, which ends out being quite icky due to the
sequencing of events.  I've realised that because I don't pipeline FTP
commands in the client (because it's tricky to do right and some servers
can't do it anyway), there's no ambiguity with re-using the same
FTPDataPort over and over...

The only downside should be that all the hard work Glyph and Itamar put
into tracking down the connectionLost from inside tcp.doRead bug for me
will now be unnecessary ;)

If you're wondering, I think it would make the code *alot* cleaner.
Especially in .retrieve and .generatePortCommand, which do messy things
with Deferreds.  I just want to convince myself that it's a perfectly
safe change that won't break anything before I do it.

-Andrew.




From twisted at itamarst.org  Tue Apr  9 00:25:47 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:25:47 +0300
Subject: [Twisted-Python] Yet another coil refactor
References: <Pine.LNX.4.44.0204081935070.9242-100000@mercury.sabren.com>
Message-ID: <3CB2896B.6050303@itamarst.org>

Michal Wallace wrote:

> You know... A while back, someone posted to the pyunit list
> a tool that would check whether a particular object
> implemented a particular interface. I didn't look at it
> too closely, but you might want to take a look:
> 
>  http://www.geocrawler.com/archives/3/2943/2001/11/0/7131322/

Thanks for the link - I have code for this, I'm sure Zope does, and I'll 
take a look at this. The general reason for interfaces in this case was for 
documentation, and as a way to group disparate classes that implement the 
same external API.

Running any of the these tools requires that the interface class implement 
all methods of the API, something I was too lazy to do in some cases. But I 
have done it in my code, and it's useful as a verbose test to check you 
haven't forgotten to implement a method.






From twisted at itamarst.org  Tue Apr  9 00:35:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:35:27 +0300
Subject: [Twisted-Python] What rough protocol, its hour come at last, slouches towards Austin to be born?
References: <1018303717.671.55.camel@janus>
Message-ID: <3CB28BAF.3060505@itamarst.org>

Glyph Lefkowitz wrote:

0: we need documentation and interop suite

I need to update Java Jelly to the new format. and I don't know what changes 
you made. So I'll have to generate stuff by hand.

What were the changes you made? How do I choose between simple and complex 
jelly? etc. etc.

I do have echopb and simplepb examples working with Java, for string/integer 
values, so it can't have changed *that* much.

> 1: use of the word "tuple".

Remind me why we need tuples? for dictionary keys to work? Couldn't this 
just be done by a smart unjellier? For other things I really don't see the 
benefit of an immutable list.

> 2: jellying of arguments/kwargs

>     * provide alternate forms of proto_message which alternatively do or
> do not send arguments, keyword args, or either

In Java I was thinking of just making a Referenceable that drops (or raises 
a error "bad args" error) on any keyword args passed to it, so from the 
user's point of view they just need to know about Java's regular argument 
lists. Which from the other side is just like a builtin python function that 
doesn't take keyword args.

>     * call jelly on the tuple/dict, but decompose them such that the
> argument format does not include the leading "tuple" or "dictionary"
> string (to make life easier for PB authors who do not want to implement
> Jelly initially)

I don't see how this helps, say Java. And for these simple cases, they can 
just drop the "tuple" or "dictionary" manually if they don't want to 
implement jelly.

>     * jelly the tuple and the dict together in one pass (this is really
> more like a bug, since objects referred to once as an arg and once as a
> kw arg will be serialized twice...)

Likewise.

> 3: eliminate "cachemessage" somehow

> 4: always assume exactly one reference

Unfortanutely I don't yet know how the cache parts work, since I haven't yet
implemented them :/




From twisted at itamarst.org  Tue Apr  9 00:59:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 09:59:14 +0300
Subject: [Twisted-Python] Yet another coil refactor
References: <3CB0819B.6090509@itamarst.org> <1018303698.671.52.camel@janus>
Message-ID: <3CB29142.9090601@itamarst.org>

Glyph Lefkowitz wrote:

> So I propose a compromise: I think that classes which implement
> interfaces should be required to inherit from an Implementor class, in
> order to facilitate evolution of interfaces.  This Implementor class
> could even be a metaclass, ensuring at least trivial implementation
> constraints at import-time, possibly spotting bugs early on.

First of all, runtime checking can only catch gross miscompliance of 
interfaces. However, since interfaces talk about external APIs, not internal 
representation, changes to the interface are much less likely, esp. once we 
hit a stable release.

That is, someone currently writing for Twisted has to say - "this is for 
Twisted 0.15.5" or whatever, because we do have occasional changes of 
underlying interfaces, e.g. coil ;). Once we hit 1.0 the interfaces will 
*not* change in the stable branch.

So, we really just need to list any changes to interfaces in the changelog - 
there's no real way we can fix other people's code. I don't see how this is 
any different than the previous way things worked where we had implicit 
interfaces that changed (e.g. addShutdown was removed from t.i.main).


Next, conside this - we add these two functions to components module:

def registerImplementor(klass):
     """Register a class that implements interfaces."""

def addInterface(klass, interface):
     """Register that the class implements an interface not listed in
        its __implements__."""

and we would require this for any methods that wants to work with the 
components thing.

Benefits:
1. Checking of interface compliance can be done in an easier fashion (and I 
  already have the code for it).

2. The ability to add interfaces without sticking them in __implements__ - 
this could help solve the issue where twisted.web.resource depends on coil.

3. No need to mess with meta-classes, and it'll work pre-2.2 (and if you 
want to use pre-2.2 meta-classes, you're even crazier than previously thought ;)

Disadvantages:
*Possibly* need to add an extra line for each class, not just inherit in 
super-classes. However, if we implement addInterface() so that it mutates 
the __implements__, this won't be necessary, you'll only need to register 
the superclass.

This implies that registerImplementor is basically only used for testing 
interface compliance and can't have other side effects.





From twisted at itamarst.org  Tue Apr  9 04:48:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 09 Apr 2002 13:48:56 +0300
Subject: [Twisted-Python] dispensers for coil
Message-ID: <3CB2C718.9020803@itamarst.org>

I just took a look - config dispensers are totally broken.

The whole way they work for web coil is wrong (i.e. they are only available 
when an object is newly created, if you load in an existing tap you won't 
have dispensers.) This is because they are added only when a new object is 
first created.

The solution is scanning the whole heirarchy for dispensers when it's first 
loaded. Or rather each time a plugin is loaded.

This will probably create duplicate dispensers for each run the current way 
web stores dispensers. This can be fixed by having webcoil store, instead of 
the id(!!!!) of the method, a tuple of the configurator class, the dispenser 
name, and the instance from which the dispensers were gotten (dispensers are 
specific to an object.)

Summary:
We scan for dispensers every time a new plugin is loaded.
Add dispensers upon object creation.
Change how we store "references" to dispenser methods.
Move this functionality into coil.py where it belongs, maybe

Any comments?




From abo at minkirri.apana.org.au  Tue Apr  9 07:05:06 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 9 Apr 2002 23:05:06 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409025514.GA16521@ritsuko.xware.cx>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx>
Message-ID: <20020409130505.GE31612@minkirri.apana.org.au>

On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
> On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> > On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
[...]
> Good question.  Probably not a huge amount.  The FTPFileListingProtocol
> could probably be taught to write as well as read; and perhaps the
[...]

I have code for this, non-twisted specific. I'm interested in supporting
this in conjunction with a few other useful utility modules, so any
changes/suggestions etc are welcome.

Attached.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------
-------------- next part --------------
# Generate and parse unix style ls output lines in the following format
#      mode nlink uid gid size date file [ -> link]
# mode is a string in the form "drwxrwxrwx", with all modes supported.
# nlink, uid, gid, and size are all numeric.
# Date has an abreviated format as explained below.
import stat,string,time
from strptime import strptime

def getuid(name):
    try:
        import pwd
        return pwd.getpwnam(name)[2]
    except:
        try: return int(name)
        except: return 0
    
def getgid(name):
    try:
        import grp
        return grp.getgrnam(name)[2]
    except:
        try: return int(name)
        except: return 0

def getuname(uid):
    try:
        import pwd
        return pwd.getpwuid(uid)[0]
    except:
        return '0'
    
def getgname(gid):
    try:
        import grp
        return grp.getgrgid(gid)[0]
    except:
        return '0'
    
def lsunparse ((name, stat_info, link)):
    mode = lsmodeunparse (stat_info[stat.ST_MODE])
    date = lsdateunparse (stat_info[stat.ST_MTIME])
    if link:
        name = name + " -> " + link
    return '%s %3d %-8s %-8s %8d %s %s' % (
        mode,
        stat_info[stat.ST_NLINK],
        getuname(stat_info[stat.ST_UID]),
        getgname(stat_info[stat.ST_GID]),
        stat_info[stat.ST_SIZE],
        date,
        name)
                
def lsparse (line):
    mode,nlink,uid,gid,size,rest = string.split(line,maxsplit=5)
    mode = lsmodeparse(mode)
    nlink = int(nlink)
    uid  = getuid(uid)
    gid  = getgid(gid)
    size = int(size)
    date = lsdateparse(rest[:12])
    name = string.strip(rest[12:])
    try:
        name,link = string.split(name," -> ")
    except ValueError:
        link = None
    return name,(mode,0,0,nlink,uid,gid,size,date,date,date),link
    
    
dchr_table = {
    'd':stat.S_IFDIR,
    'c':stat.S_IFCHR,
    'b':stat.S_IFBLK,
    '-':stat.S_IFREG,
    'f':stat.S_IFIFO,
    'l':stat.S_IFLNK,
    's':stat.S_IFSOCK
    }

ifmt_table = {
    stat.S_IFDIR:'d',
    stat.S_IFCHR:'c',
    stat.S_IFBLK:'b',
    stat.S_IFREG:'-',
    stat.S_IFIFO:'f',
    stat.S_IFLNK:'l',
    stat.S_IFSOCK:'s'
    }

def lsmodeparse(text):
    mode = dchr_table[text[0]]
    if text[1]=='r': mode = mode | stat.S_IRUSR
    if text[2]=='w': mode = mode | stat.S_IWUSR
    if text[3] in 'xs': mode = mode | stat.S_IXUSR
    if text[3] in 'Ss': mode = mode | stat.S_ISUID
    if text[4]=='r': mode = mode | stat.S_IRGRP
    if text[5]=='w': mode = mode | stat.S_IWGRP
    if text[6] in 'xs': mode = mode | stat.S_IXGRP
    if text[6] in 'Ss': mode = mode | stat.S_ISGID
    if text[7]=='r': mode = mode | stat.S_IROTH
    if text[8]=='w': mode = mode | stat.S_IWOTH
    if text[9] in 'xt': mode = mode | stat.S_IXOTH
    if text[9] in 'tT': mode = mode | stat.S_ISVTX
    return mode
    
def lsmodeunparse(mode):
    text = list(ifmt_table[stat.S_IFMT(mode)]+ "---------")
    if mode & stat.S_IRUSR: text[1]='r'
    if mode & stat.S_IWUSR: text[2]='w'
    if mode & stat.S_IXUSR:
        if mode & stat.S_ISUID: text[3]='s'
        else: text[3]='x'
    elif mode & stat.S_ISUID:
        text[3]='S'
    if mode & stat.S_IRGRP: text[4]='r'
    if mode & stat.S_IWGRP: text[5]='w'
    if mode & stat.S_IXGRP:
        if mode & stat.S_ISGID: text[6]='s'
        else: text[6]='x'
    elif mode & stat.S_ISGID:
        text[6]='S'
    if mode & stat.S_IROTH: text[7]='r'
    if mode & stat.S_IWOTH: text[8]='w'
    if mode & stat.S_IXOTH:
        if mode & stat.S_ISVTX: text[9]='t'
        else: text[9]='x'
    elif mode & stat.S_ISVTX:
        text[9]='T'
    return string.join(text,'')

# Emulate the unix 'ls' command's date field.
# it has two formats - if the date is more than 180
# days in the past, then it's like this:
# Oct 19  1995
# otherwise, it looks like this:
# Oct 19 17:33
def lsdateparse (text):
    if string.find(text,":") != -1:
        info = list(strptime(text,"%b %d %H:%M"))
        now = time.localtime(time.time())
        if now[1] < info[1]:
            info[0] = now[0]-1
        else:
            info[0] = now[0]
    else:
        info = list(strptime(text,"%b %d  %Y"))
    info[8]=0
    return time.mktime(info) + time.timezone

def lsdateunparse (t):
    try:
        info = time.gmtime (t)
    except:
        info = time.gmtime (0)
    # 15,600,000 == 180 days
    if (long(time.time()) - t) > 15600000:
        return time.strftime("%b %d  %Y",info)
    else:
        return time.strftime("%b %d %H:%M",info)

From washort at twistedmatrix.com  Tue Apr  9 07:29:34 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 09 Apr 2002 08:29:34 -0500
Subject: [Twisted-Python] What rough protocol, its hour come at last,
	slouches towards Austin to be born?
In-Reply-To: <1018303717.671.55.camel@janus>
References: <1018303717.671.55.camel@janus>
Message-ID: <1018358974.2905.11.camel@ghostwheel>

On Mon, 08 Apr 2002, Glyph Lefkowitz did violence to a keyboard thusly:

> I just checked in a substantial refactoring and change to Jelly,
> finalizing what I think Jelly ought to look like in PB's wire protocol. 
> Before I declare that it is well and truly standard, however, there are
> a few things I'd like to resolve, and I'd be interested to hear a few
> opinions on them...
> 
> 1: use of the word "tuple".
> 
> Jelly uses the word "tuple" on the wire, which is fairly
> Python-specific.  Really it ought to be "immutable-list" or something
> similar (perhaps leaving the door open for more immutable types in the
> future?).  Thoughts on this, especially from implementors in other
> languages?

More immutable types would be nice, yes. (Oz, for example, has 'records'
which in effect are immutable dicts.) I dont know if there's any
advantage to making 'immutable' a separate protocol element or if such
data structures should just be identified as such in their name.... for
that matter. 'tuple' isn't the worst thing you could call it -- i dont
think jelly would suffer from being called unabashedly python-centric.
:)

> 2: jellying of arguments/kwargs
> A couple of possible small improvements come to mind:

> * provide alternate forms of proto_message which alternatively do or
>   do not send arguments, keyword args, or either

To my mind, this seems the cleanest way to solve it.

> 4: always assume exactly one reference
> 
> some work is probably wasted right now in maintaining distributed
> reference counts; the peer really only cares whether the other side has
> a reference or it doesn't.  The one place that this is a little weird is
> the decache/uncache handshake.

well, my opinion on enforcing single referece counts has been expressed
before :) this would be quite nice but i'm unsure how it would interact
with Python semantics... would jelly refuse to send refs to objects that
it had already sent?

-- 
Allen Short         Programmer-Archaeologist        
washort at twistedmatrix.com
"optimization is hacker crack. " -- Johan Kullstam, c.l.l



From andrew-twisted at puzzling.org  Tue Apr  9 08:20:24 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 10 Apr 2002 00:20:24 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409130505.GE31612@minkirri.apana.org.au>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx> <20020409130505.GE31612@minkirri.apana.org.au>
Message-ID: <20020409142024.GA1007@frobozz.local>

On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
> On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
> > On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
> > > On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
> [...]
> > Good question.  Probably not a huge amount.  The FTPFileListingProtocol
> > could probably be taught to write as well as read; and perhaps the
> [...]
> 
> I have code for this, non-twisted specific. I'm interested in supporting
> this in conjunction with a few other useful utility modules, so any
> changes/suggestions etc are welcome.

Certainly the writing (or "unparsing" as you call it :) part of this could
be used.

The parsing bits also look useful, especially the date parsing.
Unfortunately, strptime isn't portable (in particular, I don't think Windows
has it :( ).  But you're using some module called "strptime" -- that's not
from the standard library?

I don't think uid/gid should be numeric or translated to local names when
parsing -- ProFTPD at least returns names, and besides remote uids may not
match local ones.

Also, I'm curious as to how much more reliable this is at parsing wacky
formats than the regular expression in
twisted.protocols.ftp.FTPFileListingProtocol in CVS...

-Andrew.




From bob at redivi.com  Tue Apr  9 08:39:03 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 9 Apr 2002 10:39:03 -0400
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409142024.GA1007@frobozz.local>
Message-ID: <89A58249-4BC7-11D6-BBF7-0003938210D6@redivi.com>

On Tuesday, April 9, 2002, at 10:20 AM, Andrew Bennetts wrote:

> On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
>> On Tue, Apr 09, 2002 at 12:55:14PM +1000, Andrew Bennetts wrote:
>>> On Mon, Apr 08, 2002 at 10:20:06PM -0400, Michael Bacarella wrote:
>>>> On Tue, Apr 09, 2002 at 11:22:47AM +1000, Andrew Bennetts wrote:
>> [...]
>>> Good question.  Probably not a huge amount.  The 
>>> FTPFileListingProtocol
>>> could probably be taught to write as well as read; and perhaps the
>> [...]
>>
>> I have code for this, non-twisted specific. I'm interested in 
>> supporting
>> this in conjunction with a few other useful utility modules, so any
>> changes/suggestions etc are welcome.
>
> Certainly the writing (or "unparsing" as you call it :) part of this 
> could
> be used.
>
> The parsing bits also look useful, especially the date parsing.
> Unfortunately, strptime isn't portable (in particular, I don't think 
> Windows
> has it :( ).  But you're using some module called "strptime" -- that's 
> not
> from the standard library?

I don't believe OS X has strptime, either.  I have no time.strptime 
here, and man doesn't know anything about it.  There is always 
mx.DateTime though :)

>
> I don't think uid/gid should be numeric or translated to local names 
> when
> parsing -- ProFTPD at least returns names, and besides remote uids may 
> not
> match local ones.
>
> Also, I'm curious as to how much more reliable this is at parsing wacky
> formats than the regular expression in
> twisted.protocols.ftp.FTPFileListingProtocol in CVS...
>
> -Andrew.




From abo at minkirri.apana.org.au  Tue Apr  9 08:50:26 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 10 Apr 2002 00:50:26 +1000
Subject: [Twisted-Python] How to setup a ftpserver, ftpclient?
In-Reply-To: <20020409142024.GA1007@frobozz.local>
References: <200204081010.MAA05931@osona.apb.es> <20020408235355.GB5143@minkirri.apana.org.au> <20020409012247.GA15163@ritsuko.xware.cx> <20020408222006.A5014@romulus.netgraft.com> <20020409025514.GA16521@ritsuko.xware.cx> <20020409130505.GE31612@minkirri.apana.org.au> <20020409142024.GA1007@frobozz.local>
Message-ID: <20020409145025.GA16096@minkirri.apana.org.au>

On Wed, Apr 10, 2002 at 12:20:24AM +1000, Andrew Bennetts wrote:
> On Tue, Apr 09, 2002 at 11:05:06PM +1000, Donovan Baarda wrote:
[...]
> > I have code for this, non-twisted specific. I'm interested in supporting
> > this in conjunction with a few other useful utility modules, so any
> > changes/suggestions etc are welcome.
> 
> Certainly the writing (or "unparsing" as you call it :) part of this could
> be used.

the term "unparse" is taken strait from the Python urlparse module. I've
sorta followed the same api. I also have a "netlocparse.py" that
parses/unparses the netlock part ([user[:passwd]@]host[:port]) which the
urlparse module neglects to do anything with.

> The parsing bits also look useful, especially the date parsing.
> Unfortunately, strptime isn't portable (in particular, I don't think Windows
> has it :( ).  But you're using some module called "strptime" -- that's not
> from the standard library?

I'm using a pure-python implementation by Andy Eskilsson... I forget where I
found it. It's a bit longer than lsparse.py so I won't post it here, email
me directly if you want a copy.

> I don't think uid/gid should be numeric or translated to local names when
> parsing -- ProFTPD at least returns names, and besides remote uids may not
> match local ones.

The point of this was to return a proper stat tupple, which always uses
numeric uid/gid values. The whole local vs remote uid issue is messy... this
code will attempt the conversions with sensible fallbacks if it fails.
Generaly, the gid/uid info is useless because of the remote vs local issue
anyway, but they are included for completeness.

> Also, I'm curious as to how much more reliable this is at parsing wacky
> formats than the regular expression in
> twisted.protocols.ftp.FTPFileListingProtocol in CVS...

It's probably pretty unforgiving... it was designed exclusively to
parse/unparse ls style info.

This plus more is part of my osVFS package, which is a drop-in replacement
for for the standard os module that replaces all the file interface routines
with an Virtual File System. I already have working fake-root, mountable,
and ftp VFS backends, but I want to include a caching mixin using my
GCache.py module before I release it. I should just get off my butt and do
it...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From nick-twisted at nickpiper.co.uk  Tue Apr  9 12:14:10 2002
From: nick-twisted at nickpiper.co.uk (Nicholas Piper)
Date: Tue, 9 Apr 2002 19:14:10 +0100
Subject: [Twisted-Python] stopFactory() called twice
Message-ID: <20020409181410.GH12257@piamox7.haus>

radix suggested I report this to the mailing list. It happens both
with CVS and 0.16.0

Example output from my program is:

(own == one wire network)

nicholas at piamox7:~/projects/twisted/Twisted$ python play.py       
Enabling Multithreading. 
play.onewireprotocolfactory starting on 8007
Creating own             ## This line from startFactory(self):
Gained Holder Nicholas     ## from the ownthread
Starting shutdown sequence. # I pressed Ctrl-C
Stopping main loop. 
Main loop terminated .
(Port 8007 Closed) 
stopFactory() called      
own thread finished     #stopFactory() sets a variable on ownthread to
                        # notify it to finish up, then waits a few seconds
deleting self.own      # shouldn't hang around in the tap, so I delete
                       # it in stopFactory
Saving OWN application to OWN-shutdown.tap...
Saved.
stopFactory() called    # what, again ?
stopFactory() has been called for the second time! # yes, really again!
play.onewireprotocolfactory starting on 8007   # eh ?
Creating own                           # it's started it all up again!
Gained Holder Nicholas        ## from the ownthread

My code is very messy and bad probably :-) and my threads are probably
quite dangerous. It can be found at
www.nickpiper.co.uk/ibutton/play.py for the next few days.

 Nick

-- 
Part 3 MEng Cybernetics; Reading, UK       http://www.nickpiper.co.uk/
GPG Encrypted mail welcome!                             1024D/3ED8B27F
Choose life. Be Vegan :-) Please reduce needless cruelty + suffering !



From twisted at itamarst.org  Wed Apr 10 05:12:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Apr 2002 14:12:25 +0300
Subject: [Twisted-Python] Re: [Twisted-commits] (no subject)
References: <E16v5B7-0003xu-00@zaibach.twistedmatrix.com>
Message-ID: <3CB41E19.7040003@itamarst.org>

rob CVS wrote:
> Modified files:
> Twisted/twisted/spread/jelly.py 1.22 1.23

Rob? Who's rob?





From carmstro at twistedmatrix.com  Wed Apr 10 10:07:09 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 10 Apr 2002 12:07:09 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] (no subject)
In-Reply-To: <3CB41E19.7040003@itamarst.org>
References: <E16v5B7-0003xu-00@zaibach.twistedmatrix.com> 
	<3CB41E19.7040003@itamarst.org>
Message-ID: <1018454830.31154.1.camel@radii>

On Wed, 2002-04-10 at 07:12, Itamar Shtull-Trauring wrote:
> rob CVS wrote:
> > Modified files:
> > Twisted/twisted/spread/jelly.py 1.22 1.23
> 
> Rob? Who's rob?

With my unmatched hax0ring skills I have discovered the following
information:

Login: rob                              Name: Robert Knopf
Directory: /home/rob                    Shell: /bin/bash
Last login Tue Apr  9 18:41 (CDT) on NODEVssh from crue.ninjaneering.com
No mail.
No Plan.

>From this information I have learned that 1) rob is Robert Knopf, 2)
Robert Knof is a ninja, and 3) He is obviously going nowhere in life.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Wed Apr 10 15:45:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Apr 2002 23:45:31 +0200
Subject: [Twisted-Python] Towards 1.0
Message-ID: <3CB4B27B.4070202@itamarst.org>

Hi everyone,

We are trying to move forwards towards a 1.0 release, with as many of 
the APIs as possible in a stable state (obviously some parts are not 
going to be stable).

If you are a developer have any work in progress, please try to finish 
it up, so everything is in decent shape.

Examples:
Manhole's gnome spelunk thing should either work or not show up.
Correct bounce handling in mail.

Most of all however, we need test code and documentation. Please 
everyone - join in and help. It's a great way to learn, and few things 
beat the fuzzy, warm feeling of having another 10 tests pass.




From moore at ict.usc.edu  Thu Apr 11 15:27:48 2002
From: moore at ict.usc.edu (Ben Moore)
Date: 11 Apr 2002 14:27:48 -0700
Subject: [Twisted-Python] HTTP PUT support in twisted.web
Message-ID: <1018560469.1313.9.camel@spike>

I'm trying to do some wacky stuff with HTTP and was wondering if the
twisted HTTP server supports the PUT command.  And if so how do you use
it?

Using curl's HTTP upload function I get the following response:
<head><title>404 - No Such Resource</title></head>
<body><h1>No Such Resource</h1>
<p>Unable to access file.</p>
</body></html>


Ben
-- 
    ________________
   /  _/ ____/_  __/  Benjamin A. Moore
   / // /     / /    e-mail: moore at ict.usc.edu
 _/ // /___  / /    priv: ben at netjunki.org
/___/\____/ /_/    
     




From mjmstahl at one.net  Thu Apr 11 20:53:57 2002
From: mjmstahl at one.net (M.J. Stahl)
Date: Thu, 11 Apr 2002 22:53:57 -0400
Subject: [Twisted-Python] Towards 1.0
References: <3CB4B27B.4070202@itamarst.org>
Message-ID: <3CB64C45.8070701@one.net>

> We are trying to move forwards towards a 1.0 release, with as many of 
> the APIs as possible in a stable state (obviously some parts are not 
> going to be stable).
> Most of all however, we need test code and documentation. Please 
> everyone - join in and help. It's a great way to learn, and few things 
> beat the fuzzy, warm feeling of having another 10 tests pass.
>

Excellent... I having been wanting to write documentation on Twisted for 
a while, and my interest has increased due to my large interest in Reality.

The only problem that I have when trying to get involved in this aspect 
is the needed directions from the people running the show. I would like 
to know what you need documented and how you would like the docs to 
look. (info about the system in general, tutorials, as well as a listing 
of API's and the information needed for programmers to use them).

I consider myself a good writer, but this is not my project (I would 
just like to assist with it), therefore, I would like to know how the 
owners of the project (project leads) would like things done (ie, I am 
all for being the peon =).

Regards,

-M.




From andrew-twisted at puzzling.org  Thu Apr 11 21:06:01 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Apr 2002 13:06:01 +1000
Subject: [Twisted-Python] Towards 1.0
In-Reply-To: <3CB64C45.8070701@one.net>
References: <3CB4B27B.4070202@itamarst.org> <3CB64C45.8070701@one.net>
Message-ID: <20020412030601.GC30669@ritsuko.xware.cx>

On Thu, Apr 11, 2002 at 10:53:57PM -0400, M.J. Stahl wrote:
> Excellent... I having been wanting to write documentation on Twisted for 
> a while, and my interest has increased due to my large interest in Reality.
> 
> The only problem that I have when trying to get involved in this aspect 
> is the needed directions from the people running the show. I would like 
> to know what you need documented and how you would like the docs to 
> look. (info about the system in general, tutorials, as well as a listing 
> of API's and the information needed for programmers to use them).

I believe there is a Twisted Documentation Standard now distributed
with 0.17.0 and later.  Alternatively, see:
    http://twistedmatrix.com/documents/howto/doc-standard

As for what we need documented, basically everything! :)

See doc/howto/book.html in a recent Twisted distribution to get some
idea of what is wanted.

Thanks!  People who write docs rock!

-Andrew.




From twisted at itamarst.org  Sat Apr 13 11:17:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Apr 2002 19:17:08 +0200
Subject: [Twisted-Python] Persistent/Pipelined HTTP - progress resport
Message-ID: <3CB86814.9080003@itamarst.org>

1) All tests except for the buffer one (which has to change anyway due 
to the nature of the changes) pass without errors.

2) No API changes were made to the twisted.web framework.

3) I was able to view (the error page for a) web widget from lynx.

4) I'm able to use emacs now with enough basic proficiency that I can 
work over ssh, although slower than I usually work in my usual setup. 
Before this I a hard time working without a GUI, so this is good. I 
think I'll try using emacs as default editor from now on. Glyph, I want 
that tutorial now :)

Tomorrow I will proceed to write test code, verifying that the 
persistence and pipelining is acting correctly. Hopefully the checkin 
will be tommorow or monday.

We still don't have full HTTP/1.1 support, of course, and truth be told 
persistence isn't required for that. But this should be good for 
performance at least (benchmarks tommorow as well).

Anyone know of a test suite for HTTP compliance?




From Drew.Whitehouse at anu.edu.au  Sun Apr 14 06:09:07 2002
From: Drew.Whitehouse at anu.edu.au (Drew Whitehouse)
Date: 14 Apr 2002 22:09:07 +1000
Subject: [Twisted-Python] of interest
Message-ID: <wlhemelbx8.fsf@anu.edu.au>

This might be of interest to the twisted minds, deferred's on
steroids...

http://research.microsoft.com/Users/luca/Papers/Polyphony%20ECOOP.A4.pdf

(via http://lambda.weblogs.com/, one of my favourite programming
BLOGS)

-Drew
-- 
;; Drew.Whitehouse at anu.edu.au      Sci-Viz/VR Programmer
;; http://anusf.anu.edu.au/~drw900          ANUSF VIZLAB
;; Australian National University Supercomputer Facility



From twisted at itamarst.org  Sun Apr 14 08:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Apr 2002 17:16:45 +0300
Subject: [Twisted-Python] Banana greeting and profiles
Message-ID: <3CB98F4D.4070407@itamarst.org>

In the new banana, it starts out by sending a message with a list of 
profiles it supports:

    ["pb", "none"]

Now, the thing is, the "pb" profile doesn't imply you're running the PB 
protocol, it just means that you're defining some extra banana types that 
are used by the PB protocol, but for all you know this server may be running 
a different protocol. This is especially true when you get this list:

    ["none"]

So, you know it's using banana - but what protocol is running on *top* of 
banana?

As I'm seeing from HTTP, telling the client what protocol you run is rather 
important.

So, this implies that maybe the banana greeting should also include the 
protocol that it is running on top of Banana in it's greeting:

     ["Perspective Broker v6", ["pb", "none"]]




From twisted at itamarst.org  Sun Apr 14 08:22:23 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Apr 2002 17:22:23 +0300
Subject: [Twisted-Python] HTTP updated
Message-ID: <3CB9909F.6010206@itamarst.org>

twisted's HTTP now does persistent and pipelined connections in HTTP/1.1 
(HTTP/1.0 is as before, with no support for persistent connections). If you 
set a content-length header, then data is sent as is, otherwise data is sent 
in chunked format.

Additional tests are probably needed.

What's left for full HTTP/1.1 support:
1. Ability for server to read chunked data.
2. 100 continue status (I wonder if anyone uses it)
3. universal content-range support

probably more stuff as well.




From washort at twistedmatrix.com  Sun Apr 14 12:15:30 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 14 Apr 2002 13:15:30 -0500
Subject: [Twisted-Python] of interest
In-Reply-To: <wlhemelbx8.fsf@anu.edu.au>
References: <wlhemelbx8.fsf@anu.edu.au>
Message-ID: <1018808130.12167.3.camel@ghostwheel>

On Sun, 2002-04-14 at 07:09, Drew Whitehouse wrote:
> 
> This might be of interest to the twisted minds, deferred's on
> steroids...
> 
> http://research.microsoft.com/Users/luca/Papers/Polyphony%20ECOOP.A4.pdf

yeah, looked at that -- it's not all that much more powerful than actual
deferreds, so far as i can tell, and the patterns it produces seem odd.
i'm betting that E (http://erights.org/) has a better answer to these
sorts of concurrency problems. (besides, i am instantly suspicious of
people who use the word 'calculus' when talking about programming)

-- 
Allen Short        Programmer-Archaeologist        
washort at twistedmatrix.com
And it should be the law: If you use the word `paradigm' without knowing
what
the dictionary says it means, you go to jail.  No exceptions.  -- David
Jones



From glyph at twistedmatrix.com  Sun Apr 14 13:31:13 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Apr 2002 14:31:13 -0500
Subject: [Twisted-Python] HTTP updated
In-Reply-To: <3CB9909F.6010206@itamarst.org>
References: <3CB9909F.6010206@itamarst.org>
Message-ID: <20020414193113.GA9914@twistedmatrix.com>

On Sun, Apr 14, 2002 at 05:22:23PM +0300, Itamar Shtull-Trauring wrote:
> twisted's HTTP now does persistent and pipelined connections in HTTP/1.1 
> (HTTP/1.0 is as before, with no support for persistent connections). If you 
> set a content-length header, then data is sent as is, otherwise data is 
> sent in chunked format.

Itamar is a twisted hero once again!  Yaay!

> Additional tests are probably needed.

> What's left for full HTTP/1.1 support:

> 1. Ability for server to read chunked data.

How hard is this?

> 2. 100 continue status (I wonder if anyone uses it)

I read this section of the RFC; it sounds useless... do you know what is
the intent?

> 3. universal content-range support

Is this necessary for HTTP/1.1?  static.File supports it, I suppose
static.Data should too; but I imagine that most dynamic content pages on
web app sites don't support content-range...


There's probably an unspoken "4. run a website with it for 6 months to
makme sure it's actually stable"... :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From bob at redivi.com  Sun Apr 14 14:23:36 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 14 Apr 2002 16:23:36 -0400
Subject: [Twisted-Python] HTTP updated
In-Reply-To: <20020414193113.GA9914@twistedmatrix.com>
Message-ID: <800793F7-4FE5-11D6-AF78-0003938210D6@redivi.com>

I think continue is for when the server wants to respond but is going to 
need some time to generate the content.. I think IIS does this a lot 
especially when doing SOAP.

This is just off the top of my head though, I'd have to look into it, 
but I think that's right.

-bob

On Sunday, April 14, 2002, at 03:31 PM, Glyph Lefkowitz wrote:

> On Sun, Apr 14, 2002 at 05:22:23PM +0300, Itamar Shtull-Trauring wrote:
>> twisted's HTTP now does persistent and pipelined connections in 
>> HTTP/1.1
>> (HTTP/1.0 is as before, with no support for persistent connections). 
>> If you
>> set a content-length header, then data is sent as is, otherwise data is
>> sent in chunked format.
>
> Itamar is a twisted hero once again!  Yaay!
>
>> Additional tests are probably needed.
>
>> What's left for full HTTP/1.1 support:
>
>> 1. Ability for server to read chunked data.
>
> How hard is this?
>
>> 2. 100 continue status (I wonder if anyone uses it)
>
> I read this section of the RFC; it sounds useless... do you know what is
> the intent?
>
>> 3. universal content-range support
>
> Is this necessary for HTTP/1.1?  static.File supports it, I suppose
> static.Data should too; but I imagine that most dynamic content pages on
> web app sites don't support content-range...
>
>
> There's probably an unspoken "4. run a website with it for 6 months to
> makme sure it's actually stable"... :)
>
> --
> ______      you are in a maze of twisted little applications, all
> |   |_\     remarkably consistent.
> |     |          -- glyph lefkowitz, glyph @ twisted matrix . com
> |_____|             http://www.twistedmatrix.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Sun Apr 14 16:05:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Apr 2002 00:05:15 +0200
Subject: [Twisted-Python] HTTP updated
References: <3CB9909F.6010206@itamarst.org> <20020414193113.GA9914@twistedmatrix.com>
Message-ID: <3CB9FD1B.5070805@itamarst.org>

Glyph Lefkowitz wrote:

>>1. Ability for server to read chunked data.
> 
> 
> How hard is this?

Pretty easy - just need the raw mode in linereciever to parse the data 
instead of just sending it onwards. Probably need to implement a 3rd 
mode in addition to raw, actually - but it's pretty simple (length in 
hex, CRLF, data, CRLF - repeat until all data is sent and then "0" and 
CRLF to end, plus some extra headers after. no big deal.)

>>2. 100 continue status (I wonder if anyone uses it)
> 
> 
> I read this section of the RFC; it sounds useless... do you know what is
> the intent?

"I am about to send 300MB of data. Is this acceptable?"

i.e. probably no one uses it in the real world except in specialized 
protocols that run on top of HTTP.

And yeah, this needs to run for a while, and lots of tests would be good 
too (I'm *sure* Zope3 e.g. has more.)







From twisted at itamarst.org  Mon Apr 15 03:14:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Apr 2002 12:14:30 +0300
Subject: [Twisted-Python] CVS in python
Message-ID: <3CBA99F6.50901@itamarst.org>

I just rediscovered - the Demos/pdist/ directory in python comes with a some 
sort of a RCS and CVS implementation. It uses a pickle based RPC protocol. 
Anyone with some spare time want to take a look and see how compatible this 
is with real CVS?




From glyph at twistedmatrix.com  Mon Apr 15 14:55:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Apr 2002 15:55:06 -0500
Subject: [Twisted-Python] Banana greeting and profiles
In-Reply-To: <3CB98F4D.4070407@itamarst.org>
References: <3CB98F4D.4070407@itamarst.org>
Message-ID: <1018904106.361.2.camel@janus>

On Sun, 2002-04-14 at 09:16, Itamar Shtull-Trauring wrote:
> In the new banana, it starts out by sending a message with a list of 
> profiles it supports:

This sounds like a good proposal -- check it in soon though!  I will be
documenting / finalizing the protocol very soon.

One thing I might add to this

>      ["Perspective Broker v6", ["pb", "none"]]

is to make it more symmetrical, so that the client can select what
protocol it wants to speak.  e.g.:

[["Simple Banana Chat v2", "Perspective Broker v6", "Perspective Broker
v7"],
 ["pb", "none"]]

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020415/64539196/attachment.sig>

From carmstro at twistedmatrix.com  Mon Apr 15 19:52:05 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 15 Apr 2002 21:52:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] OK, maybe distributed servers work again with
 files...
In-Reply-To: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com>
References: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com>
Message-ID: <1018921927.956.10.camel@radii>

On Mon, 2002-04-15 at 20:21, glyph CVS wrote:
> Modified files:
> Twisted/twisted/web/distrib.py 1.33 1.34
> 
> Log message:
> OK, maybe distributed servers work again with files...

HOORAY! Thanks a lot. If everything's OK, I'll get onto releasing
0.17.2. Anyone have any objections?

Anyway, real purpose of this message -- I noticed that this fix breaks
backwards-compatibility with old servers again (at least when the --user
server is running 0.17.1 and --personal is running CVS; I assume it's
also broken for the opposite). This is really starting to bug me,
because all of our users on Zaibach have to restart their servers for
their web sites to work after an upgrade. Of course, I don't care for
_my_ server, but the big one is snibril's Moin server.

#1. Would it be possible to make future changes to distributed web
without breaking old servers, if we try hard enough? (I doubt it)

#2. Can we make servers easier to rebuild in-place so we don't actually
have to restart them? (I doubt it)

#3. Can we set up a system on zaibach to have a central script that runs
or restarts all of the users' servers? I think just going through the
list of user web-servers and 'su <user> -c <restart command>' should do
the trick.

If #3 never comes about, then I'd like to get snibril's permission to
restart his server when I make a release. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Mon Apr 15 20:10:26 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Apr 2002 21:10:26 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] OK, maybe distributed servers work again with files...
In-Reply-To: <1018921927.956.10.camel@radii>
References: <E16xGiU-0001W8-00@zaibach.twistedmatrix.com> <1018921927.956.10.camel@radii>
Message-ID: <20020416021026.GA7713@twistedmatrix.com>

On Mon, Apr 15, 2002 at 09:52:05PM -0400, Christopher Armstrong wrote:
> #1. Would it be possible to make future changes to distributed web
> without breaking old servers, if we try hard enough? (I doubt it)

This is really the goal.  Ideally there will actually be a published
protocol for HTTPoPB at some point.  The speed at which the PB protocol
evolves should be slowing down a lot now, and Itamar's recent refactor
to web.resource (what broke it this time ...) should be starting to
finalize what a "web request" is in Twisted.

If you feel like this is really a significant problem, working in
backwards-compatibility hooks to PB is probably a good idea.  (In fact,
probably it's a good idea either way ^_^).  Most of the changes that
have broken t.w.d have been basic protocol changes to PB, which could
not be helped; the final, release version of PB will have a way of
regressing to old versions when appropriate.

In other words; expect minor problems until we stamp "1.0" on the
package; after that it should be smooth sailing.



From twisted at itamarst.org  Tue Apr 16 04:38:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Apr 2002 13:38:18 +0300
Subject: [Twisted-Python] ANN: TwistedJava 0.5
Message-ID: <3CBBFF1A.30605@itamarst.org>

I just released v0.5 of TwistedJava, implementing Perspective Broker 
(twisted.spread) for Java. It now passes the interop tests with 0.17.x in 
CVS, has improved APIs and less bugs.

Get it at http://itamarst.org/software/




From twisted at itamarst.org  Thu Apr 18 05:53:00 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 14:53:00 +0300
Subject: [Twisted-Python] Issues in new checkin from Donovan
Message-ID: <3CBEB39C.8000406@itamarst.org>

First of all - good work!

1. Use of unicode literals and XML in domtemplate.py - it won't run in 
1.5.2. When are we gonna drop 1.5.2 support?  It's a pretty neat templating 
system, actually, for certain uses. I still think ZPT is better though.

2. No example blog.html for the blog, so users won't know how to make 
templates. The docs in domtemplate make it pretty obvious how to use though.

How do I add posts to a blog - not implemented yet?

I think the blog code should not be part of Twisted core. Start a new CVS 
respository and make it a plugin is my suggestion.




From twisted at itamarst.org  Thu Apr 18 05:56:50 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 14:56:50 +0300
Subject: [Twisted-Python] Webcred and guard
Message-ID: <3CBEB482.7020208@itamarst.org>

There seems to be duplicate code in twisted.web.guard and 
twisted.web.webcred. What gives? What is webcred for? What's the difference?




From abo at minkirri.apana.org.au  Thu Apr 18 06:26:04 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 18 Apr 2002 22:26:04 +1000
Subject: [Twisted-Python] Issues in new checkin from Donovan
In-Reply-To: <3CBEB39C.8000406@itamarst.org>
References: <3CBEB39C.8000406@itamarst.org>
Message-ID: <20020418122604.GF14159@minkirri.apana.org.au>

On Thu, Apr 18, 2002 at 02:53:00PM +0300, Itamar Shtull-Trauring wrote:
> First of all - good work!
> 

I did a checkin? Not I! You must be thinking of someone else, unless there
is another Donovan who did it.

Love the glory, but better give credit where credit is due :-)

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Thu Apr 18 06:51:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Apr 2002 15:51:12 +0300
Subject: [Twisted-Python] Issues in new checkin from Donovan
References: <3CBEB39C.8000406@itamarst.org> <20020418122604.GF14159@minkirri.apana.org.au>
Message-ID: <3CBEC140.7090400@itamarst.org>

Donovan Baarda wrote:

> I did a checkin? Not I! You must be thinking of someone else, unless there
> is another Donovan who did it.
> 
> Love the glory, but better give credit where credit is due :-)

There's another Donovan, Donovan Preston.

I must say, it makes me feel real good to know there is only ONE Itamar 
Shtull-Trauring in the world (though there are of course other Itamars.)





From andrew-twisted at puzzling.org  Thu Apr 18 07:14:28 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 18 Apr 2002 23:14:28 +1000
Subject: [Twisted-Python] Issues in new checkin from Donovan
In-Reply-To: <3CBEC140.7090400@itamarst.org>
References: <3CBEB39C.8000406@itamarst.org> <20020418122604.GF14159@minkirri.apana.org.au> <3CBEC140.7090400@itamarst.org>
Message-ID: <20020418131428.GA1834@frobozz.local>

On Thu, Apr 18, 2002 at 03:51:12PM +0300, Itamar Shtull-Trauring wrote:
> 
> I must say, it makes me feel real good to know there is only ONE Itamar 
> Shtull-Trauring in the world (though there are of course other Itamars.)

Only until someone writes twisted.intelligence.itamar_shtulltrauring...

-Andrew.




From bob at redivi.com  Thu Apr 18 18:49:41 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Apr 2002 20:49:41 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020418131428.GA1834@frobozz.local>
Message-ID: <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>

I'm doing some twisted.enterprise crap and I was wondering if it was 
safe to use thread mutexes to make sure that only one interaction goes 
at a time?  I have some queries that shouldn't run in parallel under 
certain conditions and I believe forcing it w/ mutexes would be the 
safest and easiest solution... but I haven't looked much into what's 
going on under the hood and I'm wondering if it'll do Very Bad Things?

I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the 
moment because it's in testing for a few weeks.

-bob




From andrew-twisted at puzzling.org  Thu Apr 18 19:04:10 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 11:04:10 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>
References: <20020418131428.GA1834@frobozz.local> <552F6322-532F-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <20020419010410.GA4699@ritsuko.xware.cx>

On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
> 
> I'm doing some twisted.enterprise crap and I was wondering if it was 
> safe to use thread mutexes to make sure that only one interaction goes 
> at a time?  I have some queries that shouldn't run in parallel under 
> certain conditions and I believe forcing it w/ mutexes would be the 
> safest and easiest solution... but I haven't looked much into what's 
> going on under the hood and I'm wondering if it'll do Very Bad Things?

Interactions all run inside a db transaction, I think (someone please
correct me if I'm wrong).  So if your DB supports transactions, then you
should be fine already.  I'm presuming that by "interaction" you mean
twisted.enterprise.adbapi.Augmentation.runInteraction?

> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the 
> moment because it's in testing for a few weeks.

So already we have legacy systems to support :)

I'm not aware of any significant changes to twisted.enterprise since
0.15.2.

-Andrew.




From bob at redivi.com  Thu Apr 18 19:14:28 2002
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Apr 2002 21:14:28 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020419010410.GA4699@ritsuko.xware.cx>
Message-ID: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>

Well see the thing is that yes, the db supports transactions [postgres], 
but I need to make sure the db processes requests in the order that 
they're received over the wire, not whenever that particular db 
connection gets around to it.

I don't think I'm currently having issues w/ it right now, but I'm just 
concerned that potentially it could be a problem someday.

On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:

> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>
>> I'm doing some twisted.enterprise crap and I was wondering if it was
>> safe to use thread mutexes to make sure that only one interaction goes
>> at a time?  I have some queries that shouldn't run in parallel under
>> certain conditions and I believe forcing it w/ mutexes would be the
>> safest and easiest solution... but I haven't looked much into what's
>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>
> Interactions all run inside a db transaction, I think (someone please
> correct me if I'm wrong).  So if your DB supports transactions, then you
> should be fine already.  I'm presuming that by "interaction" you mean
> twisted.enterprise.adbapi.Augmentation.runInteraction?
>
>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>> moment because it's in testing for a few weeks.
>
> So already we have legacy systems to support :)
>
> I'm not aware of any significant changes to twisted.enterprise since
> 0.15.2.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrew-twisted at puzzling.org  Thu Apr 18 19:32:50 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 11:32:50 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
References: <20020419010410.GA4699@ritsuko.xware.cx> <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <20020419013250.GA5095@ritsuko.xware.cx>

On Thu, Apr 18, 2002 at 09:14:28PM -0400, Bob Ippolito wrote:
> Well see the thing is that yes, the db supports transactions [postgres], 
> but I need to make sure the db processes requests in the order that 
> they're received over the wire, not whenever that particular db 
> connection gets around to it.

Ok.  Well, mutexes aren't going to guarantee order, either.  IIRC,
there's no guarantee that mutexes will be woken in the order they called
.acquire().  I'd recommend that the network reading thread pushes the
data onto a Queue.Queue that is being popped by a DB thread.  If this is
all you are doing with the DB, then perhaps you don't even need
twisted.enterprise, which is more designed for getting data than
inserting it.

I actually have a module somewhere that basically does exactly that, and
returns Deferreds that trigger when individual data items are inserted.
I might see if I can find it, and if it is not too specific that I can
post it.

> I don't think I'm currently having issues w/ it right now, but I'm just 
> concerned that potentially it could be a problem someday.

Yeah, best to be cautious.  That sort of bug can be hell to track down
later on :(

-Andrew.




From andrew-twisted at puzzling.org  Thu Apr 18 20:14:48 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 19 Apr 2002 12:14:48 +1000
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <20020419013250.GA5095@ritsuko.xware.cx>
References: <20020419010410.GA4699@ritsuko.xware.cx> <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com> <20020419013250.GA5095@ritsuko.xware.cx>
Message-ID: <20020419021448.GA5514@ritsuko.xware.cx>

On Fri, Apr 19, 2002 at 11:32:50AM +1000, Andrew Bennetts wrote:
> .acquire().  I'd recommend that the network reading thread pushes the
> data onto a Queue.Queue that is being popped by a DB thread.  If this is
> all you are doing with the DB, then perhaps you don't even need
> twisted.enterprise, which is more designed for getting data than
> inserting it.
> 
> I actually have a module somewhere that basically does exactly that, and
> returns Deferreds that trigger when individual data items are inserted.
> I might see if I can find it, and if it is not too specific that I can
> post it.

And here is that module.

It has a few issues, it assumes you're using mx.ODBC.Windows to talk to
MS SQL Server using a DSN rather than an ODBC link, and it has the
beginnings of some code to ensure that packets don't get lost if the DB
goes down, but isn't being used yet.  It could do with general tidying
up and documentation.  On the other hand, it seems to work for the
simple uses I've put it to. 

Oh, I forgot to add this comment: call .insertPacket(None) to terminate
the thread when it is done.  That can be handy combined with the
daemonic flag you can pass to __init__, because you can use it to ensure
that your program doesn't exit until the DB done.

If there's sufficient interest, I'll look into fixing it up and checking
it in...

-Andrew.

----
# Twisted imports
from twisted.python import threadable, defer, failure
from twisted.internet import task

# Standard library imports
from Queue import Queue
from cStringIO import StringIO
import threading, traceback, time

# Twiddle the mx.ODBC.Windows module to, well, work.
import mx.ODBC.Windows
from mx.ODBC.Windows import DataError, IntegrityError, ProgrammingError, \
                            InternalError
# Required by DBAPI 2.0 -- it should already be there, but isn't :(
mx.ODBC.Windows.threadsafety = 2
# For some reason, the default connect function doesn't work with our DSNs
mx.ODBC.Windows.connect = mx.ODBC.Windows.DriverConnect

threadable.init(1)

class PacketInserter:
    """Class for inserting data from network packets into a DB
    
    It creates a seperate thread for processing SQL statements.  
    """
    dsn = ("driver={SQL Server};provider=sqloledb;server=db02;"
           "uid=sa;pwd=*****;database=Test;app=Twisted;")
    
    
    def __init__(self, daemonic=1):
        self.queue = Queue()
        self.recoveryQueue = Queue()
        self.dbThread = threading.Thread(target=self._processQueue,
                                         name='DB-Thread-')
        self.dbThread.setDaemon(daemonic)
        self.successCount = self.errorCount = 0
        self.active = 0
        self._db = None
        self.dbThread.start()

    def insertPacket(self, packet):
        """Insert a packet into the db.

        packet should be an instance of something with a .toSQL method.
        
        It returns a defer.Deferred that is called with the packet that was
        passed to this method.  The Deferred will be called after the packet
        has been inserted (or it will have its errback called).
        """
        d = defer.Deferred()
        self.queue.put((packet, d))
        return d

    def _getNext(self):
        if self.queue.empty():
            self.active = 0
        packet, deferred = self.queue.get()
        self.active = 1
        return packet, deferred
        
    def _getCursor(self):
        if self._db is not None:
            try:
                self._db.close()
            except:
                pass
            self._db = None

        cursor = None
        try:
            self._db = mx.ODBC.Windows.connect(self.dsn)
            cursor = self._db.cursor()
            cursor.execute('set implicit_transactions off;')
            print 'Connected to DB'
            #self._doRecovery()  FIXME
        except Exception, e:
            print 'Unable to create DB connection:', e
        return cursor
        
    def _doRecovery(self):
        print 'Retrying missed packets...'
        while not self.recoveryQueue.empty():
            # FIXME
            pass
        
    def _processQueue(self):
        cursor = self._getCursor()
        packet, deferred = self._getNext()
        start = time.time()
        while 1:
            if packet is None:
                print 'End of queue marker found, DB-Thread terminating'
                break

            if cursor is None:
                time.sleep(1)
                cursor = self._getCursor()
                continue

            try:
                cursor.execute(packet.toSQL())

            except (ProgrammingError, DataError, IntegrityError, 
                    InternalError), e:
                # InternalErrors include 
                # "COMMIT TRAN has no corresponding BEGIN TRAN" errors, which
                # should be a programming error...
                print 'Error inserting SQL: "%s"' % (packet.toSQL(),)
                traceback.print_exc()

                print 'Discarding statement'
                self.errorCount += 1
                task.schedule(deferred.errback, Failure(e))
                packet, deferred = self._getNext()

            except Exception, e:
                print 'Error inserting SQL: "%s"' % (packet.toSQL(),)
                traceback.print_exc()

                print 'Queuing statement'
                # FIXME  self.recoveryQueue.put(packet)
                print 'Reconnecting to DB'
                task.schedule(deferred.errback, Failure(e))
                cursor = self._getCursor()
            else:
                # If the last statement executed ok, then get the next one
                self.successCount += 1
                task.schedule(deferred.callback, packet)
                packet, deferred = self._getNext()

        end = time.time()
        print 'DB-Thread processed %d packets (and rejected %d) in %0.3f secs' \
              % (self.successCount, self.errorCount, (end - start),)
        print '%0.3f packets/sec' % ((end - start)/self.successCount,)

----




From sean at twistedmatrix.com  Thu Apr 18 20:50:15 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 18 Apr 2002 21:50:15 -0500
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <CBDFEEE4-5332-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEFMCFAA.sean@twistedmatrix.com>

well, knowing nothing about your application... relying on the order of rows
in a relational database table is generally a bad practice - this order is
really arbitrary and in some cases could actually change (depending on the
db you are using - clustered indices as primary keys for example). If you
want sequence information, I'd recommend you embed it in your rows - don't
rely on the order of the rows in the table.

anyway.. you can perform syncronous operations through a
twisted.enterprise.ConnectionPool by creating your own Transaction objects
and passing them to ConnectionPool::_runIteraction(). Maybe a queue with a
single db thread that you use syncronously?

twisted.enterprise needs more docs... especially the Row interface, but it
is good to hear that someone else is using it.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Bob Ippolito
Sent: Thursday, April 18, 2002 8:14 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] mutexes in twisted.enterprise?


Well see the thing is that yes, the db supports transactions [postgres],
but I need to make sure the db processes requests in the order that
they're received over the wire, not whenever that particular db
connection gets around to it.

I don't think I'm currently having issues w/ it right now, but I'm just
concerned that potentially it could be a problem someday.

On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:

> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>
>> I'm doing some twisted.enterprise crap and I was wondering if it was
>> safe to use thread mutexes to make sure that only one interaction goes
>> at a time?  I have some queries that shouldn't run in parallel under
>> certain conditions and I believe forcing it w/ mutexes would be the
>> safest and easiest solution... but I haven't looked much into what's
>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>
> Interactions all run inside a db transaction, I think (someone please
> correct me if I'm wrong).  So if your DB supports transactions, then you
> should be fine already.  I'm presuming that by "interaction" you mean
> twisted.enterprise.adbapi.Augmentation.runInteraction?
>
>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>> moment because it's in testing for a few weeks.
>
> So already we have legacy systems to support :)
>
> I'm not aware of any significant changes to twisted.enterprise since
> 0.15.2.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From carmstro at twistedmatrix.com  Thu Apr 18 21:34:04 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 18 Apr 2002 23:34:04 -0400
Subject: [Twisted-Python] bugs, bugs. (http)
Message-ID: <1019187245.5635.6.camel@radii>

Didn't notice these till after Twisted 0.17.2 was released (oh, btw,
Twisted 0.17.2 is released: http://twistedmatrix.com/):

* when I wget a file off of my web server, it seems to hang after
completion. Issue with persistent connection support?

* Static files are acting very sporadically. It looks like more HTTP
protocol issues. I *sometimes* get this (double-)traceback for them: 

[Broker,0,unix] <GET /users/carmstro.twistd/files/944.png HTTP/1.1>
[Broker,0,unix] Peer Will Receive PB Traceback:
[Broker,0,unix] Traceback (most recent call last):
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/pb.py", line 689, in _recvMessage
[Broker,0,unix]     netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/flavors.py", line 108, in remoteMessageReceived
[Broker,0,unix]     state = apply(method, args, kw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/distrib.py", line 45, in remote_resumeProducing
[Broker,0,unix]     self.producer.resumeProducing()
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/static.py", line 308, in resumeProducing
[Broker,0,unix]     self.request.unregisterProducer()
[Broker,0,unix]   File "/twisted/Twisted/twisted/protocols/http.py", line 412, in unregisterProducer
[Broker,0,unix]     self.transport.unregisterProducer()
[Broker,0,unix] exceptions.AttributeError: Request instance has no attribute 'transport'
[Broker,0,unix] Peer Will Receive PB Traceback:
[Broker,0,unix] Traceback (most recent call last):
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/pb.py", line 689, in _recvMessage
[Broker,0,unix]     netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/spread/flavors.py", line 108, in remoteMessageReceived
[Broker,0,unix]     state = apply(method, args, kw)
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/distrib.py", line 45, in remote_resumeProducing
[Broker,0,unix]     self.producer.resumeProducing()
[Broker,0,unix]   File "/twisted/Twisted/twisted/web/static.py", line 308, in resumeProducing
[Broker,0,unix]     self.request.unregisterProducer()
[Broker,0,unix]   File "/twisted/Twisted/twisted/protocols/http.py", line 412, in unregisterProducer
[Broker,0,unix]     self.transport.unregisterProducer()
[Broker,0,unix] exceptions.AttributeError: Request instance has no attribute 'transport'

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From bob at redivi.com  Fri Apr 19 00:53:44 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Apr 2002 02:53:44 -0400
Subject: [Twisted-Python] mutexes in twisted.enterprise?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEFMCFAA.sean@twistedmatrix.com>
Message-ID: <309B2201-5362-11D6-B58C-0003938210D6@redivi.com>

It's not the order of the rows, it's the order in which the database 
*processes* those rows.  I'm not doing inserts, I'm calling user defined 
functions that do a pretty complex set of updates and inserts on 
multiple tables depending on the new data and existing data.  It really 
needs to process them in the order that they are received.

It's not that the order of every row is significant, the rows represent 
certain events.  Such as remove or add.  There's a big difference 
between add and then remove versus remove and then add.. it's very much 
not commutative, like matrix multiplication.  The order has meaning.  
Each row does have a timestamp, but there isn't a way to say "process 
this once you're sure you're not going to receive another row with an 
earlier timestamp than yourself" and it's not easy to insert rows out of 
order because you need to know exactly what the preceding row(s) 
accomplished, roll it all back, do your thing, and then commit them 
again.

If I can make sure that the rows are processed in the order that they 
are received, I don't have to worry about the consistency.

On Thursday, April 18, 2002, at 10:50 PM, Sean Riley wrote:

> well, knowing nothing about your application... relying on the order of 
> rows
> in a relational database table is generally a bad practice - this order 
> is
> really arbitrary and in some cases could actually change (depending on 
> the
> db you are using - clustered indices as primary keys for example). If 
> you
> want sequence information, I'd recommend you embed it in your rows - 
> don't
> rely on the order of the rows in the table.
>
> anyway.. you can perform syncronous operations through a
> twisted.enterprise.ConnectionPool by creating your own Transaction 
> objects
> and passing them to ConnectionPool::_runIteraction(). Maybe a queue 
> with a
> single db thread that you use syncronously?
>
> twisted.enterprise needs more docs... especially the Row interface, but 
> it
> is good to hear that someone else is using it.
>
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Bob Ippolito
> Sent: Thursday, April 18, 2002 8:14 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] mutexes in twisted.enterprise?
>
>
> Well see the thing is that yes, the db supports transactions [postgres],
> but I need to make sure the db processes requests in the order that
> they're received over the wire, not whenever that particular db
> connection gets around to it.
>
> I don't think I'm currently having issues w/ it right now, but I'm just
> concerned that potentially it could be a problem someday.
>
> On Thursday, April 18, 2002, at 09:04 PM, Andrew Bennetts wrote:
>
>> On Thu, Apr 18, 2002 at 08:49:41PM -0400, Bob Ippolito wrote:
>>>
>>> I'm doing some twisted.enterprise crap and I was wondering if it was
>>> safe to use thread mutexes to make sure that only one interaction goes
>>> at a time?  I have some queries that shouldn't run in parallel under
>>> certain conditions and I believe forcing it w/ mutexes would be the
>>> safest and easiest solution... but I haven't looked much into what's
>>> going on under the hood and I'm wondering if it'll do Very Bad Things?
>>
>> Interactions all run inside a db transaction, I think (someone please
>> correct me if I'm wrong).  So if your DB supports transactions, then 
>> you
>> should be fine already.  I'm presuming that by "interaction" you mean
>> twisted.enterprise.adbapi.Augmentation.runInteraction?
>>
>>> I'm using Twisted 0.15.2, I believe.. I don't want to upgrade at the
>>> moment because it's in testing for a few weeks.
>>
>> So already we have legacy systems to support :)
>>
>> I'm not aware of any significant changes to twisted.enterprise since
>> 0.15.2.
>>
>> -Andrew.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Fri Apr 19 05:20:03 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Apr 2002 13:20:03 +0200
Subject: [Twisted-Python] mutexes in twisted.enterprise?
References: <309B2201-5362-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <3CBFFD63.3030200@itamarst.org>

Bob Ippolito wrote:

> It's not the order of the rows, it's the order in which the database 
> *processes* those rows.  I'm not doing inserts, I'm calling user defined 
> functions that do a pretty complex set of updates and inserts on 
> multiple tables depending on the new data and existing data.  It really 
> needs to process them in the order that they are received.

Basically, you should do what Sean suggested - setup a ConnectionPool or
whatever it's called, that only uses one thread. That way only one command
will run at once, and it'll run in order.

Check how enterprise.adbapi interacts with the threadtask module - a 
patch may be necessary in order to be able to use custom thread pools,
in which case you should patch your local install. Meanwhile I'll see if 
I can add this feature so it's in 0.17.3 or whatever the next release is.




From twisted at itamarst.org  Fri Apr 19 05:58:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Apr 2002 13:58:29 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] fixed POST in cgi under distribed web servers
References: <E16yW3D-0007PR-00@zaibach.twistedmatrix.com>
Message-ID: <3CC00665.3000800@itamarst.org>

I patched /twisted/Twisted/ on zaibach with this fix as well, so zaibach 
is now running 0.17.3 + this patch (it was the only way I could test if 
I solved it - we need a CGI accepttest that uses POST, where the web 
server is running over distrib.)




From acapnotic at twistedmatrix.com  Sat Apr 20 10:43:01 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 20 Apr 2002 09:43:01 -0700
Subject: [Twisted-Python] CVS toys today
Message-ID: <1019320981.16863.71.camel@troglodyte.funhouse>

As you have noticed, there is a funny little animal that watches all
your CVS commits and reports them to a mailing list.  I am trying to
turn this from "that thing Kevin set up" into something people use and
understand.  The last two days have seen two critical steps take place
toward this goal: a mostly-automatic test script, and the ability to
re-load the configuration file. 

That is the file freshCfg in the CVSROOT module.  Check it out, change
it, check it back in, run `loginfo.py --reconfigure` on the server and
you should have magic new shoes without me needing to re-start the
process. 

The source code for my CVS toys is currently in
~acapnotic/co-me/cvstoys/

Other questions: 

Say the protocol (or something else) breaks and the service does need to
be re-started.  Which user should be running this process?  Some account
which any CVS-admin can sudo to? 

What's the best way to get rid of those silly "Starting shutdown
sequence..." lines?  

Should I move the code for this into Zaibach's shared CVS repository? 
Before I do, does anyone have any suggestions for naming?  "cvstoys" and
particularly "fresher" seem pretty lame, but it's the best I came up
when I had to put something in the File Save dialog.


Share and enjoy,

 - Kevin

-- 
The moon is first quarter, 48.7% illuminated, 7.3 days old.



From twisted at itamarst.org  Sun Apr 21 13:19:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 21 Apr 2002 21:19:42 +0200
Subject: [Twisted-Python] Twisted and Component Architecture
Message-ID: <3CC310CE.9000405@itamarst.org>

Well, since it's been mentioned here, guess I'll step in.

First, I implemented a simplistic system because I needed adapters for 
Twisted's config system (it used to use mixin classes *shudder*), so I 
quickly wrote up something which implemented them. The fact that 
__implements__ checks the class is an implementation artifact - I can 
easily change it so it works like Zope3's.

Which brings us to the next issue - should I be using Zope3's CA? 
Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and 
even we drop 1.5.2 support we will be using 2.1 as the baseline. 
Interface packages and CA package are 2.2 only.

So, this is what I think I'll do - I'll refactor the minimum 
implementation Twisted's uses, making sure that it uses the same 
semantics and syntax as Zope3's (e.g. __implements__ being a 
tuple/singelton instead of lists - why was this made inconsistent in 
Zope, anyway?). If Zope3 is importable then Zope.CA's implementation 
will be used instead.

Any issues anyone can think of in doing this?




From pje at telecommunity.com  Sun Apr 21 14:32:08 2002
From: pje at telecommunity.com (Phillip J. Eby)
Date: Sun, 21 Apr 2002 15:32:08 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
In-Reply-To: <3CC310CE.9000405@itamarst.org>
Message-ID: <5.1.0.14.0.20020421151013.05a6d780@telecommunity.com>

At 09:19 PM 4/21/02 +0200, Itamar Shtull-Trauring wrote:
>Well, since it's been mentioned here, guess I'll step in.
>
>First, I implemented a simplistic system because I needed adapters for 
>Twisted's config system (it used to use mixin classes *shudder*), so I 
>quickly wrote up something which implemented them. The fact that 
>__implements__ checks the class is an implementation artifact - I can 
>easily change it so it works like Zope3's.

I think it should be sufficient to use Zope 2's Interface implementation, 
with your own adapter system.


>Which brings us to the next issue - should I be using Zope3's CA? 
>Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and even 
>we drop 1.5.2 support we will be using 2.1 as the baseline. Interface 
>packages and CA package are 2.2 only.

As far as I know, older versions of the Interface package are compatible 
with 1.5.2, and the one currently in Zope 2.x is certainly compatible with 
2.1 - maybe 1.5.2 as well.


>So, this is what I think I'll do - I'll refactor the minimum 
>implementation Twisted's uses, making sure that it uses the same semantics 
>and syntax as Zope3's (e.g. __implements__ being a tuple/singelton instead 
>of lists - why was this made inconsistent in Zope, anyway?).

Tuples because they're immutable, and therefore can be used as dictionary 
keys for caching purposes.  Singletons or nested tuples because it's really 
easy to forget to put the comma on the end, and it allows you to join base 
class __implements__ values thusly:

class Foo(Bar,Baz):
     __implements__ = Bar.__implements__, Baz.__implements__

Personally, I'd have preferred to make interfaces addable, such that:

class Foo(Bar,Baz):
     __implements__ = Bar.__implements__ + Baz.__implements__

would actually yield a new Interface object that inherited from the 
previous ones.  Then, an interface assertion would always *be* an interface 
object, which IMHO would simplify many things.  But that's a subject for 
future discussion on Zope3-Dev, methinks.  :)


>  If Zope3 is importable then Zope.CA's implementation will be used instead.
>
>Any issues anyone can think of in doing this?

Having had to deal with Z2 vs. Z3 Interface package quirks in TransWarp, my 
suggestion would be to use the Zope 2 Interface package rather than create 
a new one.  For TransWarp, I'm simply requiring the user to install the 
Interface package; but I imagine you could include it in your distribution 
if the ZPL licensing is agreeable.

For the adapter registry, I would suggest that you use your own, 
independent of Zope 3.  Since Zope 3 allows you to replace its principal 
components (such as the adapter registry), you can always at a later time 
elect to either hook your adapter registry API to the one in Zope, or hook 
the one in Zope to call yours.  So there's no need to worry about it much.

The main issues are in __implements__, __class_implements__, the type 
registry, and the Interface package.  If you don't use the same Interface 
package, then people can't write components that work with both Twisted and 
Zope, because they won't be using the same Interface metaclass, etc.

The alternative, if you don't want to deal with all of this, is to use a 
different attribute name, like __twisted_interfaces__ or something of that 
sort.  Then, a component being used for both has to create two different 
interfaces and declare them both via different attributes, but at least you 
can write something that'll work with both.

Maybe once enough of the Z3 CA stabilizes, and maybe a few cleanups of the 
Interface package occur, we should all lobby to get Interface in the Python 
standard library, where all of these various frameworks could use it.  :)




From bob at redivi.com  Sun Apr 21 15:28:01 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 21 Apr 2002 17:28:01 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <5.1.0.14.0.20020421151013.05a6d780@telecommunity.com>
Message-ID: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com>

I think that wxWindows could be a better choice for the GUI apps 
included with Twisted.  Of course, in Linux, wxWindows maps right onto 
GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
only available for Mac OS X when running XDarwin, which certainly isn't 
preferable.  There is a project to map Gtk to MacOS X, but it's in its 
infancy and I don't see it making any real progress.

Thoughts?

-bob




From twisted at itamarst.org  Tue Apr 23 04:52:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 13:52:27 +0300
Subject: [Twisted-Python] PB and public key cryptography
Message-ID: <3CC53CEB.7000101@itamarst.org>

I've been thinking a bit about this - maybe it ought to be done on the SSL 
level, since SSL already has the public key infrastructure, but the SSL 
model is very annoying and cumbersome to work with. I think the SDSI/SPKI 
infrastructure might suite PB's model very well.

I can't be sure of this, I haven't read in detail, but the model seems to 
match cred's service/perspective/identity model very very well.

E.g., read this - http://theory.lcs.mit.edu/~cis/sdsi/sdsi2/sdsi20_1.html

In cred terms, we would say a service's authorizer is what he describes as a 
"phone book", a name is an identity, and to each identity we can attach 
perspectives - what SPKI calls permissions. So this gives us the capability 
to have certificates for service/identity/perspective grants.

Further info at http://theory.lcs.mit.edu/~cis/sdsi.html

Implementation options:
1. SSL server has certificate, client has no certificate (like the way most 
public web servers work) so SSL is just used for transport encryption. The 
SPKI authentication is done over this, and works the same as it would for 
TCP. Well, not SSL, TLS, but the idea is the same.

2. SPKI may be mappable to SSL certificates, so the user's client 
certificate would include the identity and perspective. This would be a 
horrible PITA.

3. Build a crypto handshake based on SPKI (e.g. there's a simple demo one 
that comes with the Python SPKI toolkit Pisces, I'm sure someone has written 
others). Of course, this adds a whole new level of requirements for 
implementing PB.

All in all (1) seems easiest.




From twisted at itamarst.org  Tue Apr 23 05:18:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 14:18:39 +0300
Subject: [Twisted-Python] PB and public key cryptography
References: <3CC53CEB.7000101@itamarst.org>
Message-ID: <3CC5430F.7050301@itamarst.org>

Two more points - we could use a subset of SPKI that fits our needs, in 
order to not require full support.

E's info about this may be interesting
http://www.erights.org/elib/distrib/index.html

Apparently e-speak, HP's open source protocol (which had a Python 
implementation - HP was doing a lot of Python at one point and perhaps still 
are), used capabilities and SPKI. e-speak seems to have been killed by HP in 
favor of "web services" (http://www.e-speak.net):

"""
HP is pleased to announce the availability of the HP Web Services Platform,
Developer Edition, the next generation of e-Speak. HP has evolved our Web
services pioneering product by delivering dynamic discovery and intelligent
conversations between services in a new standards-based platform. The HP Web
Services Platform, Developer Edition provides support for key Web services
standards such as WSDL, SOAP, UDDI, and XML. By adopting these key standards,
HP enables you to more easily interoperate with disparate environments such as
Microsoft's .NET.
"""

I really like the 'interoperate with disparate environments such as 
Microsoft's .NET.' at the end :)





From twisted at itamarst.org  Tue Apr 23 05:26:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 23 Apr 2002 14:26:34 +0300
Subject: [Twisted-Python] More on e-speak
Message-ID: <3CC544EA.7020907@itamarst.org>

from E FAQ - e-speak sounds more and more like PB (although it did use XML 
IIRC).


6.5. How does E relate to other efforts such as e-speak, EROS, and Mozart?

E is a language and infrastructure for secure distributed applications; 
e-speak provides only the infrastructure. Both E and e-speak use capability 
mechanisms for access control, while e-speak also has mechanisms for naming 
and discovery. Both E and e-speak have trusted code that mediates requests, 
allowing a degree of manageability not provided by systems that don't 
mediate, such as Jini. Unlike E, e-speak is language independent, having had 
programming libraries for Java, Python, C++, and Perl (in various stages of 
completeness) in addition to a version for document exchange programming in 
XML. The E language makes security guarantees that e-speak cannot. For 
example, an E program can be analyzed for capability confinement. [Alan Karp]




From jim at zope.com  Tue Apr 23 07:29:05 2002
From: jim at zope.com (Jim Fulton)
Date: Tue, 23 Apr 2002 09:29:05 -0400
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
References: <3CC310CE.9000405@itamarst.org>
Message-ID: <3CC561A1.F38B3994@zope.com>

Itamar Shtull-Trauring wrote:
> 
> Well, since it's been mentioned here, guess I'll step in.
> 
> First, I implemented a simplistic system because I needed adapters for
> Twisted's config system (it used to use mixin classes *shudder*), so I
> quickly wrote up something which implemented them. The fact that
> __implements__ checks the class is an implementation artifact - I can
> easily change it so it works like Zope3's.

Great!

> Which brings us to the next issue - should I be using Zope3's CA?
> Apparently I can't - Twisted is intended to run on 1.5.2 upwards, and
> even we drop 1.5.2 support we will be using 2.1 as the baseline.
> Interface packages and CA package are 2.2 only.

Hm. I don't remember if there's any important reason why the Interface
and ComponentArchitecture packages depend on python 2.2. I suspect that
there isn't. Assuming that there is no important reason for them to
depend on 2.2, I'd be happy to see them work with Python 2 or, if necessary
Python 1.5. Perhaps, as Phillip suggests, it would be best to focus on
interfaces. I ended up doing a bunch of cleanup and refactoring in the
Interface package for Zope 3 and it would be nice to make that available
for earlier versions of Python, especially Python 2.
 
> So, this is what I think I'll do - I'll refactor the minimum
> implementation Twisted's uses, making sure that it uses the same
> semantics and syntax as Zope3's (e.g. __implements__ being a
> tuple/singelton instead of lists - why was this made inconsistent in
> Zope, anyway?).

Inconsistent? With what? Tuples and interfaces are allowed so that:

  - it's easy to spell implementing one interface:

      __implements__ = Ifoo

    which is very common

  - make it easy to compose implementation specifications:

      __implements__ = IFoo, some_base_class.__implements__

  - Make the specifications immutable to facilitate caching.

> If Zope3 is importable then Zope.CA's implementation
> will be used instead.
> 
> Any issues anyone can think of in doing this?

CA is a lot younger than Interface, so it's still changing quite
a bit. You might want to wait a little longer for the changes to
settle out.

Let us know what you want to do and we'll be willing to port the
software back.

Jim

--
Jim Fulton           mailto:jim at zope.com       Python Powered!        
CTO                  (888) 344-4332            http://www.python.org  
Zope Corporation     http://www.zope.com       http://www.zope.org



From jason at crash.org  Tue Apr 23 11:39:38 2002
From: jason at crash.org (Jason Asbahr)
Date: Tue, 23 Apr 2002 12:39:38 -0500
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com>
Message-ID: <15C1E992-56E1-11D6-A212-000393753460@crash.org>

I've used wxPython on Windows and I like it -- it produces a GUI that 
looks and feels like users expect it should.  It was easy to work with 
and had all the features I needed for that project.  I haven't tried it 
on other platforms -- curious to hear reports from anyone who has.  The 
fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
is a big plus.

Jason



On Sunday, April 21, 2002, at 04:28 PM, Bob Ippolito wrote:

>
> I think that wxWindows could be a better choice for the GUI apps 
> included with Twisted.  Of course, in Linux, wxWindows maps right onto 
> GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
> native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
> only available for Mac OS X when running XDarwin, which certainly isn't 
> preferable.  There is a project to map Gtk to MacOS X, but it's in its 
> infancy and I don't see it making any real progress.
>
> Thoughts?
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From bob at redivi.com  Tue Apr 23 12:24:13 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 23 Apr 2002 14:24:13 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <15C1E992-56E1-11D6-A212-000393753460@crash.org>
Message-ID: <505E70CC-56E7-11D6-8196-0003938210D6@redivi.com>

Well, it sort of runs on Mac OS X, but it's a helluva lot closer than 
GTK is to running without an X11 server on OS X :)

On Tuesday, April 23, 2002, at 01:39 PM, Jason Asbahr wrote:

>
> I've used wxPython on Windows and I like it -- it produces a GUI that 
> looks and feels like users expect it should.  It was easy to work with 
> and had all the features I needed for that project.  I haven't tried it 
> on other platforms -- curious to hear reports from anyone who has.  The 
> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
> is a big plus.
>
> Jason
>
>
>
> On Sunday, April 21, 2002, at 04:28 PM, Bob Ippolito wrote:
>
>>
>> I think that wxWindows could be a better choice for the GUI apps 
>> included with Twisted.  Of course, in Linux, wxWindows maps right onto 
>> GTK, but in win32 and Mac OS X (I think Mac OS as well) it maps to the 
>> native widgets.  Unfortunately, Gtk isn't available for Mac OS, and is 
>> only available for Mac OS X when running XDarwin, which certainly 
>> isn't preferable.  There is a project to map Gtk to MacOS X, but it's 
>> in its infancy and I don't see it making any real progress.
>>
>> Thoughts?
>>
>> -bob
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Apr 23 12:40:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Apr 2002 13:40:35 -0500
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
In-Reply-To: <3CC561A1.F38B3994@zope.com>
References: <3CC310CE.9000405@itamarst.org> <3CC561A1.F38B3994@zope.com>
Message-ID: <20020423184035.GB11824@twistedmatrix.com>

On Tue, Apr 23, 2002 at 09:29:05AM -0400, Jim Fulton wrote:
> Itamar Shtull-Trauring wrote:
> > So, this is what I think I'll do - I'll refactor the minimum
> > implementation Twisted's uses, making sure that it uses the same
> > semantics and syntax as Zope3's (e.g. __implements__ being a
> > tuple/singelton instead of lists - why was this made inconsistent in
> > Zope, anyway?).
> 
> Inconsistent? With what? Tuples and interfaces are allowed so that:

It's inconsistent with itself.  This is an unfortunate wart of Python, I
think, that because it's easy to forget the trailing ',' to create a
tuple, spelling gets mixed up in the way metadata is defined.
__implements__ can an interface or a tuple which contains either tuples,
interfaces, or both.  While this isn't really a big problem, it sure
makes writing code that deals with __implements__ (from the other side)
annoying.

> CA is a lot younger than Interface, so it's still changing quite
> a bit. You might want to wait a little longer for the changes to
> settle out.
> 
> Let us know what you want to do and we'll be willing to port the
> software back.

(Correct me if I'm wrong, itamar, but) I think that the implementation
we have right now is adequate for our purposes -- we'll try to keep
evolving it so that Twisted will work with Zope3 components.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From cpaul at telemetrybox.org  Tue Apr 23 12:51:30 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 23 Apr 2002 08:51:30 -1000
Subject: [Twisted-Python] International SysOp Appreciation Day
Message-ID: <20020423085130.B1632@Skaffen.pdchawaii.com>

May 2nd is International SysOp Appreciation Day.

This is the day to show your gratitude to the hard working SysOp who makes the
+IT in your organization run smoothly.  You can show your respect by giving
+candy, flowers, small gifts or even a simple GPG-signed "Thank You" email.


Take care,
Charles Paul




From carmstro at twistedmatrix.com  Tue Apr 23 14:03:26 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 23 Apr 2002 15:03:26 -0500
Subject: [Twisted-Python] International SysOp Appreciation Day
In-Reply-To: <20020423085130.B1632@Skaffen.pdchawaii.com>
References: <20020423085130.B1632@Skaffen.pdchawaii.com>
Message-ID: <20020423200325.GA13730@twistedmatrix.com>

SysOp? I don't think my company runs a BBS. It'd be cool if they did...

On Tue, Apr 23, 2002 at 08:51:30AM -1000, cpaul at telemetrybox.org wrote:
> May 2nd is International SysOp Appreciation Day.
> 
> This is the day to show your gratitude to the hard working SysOp who makes the
> +IT in your organization run smoothly.  You can show your respect by giving
> +candy, flowers, small gifts or even a simple GPG-signed "Thank You" email.



From abo at minkirri.apana.org.au  Tue Apr 23 18:08:26 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 24 Apr 2002 10:08:26 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <15C1E992-56E1-11D6-A212-000393753460@crash.org>
References: <A85D5124-556E-11D6-A4BB-0003938210D6@redivi.com> <15C1E992-56E1-11D6-A212-000393753460@crash.org>
Message-ID: <20020424000826.GA11824@minkirri.apana.org.au>

On Tue, Apr 23, 2002 at 12:39:38PM -0500, Jason Asbahr wrote:
> 
> I've used wxPython on Windows and I like it -- it produces a GUI that 
> looks and feels like users expect it should.  It was easy to work with 
> and had all the features I needed for that project.  I haven't tried it 
> on other platforms -- curious to hear reports from anyone who has.  The 
> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-) 
> is a big plus.

I've been down the GUI+Python research path a while ago. There is quite a
bit of info on wxWindows and Python, but perhaps most significant is that
pretty much the only reason why wxWindows has not replaced Tk as the
standard Python GUI is platform support, in particular Mac. Last time I
looked, wxWindows+Mac was getting there, but not yet.

I believe even Guido did a test project using both wxWindows and Tk, and
came to the conclusion wxWindows was easyer to develop with, faster, looked
nicer, etc. 

GTK+Glade is a nice combo for working on linux, but portability issues on
Windoze and Mac pretty much count it out for me.

Tk is still a contender just because of it's age.

wxWindows+Boa Constructor would be my tool of choice for a new GUI project.
Boa is still pretty beta, but amazingly functional considering how quick it
was developed.

Things like Qt I didn't really look at, probably because I'm still license
shy for no logical reason.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From bob at redivi.com  Tue Apr 23 20:22:46 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 23 Apr 2002 22:22:46 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <20020424000826.GA11824@minkirri.apana.org.au>
Message-ID: <2AAD40C2-572A-11D6-A50F-0003938210D6@redivi.com>

On Tuesday, April 23, 2002, at 08:08 PM, Donovan Baarda wrote:

> On Tue, Apr 23, 2002 at 12:39:38PM -0500, Jason Asbahr wrote:
>>
>> I've used wxPython on Windows and I like it -- it produces a GUI that
>> looks and feels like users expect it should.  It was easy to work with
>> and had all the features I needed for that project.  I haven't tried it
>> on other platforms -- curious to hear reports from anyone who has.  The
>> fact that it runs on Mac OS X (as the wxDesigner screenshots attest :-)
>> is a big plus.
>
> I've been down the GUI+Python research path a while ago. There is 
> quite a
> bit of info on wxWindows and Python, but perhaps most significant is 
> that
> pretty much the only reason why wxWindows has not replaced Tk as the
> standard Python GUI is platform support, in particular Mac. Last time I
> looked, wxWindows+Mac was getting there, but not yet.

I don't know about its support for Mac OS9, but as far as Mac OS X goes 
it seems to be very far along.  It did have some assertion errors when 
running the demo, about a missing menu resource, but they were 
nonfatal.  I think it did crash once when I tried to close something, 
but nonetheless it seemed to be pretty far along.  Visually it looked 
pretty damn close to correct, some of the spacing on the buttons was a 
little off, but even IE has problems with that.  This is from the latest 
CVS, so any of these errors could be works in progress.  The Aqua 
version of Tk isn't really that great either, I've seen it crash and 
I've seen a lot of visual errors.

>
> I believe even Guido did a test project using both wxWindows and Tk, and
> came to the conclusion wxWindows was easyer to develop with, faster, 
> looked
> nicer, etc.
>
> GTK+Glade is a nice combo for working on linux, but portability issues 
> on
> Windoze and Mac pretty much count it out for me.
>

I've done gtk+glade for linux, it works pretty well.. except for the 
fact that the glade tool is terrible to use, I spent more time  fighting 
bugs in the glade designer than it would've taken for me to mock it up 
in gimp/photoshop and then do the XML or python code by hand.

> Tk is still a contender just because of it's age.
>
> wxWindows+Boa Constructor would be my tool of choice for a new GUI 
> project.
> Boa is still pretty beta, but amazingly functional considering how 
> quick it
> was developed.

I don't have experience with Boa Constructor, but it sounds like it's 
better off than glade, from my experience with that ;)

>
> Things like Qt I didn't really look at, probably because I'm still 
> license
> shy for no logical reason.
>

Qt's license is great for X11, but I'm not willing to pay > $1000 (per 
developer+platform combination) to use it for open source work on 
anything else, it really leaves it in a worse spot than GTK or 
wxWindows.  I'd rather donate that money to the wxWindows team or to 
have the GUI portion rewritten with a native library.

-bob




From glyph at twistedmatrix.com  Tue Apr 23 22:58:58 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Apr 2002 23:58:58 -0500
Subject: [Twisted-Python] ANN: glyph-discuss (narcissus would have blushed)
Message-ID: <20020424045858.GA24494@twistedmatrix.com>

My compulsive laziness and baseless arrogance has driven me to create
not only an open-source server framework in python, but also a forum for
my fans to discuss my wacky antics:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/glyph-discuss

I plan to set up a weblog eventually (Donovan Preston has been kind
enough to relieve me of the responsibility of coding it first), but
writing the articles myself all the time takes effort.  I figure, why
write about myself all the time if I can get others to do it for me?

Have fun :-)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From twisted at itamarst.org  Wed Apr 24 07:48:56 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Apr 2002 16:48:56 +0300
Subject: [Twisted-Python] Re: [Zope3-dev] Twisted and Component Architecture
References: <3CC310CE.9000405@itamarst.org> <3CC561A1.F38B3994@zope.com>
Message-ID: <3CC6B7C8.7050202@itamarst.org>

OK, in CVS twisted interfaces now act a lot more like Zope's -
__implements__ is a single object or a tuple (or tuple of tuples, etc.) and 
the check if an instance implements an interface is done on the instance, 
not on the object's class.






From shandy at geeky.net  Wed Apr 24 10:04:23 2002
From: shandy at geeky.net (Shandy Brown)
Date: 24 Apr 2002 12:04:23 -0400
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <E170KxL-0008F7-00@zaibach.twistedmatrix.com>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com>
Message-ID: <1019664264.1245.18.camel@shitbox>

Everybody's got an opinion.  Here's mine. (these opinions are from my
experience only)

Tk:
 Pros: cross platform
 Cons: ugly results, ugly language

GTK / Glade (LibGlade):
 Pros: separates application logic from interface*
       easy
       looks nice
 Cons: platforms not all there
       2.0 bindings not yet complete (at 1.99.9)

wxWindows:
 Pros: cross platform
 Cons: ??

and then the overlooked option... 

XUL:
 Pros: separates application logic from interface*
       cross platform
       REALLY knows how to use XML (CSS, HTML for free, etc)
 Cons: just became frozen, so docs hard to find
       i suggest here: http://www.xml.com/pub/r/1330

* this is the most important feature I consider with my projects.

Shandy


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020424/2e5f1f35/attachment.sig>

From twisted at itamarst.org  Wed Apr 24 10:08:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Apr 2002 19:08:25 +0300
Subject: [Twisted-Python] wxWindows vs Gtk
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <3CC6D879.4030203@itamarst.org>

Shandy Brown wrote:

> wxWindows:
>  Pros: cross platform
>  Cons: ??

One con is the fact that it uses lots and lots of memory.


> XUL:
>  Pros: separates application logic from interface*
>        cross platform
>        REALLY knows how to use XML (CSS, HTML for free, etc)
>  Cons: just became frozen, so docs hard to find
>        i suggest here: http://www.xml.com/pub/r/1330

Additonal cons:
Requires the huge Mozilla runtime, far less widgets than other toolkits.

However, if you want to contribute XUL event loop integration we'd be glad 
to have it :)






From glyph at twistedmatrix.com  Wed Apr 24 10:35:19 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 24 Apr 2002 11:35:19 -0500
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <3CC6D879.4030203@itamarst.org>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox> <3CC6D879.4030203@itamarst.org>
Message-ID: <20020424163519.GA4532@twistedmatrix.com>

On Wed, Apr 24, 2002 at 07:08:25PM +0300, Itamar Shtull-Trauring wrote:
> Shandy Brown wrote:
> 
> >wxWindows:
> > Pros: cross platform
> > Cons: ??
> 
> One con is the fact that it uses lots and lots of memory.

Does anybody else find that wxWindows just does packing subtly wrong on
everything but win32?  All the screenshots look just a *little* off
(enough to drive me crazy ^_^)

> >XUL:
> > Pros: separates application logic from interface*
> >       cross platform
> >       REALLY knows how to use XML (CSS, HTML for free, etc)
> > Cons: just became frozen, so docs hard to find
> >       i suggest here: http://www.xml.com/pub/r/1330
> 
> Additonal cons:
> Requires the huge Mozilla runtime, far less widgets than other toolkits.

Even more additional cons:

ugly, slow, javascript-centric

Additional pro:

supports theming and graphics very well

> However, if you want to contribute XUL event loop integration we'd be glad 
> to have it :)

That would be nice, yes :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From arashi1 at pd.jaring.my  Wed Apr 24 11:01:21 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Thu, 25 Apr 2002 01:01:21 +0800
Subject: [Twisted-Python] Twisted is confusing...but I'm not giving up yet!
Message-ID: <200204250101.21166.arashi1@pd.jaring.my>

Hello everyone,

I'm new here. I thought trying to use zope in 1.x days was confusing but 
boy...twisted is realy out there. I can serve static web pages and do some 
cgi stuff but I'm more interested in making web-applications, primarily.

The thing is, from the docs I've read (and that's pretty much all in the 
distro) I'm still confused about what goes where and what to use. It seems 
the Twisted Framework can be used for just about anything except make coffee!

I think there-in lies the "problem". It's overwhelming for the new user. It 
would be nice if I could make a step-by-step tutorial. And I _will_ -  if 
only I can understand it first. When I first got the "hang" of zope, I made a 
tutorial that takes the user from zero to a functioning publicly postable 
job-board with searching facilities. It illustrated zopes potential to a 
newbie using some basic components (custom zclasses).

I'd like to make a similar tutorial for Twisted. If I can hack it, that is...

Basically, I'd have a bunch of classes, each has a "view" method ("display()" 
in Twisted?) and some other methods that would implement some kind of set and 
get functionality to the objects. (I have no idea how to do "searching" in 
Twisted at all). Btw...how do I implement persistence? 

I have a job-board instance that contains multiple job-posting instances. So 
that when you call the job-board's "view", it iterates over the job-posting 
instances there-in and calls their individual "view" methods. The job-board's 
"view" method creates a skeleton where the individual job-posting instances' 
"view" method "slots in".

In zope, I used zclasses to implement it (the tutorial was a zclass tutorial). 
So ZODB pretty much took care of persistence automatically for me. How do I 
do object persistence in Twisted? 

Also...what is "coil"? And how do I use it? It seems to have the same sorta 
modules that is in twisted.tap but I can't figure it out. From the 
literature, I think coil (or is it plugin?) is Twisted's way of doing zope's 
"python-based Products". Am I wrong?

Is there an analogous thingamajig to zope's zodb in Twisted?

-- 
Still-dazed-after-3-days-of-reading-Twisted-code-and-docs,
Mukhsein Johari



From abo at minkirri.apana.org.au  Wed Apr 24 11:23:12 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 25 Apr 2002 03:23:12 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <1019664264.1245.18.camel@shitbox>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <20020424172311.GA11372@minkirri.apana.org.au>

On Wed, Apr 24, 2002 at 12:04:23PM -0400, Shandy Brown wrote:
> Everybody's got an opinion.  Here's mine. (these opinions are from my
> experience only)
[...]
> wxWindows:
>  Pros: cross platform
>  Cons: ??

There was some work going into XML GUI definition support in wxWindows, but
I dunno how far they've got. I think they were aiming for a libglade type
thing.

> and then the overlooked option... 
> 
> XUL:
>  Pros: separates application logic from interface*
>        cross platform

If you can count running under mozillaOS as cross platform...

>        REALLY knows how to use XML (CSS, HTML for free, etc)
>  Cons: just became frozen, so docs hard to find

c'mon, I know it's slow, but frozen is a bit harsh... plodding maybe :-)


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From andrew-twisted at puzzling.org  Wed Apr 24 22:24:37 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 25 Apr 2002 14:24:37 +1000
Subject: [Twisted-Python] wxWindows vs Gtk
In-Reply-To: <1019664264.1245.18.camel@shitbox>
References: <E170KxL-0008F7-00@zaibach.twistedmatrix.com> <1019664264.1245.18.camel@shitbox>
Message-ID: <20020425042437.GA478@frobozz.local>

On Wed, Apr 24, 2002 at 12:04:23PM -0400, Shandy Brown wrote:
> wxWindows:
>  Pros: cross platform
>  Cons: ??

Cons: Very poorly documented.  Unstable.  Code copied and pasted from the
demo app can mysteriously fail to work when used standalone.  Not as
cross-platform as it should be -- I had a weird layout bug once where the
solution was to grovel through the mailing list archives for a few hours
until I saw someone say "Oh yeah, to do blah from the blargh, you need to do
bleep on win32, because it does it like this...".  There was *no* indication
in the documentation that I was doing anything that would have trouble used
cross-platform -- oh, that's right, there is no wxPython documentation, just
links to the C++ API.

In case you couldn't tell, I'm rather scarred by my experience with
wxPython...

-Andrew.




From glyph at twistedmatrix.com  Thu Apr 25 00:15:01 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 25 Apr 2002 01:15:01 -0500
Subject: [Twisted-Python] Twisted is confusing...but I'm not giving up yet!
In-Reply-To: <200204250101.21166.arashi1@pd.jaring.my>
References: <200204250101.21166.arashi1@pd.jaring.my>
Message-ID: <20020425061501.GA19760@twistedmatrix.com>

On Thu, Apr 25, 2002 at 01:01:21AM +0800, Mukhsein Johari wrote:
> Hello everyone,
> 
> I'm new here. I thought trying to use zope in 1.x days was confusing but 
> boy...twisted is realy out there. I can serve static web pages and do some 
> cgi stuff but I'm more interested in making web-applications, primarily.

Glad to hear you're giving it a try.  twisted.web has been lacking in
direction for a little while, but hopefully Donovan will be answering
some of these questions in depth.  Take a look at his "Blog" application
in CVS...

> The thing is, from the docs I've read (and that's pretty much all in the 
> distro) I'm still confused about what goes where and what to use. It seems 
> the Twisted Framework can be used for just about anything except make coffee!

Yes, indeed.  All you have to do in order to use Twisted for something
is write lots of code ;-).

> I think there-in lies the "problem". It's overwhelming for the new user. It 
> would be nice if I could make a step-by-step tutorial. And I _will_ -  if 
> only I can understand it first. When I first got the "hang" of zope, I made a 
> tutorial that takes the user from zero to a functioning publicly postable 
> job-board with searching facilities. It illustrated zopes potential to a 
> newbie using some basic components (custom zclasses).

Step-by-step tutorials to "twisted" are probably a bad idea.  If you are
looking to write web applications, that's one specific facet of Twisted,
but keep in mind that it can be used at multiple levels; writing a web
application in Twisted is very different from Zope; we do not offer a
comprehensive web development framework.  (Yet.)

> I'd like to make a similar tutorial for Twisted. If I can hack it, that is...

HOORAY.  We need a good writer who can dedicate some time to this.  I
hope that we can be responsive enough in answering your questions :).

> Basically, I'd have a bunch of classes, each has a "view" method ("display()" 
> in Twisted?) and some other methods that would implement some kind of set and 
> get functionality to the objects. (I have no idea how to do "searching" in 
> Twisted at all). Btw...how do I implement persistence? 

As it stands, all your objects will be dumped into one big pickle; so
just implement __getstate__ if you need to do something special;
otherwise, don't :-).

> I have a job-board instance that contains multiple job-posting instances. So 
> that when you call the job-board's "view", it iterates over the job-posting 
> instances there-in and calls their individual "view" methods. The job-board's 
> "view" method creates a skeleton where the individual job-posting instances' 
> "view" method "slots in".

Are you looking to back this with a database or just in-memory objects?

> In zope, I used zclasses to implement it (the tutorial was a zclass tutorial).

In twisted, you would likely use regular Python classes to implement it;
most likely (at this point) from twisted.web.widgets; although
the new twisted.web.domtemplate is the future.

> So ZODB pretty much took care of persistence automatically for me. How do I 
> do object persistence in Twisted? 

(See above, and...) if you are looking for something like ZODB, Twisted
doesn't offer it.  Our approach is: either you need a database, or you
need objects.  If you need an object database with all the attendant
trappings, using ZODB is probably your best bet; but if you need just a
reasonable quantity of objects persisted, just use the Application class
as the root of your system, and have it automatically persist.

If you require a relational databse, see twisted.enterprise; especially
twisted.enterprise.adbapi and twisted.enterprise.row.  These are still
works in progress but there is a basic outline there for how a
database-backed application would be written.

> Also...what is "coil"? And how do I use it? It seems to have the same sorta 
> modules that is in twisted.tap but I can't figure it out. From the 
> literature, I think coil (or is it plugin?) is Twisted's way of doing zope's 
> "python-based Products". Am I wrong?

That's pretty close to accurate; except for the fact that Products are
specifically web services and COIL provides configuration for
*everything*.

> Is there an analogous thingamajig to zope's zodb in Twisted?

No.  Nor do we have plans for it.  At one point, I thought that it might
be possible to improve upon the ZODB; after implementing some prototypes
and trying to devise a strategy I came to the conclusion that ZODB is
pretty darn good for what it does, and that the perceived deficiencies I
wanted to correct are inherent to object databases.  Still, I find that
when one has a large amount of data to persist, a non-OODBMS strategy is
best.  I do have a peculiar perspective though, because the datasets I
have to work with are usually either VERY large or VERY small.

Still, ZODB is good at that.  itamar's work on integrating Twisted and
Zope will hopefully make that easy.

> -- 
> Still-dazed-after-3-days-of-reading-Twisted-code-and-docs,
> Mukhsein Johari

I don't think that feeling ever goes away -- I've been *writing* Twisted
code for two years and I still feel dazed ;-).  Maybe you can help by
documenting some of this stuff properly!

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From glyph at twistedmatrix.com  Thu Apr 25 18:03:41 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 25 Apr 2002 19:03:41 -0500
Subject: [Twisted-Python] twistedmatrix.com now un-wedged
Message-ID: <20020426000341.GA2058@twistedmatrix.com>

If you were running a personal server on twistedmatrix.com, you'll have
to restart it now.

Zaibach was effectively crashed today for several hours, while various
services failed due to memory allocation errors.

We are conducting a thorough investigation of the cause.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From twisted at itamarst.org  Fri Apr 26 08:13:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Apr 2002 16:13:22 +0200
Subject: [Twisted-Python] DICE Job - Austin-Games (Network, Server) Programmer
Message-ID: <3CC96082.10907@itamarst.org>

Maybe someone's interested? ;)

<http://www.dice.com/DandL/c/cxspi.JO63203LEJD.html>




From a.d.stribblehill at durham.ac.uk  Fri Apr 26 07:24:14 2002
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Fri, 26 Apr 2002 14:24:14 +0100
Subject: [Twisted-Python] [PATCH] Recognise multiple possible line-endings for LineReciever
Message-ID: <20020426132414.GH9850@womble.dur.ac.uk>

The attached patch changes LineReceiver to call out to
self.splitAtNewline for line splitting rather than doing it within
dataReceived. It doesn't change the default behaviour in any way.

However, if the user chooses to change their protocol from:

| class MyProto(base.LineReceiver):
|    ...

to

| class MyProto(base.MultiLinebreakMixin, base.LineReceiver)
|    ...

lines will be split on the first (or longest, if there's a tie)
line-break in the list self.newlines (by default, CRLF, CR, LF). This
has the effect that I can netcat (nc) to servers and they'll treat my
\n as a newline.

I dropped a unit test into test_protocol.py and it even passes!

I'm afraid the patch is relative to 0.17-3; I can't cope with new
versions every day ;)

Oh yeah: I hereby relinquish copyright for the code in the attached
patch and any subsequent code I contribute to Twisted, to Matthew
Lefkowitz. Much good may it do him :>

-- 
PORTLAND PLYMOUTH
MAINLY WESTERLY 5 OR 6. SHOWERS. GOOD
-------------- next part --------------
diff -u --exclude=*.pyc -r twisted-0.17.3.orig/twisted/protocols/basic.py twisted-0.17.3/twisted/protocols/basic.py
--- twisted-0.17.3.orig/twisted/protocols/basic.py	Mon Jan 21 23:06:37 2002
+++ twisted-0.17.3/twisted/protocols/basic.py	Fri Apr 26 12:52:41 2002
@@ -139,6 +139,9 @@
     delimiter = '\r\n'
     MAX_LENGTH = 16384
 
+    def splitAtNewline(self, data):
+        return string.split(self.__buffer, self.delimiter, 1)
+
     def dataReceived(self, data):
         """Protocol.dataReceived.
         Translates bytes into lines, and calls lineReceived (or
@@ -147,8 +150,7 @@
         self.__buffer = self.__buffer+data
         while self.line_mode:
             try:
-                line, self.__buffer = string.split(self.__buffer,
-                                                   self.delimiter, 1)
+                line, self.__buffer = self.splitAtNewline(self.__buffer)
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
                     self.transport.loseConnection()
@@ -198,6 +200,38 @@
         """Sends a line to the other end of the connection.
         """
         self.transport.write(line + self.delimiter)
+
+
+class MultiLinebreakMixin:
+    """A mixin class, designed for LineReciever. List \'newlines\'
+    is a list of the possible line endings (default CRLF, CR, LF).
+
+    This does _not_ affect the output line ending.
+    """
+    newlines = ['\r\n', '\n', '\r']
+
+    def splitAtNewline(self, data):
+        """Split a string of data on the first (and longest)
+        line-separator of self.newlines.
+        """
+        def cmpPossibleSplits(a,b):
+            if a[0] == -1: return +1
+            if b[0] == -1: return -1
+            epsilon=cmp(a[0], b[0])
+            if epsilon != 0:
+                return epsilon
+            else:
+                return -cmp(len(a[1]), len(b[1]))
+
+        newlineHits=map(
+            lambda delim, data=data: (string.find(data,delim),delim),
+            self.newlines)
+        newlineHits.sort(cmpPossibleSplits)
+        bestBreak = newlineHits[0]
+        if bestBreak[1] == -1:
+            return [data]
+        else:
+            return string.split(data, bestBreak[1], 1)
 
 
 class Int32StringReceiver(protocol.Protocol):
diff -u --exclude=*.pyc -r twisted-0.17.3.orig/twisted/test/test_protocols.py twisted-0.17.3/twisted/test/test_protocols.py
--- twisted-0.17.3.orig/twisted/test/test_protocols.py	Tue Apr  9 21:37:03 2002
+++ twisted-0.17.3/twisted/test/test_protocols.py	Fri Apr 26 13:24:30 2002
@@ -122,6 +122,20 @@
                 a.dataReceived(s)
             self.failUnlessEqual(self.output, a.received)
 
+
+class MultiLinebreakTestCase(unittest.TestCase):
+
+    def testNoLineEnding(self):
+        testData = {'foo bar': ['foo bar'],
+                    'foo\nbar': ['foo', 'bar'],
+                    'foo\rbar': ['foo', 'bar'],
+                    'foo\r\nbar': ['foo', 'bar'],
+                    'foo\nbar\nbaz': ['foo', 'bar\nbaz']}
+        a = basic.MultiLinebreakMixin()
+        for i,o in testData.items():
+            self.failUnlessEqual(a.splitAtNewline(i), o)
+    
+
 class TestNetstring(basic.NetstringReceiver):
 
     def connectionMade(self):
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020426/32f60ae3/attachment.sig>

From twisted at itamarst.org  Sat Apr 27 08:56:59 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Apr 2002 16:56:59 +0200
Subject: [Twisted-Python] WebDAV / FTP / etc.
Message-ID: <3CCABC3B.1080201@itamarst.org>

Various thoughts - if someone ever implements this stuff or refactors 
FTP server, talk to me first.

1. WebDAV, FTP, sftp, HTTP for file serving - they're all basically 
using three interfaces (only WebDAV makes this explicit.)

   ICollection - collection of IEntities (a "directory")
   IEntity - an entity that stores data (a "file")
   IProperyManager - set and get properties (implemented by ICollections
                     and IEntities.)

So, we define the interfaces, and then write at least one implemntation, 
a filesystem backed one. FTP, WebDAV and twisted.web.static would all 
depend on these interfaces, and given a FS-backed implementation could 
serve files.

2. WebDAV does *not* depend on twisted.web - it's a separate HTTP-based 
protocol. Note that WebDAV has its own port (e.g. because it breaks with 
certain web proxies) and in general the concept of twisted.web's 
Resource doesn't map to WebDAV, since WebDAV isn't supposed to be 
*doing* stuff, it's for *editing* entities.




From twisted at itamarst.org  Sun Apr 28 16:07:48 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Apr 2002 00:07:48 +0200
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
Message-ID: <3CCC72B4.50601@itamarst.org>

Want an email yourname at sikrit.info? Want a subdomain yourname.sikrit.info?

I am now offering both, under the following terms - you must write 10 
tests a month for Twisted as rent. These tests can't be the same as 
those you may use to get other domains with similar agreements. In 
return, you will get an email address and subdomain forwarded to an IP 
of your choice, or URL forwarding.

Offers to write documentation instead of tests are also accepted.




From glyph at twistedmatrix.com  Sun Apr 28 15:27:03 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Apr 2002 16:27:03 -0500
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
In-Reply-To: <3CCC72B4.50601@itamarst.org>
References: <3CCC72B4.50601@itamarst.org>
Message-ID: <20020428212703.GA29011@twistedmatrix.com>

In a similar offer, twistedmatrix.com subdomains are available under the
following terms:

If you maintain twisted.names to the point where it can serve all of
twistedmatrix.com's needs (BIND zone transfers and all), you get
yourname.twistedmatrix.com for life.  Until that point, you can get
yourname.twistedmatrix.com by writing 20 tests in one month, with the
same 10-test-a-month upkeep as sikrit.info.

On Mon, Apr 29, 2002 at 12:07:48AM +0200, Itamar Shtull-Trauring wrote:
> Want an email yourname at sikrit.info? Want a subdomain yourname.sikrit.info?
> 
> I am now offering both, under the following terms - you must write 10 
> tests a month for Twisted as rent. These tests can't be the same as 
> those you may use to get other domains with similar agreements. In 
> return, you will get an email address and subdomain forwarded to an IP 
> of your choice, or URL forwarding.
> 
> Offers to write documentation instead of tests are also accepted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |



From carmstro at twistedmatrix.com  Sun Apr 28 15:39:30 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 28 Apr 2002 17:39:30 -0400
Subject: [Twisted-Python] get email and subdomain @ sikrit.info
In-Reply-To: <20020428212703.GA29011@twistedmatrix.com>
References: <3CCC72B4.50601@itamarst.org> 
	<20020428212703.GA29011@twistedmatrix.com>
Message-ID: <1020029972.975.1.camel@radii>

On Sun, 2002-04-28 at 17:27, Glyph Lefkowitz wrote:
> In a similar offer, twistedmatrix.com subdomains are available under the
> following terms:
> 
> If you maintain twisted.names to the point where it can serve all of
> twistedmatrix.com's needs (BIND zone transfers and all), you get
> yourname.twistedmatrix.com for life.  Until that point, you can get
> yourname.twistedmatrix.com by writing 20 tests in one month, with the
> same 10-test-a-month upkeep as sikrit.info.

I've wanted this for a long time. Sign me up for the tests. Got a list
of tests yet? =)
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From coop at coopweb.org  Sun Apr 28 15:29:09 2002
From: coop at coopweb.org (Gavin Cooper)
Date: Sun, 28 Apr 2002 16:29:09 -0500
Subject: [Twisted-Python] get email plus subdomain at fakeroot.org (#@%^@
Message-ID: <20020428212909.GB11246@europa.tranquility.net>

Imagine, you at fakeroot.org! i.never.fakeroot.org! Yes, ~!@ Vanity @!~ 
email addresses and 31337 subdomains can be yours. How is such an 
outragiously great offer possible? Shouldn't an opprotunity like this 
be illegal?

You too are eligable for a vanity subdomain by simple working on 
twisted.names and twisted.mail until their functionality is complete 
and reliable.

What are you waiting for? Start coding for your own subdomain now!

*cough* moshez *cough* squish.fakeroot.org *cough*

Gavin Cooper / skreech



From twisted at itamarst.org  Mon Apr 29 05:00:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Apr 2002 14:00:25 +0300
Subject: [Twisted-Python] Tests we need - a very partial list
Message-ID: <3CCD27C9.1040505@itamarst.org>

1. twisted.protocols.socks

2. twisted.protocols.telnet

3. twisted.protocols.ftp

4. TOC and OSCAR real server testing - make fake accounts on AIM and ICQ 
servers and then test all functionality - sending messages. logon messages, 
etc..

5. twisted.protocols.oscar

6. Make sure transports close connection after loseConnection:
    - immediately if no data is in buffer
    - after they send all buffered data if there is some
    - after producer finishes if a producer is registered

7. Test producers with transports.

8. More tests for everything else (e.g. NNTP and news)

9. Automated CGI and distrib tests for twisted.web - moving tests from 
acceptests into twisted.tests.

10. There are probably lots of other untested things in twisted.web - test them.

11. Tests for all methods of twisted.protocols.http.Request.




From chase at iac.net  Mon Apr 29 14:16:30 2002
From: chase at iac.net (Tim Chase)
Date: Mon, 29 Apr 2002 20:16:30 +0000
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
Message-ID: <20020429201630.C768B6D9C7@fastmail.fm>

Twisted folks,

I experimented briefly with twisted several months ago. After banging
my head against the Zope wall for a while, I am back to twisted. One
ray of hope in the Zope confusion was Zope Page Templates (ZPT).
According to http://www.zopelabs.com/cookbook/998065931, ZPT can be
used outside of Zope. I can kind of envision this, but I am not yet
twisted enough. Is anyone already working on using Page Templates
within a twisted web?

I also saw some mention of using WebWare as a presentation layer. Are
there any examples of using WebWare with twisted web.

Thanks,

Tim Chase
chase at iac.net



From glyph at twistedmatrix.com  Mon Apr 29 15:14:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 29 Apr 2002 16:14:17 -0500
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
In-Reply-To: <20020429201630.C768B6D9C7@fastmail.fm>
References: <20020429201630.C768B6D9C7@fastmail.fm>
Message-ID: <1020114857.714.47.camel@janus>

On Mon, 2002-04-29 at 15:16, Tim Chase wrote:
> Twisted folks,

Hi, Tim! [An eerie chorous of the Twisted minions' voices chants a beat
later: "Hi, Tim!"]

> I experimented briefly with twisted several months ago. After banging
> my head against the Zope wall for a while, I am back to twisted. One
> ray of hope in the Zope confusion was Zope Page Templates (ZPT).
> According to http://www.zopelabs.com/cookbook/998065931, ZPT can be
> used outside of Zope. I can kind of envision this, but I am not yet
> twisted enough. Is anyone already working on using Page Templates
> within a twisted web?

That was originally the plan.  However (*nudge to dp here...*) none of
us have had a good experience with ZPT yet, and very few of us have had
experience with ZPT at all.  If I had any major web projects coming up
in the future, I'd probably implement it myself just to give it a try,
but my work seems to be taking me down a decidedly non-web path for the
time being.  (And those web things I do wouldn't be sufficiently aided
by ZPT to justify the effort.)

> I also saw some mention of using WebWare as a presentation layer. Are
> there any examples of using WebWare with twisted web.

No.  I've mostly decided against webware, since it has a rather naive
worldview and I've been unimpressed with the software technically.  My
impression of the webware _project_ is that it's very well run; their
documentation and support by *far* put Twisted to shame.   However, that
project is producing an application server I'm not too interested in.

Donovan Preston has recently become the de-facto web guru for Twisted,
and his work so far (twisted.web.domtemplate) I find fascinating; it
seems to have most of the advantages of ZPT, but it is a lot simpler.  I
have even somehow managed to coerce him into writing a little bit of
documentation, currently in CVS...

Check that out and let me know if it solves your templating issues.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020429/06ed0e5e/attachment.sig>

From twisted at itamarst.org  Tue Apr 30 04:08:47 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Apr 2002 12:08:47 +0200
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
References: <20020429201630.C768B6D9C7@fastmail.fm>
Message-ID: <3CCE6D2F.7080001@itamarst.org>

Tim Chase wrote:

 > I experimented briefly with twisted several months ago. After
 > banging my head against the Zope wall for a while, I am back to
 > twisted. One ray of hope in the Zope confusion was Zope Page
 > Templates (ZPT). According to
 > http://www.zopelabs.com/cookbook/998065931, ZPT can be used outside
 > of Zope. I can kind of envision this, but I am not yet twisted
 > enough. Is anyone already working on using Page Templates within a
 > twisted web?

At some point I might try to do it. The main issue is how to deal with
expressions that returns Deferreds. The options are:

1. Render page templates in threads
2. Use stackless
3. Hack the rendering loop so that it can deal with Deferreds correctly.

(2) is coolest, but problematic due to stackless' cross-platform issues. 
(1) is probably slowest option, (3) may be difficult to do, depending on 
how the code is structured.





From twisted at itamarst.org  Tue Apr 30 03:47:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Apr 2002 12:47:18 +0300
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
References: <20020429201630.C768B6D9C7@fastmail.fm> <3CCE6D2F.7080001@itamarst.org>
Message-ID: <3CCE6826.10704@itamarst.org>

Itamar Shtull-Trauring wrote:

> At some point I might try to do it. The main issue is how to deal with
> expressions that returns Deferreds. The options are:

And BTW, domtemplate's lack of Deferred support is also problematic. The Web 
As We Know It is a big database front end, mostly. And database calls block.

I'm thinking we should have a threaded web server for cases where the 
backend is ZODB or RDBMS only, and just access the database directly, 
without using twisted.enterprises.





From acapnotic at twistedmatrix.com  Tue Apr 30 11:05:33 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Apr 2002 10:05:33 -0700
Subject: [Twisted-Python] Intra-process callRemote
Message-ID: <1020186333.6382.22.camel@troglodyte.funhouse>

I've got an arrangement where the obvious way to do things is with a
Viewable...

class StorageThing(pb.Viewable):
    def view_setMessage(self, who, what):
        self._store[who.identityName] = what

class Who(pb.Perspective):
    def setMyMessage(self, what):
        self.storageView.callRemote("setMessage", what)

only, it turns out that some of the "who"s don't really need to be in a
seperate process from the Viewable; storageView is actually a reference
to a ViewPoint instead of a *remote* reference to a ViewPoint, and
ViewPoints don't have callRemote (because, well, they're not remote).

I don't know, maybe PB just isn't quite as transparent as I desire it to
be.  I did so much like the idea of writing this code to communicate
locally now, and just being able to drop in remote objects instead
later.

I could of course do

    def setMyMessage(self, what):
        self.storageView.view_setMessage(self, what)

but that doesn't look nearly as elegant, and I'll have to make duplicate
code with a callRemote if storageView ever becomes remote.

"Still-trying-to-get-this-distributed-object-thing"-ly,

 - Kevin

-- 
The moon is waning gibbous, 86.0% illuminated, 18.4 days old.



From glyph at twistedmatrix.com  Tue Apr 30 12:17:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Apr 2002 13:17:21 -0500
Subject: [Twisted-Python] Page Templates (Zope) with twisted.web
In-Reply-To: <3CCE6826.10704@itamarst.org>
References: <20020429201630.C768B6D9C7@fastmail.fm>
	<3CCE6D2F.7080001@itamarst.org>  <3CCE6826.10704@itamarst.org>
Message-ID: <1020190641.330.16.camel@janus>

On Tue, 2002-04-30 at 04:47, Itamar Shtull-Trauring wrote:
> Itamar Shtull-Trauring wrote:
> 
> > At some point I might try to do it. The main issue is how to deal with
> > expressions that returns Deferreds. The options are:
> 
> And BTW, domtemplate's lack of Deferred support is also problematic. The Web 
> As We Know It is a big database front end, mostly. And database calls block.
> 
> I'm thinking we should have a threaded web server for cases where the 
> backend is ZODB or RDBMS only, and just access the database directly, 
> without using twisted.enterprises.

Certainly.  At this point it's still in development, but I think that
DOMtemplate could be modified to support Deferreds pretty easily (after
all, it's almost like WebWidgets, except instead of returning lists of
Deferreds and strings, it returns lists of Deferreds and Nodes).

I may even get around to doing this :-).

As far as threading goes -- we need a threadsafe version of web.Request,
and a way to dispatch requests in an MT way, yes, I agree.  The fact
that this is inefficient should be offset by the fact that every other
web-app framework in the world is at least 3x less efficient than _that_
:)


-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020430/eca9e01c/attachment.sig>

From glyph at twistedmatrix.com  Tue Apr 30 12:33:54 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Apr 2002 13:33:54 -0500
Subject: [Twisted-Python] Intra-process callRemote
In-Reply-To: <1020186333.6382.22.camel@troglodyte.funhouse>
References: <1020186333.6382.22.camel@troglodyte.funhouse>
Message-ID: <1020191634.330.39.camel@janus>

On Tue, 2002-04-30 at 12:05, Kevin Turner wrote:
> I've got an arrangement where the obvious way to do things is with a
> Viewable...

> only, it turns out that some of the "who"s don't really need to be in a
> seperate process from the Viewable; storageView is actually a reference
> to a ViewPoint instead of a *remote* reference to a ViewPoint, and
> ViewPoints don't have callRemote (because, well, they're not remote).

The reason that this isn't automatic is because PB has the option to
*do* stuff when you send state to other people (such as tracking the
fact that they have said state).  In most simple cases, such as yours,
it's not necessary to completely replicate PB's object-copying
semantics; however, this sort of short-cut for simplicity's sake is not
something the framework can make a decision about for you; trying to run
certain kinds of remote code locally would break it.  (Think about P2P
applications that try to connect to each other by determining the other
end of the connection's IP)

The reason I introduced callRemote was to facilitate this sort of
thing.  Since the only message you expect your object to respond to is
"callRemote", simply implement "callRemote" on a pseudo-ViewPoint,
(similarly to twisted.spread.util.LocalAsRemote -- maybe
LocalAsViewPoint?)
 
> I don't know, maybe PB just isn't quite as transparent as I desire it to
> be.  I did so much like the idea of writing this code to communicate
> locally now, and just being able to drop in remote objects instead
> later.

PB isn't supposed to be transparent.  I think I've made my argument
against transparency before, but it boils down to what I said above;
sometimes, transparency is wrong.  In the cases where it's not, it's
easy to fake using Twisted.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020430/113b77b5/attachment.sig>

From acapnotic at twistedmatrix.com  Fri Apr 26 17:01:56 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 26 Apr 2002 16:01:56 -0700
Subject: [Twisted-Python] Re: processes leaking CPU -- maybe memory?
In-Reply-To: <1019858689.412.4.camel@janus>
References: <20020426172824.GA6909@twistedmatrix.com> 
	<1019857092.18395.36.camel@nero>  <1019858689.412.4.camel@janus>
Message-ID: <1019862116.31991.24.camel@troglodyte.funhouse>

On Fri, 2002-04-26 at 15:04, Glyph Lefkowitz wrote:
> If I'm reading this right, the main server has used 1 minute of CPU
> time; yours has used 5.  The CPU leak in Twisted has been resolved as
> far as I know... does yours have something to do with fresher? 
> (Itamar's server, by contrast, has used 3 CPU seconds and radix's has
> used 0)

Yeah, I guess the leak in Twisted has been resolved, or the other
processes would be racking up more time too.  I don't know, maybe I have
a timeout mis-specified somewhere?

http://twistedmatrix.com/users/acapnotic/mycvs/cvstoys/fresher.py

-- 
The moon is full, 99.7% illuminated, 14.2 days old.



