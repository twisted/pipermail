From einar.twisted at norsk-esport.no  Wed Sep  1 01:16:04 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Wed, 1 Sep 2010 07:16:04 +0200
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
Message-ID: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>

Well, at least I've found that the interest in SOAP in the Twisted
community is not very great ;) And understandably so. Unfortunately,
however, sometimes Twisted apps do need to talk to alternative
protocols, so it is a pity there's no recommended way of doing this.

For future reference: I ended up using suds with the following wrapper
provided to this list in April by Landreville. It seems to be working
great, so thanks Landreville :)

""" Wrapper for suds to create deferred instances. """
from suds.client import Client as SudsClient
from twisted.internet.threads import deferToThread

class Client(SudsClient):

   # method for returning a deferred for the RPC
   def callRemote(self, method, *args, **kwargs):
       def call(m, *a, **kw):
           result = self.service.__getattr__(m)(*a, **kw)
           return result
       d = deferToThread(call, method, *args, **kwargs)
       return d

Cheers,
Einar

On Thu, Aug 26, 2010 at 12:15 PM, Einar S. Ids?
<einar.twisted at norsk-esport.no> wrote:
> Hi,
>
> What is currently the recommended option for letting Twisted
> applications communicate with SOAP services?
>
> Cheers,
> Einar
>


From anton at iki.fi  Wed Sep  1 06:13:33 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 13:13:33 +0300
Subject: [Twisted-Python] Ldaptor status and updates
Message-ID: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>

I want to use the Ldaptor LDAP client for a project. Does anybody know
whether and how Ldaptor is currently maintained and what the best
upstream source is? I need to make some changes and wonder what to
base the work on and where to discuss and publish changes.

Is it OK to discuss Ldaptor on this list and to send patches here?

The first google hit for ldaptor is
http://webmail.inoi.fi/open/trac/ldaptor but the SVN repo on that site
has last commit Sun May 7 2006. I found a git repo with newer commits
at http://eagain.net/gitweb/?p=ldaptor.git, last commit Sat Aug 23
2008.

I published some work-in-progress changes based on the git repo above at
http://github.com/antong/ldaptor

Best regards
Anton


From jandd at debian.org  Wed Sep  1 06:44:08 2010
From: jandd at debian.org (Jan Dittberner)
Date: Wed, 1 Sep 2010 12:44:08 +0200
Subject: [Twisted-Python] Ldaptor status and updates
In-Reply-To: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
References: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
Message-ID: <20100901104408.GA4144@pneumantius.dittberner.home>

On Wed, Sep 01, 2010 at 01:13:33PM +0300, Anton Gyllenberg wrote:
> I want to use the Ldaptor LDAP client for a project. Does anybody know
> whether and how Ldaptor is currently maintained and what the best
> upstream source is? I need to make some changes and wonder what to
> base the work on and where to discuss and publish changes.

Hello,

I do the primary work on the ldaptor Debian package these days. Tommy did not
release a new version for years but has the mentioned git repository. The
Debian svn repository at
svn://svn.debian.org/python-modules/packages/ldaptor/trunk/ contains a series
of patches in the debian/patches directory to fix some minor issues with
ldaptor.

> Is it OK to discuss Ldaptor on this list and to send patches here?

I can not speak for the list but I'd like to get patches to incorporate them in
the Debian package.

> The first google hit for ldaptor is
> http://webmail.inoi.fi/open/trac/ldaptor but the SVN repo on that site
> has last commit Sun May 7 2006. I found a git repo with newer commits
> at http://eagain.net/gitweb/?p=ldaptor.git, last commit Sat Aug 23
> 2008.
> 
> I published some work-in-progress changes based on the git repo above at
> http://github.com/antong/ldaptor

I'll have a look at your changes later this week.

@Tommy: are you still interested to be the primary upstream for ldaptor or
would you like Anton or me to provide a new upstream project? What do you think
of the idea to merge fixes from github into your git repository and creating
future releases?


Regards
Jan

-- 
Jan Dittberner - Debian Developer
GPG-key: 4096R/558FB8DD 2009-05-10
         B2FF 1D95 CE8F 7A22 DF4C  F09B A73E 0055 558F B8DD
http://www.dittberner.info/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 836 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20100901/6e25d837/attachment-0001.pgp 

From anton at iki.fi  Wed Sep  1 07:52:06 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 14:52:06 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
	returned by search()
Message-ID: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>

The LDAPEntryWithClient.search() method used to send the LDAP request with
a call like
	self.client.send_multiResponse(... )
send_multiResponse() returns a deferred that was just discarded. If the
operation causes an error then the errback fired on the discarded deferred
will remain unhandled. The deferred returned by search() will then not
have any errback fired and the caller of search() will be waiting forever.

This change adds an errback to the deferred returned by send_multiResponse()
and has the error rerouted to the errback chain of the deferred returned by
search().
---

Discussion: This hits right into the internals of Ldaptor and I am not
sure I understand this well enough to make an accurate fix. The
problem I encountered is real and can be reproduced, and this change
does seem to work around it.

Any comments and suggestions welcome!


 ldaptor/protocols/ldap/ldapsyntax.py |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/ldaptor/protocols/ldap/ldapsyntax.py
b/ldaptor/protocols/ldap/ldapsyntax.py
index f54d2f8..471ffa6 100644
--- a/ldaptor/protocols/ldap/ldapsyntax.py
+++ b/ldaptor/protocols/ldap/ldapsyntax.py
@@ -683,7 +683,7 @@ class LDAPEntryWithClient(entry.EditableLDAPEntry):
                 typesOnly=typesOnly,
                 filter=filterObject,
                 attributes=attributes)
-            self.client.send_multiResponse(
+            dsend = self.client.send_multiResponse(
                 op, self._cbSearchMsg,
                 d, cb, complete=not attributes,
                 sizeLimitIsNonFatal=sizeLimitIsNonFatal)
@@ -692,6 +692,11 @@ class LDAPEntryWithClient(entry.EditableLDAPEntry):
         else:
             if callback is None:
                 d.addCallback(lambda dummy: results)
+            def rerouteerr(e):
+                d.errback(e)
+                # returning None will stop the error
+                # from being propagated and logged.
+            dsend.addErrback(rerouteerr)
         return d

     def lookup(self, dn):
-- 
1.7.1.5.g49342


From anton at iki.fi  Wed Sep  1 08:40:03 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 15:40:03 +0300
Subject: [Twisted-Python] Ldaptor status and updates
In-Reply-To: <20100901104408.GA4144@pneumantius.dittberner.home>
References: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
	<20100901104408.GA4144@pneumantius.dittberner.home>
Message-ID: <AANLkTinwjSq5NT8r-1=yRy3DWd9vm8URo3HgyyhtBRXV@mail.gmail.com>

> I do the primary work on the ldaptor Debian package these days. Tommy did not
> release a new version for years but has the mentioned git repository. The
> Debian svn repository at
> svn://svn.debian.org/python-modules/packages/ldaptor/trunk/ contains a series
> of patches in the debian/patches directory to fix some minor issues with
> ldaptor.
>
>> Is it OK to discuss Ldaptor on this list and to send patches here?
>
> I can not speak for the list but I'd like to get patches to incorporate them in
> the Debian package.

Thanks! I took a quick look at the patches and it looks like some of
these patches are already incorporated in the git repository. Perhaps
we could incorporate the rest and upgrade the debian package to a
newer version based on the git repo to reduce patches? In
debian/changelog in the git repo there is a version 0.0.44 and there
are changes also after that.

> I'll have a look at your changes later this week.

Thanks. Note that there is a 'master' branch with a couple of fairly
trivial changes and then a 'pu' (proposed updates) branch with an
additional change I'm not sure about and that I just posted to this
list.

I'm mostly interested in the Twisted library part of Ldaptor and less
in the web UI and command line tools.

Best regards
Anton


From itamar at itamarst.org  Wed Sep  1 09:15:17 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:15:17 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
Message-ID: <1283346917.1650.2.camel@blake>

On Tue, 2010-08-31 at 20:54 -0600, Jason J. W. Williams wrote:
> That's one way of handling it. Another way is to wrap the library so
> it does the splitting automatically. The advantage to the latter is
> not making mistakes where you accidentally use the READ connection for
> a write.

That sounds like a bad idea. You want to send reads to the write server
if you're doing so as part of a transaction that does writes, otherwise
in some cases you'll end up with wrong results.

For example, consider a transaction that inserts a row into a table, and
then does a select to count the number of rows in that table. If you
send the latter to a replicated read-only server, the result will be
incorrect, since it will not include the insert (which hasn't been
committed yet).

So, to repeat: you should only use the read server for operations that
are read-only. Which means some reads will go to the write server.



From itamar at itamarst.org  Wed Sep  1 09:16:39 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:16:39 -0400
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <1283346999.1650.4.camel@blake>

On Wed, 2010-09-01 at 07:16 +0200, Einar S. Ids? wrote:
> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.

Well, there's twisted.web.soap, which probably isn't very good, but
should provide an example of how to implement it given a SOAP
encoding/decoding library.




From itamar at itamarst.org  Wed Sep  1 09:17:37 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:17:37 -0400
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
Message-ID: <1283347057.1650.5.camel@blake>

On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:

> Any comments and suggestions welcome!

Unit tests are always a good idea :)



From anton at iki.fi  Wed Sep  1 10:05:15 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 17:05:15 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <1283347057.1650.5.camel@blake>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
	<1283347057.1650.5.camel@blake>
Message-ID: <AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>

On Wed, Sep 1, 2010 at 4:17 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:
>
>> Any comments and suggestions welcome!
>
> Unit tests are always a good idea :)

That is so true. And if not writing new ones, then at least running
existing ones. That I hadn't done and it seems I actually broke
something.

Any ideas or directions on how to fix the issue with search not
handling errors in send_multiResponse().

Thanks!
Anton


From anton at iki.fi  Wed Sep  1 10:45:39 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 17:45:39 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
	<1283347057.1650.5.camel@blake>
	<AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>
Message-ID: <AANLkTi=YqGPK53UKxCvbtFgiobOhTp7ZQXDfV8mSXvFc@mail.gmail.com>

On Wed, Sep 1, 2010 at 5:05 PM, Anton Gyllenberg <anton at iki.fi> wrote:
> On Wed, Sep 1, 2010 at 4:17 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:
>>
>>> Any comments and suggestions welcome!
>>
>> Unit tests are always a good idea :)
>
> That is so true. And if not writing new ones, then at least running
> existing ones. That I hadn't done and it seems I actually broke
> something.

The send_multiResponse() method within the test framework worked
differently and returned None instead of a deferred like the real
version. Making it return defer.Deferred() instead made the tests
pass. I'm new to this trial stuff so need to do some reading before I
dare make test cases for new code.

Thanks!
Anton


From jasonjwwilliams at gmail.com  Wed Sep  1 11:30:28 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 1 Sep 2010 09:30:28 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283346917.1650.2.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
	<1283346917.1650.2.camel@blake>
Message-ID: <B00921AA-E333-4453-8EA7-22CCCD16B5C5@gmail.com>

That is correct. In our case we've audited our code for transactions and all of ours are single statement trans. 

It's pretty typical for read/write splitting to forbid multiple-statement  transactions as a cost of doing it. 

-J

Sent via iPhone

Is your e-mail Premiere?

On Sep 1, 2010, at 7:15, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> On Tue, 2010-08-31 at 20:54 -0600, Jason J. W. Williams wrote:
>> That's one way of handling it. Another way is to wrap the library so
>> it does the splitting automatically. The advantage to the latter is
>> not making mistakes where you accidentally use the READ connection for
>> a write.
> 
> That sounds like a bad idea. You want to send reads to the write server
> if you're doing so as part of a transaction that does writes, otherwise
> in some cases you'll end up with wrong results.
> 
> For example, consider a transaction that inserts a row into a table, and
> then does a select to count the number of rows in that table. If you
> send the latter to a replicated read-only server, the result will be
> incorrect, since it will not include the insert (which hasn't been
> committed yet).
> 
> So, to repeat: you should only use the read server for operations that
> are read-only. Which means some reads will go to the write server.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From landreville at deadtreepages.com  Wed Sep  1 11:58:01 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 1 Sep 2010 11:58:01 -0400
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <AANLkTikh9uoZpw-_D0wTb5f_dCvq93s6_PS9qvdpt7od@mail.gmail.com>

On Wed, Sep 1, 2010 at 1:16 AM, Einar S. Ids?
<einar.twisted at norsk-esport.no> wrote:
> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.
>
> For future reference: I ended up using suds with the following wrapper
> provided to this list in April by Landreville. It seems to be working
> great, so thanks Landreville :)
>
> """ Wrapper for suds to create deferred instances. """
> from suds.client import Client as SudsClient
> from twisted.internet.threads import deferToThread
>
> class Client(SudsClient):
>
> ? # method for returning a deferred for the RPC
> ? def callRemote(self, method, *args, **kwargs):
> ? ? ? def call(m, *a, **kw):
> ? ? ? ? ? result = self.service.__getattr__(m)(*a, **kw)
> ? ? ? ? ? return result
> ? ? ? d = deferToThread(call, method, *args, **kwargs)
> ? ? ? return d
>
> Cheers,
> Einar
>

That's pretty much what I did as well. There is twisted.web.soap, but
it uses SOAPpy which is awful -- Suds is much better. If you take a
look at its insides though you can see how they are turning it into a
deferred in a better way than just deferToThread.


From glyph at twistedmatrix.com  Wed Sep  1 17:47:08 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Sep 2010 14:47:08 -0700
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>


On Sep 1, 2010, at 1:16 AM, Einar S. Ids? wrote:

> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.

If you want there to be a "recommended way", you can be the one to make the recommendation.  The lack of interest in SOAP in the Twisted community is a self-fulfilling prophecy: since there isn't much SOAP support, we don't have a lot of SOAP people come around, and since we don't have very many SOAP people, we don't have much in the way of SOAP support.

If you would like to change this, please feel free to either contribute patches to Twisted web's SOAP support, or to start a txsoap (or txwsstar, or whatever makes sense in your context).  We'd love to have someone active in maintaining these sorts of protocols, since Twisted is really only as good as the protocol implementations that you need it to talk to.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100901/08b7052d/attachment.htm 

From ruslan.usifov at gmail.com  Wed Sep  1 18:53:50 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 02:53:50 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>

Hello

I try to write twisted based daemon that work in multiple workers, like
this:

from twisted.internet import reactor;
from proxy import FASTCGIServerProxyFactory;
import os;

reactor.listenUNIX("/tmp/twisted-fcgi.sock", FASTCGIServerProxyFactory());

for i in xrange(3):
  l_pid = os.fork();

  if(l_pid == 0):
    break;

reactor.run()

I creatae 4 wokers(by num of CPU cores). Im my test all ok, but when i
shutdown daemon i got follow error 3 times (because every worker try to
unlink sock file: /tmp/twisted-fcgi.sock):

Traceback (most recent call last):
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 249, in addCallbacks
    self._runCallbacks()
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 441, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 426, in _continueFiring
    callable(*args, **kwargs)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 613, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", line
84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", line
69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/unix.py",
line 134, in connectionLost
    os.unlink(self.port)
exceptions.OSError: [Errno 2] No such file or directory:
'/tmp/twisted-fcgi.sock'

So my questions is How can i suppress this behaviour, so shutdown code
executes only once in main process?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100902/c70a3642/attachment.htm 

From einar.twisted at norsk-esport.no  Thu Sep  2 02:54:49 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 2 Sep 2010 08:54:49 +0200
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
	<2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>
Message-ID: <AANLkTimez9kp-VF_t-bNfbkRrZmE0fjuzevY0Zyvih8X@mail.gmail.com>

On Wed, Sep 1, 2010 at 5:58 PM, Landreville
<landreville at deadtreepages.com> wrote:
> That's pretty much what I did as well.
Actually, it's *exactly* what you did. As mentioned, I posted your
solution from April :)

On Wed, Sep 1, 2010 at 11:47 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> If you want there to be a "recommended way", you can be the one to make the
> recommendation. ?The lack of interest in SOAP in the Twisted community is a
> self-fulfilling prophecy: since there isn't much SOAP support, we don't have
> a lot of SOAP people come around, and since we don't have very many SOAP
> people, we don't have much in the way of SOAP support.
> If you would like to change this, please feel free to either contribute
> patches to Twisted web's SOAP support, or to start a txsoap (or txwsstar, or
> whatever makes sense in your context). ?We'd love to have someone active in
> maintaining these sorts of protocols, since Twisted is really only as good
> as the protocol implementations that you need it to talk to.

I suppose you can call my reiteration of Landreville's solution my
recommendation. If not based on any extensive experience with Twisted
in any way, then at least based on me finding a solution that works
for me :) Unfortunately, the level of Twisted sophistication I'm
currently at, and also my current requirements for my application,
which only needs to do a couple of SOAP-calls because of one of the
services it interfaces to, leads me to simply having to find a
solution that "just works" rather than develop a better one than what
can be currently done with solutions such as the one mentioned.

Anyways: My application performs the SOAP calls nicely now, and I have
moved on to other issues. Such as the persistent obscurity of
inheritance versus interfaces and adapters. For a guy that has no
experience in object-oriented programming, Twisted has a rather steep
learning-curve. But I'm getting there, thanks to both this list and
the community at large.

Cheers,
Einar


From anton at iki.fi  Thu Sep  2 05:28:56 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Thu, 2 Sep 2010 12:28:56 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Extend test driver
 send_multiResponse() to return deferred and throw errors
Message-ID: <AANLkTinv5qfzhwW8jUmrA8dqRPy4rhTLHAQZ18xdmZ0_@mail.gmail.com>

The deferred returned by the LDAP client send_multiResponse() method was
previously unused in all code covered by tests, and so the replacement
method in the test driver just returned None. The deferred is now used
in search() and this change makes the test driver also return a deferred
instead of None in order to make things work when run within the test
framework.

To make it possible to test failures in the client send() and
send_multiResponse() methods, the test driver is changed to accept Failure
instances in place of lists of LDAPProtocolResponses.  Doing this causes
the errback on the deferred to be called with this failure.

The LDAPSyntaxSearch and Bind test cases are augmented with one test each
to use the new failure functionality in the client test driver. As the
search() code a while back did not handle errors in the send_multiResponse()
deferred chain the test case would time out if run against older code.
Therefore a smaller timeout of 3 seconds is set for the LDAPSyntaxSearch test
case.
---

Discussion: With this change the old test cases pass and the code path
introduced by my modifications to send_multiResponse() is tested by a
new test case. I am still a bit unsure if I am testing the right thing
and if the original fix is the right thing to do. Any comments
welcome!

Code published on http://github.com/antong/ldaptor/tree/pu


 ldaptor/test/test_ldapsyntax.py |   25 +++++++++++++++++++++++++
 ldaptor/testutil.py             |   18 +++++++++++++++++-
 2 files changed, 42 insertions(+), 1 deletions(-)

diff --git a/ldaptor/test/test_ldapsyntax.py b/ldaptor/test/test_ldapsyntax.py
index b8bcf53..46be06c 100755
--- a/ldaptor/test/test_ldapsyntax.py
+++ b/ldaptor/test/test_ldapsyntax.py
@@ -7,6 +7,7 @@ from ldaptor import config, testutil, delta
 from ldaptor.protocols.ldap import ldapsyntax, ldaperrors
 from ldaptor.protocols import pureldap, pureber
 from twisted.internet import defer
+from twisted.internet import error
 from twisted.python import failure
 from ldaptor.testutil import LDAPClientTestDriver

@@ -366,6 +367,7 @@ class
LDAPSyntaxAttributesModificationOnWire(unittest.TestCase):


 class LDAPSyntaxSearch(unittest.TestCase):
+    timeout = 3
     def testSearch(self):
         """Test searches."""

@@ -641,6 +643,17 @@ class LDAPSyntaxSearch(unittest.TestCase):
         d.addCallbacks(testutil.mustRaise, eb)
         return d

+    def testSearch_err(self):
+        client=LDAPClientTestDriver([
+                failure.Failure(error.ConnectionLost())
+                ])
+        o = ldapsyntax.LDAPEntry(client=client, dn='dc=example,dc=com')
+        d = o.search(filterText='(foo=a)')
+        def eb(fail):
+            fail.trap(error.ConnectionLost)
+        d.addCallbacks(testutil.mustRaise, eb)
+        return d
+
 class LDAPSyntaxDNs(unittest.TestCase):
     def testDNKeyExistenceSuccess(self):
         client = LDAPClientTestDriver()
@@ -1516,3 +1529,15 @@ class Bind(unittest.TestCase):
             fail.trap(ldaperrors.LDAPInvalidCredentials)
         d.addCallbacks(testutil.mustRaise, eb)
         return d
+
+    def test_err(self):
+        client = LDAPClientTestDriver([
+                failure.Failure(error.ConnectionLost())])
+
+        o=ldapsyntax.LDAPEntry(client=client,
+                               dn='cn=foo,dc=example,dc=com')
+        d = defer.maybeDeferred(o.bind, 'whatever')
+        def eb(fail):
+            fail.trap(error.ConnectionLost)
+        d.addCallbacks(testutil.mustRaise, eb)
+        return d
diff --git a/ldaptor/testutil.py b/ldaptor/testutil.py
index 8307cb9..cb25aa3 100644
--- a/ldaptor/testutil.py
+++ b/ldaptor/testutil.py
@@ -1,6 +1,7 @@
 """Utilities for writing Twistedy unit tests and debugging."""

 from twisted.internet import defer
+from twisted.python import failure
 from twisted.trial import unittest
 from twisted.test import proto_helpers
 from ldaptor import config
@@ -36,23 +37,37 @@ class LDAPClientTestDriver:
     messages are stored in self.sent, so you can assert that the sent
     messages are what they are supposed to be.

+    It is also possible to include a Failure instance instead of a list
+    of LDAPProtocolResponses to cause which will cause the errback
+    to be called with the failure.
+
     """
     def __init__(self, *responses):
         self.sent=[]
         self.responses=list(responses)
         self.connected = None
         self.transport = FakeTransport(self)
+
     def send(self, op):
         self.sent.append(op)
         l = self._response()
         assert len(l) == 1, \
                "got %d responses for a .send()" % len(l)
-        return defer.succeed(l[0])
+        r = l[0]
+        if isinstance(r, failure.Failure):
+            return defer.fail(r)
+        else:
+            return defer.succeed(r)
+
     def send_multiResponse(self, op, handler, *args, **kwargs):
+        d = defer.Deferred()
         self.sent.append(op)
         responses = self._response()
         while responses:
             r = responses.pop(0)
+            if isinstance(r, failure.Failure):
+                d.errback(r)
+                break
             ret = handler(r, *args, **kwargs)
             if responses:
                 assert not ret, \
@@ -60,6 +75,7 @@ class LDAPClientTestDriver:
             else:
                 assert ret, \
                        "no more responses to give, but handler still
wants more (got %r)." % ret
+        return d

     def send_noResponse(self, op):
         responses = self.responses.pop(0)
-- 
1.7.1.5.g49342


From exarkun at twistedmatrix.com  Thu Sep  2 08:01:41 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Sep 2010 12:01:41 -0000
Subject: [Twisted-Python] multiple workers
In-Reply-To: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>
References: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>
Message-ID: <20100902120141.2058.263116298.divmod.xquotient.376@localhost.localdomain>

On 1 Sep, 10:53 pm, ruslan.usifov at gmail.com wrote:
>Hello
>
>I try to write twisted based daemon that work in multiple workers, like
>this:
>
>from twisted.internet import reactor;
>from proxy import FASTCGIServerProxyFactory;
>import os;
>
>reactor.listenUNIX("/tmp/twisted-fcgi.sock", 
>FASTCGIServerProxyFactory());
>
>for i in xrange(3):
>  l_pid = os.fork();
>
>  if(l_pid == 0):
>    break;
>
>reactor.run()
>
>I creatae 4 wokers(by num of CPU cores). Im my test all ok, but when i
>shutdown daemon i got follow error 3 times (because every worker try to
>unlink sock file: /tmp/twisted-fcgi.sock):

Using fork this way isn't supported.  Either fork before you import any 
Twisted modules, or use reactor.spawnProcess to create workers instead. 
If you must share a single listening socket amongst all the workers, you 
might be interested in <http://twistedmatrix.com/trac/ticket/4387>.

Jean-Paul


From ruslan.usifov at gmail.com  Thu Sep  2 13:26:35 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 21:26:35 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>

Why it is not supported? I want behaviour like nginx http://nginx.org/, and
misunderstand why i can't implemented it throw twisted. Its' so easy. Every
process have it's own set sockets, and they doesn't share  this sockets
between each other. "OnConnect" event happens only once and which process
handle this event depend on operation system(select epoll, kqueue), in my
case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here is
unsupported behaviour?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100902/33352af5/attachment.htm 

From ruslan.usifov at gmail.com  Thu Sep  2 13:26:35 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 21:26:35 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>

Why it is not supported? I want behaviour like nginx http://nginx.org/, and
misunderstand why i can't implemented it throw twisted. Its' so easy. Every
process have it's own set sockets, and they doesn't share  this sockets
between each other. "OnConnect" event happens only once and which process
handle this event depend on operation system(select epoll, kqueue), in my
case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here is
unsupported behaviour?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100902/33352af5/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Sep  2 16:12:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Sep 2010 20:12:18 -0000
Subject: [Twisted-Python] multiple workers
In-Reply-To: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>
References: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>
Message-ID: <20100902201218.2058.2013892391.divmod.xquotient.404@localhost.localdomain>

On 05:26 pm, ruslan.usifov at gmail.com wrote:
>Why it is not supported?

"Why" it is not supported is that no one has decided to implement and 
support it.  If it's interesting behavior for you, then we would 
completely welcome you implementing it, and we'll even maintain the 
support for it once you've done that. :)

If you were asking about what specific implementation details cause it 
not to work now (more of a "how" question, sort of), then the answer to 
that probably varies from reactor to reactor, but it is all about how 
things end up being shared across the multiple processes created by 
fork.

I want behaviour like nginx http://nginx.org/, and
>misunderstand why i can't implemented it throw twisted. Its' so easy. 
>Every
>process have it's own set sockets, and they doesn't share  this sockets
>between each other. "OnConnect" event happens only once and which 
>process
>handle this event depend on operation system(select epoll, kqueue), in 
>my
>case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here 
>is
>unsupported behaviour?

So, for example, epoll descriptors do survive fork().  However, kqueue 
descriptors don't.  So one necessary change for kqueue reactor to 
support this kind of behavior is to have the reactor somehow re- 
initialize itself after the fork.

Another problem is that certain resources are not simply duplicated by a 
fork().  A specific example is the one you brought up in your earlier 
post.  A unix socket only has one entity corresponding to it in the 
filesystem.  Twisted takes responsibility for cleaning these up, but 
after you fork(), there are two unix sockets and still only one 
filesystem entity.  This confuses one of the processes, since it 
believes it needs to delete the file.  Hardly rocket science to fix, but 
it's a specific case which needs to be handled.

And I'm sure you'll come across quite a few more specific cases which 
need to be handled.  This might get us back to the "why" a little - 
actually ensuring that everything will work properly when arbitrary 
forks are added is a major challenge.  I don't see any way to do it 
comprehensively, really.  That would leave you with a long, long 
adventure of fixing one little issue at a time for months or even years 
to come.  And each problem would only become evident after it bit you 
somehow.

That's probably why we have a ticket for an explicit file descriptor 
passing API, rather than a ticket for supporting arbitrary fork calls. 
The former is easier to test and be confident in than the latter.

Jean-Paul


From simonvermeersch at gmail.com  Sat Sep  4 09:19:47 2010
From: simonvermeersch at gmail.com (Vermeersch Simon)
Date: Sat, 4 Sep 2010 15:19:47 +0200
Subject: [Twisted-Python] Telnet MCCP Transport
Message-ID: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>

Hello everyone,

I couldn't find an implementation of MCCP (Mud Client Compression
Protocol) using Twisted so I made my own, which I'm sharing if anyone
else has a use for it.

You can find a description of MCCP here:
http://www.mudstandards.org/MCCP_Specification

Since I'm fairly new to Twisted I would appreciate any input about how
to improve this if you find a better/cleaner way to do it.

import zlib
from twisted.conch.telnet import TelnetTransport
from twisted.conch.telnet import DO, DONT

COMPRESS2 = chr(86)

class MCCPTelnetTransport(TelnetTransport):
    def connectionMade(self):
        self.zlib = None
        TelnetTransport.connectionMade(self)
        self.will(COMPRESS2)

    def commandReceived(self, command, argument):
        if argument == COMPRESS2:
            if command == DO:
                self.requestNegotiation(COMPRESS2, "")
                self.zlib = zlib.compressobj()
            elif command == DONT:
                pass
        else:
            TelnetTransport.commandReceived(self, command, argument)

    def write(self, data):
        data = data.replace('\n', '\r\n')
        if self.zlib:
            data = self.zlib.compress(data)
            data += self.zlib.flush(zlib.Z_SYNC_FLUSH)
        self.transport.write(data)

-- 
Simon Vermeersch


From exarkun at twistedmatrix.com  Sun Sep  5 00:05:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Sep 2010 04:05:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1283659530.48.414321001@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100905/b1484dbc/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep  5 09:49:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Sep 2010 13:49:08 -0000
Subject: [Twisted-Python] Telnet MCCP Transport
In-Reply-To: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>
References: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>
Message-ID: <20100905134908.2058.913926742.divmod.xquotient.445@localhost.localdomain>

On 4 Sep, 01:19 pm, simonvermeersch at gmail.com wrote:
>Hello everyone,
>
>I couldn't find an implementation of MCCP (Mud Client Compression
>Protocol) using Twisted so I made my own, which I'm sharing if anyone
>else has a use for it.
>
>You can find a description of MCCP here:
>http://www.mudstandards.org/MCCP_Specification
>
>Since I'm fairly new to Twisted I would appreciate any input about how
>to improve this if you find a better/cleaner way to do it.
>
>import zlib
>from twisted.conch.telnet import TelnetTransport
>from twisted.conch.telnet import DO, DONT
>
>COMPRESS2 = chr(86)
>
>class MCCPTelnetTransport(TelnetTransport):
>    def connectionMade(self):
>        self.zlib = None
>        TelnetTransport.connectionMade(self)
>        self.will(COMPRESS2)
>
>    def commandReceived(self, command, argument):
>        if argument == COMPRESS2:
>            if command == DO:
>                self.requestNegotiation(COMPRESS2, "")
>                self.zlib = zlib.compressobj()
>            elif command == DONT:
>                pass
>        else:
>            TelnetTransport.commandReceived(self, command, argument)
>
>    def write(self, data):
>        data = data.replace('\n', '\r\n')
>        if self.zlib:
>            data = self.zlib.compress(data)
>            data += self.zlib.flush(zlib.Z_SYNC_FLUSH)
>        self.transport.write(data)

This approach has some drawbacks:

  * Duplication of the logic in TelnetTransport.write.  In this case, the 
duplication appears to be imprecise: the original escapes IAC as well as 
does newline translation, but your version only does the latter.

  * If there's some other similar option you decide you want to support, 
you'll probably have to implement it by adding the feature directly to 
this class.  Since MCCPTelnetTransport is a TelnetTransport subclass, 
you won't be able to compose it with another similar class in any way 
(either through inheritance or composition).  This has slightly 
unfortunate code re-use consequences.

  * If you ever put a transport.write() call into connectionMade, I think 
the result will be a corrupted transport (if the server supports MCCP). 
This is because the bytes will be sent uncompressed because the server 
will not have yet had a chance to send the DO COMPRESS2 response, so the 
zlib object will not yet exist.

Only one idea really comes to mind for an implementation without (at 
least some of) these drawbacks, and it may not really be worth the 
trouble.  The idea is that you would start off with an extra compression 
protocol in the stack.  It would act as a transport to TelnetTransport 
and as a protocol to whatever lower level transport (eg tcp) you're 
using.  It would have methods for enabling and disabling compression 
which you could call from your option negotiation methods.

  * Since it would have a write method which sometimes compressed bytes 
before passing them on, you wouldn't have to override 
TelnetTransport.write, so you wouldn't have the duplication of code 
there.

  * Since most of the code would be on a separate class, it *might* be 
easier to re-use.  Although since it creates a new interface that your 
TelnetTransport subclass wants to use, this might not be true (you might 
always need to use the two classes together, and they might break if you 
inserted extra classes between them).

  * It could buffer writes while negotiations were pending.  Although you 
could also just implement this yourself on MCCPTelnetTransport.

So, maybe a wash.  It might just be better to fix the problems with your 
current approach and move on.

Jean-Paul


From pekcagliyan at labristeknoloji.com  Mon Sep  6 04:28:51 2010
From: pekcagliyan at labristeknoloji.com (Ozgur Pekcagliyan)
Date: Mon, 6 Sep 2010 08:28:51 +0000 (UTC)
Subject: [Twisted-Python] Memory Usage Problem
Message-ID: <loom.20100906T102808-312@post.gmane.org>

Hi All,

I have a problem which is that memory usage of twisted is increasing but not 
decreasing over time.

After few days, it reaches 520MB. You may find the codes below;
How may I reduce the usage of memory?
Twisted version: 8.2.0
Python version: 2.4.3

[root at labris init.d]# cat /usr/bin/labris-flyng.tac
#!/usr/bin/python

import os

from twisted.application import internet, service
from twisted.internet import reactor
from twisted.enterprise import adbapi
from twisted.plugin import getPlugins
from twisted.python import log

import labris.flyng.iflyng as iflyng
import labris.flyng.config as config
import labris.flyng.plugins as pplugins
import labris.flyng.protocols as flyng_protocols

from labris.flyng.config import flyng_config

# Database type to package dictionary
DB_PACKAGE_DICT = {
    "postgresql" : "psycopg2"
}

def initDatabase(config):
    """
    Create database connection pool
    """

    dbtype = config.getDBType()
    dbpackage = DB_PACKAGE_DICT.get(dbtype, None)

    if not dbpackage:
        print "Database type % is not supported yet!" %(dbtype)
        sys.exit(1)


    if dbtype == "mysql":
        dbpool = adbapi.ConnectionPool(
            dbpackage,
                        config.getDBHost(),
                        config.getDBUser(),
                        config.getDBPassword(),
                        config.getDBName()
                )
    else:
            dbpool = adbapi.ConnectionPool(
            dbpackage,
                    database=config.getDBName(),
                    user=config.getDBUser(),
            password=config.getDBPassword(),
                    host=config.getDBHost()
            )

    dbpool.connect()

    return dbpool


def setupPlugins(config, dbpool):
    """
    Initialize and setup plugins
    """

    for plugin in getPlugins(iflyng.IFlyngPlugin, pplugins):
        print "* Plugin %s" %(plugin.name)
        if not config.isEnabled(plugin.name):
            print "   - Not enabled"
            continue

        plugin.init(config, dbpool)

        for type, port in config.getListeningPorts(plugin.name):
            port = port.replace('"', "")
            if type == "tcp":
                print "   -> TCP port: %s" %(port)
                factory = flyng_protocols.FlyngServerFactory(plugin)
                internet.TCPServer(
                    int(port),
                    factory
                ).setServiceParent(application)

            elif type == "udp":
                print "   -> UDP port: %s" %(port)
                internet.UDPServer(
                    int(port),
                    flyng_protocols.FlyngUDPProtocol(plugin)
                ).setServiceParent(application)

            elif type == "unix":
                print "   -> UNIX stream: %s" %(port)
                if os.path.exists(port):
                    os.unlink(port)
                factory = flyng_protocols.FlyngServerFactory(plugin)
                internet.UNIXServer(
                    port,
                    factory
                ).setServiceParent(application)

            else:
                raise "connection type %s is not supported" %(port)

#log.startLogging(open("/var/log/labris-flyng.log", "a"))

config = config.Configuration()

uid, gid = config.getRunAs()

application = service.Application('labris-flyng', uid, gid)

dbpool = initDatabase(config)

setupPlugins(config, dbpool)


-------------------------------------------------------------------


[root at labris init.d]# cat /usr/bin/labris-pyng.tac
#!/usr/bin/python

"""
    A syslog-ng to database mapping service
"""

import os

from twisted.internet import protocol, reactor, defer
from twisted.application import internet, service
from twisted.python import log

from labris.logutils import factories
from labris.logutils.config import pyng_config

class LogFactory(protocol.ServerFactory):
    pass

class UnixLogFactory(protocol.ServerFactory):
    pass

def openUNIXStreams(configuration, application):
    for logtype, stream in configuration.getUnixStreams():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UNIX stream: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UNIX-Stream(%s)]" %(logtype, stream)

            factory = UnixLogFactory()
            factory.protocol = 
factories.ProtocolFactory.getLogProtocol(logtype.strip(), "stream")

            # delete old stream
            if os.path.exists(stream):
                os.unlink(stream)

            internet.UNIXServer(stream.strip(), 
factory).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()

    for logtype, sock in configuration.getUnixDgrams():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UNIX dgram: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UNIX-Datagram(%s)]" %(logtype, stream)

            protocol = factories.ProtocolFactory.getLogProtocol(logtype.strip(), 
"datagram")

            # delete old stream
            if os.path.exists(sock):
                os.unlink(sock)

            internet.UNIXDatagramServer(sock.strip(), 
protocol()).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()


def openSockets(configuration, application):
    for logtype, hostname, port in configuration.getTCP():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: TCP socket: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [TCP => port:%d]" %(logtype, int(port))

            factory = LogFactory()
            factory.protocol = 
factories.ProtocolFactory.getLogProtocol(logtype.strip(), "stream")

            internet.TCPServer(int(port), factory).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()

    for logtype, hostname, port in configuration.getUDP():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UDP socket: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UDP => port:%d]" %(logtype, int(port))

            protocol = factories.ProtocolFactory.getLogProtocol(logtype.strip(), 
"datagram")

            internet.UDPServer(int(port), 
protocol()).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()


#log.startLogging(open("/var/log/labris-pyng.log", "a"))

from labris.logutils.dao.pyngdb import PyNgDB

PyNgDB.initDatabase(pyng_config.bind())

application = service.Application('labris-pyng', pyng_config.uid(), 
pyng_config.gid())

openUNIXStreams(pyng_config, application)
openSockets(pyng_config, application)




From therve at free.fr  Mon Sep  6 05:48:35 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Mon, 06 Sep 2010 05:48:35 -0400
Subject: [Twisted-Python] Memory Usage Problem
In-Reply-To: <loom.20100906T102808-312@post.gmane.org>
References: <loom.20100906T102808-312@post.gmane.org>
Message-ID: <1283766515.11755.3.camel@localhost>

Le lundi 06 septembre 2010 ? 08:28 +0000, Ozgur Pekcagliyan a ?crit :
> Hi All,
> 
> I have a problem which is that memory usage of twisted is increasing but not 
> decreasing over time.
> 
> After few days, it reaches 520MB. You may find the codes below;
> How may I reduce the usage of memory?
> Twisted version: 8.2.0
> Python version: 2.4.3

[snip]

It's a bit hard to tell, because you're only showing the tac files, and
not the application code, where the memory leak is likely to be.

But:
 * Twisted 8.2 is fairly old, it would worth to try a more recent
version.
 * Python 2.4.3 is very old too, *and* contains a pretty bad bug in the
socket module (unless your platform patched). Note also that only Python
2.5 started releasing memory (IIRC).

-- 
Thomas



From pekcagliyan at labristeknoloji.com  Mon Sep  6 10:31:17 2010
From: pekcagliyan at labristeknoloji.com (Ozgur Pekcagliyan)
Date: Mon, 6 Sep 2010 14:31:17 +0000 (UTC)
Subject: [Twisted-Python] Memory Usage Problem
References: <loom.20100906T102808-312@post.gmane.org>
	<1283766515.11755.3.camel@localhost>
Message-ID: <loom.20100906T162947-600@post.gmane.org>

I've tried to upgrade twisted version 10.1.0. But problem still exists. I will 
try to upgrade python but still I have doubts that will fix my problem. Any Idea?



From glyph at twistedmatrix.com  Mon Sep  6 14:34:26 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Sep 2010 11:34:26 -0700
Subject: [Twisted-Python] Memory Usage Problem
In-Reply-To: <loom.20100906T162947-600@post.gmane.org>
References: <loom.20100906T102808-312@post.gmane.org>
	<1283766515.11755.3.camel@localhost>
	<loom.20100906T162947-600@post.gmane.org>
Message-ID: <39B685C2-E8E3-4307-BF5C-4FB6AB2C41A0@twistedmatrix.com>


On Sep 6, 2010, at 7:31 AM, Ozgur Pekcagliyan wrote:

> I've tried to upgrade twisted version 10.1.0. But problem still exists. I will 
> try to upgrade python but still I have doubts that will fix my problem. Any Idea?

Try debugging with a memory profiling tool like Heapy: <http://guppy-pe.sourceforge.net/#Heapy>.

My first guess is that this is simply a bug in your application, where you're leaking some objects, and may have nothing to do with Twisted at all.

Of course, it could also be a bug in Twisted, but if it is, you'll need to tell us what it is before we can fix it.  Since the first Google hit I get for "labris Python" is your first mailing list post, there's no way to try your code, and even if there were, it looks like a big complex program that I don't understand.  If you can reduce your memory leak to a short, self-contained, correct example, (<http://sscce.org/>) then we might be able to do something about it.

Good luck!



From dbcourriel-4all at yahoo.fr  Tue Sep  7 05:28:00 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 09:28:00 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
Message-ID: <573105.78771.qm@web24408.mail.ird.yahoo.com>

Hi,
?
i need to connect (tcp) to many servers.
so i wrote
?
def connectAll(addresses):
logger.info("connect all")
servers = [svcConnect(address) for address in addresses]

defer.DeferredList(servers, consumeErrors=True).addCallback(handleAllResults, addresses)
reactor.run( )
?


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100907/4b390d81/attachment.htm 

From dbcourriel-4all at yahoo.fr  Tue Sep  7 05:40:07 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 09:40:07 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
Message-ID: <596556.44808.qm@web24407.mail.ird.yahoo.com>


Hi, i need to connect to many servers
so i've found an?example that?shows how to connect to many servers?see the source below.
But i need to get the way to retrieve each server in order to see the satus of the connection, to send to it a message. Is there an connection object with sendData action, getCxStatus for example
?
Thanks
?
?
class ClntProtocol(protocol.Protocol):
????????? def sendData(self, data):
????????????????? if data:
?????????????????????? self.transport.write(data)
???????????????? else:
????????????????????? self.transport.loseConnection()

?
????????? def connectionMade(self, data=''):
???????????????? connectedClientlist.append(self)
?????????????????if data:
??????????????????? self.sendData(data)

?
???????? def dataReceived(self, data):
????????????? if data:
?????????????????? self.sendData(data)

?
???????? def closeConnection(self):
????????????? pass


?
class cxFactory(protocol.ClientFactory):
?????????? protocol = ClntProtocol
????????? def __init__(self):
??????????????????self.deferred = defer.Deferred( )

?
???????? def clientConnectionFailed(self, connector, reason):
??????????????? self.deferred.errback(reason)
?
??????? def svcConnect(address):
??????????????? clntFactory = cxFactory()
??????????????? reactor.connectTCP(address[0], int(address[1]), clntFactory)
return clntFactory.deferred
?
def connectAll(addresses):
???????? logger.info("connect all")
???????? servers = [svcConnect(address) for address in addresses]
???????? defer.DeferredList(servers, consumeErrors=True).addCallback(handleAllResults, addresses)
???????? reactor.run( )
?


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100907/ceb67091/attachment.htm 

From exarkun at twistedmatrix.com  Tue Sep  7 08:52:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 07 Sep 2010 12:52:46 -0000
Subject: [Twisted-Python] connection to many servers
In-Reply-To: <596556.44808.qm@web24407.mail.ird.yahoo.com>
References: <596556.44808.qm@web24407.mail.ird.yahoo.com>
Message-ID: <20100907125246.2058.730326135.divmod.xquotient.452@localhost.localdomain>

On 09:40 am, dbcourriel-4all at yahoo.fr wrote:
>
>Hi, i need to connect to many servers
>so i've found an?example that?shows how to connect to many servers?see 
>the source below.
>But i need to get the way to retrieve each server in order to see the 
>satus of the connection, to send to it a message. Is there an 
>connection object with sendData action, getCxStatus for example

The protocol instance is that object.  In your case, the ClntProtocol (I 
hope that you profited well by omitting "ie" from that name).

If you want to keep track of multiple connections, I suggest a list or 
dictionary.

Jean-Paul


From dbcourriel-4all at yahoo.fr  Tue Sep  7 12:03:03 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 16:03:03 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
In-Reply-To: <20100907125246.2058.730326135.divmod.xquotient.452@localhost.localdomain>
Message-ID: <972143.49052.qm@web24406.mail.ird.yahoo.com>

Thanks a lot for your answer.
?
regards,


--- En date de?: Mar 7.9.10, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com> a ?crit?:


De: exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>
Objet: Re: [Twisted-Python] connection to many servers
?: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Date: Mardi 7 septembre 2010, 14h52


On 09:40 am, dbcourriel-4all at yahoo.fr wrote:
> 
> Hi, i need to connect to many servers
> so i've found an?example that?shows how to connect to many servers?see the source below.
> But i need to get the way to retrieve each server in order to see the satus of the connection, to send to it a message. Is there an connection object with sendData action, getCxStatus for example

The protocol instance is that object.? In your case, the ClntProtocol (I hope that you profited well by omitting "ie" from that name).

If you want to keep track of multiple connections, I suggest a list or dictionary.

Jean-Paul


-----La pi?ce jointe associ?e suit-----


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100907/28d2e7cb/attachment.htm 

From lvh at laurensvh.be  Tue Sep  7 15:16:20 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 7 Sep 2010 21:16:20 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a str?
Message-ID: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>

Hi,



As some of you probably know I'm trying to beat OAuth2.0 into submission.
I'm using twisted.cred to do it. The restriction that avatarIds need to be
strs is somewhat getting in my way, and I'm not sure if the correct way to
do it is:
1) ignore the restriction (credentials types are so specific to OAuth that
it's very unlikely you'll find anything already pluggable...)
2) use the mind object (but then it becomes somewhat wonky what goes on the
mind object and what should be the avatarId)

I'll give you a practical example:
An OAuth client makes a request for an access token. This basically means he
trades some credentials in for an access token (I use the expression
trade-in because most of the credentials can only be used once). It presents
some credentials, which can be grouped into two parts:

1) credentials that authenticate the client itself
2) credentials for the access grant (eg I've got this thing that says I
should have access)

Because (1) is pretty much always the same (and is common to other parts of
txOAuth) and (2) depends on the specific kind of request, this results in
two portals:

1) for authenticating the client, which returns an IClient
2) for authenticating the credentials (which includes the authenticated
client, since credentials are client-specific), which returns the token

Coming from Perspective Broker I think the Client would be an apt mind
object for the second portal, since it represents the entity on the other
side trying to do auth.

The appropriate credentials checker in the second portal checks (and
invalidates, since most of the credentials are single use) the credentials.
What avatarId is sent to the Realm? The Realm is also responsible for
requesting the new token, so it needs to know details about the credential
that the credential checker just checked (and in doing so, invalidated).
These are not available through the IClient mind object.

The alternative design is that all of the credentials checkers know how to
request tokens, and instead give the tokenId as avatarId. This is still
insufficient, because tokens can include extra information, such as scope,
expiration time... That can again be solved by sending an opaque string
value which contains all of the data in the token response, but in that case
the Realm is completely useless and the checkers do all of the work.
Additionally, this seems stupid because cred checkers are for checking
credentials, not checking credentials + a bunch of other stuff.

Here's my theory:
13:43 <lvh> aa_: fwiw I *think* it's because cred's supposed to be pluggable
13:43 <lvh> aa_: so avatarId is supposed to be the equivalent of a username
13:44 <lvh> aa_: and it's str not unicode because there's a helluva lot more
things
that store bytes than unicode objects

So um, any thoughts from people that understand cred? Is it ever okay to
send richer things than strings to a Realm?

thanks
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100907/8a581006/attachment.htm 

From einar.twisted at norsk-esport.no  Wed Sep  8 09:19:40 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Wed, 8 Sep 2010 15:19:40 +0200
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
Message-ID: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>

Hi,

I am trying to make one class/service hook onto another class/service
to add to its functionality without disturbing the original
class/service.

My situation is this: I currently have a class which at specific
intervals queries one server per instance (via t.u.getProcessOutput())
for some basic information. Each instance has a method which analyses
its returned data and stores the result it to  ts internal data
structure. My dilemma is that I wish to leave this class alone, but I
also wish to be able to add functionality from external classes based
on the result of said method. For instance: If the method analysing
the result from getProcessOutput() discovers a certain user on the
server being queried, I wish to store the data to a mysql database.
Under other circumstances I wish to send a notification to myself over
MSN or via mail. I can easily envision myself wanting to respond to
the results with other actions as well in the future. How can this be
achieved?

I can of course modify the original class so that I pass an
adbapi.ConnectionPool as optional argument to __init__() and modify
the method to check for the existence of such an object before
querying the database. I would then also need to add another optional
argument which is whatever object needs to be passed to allow the
class to send a message to MSN, and still more optional arguments for
any such new service I'd like to add. However, as mentioned I'd rather
not modify the original class, and doing this seems like too much of a
hack. Or is it? Perhaps inheritance is the key, although that would
require me to modify existing methods which I know to be working just
to tack on some additional functionality at the end.

What are my options here? I took a look at t.p.hook, and it seems like
it is perfect for the job: After having instantiated my "global"
adbapi.ConnectionPool(), I can just add a pre- or post-hook to any
class's method from which I'd like to store data. That way I can make
a db-instance which hooks in to any part of my application and stores
any result imaginable from any method. However, it seems that t.p.hook
is very rarely used, so perhaps there is a better way of achieving
what I want?

I hope this was somewhat comprehensible, and that there is an elegant
solution out there. :)

Cheers,
Einar


From glyph at twistedmatrix.com  Wed Sep  8 14:52:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 11:52:25 -0700
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
Message-ID: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>


On Sep 7, 2010, at 12:16 PM, Laurens Van Houtven wrote:

> Hi,
> 
> As some of you probably know I'm trying to beat OAuth2.0 into submission. I'm using twisted.cred to do it. The restriction that avatarIds need to be strs is somewhat getting in my way, and I'm not sure if the correct way to do it is:

Let me begin my answer with Epigram 34:

"The string is a stark data structure and everywhere it is passed there is much duplication of process. It is a perfect vehicle for hiding information."

If I recall correctly, the Divmod realm/checker integration required a particular format for avatar IDs; they had to be 'user at domain' so that the server could do virtual hosting.  In some cases (POP for example) that actually meant the user needed to type in user at domain as their username.  So, while strings may not be ideal, it's almost certainly possible for them to let you do what you want.  I wouldn't recommend that approach if you have a bunch of extra data to deal with... but you don't really give a clear picture of what extra data you do have to deal with :).

> 1) ignore the restriction (credentials types are so specific to OAuth that it's very unlikely you'll find anything already pluggable...)

but the avatarID isn't a credential.  It's a mapping between the checker (which is about authentication) and the realm (which is about application data).  There hopefully _should_ be such a thing as some "already pluggable" application data.

> 2) use the mind object (but then it becomes somewhat wonky what goes on the mind object and what should be the avatarId)

Use the mind object for what??? You're asking this question completely backwards.  Even after reading the whole email I'm still not quite sure what you're on about.  I'll do my best to answer a few specific quirks here, but please re-post starting with what you're actually trying to do, i.e., "I got up today, and I wanted to paint the shed."

If you're already most of the way into an implementation, feel free to present bits of the implementation itself, but you haven't really described enough of it here for me to understand what you're doing and why.

> I'll give you a practical example:
> An OAuth client makes a request for an access token. This basically means he trades some credentials in for an access token (I use the expression trade-in because most of the credentials can only be used once). It presents some credentials, which can be grouped into two parts:
> 
> 1) credentials that authenticate the client itself
> 2) credentials for the access grant (eg I've got this thing that says I should have access)

Only one of these things are really "credentials" from cred's perspective.

Cred's purpose is to tie together two things: a realm that implements some protocol/application logic, and a checker that implements some authentication logic.  _everything that happens before you start talking to the application_ is just authentication stuff, and is part of the checker.  Even if that stuff, itself, needs to be pluggable.

I don't know the specifics of how OAuth works, but I know vaguely what it does, and ultimately what it needs to do is give you access to an IResource that allows you to do ... stuff.  The stuff-doing part is the interesting part.  That is the part that the Realm gives you.  The Realm ought to be able to work with Basic authentication, and the objects returned from the realm should be able to work even with no authentication (if you wanted to just put your resource endpoint up for everyone to use, unauthenticated, which is granted not very sueful).

> Because (1) is pretty much always the same (and is common to other parts of txOAuth) and (2) depends on the specific kind of request, this results in two portals:

> 1) for authenticating the client, which returns an IClient

I have no idea what an "IClient" is.  It sounds like you're using cred internally so that you can make the actual OAuth-ing process plugabble, and that's great, as long as you separate it from the post-OAuth part of actually producing a resource.

> 2) for authenticating the credentials (which includes the authenticated client, since credentials are client-specific), which returns the token

That part sounds like what I would expect.

> Coming from Perspective Broker I think the Client would be an apt mind object for the second portal, since it represents the entity on the other side trying to do auth.

The Mind is the entity on the other side trying to get something done, not trying to auth.  The docs sorely need to be updated to reflect this, but the canonical example of the 'mind' is the IChatClient interface in twisted.words (used in a cred context by twisted.words.service).  Of course, the IChatClient provider may also be involved in authentication, for example receiving a NickServ challenge from the server, but by the time you start calling that object a 'mind', authentication is done.

> The appropriate credentials checker in the second portal checks (and invalidates, since most of the credentials are single use) the credentials. What avatarId is sent to the Realm? The Realm is also responsible for requesting the new token,

OK, and that's where things go wrong.

The realm is responsible for one thing only: returning an object which implements an interface that allows a user of the library to define some application logic.  It should not be participating in auth.  If the authentication layer needs to perform some additional logic on each request, it should wrap up the IResource (or whatever) provider returned by the Realm, so that the Realm can do the work.

(and furthermore, why is anybody responsible for "requesting the new token" in the first place?  why do any new tokens ever need to be requested on the service provider's side of things?)

> so it needs to know details about the credential that the credential checker just checked (and in doing so, invalidated). These are not available through the IClient mind object.
> 
> The alternative design is that all of the credentials checkers know how to request tokens, and instead give the tokenId as avatarId. This is still insufficient, because tokens can include extra information, such as scope, expiration time... That can again be solved by sending an opaque string value which contains all of the data in the token response, but in that case the Realm is completely useless and the checkers do all of the work. Additionally, this seems stupid because cred checkers are for checking credentials, not checking credentials + a bunch of other stuff.

This has historically been a weak point for cred.  While I'm trying to give you a better idea of how to use it "right", you should be keenly aware that it isn't perfect and doesn't necessarily handle every case, so there are some things that you might try to do which won't be well supported.  Since cred is so mysterious and subtle, sometimes people believe that if they could just grasp its essence all their problems will go away; but it only solves one problem, so if that problem isn't the one you're facing, you may still be out of luck :).

The idea is that the realm is supposed to be a backend that has its own storage and logic and so on, and the checker is supposed to have enough information to produce an avatar ID that points at something the realm knows about.  The fiction that cred promulgates is that checkers are somehow agnostic to realms, but can still perform this mapping reliably based on their credentials.

Of course, this can't be universally true: if the checker needs to map things into the realm, then it stands to reason it *does* need to know something about the realm.  This level of flexibility is needed very rarely though, so what ends up happening is that all the existing checkers just relay the 'username' field to be the avatar ID.  In the event that you do need more flexibility - let's say your accounts database uses a peculiar convention to encode the authentication type into the stored user ID so that the same user might get different behavior based on how they authenticate - you could easily write some custom checkers that wrap simple underlying checkers and sprinkle on a little special-case logic to mutate the avatarID appropriately before returning it.

I think you're actually a little lucky to be implementing OAuth rather than OpenID, because my understanding is that with OAuth the expectation is that, as a provider of a service (i.e. someone likely to be using the cred interfaces, not a client) you expect that users have already created an account, and so the realm already has some data.  "expiration time" can be handled by the checker, or at least by the code that's driving the portal, to set session expiration.  (I'm not really sure what "scope" is, perhaps you could elaborate on some of these additional fields.)

The place where cred really falls down is multi-field stuff.  For example, in OpenID, a new user might show up with some OpenID metadata, like their preferred nickname, email address, and location.  Cred provides no way to tell the realm "create an account like this" or "are there any other users with this email address", so if you need to do *that* kind of thing, you're going to need to work on expanding the API.

> Here's my theory:
> 13:43 <lvh> aa_: fwiw I *think* it's because cred's supposed to be pluggable
> 13:43 <lvh> aa_: so avatarId is supposed to be the equivalent of a username
> 13:44 <lvh> aa_: and it's str not unicode because there's a helluva lot more things
> that store bytes than unicode objects
> 
> So um, any thoughts from people that understand cred? Is it ever okay to send richer things than strings to a Realm?

It hadn't really occurred to me to abuse the 'mind' object to provide that sort of structured data, but being able to specify the mind as "something adaptable to (interface X which provides the info you need)" is a nice big loophole :).  And the realm can return whatever it wants; it doesn't need to be based on the avatarID.  If you wanted to cram some more structured fields in there to smuggle them to the realm, that's a better place to put them than the strictly-mandated it's-just-some-bytes avatarID.  (This would allow other 'regular' HTTP realms to work with your OAuth code, but provide extra OAuth stuff for realms that want it).  I'm still not convinced that your realm should actually know about these extra fields, but maybe you just haven't given the relevant example yet.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100908/df134115/attachment.htm 

From glyph at twistedmatrix.com  Wed Sep  8 15:47:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 12:47:40 -0700
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
In-Reply-To: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
Message-ID: <64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>

Hi Einar,

On Sep 8, 2010, at 6:19 AM, Einar S. Ids? wrote:

> I am trying to make one class/service hook onto another class/service
> to add to its functionality without disturbing the original
> class/service.

So... you are trying to write a computer program, is what you're saying? ;-)

> My situation is this: I currently have a class which at specific
> intervals queries one server per instance (via t.u.getProcessOutput())
> for some basic information. Each instance has a method which analyses
> its returned data and stores the result it to  ts internal data
> structure. My dilemma is that I wish to leave this class alone, but I
> also wish to be able to add functionality from external classes based
> on the result of said method. For instance: If the method analysing
> the result from getProcessOutput() discovers a certain user on the
> server being queried, I wish to store the data to a mysql database.
> Under other circumstances I wish to send a notification to myself over
> MSN or via mail. I can easily envision myself wanting to respond to
> the results with other actions as well in the future. How can this be
> achieved?

It sounds like this is a pretty trivial application of the Publish/Subscribe pattern (or perhaps the Observer) pattern.

<http://en.wikipedia.org/wiki/Publish/subscribe>
<http://en.wikipedia.org/wiki/Observer_pattern>

In less fancy language, "it sounds like you need a 'for' loop".

> I can of course modify the original class so that I pass an
> adbapi.ConnectionPool as optional argument to __init__() and modify
> the method to check for the existence of such an object before
> querying the database. I would then also need to add another optional
> argument which is whatever object needs to be passed to allow the
> class to send a message to MSN, and still more optional arguments for
> any such new service I'd like to add. However, as mentioned I'd rather
> not modify the original class, and doing this seems like too much of a
> hack. Or is it? Perhaps inheritance is the key, although that would
> require me to modify existing methods which I know to be working just
> to tack on some additional functionality at the end.

No, inheritance isn't the key.  It never is - composition is the key :).  You're right that adding lots of special-purpose arguments to __init__ that each do one thing is a bad idea.  Don't do that.  Add one general-purpose "list of observers that want to be notified (when X happens)" argument.  Then when your getProcessOutput() finishes, just do 'for something in self.observers: something.youJustGotServerStatus(newServerStatus)'.  It usually makes sense to define an interface with a couple of interesting methods when you do this, so that you can have more methods.  If you've only ever got one interesting type of event for this class and you're sure you won't ever have more, you might just use callable objects instead of methods, since that will let users pass in functions (i.e. 'for observer in observers: observer()').

> What are my options here? I took a look at t.p.hook, and it seems like
> it is perfect for the job: After having instantiated my "global"
> adbapi.ConnectionPool(), I can just add a pre- or post-hook to any
> class's method from which I'd like to store data. That way I can make
> a db-instance which hooks in to any part of my application and stores
> any result imaginable from any method. However, it seems that t.p.hook
> is very rarely used, so perhaps there is a better way of achieving
> what I want?

Please, please do not use t.p.hook.  I hope that we delete it one day.

The only thing in all of Twisted which uses t.p.hook is twisted.python.threadable, which is also very lightly used.  This functionality could easily be implemented using a decorator instead of the awfulness that twisted.python.hook gets up to.  If you look at how twisted.python.hook is implemented, you'll notice that it generates strings of Python code at runtime, and compiles and runs them.

More generally, please don't try to do what t.p.hook tries to do, and add functionality to a class that you wrote without that class's cooperation.  If your application depends on magical external modifications to classes in order to work as expected, it will become flaky and difficult to maintain.  For one thing, imagine some new developer reading the code: they're looking at the body of the method, they're looking at the code of the method, and then they're looking at some code in some totally random other spot that is somehow getting invoked when they call it.  Imagine the frustration as they try to figure out why that is happening.

If you instead just have an explicit list of observers, which are passed in to the class, then if one of them blows up, it will be very easy to figure out where it's blowing up: the line will be observer.youJustGotServerStatus(), there will be a couple of youJustGotServerStatus method somewhere that you can track down bugs to.

In some situations, if you're dealing with somebody else's code, that you can't modify for some reason at the source level (for example: you want to work with a released version of the standard library, or an older version of Twisted) it might make sense to patch in some extra functionality from your code.  In that case, using something like twisted.python.hook that enforces a particular style (again: do not use twisted.python.hook itself, it is old, crufty code that is unnecessarily complex) might be slightly better than just raw monkey patching.  But this is very much something that happens across the boundaries of code that is distributed separately.  If you are the maintainer for your class, just change your class, it's much simpler!

Of course, there are perfectly good reasons to use the wonktacular insane dynamic features that Python offers you, but mostly those are useful when you're trying to abstract away some concern that the developer writing the code in question shouldn't have to worry about, like a proxy object.  It's not a good idea to implement core application functionality in terms of meta-programming hacks: the whole point of adding funky meta-programming hacks is to make the core application logic easier to follow, by removing other concerns from the code :).

> I hope this was somewhat comprehensible, and that there is an elegant
> solution out there. :)

Well, if my answer answers your question, then yes :).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100908/88c9b1fe/attachment-0001.htm 

From stephen.c.waterbury at nasa.gov  Wed Sep  8 16:27:37 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Wed, 8 Sep 2010 16:27:37 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
 str?
In-Reply-To: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
Message-ID: <4C87F1B9.3070509@nasa.gov>

A nomenclature distinction that might help this conversation:

*authentication* verifies *identity*
(via, e.g., userid/passwd, public key negotiation, etc.)
and may issue a token (e.g., a cookie, Kerberos TGT, etc.).

*authorization* determines what an authenticated identity
(and its associated roles, if any) have access to in an
application context (realm?).

These are standard terms, and the activities they refer to should
be orthogonal.  Neither the OP nor Glyph use the term
"authorization" in either of their messages, but that concept
is clearly involved and is almost always useful for
clarification.

Looking at the OAuth 2.0 protocol specification, it seems quite
similar in concept to Kerberos (and other SSO protocols), in
which the user acquires a Ticket-Granting Ticket (TGT) upon
authentication to a Kerberos domain controller, and then the TGT
is used when interacting with applications in the Kerberos
domain.  Each app is registered with the Kerberos domain
controller and can interact with it securely to verify the
validity (also expiration time, etc.) of a TGT that has been
offered to it.  Once that interaction is complete, the app knows
the identity associated with the TGT has been authenticated, and
it can proceed with authorization, which of course depends on
each application's context, and is completely separate from
authentication.

It might be useful to describe cred's structure in these terms,
since both authentication and authorization are involved.
(Might be useful to me, at least ... :)

Steve



From glyph at twistedmatrix.com  Wed Sep  8 16:46:06 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 13:46:06 -0700
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <4C87F1B9.3070509@nasa.gov>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<4C87F1B9.3070509@nasa.gov>
Message-ID: <8A1E69BB-CFE5-4E31-B21A-096E8D57D026@twistedmatrix.com>


On Sep 8, 2010, at 1:27 PM, Stephen Waterbury wrote:

> Neither the OP nor Glyph use the term
> "authorization" in either of their messages, but that concept
> is clearly involved and is almost always useful for
> clarification.

The checker authenticates; the realm authorizes.

Authorization proceeds from the realm's idea of what a particular avatar ID (and, apparently, mind, as laurens has discovered this particular loophole in the API) is authorized to do; authentication proceeds from what the checker thinks makes some credentials valid.

As you put it:

> Once that interaction is complete, the app knows
> the identity associated with the TGT has been authenticated, and
> it can proceed with authorization, which of course depends on
> each application's context, and is completely separate from
> authentication.


replace "application" with "realm" here and that's basically how twisted.cred works.

The reason I didn't use the term authorization in my original message is that we're talking about an authentication protocol, and hopefully authorization can stay out of it :).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100908/325de3c3/attachment.htm 

From jml at mumak.net  Wed Sep  8 17:12:48 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Sep 2010 22:12:48 +0100
Subject: [Twisted-Python] txdev: utility for working on Twisted
Message-ID: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>

Hello everyone,

I wrote a tool to help do Twisted development, especially with Bazaar.
You can get the code with:
  $ bzr branch lp:~jml/+junk/twisteddev

Basically, it's a few things to help with the interactions between
branches and tickets. It might well work with Subversion, since it's
mostly just putting strings together. There's some support for Bazaar
configuration. It might even work with other Twisted-like projects,
(e.g. Divmod projects).

There are some examples below. I hope they are self-explanatory.

I'll try to fix bugs if you find them. Features, well, you're on your own.

Let me know if it helps you.

cheers,
jml

$ txdev --help
Usage: txdev [options]
Options:
  -h, --help       Display this help and exit.
      --trac-url=  The URL of the Trac instance
      --repo-url=  The Bazaar repository with the branches.
      --version
Commands:
    branch           Get the branch for a ticket
    open-ticket      Open ticket in web browser
    reviews          Display tickets needing review

$ txdev branch 4616
http://svn.twistedmatrix.com/bzr/Twisted/branches/remove-lineno-patch-4616

$ bzr branch `txdev branch 4616`
$ cd remove-lineno-patch-4616
$ txdev open-ticket
Created new window in existing browser session.

$ txdev reviews
#4416 - IRCClient: Detect and handle lines that are too long
#4536 - Credentials materials are compared unsafely throughout Twisted
#4567 - Improve lore2sphinx buildbot results for `projects/core/development`
#4568 - Improve lore2sphinx buildbot results for `projects/core/howto`
(except ?tutorial/?)
#4616 - trial documentation says --coverage requires python 2.3.3
#4617 - Make t.i.a._SocketCloser a new style class
#4623 - Missing interface IQueue
#4632 - ability to cascade canceling inlineCallbacks's deferred
#4641 - twisted.words.im.ircsupport.IRCProto sends USER command with
the wrong data

$ txdev reviews --branches-only
http://svn.twistedmatrix.com/bzr/Twisted/branches/handle-long-IRC-lines-4416
http://svn.twistedmatrix.com/bzr/Twisted/branches/password-comparison-4536-2
http://svn.twistedmatrix.com/bzr/Twisted/branches/improve-lore2sphinx-output-for-projects-core-development-4567
http://svn.twistedmatrix.com/bzr/Twisted/branches/lore2sphinx-projects-core-howto-4568
http://svn.twistedmatrix.com/bzr/Twisted/branches/remove-lineno-patch-4616
http://svn.twistedmatrix.com/bzr/Twisted/branches/newstyle-socketcloser-4617
http://svn.twistedmatrix.com/bzr/Twisted/branches/ircsupport-user-4641


From lvh at laurensvh.be  Wed Sep  8 20:12:56 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 9 Sep 2010 02:12:56 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
Message-ID: <AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>

Actually, I believe much of the confusion is cleared up. Apparently I
misunderstood what a Realm does. Oops!

The application in the original mail, which I will continue to talk about in
this one, is a token endpoint. I've been told an explanation of what that is
is in order. To start out: it is NOT the thing that actually serves
protected resources, that's a resource server, which is a different beast
entirely. The job of a token endpoint is to turn certain kinds of
credentials into an access token; the access token, in turn, can be used to
access protected resources. So basically, these credentials are about
already provided access grants, that haven't been turned into access tokens
yet. Examples of such credentials which can be turned in for access tokens:

    - authorization code: This represents an access grant from the end user.
Instead of receiving an access token when the grant was issued, you got this
code, which basically is a credential that says "This person is allowed to
access the protected resource, but we haven't given him a proper token to do
that yet". The token endpoint is for turning one of these into a token.
    - refresh token: in case your access token has been used up or expired,
one refresh token can be exchanged for one access token
    - assertion: this is basically just a pair of opaque strings (a type and
a value); it's used for tying OAuth in with existing systems. Hence, this is
deliberately vague.
    - user credentials: this is the classic username/password. It's a bit
silly to use this; the only advantage is that you can limit which servers
need access to these credentials.

The key thing to remember is: token endpoints let you trade in some
credentials that prove you're supposed to have access for a token that
actually *gives* you that access.

Since people asked for more detail as to which data exactly needs to be
passed to the Realm (yes, even now that I know what the Realm actually
does). This is basically all of the data in the token endpoint's
response. The response contains the following data, in JSON format:
(explanations of what each thing is in the following paragraphs)
    - the access token (an ascii string, mandatory)
    - the expiration time (optional)
    - the refresh token (another ascii string, similar to the access token,
optional)
    - scope (an ascii string consisting of a set of space-separated words,
optional)

Optional here does not really mean "at my option" but "occasionally
required", so it is necessary that all four can be passed to the IRealm at
the same time. Furthermore, it's impossible to use the Mind for some of
them, because ICredentialsCheckers never see the Mind, and all of that data
(access token, refresh token, expiration time, scope) are only ever visible
to the ICredentialsChecker.

Again, the access token is something you use to actually access a protected
resource. The refresh token is something you use to get a new token when
your old one expires or is used up. Defining the scope properly is hard,
it's deliberately vague in the spec as well; it's a set of strings that
determine what you can do with your shiny new access token. For example, for
Facebook, the scope might be "name friends likes" for a token that allows
someone to access your name, your list of friends and what you like, but not
your pictures, gender, date of birth. These values are not determined by the
spec, and you can just make some up for your service.

Also, to clear up a misunderstanding:
> (and furthermore, why is anybody responsible for "requesting the new
token" in the first place?  why do any new tokens ever need to be requested
on the service provider's side of things?)
Yes, sorry, that was a poorly chosen verb. I should have just said "creates
a new token"; I didn't, because typically token creation and storage happens
somewhere else in a centralized place (hence, this code *requests* it).


Does that help?
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100909/fce6624e/attachment.htm 

From petshmidt at googlemail.com  Thu Sep  9 05:42:44 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 9 Sep 2010 11:42:44 +0200
Subject: [Twisted-Python] How to get original error message in failure object
Message-ID: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>

Hello,

if an error occurs in HTTP11ClientProtocol request method
(twisted.web._newclient) then error is stored in
RequestGenerationFailed Exception and wrapped in Failure object:


        def ebRequestWriting(err):
            if self._state == 'TRANSMITTING':
                self._state = 'GENERATION_FAILED'
                self.transport.loseConnection()
                 self._finishedRequest.errback(
                    Failure(RequestGenerationFailed([err])))
            else:
                log.err(err, "foo")

but if I print detailed traceback of failure in my code it doesn't
show all information it contains

Original Failure (err in function above):
[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
not be unicode

This is detailed traceback, where I don't see the message "Data must
not be unicode"

*--- Failure #7 (pickled) ---
Failure: twisted.web._newclient.RequestGenerationFailed:
[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
*--- End of Failure #7 ---
None


Is there a way to get original error message and where it was raised
in Twisted code?


Thanks a lot!


From exarkun at twistedmatrix.com  Thu Sep  9 08:33:19 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Sep 2010 12:33:19 -0000
Subject: [Twisted-Python] How to get original error message in
	failure	object
In-Reply-To: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
References: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
Message-ID: <20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>

On 09:42 am, petshmidt at googlemail.com wrote:
>Hello,
>
>if an error occurs in HTTP11ClientProtocol request method
>(twisted.web._newclient) then error is stored in
>RequestGenerationFailed Exception and wrapped in Failure object:
>
>
>        def ebRequestWriting(err):
>            if self._state == 'TRANSMITTING':
>                self._state = 'GENERATION_FAILED'
>                self.transport.loseConnection()
>                 self._finishedRequest.errback(
>                    Failure(RequestGenerationFailed([err])))
>            else:
>                log.err(err, "foo")
>
>but if I print detailed traceback of failure in my code it doesn't
>show all information it contains
>
>Original Failure (err in function above):
>[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
>not be unicode
>
>This is detailed traceback, where I don't see the message "Data must
>not be unicode"
>
>*--- Failure #7 (pickled) ---
>Failure: twisted.web._newclient.RequestGenerationFailed:
>[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
>*--- End of Failure #7 ---
>None
>
>
>Is there a way to get original error message and where it was raised
>in Twisted code?

See the (documented) `reasons` attribute of `RequestGenerationFailed`.

Jean-Paul


From petshmidt at googlemail.com  Thu Sep  9 08:53:20 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 9 Sep 2010 14:53:20 +0200
Subject: [Twisted-Python] How to get original error message in failure
	object
In-Reply-To: <20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>
References: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
	<20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>
Message-ID: <AANLkTiktgs_5faN+QeAs+rtSF3=QOrKxu-476VMbh4mo@mail.gmail.com>

On Thu, Sep 9, 2010 at 2:33 PM,  <exarkun at twistedmatrix.com> wrote:
> On 09:42 am, petshmidt at googlemail.com wrote:
>>Hello,
>>
>>if an error occurs in HTTP11ClientProtocol request method
>>(twisted.web._newclient) then error is stored in
>>RequestGenerationFailed Exception and wrapped in Failure object:
>>
>>
>> ? ? ? ?def ebRequestWriting(err):
>> ? ? ? ? ? ?if self._state == 'TRANSMITTING':
>> ? ? ? ? ? ? ? ?self._state = 'GENERATION_FAILED'
>> ? ? ? ? ? ? ? ?self.transport.loseConnection()
>> ? ? ? ? ? ? ? ? self._finishedRequest.errback(
>> ? ? ? ? ? ? ? ? ? ?Failure(RequestGenerationFailed([err])))
>> ? ? ? ? ? ?else:
>> ? ? ? ? ? ? ? ?log.err(err, "foo")
>>
>>but if I print detailed traceback of failure in my code it doesn't
>>show all information it contains
>>
>>Original Failure (err in function above):
>>[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
>>not be unicode
>>
>>This is detailed traceback, where I don't see the message "Data must
>>not be unicode"
>>
>>*--- Failure #7 (pickled) ---
>>Failure: twisted.web._newclient.RequestGenerationFailed:
>>[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
>>*--- End of Failure #7 ---
>>None
>>
>>
>>Is there a way to get original error message and where it was raised
>>in Twisted code?
>
> See the (documented) `reasons` attribute of `RequestGenerationFailed`.
>

Thanks for hint! RequestGenerationFailed save errors in  `reasons`
attribute, but documentation
doesn't tell how to print reasons. I'm getting just failure object in
my errback.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From einar.twisted at norsk-esport.no  Thu Sep  9 16:27:57 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 9 Sep 2010 22:27:57 +0200
Subject: [Twisted-Python] How to hook onto or append functionality to a
 class (from another class)?
In-Reply-To: <64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
	<64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
Message-ID: <AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>

Hi Glyph, and thank you for your thorough and very helpful response. :)

On Wed, Sep 8, 2010 at 9:47 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> It sounds like this is a pretty trivial application of the Publish/Subscribe
> pattern (or perhaps the Observer) pattern.
(...)
>  Add one general-purpose
> "list of observers that want to be notified (when X happens)" argument.
>  Then when your getProcessOutput() finishes, just do 'for something in
> self.observers: something.youJustGotServerStatus(newServerStatus)'.
Yes! Perfect! That sounds like it's exactly what I need, thank you :)

>It
> usually makes sense to define an interface with a couple of interesting
> methods when you do this, so that you can have more methods.
Interfaces scare me, and I've been doing my best to avoid them in my
application. The primary reason being that I am the only developer, so
as long as I know what I'm doing I'll be alright. Although I'm not so
sure that I actually do...

> Please, please do not use t.p.hook. ?I hope that we delete it one day.
Thanks for the advice. I'll stay away.

>> I hope this was somewhat comprehensible, and that there is an elegant
>> solution out there. :)
> Well, if my answer answers your question, then yes :).
It certainly does, and it is much appreciated. I'll just pop out on
Google for a few minutes to find some examples, and will get right
back to coding my app. Thanks again for taking the time to help a
novice out :)

Cheers,
Einar


From glyph at twistedmatrix.com  Thu Sep  9 20:04:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:04:20 -0400
Subject: [Twisted-Python] txdev: utility for working on Twisted
In-Reply-To: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>
References: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>
Message-ID: <EB7D9712-689D-4FFE-B7A7-DDDB0F03D20F@twistedmatrix.com>


On Sep 8, 2010, at 5:12 PM, Jonathan Lange wrote:

> I wrote a tool to help do Twisted development, especially with Bazaar.
> You can get the code with:
>  $ bzr branch lp:~jml/+junk/twisteddev

Rad.

Thanks for releasing this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100909/92a6906f/attachment.htm 

From glyph at twistedmatrix.com  Thu Sep  9 20:34:48 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:34:48 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
Message-ID: <8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>


On Sep 8, 2010, at 8:12 PM, Laurens Van Houtven wrote:

> Actually, I believe much of the confusion is cleared up. Apparently I misunderstood what a Realm does. Oops!
> 
> The application in the original mail, which I will continue to talk about in this one, is a token endpoint. I've been told an explanation of what that is is in order. To start out: it is NOT the thing that actually serves protected resources, that's a resource server, which is a different beast entirely. The job of a token endpoint is to turn certain kinds of credentials into an access token; the access token, in turn, can be used to access protected resources. So basically, these credentials are about already provided access grants, that haven't been turned into access tokens yet. Examples of such credentials which can be turned in for access tokens:

(...)

> Does that help?
> Laurens

Somewhat, but it really casts the main issue into sharper focus:

for any given cred implementation, there are two key questions:

What is the avatar interface?
What is the associated mind interface?

If we're not talking about a system where the avatar interface (the one passed to 'login', the one that the realm must return something that gets implemented) is IResource, then that's the problem.  What is that interface that you're talking about?  Be very specific: what methods does it have and why?

It sounds like OAuth is very precisely implementing something that maps almost exactly onto the checker part of cred, but you're doing it by implementing a realm to allow applications to provide their own logic.  This might not be the wrong idea, but it needs to be spelled out very clearly.

As you describe it:

> token endpoints let you trade in some credentials that prove you're supposed to have access for a token that actually *gives* you that access

In cred-ese, that would be "checkers let you trade in some credentials that prove you're supposed to have access for an <avatar ID, which you give to a Realm> that actually *gives* you that access".  As far as the OAuth response is concerned, it's like a checker.  Looking at the individual parts, assuming that the avatar interface for the purposes of this discussion is IResource, it breaks down like this in my mind:

>     - the access token (an ascii string, mandatory)

Avatar ID.  (See, it's a str!)

>     - the expiration time (optional)

Implementation detail of the session.  Avatars are actually sessions, which expire: sometimes (as with POP) at the end of a connection, sometimes (as with nevow.guard's HTTP support) with a session timeout.

>     - the refresh token (another ascii string, similar to the access token, optional)

Implementation detail of the authentication protocol.  The client library and server library should be transparently refreshing this without telling either the client application code or server application code, right?

>     - scope (an ascii string consisting of a set of space-separated words, optional)


This part doesn't quite fit, but could be expressed in one of two ways: a modification to the avatar ID, or as some extra structure on the Mind that modifies what functionality the Realm bundles in to your avatar implementation (without changing the interface provided by that object, of course).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100909/15a808ff/attachment.htm 

From glyph at twistedmatrix.com  Thu Sep  9 20:36:37 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:36:37 -0400
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
In-Reply-To: <AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
	<64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
	<AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>
Message-ID: <170F3DC0-65ED-420D-8992-21457B7CEF81@twistedmatrix.com>


On Sep 9, 2010, at 4:27 PM, Einar S. Ids? wrote:

> Hi Glyph, and thank you for your thorough and very helpful response. :)
> 
> On Wed, Sep 8, 2010 at 9:47 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> It sounds like this is a pretty trivial application of the Publish/Subscribe
>> pattern (or perhaps the Observer) pattern.
> (...)
>> Add one general-purpose
>> "list of observers that want to be notified (when X happens)" argument.
>> Then when your getProcessOutput() finishes, just do 'for something in
>> self.observers: something.youJustGotServerStatus(newServerStatus)'.
> Yes! Perfect! That sounds like it's exactly what I need, thank you :)

Great, glad to help :).

>> It
>> usually makes sense to define an interface with a couple of interesting
>> methods when you do this, so that you can have more methods.
> Interfaces scare me, and I've been doing my best to avoid them in my
> application. The primary reason being that I am the only developer, so
> as long as I know what I'm doing I'll be alright. Although I'm not so
> sure that I actually do...

There are some cool implementation things you can do with interfaces, but they're a little obscure and you shouldn't worry about them.  It's most helpful to think of interfaces as just expanded / shared docstrings for things that are shared among many classes.

>> Please, please do not use t.p.hook.  I hope that we delete it one day.
> Thanks for the advice. I'll stay away.

Even greater.

>>> I hope this was somewhat comprehensible, and that there is an elegant
>>> solution out there. :)
>> Well, if my answer answers your question, then yes :).
> It certainly does, and it is much appreciated. I'll just pop out on
> Google for a few minutes to find some examples, and will get right
> back to coding my app. Thanks again for taking the time to help a
> novice out :)

It's always nice to have the help be appreciated.  Good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100909/d391f5bc/attachment.htm 

From ypercube at gmail.com  Thu Sep  9 22:17:28 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 05:17:28 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
Message-ID: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>

I have a simple INSERT INTO statement sent to SQL-Server using pymssql
module.

I use the runOperation method to send the query and I get this strange
error. The data goes through OK and is written in the database but
SQL-Server tries to rollback.

Perhaps this is a pymssql problem. In the
http://code.google.com/p/pymssql/wiki/PymssqlExamples
page, they state:

import pymssql
conn = pymssql.connect(host='SQL01', user='user', password='password',
database='mydatabase')
cur = conn.cursor()
cur.execute('CREATE TABLE persons(id INT, name VARCHAR(100))')
cur.executemany("INSERT INTO persons VALUES(%d, %s)", \
    [ (1, 'John Doe'), (2, 'Jane Doe') ])
conn.commit()  # you must call commit() to persist your data if you
don't set autocommit to True


But how can I use the con.commit method with runOperation and runQuery that
I use in my application?

thank you,

Pandelis Theodosiou


Here is the error:

Traceback (most recent call last):
  File "/usr/lib/python2.6/threading.py", line 484, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/lib/python2.6/dist-packages/twisted/python/threadpool.py", line
210, in _worker
    result = context.call(ctx, function, *args, **kwargs)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/enterprise/adbapi.py", line
436, in _runInteraction
    conn.rollback()
  File "/usr/lib/python2.6/dist-packages/twisted/enterprise/adbapi.py", line
52, in rollback
    self._connection.rollback()
  File "/usr/lib/pymodules/python2.6/pymssql.py", line 496, in rollback
    raise OperationalError, "cannot roll back transaction: " + e[0]
pymssql.OperationalError: cannot roll back transaction: SQL Server message
3903, severity 16, state 1, line 1:
The ROLLBACK TRANSACTION request has no corresponding BEGIN TRANSACTION.
DB-Lib error message 3903, severity 16:
General SQL Server error: Check messages from the SQL Server
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/fcb20e06/attachment-0001.htm 

From jakamkon at gmail.com  Fri Sep 10 04:57:10 2010
From: jakamkon at gmail.com (=?ISO-8859-2?Q?Kuba_Ko=F1czyk?=)
Date: Fri, 10 Sep 2010 10:57:10 +0200
Subject: [Twisted-Python] conchoctopus: APIs for working with multiple SSH
	servers
Message-ID: <AANLkTinQOhOvwbtL5iUxzo-B_tv7NGE2vUSU3wGihFp0@mail.gmail.com>

Hi Everyone,

Conchoctopus was started as a library that glue together various parts
of twisted.conch
so that it can be easily used in everyday work with SSH
servers.Currently there are two APIs
you can use.

First one takes care of most low level details of t.c such as
authentication and error handling
and provides ready to use classes that you can use in your twisted
code.I would like to make
it as usable for other twisted users as possible.

There's also high level API where all deferred management machinery is hidden.
User have to create a python module with a Task class that specifies
'what to do' using
inlineCallbacks and Config class with a list of servers to work
on.This modules can then
be run with an simple console utility.

Both APIs are documented and armed with test suite.Please play around
and let me know what
can be improved or added.

Code is available from pypi:
http://pypi.python.org/pypi/conchoctopus/

Thanks,
Kuba


From general at vultaire.net  Fri Sep 10 06:41:37 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 10 Sep 2010 19:41:37 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <4C8A0B61.5050202@vultaire.net>

On 9/10/2010 11:17 AM, Pantelis Theodosiou wrote:
> I have a simple INSERT INTO statement sent to SQL-Server using pymssql
> module.
>
> I use the runOperation method to send the query and I get this strange
> error. The data goes through OK and is written in the database but
> SQL-Server tries to rollback.

I don't see any of the Twisted code you're trying; I only see a 
traceback and it doesn't really give enough information.

Any chance you could give us a short, self-contained example which 
demonstrates the problem?  (http://sscce.org/)

- Paul Goins


From general at vultaire.net  Fri Sep 10 06:49:10 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 10 Sep 2010 19:49:10 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <4C8A0D26.8090007@vultaire.net>

Sorry, one more thing.

 > But how can I use the con.commit method with runOperation and runQuery
 > that I use in my application?

I'm pretty sure ConnectionPools should take care of the commit for you, 
provided there was no error.  If there was an error, then it attempts a 
rollback.

This should be true for runQuery, runOperation and runInteraction.  I 
think the one exception is runWithConnection which wraps and gives 
access to a (lightly wrapped) connection object, but I think most people 
don't really need this.

Hope this helps.  Again, please give an example of the problem if you can.

- Paul Goins


From jaroslaw.fedewicz at gmail.com  Fri Sep 10 07:51:14 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Fri, 10 Sep 2010 14:51:14 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>


On Sep 10, 2010, at 5:17 AM, Pantelis Theodosiou wrote:

> I have a simple INSERT INTO statement sent to SQL-Server using pymssql module.
> 
> I use the runOperation method to send the query and I get this strange error. The data goes through OK and is written in the database but SQL-Server tries to rollback.
> 
> Perhaps this is a pymssql problem. In the 
> http://code.google.com/p/pymssql/wiki/PymssqlExamples 
> page, they state:
> 
> import pymssql
> conn = pymssql.connect(host='SQL01', user='user', password='password', database='mydatabase')
> 
> cur = conn.cursor()
> cur.execute('CREATE TABLE persons(id INT, name VARCHAR(100))')
> 
> cur.executemany("INSERT INTO persons VALUES(%d, %s)", \
> 
>     [ (1, 'John Doe'), (2, 'Jane Doe') ])
> 
> conn.commit()  # you must call commit() to persist your data if you don't set autocommit to True
> 
> 
> But how can I use the con.commit method with runOperation and runQuery that I use in my application?
> 
> thank you,
> 
> Pandelis Theodosiou


I have no experience with MS SQL, only with PostgreSQL via psycopg2, but the idea is:

you want to execute many statements, probably in a blocking fashion: runInteraction()
you want to execute just one statement: runQuery()/runOperation()

AFAIK the latter one will do a commit for you if it is needed.

Anyway, for PostgreSQL I can specify isolation level I need.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/a0ffbeec/attachment.htm 

From ypercube at gmail.com  Fri Sep 10 11:54:34 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 18:54:34 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
Message-ID: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>

I have no experience with MS SQL, only with PostgreSQL via psycopg2, but the
> idea is:
>
> you want to execute many statements, probably in a blocking fashion:
> runInteraction()
> you want to execute just one statement: runQuery()/runOperation()
>
> AFAIK the latter one will do a commit for you if it is needed.
>
> Anyway, for PostgreSQL I can specify isolation level I need.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

thnx to all. I used runOperation with the INSERTs and it was solved (or i
think that was the cause).

The part of code with the problem was:

-----------------
from twisted.enterprise import adbapi
import pymssql


class DBAccess:

    def __init__(self):
        # SQL-Server
        myhost = "64.x.x.x:4000"
        mydatabase = "db"
        myuser = "user"
        mypassword = "password"

        try:
            self.dbpool = adbapi.ConnectionPool("pymssql"
                                    , host=myhost
                                    , user=myuser
                                    , password=mypassword
                                    , database=mydatabase
                                    , cp_noisy=False)
            print("db connection pool created")
        except Exception as e:
            print("error starting the ConnectionPool")
            print(e)

    def insertDATA(self
            , serialNumber
            , customerAccount
            , dateAndTime
            , camcount
            , fpv
            , reff
            , restOfFrame
            ):
        sql = ''.join(
            [
             "INSERT INTO fts_data VALUES ("
                    ,  "'" , serialNumber , "'"
            , "," , "'" , customerAccount , "'"
            , "," , "'" , dateAndTime , "'"
            , "," , camcount
            , "," , fpv
            , "," , "'" , reff , "'"
            , "," , "'" , restOfFrame , "'"
            , ") "
            ] )
        #print(sql)
        try:
            deferred = self.dbpool.runOperation(sql)
            #print("DATA sent")
        except Exception as e:
            print("error in insertDATA")
            print(e)
            return
        return deferred
------------------

Anyway, I'm now stuck at other levels, and I'm kind of out of ideas and the
customer wants (or has to) finish the whole project in a  very, very short
notice. Like yesterday. And my experience in Python and Twisted is not at
the level to solve problems and fix bugs quickly.

Since the program is written using Twisted, if anyone likes to step over,
contact me directly and i'll provide details.

Pandelis Theodosiou
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/d3e5035f/attachment-0001.htm 

From general at vultaire.net  Fri Sep 10 12:39:13 2010
From: general at vultaire.net (Paul Goins)
Date: Sat, 11 Sep 2010 01:39:13 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
Message-ID: <4C8A5F31.8020305@vultaire.net>

Thanks for the code example.

I can't offer to take this work over, but maybe I can make a comment. 
There's one part that stands out to me.

>          try:
>              deferred = self.dbpool.runOperation(sql)
>              #print("DATA sent")
>          except Exception as e:
>              print("error in insertDATA")
>              print(e)
>              return
>          return deferred

It seems like maybe you have a misunderstanding about how Deferreds 
generally work in Twisted.  (Been there myself.)  Basically, the above 
try/except block won't work to catch errors from most Deferreds... well, 
at least not without some extra magic.

You really should read the Deferred section of the Twisted documentation 
to understand how errors are handled.

Docs are here: 
http://twistedmatrix.com/documents/current/core/howto/defer.html

----

Basically, to "fix" the above code's error catching, you have two choices:

1. You can add an errback to the deferred.  This is the "standard" 
Twisted way, and would replace the try/except block entirely.

2. You can use the @inlineCallbacks decorator (from 
twisted.internet.defer), and yield on the Deferred.  This is easier, and 
it allows try/except blocks, but there's some gotchas.

inlineCallbacks is what I used when I was learning Twisted, and you may 
want to try that for now.  But please understand that it hides details 
about how Deferreds and callbacks really work.  When you find time, read 
the Deferred docs.

----

Best of luck,

- Paul Goins


From d_belkhiter at yahoo.fr  Fri Sep 10 12:55:01 2010
From: d_belkhiter at yahoo.fr (belk Dj)
Date: Fri, 10 Sep 2010 16:55:01 +0000 (GMT)
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
Message-ID: <228404.72208.qm@web24406.mail.ird.yahoo.com>

I need to communicate with servers over tcp and also communicate with other servers over udp.
It seems not possible to launch two reactor objects one for tcp and one for udp.
The code after a reactor.run is not called.
How can this can be solved ?

One more thing that deals with timer.
When i send a message to a server if after some time i don't get an acknowledge i re send the message. 
And that x times.
To do that i use Timer. When i send the message i start the timer if the acknowledge comes before the timeout i cancel the timer.
If i don't receive this acknwledge in time i cancel the timer i re send the previous message and i re start the timer.

In this two cases the program fails with the message the timer is still started.
What is the issue ? 

Regards


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/2b939a7f/attachment.htm 

From lvh at laurensvh.be  Fri Sep 10 13:01:41 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 10 Sep 2010 19:01:41 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
Message-ID: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>

I'll give a very practical example of an example request + response, because
I'm not entirely sure I communicated that properly. The code we're
discussing is part of a TokenEndpoint, which is an IResource. Something (a
client, in OAuth terminology) makes a request that looks like this:

---
POST /token HTTP/1.1
Host: server.example.com
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id=s6BhdRkqt3&client_secret=47HDu8s&username=johndoe&password=A3ddj3w
---

And hopefully the code we're discussing answers with a request that looks
like this:

---
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
"access_token":"SlAV32hkKG",
"expires_in":3600,
 "refresh_token":"8xLOxBtZp8"
"scope": "tummies cookies parrots"
}
---

Where, as mentioned before, everything besides "access_token" is not always
required (but it must be possible to set them, because occasionally they are
required).

On Fri, Sep 10, 2010 at 2:34 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> for any given cred implementation, there are two key questions:
>
>    1. What is the avatar interface?
>    2. What is the associated mind interface?
>
> If we're not talking about a system where the avatar interface (the one
> passed to 'login', the one that the realm must return something that gets
> implemented) is IResource, then that's the problem.  What *is* that
> interface that you're talking about?  Be very specific: what methods does it
> have and why?
>

Okay, to be specific: I believe the appropriate interface is IResource. This
is in line with t.web's general way of interacting with cred: you give me
credentials, I give you a protected IResource.


> It sounds like OAuth is very precisely implementing something that maps
> almost exactly onto the *checker* part of cred, but you're doing it by
> implementing a realm to allow applications to provide their own logic.  This
> might not be the wrong idea, but it needs to be spelled out very clearly.
>

Doing everything in the checker probably might make more sense. The reason I
originally thought to do this in the IRealm is that I figured credentials
checkers should just check credentials, and creating a new credential (the
access token) wasn't part of ICredentialsChecker's job (more like IRealm's
job). Apparently I was mistaken.


> As you describe it:
>
> token endpoints let you trade in some credentials that prove you're
> supposed to have access for a token that actually *gives* you that access
>
> In cred-ese, that would be "checkers let you trade in some credentials that
> prove you're supposed to have access for an <avatar ID, which you give to a
> Realm> that actually *gives* you that access".  As far as the OAuth response
> is concerned, it's like a checker.  Looking at the individual parts,
> assuming that the avatar interface for the purposes of this discussion is
> IResource, it breaks down like this in my mind:
>
>     - the access token (an ascii string, mandatory)
>
> Avatar ID.  (See, it's a str!)
>

Heh, okay; as long as there's a plausible way to get the other important
information (see rest of email) into the HTTP response, I'll believe you.

>     - the expiration time (optional)
>
> Implementation detail of the session.  Avatars are actually sessions, which
> expire: sometimes (as with POP) at the end of a connection, sometimes (as
> with nevow.guard's HTTP support) with a session timeout.
>

Right, but:
a) The avatar needs to know about this timeout, since the timeout
information needs to be able to make it into the HTTP response.
b) The expiration time is only known to the thing that creates the access
token (obviously). From the previous discussion, this is apparently
ICredentialsChecker.

c) (From (a, b)) The ICredentialsChecker needs to be able to communicate the
expiration to the avatar.
d) The ICredentialsChecker and IRealm can only communicate through the
avatarId.

Conclusion (from c,d): The expiration time needs to be in the avatarId?

>     - the refresh token (another ascii string, similar to the access token,
> optional)
>
>
> Implementation detail of the authentication protocol.  The client library
> and server library should be transparently refreshing this without telling
> either the client application code or server application code, right?
>

Sure, but we're still writing library code here.

If the avatar interface isn't actually IResource, but a new interface
IAccessToken, getting the refresh token later might be feasible. (It should
be a different interface, because in order to create a refresh token outside
of this entire cred cycle, I need to know about the thing it's refreshing --
so, the information in the response needs to be easily accessible and not
just an opaque IResource).

I agree entirely that clever client library code would abstract this mess
away from application code. However, right now this code still needs to
somehow be able to eventually produce HTTP responses that don't abstract
anything yet and just contain all the appropriate data, because that's just
what the OAuth spec says it needs to be able to do. There isn't any real
application code in the token endpoint; they're pretty similar for all OAuth
setups, and customization would typically happen through implementing the
appropriate ICredentialsChecker.

    - scope (an ascii string consisting of a set of space-separated words,
> optional)
>
>
> This part doesn't quite fit, but could be expressed in one of two ways: a
> modification to the avatar ID, or as some extra structure on the Mind that
> modifies what functionality the Realm bundles in to your avatar
> implementation (without changing the interface provided by that object, of
> course).
>

Unfortunately I don't believe this can be done through the mind. Again
working under the previous assumption that ICredentialsChecker and not the
IRealm is responsible for creating the access token, and scope is known to
the thing that makes the access token, the ICredentialsChecker knows about
the scope. Unfortunately the only way to pass stuff  between the
ICredentialsChecker and the IRealm is the avatar ID, so you don't have a
choice.


thanks for your infinite patience,
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/76080471/attachment.htm 

From ypercube at gmail.com  Fri Sep 10 15:09:17 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 22:09:17 +0300
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
In-Reply-To: <228404.72208.qm@web24406.mail.ird.yahoo.com>
References: <228404.72208.qm@web24406.mail.ird.yahoo.com>
Message-ID: <AANLkTikcuEW-pGSVPy+fs9A2crKmF5HBBrXOymif7N+Z@mail.gmail.com>

On Fri, Sep 10, 2010 at 7:55 PM, belk Dj <d_belkhiter at yahoo.fr> wrote:

> I need to communicate with servers over tcp and also communicate with other
> servers over udp.
> It seems not possible to launch two reactor objects one for tcp and one for
> udp.
> The code after a reactor.run is not called.
> How can this can be solved ?
>
>
I'm not an expert in any way, but I've made something similar using 2
factories.

I think that it is also possible with one factory that uses 2 protocols.

The code after reactor.run() will be invoked only after the reactor stops.
So, you can have 2 factories, each with a different protocol (1 tcp, 1 udp)
and then start the reactor.

Pandelis


> One more thing that deals with timer.
> When i send a message to a server if after some time i don't get an
> acknowledge i re send the message.
> And that x times.
> To do that i use Timer. When i send the message i start the timer if the
> acknowledge comes before the timeout i cancel the timer.
> If i don't receive this acknwledge in time i cancel the timer i re send the
> previous message and i re start the timer.
>
> In this two cases the program fails with the message the timer is still
> started.
> What is the issue ?
>
> Regards
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/7848c316/attachment-0001.htm 

From ypercube at gmail.com  Fri Sep 10 15:15:17 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 22:15:17 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <4C8A5F31.8020305@vultaire.net>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
	<4C8A5F31.8020305@vultaire.net>
Message-ID: <AANLkTim9uKsww-xpWCWjOvpdohD-SXad=mrTxA1X_SNy@mail.gmail.com>

On Fri, Sep 10, 2010 at 7:39 PM, Paul Goins <general at vultaire.net> wrote:

> Thanks for the code example.
>
> I can't offer to take this work over, but maybe I can make a comment.
> There's one part that stands out to me.
>
> >          try:
> >              deferred = self.dbpool.runOperation(sql)
> >              #print("DATA sent")
> >          except Exception as e:
> >              print("error in insertDATA")
> >              print(e)
> >              return
> >          return deferred
>
> It seems like maybe you have a misunderstanding about how Deferreds
> generally work in Twisted.  (Been there myself.)  Basically, the above
> try/except block won't work to catch errors from most Deferreds... well,
> at least not without some extra magic.
>

That is correct. I have only basic understanding of Deferreds and none about
the Errbacks. I realized from various errors that this exception was raised
when errors appeared in other parts of the code.

>
> You really should read the Deferred section of the Twisted documentation
> to understand how errors are handled.
>
> Docs are here:
> http://twistedmatrix.com/documents/current/core/howto/defer.html
>
> ----
>
> Basically, to "fix" the above code's error catching, you have two choices:
>
> 1. You can add an errback to the deferred.  This is the "standard"
> Twisted way, and would replace the try/except block entirely.
>
> 2. You can use the @inlineCallbacks decorator (from
> twisted.internet.defer), and yield on the Deferred.  This is easier, and
> it allows try/except blocks, but there's some gotchas.
>
> inlineCallbacks is what I used when I was learning Twisted, and you may
> want to try that for now.  But please understand that it hides details
> about how Deferreds and callbacks really work.  When you find time, read
> the Deferred docs.
>
> ----
>
> Best of luck,
>
> - Paul Goins
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/7f7f69b2/attachment.htm 

From exarkun at twistedmatrix.com  Fri Sep 10 16:29:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 10 Sep 2010 20:29:28 -0000
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
Message-ID: <20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>

On 05:01 pm, lvh at laurensvh.be wrote:
>
>Right, but:
>a) The avatar needs to know about this timeout, since the timeout
>information needs to be able to make it into the HTTP response.
>b) The expiration time is only known to the thing that creates the 
>access
>token (obviously). From the previous discussion, this is apparently
>ICredentialsChecker.

Is the timeout authenticated?

Jean-Paul


From lvh at laurensvh.be  Fri Sep 10 16:50:20 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 10 Sep 2010 22:50:20 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
	<20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>
Message-ID: <AANLkTi=TXbuE_tGwHiKvMPORB067irNMyR-n751DCFR+@mail.gmail.com>

On Fri, Sep 10, 2010 at 10:29 PM, <exarkun at twistedmatrix.com> wrote:
>
> Is the timeout authenticated?
>
> Jean-Paul
>
>
In the sense that it's not a disaster if you lie about it -- no.

Timeouts are generally optional and really just a friendly hint to the
client receiving the token to not expect it to work after X time.

Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/1952c9c1/attachment.htm 

From lance.barisdale at gmail.com  Fri Sep 10 17:32:54 2010
From: lance.barisdale at gmail.com (=?utf-8?B?bGFuY2UuYmFyaXNkYWxlQGdtYWlsLmNvbQ==?=)
Date: Fri, 10 Sep 2010 14:32:54 -0700
Subject: [Twisted-Python]
	=?utf-8?q?Twisted-Python_Digest=2C_Vol_78=2C_Iss?= =?utf-8?q?ue_15?=
Message-ID: <4c8aa3f9.4f7ddc0a.3511.ffff8012@mx.google.com>



Sent from my HTC on the Now Network from Sprint!

----- Reply message -----
From: twisted-python-request at twistedmatrix.com
Date: Fri, Sep 10, 2010 12:09 pm
Subject: Twisted-Python Digest, Vol 78, Issue 15
To: <twisted-python at twistedmatrix.com>

Send Twisted-Python mailing list submissions to
	twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
	twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
	twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

   1. Re: Strange error: SQL-Server tries to rollback (Paul Goins)
   2. reactor for both udp and tcp/ timer issue (belk Dj)
   3. Re: twisted cred: why does avatarId need to be a	str?
      (Laurens Van Houtven)
   4. Re: reactor for both udp and tcp/ timer issue
      (Pantelis Theodosiou)


----------------------------------------------------------------------

Message: 1
Date: Sat, 11 Sep 2010 01:39:13 +0900
From: Paul Goins <general at vultaire.net>
Subject: Re: [Twisted-Python] Strange error: SQL-Server tries to
	rollback
To: twisted-python at twistedmatrix.com
Message-ID: <4C8A5F31.8020305 at vultaire.net>
Content-Type: text/plain; charset=UTF-8; format=flowed

Thanks for the code example.

I can't offer to take this work over, but maybe I can make a comment. 
There's one part that stands out to me.

>          try:
>              deferred = self.dbpool.runOperation(sql)
>              #print("DATA sent")
>          except Exception as e:
>              print("error in insertDATA")
>              print(e)
>              return
>          return deferred

It seems like maybe you have a misunderstanding about how Deferreds 
generally work in Twisted.  (Been there myself.)  Basically, the above 
try/except block won't work to catch errors from most Deferreds... well, 
at least not without some extra magic.

You really should read the Deferred section of the Twisted documentation 
to understand how errors are handled.

Docs are here: 
http://twistedmatrix.com/documents/current/core/howto/defer.html

----

Basically, to "fix" the above code's error catching, you have two choices:

1. You can add an errback to the deferred.  This is the "standard" 
Twisted way, and would replace the try/except block entirely.

2. You can use the @inlineCallbacks decorator (from 
twisted.internet.defer), and yield on the Deferred.  This is easier, and 
it allows try/except blocks, but there's some gotchas.

inlineCallbacks is what I used when I was learning Twisted, and you may 
want to try that for now.  But please understand that it hides details 
about how Deferreds and callbacks really work.  When you find time, read 
the Deferred docs.

----

Best of luck,

- Paul Goins



------------------------------

Message: 2
Date: Fri, 10 Sep 2010 16:55:01 +0000 (GMT)
From: belk Dj <d_belkhiter at yahoo.fr>
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
To: twisted-python at twistedmatrix.com
Message-ID: <228404.72208.qm at web24406.mail.ird.yahoo.com>
Content-Type: text/plain; charset="utf-8"

I need to communicate with servers over tcp and also communicate with other servers over udp.
It seems not possible to launch two reactor objects one for tcp and one for udp.
The code after a reactor.run is not called.
How can this can be solved ?

One more thing that deals with timer.
When i send a message to a server if after some time i don't get an acknowledge i re send the message. 
And that x times.
To do that i use Timer. When i send the message i start the timer if the acknowledge comes before the timeout i cancel the timer.
If i don't receive this acknwledge in time i cancel the timer i re send the previous message and i re start the timer.

In this two cases the program fails with the message the timer is still started.
What is the issue ? 

Regards


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/2b939a7f/attachment-0001.htm 

------------------------------

Message: 3
Date: Fri, 10 Sep 2010 19:01:41 +0200
From: Laurens Van Houtven <lvh at laurensvh.be>
Subject: Re: [Twisted-Python] twisted cred: why does avatarId need to
	be a	str?
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3 at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

I'll give a very practical example of an example request + response, because
I'm not entirely sure I communicated that properly. The code we're
discussing is part of a TokenEndpoint, which is an IResource. Something (a
client, in OAuth terminology) makes a request that looks like this:

---
POST /token HTTP/1.1
Host: server.example.com
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id=s6BhdRkqt3&client_secret=47HDu8s&username=johndoe&password=A3ddj3w
---

And hopefully the code we're discussing answers with a request that looks
like this:

---
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
"access_token":"SlAV32hkKG",
"expires_in":3600,
 "refresh_token":"8xLOxBtZp8"
"scope": "tummies cookies parrots"
}
---

Where, as mentioned before, everything besides "access_token" is not always
required (but it must be possible to set them, because occasionally they are
required).

On Fri, Sep 10, 2010 at 2:34 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> for any given cred implementation, there are two key questions:
>
>    1. What is the avatar interface?
>    2. What is the associated mind interface?
>
> If we're not talking about a system where the avatar interface (the one
> passed to 'login', the one that the realm must return something that gets
> implemented) is IResource, then that's the problem.  What *is* that
> interface that you're talking about?  Be very specific: what methods does it
> have and why?
>

Okay, to be specific: I believe the appropriate interface is IResource. This
is in line with t.web's general way of interacting with cred: you give me
credentials, I give you a protected IResource.


> It sounds like OAuth is very precisely implementing something that maps
> almost exactly onto the *checker* part of cred, but you're doing it by
> implementing a realm to allow applications to provide their own logic.  This
> might not be the wrong idea, but it needs to be spelled out very clearly.
>

Doing everything in the checker probably might make more sense. The reason I
originally thought to do this in the IRealm is that I figured credentials
checkers should just check credentials, and creating a new credential (the
access token) wasn't part of ICredentialsChecker's job (more like IRealm's
job). Apparently I was mistaken.


> As you describe it:
>
> token endpoints let you trade in some credentials that prove you're
> supposed to have access for a token that actually *gives* you that access
>
> In cred-ese, that would be "checkers let you trade in some credentials that
> prove you're supposed to have access for an <avatar ID, which you give to a
> Realm> that actually *gives* you that access".  As far as the OAuth response
> is concerned, it's like a checker.  Looking at the individual parts,
> assuming that the avatar interface for the purposes of this discussion is
> IResource, it breaks down like this in my mind:
>
>     - the access token (an ascii string, mandatory)
>
> Avatar ID.  (See, it's a str!)
>

Heh, okay; as long as there's a plausible way to get the other important
information (see rest of email) into the HTTP response, I'll believe you.

>     - the expiration time (optional)
>
> Implementation detail of the session.  Avatars are actually sessions, which
> expire: sometimes (as with POP) at the end of a connection, sometimes (as
> with nevow.guard's HTTP support) with a session timeout.
>

Right, but:
a) The avatar needs to know about this timeout, since the timeout
information needs to be able to make it into the HTTP response.
b) The expiration time is only known to the thing that creates the access
token (obviously). From the previous discussion, this is apparently
ICredentialsChecker.

c) (From (a, b)) The ICredentialsChecker needs to be able to communicate the
expiration to the avatar.
d) The ICredentialsChecker and IRealm can only communicate through the
avatarId.

Conclusion (from c,d): The expiration time needs to be in the avatarId?

>     - the refresh token (another ascii string, similar to the access token,
> optional)
>
>
> Implementation detail of the authentication protocol.  The client library
> and server library should be transparently refreshing this without telling
> either the client application code or server application code, right?
>

Sure, but we're still writing library code here.

If the avatar interface isn't actually IResource, but a new interface
IAccessToken, getting the refresh token later might be feasible. (It should
be a different interface, because in order to create a refresh token outside
of this entire cred cycle, I need to know about the thing it's refreshing --
so, the information in the response needs to be easily accessible and not
just an opaque IResource).

I agree entirely that clever client library code would abstract this mess
away from application code. However, right now this code still needs to
somehow be able to eventually produce HTTP responses that don't abstract
anything yet and just contain all the appropriate data, because that's just
what the OAuth spec says it needs to be able to do. There isn't any real
application code in the token endpoint; they're pretty similar for all OAuth
setups, and customization would typically happen through implementing the
appropriate ICredentialsChecker.

    - scope (an ascii string consisting of a set of space-separated words,
> optional)
>
>
> This part doesn't quite fit, but could be expressed in one of two ways: a
> modification to the avatar ID, or as some extra structure on the Mind that
> modifies what functionality the Realm bundles in to your avatar
> implementation (without changing the interface provided by that object, of
> course).
>

Unfortunately I don't believe this can be done through the mind. Again
working under the previous assumption that ICredentialsChecker and not the
IRealm is responsible for creating the access token, and scope is known to
the thing that makes the access token, the ICredentialsChecker knows about
the scope. Unfortunately the only way to pass stuff  between the
ICredentialsChecker and the IRealm is the avatar ID, so you don't have a
choice.


thanks for your infinite patience,
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/76080471/attachment-0001.htm 

------------------------------

Message: 4
Date: Fri, 10 Sep 2010 22:09:17 +0300
From: Pantelis Theodosiou <ypercube at gmail.com>
Subject: Re: [Twisted-Python] reactor for both udp and tcp/ timer
	issue
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<AANLkTikcuEW-pGSVPy+fs9A2crKmF5HBBrXOymif7N+Z at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

On Fri, Sep 10, 2010 at 7:55 PM, belk Dj <d_belkhiter at yahoo.fr> wrote:

> I need to communicate with servers over tcp and also communicate with other
> servers over udp.
> It seems not possible to launch two reactor objects one for tcp and one for
> udp.
> The code after a reactor.run is not called.
> How can this can be solved ?
>
>
I'm not an expert in any way, but I've made something similar using 2
factories.

I think that it is also possible with one factory that uses 2 protocols.

The code after reactor.run() will be invoked only after the reactor stops.
So, you can have 2 factories, each with a different protocol (1 tcp, 1 udp)
and then start the reactor.

Pandelis


> One more thing that deals with timer.
> When i send a message to a server if after some time i don't get an
> acknowledge i re send the message.
> And that x times.
> To do that i use Timer. When i send the message i start the timer if the
> acknowledge comes before the timeout i cancel the timer.
> If i don't receive this acknwledge in time i cancel the timer i re send the
> previous message and i re start the timer.
>
> In this two cases the program fails with the message the timer is still
> started.
> What is the issue ?
>
> Regards
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/7848c316/attachment.htm 

------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 78, Issue 15
**********************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/ec484e26/attachment-0001.htm 

From screwtape at froup.com  Fri Sep 10 21:21:14 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 11 Sep 2010 11:21:14 +1000
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
Message-ID: <20100911012114.GM18053@boombah.thristian.org>

On Fri, Sep 10, 2010 at 06:54:34PM +0300, Pantelis Theodosiou wrote:
>         sql = ''.join(
>             [
>              "INSERT INTO fts_data VALUES ("
>                     ,  "'" , serialNumber , "'"
>             , "," , "'" , customerAccount , "'"
>             , "," , "'" , dateAndTime , "'"
>             , "," , camcount
>             , "," , fpv
>             , "," , "'" , reff , "'"
>             , "," , "'" , restOfFrame , "'"
>             , ") "
>             ] )

This is unrelated to your Twisted problem, but *please* tell me you are
not building SQL like this in production code.

If you need a reminder, the best possible way to do this in Python[1]
is:

    sqlPattern = """
	INSERT INTO fts_data VALUES (
	    %s, %s, %s, %s, %s, %s, %s
	);
	"""

    # if you're using a DB-API module directly:
    cursor.execute(sqlPattern, [serialNumber, customerAccount,
	    dateAndTime, camcount, fpv, reff, restOfFrame])

    # if you're using ADBAPI:
    deferred = pool.runOperation(sqlPattern, [serialNumber,
	    customerAccount, dateAndTime, camcount, fpv, reff,
	    restOfFrame])

Note that there's no "%" formatting operator between sqlPattern and the
list of values to be substituted in; the substitution is done with all
the proper quoting and escaping, not with Python's na?ve formatting
operator.

Apologies if you already knew this, but apart from correctness it's one
of the few security issues where doing things the safe way is actually
easier than doing it the unsafe way - for a start, the SQL is all
together in one string. :)

[1]: The examples here use what DB-API calls the "format" quoting
style. Not all DB-API modules use it, but pymssql and psycopg2 do.


From therve at free.fr  Sat Sep 11 19:18:21 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Sep 2010 19:18:21 -0400
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
Message-ID: <1284247101.2007.1.camel@localhost>

It's this time of the year again! From the dangerous and intrepid land
of Montr?al, Canada, I have the pleasure to announce the first 10.2.0
pre-release.

Tarballs for Twisted 10.2.0pre1 are now available at:
  http://people.canonical.com/~therve/Twisted/10.2.0pre1/


Highlights include:

 * A new implementation of the Deferred callbacks firing, which now
handles chains iteratively instead of recursively, and should prevent
recursion errors.

 * Deferred.setTimeout has finally been removed.

And the usual load of bug fixes. For more information, see the NEWS file.


Please download the tarballs and test them as much as possible. I
intend to do a final release within the next 2 weeks, if I didn't die
by ingestion of poutine.

Thanks,

Thomas



From therve at free.fr  Sat Sep 11 19:58:38 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Sep 2010 19:58:38 -0400
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <1284249518.2007.2.camel@localhost>

Of the subject should say 10.2.0pre1, I hope you translated.

-- 
Thomas



From exarkun at twistedmatrix.com  Sun Sep 12 00:05:52 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Sep 2010 04:05:52 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1284264352.76.482839843@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100912/a66a278f/attachment.htm 

From glyph at twistedmatrix.com  Sun Sep 12 02:04:39 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Sep 2010 02:04:39 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
Message-ID: <A2332B39-D145-493D-B8BD-D14527A21EA9@twistedmatrix.com>


On Sep 10, 2010, at 1:01 PM, Laurens Van Houtven wrote:


> Okay, to be specific: I believe the appropriate interface is IResource. This is in line with t.web's general way of interacting with cred: you give me credentials, I give you a protected IResource.

This doesn't quite make sense to me.

Mostly, I don't understand what the moving pieces are here.  If this is all to implement a "token endpoint" which doesn't "actually serve protected resources", then what is the IResource being returned by the realm actually *doing*?  If it is not, itself, a "protected resource", then isn't the amount of stuff that its IResource can do severely restricted (i.e. restricted to doing a few OAuth-specific HTTP things) and therefore actually an avatar of a completely different, OAuth-specific interface, which just happens to be wrapped in an IResource by the OAuth implementation for the benefit of formatting those OAuth-specific things over an HTTP channel?

Based on what you've said, I would expect the avatar interface to be 'IToken', since the point of this authentication is to 'generate tokens'.

> It sounds like OAuth is very precisely implementing something that maps almost exactly onto the checker part of cred, but you're doing it by implementing a realm to allow applications to provide their own logic.  This might not be the wrong idea, but it needs to be spelled out very clearly.
> 
> Doing everything in the checker probably might make more sense. The reason I originally thought to do this in the IRealm is that I figured credentials checkers should just check credentials, and creating a new credential (the access token) wasn't part of ICredentialsChecker's job (more like IRealm's job). Apparently I was mistaken.

I'm going to handwave a bit here and pretend we're talking about a thing that actually does serve arbitrary resources, so my answers may be slightly off.  But I think they may be applicable either way.

Speaking the authentication protocol is the authentication implementation's job, not the realm or the checker.  For example: if you need to generate a challenge as part of the authentication process, the checker probably doesn't need to get involved there.  If you need to ask the checker something about the challenge (let's say you have a list of persistent salts), then there needs to be a method on the credential interface to allow the checker to relay that information back.

It strikes me that creating a new access token is also an authentication feature.  If it is, then it goes into the OAuth resource somewhere.  If it needs to be pluggable then it needs to go into the ICredentialsChecker or possibly the realm, but it's possible that this is just an OAuth specific interface that is plugged in to the OAuth-doing IResource separately, as a constructor argument that has nothing to do with cred.

> As you describe it:
>> token endpoints let you trade in some credentials that prove you're supposed to have access for a token that actually *gives* you that access
> 
> In cred-ese, that would be "checkers let you trade in some credentials that prove you're supposed to have access for an <avatar ID, which you give to a Realm> that actually *gives* you that access".  As far as the OAuth response is concerned, it's like a checker.  Looking at the individual parts, assuming that the avatar interface for the purposes of this discussion is IResource, it breaks down like this in my mind:
>>     - the access token (an ascii string, mandatory)
> 
> Avatar ID.  (See, it's a str!)
> 
> Heh, okay; as long as there's a plausible way to get the other important information (see rest of email) into the HTTP response, I'll believe you.

Yes.  The way to get it into the HTTP response is: put it into the HTTP response :).  You don't necessarily need to cram it into the realm.

>>     - the expiration time (optional)
> Implementation detail of the session.  Avatars are actually sessions, which expire: sometimes (as with POP) at the end of a connection, sometimes (as with nevow.guard's HTTP support) with a session timeout.
> 
> Right, but:
> a) The avatar needs to know about this timeout, since the timeout information needs to be able to make it into the HTTP response.

I'll stop you right there: No.  (We can skip the rest of points b, c, and d, since they all apparently follow from this.)

The avatar's job is to give you an IResource, but the OAuth implementation doesn't necessarily need to pass through either the arguments to that resource or that resource's return values (from getChild or render) exactly.  If the timeout needs to be put into the HTTP response as a header, the OAuth resource could wrap the IResource value that it gets from the realm and set the header before calling the ultimate resource's child.

Note that this isn't just the credentials checker: this is the OAuth implementation.  Relaying information there is easy though: depending on how the checker itself gets created and parameterized, either you can have the checker simply have a reference back to the OAuth resource so it can call some methods, or you can expand the OAuth credentials interface to have a method that the checker uses to pass that information back along with the resource.

>>     - the refresh token (another ascii string, similar to the access token, optional)
> 
> Implementation detail of the authentication protocol.  The client library and server library should be transparently refreshing this without telling either the client application code or server application code, right?
> 
> Sure, but we're still writing library code here.

> If the avatar interface isn't actually IResource, but a new interface IAccessToken, getting the refresh token later might be feasible. (It should be a different interface, because in order to create a refresh token outside of this entire cred cycle, I need to know about the thing it's refreshing -- so, the information in the response needs to be easily accessible and not just an opaque IResource).
> 
> I agree entirely that clever client library code would abstract this mess away from application code. However, right now this code still needs to somehow be able to eventually produce HTTP responses that don't abstract anything yet and just contain all the appropriate data, because that's just what the OAuth spec says it needs to be able to do. There isn't any real application code in the token endpoint; they're pretty similar for all OAuth setups, and customization would typically happen through implementing the appropriate ICredentialsChecker.

Again: producing HTTP responses is not the same thing as producing IResource implementations.  You can have an HTTP response produced by an IResource that wraps another IResource and adds some special sauce to the response.  So this information still never needs to make it to the realm.

>>     - scope (an ascii string consisting of a set of space-separated words, optional)
> 
> 
> This part doesn't quite fit, but could be expressed in one of two ways: a modification to the avatar ID, or as some extra structure on the Mind that modifies what functionality the Realm bundles in to your avatar implementation (without changing the interface provided by that object, of course).
> 
> Unfortunately I don't believe this can be done through the mind. Again working under the previous assumption that ICredentialsChecker and not the IRealm is responsible for creating the access token, and scope is known to the thing that makes the access token, the ICredentialsChecker knows about the scope. Unfortunately the only way to pass stuff  between the ICredentialsChecker and the IRealm is the avatar ID, so you don't have a choice.

OK, I admit it, by the time I get here I'm lost.  We should try to meet up and have an interactive conversation about this, because I have a ton of questions about this, and I don't understand who generates the scope ID and why, and why this bit of information would need to be relayed between the checker and the realm in the process of authentication.  Basically this goes back to the first confusion I mentioned at the beginning of this email: I don't understand why the realm is giving back an IResource if the whole purpose is to just generate tokens and return them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100912/434b4157/attachment-0001.htm 

From andrew at bemusement.org  Sun Sep 12 08:05:55 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 12 Sep 2010 22:05:55 +1000
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <20100912120555.GA2443@aihal.home.puzzling.org>

Thomas Herv? wrote:
[...]
> 
>  * Deferred.setTimeout has finally been removed.

Hooray!

-Andrew.



From jml at mumak.net  Mon Sep 13 08:39:36 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 13 Sep 2010 13:39:36 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>

On Sun, Sep 12, 2010 at 12:18 AM, Thomas Herv? <therve at free.fr> wrote:
> It's this time of the year again! From the dangerous and intrepid land
> of Montr?al, Canada, I have the pleasure to announce the first 10.2.0
> pre-release.
>

Hey, that's where I did the last pre-release!

> Tarballs for Twisted 10.2.0pre1 are now available at:
> ?http://people.canonical.com/~therve/Twisted/10.2.0pre1/
>

Woot!

...
> Please download the tarballs and test them as much as possible. I
> intend to do a final release within the next 2 weeks, if I didn't die
> by ingestion of poutine.

Since you're the first person to do a release after I wrote the
process document, I have to know: did it help? any bugs? any
missing/confusing bits?

jml


From mhubig at imko.de  Tue Sep 14 05:24:32 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 11:24:32 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
Message-ID: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>

Hi @all!

I'm trying to write a python library module for a special
serial communication protocol called IMPBUS. To use the serial
interface for sending and receiving packets as for now I'm
sub-classing pyserial. My code looks like this:

from serial import Serial, SerialExceptionfrom serial import
EIGHTBITS, PARITY_ODD, STOPBITS_TWOimport binasciiclass
SerialDevice(Serial):    def __init__(self, port):
Serial.__init__(self)        self.port = port        self.baudrate =
57600        self.bytesize = EIGHTBITS        self.parity = PARITY_ODD
       self.stopbits = STOPBITS_TWO        self.timeout = 0
self.xonxoff = 0        self.rtscts = 0        self.dsrdtr = 0
def _write(self, packet):        fileno = self.fileno()        while
True:            readable, writeable, excepts = select([], [fileno],
[], 0.1)            if fileno in writeable:                length =
self.write(packet)                break        return length
def _read(self):        fileno = self.fileno()        while True:
      readable, writeable, excepts = select([], [fileno], [], 0.1)
       if fileno in readable:                header = self.read(7)
           length = int(binascii.b2a_hex(header[3]), 16)
 data = self.read(length)                packet = header + data
        break        return packet        def talk(self, packet):
  self._write(packet)        responce = self._read()        return
responce

But the problem is that I can't use select with pyserial on Windows,
because it don't provide the fileno() methode. So after some googling
I found twisted.internet.serialport "A select()able serial device, acting
as a transport."

I never used twisted before so I'm a little overwhelmed by how I can
replace pyserial with twisted in the code above ... maybe someone can
point me to the right direction. It seems I need a "Protocol" and a
"receiver" ...

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/337404ea/attachment.htm 

From exarkun at twistedmatrix.com  Tue Sep 14 08:08:36 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 12:08:36 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
Message-ID: <20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>

On 09:24 am, mhubig at imko.de wrote:
>Hi @all!
>
>I'm trying to write a python library module for a special
>serial communication protocol called IMPBUS. To use the serial
>interface for sending and receiving packets as for now I'm
>sub-classing pyserial. My code looks like this:
>
>[snip]
>
>But the problem is that I can't use select with pyserial on Windows,
>because it don't provide the fileno() methode. So after some googling
>I found twisted.internet.serialport "A select()able serial device, 
>acting
>as a transport."
>
>I never used twisted before so I'm a little overwhelmed by how I can
>replace pyserial with twisted in the code above ... maybe someone can
>point me to the right direction. It seems I need a "Protocol" and a
>"receiver" ...

See the serialport examples on the website.  A couple are linked from 
http://twistedmatrix.com/documents/current/core/examples/.

You do indeed want a Protocol subclass.  The code from your 
"self.read(7)" line to the end of that loop will probably end up in a 
dataReceived method - but note that you'll have to do some buffering, as 
you can't be assured that dataReceived will get called with exactly the 
number of bytes you want at a time, so you may have to collect data from 
multiple dataReceived calls (likewise you may get more than you want at 
once, and need to split it up).

Jean-Paul


From twisted-web at udmvt.ru  Tue Sep 14 08:29:34 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Tue, 14 Sep 2010 16:29:34 +0400
Subject: [Twisted-Python] Just curious about EINTR in socket.recv()
Message-ID: <20100914122934.GC8187@ruber.office.udmvt.ru>

As far as I know, socket.recv() may raise socket.error exception
in case of error return from recv(2) system call. My system's (Linux i386 2.6.32)
man page say there could be these error values:

       EAGAIN or EWOULDBLOCK
       EBADF
       ECONNREFUSED
       EFAULT
       EINTR
       EINVAL
       ENOMEM
       ENOTCONN
       ENOTSOCK

Now, looking into twisted.internet.tcp, method doRead() on line 443, (twisted 10.1.0)
we may find, that code:
        try:
            data = self.socket.recv(self.bufferSize)
        except socket.error, se:
            if se.args[0] == EWOULDBLOCK:
                return
            else:
                return main.CONNECTION_LOST
        if not data:
            return main.CONNECTION_DONE
        return self.protocol.dataReceived(data)

This is the point in the twisted framework, that decides how TCP socket
will get closed, whether that be in "clean" or "non clean" fashion.

But some error codes, besides EWOULDBLOCK, are not in any way related
to reporting a permanent error, that deserves closing the socket.

Question to Python system library gurus: is socket.recv() supposed to raise socket.error with EINTR code ?
In that case we should return None too, since that operation should be restarted,
and reporting main.CONNECTION_LOST is a bug.

What about ENOMEM case? Is system supposed to have destroyed the socket after that event,
or it can safely recover later, so there is no sense in closing the socket in twisted either?

Sorry, if that is a non-issue, or already tracked, I'm just curious.

-- 
Alexey.


From exarkun at twistedmatrix.com  Tue Sep 14 08:40:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 12:40:27 -0000
Subject: [Twisted-Python] Just curious about EINTR in socket.recv()
In-Reply-To: <20100914122934.GC8187@ruber.office.udmvt.ru>
References: <20100914122934.GC8187@ruber.office.udmvt.ru>
Message-ID: <20100914124027.2058.1257877531.divmod.xquotient.517@localhost.localdomain>

On 12:29 pm, twisted-web at udmvt.ru wrote:
>As far as I know, socket.recv() may raise socket.error exception
>in case of error return from recv(2) system call. My system's (Linux 
>i386 2.6.32)
>man page say there could be these error values:
>
>       EAGAIN or EWOULDBLOCK
>       EBADF
>       ECONNREFUSED
>       EFAULT
>       EINTR
>       EINVAL
>       ENOMEM
>       ENOTCONN
>       ENOTSOCK
>
>Now, looking into twisted.internet.tcp, method doRead() on line 443, 
>(twisted 10.1.0)
>we may find, that code:
>        try:
>            data = self.socket.recv(self.bufferSize)
>        except socket.error, se:
>            if se.args[0] == EWOULDBLOCK:
>                return
>            else:
>                return main.CONNECTION_LOST
>        if not data:
>            return main.CONNECTION_DONE
>        return self.protocol.dataReceived(data)
>
>This is the point in the twisted framework, that decides how TCP socket
>will get closed, whether that be in "clean" or "non clean" fashion.
>
>But some error codes, besides EWOULDBLOCK, are not in any way related
>to reporting a permanent error, that deserves closing the socket.
>
>Question to Python system library gurus: is socket.recv() supposed to 
>raise socket.error with EINTR code ?
>In that case we should return None too, since that operation should be 
>restarted,
>and reporting main.CONNECTION_LOST is a bug.

This particular socket.recv call should not fail with EINTR because it 
is a non-blocking receive.  If you know of a condition which contradicts 
this, please let us know.
>
>What about ENOMEM case? Is system supposed to have destroyed the socket 
>after that event,
>or it can safely recover later, so there is no sense in closing the 
>socket in twisted either?

Python will turn an ENOMEM into a raised MemoryError.  In general in 
Python, it is challenging to do anything useful in response to a 
MemoryError.  It may be possible to recover and continue using the 
socket, or it may not be, there's no way to know in general (and even 
knowing in a particular case can be challenging).  So, without an idea 
of what would be a better way to handle MemoryError, Twisted typically 
treats it the same way it treats any other unexpected exception.  It 
will generally get logged and if it came from a socket.recv() call like 
the one above, that socket will be disconnected and the associated 
protocol object informed.

Jean-Paul


From eulores at gmail.com  Tue Sep 14 09:03:01 2010
From: eulores at gmail.com (eulores)
Date: Tue, 14 Sep 2010 15:03:01 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
Message-ID: <AANLkTikvRjzxhaeehd2eHOySk-G223-ymKdVekzdGGST@mail.gmail.com>

Here is my code for Plug 'n Play detection of serial devices. It's not
yet ready for showtime, but it works with my serial attached Wacom.

Best regards,
eulores


# -*- coding: utf-8 -*-

import sys
if sys.platform == 'win32':
    from twisted.internet import win32eventreactor
    win32eventreactor.install()
from twisted.internet import reactor, protocol
from twisted.internet.task import deferLater, LoopingCall
from twisted.internet.defer import Deferred, inlineCallbacks, returnValue
from twisted.internet.serialport import *
import re

def wait(seconds):
    return deferLater(reactor, seconds, lambda:None)

class StructuredPnP(object):
    ''' The structured PnP field is available with these fields:
            data:    string, required. Original unformatted string.
            other:   string, optional
            rev:     integer, required. Revision of the PnP standard.
100 is standard version 1.00
            eisa:    string, required
            product: string, required
            serial:  string, optional
            klass:   string, optional
            compat:  string, optional. Other older products with
similar functionality
            user:    string, optional. Free flowing field useful for
the end-user
    '''
    def __init__(self, data):
        #data = '\\96,N,8,1(\x01$WAC0608\\\\PEN\\WAC0000\\WACOM
UD\r\nUD-0608-R,V1.4-4\r\nF4)'
        # test string for a 7-bit character string
        #data = 'aaa(bbcccdddd\\eeeeeeee\\fff\\gggg\\hhhhii)'
        # test string for a 6-bit character string
        #data = 'AAA\x08BBCCCDDDD<EEEEEEEE<FFF<GGGG<HHHHII\x09'
        self.data = data
        for key in "other eisa product serial klass compat user".split():
            setattr(self, key, '')
        self.rev = '\0\0'
        prologue = r'(?P<other>[^(]{,16}?)'
        matrix =
r'(?P<rev>..)(?P<eisa>...)(?P<product>....)(?:@(?P<serial>[^@]{,8}))?(?:@(?P<klass>[^@]{,32}))?(?:@(?P<compat>[^@]{,40}))?(?:@(?P<user>.{,40}?))?(?:..)?'
        needle1 = prologue + '\\(' + matrix.replace('@','\\\\') + '\\)'
        needle2 = prologue + '\\\x08' + matrix.replace('@','\\\x3C') + '\\\x09'
        dct = dict()
        mo = re.match(needle1, data, re.S)
        if mo:
            dct = mo.groupdict()
        else:
            mo = re.match(needle2, data, re.S)
            if mo:
                dct = mo.groupdict()
                for k in "eisa product serial klass compat user".split():
                    v = dct[k]
                    dct[k] = ''.join([chr(ord(ch)+0x20) for ch in list(v)])
        for k,v in dct.items():
            setattr(self, k, v)
        self.rev = ((ord(self.rev[0])&0x3f)<<6) + (ord(self.rev[1])&0x3f)
    def __str__(self):
        return self.data
    def __repr__(self):
        l = ['<StructuredPnP object> %r' % self.data]
        for k in "other rev eisa product serial klass compat user".split():
            l.append('  %-8s %r' % (k, getattr(self,k,False)))
        return '\n'.join(l)

class PnPProtocol(protocol.Protocol):
    """ See Plug and Play External COM device Specification, rev 1.00
from Microsoft & Hayes, 1994-1995"""
    def __init__(self, deferred):
        self.deferred = deferred
        self.data = ''
        self.timeout = 1.4
        self.T5 = reactor.callLater(self.timeout, self.deliverPnP)
    def deliverPnP(self):
        self.transport.loseConnection()
        if self.deferred is not None:
            d, self.deferred = self.deferred, None
            d.callback(StructuredPnP(self.data))
    def dataReceived(self, data):
        self.T5.reset(self.timeout)
        self.data += data
        if len(self.data)>=256:
            self.T5.reset(0)
    @inlineCallbacks
    def connectionMade(self):
        while 1:
            # print "2.1.1"
            self.transport.setDTR(1)
            self.transport.setRTS(0)
            yield wait(0.2)
            if not self.transport.getDSR():
                break
            # print "2.1.3 part A"
            self.transport.setDTR(0)
            yield wait(0.2)
            # print "2.1.3 part B"
            self.transport.setDTR(1)
            yield wait(0.2)
            # print "2.1.4"
            self.transport.setRTS(1)
            # timer T5 is now used for per-character timeout
            self.timeout = 0.2
            yield wait(0.2)
            if self.data:
                break
            # print "2.1.5"
            self.transport.setDTR(0)
            self.transport.setRTS(0)
            yield wait(0.2)
            # print "2.1.6"
            self.transport.setDTR(1)
            self.transport.setRTS(1)
            yield wait(0.2)
            break
        if not self.data:
            self.T5.reset(0)
        returnValue(None)
    def connectionLost(self, reason='connectionDone'):
        print "Connection lost:", reason

def pnpString(port=0):
    d = Deferred()
    protocol = PnPProtocol(d)
    try:
        #SerialPort(protocol, port, reactor, baudrate=1200,
bytesize=SEVENBITS, parity=PARITY_NONE, stopbits=STOPBITS_ONE,
timeout=0, xonxoff=0, rtscts=0)
        SerialPort(protocol, port, reactor, baudrate=1200,
bytesize=SEVENBITS, parity=PARITY_NONE, stopbits=STOPBITS_ONE,
xonxoff=0, rtscts=0)
    except serial.SerialException:
        d.callback(StructuredPnP(''))
    return d

@inlineCallbacks
def imRunning():
    print "PnP string: %r" % (yield pnpString(3))
    reactor.stop()

if __name__ == "__main__":
    reactor.callWhenRunning(imRunning)
    reactor.run()



On Tue, Sep 14, 2010 at 11:24 AM, Markus Hubig <mhubig at imko.de> wrote:
> Hi @all!
> I'm trying to write a python library module for a special
> serial communication protocol called IMPBUS. To use the serial
> interface for sending and receiving packets as for now I'm
> sub-classing pyserial. My code looks like this:
>
> But the problem is that I can't use select with pyserial on Windows,
> because it don't provide the fileno() methode. So after some googling
> I found twisted.internet.serialport "A select()able serial device, acting
> as a transport."
> I never used twisted before so I'm a little overwhelmed by how I can
> replace pyserial with twisted in the code above ... maybe someone can
> point me to the right direction. It seems I need a "Protocol" and a
> "receiver" ...
> - Markus
> --
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/147f1bbd/attachment.htm 

From mhubig at imko.de  Tue Sep 14 09:32:29 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 15:32:29 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
Message-ID: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>

On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:

> See the serialport examples on the website.  A couple are linked from
> http://twistedmatrix.com/documents/current/core/examples/.
>

The examples I found are mouse.py and gpsfix.py and there only listening on
the serial line. It seems that with twisted I have some sort of a thread
running
which will trigger some methods (e.g. dataRecieved) as it reads something
from the serial line. How could I send data then?


> You do indeed want a Protocol subclass.


Ok I see, and the Protocol subclass provides the dataReceived method!?


> The code from your "self.read(7)" line to the end of that loop will
> probably

end up in a dataReceived method - but note that you'll have to do some

buffering, as you can't be assured that dataReceived will get called with
> exactly

the number of bytes you want at a time, so you may have to collect data from
> multiple dataReceived calls (likewise you may get more than you want at
> once, and need to split it up).
>

Hmm ok so I have to design dataReceived() to buffer the received data until
it get's
the whole answer packet and than let it call e.g. packetRecieved() to
process the
packet ... I'm mot sure if this asynchronous approach is what I need,
because the
protocol I'm implementing is strict Master-Slave.

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/c7407ee0/attachment.htm 

From vic.norman at gmail.com  Tue Sep 14 09:43:57 2010
From: vic.norman at gmail.com (Victor Norman)
Date: Tue, 14 Sep 2010 09:43:57 -0400
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
Message-ID: <AANLkTinZbgPnSGYN2NKH6e453+aH=taKkMKDNhQpVmjQ@mail.gmail.com>

Markus,

I wonder if you've seen this really excellent tutorial:

http://krondo.com/?page_id=1327

It is one of the finest tutorials I've seen anywhere on the web, on any
topic.

In fact, I think the Twisted leadership should put links to this tutorial
all over their home page.  While the finger "tutorial" is OK, this tutorial
is much much much better, actually explaining *why* you make certain
classes, etc.

Vic

On Tue, Sep 14, 2010 at 9:32 AM, Markus Hubig <mhubig at imko.de> wrote:

> On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:
>
>> See the serialport examples on the website.  A couple are linked from
>> http://twistedmatrix.com/documents/current/core/examples/.
>>
>
> The examples I found are mouse.py and gpsfix.py and there only listening on
> the serial line. It seems that with twisted I have some sort of a thread
> running
> which will trigger some methods (e.g. dataRecieved) as it reads something
> from the serial line. How could I send data then?
>
>
>> You do indeed want a Protocol subclass.
>
>
> Ok I see, and the Protocol subclass provides the dataReceived method!?
>
>
>> The code from your "self.read(7)" line to the end of that loop will
>> probably
>
> end up in a dataReceived method - but note that you'll have to do some
>
> buffering, as you can't be assured that dataReceived will get called with
>> exactly
>
> the number of bytes you want at a time, so you may have to collect data
>> from
>> multiple dataReceived calls (likewise you may get more than you want at
>> once, and need to split it up).
>>
>
> Hmm ok so I have to design dataReceived() to buffer the received data until
> it get's
> the whole answer packet and than let it call e.g. packetRecieved() to
> process the
> packet ... I'm mot sure if this asynchronous approach is what I need,
> because the
> protocol I'm implementing is strict Master-Slave.
>
> - Markus
>
> --
> __________________________________________________________________
>
> IMKO Micromodultechnik GmbH
> Markus Hubig
> System Administration & Development
> Im Stoeck 2
> D-76275 Ettlingen / GERMANY
>
> HR: HRB 360936 Amtsgericht Mannheim
> President: Dipl.-Ing. (FH) Kurt Koehler
>
> Tel: 0049-(0)7243-5921-26
> Fax: 0049-(0)7243-5921-40
> e-mail: mhubig at imko.de
> internet: www.imko.de
> _________________________________________________________________
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
?A designer knows he has achieved perfection not when there is nothing left
to add, but when there is nothing left to take away.? -- Antoine de Saint
Exup?ry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/a166c156/attachment-0001.htm 

From exarkun at twistedmatrix.com  Tue Sep 14 09:46:03 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 13:46:03 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
Message-ID: <20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>

On 01:32 pm, mhubig at imko.de wrote:
>On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:
>>See the serialport examples on the website.  A couple are linked from
>>http://twistedmatrix.com/documents/current/core/examples/.
>
>The examples I found are mouse.py and gpsfix.py and there only 
>listening on
>the serial line. It seems that with twisted I have some sort of a 
>thread
>running
>which will trigger some methods (e.g. dataRecieved) as it reads 
>something
>from the serial line. How could I send data then?

Call the method for sending data.  Generally, the protocol's transport's 
write method.  Serial ports are not special in this regard, it's how 
almost all protocol implementations in Twisted work.  See some of the 
other documentation (for example the client or server howtos linked from 
<http://twistedmatrix.com/documents/current/core/howto/>) for more 
details on this.
>
>>You do indeed want a Protocol subclass.
>
>
>Ok I see, and the Protocol subclass provides the dataReceived method!?

Typically.
>
>>The code from your "self.read(7)" line to the end of that loop will
>>probably
>
>end up in a dataReceived method - but note that you'll have to do some
>
>buffering, as you can't be assured that dataReceived will get called 
>with
>>exactly
>
>the number of bytes you want at a time, so you may have to collect data 
>from
>>multiple dataReceived calls (likewise you may get more than you want 
>>at
>>once, and need to split it up).
>
>Hmm ok so I have to design dataReceived() to buffer the received data 
>until
>it get's
>the whole answer packet and than let it call e.g. packetRecieved() to
>process the
>packet ... I'm mot sure if this asynchronous approach is what I need,
>because the
>protocol I'm implementing is strict Master-Slave.

I'm not sure I understand this.  What is a "Master-Slave" protocol?  Why 
would someone not benefit from a Twisted-based implementation of such a 
protocol?

Jean-Paul


From mhubig at imko.de  Tue Sep 14 10:00:18 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 16:00:18 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
	<20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
Message-ID: <AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>

On Tue, Sep 14, 2010 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:

> I'm not sure I understand this.  What is a "Master-Slave" protocol?  Why
> would someone not benefit from a Twisted-based implementation of such a
> protocol?


OK I'm not sure either ;-) this is why I ask. But in my case I have the
following
situation: behind my serial port I have a bus system made of me (the master)
and some slaves. The slaves are absolute passive until I send them a
command.
After I've send a command to one of my slaves the salve ALWAY reply by
sending
a packet.

So what's the benefit if I have a "deamon thread" waiting the hole time to
get
something from the serial line if the only time it can get something is
immediately
after the master has send a packet? The communication
is totally synchronous.

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/54d1bd6e/attachment.htm 

From exarkun at twistedmatrix.com  Tue Sep 14 10:28:17 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 14:28:17 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
	<20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
	<AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>
Message-ID: <20100914142817.2058.2121233756.divmod.xquotient.532@localhost.localdomain>

On 02:00 pm, mhubig at imko.de wrote:
>On Tue, Sep 14, 2010 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:
>>I'm not sure I understand this.  What is a "Master-Slave" protocol? 
>>Why
>>would someone not benefit from a Twisted-based implementation of such 
>>a
>>protocol?
>
>
>OK I'm not sure either ;-) this is why I ask. But in my case I have the
>following
>situation: behind my serial port I have a bus system made of me (the 
>master)
>and some slaves. The slaves are absolute passive until I send them a
>command.
>After I've send a command to one of my slaves the salve ALWAY reply by
>sending
>a packet.
>
>So what's the benefit if I have a "deamon thread" waiting the hole time 
>to
>get
>something from the serial line if the only time it can get something is
>immediately
>after the master has send a packet? The communication
>is totally synchronous.

Do you ever want to interact with more than one slave?  Do your slaves 
ever have any bugs that prevent them from responding?  Do you want to be 
able to unit test your protocol code easily?  If  you want any of this, 
you might want to use Twisted.

Also, there generally aren't any threads involved when you're using 
Twisted's serial port support.

Jean-Paul


From ruslan.usifov at gmail.com  Tue Sep 14 13:48:06 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Tue, 14 Sep 2010 21:48:06 +0400
Subject: [Twisted-Python] kqueue reactor
Message-ID: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>

Which kqueue reactor in twisted is best?

Twisted have kqreactor  - but it need PyKQueue patched version, and PyKQueue
doesn't supported
Also i found
https://trac.calendarserver.org/browser/CalendarServer/branches/users/glyph/use-system-twisted/kqreactor.py,
but doesn't known is it possible use in production?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100914/51605947/attachment.htm 

From therve at free.fr  Wed Sep 15 04:52:40 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Wed, 15 Sep 2010 10:52:40 +0200
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
References: <1284247101.2007.1.camel@localhost>
	<AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
Message-ID: <1284540760.2636.6.camel@brainwave>

Le lundi 13 septembre 2010 ? 13:39 +0100, Jonathan Lange a ?crit :

> > Please download the tarballs and test them as much as possible. I
> > intend to do a final release within the next 2 weeks, if I didn't die
> > by ingestion of poutine.
> 
> Since you're the first person to do a release after I wrote the
> process document, I have to know: did it help? any bugs? any
> missing/confusing bits?

It helped a lot. Releasing is mostly about reading the document and
pasting at the command line. It also caught outdated data in README and
INSTALL.

The indirection of the information in separate bugs is a bit difficult,
but this means we should just fix those :).

Regarding the announcement email, I should probably put up for review a
little bit longer, to catch version typos and basic english errors...

-- 
Thomas



From jml at mumak.net  Wed Sep 15 08:06:07 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 15 Sep 2010 13:06:07 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284540760.2636.6.camel@brainwave>
References: <1284247101.2007.1.camel@localhost>
	<AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
	<1284540760.2636.6.camel@brainwave>
Message-ID: <AANLkTik1Ev40nxVO_3qmLNfyXiL1-TQzn_nuwibBOFN5@mail.gmail.com>

On Wed, Sep 15, 2010 at 9:52 AM, Thomas Herv? <therve at free.fr> wrote:
> Le lundi 13 septembre 2010 ? 13:39 +0100, Jonathan Lange a ?crit :
>
>> > Please download the tarballs and test them as much as possible. I
>> > intend to do a final release within the next 2 weeks, if I didn't die
>> > by ingestion of poutine.
>>
>> Since you're the first person to do a release after I wrote the
>> process document, I have to know: did it help? any bugs? any
>> missing/confusing bits?
>
> It helped a lot. Releasing is mostly about reading the document and
> pasting at the command line. It also caught outdated data in README and
> INSTALL.
>

Glad to hear it.

> The indirection of the information in separate bugs is a bit difficult,
> but this means we should just fix those :).
>

Agreed. You should invite me to Paris for a release tools sprint some time :)

> Regarding the announcement email, I should probably put up for review a
> little bit longer, to catch version typos and basic english errors...

I think it's better to find someone to be a release reviewer so they
can go over that stuff quickly and within a set time. Otherwise you
can be waiting forever.

jml


From chris at simplistix.co.uk  Wed Sep 15 13:12:01 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 15 Sep 2010 18:12:01 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
Message-ID: <4C90FE61.4000307@simplistix.co.uk>

ie: http://pypi.python.org/pypi/Twisted/10.1.0

It's great that they're being done now, but easy_install and friends on 
Windows still fail to find them unless they're on PyPI :-(

Chris


From chris at simplistix.co.uk  Wed Sep 15 13:16:37 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 15 Sep 2010 18:16:37 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FE61.4000307@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
Message-ID: <4C90FF75.4080000@simplistix.co.uk>

On 15/09/2010 18:12, Chris Withers wrote:
> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>
> It's great that they're being done now, but easy_install and friends on
> Windows still fail to find them unless they're on PyPI :-(

Oh, and I'm afraid the 10.1.0 ones are useless since they're not named 
correctly, from the package tools point of view :-(

We have: Twisted-10.1.0.winxp32-py2.5.exe
We need: Twisted-10.1.0.win32.exe

(and no, I don't know you create a .exe usign that format for both Py2.5 
and Py2.6 :-( )

Ideal would be a binary egg distro, but I know you guys have no love for 
them :-(

Chris


From glyph at twistedmatrix.com  Wed Sep 15 16:57:29 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Sep 2010 16:57:29 -0400
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FF75.4080000@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
Message-ID: <EC5B7B74-7456-4236-A1F9-AB765C604893@twistedmatrix.com>


On Sep 15, 2010, at 1:16 PM, Chris Withers wrote:

> On 15/09/2010 18:12, Chris Withers wrote:
>> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>> 
>> It's great that they're being done now, but easy_install and friends on
>> Windows still fail to find them unless they're on PyPI :-(
> 
> Oh, and I'm afraid the 10.1.0 ones are useless since they're not named 
> correctly, from the package tools point of view :-(
> 
> We have: Twisted-10.1.0.winxp32-py2.5.exe
> We need: Twisted-10.1.0.win32.exe
> 
> (and no, I don't know you create a .exe usign that format for both Py2.5 
> and Py2.6 :-( )
> 
> Ideal would be a binary egg distro, but I know you guys have no love for 
> them :-(

No particular hate for them either: would you like to volunteer to build our binary eggs and maintain them? :)



From jml at mumak.net  Thu Sep 16 05:28:28 2010
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 16 Sep 2010 10:28:28 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FF75.4080000@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
Message-ID: <AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>

On Wed, Sep 15, 2010 at 6:16 PM, Chris Withers <chris at simplistix.co.uk> wrote:
> On 15/09/2010 18:12, Chris Withers wrote:
>> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>>
>> It's great that they're being done now, but easy_install and friends on
>> Windows still fail to find them unless they're on PyPI :-(
>
> Oh, and I'm afraid the 10.1.0 ones are useless since they're not named
> correctly, from the package tools point of view :-(
>
> We have: Twisted-10.1.0.winxp32-py2.5.exe
> We need: Twisted-10.1.0.win32.exe
>
> (and no, I don't know you create a .exe usign that format for both Py2.5
> and Py2.6 :-( )
>

Two questions:
  * Where are these "correct names" documented?
  * Would you be at all interested in updating our build to generate
exes with these names?

> Ideal would be a binary egg distro, but I know you guys have no love for
> them :-(
>

If you can figure out how to make our Windows buildbots build them
together with the .msis and .exes, that would be great.

jml


From chris at simplistix.co.uk  Thu Sep 16 07:01:20 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 16 Sep 2010 12:01:20 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
References: <4C90FE61.4000307@simplistix.co.uk>	<4C90FF75.4080000@simplistix.co.uk>
	<AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
Message-ID: <4C91F900.6060802@simplistix.co.uk>

On 16/09/2010 10:28, Jonathan Lange wrote:
> Two questions:
>    * Where are these "correct names" documented?

*snivvles* probably in the setuptools source.
I would have assumed http://www.python.org/dev/peps/pep-0376, but I 
can't see anything on it in there...

>    * Would you be at all interested in updating our build to generate
> exes with these names?

Probably :-) Where are the docs on how to duplicate your current windows 
build process?

>> Ideal would be a binary egg distro, but I know you guys have no love for
>> them :-(
>
> If you can figure out how to make our Windows buildbots build them
> together with the .msis and .exes, that would be great.

Indeed!

Chris


From exarkun at twistedmatrix.com  Thu Sep 16 08:27:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 16 Sep 2010 12:27:08 -0000
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C91F900.6060802@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
	<AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
	<4C91F900.6060802@simplistix.co.uk>
Message-ID: <20100916122708.2058.1480834037.divmod.xquotient.553@localhost.localdomain>

On 11:01 am, chris at simplistix.co.uk wrote:
>On 16/09/2010 10:28, Jonathan Lange wrote:
>>Two questions:
>>    * Where are these "correct names" documented?
>
>*snivvles* probably in the setuptools source.
>I would have assumed http://www.python.org/dev/peps/pep-0376, but I
>can't see anything on it in there...
>>    * Would you be at all interested in updating our build to generate
>>exes with these names?
>
>Probably :-) Where are the docs on how to duplicate your current 
>windows
>build process?

If you're serious about helping out, then I will bump up the priority on 
making our buildbot configuration public.

You can already see the build process in action, though.  There are two 
builders responsible for this now, winxp32-py2.5-msi and 
winxp32-py2.6-msi.  Despite the names, they also build the exes.  You 
can find them on this page:

  http://buildbot.twistedmatrix.com/boxes-all

Following the builder name link will take you to a builder page which 
lists recent builds.  Following one of the build links will take you to 
a build page which lists the steps involved in the build.  Following a 
step link will take you to a page which shows you the command which was 
run for that step along with its results.

Jean-Paul


From glyph at twistedmatrix.com  Thu Sep 16 18:20:31 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Sep 2010 18:20:31 -0400
Subject: [Twisted-Python] kqueue reactor
In-Reply-To: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>
References: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>
Message-ID: <1834A88B-B786-46DF-8A66-69DF0EDCF835@twistedmatrix.com>


On Sep 14, 2010, at 1:48 PM, ruslan usifov wrote:

> Which kqueue reactor in twisted is best?
> 
> Twisted have kqreactor  - but it need PyKQueue patched version, and PyKQueue doesn't supported
> Also i found https://trac.calendarserver.org/browser/CalendarServer/branches/users/glyph/use-system-twisted/kqreactor.py, but doesn't known is it possible use in production?

You should really follow this ticket: <http://twistedmatrix.com/trac/ticket/1918>.  We'd like there to be an included, working kqueue reactor, and we're working towards it.

As of right now, it depends what you're doing.

Calendar Server uses its version quite successfully in production.  But Calendar Server does not make use of all the features of Twisted; in particular, it doesn't need PTYs to work, and kqueue has some issues with those.

In any event, if you want to use that module, you should be getting it from a release (see <https://trac.calendarserver.org/browser/CalendarServer/tags/release>) or from trunk (<https://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>), not from the branch you mentioned (which is stale, and I have now removed).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100916/44457e5b/attachment.htm 

From ruslan.usifov at gmail.com  Fri Sep 17 17:50:45 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sat, 18 Sep 2010 01:50:45 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer (-1)
Message-ID: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>

Hello!

I have use kqreactor from this branch
http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/. In the
follow code we connect to unix socket.
Sometimes we got the error: "file descriptor cannot be a negative integer
(-1)" what does this mean? I haven't any ideas

l_client = protocol.ClientCreator(reactor, Proxy);
l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);

PS: my uname -a is:
     FreeBSD 8.0-RELEASE-p2 FreeBSD 8.0-RELEASE-p2 #2: Wed Jan 13 17:50:25
UTC 2010     root at DTG1383:/usr/obj/usr/src/sys/Z-AMD64  amd64
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100918/95b2fd53/attachment.htm 

From exarkun at twistedmatrix.com  Fri Sep 17 18:28:26 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 17 Sep 2010 22:28:26 -0000
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
Message-ID: <20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>

On 09:50 pm, ruslan.usifov at gmail.com wrote:
>Hello!
>
>I have use kqreactor from this branch
>http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/. In 
>the
>follow code we connect to unix socket.
>Sometimes we got the error: "file descriptor cannot be a negative 
>integer
>(-1)" what does this mean? I haven't any ideas
>
>l_client = protocol.ClientCreator(reactor, Proxy);
>l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);
>
>PS: my uname -a is:
>     FreeBSD 8.0-RELEASE-p2 FreeBSD 8.0-RELEASE-p2 #2: Wed Jan 13 
>17:50:25
>UTC 2010     root at DTG1383:/usr/obj/usr/src/sys/Z-AMD64  amd64

It means there's a bug somewhere in your code or in the reactor.  If you 
can reproduce the problem with a simple example, it might be useful in 
fixing the problem.

Jean-Paul


From ruslan.usifov at gmail.com  Fri Sep 17 20:21:59 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sat, 18 Sep 2010 04:21:59 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
Message-ID: <AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>

Sorry fo my question. I'm new in twisted ad may misunderstand some
things:-), and my questions may look like trivial

I have follow stack trace:

cant connect to fcgi socket: [Failure instance: Traceback: <type
'exceptions.ValueError'>: file descriptor can not be a negative integer (-1)
/usr/local/lib/python2.6/site-packages/twisted/internet/base.py:796:runUntilCurrent
/usr/local/lib/python2.6/site-packages/twisted/internet/protocol.py:184:fire
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:318:callback
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:424:_startRunCallbacks
--- <exception caught here> ---
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:441:_runCallbacks
/usr/local/fastcgi-0.1/fcgi/proxy.py:124:connectionMade
/usr/local/lib/python2.6/site-packages/twisted/internet/abstract.py:340:resumeProducing
/usr/local/lib/python2.6/site-packages/twisted/internet/abstract.py:278:startReading
/usr/local/lib/python2.6/site-packages/twisted/internet/kqreactor.py:82:addReader
/usr/local/lib/python2.6/site-packages/twisted/internet/kqreactor.py:71:_updateRegistration
]

My connectionMade function looks like this:

    def connectionMade(protocol):
      protocol._setPeer(self);
      self._setPeer(protocol);

      for chunk in self._chunks:
        protocol.transport.write(chunk);

      self._chunks = [];
      self.transport.resumeProducing();



All code that i use look like this:
  def proxy(self):
    def connectionMade(protocol):
      protocol._setPeer(self);
      self._setPeer(protocol);

      for chunk in self._chunks:
        protocol.transport.write(chunk);

      self._chunks = [];
      self.transport.resumeProducing();

    def cantConnect(fail):
      log.err("cant connect to fcgi socket: %s" % (fail.getErrorMessage()));
      self.transport.loseConnection();

    #????????????? ?????????? ? ???????? ???????????? (? ????? ?????? ???
php)
    self.transport.pauseProducing();
    l_client = protocol.ClientCreator(reactor, Proxy);

l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);


Its a simply fastcgi proxy, which reads all request(analize it, do some
pending things and then proxy request to real worker)
Thank for your help.

PS: i use kqreactor.py from this branch
http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100918/f236a8b5/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep 19 00:05:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Sep 2010 04:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1284869127.91.1711461392@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100919/2cc6c63c/attachment.htm 

From ruslan.usifov at gmail.com  Sun Sep 19 08:04:39 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sun, 19 Sep 2010 16:04:39 +0400
Subject: [Twisted-Python] how to implement sleep?
Message-ID: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>

Hello

Twisted is great, but how cant i emulate sleep behaviour in syested. I know
that exists callLater, but how to use it in yield scenario, like here:

@inlineCallbacks
def work(self):
    l_attempts = 0;

    while l_attemps < 3:
        try:
            resp = yield <some twisted call>
            break;

        except:
            yield sleep(3);
            l_attempts +=1

    else:
        log.err("cant communicate");


Here i make 3 attempts to connect busy service, with pause 3 seconds between
attempts. How cant i implement this in twisted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100919/5f1a973d/attachment.htm 

From donal.mcmullan at gmail.com  Sun Sep 19 08:13:56 2010
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Mon, 20 Sep 2010 00:13:56 +1200
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <419062AB-2025-491F-8DF4-61A95B6FA2C1@gmail.com>

except:
    l_attempts += 1
    yield reactor.callLater(3, self.work)

Total guess

Donal


On 20/09/2010, at 12:04 AM, ruslan usifov wrote:

> Hello
> 
> Twisted is great, but how cant i emulate sleep behaviour in syested. I know that exists callLater, but how to use it in yield scenario, like here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds between attempts. How cant i implement this in twisted 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From stephen at thorne.id.au  Sun Sep 19 08:35:44 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Sun, 19 Sep 2010 22:35:44 +1000
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <20100919123544.GR2666@thorne.id.au>

On 2010-09-19, ruslan usifov wrote:
> Twisted is great, but how cant i emulate sleep behaviour in syested. I know
> that exists callLater, but how to use it in yield scenario, like here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds between
> attempts. How cant i implement this in twisted

Perhaps you want ReconnectingClientFactory ? Set maxRetries to 3. See
twisted.internet.protocols.ReconnectingClientFactory.


-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From andrew at bemusement.org  Sun Sep 19 08:41:11 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 19 Sep 2010 22:41:11 +1000
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <20100919124111.GA7235@aihal.home.puzzling.org>

ruslan usifov wrote:
>    Hello
> 
>    Twisted is great, but how cant i emulate sleep behaviour in syested. I

<http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.task.deferLater.html>

-Andrew.



From luke-lists at hybrid-logic.co.uk  Sun Sep 19 09:20:06 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Sun, 19 Sep 2010 14:20:06 +0100
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <1284902406.29918.5.camel@pow>

Hi Ruslan,

Try this to drop in to your code, as in: sleep(3)

def sleep(secs):
    d = defer.Deferred()
    reactor.callLater(secs, d.callback, None)
    return d

Cheers,
Luke


On Sun, 2010-09-19 at 16:04 +0400, ruslan usifov wrote:
> Hello
> 
> Twisted is great, but how cant i emulate sleep behaviour in syested. I
> know that exists callLater, but how to use it in yield scenario, like
> here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds
> between attempts. How cant i implement this in twisted 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420



From itamar at itamarst.org  Sun Sep 19 09:20:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Sep 2010 09:20:53 -0400
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <20100919124111.GA7235@aihal.home.puzzling.org>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
	<20100919124111.GA7235@aihal.home.puzzling.org>
Message-ID: <1284902453.1586.5.camel@blake>

On Sun, 2010-09-19 at 22:41 +1000, Andrew Bennetts wrote:
> ruslan usifov wrote:
> >    Hello
> > 
> >    Twisted is great, but how cant i emulate sleep behaviour in syested. I
> 
> <http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.task.deferLater.html>

Specifically, deferLater is a wrapper for reactor.callLater that works
well with inlineCallbacks, since it returns a Deferred, so you can do
"yield deferLater(reactor, 3, lambda: None)".





From ruslan.usifov at gmail.com  Sun Sep 19 14:08:31 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sun, 19 Sep 2010 22:08:31 +0400
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <20100919123544.GR2666@thorne.id.au>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
	<20100919123544.GR2666@thorne.id.au>
Message-ID: <AANLkTikWmOeRf4hpD2Tw2HRAjPZJ=nBvDD2Y1gyR-Mxp@mail.gmail.com>

Can you provide some code to use it? In maner like protocol.ClientCreator?


Perhaps you want ReconnectingClientFactory ? Set maxRetries to 3. See
> twisted.internet.protocols.ReconnectingClientFactory.
>
>
> --
> Regards,
> Stephen Thorne
> Development Engineer
> Netbox Blue
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100919/7925938d/attachment.htm 

From glyph at twistedmatrix.com  Mon Sep 20 00:08:16 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Sep 2010 00:08:16 -0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
Message-ID: <8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>


On Sep 17, 2010, at 8:21 PM, ruslan usifov wrote:

> Its a simply fastcgi proxy, which reads all request(analize it, do some pending things and then proxy request to real worker)

I am very curious about your problem, but I cannot help you with it with the incomplete snippets you have provided.  Can you reduce your program to a smaller test program that produces this traceback?

Here is a guide to producing a useful example: <http://sscce.org/>

> Thank for your help.

Thanks for reporting the bug.  I hope you can provide us with enough information to get it fixed :).

> PS: i use kqreactor.py from this branch http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/ 

If you use the kqreactor.py from <http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>, does it make any difference, or do you still see the same traceback?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100920/4516be8b/attachment.htm 

From ruslan.usifov at gmail.com  Mon Sep 20 10:34:24 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Mon, 20 Sep 2010 18:34:24 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
Message-ID: <AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>

I implement specific proxy server, so after analyze i think that this
happens if client disconnected from server, but server already made
connection to proxied service, so call resumeProducing() (in connectionMade
), throws exception (because socket already closed)  "file descriptor can
not be a negative integer (-1)"

So this looks like my bug

2010/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 17, 2010, at 8:21 PM, ruslan usifov wrote:
>
> Its a simply fastcgi proxy, which reads all request(analize it, do some
> pending things and then proxy request to real worker)
>
>
> I am very curious about your problem, but I cannot help you with it with
> the incomplete snippets you have provided.  Can you reduce your program to a
> smaller test program that produces this traceback?
>
> Here is a guide to producing a useful example: <http://sscce.org/>
>
> Thank for your help.
>
>
> Thanks for reporting the bug.  I hope you can provide us with enough
> information to get it fixed :).
>
>
> PS: i use kqreactor.py from this branch
> http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/
>
>
> If you use the kqreactor.py from <
> http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>,
> does it make any difference, or do you still see the same traceback?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100920/14d13429/attachment.htm 

From glyph at twistedmatrix.com  Mon Sep 20 13:48:23 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Sep 2010 13:48:23 -0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
	<AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
Message-ID: <CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>


On Sep 20, 2010, at 10:34 AM, ruslan usifov wrote:

> I implement specific proxy server, so after analyze i think that this happens if client disconnected from server, but server already made connection to proxied service, so call resumeProducing() (in connectionMade ), throws exception (because socket already closed)  "file descriptor can not be a negative integer (-1)"
> 
> So this looks like my bug 

I think I understand what you mean, but could you express this as a simple Python program rather than an english sentence, so that I can be sure?

Thanks!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100920/e338fcd5/attachment.htm 

From james at mansionfamily.plus.com  Tue Sep 21 16:45:13 2010
From: james at mansionfamily.plus.com (James Mansion)
Date: Tue, 21 Sep 2010 21:45:13 +0100
Subject: [Twisted-Python] Python 3
Message-ID: <4C991959.1070003@mansionfamily.plus.com>

I found it hard to tell what the level of support is for Python 3 - 
particularly on 64 bit Windows 7.

I found some tickets in trac, but othewise no clear statement.

Is Twisted 10.x OK on Python 3?

James



From itamar at itamarst.org  Tue Sep 21 16:53:44 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 21 Sep 2010 16:53:44 -0400 (EDT)
Subject: [Twisted-Python] Python 3
In-Reply-To: <4C991959.1070003@mansionfamily.plus.com>
References: <4C991959.1070003@mansionfamily.plus.com>
Message-ID: <10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>

> I found it hard to tell what the level of support is for Python 3 -
> particularly on 64 bit Windows 7.
>
> I found some tickets in trac, but othewise no clear statement.
>
> Is Twisted 10.x OK on Python 3?

No. Supporting Python 3 takes a large amount of effort which, as a mostly
volunteer driven organization, Twisted cannot afford at the moment.

This is the reason most Python projects in general are still only
supporting Python 2 (those written in C are an exception because the
switch is easier).



From glyph at twistedmatrix.com  Tue Sep 21 17:38:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Sep 2010 17:38:40 -0400
Subject: [Twisted-Python] Python 3
In-Reply-To: <10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>
References: <4C991959.1070003@mansionfamily.plus.com>
	<10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>
Message-ID: <96B76786-508B-4BF6-8845-4EA388D1A9ED@twistedmatrix.com>


On Sep 21, 2010, at 4:53 PM, Itamar Turner-Trauring wrote:

> No. Supporting Python 3 takes a large amount of effort which, as a mostly
> volunteer driven organization, Twisted cannot afford at the moment.

However, as a volunteer driven organization, you may change this at any time by simply volunteering :).

Something vaguely resembling a transition plan is here: <http://stackoverflow.com/questions/172306/how-are-you-planning-on-handling-the-migration-to-python-3/214601#214601>  (Note especially step 3.)

If you want to become a Twisted developer, just read <http://twistedmatrix.com/trac/wiki/TwistedDevelopment> and <http://twistedmatrix.com/trac/wiki/ReviewProcess>.

Pick up some existing tickets - in order to work on python 3, we first need to have zero warnings on python 2, so tickets to eliminate warnings are a good place to begin.  <http://bit.ly/easy-twisted-tickets> usually contains some good things for newcomers.

I hope you'll help out!



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100921/d62a6e0d/attachment.htm 

From lvh at laurensvh.be  Tue Sep 21 17:43:26 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 21 Sep 2010 23:43:26 +0200
Subject: [Twisted-Python] Python 3
In-Reply-To: <4C991959.1070003@mansionfamily.plus.com>
References: <4C991959.1070003@mansionfamily.plus.com>
Message-ID: <AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>

Nope.

It wouldn't be excessively hard to do, once some of the sillier missing
methods on bytes objects are fixed -- it's just not very much of a priority.
Twisted is used for a lot of production apps which often aren't even
deployed on recent versions of 2.x, let alone 3.x, so supporting 2.x
properly is far more a priority than supporting 3.x.

64 bit vs 32 bit shouldn't be a problem since Twisted is just Python.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100921/22a18288/attachment.htm 

From glyph at twistedmatrix.com  Tue Sep 21 18:31:37 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Sep 2010 18:31:37 -0400
Subject: [Twisted-Python] Python 3
In-Reply-To: <AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>
References: <4C991959.1070003@mansionfamily.plus.com>
	<AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>
Message-ID: <5348FC0B-BD38-4F8E-A94A-A6892D3CCF31@twistedmatrix.com>


On Sep 21, 2010, at 5:43 PM, Laurens Van Houtven wrote:

> 64 bit vs 32 bit shouldn't be a problem since Twisted is just Python.

That's not accurate at all, since there are lots of places that Python can be broken (the struct module, in particular) with respect to 64-bit.  Plus, Twisted has a little bit of C code here and there.

Luckily, we have 64-bit supported buildbots, so we don't have any of those problems :).  See <http://buildbot.twistedmatrix.com/boxes-supported?branch=trunk>.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100921/d1ec1265/attachment.htm 

From xieweikai at gmail.com  Wed Sep 22 03:52:20 2010
From: xieweikai at gmail.com (Weikai Xie)
Date: Wed, 22 Sep 2010 15:52:20 +0800
Subject: [Twisted-Python] How to cap the buffering size of data to be sent
	in Protocol class
Message-ID: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>

Folks,
    I have a server program which basically use a protocol.Protocol
class to send a continuous byte stream  to clients on TCP connections.
 However, I found , for whatever reason, if a client hung up and
failed to remove the data from its receiving socket buffer, then the
memory usage of the server program will go up endlessly.

    I think it is because the TCP sendQ buffer of the svr  was
building up as a result of  the other side does not remove the data
from its recvQ buffer (this guess was verified by the output of the
netstat command), which in turn results the twisted Protocol to buffer
the data submitted by upper layer via transport.write() to its
internal buffer.

    My questions is that whether there is any mechanism in Twisted
which can be used to set the maximum buffering size of the Protocol;
and whenever if this cap is reached, I can be informed to give a
chance to know the client is experiencing problem


Regards.

Weikai Xie


From p.mayers at imperial.ac.uk  Wed Sep 22 04:32:03 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Sep 2010 09:32:03 +0100
Subject: [Twisted-Python] How to cap the buffering size of data to be
 sent	in Protocol class
In-Reply-To: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>
References: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>
Message-ID: <4C99BF03.8020202@imperial.ac.uk>

On 09/22/2010 08:52 AM, Weikai Xie wrote
>      My questions is that whether there is any mechanism in Twisted
> which can be used to set the maximum buffering size of the Protocol;
> and whenever if this cap is reached, I can be informed to give a
> chance to know the client is experiencing problem

You need to implement a producer/consumer interface. I'm not very 
familiar with them, but there have been good examples in the past.

Basically your data source should be a producer and the protocol should 
be a consumer. When the protocol (consumer) buffer is full, it'll notify 
the producer to stop producing.


From landreville at deadtreepages.com  Wed Sep 22 12:42:12 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 22 Sep 2010 12:42:12 -0400
Subject: [Twisted-Python] State of snmp
Message-ID: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>

Hello,

What is the current recommended (or most popular) way of using SNMP
with Twisted?

I have tried TwistedSNMP, but it seems to only work with an old
version of pysnmp that I can't find -- the TwistedSNMP website says
pysnmp version 3.x, but pysnmp's website says the latest version is
2.x.  I saw that there is a package in Ubuntu called python-pynetsnmp
which contains bindings for netsnmp and somehow integrates it into
twisted, but I cannot find this outside of Ubuntu's packages (I don't
use Ubuntu) . The pynetsnmp website on sourceforge has no files to
download, so I don't think that is source for the package.

Thanks,
Landreville


From ilya at glas.net  Wed Sep 22 12:48:56 2010
From: ilya at glas.net (Ilya Etingof)
Date: Wed, 22 Sep 2010 20:48:56 +0400 (MSD)
Subject: [Twisted-Python] State of snmp
In-Reply-To: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
References: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.1009222047060.8609@cray.glas.net>


You may want to take a look at pysnmp 4.x, which has Twisted binding 
built-in.

> What is the current recommended (or most popular) way of using SNMP
> with Twisted?
>
> I have tried TwistedSNMP, but it seems to only work with an old
> version of pysnmp that I can't find -- the TwistedSNMP website says
> pysnmp version 3.x, but pysnmp's website says the latest version is
> 2.x.  I saw that there is a package in Ubuntu called python-pynetsnmp
> which contains bindings for netsnmp and somehow integrates it into
> twisted, but I cannot find this outside of Ubuntu's packages (I don't
> use Ubuntu) . The pynetsnmp website on sourceforge has no files to
> download, so I don't think that is source for the package.


From ruslan.usifov at gmail.com  Wed Sep 22 13:06:07 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 22 Sep 2010 21:06:07 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
	<AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
	<CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>
Message-ID: <AANLkTimXU3TO-sM-rOAPSX_Y8MQxb2nweJKSDn1BXxMj@mail.gmail.com>

ok i provide sample till the end of this week

2010/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2010, at 10:34 AM, ruslan usifov wrote:
>
> I implement specific proxy server, so after analyze i think that this
> happens if client disconnected from server, but server already made
> connection to proxied service, so call resumeProducing() (in connectionMade
> ), throws exception (because socket already closed)  "file descriptor can
> not be a negative integer (-1)"
>
> So this looks like my bug
>
>
> I *think* I understand what you mean, but could you express this as a
> simple Python program rather than an english sentence, so that I can be
> sure?
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100922/906a2b87/attachment.htm 

From ruslan.usifov at gmail.com  Wed Sep 22 13:09:33 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 22 Sep 2010 21:09:33 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
Message-ID: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>

Hello! Sorry for my bad English!

Can anybody provide some samples how to implement Graceful restart in
twisted?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100922/bdf82772/attachment.htm 

From ted.pederson at gmail.com  Wed Sep 22 13:47:11 2010
From: ted.pederson at gmail.com (Ted Pederson)
Date: Wed, 22 Sep 2010 10:47:11 -0700
Subject: [Twisted-Python] High traffic connection issue
Message-ID: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>

Trying to do some scalability testing on my first twisted server.

When I have hundreds of connections and moments of very high server activity
I am seeing that clients are unable to connect.

Here are some numbers: 250 open TCP connections. I see 857 operations in my
log during the second where a new client tries to connect. In the client log
I see that connectionMade() is called. I am pretty sure I don't see a
corresponding connectionMade() on the server side (could this be right?).

Then, about a second later I get a connectionLost() on the client with
'Connection to the other side was lost in a non-clean fashion'.

Is this to be expected? Should the client just be expected to retry?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100922/6374836c/attachment.htm 

From exarkun at twistedmatrix.com  Wed Sep 22 14:38:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Sep 2010 18:38:51 -0000
Subject: [Twisted-Python] High traffic connection issue
In-Reply-To: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>
References: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>
Message-ID: <20100922183851.2058.2084885789.divmod.xquotient.628@localhost.localdomain>

On 05:47 pm, ted.pederson at gmail.com wrote:
>Trying to do some scalability testing on my first twisted server.
>
>When I have hundreds of connections and moments of very high server 
>activity
>I am seeing that clients are unable to connect.
>
>Here are some numbers: 250 open TCP connections. I see 857 operations 
>in my
>log during the second where a new client tries to connect. In the 
>client log
>I see that connectionMade() is called. I am pretty sure I don't see a
>corresponding connectionMade() on the server side (could this be 
>right?).
>
>Then, about a second later I get a connectionLost() on the client with
>'Connection to the other side was lost in a non-clean fashion'.
>
>Is this to be expected? Should the client just be expected to retry?

This depends a lot on what your server does, as well as what platform 
you're running it on.  If all your server does is accept TCP connections 
and ignore data received from them, and you're on Linux and using 
epollreactor, then I would expect you to have no problems up into the 
tens of thousands of connections range.  On the other hand, if you check 
an RSA signature for every new connection, and you're on Windows using 
win32eventreactor, I would expect failures once you get to a few dozen 
connections.

Jean-Paul


From exarkun at twistedmatrix.com  Wed Sep 22 14:45:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Sep 2010 18:45:09 -0000
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
Message-ID: <20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>

On 05:09 pm, ruslan.usifov at gmail.com wrote:
>Hello! Sorry for my bad English!
>
>Can anybody provide some samples how to implement Graceful restart in
>twisted?

There's no special way to do this with Twisted.  Perhaps the comments on 
http://twistedmatrix.com/trac/ticket/4072 will help you, though.

Jean-Paul


From landreville at deadtreepages.com  Wed Sep 22 15:02:38 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 22 Sep 2010 15:02:38 -0400
Subject: [Twisted-Python] State of snmp
In-Reply-To: <alpine.LNX.2.00.1009222047060.8609@cray.glas.net>
References: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
	<alpine.LNX.2.00.1009222047060.8609@cray.glas.net>
Message-ID: <AANLkTimRbGm7K5eN=CB62sKcn3QWi73zZ2tX_2JfoDED@mail.gmail.com>

On Wed, Sep 22, 2010 at 12:48 PM, Ilya Etingof <ilya at glas.net> wrote:
>
> You may want to take a look at pysnmp 4.x, which has Twisted binding
> built-in.
>
>> What is the current recommended (or most popular) way of using SNMP
>> with Twisted?
>>
>> I have tried TwistedSNMP, but it seems to only work with an old
>> version of pysnmp that I can't find -- the TwistedSNMP website says
>> pysnmp version 3.x, but pysnmp's website says the latest version is
>> 2.x. ?I saw that there is a package in Ubuntu called python-pynetsnmp
>> which contains bindings for netsnmp and somehow integrates it into
>> twisted, but I cannot find this outside of Ubuntu's packages (I don't
>> use Ubuntu) . The pynetsnmp website on sourceforge has no files to
>> download, so I don't think that is source for the package.

pysnmp works well.
Here is the page with the example for working with Twisted in PySNMP
http://pysnmp.sourceforge.net/examples/4.x/v3arch/twisted/manager/getgen.html

If you are using version 1 or 2 you have to change the addTargetParams
call to: config.addTargetParams(snmpEngine, 'myParams', 'test-agent',
'noAuthNoPriv', 1)


From ruslan.usifov at gmail.com  Thu Sep 23 15:23:09 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 23 Sep 2010 23:23:09 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
Message-ID: <AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>

Hello

First of all sorry for my bad english

I don't think that this tike? suit fro me:-(

When i said Graceful i mean net behaviour:

1). Server doesn't  break already connected clients. Wait while they all
ends and only afte then dies
2). Respawn new workers with new reread config, which will service all next
requests


All this looks like Apache Graceful Restart
http://httpd.apache.org/docs/2.0/en/stopping.html


2010/9/22 <exarkun at twistedmatrix.com>

> On 05:09 pm, ruslan.usifov at gmail.com wrote:
> >Hello! Sorry for my bad English!
> >
> >Can anybody provide some samples how to implement Graceful restart in
> >twisted?
>
> There's no special way to do this with Twisted.  Perhaps the comments on
> http://twistedmatrix.com/trac/ticket/4072 will help you, though.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100923/47ea527a/attachment.htm 

From exarkun at twistedmatrix.com  Thu Sep 23 15:36:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Sep 2010 19:36:56 -0000
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
	<AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
Message-ID: <20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>

On 07:23 pm, ruslan.usifov at gmail.com wrote:
>Hello
>
>First of all sorry for my bad english
>
>I don't think that this tikeC5 suit fro me:-(
>
>When i said Graceful i mean net behaviour:
>
>1). Server doesn't  break already connected clients. Wait while they 
>all
>ends and only afte then dies
>2). Respawn new workers with new reread config, which will service all 
>next
>requests
>
>
>All this looks like Apache Graceful Restart
>http://httpd.apache.org/docs/2.0/en/stopping.html

This is application-specific behavior that you'll have to implement 
yourself.

Jean-Paul


From ruslan.usifov at gmail.com  Thu Sep 23 15:49:28 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 23 Sep 2010 23:49:28 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
	<AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
	<20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>
Message-ID: <AANLkTi=0Z4+jyZbuvcJkLkfpUZ0Z9k-NY6Bx8iaidu0m@mail.gmail.com>

I know, i have simply hope that anybody solved a similar problem and could
share source codes :-)))


This is application-specific behavior that you'll have to implement
> yourself.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100923/bc2dbbb1/attachment.htm 

From cournape at gmail.com  Thu Sep 23 21:49:24 2010
From: cournape at gmail.com (David Cournapeau)
Date: Fri, 24 Sep 2010 10:49:24 +0900
Subject: [Twisted-Python] How to exit a twistd program with a status code ?
Message-ID: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>

Hi,

I have a program run through twistd, and would like to exit with a non
zero status code on some error. I have a callback which stops the
reactor and then sys.exit(some_value), but twistd still seems to catch
the SystemExit exception after calling for reactor.stop():

Unhandled error in Deferred:
Traceback (most recent call last):
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 1031, in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/home/david/local/lib/python2.6/site-packages/twisted/web/client.py",
line 350, in clientConnectionFailed
    self.deferred.errback(reason)
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 307, in errback
    self._startRunCallbacks(fail)
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 354, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 371, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "scripts/tests/run_tests.py", line 69, in exit_on_error
    sys.exit(1)
exceptions.SystemExit: 1

What's the correct way of doing this ?

cheers,

David


From zooko at zooko.com  Fri Sep 24 03:57:21 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Fri, 24 Sep 2010 01:57:21 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.0
Message-ID: <AANLkTimuZjukZ7bXeM7CbWzeMsrc_dg2rP7_Rg-ew5zE@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.0

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.0 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" ? meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.7.1, which was
released July 18, 2010 [1].

v1.8.0 offers greatly improved performance and fault-tolerance
of downloads and improved Windows support. See the NEWS file
[2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.txt file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the eleventh release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the fifth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

September 23, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4579
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4732
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4591
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/


From ypercube at gmail.com  Fri Sep 24 07:09:08 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 24 Sep 2010 14:09:08 +0300
Subject: [Twisted-Python] How to exit a twistd program with a status
	code ?
In-Reply-To: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
Message-ID: <AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>

I think that you should not put the sys.exit(1) call, after the
reactor.stop() call.

From andrew at bemusement.org  Fri Sep 24 07:31:18 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Fri, 24 Sep 2010 21:31:18 +1000
Subject: [Twisted-Python] How to exit a twistd program with a status
 code ?
In-Reply-To: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
Message-ID: <20100924113118.GC2633@aihal.home.puzzling.org>

David Cournapeau wrote:
> Hi,
> 
> I have a program run through twistd, and would like to exit with a non
> zero status code on some error. I have a callback which stops the
> reactor and then sys.exit(some_value), but twistd still seems to catch
> the SystemExit exception after calling for reactor.stop():

This isn't a good answer, exactly, but it may do the trick...

import os
reactor.addSystemEventTrigger('after', 'shutdown', os._exit, some_value)
reactor.stop()

I'm not sure that controlling the process exit value really fits nicely
with twistd's purpose, though.

-Andrew.



From exarkun at twistedmatrix.com  Fri Sep 24 08:43:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Sep 2010 12:43:23 -0000
Subject: [Twisted-Python] How to exit a twistd program with a status
	code ?
In-Reply-To: <AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
	<AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
Message-ID: <20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>

On 11:09 am, ypercube at gmail.com wrote:
>I think that you should not put the sys.exit(1) call, after the
>reactor.stop() call.
>> From my very limited understanding of how Twisted reactor works, it 
>>could be
>done with something like:
>
>    statusCode = 1 #or whatever
>    reactor.stop()
>
>in the method that stops the reactor
>
>and the exit call should be added where (after) the reactor is started:
>
>    reactor.run()
>    # this will be executed after reactor stops
>    sys.exit(statusCode)
>
>Please, correct me if I write nonsense here.

Your understanding seems correct to me. :)  This is basically how the 
feature would be implemented.  Since David is using `twistd` though, he 
doesn't get to put extra code after the `reactor.run()` call.

http://twistedmatrix.com/trac/ticket/2182 is a ticket for adding a 
feature to `twistd` to make this easier.

Jean-Paul


From general at vultaire.net  Fri Sep 24 09:39:23 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 24 Sep 2010 22:39:23 +0900
Subject: [Twisted-Python] How to exit a twistd program with a
 status	code ?
In-Reply-To: <20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>	<AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
	<20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>
Message-ID: <4C9CAA0B.1050309@vultaire.net>

I'd like to add my two cents here; maybe this may be valuable to someone.

I might suggest, if reasonable, to allow for running the app with or 
without twistd.  twistd is really handy for 
profiling/debugging/daemonizing/etc., but it does lack in other areas 
such as command line args and (new to me) return codes.


The last few apps I've done, I've set up a standard Python entry point like:

   #!/usr/bin/env python
   from twisted.internet import reactor
   from myapp import main

   if __name__ == "__main__":
       # For quick/easy logging when running undaemonized
       log.startLogging(sys.stdout)

       reactor.callWhenRunning(main)
       reactor.run()


Along with something for creating the application object in .tac files:

   from twisted.application.service import Application
   from twisted.internet import reactor
   from twisted.python.syslog import SyslogObserver
   from myapp import main

   def create_application():
       app = Application("foo")

       # More robust logging for daemonized (production) mode
       observer = SyslogObserver("bar")
       app.setComponent(ILogObserver, observer.emit)

       reactor.callWhenRunning(main)
       return app


And then, you end up with possibly a really simple .tac file:

   import myapp.tacapp
   application = myapp.tacapp.create_application()


That seems to give the best of both worlds from what I've seen.  Haven't 
seen any key drawbacks yet.

- Paul Goins


From exarkun at twistedmatrix.com  Sat Sep 25 12:06:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 25 Sep 2010 16:06:30 -0000
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>

On 11 Sep, 11:18 pm, therve at free.fr wrote:
>It's this time of the year again! From the dangerous and intrepid land
>of Montr?al, Canada, I have the pleasure to announce the first 10.2.0
>pre-release.
>
>Tarballs for Twisted 10.2.0pre1 are now available at:
>  http://people.canonical.com/~therve/Twisted/10.2.0pre1/
>
>
>Highlights include:
>
>* A new implementation of the Deferred callbacks firing, which now
>handles chains iteratively instead of recursively, and should prevent
>recursion errors.
>
>* Deferred.setTimeout has finally been removed.

Maybe we can also mention the new email auth example and the 
spawnProcess optimization?  Or a few other issues that seem interesting. 
The Deferred changes are cool, but only having two highlights for the 
release seems weak.
>And the usual load of bug fixes. For more information, see the NEWS 
>file.
>
>
>Please download the tarballs and test them as much as possible. I
>intend to do a final release within the next 2 weeks, if I didn't die
>by ingestion of poutine.

I did a user install (without setuptools) on Ubuntu 9.10.  Some 
observations:

  * #4503 was misclassified as a core bug, but it's a words bug.
  * There are still .doc files in the topfiles directories
  * There are two trial test failures, apparently the ones fixed by #4608
  * The topfiles directories all get installed
  * twisted/web/test/test_util.py appears to be missing

Aside from the two trial failures the test suite passes.  I'm installing 
this on my mail server now, I'll post again if I run into any troubles 
there.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Sep 26 00:05:21 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Sep 2010 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1285473921.36.1509890443@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100926/b27e315b/attachment.htm 

From xieweikai at gmail.com  Sun Sep 26 02:23:05 2010
From: xieweikai at gmail.com (Weikai Xie)
Date: Sun, 26 Sep 2010 14:23:05 +0800
Subject: [Twisted-Python] how to abort a Protocol connection
Message-ID: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>

Folks,
    I have a usage case where the server need to abort a client TCP
connection (implemented by Protocol) immediately. However, the normal
Protocol.transport.loseConnection() will try to send pending data to
the client first before close the connection.
    Currently I used an ugly hack to work around it, where I set
Protocol.transport._writeDisconnected=True before call
Protocol.transport.loseConnection() , which can fool the
loseConnection to  give up writing pending data. But I think there
should be some more elegant way to do it. Any idea?


Regards.

Weikai Xie


From exarkun at twistedmatrix.com  Sun Sep 26 22:39:00 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 27 Sep 2010 02:39:00 -0000
Subject: [Twisted-Python] how to abort a Protocol connection
In-Reply-To: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>
References: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>
Message-ID: <20100927023900.4943.1650235315.divmod.xquotient.4@localhost.localdomain>

On 26 Sep, 06:23 am, xieweikai at gmail.com wrote:
>Folks,
>    I have a usage case where the server need to abort a client TCP
>connection (implemented by Protocol) immediately. However, the normal
>Protocol.transport.loseConnection() will try to send pending data to
>the client first before close the connection.
>    Currently I used an ugly hack to work around it, where I set
>Protocol.transport._writeDisconnected=True before call
>Protocol.transport.loseConnection() , which can fool the
>loseConnection to  give up writing pending data. But I think there
>should be some more elegant way to do it. Any idea?

Unfortunately the best answer I have is a reference to an open ticket:

  http://twistedmatrix.com/trac/ticket/78

The feature you want seems to be largely implemented in a branch 
associated with that ticket, but seems to be blocked by some Windows/SSL 
issues.

Jean-Paul


From jml at mumak.net  Mon Sep 27 08:33:38 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Sep 2010 13:33:38 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>
References: <1284247101.2007.1.camel@localhost>
	<20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>
Message-ID: <AANLkTi=D0LGMwBG39V2+4UXbLW10Z+FEXTB9eisHbXgQ@mail.gmail.com>

On Sat, Sep 25, 2010 at 5:06 PM,  <exarkun at twistedmatrix.com> wrote:
...
> I did a user install (without setuptools) on Ubuntu 9.10. ?Some
> observations:
>
> ?* #4503 was misclassified as a core bug, but it's a words bug.
> ?* There are still .doc files in the topfiles directories

This sounds like a bug in the release process or in the tools
themselves. Thomas, would you be able to file a bug about this?

> ?* The topfiles directories all get installed
> ?* twisted/web/test/test_util.py appears to be missing
>

Likewise, these seem to be bugs in release tools.

> Aside from the two trial failures the test suite passes. ?I'm installing
> this on my mail server now, I'll post again if I run into any troubles
> there.
>

Thanks for testing.

jml


From landreville at deadtreepages.com  Mon Sep 27 10:45:56 2010
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 27 Sep 2010 10:45:56 -0400
Subject: [Twisted-Python] Handling too many open file descriptors
Message-ID: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>

I'm running an application that makes about 1300 snmp connections
every minute; I'm using utils.getProcessOutput with snmpget because
pysnmp throws an error when I try to run it. Now of course I get the
Too many open files error, but is the best way to handle this
increasing the limit on Linux or by implementing some sort of queue so
that there are only x number of the snmpget processes at a time? Is
there such a queue feature in twisted?


Thanks,

Jason


From arjan at scherpenisse.net  Mon Sep 27 10:52:58 2010
From: arjan at scherpenisse.net (Arjan Scherpenisse)
Date: Mon, 27 Sep 2010 16:52:58 +0200
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
Message-ID: <4CA0AFCA.9080700@scherpenisse.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Looks like a DeferredSemaphore might be your solution. Have a look at
this article, which explains that + a lot more:

http://oubiwann.blogspot.com/2008/06/async-batching-with-twisted-walkthrough.html

Arjan


On 09/27/2010 04:45 PM, Landreville wrote:
> I'm running an application that makes about 1300 snmp connections
> every minute; I'm using utils.getProcessOutput with snmpget because
> pysnmp throws an error when I try to run it. Now of course I get the
> Too many open files error, but is the best way to handle this
> increasing the limit on Linux or by implementing some sort of queue so
> that there are only x number of the snmpget processes at a time? Is
> there such a queue feature in twisted?
> 
> 
> Thanks,
> 
> Jason
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkygr8cACgkQigE4AbflYeoQMACdHfBS6lEA5qZnkgy/0qzBuW5V
fnwAoLFSTSU4uogGToqDF6l8eYv+WUpP
=5H8w
-----END PGP SIGNATURE-----


From exarkun at twistedmatrix.com  Mon Sep 27 10:53:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 27 Sep 2010 14:53:39 -0000
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
Message-ID: <20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>

On 02:45 pm, landreville at deadtreepages.com wrote:
>I'm running an application that makes about 1300 snmp connections
>every minute; I'm using utils.getProcessOutput with snmpget because
>pysnmp throws an error when I try to run it. Now of course I get the
>Too many open files error, but is the best way to handle this
>increasing the limit on Linux or by implementing some sort of queue so
>that there are only x number of the snmpget processes at a time? Is
>there such a queue feature in twisted?

It doesn't seem likely to me that it's useful to have a thousand smtpget 
processes running at once.  But who knows, maybe it is.  To actually 
know, you'll have to decide what your requirements are (how many do you 
actually have to run in parallel to get the throughput you need?  how 
hard are you willing to thrash the machine you're running on?) and then 
measure various approaches and configurations.

If you decide you want to limit the number of snmpget processes you 
launch, then you might find twisted.internet.defer.DeferredSemaphore 
useful (and since the API docs for it are messed up, make sure you find 
the "run" method, not just the "acquire" and "release" methods).

Jean-Paul


From landreville at deadtreepages.com  Mon Sep 27 11:52:49 2010
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 27 Sep 2010 11:52:49 -0400
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
	<20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>
Message-ID: <AANLkTi=guZJ65X-sVbt1sr--dADh3x2DeWfUDpRJ6+v=@mail.gmail.com>

On Mon, Sep 27, 2010 at 10:53 AM,  <exarkun at twistedmatrix.com> wrote:
> On 02:45 pm, landreville at deadtreepages.com wrote:
>>I'm running an application that makes about 1300 snmp connections
>>every minute; I'm using utils.getProcessOutput with snmpget because
>>pysnmp throws an error when I try to run it. Now of course I get the
>>Too many open files error, but is the best way to handle this
>>increasing the limit on Linux or by implementing some sort of queue so
>>that there are only x number of the snmpget processes at a time? Is
>>there such a queue feature in twisted?
>
> It doesn't seem likely to me that it's useful to have a thousand smtpget
> processes running at once. ?But who knows, maybe it is. ?To actually
> know, you'll have to decide what your requirements are (how many do you
> actually have to run in parallel to get the throughput you need? ?how
> hard are you willing to thrash the machine you're running on?) and then
> measure various approaches and configurations.
>
> If you decide you want to limit the number of snmpget processes you
> launch, then you might find twisted.internet.defer.DeferredSemaphore
> useful (and since the API docs for it are messed up, make sure you find
> the "run" method, not just the "acquire" and "release" methods).
>
> Jean-Paul
>

I've got to get two values (but both can be grabbed at the same time
with snmpget) from each of the interfaces (and inserted into database)
every minute. The machine is dedicated to this, so its cool with the
processing. The only thing is finding out how much parallelism I need
to get each one every minute. Technically I don't need any  parallel
processing right now as I can grab them serially in just under a
minute (bash script) but there will be more interfaces added
periodically so I need to get the fetch time down a little bit.

I'm already playing with deferred semaphore which is neat, but I
haven't looked at the stats for the fetching yet (whether it succeeds
in grabbing the value every minute)


From powdahound at gmail.com  Mon Sep 27 23:15:15 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 27 Sep 2010 20:15:15 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
	when using pseudo terminal
Message-ID: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>

To me this seems like a very strange problem and I've tried to debug it best
I can but I don't know much about many of the components at work. Here's
what happened:

I've been happily using Capistrano to deploy many twistd services to Ubuntu
9.04 machines. It restarts them via an init.d script based off this
template: http://twistedmatrix.com/trac/attachment/ticket/3434/twistdplugin.
I'm running a self-installed Twisted 8.2.0 on both systems with some small
tweaks to logging.

On newer Ubuntu 10.04 machines I've been deploying to the twistd services
don't restart properly. There are no errors in the log. The only log lines
I'd get were:
[-] Log opened.
[-] twistd 8.2.0 (/usr/bin/python 2.6.5) starting up.
[-] reactor class: twisted.internet.epollreactor.EPollReactor.

But they were only failing to restart when run via Capistrano. I realized
that the only difference was that Capistrano was using a pseudo terminal
when it issued its commands. To recreate the problem without Capistrano I
can run:
> ssh -t user at host "/etc/init.d/service start"

But it works fine when I run:
> ssh user at host "/etc/init.d/service start"

The 3 log lines I see in the failed case are written by twistd before it
forks (clone() syscall) to create the daemon process. The strace dump of
twistd when run with and without pseudo terminal were identical. I tried
running strace with the -f option to get some info about the child process
but it didn't fail in that case since I guess it doesn't actually fork.
Running in a pseudo terminal with --nodaemon passed to twistd also works
fine.

I've tested this with multiple twistd services and am having the same issue
with all of them.

Any ideas? Did I completely misdiagnose the problem? Has there been some
change in this area between Twisted 8.2.0 and 10.x? I'm certainly confused.
:)

- Garret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100927/9e6867ef/attachment.htm 

From orsenthil at gmail.com  Tue Sep 28 06:16:47 2010
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Tue, 28 Sep 2010 15:46:47 +0530
Subject: [Twisted-Python] getProcessOutput - Can it be made to return
	'output' instead of differed
Message-ID: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>

Hello,

My current application structure is like this:

If something:
   d = defertoThread(func1,params1)
if something2:
   d = defertoThread(func2, params2)
...


d.addCallback(lambda r: transport.write(r)

I had designed it this way because, the functions, func1, func2 etc..
were all assumed to be Blocking ones.
One of them, internally uses subprocess.Popen() and executes the
command and returns the output. All is fine till now.

But I had situation, where for the process which is executed via
subprocess module, I had to attach a pseudo-terminal.
subprocess does not have a mechanism to send a pseudo-terminal to the process.

So, I looked into utils.getProcessOutput and found that it does have a
mechanism to send a psuedo-terminal to the process.
But the problem I am facing is,  if I replace the subprocess Call in
one of those functions (which are called via deferToThread ), I might
need to return the value (in a blocking way) so that it fits in rest
of the program well.


So, my question is, how can I make utils.getProcessOutput return value
instead of a differed. I am okay if it blocks.

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/internet/utils.py

Please let me know if you have any other suggestions. (I am still a
learner here).

TIA,


-- 
Senthil


From exarkun at twistedmatrix.com  Tue Sep 28 08:51:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Sep 2010 12:51:22 -0000
Subject: [Twisted-Python] getProcessOutput - Can it be made to
	return	'output' instead of differed
In-Reply-To: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
References: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
Message-ID: <20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>

On 10:16 am, orsenthil at gmail.com wrote:
>Hello,
>
>My current application structure is like this:
>
>If something:
>   d = defertoThread(func1,params1)
>if something2:
>   d = defertoThread(func2, params2)
>...
>
>
>d.addCallback(lambda r: transport.write(r)
>
>I had designed it this way because, the functions, func1, func2 etc..
>were all assumed to be Blocking ones.
>One of them, internally uses subprocess.Popen() and executes the
>command and returns the output. All is fine till now.
>
>But I had situation, where for the process which is executed via
>subprocess module, I had to attach a pseudo-terminal.
>subprocess does not have a mechanism to send a pseudo-terminal to the 
>process.
>
>So, I looked into utils.getProcessOutput and found that it does have a
>mechanism to send a psuedo-terminal to the process.
>But the problem I am facing is,  if I replace the subprocess Call in
>one of those functions (which are called via deferToThread ), I might
>need to return the value (in a blocking way) so that it fits in rest
>of the program well.
>
>
>So, my question is, how can I make utils.getProcessOutput return value
>instead of a differed. I am okay if it blocks.

It's "Deferred" not "differed".  You cannot make getProcessOutput return 
anything but a Deferred.  Also, you cannot call getProcessOutput from a 
thread.

If you're removing the code that blocks, then you should be able to stop 
using deferToThread.  Then you just have to call getProcessOutput to get 
your `d` above (or another function that calls it and perhaps adds a 
callback or two).

Jean-Paul


From orsenthil at gmail.com  Tue Sep 28 09:40:53 2010
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Tue, 28 Sep 2010 19:10:53 +0530
Subject: [Twisted-Python] getProcessOutput - Can it be made to return
 'output' instead of differed
In-Reply-To: <20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>
References: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
	<20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>
Message-ID: <20100928134053.GA2857@remy>

On Tue, Sep 28, 2010 at 12:51:22PM -0000, exarkun at twistedmatrix.com wrote:
> 
> If you're removing the code that blocks, then you should be able to stop 
> using deferToThread.  Then you just have to call getProcessOutput to get 
> your `d` above (or another function that calls it and perhaps adds a 
> callback or two).

Thanks for the response. I could recognize this option, I just thought
that structurally it might odd as only one of them is a defer from a process while
others will be from thread. But I guess, it does not matter.

I shall try this approach.

Thanks,
Senthil


From chris at simplistix.co.uk  Tue Sep 28 09:48:02 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Tue, 28 Sep 2010 14:48:02 +0100
Subject: [Twisted-Python] how to write a safe catch-all
Message-ID: <4CA1F212.9040305@simplistix.co.uk>

Hi All,

The attached .py file demonstrates a problem I'm having with a little 
scheduler I need to maintain.

The loop() function is supposed to be a "catch all and report" error 
handler. However, when the async code initiated by doStuff throws the 
AttributeError, what actually gets logged is:

2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): 
Unhandled Error
Traceback (most recent call last):
   File "test_looping.py", line 41, in <module>
     reactor.run()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1128, in run
     self.mainLoop()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1137, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 757, in runUntilCurrent
     call.func(*call.args, **call.kw)
   File "test_looping.py", line 24, in __call__
     del self.connector
exceptions.AttributeError: Break instance has no attribute 'connector'

2010-09-28 14:41:15,707 ERROR   : log         (14757|7f691ba676e0): 
Unhandled scheduled exception
Traceback (most recent call last):
   File "test_looping.py", line 41, in <module>
     reactor.run()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1128, in run
     self.mainLoop()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1137, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "test_looping.py", line 35, in loop
     yield doStuff()
exceptions.GeneratorExit:

But, more crucially, the looping call then appears to stop.
What can I do to get the exception logged and then everything handled 
sanely such that the looping call can continue and my lopp function will 
keep getting called once every second rather than stopping?

cheers,

Chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_looping.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100928/650d8b7a/attachment.txt 

From exarkun at twistedmatrix.com  Tue Sep 28 10:21:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Sep 2010 14:21:51 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA1F212.9040305@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
Message-ID: <20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>

On 01:48 pm, chris at simplistix.co.uk wrote:
>Hi All,
>
>The attached .py file demonstrates a problem I'm having with a little 
>scheduler I need to maintain.
>
>The loop() function is supposed to be a "catch all and report" error 
>handler. However, when the async code initiated by doStuff throws the 
>AttributeError, what actually gets logged is:
>
>2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): 
>Unhandled Error
>   File "test_looping.py", line 24, in __call__
>     del self.connector
>exceptions.AttributeError: Break instance has no attribute 'connector'
>
>2010-09-28 14:41:15,707 ERROR   : log         (14757|7f691ba676e0): 
>Unhandled scheduled exception
>   File "test_looping.py", line 35, in loop
>     yield doStuff()
>exceptions.GeneratorExit:
>
>But, more crucially, the looping call then appears to stop.

The function you're looping over returns a Deferred that never fires. 
The LoopingCall isn't stopped, it's waiting for the Deferred.
>What can I do to get the exception logged and then everything handled 
>sanely such that the looping call can continue and my lopp function 
>will keep getting called once every second rather than stopping?

When you do reactor.callLater(n, f), you put f into an execution context 
where the only thing that will happen to exceptions it raises is that 
they will be logged.  If you want something else to happen to the 
exception, then you have to arrange for that.  You can do this by 
wrapping f with another function that handles the exception and sends it 
where you want.  Or you can use twisted.internet.task.deferLater, which 
probably does something pretty close to what you want.

Jean-Paul


From chris at simplistix.co.uk  Wed Sep 29 11:56:21 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 16:56:21 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
Message-ID: <4CA361A5.2090005@simplistix.co.uk>

On 28/09/2010 15:21, exarkun at twistedmatrix.com wrote:
>> But, more crucially, the looping call then appears to stop.
>
> The function you're looping over returns a Deferred that never fires.
> The LoopingCall isn't stopped, it's waiting for the Deferred.

So, inlineCallbacks/generator things will only process errbacks, not 
actual exceptions raised inside asyncronous code called from them?!

>> What can I do to get the exception logged and then everything handled
>> sanely such that the looping call can continue and my lopp function
>> will keep getting called once every second rather than stopping?
>
> When you do reactor.callLater(n, f), you put f into an execution context
> where the only thing that will happen to exceptions it raises is that
> they will be logged.

Okay, the script was a simplification of the "real problem" to try and 
give the list a "smallest failing example to try and help with".

The real logging looks like this:

2010-09-27 15:30:16,340 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled exception sending schedule transmission
Traceback (most recent call last):
   File 
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/python/context.py", line 
37, in callWithContext
     return func(*args,**kw)
   File 
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/selectreactor.py", line 
146, in _doReadOrWrite
     why = getattr(selectable, method)()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py", 
line 631, in doConnect
     self.failIfNotConnected(error.getConnectError((err, strerror(err))))
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py", 
line 588, in failIfNotConnected
     del self.connector
--- <exception caught here> ---
   File "ourcode.py", line 180, in checkSchedule
     yield self.sendTransmissions(...)
exceptions.GeneratorExit:

2010-09-27 15:30:28,428 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled error in Deferred:
2010-09-27 15:30:28,584 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled Error
Traceback (most recent call last):
Failure: twisted.protocols.ftp.FTPError: ('Connection Failed', 
<twisted.python.failure.Failure <class 
'twisted.internet.error.ConnectError'>>)

I don't quite follow what the above is trying to tell me, other than an 
FTP connection failed. However, I don't understand why that results in a 
GeneratorExit rather than an errback of the original exception being 
caught by the top level handler in the loop() function (switching back 
to the example terminology for simplicity). I also don't understand why 
an unhandled deferred is being logged rather than fed back into the 
handler I built for it!

> exception, then you have to arrange for that.  You can do this by
> wrapping f with another function that handles the exception and sends it
> where you want.

Well, as far as I can tell, that's what I'm trying to do. However, the 
thing failing in the real world is in code I don't "own" (looks like 
twisted's inards...) and I'd like to be able to cater for any failure, 
unforseen or not (barring say a SyntaxError ;-)) and still have the 
loop() call keep doing its thing.

How can I do that?

Chris


From p.mayers at imperial.ac.uk  Wed Sep 29 12:16:53 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 29 Sep 2010 17:16:53 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA361A5.2090005@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
Message-ID: <4CA36675.5010603@imperial.ac.uk>

On 29/09/10 16:56, Chris Withers wrote:
> On 28/09/2010 15:21, exarkun at twistedmatrix.com wrote:
>>> But, more crucially, the looping call then appears to stop.
>>
>> The function you're looping over returns a Deferred that never fires.
>> The LoopingCall isn't stopped, it's waiting for the Deferred.
>
> So, inlineCallbacks/generator things will only process errbacks, not
> actual exceptions raised inside asyncronous code called from them?!

No.

The problem is that your example is malformed. You do this:

  1. Create a deferred on the "Break" class instance
  2. Return it from doStuff
  3. You "callLater" doesn't touch that deferred, so the 
generator/doStuff call a) never calls back and b) discards any errors 
that happen inside callLater.

You want something like this:

class Break:

     def __init__(self):
         self.deferred = Deferred()

     def __call__(self):
         try:
             del self.connector
         except:
             self.deferred.errback()
         else:
             self.deferred.callback(1)



From chris at simplistix.co.uk  Wed Sep 29 13:16:30 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 18:16:30 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA36675.5010603@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
Message-ID: <4CA3746E.2040800@simplistix.co.uk>

On 29/09/2010 17:16, Phil Mayers wrote:
> No.
>
> The problem is that your example is malformed.

Well, it's not, it's the reality of the situation and one I'd like to 
protect against; "the scheduler must not die" is the rule I need to make 
work...

> You do this:
>
>    1. Create a deferred on the "Break" class instance

The "Break" class, in reality, is the bowels of 
twisted.protocols.ftp.FTPClient, copying from my previous mail:

      self.failIfNotConnected(error.getConnectError((err, strerror(err))))
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 588, in failIfNotConnected
      del self.connector
--- <exception caught here> ---
    File "ourcode.py", line 180, in checkSchedule
      yield self.sendTransmissions(...)
exceptions.GeneratorExit:

How can I protect my scheduler against code which doesn't catch an 
exception when it should?

cheers,

Chris


From exarkun at twistedmatrix.com  Wed Sep 29 13:31:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 17:31:31 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3746E.2040800@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
Message-ID: <20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>

On 05:16 pm, chris at simplistix.co.uk wrote:
>On 29/09/2010 17:16, Phil Mayers wrote:
>>No.
>>
>>The problem is that your example is malformed.
>
>Well, it's not, it's the reality of the situation and one I'd like to
>protect against; "the scheduler must not die" is the rule I need to 
>make
>work...
>>You do this:
>>
>>    1. Create a deferred on the "Break" class instance
>
>The "Break" class, in reality, is the bowels of
>twisted.protocols.ftp.FTPClient, copying from my previous mail:
>
>      self.failIfNotConnected(error.getConnectError((err, 
>strerror(err))))
>    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
>line 588, in failIfNotConnected
>      del self.connector
>--- <exception caught here> ---
>    File "ourcode.py", line 180, in checkSchedule
>      yield self.sendTransmissions(...)
>exceptions.GeneratorExit:
>
>How can I protect my scheduler against code which doesn't catch an
>exception when it should?

Then you're talking about an API in Twisted which returns a Deferred 
that sometimes doesn't errback when the implementation encounters an 
error.

Also, `failIfNotConnected` should never raise an exception.

These sound like bugs.

File a couple tickets.  With a unit tests please. :)

Jean-Paul


From ruslan.usifov at gmail.com  Wed Sep 29 13:40:07 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 29 Sep 2010 21:40:07 +0400
Subject: [Twisted-Python] reactor.stop if no any clients
Message-ID: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>

If we stop listening, how can i wait while all client connection (which was
accepted before stopListening) processed and then call reactor.stop?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100929/f8fde553/attachment.htm 

From powdahound at gmail.com  Wed Sep 29 13:48:30 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Wed, 29 Sep 2010 10:48:30 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
	when using pseudo terminal
In-Reply-To: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
Message-ID: <AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>

I've simplified this issue down and am able to reproduce it without
Twisted: http://gist.github.com/603154

Still not sure what the cause is, so if anyone has any ideas I'd love to
hear them. Thanks!

On Mon, Sep 27, 2010 at 8:15 PM, Garret Heaton <powdahound at gmail.com> wrote:

> To me this seems like a very strange problem and I've tried to debug it
> best I can but I don't know much about many of the components at work.
> Here's what happened:
>
> I've been happily using Capistrano to deploy many twistd services to Ubuntu
> 9.04 machines. It restarts them via an init.d script based off this
> template:
> http://twistedmatrix.com/trac/attachment/ticket/3434/twistdplugin. I'm
> running a self-installed Twisted 8.2.0 on both systems with some small
> tweaks to logging.
>
> On newer Ubuntu 10.04 machines I've been deploying to the twistd services
> don't restart properly. There are no errors in the log. The only log lines
> I'd get were:
> [-] Log opened.
> [-] twistd 8.2.0 (/usr/bin/python 2.6.5) starting up.
> [-] reactor class: twisted.internet.epollreactor.EPollReactor.
>
> But they were only failing to restart when run via Capistrano. I realized
> that the only difference was that Capistrano was using a pseudo terminal
> when it issued its commands. To recreate the problem without Capistrano I
> can run:
> > ssh -t user at host "/etc/init.d/service start"
>
> But it works fine when I run:
> > ssh user at host "/etc/init.d/service start"
>
> The 3 log lines I see in the failed case are written by twistd before it
> forks (clone() syscall) to create the daemon process. The strace dump of
> twistd when run with and without pseudo terminal were identical. I tried
> running strace with the -f option to get some info about the child process
> but it didn't fail in that case since I guess it doesn't actually fork.
> Running in a pseudo terminal with --nodaemon passed to twistd also works
> fine.
>
> I've tested this with multiple twistd services and am having the same issue
> with all of them.
>
> Any ideas? Did I completely misdiagnose the problem? Has there been some
> change in this area between Twisted 8.2.0 and 10.x? I'm certainly confused.
> :)
>
> - Garret
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100929/1c52aeca/attachment.htm 

From jml at mumak.net  Wed Sep 29 13:52:10 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 29 Sep 2010 18:52:10 +0100
Subject: [Twisted-Python] reactor.stop if no any clients
In-Reply-To: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>
References: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>
Message-ID: <AANLkTimVFRE26tRSWRbJJsfedJmsC48KtPcxAzeTRm2C@mail.gmail.com>

On Wed, Sep 29, 2010 at 6:40 PM, ruslan usifov <ruslan.usifov at gmail.com> wrote:
> If we stop listening, how can i wait while all client connection (which was
> accepted before stopListening) processed and then call reactor.stop?
>

In your factory, keep a count of the number of clients you have and
whether stopListening has been called. In your protocol's
connectionLost() method, decrease that count by one and check to see
if it's zero. If it's zero, and stopListening has been called, call
reactor.stop().

jml


From chris at simplistix.co.uk  Wed Sep 29 16:27:53 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 21:27:53 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
Message-ID: <4CA3A149.1000703@simplistix.co.uk>

On 29/09/2010 18:31, exarkun at twistedmatrix.com wrote:
> Then you're talking about an API in Twisted which returns a Deferred
> that sometimes doesn't errback when the implementation encounters an
> error.
>
> Also, `failIfNotConnected` should never raise an exception.
>
> These sound like bugs.
>
> File a couple tickets.  With a unit tests please. :)

That's one side of things, sure, but how can I write a scheduler which 
handles the current situation?

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk


From exarkun at twistedmatrix.com  Wed Sep 29 17:06:41 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 21:06:41 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3A149.1000703@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
Message-ID: <20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>

On 08:27 pm, chris at simplistix.co.uk wrote:
>On 29/09/2010 18:31, exarkun at twistedmatrix.com wrote:
>>Then you're talking about an API in Twisted which returns a Deferred
>>that sometimes doesn't errback when the implementation encounters an
>>error.
>>
>>Also, `failIfNotConnected` should never raise an exception.
>>
>>These sound like bugs.
>>
>>File a couple tickets.  With a unit tests please. :)
>
>That's one side of things, sure, but how can I write a scheduler which
>handles the current situation?

Beats me.  I don't know exactly what bug you're hitting or how it's 
triggered, so I can't suggest a fix.  A unit test would clarify the 
situation.

Jean-Paul


From chris at simplistix.co.uk  Wed Sep 29 18:56:16 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 23:56:16 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
Message-ID: <4CA3C410.8090401@simplistix.co.uk>

On 29/09/2010 22:06, exarkun at twistedmatrix.com wrote:
>> That's one side of things, sure, but how can I write a scheduler which
>> handles the current situation?
>
> Beats me.

So, if some buggy code that should be doing a deferred callback/errback 
instead raises an exception, you're basically screwed?

There's really no way to write a "safety belt" handler that will record 
the problem but then keep going?!

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk


From glyph at twistedmatrix.com  Wed Sep 29 19:31:29 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Sep 2010 19:31:29 -0400
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3C410.8090401@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
Message-ID: <BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>


On Sep 29, 2010, at 6:56 PM, Chris Withers wrote:

> On 29/09/2010 22:06, exarkun at twistedmatrix.com wrote:
>>> That's one side of things, sure, but how can I write a scheduler which
>>> handles the current situation?
>> 
>> Beats me.
> 
> So, if some buggy code that should be doing a deferred callback/errback 
> instead raises an exception, you're basically screwed?
> 
> There's really no way to write a "safety belt" handler that will record 
> the problem but then keep going?!
> 
> Chris

There are so many ways.

You can add a log observer that handles isError=True log messages.

You can write a 'safetyBelt' function that catches the exception and does something with it.

You can always invoke your code with maybeDeferred, which will turn exceptions into failures for you.

You can use inlineCallbacks, where in 'x = yield y()', y() raising an exception and y() returning a failed Deferred are basically indistinguishable to the caller.

And there are hundreds of subtle variations on each of these approaches.

Why would you say there's no way?

From chris at simplistix.co.uk  Wed Sep 29 20:52:12 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 01:52:12 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
Message-ID: <4CA3DF3C.2000706@simplistix.co.uk>

On 30/09/2010 00:31, Glyph Lefkowitz wrote:
>
> There are so many ways.

Yes, that's what I thought, which is why I was confused to keep on 
getting "fix the code" responses when I'd already pointed out it wasn't 
my code to fix, and I'd like to build a solution that caters even for 
this eventually...

> You can add a log observer that handles isError=True log messages.

Okay, and this would mean that my `loop` function from the example I 
posted would keep getting called by LoopingCall?

> You can write a 'safetyBelt' function that catches the exception and does something with it.

 From my original example, I'm pretty sure that's what my `loop` 
function is; I'm confused as to why it catches a GeneratorExit when the 
attribute error is indirectly raised in the `doStuff` function, and more 
confused that even thought the GeneratorExit has been caught, the calls 
to `loop` from LoopingCall cease...

> You can always invoke your code with maybeDeferred, which will turn exceptions into failures for you.

In "the real app", we have another layer or two between doStuff and 
Break, one of which does call down with maybeDeferred, doesn't make any 
difference...

> You can use inlineCallbacks, where in 'x = yield y()', y() raising an exception and y() returning a failed Deferred are basically indistinguishable to the caller.

Yes, as you can see, this is what `loop` does. In "the real app", 
doStuff is actually @inlineCallbacks as well, the level below that calls 
with a maybeDeferred and so yes, doing this, same result...

> Why would you say there's no way?

Because I haven't found any permutation that doesn't result in the 
LoopingCall's calls to `loop` from stopping after the exception.

I would be more than ecstatic to be proved wrong ;-)

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk


From zubin.mithra at gmail.com  Wed Sep 29 21:49:49 2010
From: zubin.mithra at gmail.com (Zubin Mithra)
Date: Thu, 30 Sep 2010 07:19:49 +0530
Subject: [Twisted-Python] Small practice application
Message-ID: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>

Hi everyone,

I've decided to write a Tic-Tac-Toe gameserver and client(no biggie, just
for getting used to twisted as I'm pretty new to it). The gameserver
facilitates the connection between two clients and maintains the game state.

I'm having trouble deciding how to create factories and protocols for the
server.

What I am expecting is a toss to decide who plays first followed by a move
from client in a sequential manner. The client sends messages of the format
"MOV 2 3" to specify co-ordinates on the board, when prompted by a "MAKE
MOVE" from the server.

So the server should alternate between connections, read and send data. How
do I accomplish something such as this?

Thanks,
zm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100930/66f063e2/attachment.htm 

From exarkun at twistedmatrix.com  Wed Sep 29 23:45:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 03:45:30 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3DF3C.2000706@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
Message-ID: <20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>

On 12:52 am, chris at simplistix.co.uk wrote:
>
>Because I haven't found any permutation that doesn't result in the
>LoopingCall's calls to `loop` from stopping after the exception.
>
>I would be more than ecstatic to be proved wrong ;-)

You keep saying the LoopingCall stops.  It does not stop.  It is waiting 
for a result.  If you provide it with a result, it will proceed.  Glyph 
suggested a number of (hackfully) mechanisms you might use to provide it 
with a result.  I suggested another way (fix the broken code, or at 
least supply enough information for someone else to fix it).

Jean-Paul


From zubin.mithra at gmail.com  Thu Sep 30 01:51:25 2010
From: zubin.mithra at gmail.com (Zubin Mithra)
Date: Thu, 30 Sep 2010 11:21:25 +0530
Subject: [Twisted-Python] Small practice application
In-Reply-To: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
References: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
Message-ID: <AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>

>
> Hi everyone,
>
> I've decided to write a Tic-Tac-Toe gameserver and client(no biggie, just
> for getting used to twisted as I'm pretty new to it). The gameserver
> facilitates the connection between two clients and maintains the game state.
>
> I'm having trouble deciding how to create factories and protocols for the
> server.
>
>
I have made little progress in this regard, please view it here.
http://paste.pocoo.org/show/269325/

I intend to read lines from clients based on the value of
ServerFactory.player in the following manner.


   - In the lineReceived() method. I check the value of self.factory.player.
   If the current instance is the (self.factory.player)th element of
   self.factory.connections. If yes, read the input, parse and make changes to
   the table. This is the basic idea for reading data and detecting which
   client it came from.

However, I am confused on how to write data over to a particular player(0 or
1). Is there any way I could choose to write to a particular object?

zm



> What I am expecting is a toss to decide who plays first followed by a move
> from client in a sequential manner. The client sends messages of the format
> "MOV 2 3" to specify co-ordinates on the board, when prompted by a "MAKE
> MOVE" from the server.
>
> So the server should alternate between connections, read and send data. How
> do I accomplish something such as this?
>
> Thanks,
> zm
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100930/fdc1cba3/attachment.htm 

From chris at simplistix.co.uk  Thu Sep 30 06:48:40 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 11:48:40 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
Message-ID: <4CA46B08.7000907@simplistix.co.uk>

On 30/09/2010 04:45, exarkun at twistedmatrix.com wrote:
> On 12:52 am, chris at simplistix.co.uk wrote:
>>
>> Because I haven't found any permutation that doesn't result in the
>> LoopingCall's calls to `loop` from stopping after the exception.
>>
>> I would be more than ecstatic to be proved wrong ;-)
>
> You keep saying the LoopingCall stops.  It does not stop.  It is waiting
> for a result.

What result is it waiting for and how do I pass that from the `loop` 
function in my first example when the exception is caught?

> If you provide it with a result, it will proceed.

See above: how do I do that?

> Glyph
> suggested a number of (hackfully) mechanisms you might use to provide it
> with a result.

Why do you say hackfully? I'm trying to build a scheduler that is 
resilient to failure in a scheduled task. Yes, of course I want to fix 
that failure, but I don't want a failure in one scheduled task to 
prevent any further scheduled tasks from being executed...

> I suggested another way (fix the broken code, or at
> least supply enough information for someone else to fix it).

For all I know, it's already fixed in a newer version of Twisted 
(unfortunately, I can't move this project to a newer version of Twisted) 
but once I have a robust scheduler, I'll certainly do my best to report 
the underlying failure to you guys properly...

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
             - http://www.simplistix.co.uk


From p.mayers at imperial.ac.uk  Thu Sep 30 08:44:42 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 13:44:42 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA46B08.7000907@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
Message-ID: <4CA4863A.3010609@imperial.ac.uk>

On 30/09/10 11:48, Chris Withers wrote:
> On 30/09/2010 04:45, exarkun at twistedmatrix.com wrote:
>> On 12:52 am, chris at simplistix.co.uk wrote:
>>>
>>> Because I haven't found any permutation that doesn't result in the
>>> LoopingCall's calls to `loop` from stopping after the exception.
>>>
>>> I would be more than ecstatic to be proved wrong ;-)
>>
>> You keep saying the LoopingCall stops.  It does not stop.  It is waiting
>> for a result.
>
> What result is it waiting for and how do I pass that from the `loop`
> function in my first example when the exception is caught?

It is waiting for the deferred you return to callback/errback.

This, I found, was initially non-obvious. I assumed that LoopingCall 
would be called every N seconds regardless, but it won't. If you return 
a deferred, the LoopingCall will stop until the deferred 
callback/errback's, then it will be restarted.

This is very useful in some circumstances.

>
>> If you provide it with a result, it will proceed.
>
> See above: how do I do that?
>
>> Glyph
>> suggested a number of (hackfully) mechanisms you might use to provide it
>> with a result.
>
> Why do you say hackfully? I'm trying to build a scheduler that is

Because this is (apparently) a bug in the underlying Twisted code, so 
anything you do to fix that is a hack.

The quickest way I can describe it is this; as I understand, any Twisted 
function which returns a deferred should never raise an Exception. The 
exception should instead flow down the errback.

This is because (as you've discovered) there are circumstances when a 
function is called in Twisted where the exception can't propagate "up" 
to the caller, because the caller is no longer higher in the call stack. 
Most prominent is reactor.callLater.

> resilient to failure in a scheduled task. Yes, of course I want to fix
> that failure, but I don't want a failure in one scheduled task to
> prevent any further scheduled tasks from being executed...
>
>> I suggested another way (fix the broken code, or at
>> least supply enough information for someone else to fix it).
>
> For all I know, it's already fixed in a newer version of Twisted
> (unfortunately, I can't move this project to a newer version of Twisted)
> but once I have a robust scheduler, I'll certainly do my best to report
> the underlying failure to you guys properly...

If you can produce a short example that uses the real Twisted API which 
fails, people might a) be able to find/fix the bug and b) suggest a less 
hacky way of ensuring you see the error.


From p.mayers at imperial.ac.uk  Thu Sep 30 09:03:01 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 14:03:01 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA4863A.3010609@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk>
Message-ID: <4CA48A85.9000608@imperial.ac.uk>

On 30/09/10 13:44, Phil Mayers wrote:

> This is because (as you've discovered) there are circumstances when a
> function is called in Twisted where the exception can't propagate "up"
> to the caller, because the caller is no longer higher in the call stack.
> Most prominent is reactor.callLater.

One quick thing you might be able to do is use t.i.task.deferLater 
instead of reactor.callLater, like so:

def doStuff():
   breakobj = Break()
   d = task.deferLater(reactor, 2, breakobj)
   return d

task.deferLater will schedule the call, but runs the call in a context 
which means any exceptions raised flow down the deferred errback. This:

@inlineCallbacks
def loop():
   try:
     yield doStuff()
   except Exception, e:
     log.err(e)

...will then work, and "see" the exception.


From chris at simplistix.co.uk  Thu Sep 30 09:36:56 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 14:36:56 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA48A85.9000608@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
Message-ID: <4CA49278.5020502@simplistix.co.uk>

On 30/09/2010 14:03, Phil Mayers wrote:
> On 30/09/10 13:44, Phil Mayers wrote:
>
>> This is because (as you've discovered) there are circumstances when a
>> function is called in Twisted where the exception can't propagate "up"
>> to the caller, because the caller is no longer higher in the call stack.

Indeed, but, as I keep saying, I need to build a scheduler that's 
resilient to errors in the tasks its running ;-)

>> Most prominent is reactor.callLater.

...which I'm not actually using, it was just a small-as-possible way I 
could simulate the failure mode (rather than the specific failure) I 
need to protect against.

> @inlineCallbacks
> def loop():
>     try:
>       yield doStuff()
>     except Exception, e:
>       log.err(e)
>
> ...will then work, and "see" the exception.

Actually, what appears to work is simply changing `loop` to not be an 
async fuction:

def loop():
     try:
         doStuff()
     except Exception,e:
         log.err(None,'Unhandled scheduled exception')

looper = task.LoopingCall(loop)
looper.start(1.0)
reactor.run()

This appears to solve most of the problems:
- the schedule now keeps running regardless
- exceptions in doStuff and below get logged

However, it now has the problem that if doStuff *does* return a deferred 
and it errbacks, the I get the ugly:

2010-09-30 14:31:12,478 ERROR   : log         (22159|7fc6c5c356e0): 
Unhandled error in Deferred:
2010-09-30 14:31:12,479 ERROR   : log         (22159|7fc6c5c356e0): 
Unhandled Error
Traceback (most recent call last):
Failure: twisted.python.failure.DefaultException: Break!

...rather than having my exception handler log with a meaningful message.

I've attached the full example as I have it again...

Is there any way I can get both errbacks *and* exceptions handled nicely 
in my `loop` call?

cheers,

Chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_looping.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100930/d8bc6008/attachment-0001.txt 

From jml at mumak.net  Thu Sep 30 09:39:30 2010
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 30 Sep 2010 14:39:30 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49278.5020502@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
Message-ID: <AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>

On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers <chris at simplistix.co.uk> wrote:
...
>
> Is there any way I can get both errbacks *and* exceptions handled nicely in
> my `loop` call?

You know about defer.maybeDeferred, right?

jml


From p.mayers at imperial.ac.uk  Thu Sep 30 09:46:54 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 14:46:54 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49278.5020502@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
Message-ID: <4CA494CE.9060004@imperial.ac.uk>

On 30/09/10 14:36, Chris Withers wrote:
>
> Indeed, but, as I keep saying, I need to build a scheduler that's
> resilient to errors in the tasks its running ;-)

Sure.

>
>>> Most prominent is reactor.callLater.
>
> ...which I'm not actually using, it was just a small-as-possible way I
> could simulate the failure mode (rather than the specific failure) I
> need to protect against.

Ah.

> Actually, what appears to work is simply changing `loop` to not be an
> async fuction:
>
> def loop():
>       try:
>           doStuff()
>       except Exception,e:
>           log.err(None,'Unhandled scheduled exception')
>
> looper = task.LoopingCall(loop)
> looper.start(1.0)
> reactor.run()
>
> This appears to solve most of the problems:
> - the schedule now keeps running regardless
> - exceptions in doStuff and below get logged
>
> However, it now has the problem that if doStuff *does* return a deferred
> and it errbacks, the I get the ugly:

Well, you could do this, which is more Twist-y, and Glyph suggested:

def loop():
   d = defer.maybeDeferred(doStuff, *args)
   d.addErrback(log.err)

This will call doStuff, converting return/exception into 
callback/errback, or if the call returns a deferred itself, just return 
that.

FWIW, you say "if doStuff does return a deferred"; I presume you don't 
really have a single call returning both normal and deferred values, and 
it's actually several different function calls to different pieces of work.

> Is there any way I can get both errbacks *and* exceptions handled nicely
> in my `loop` call?

I think you want maybeDeferred, as above.


From chris at simplistix.co.uk  Thu Sep 30 10:02:04 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:02:04 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA494CE.9060004@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<4CA494CE.9060004@imperial.ac.uk>
Message-ID: <4CA4985C.6010209@simplistix.co.uk>



On 30/09/2010 14:46, Phil Mayers wrote:
> On 30/09/10 14:36, Chris Withers wrote:
>>
>> Indeed, but, as I keep saying, I need to build a scheduler that's
>> resilient to errors in the tasks its running ;-)
>
> Sure.
>
>>
>>>> Most prominent is reactor.callLater.
>>
>> ...which I'm not actually using, it was just a small-as-possible way I
>> could simulate the failure mode (rather than the specific failure) I
>> need to protect against.
>
> Ah.
>
>> Actually, what appears to work is simply changing `loop` to not be an
>> async fuction:
>>
>> def loop():
>> try:
>> doStuff()
>> except Exception,e:
>> log.err(None,'Unhandled scheduled exception')
>>
>> looper = task.LoopingCall(loop)
>> looper.start(1.0)
>> reactor.run()
>>
>> This appears to solve most of the problems:
>> - the schedule now keeps running regardless
>> - exceptions in doStuff and below get logged
>>
>> However, it now has the problem that if doStuff *does* return a deferred
>> and it errbacks, the I get the ugly:
>
> Well, you could do this, which is more Twist-y, and Glyph suggested:
>
> def loop():
> d = defer.maybeDeferred(doStuff, *args)
> d.addErrback(log.err)

Okay, but further down in the call stack of the "real app", I already have:

     @inlineCallbacks
     def sendTransmission(self...):
         ...
         try:
             yield maybeDeferred(feed.initiateTransmission,
                                 ...)
         except Exception, ex:
             if isinstance(ex,GeneratorExit):
                 raise
             ...

Is that not doing what you're talking about?
If it is, it didn't help...

> FWIW, you say "if doStuff does return a deferred"; I presume you don't
> really have a single call returning both normal and deferred values,

Correct, doStuff *should* always return a deferred, the problem is that 
the deferred returned never fires (errback or callback) when an 
exception is raised in the code that should be firing it.

Chris


From chris at simplistix.co.uk  Thu Sep 30 10:13:50 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:13:50 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
Message-ID: <4CA49B1E.5040608@simplistix.co.uk>

On 30/09/2010 14:39, Jonathan Lange wrote:
> On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk>  wrote:
> ...
>>
>> Is there any way I can get both errbacks *and* exceptions handled nicely in
>> my `loop` call?
>
> You know about defer.maybeDeferred, right?

Yep, the problem is with `loop` implemented like so:

def loop():
     d = maybeDeferred(doStuff)
     d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))

...the logging is odd:

2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0): 
Unhandled Error
Traceback (most recent call last):
   File "test_looping.py", line 47, in <module>
     reactor.run()
   File "/twisted/internet/base.py", line 1166, in run
     self.mainLoop()
   File "/twisted/internet/base.py", line 1175, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "/twisted/internet/base.py", line 779, in runUntilCurrent
     call.func(*call.args, **call.kw)
   File "test_looping.py", line 30, in __call__
     del self.connector
exceptions.AttributeError: Break instance has no attribute 'connector'

called  4
called  5
/twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings 
(like 'Break!') to failure.Failure (replacing with a DefaultException).
   fail = failure.Failure(fail)
2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0): 
Unhandled scheduled exception
Traceback (most recent call last):
Failure: twisted.python.failure.DefaultException: Break!

So, how come my log.err doesn't get used for the AttributeError on 
connector?

cheers,

Chris


From p.mayers at imperial.ac.uk  Thu Sep 30 10:23:52 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 15:23:52 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49B1E.5040608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
Message-ID: <4CA49D78.7010103@imperial.ac.uk>

On 30/09/10 15:13, Chris Withers wrote:
> On 30/09/2010 14:39, Jonathan Lange wrote:
>> On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk>   wrote:
>> ...
>>>
>>> Is there any way I can get both errbacks *and* exceptions handled nicely in
>>> my `loop` call?
>>
>> You know about defer.maybeDeferred, right?
>
> Yep, the problem is with `loop` implemented like so:
>
> def loop():
>       d = maybeDeferred(doStuff)
>       d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))


>
> So, how come my log.err doesn't get used for the AttributeError on
> connector?

If you mean in your most recent "test_looping.py" example, it still uses 
reactor.callLater. The call stack has gone away by the time the call is 
made, so the exception just propagates up to the top level, where it's 
logged.


I honestly think a more complete example showing the real Twisted API 
that's causing you unhandled errors would help here.


From exarkun at twistedmatrix.com  Thu Sep 30 10:33:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 14:33:24 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49B1E.5040608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
Message-ID: <20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>

On 02:13 pm, chris at simplistix.co.uk wrote:
>On 30/09/2010 14:39, Jonathan Lange wrote:
>>On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk> 
>>wrote:
>>...
>>>
>>>Is there any way I can get both errbacks *and* exceptions handled 
>>>nicely in
>>>my `loop` call?
>>
>>You know about defer.maybeDeferred, right?
>
>Yep, the problem is with `loop` implemented like so:
>
>def loop():
>     d = maybeDeferred(doStuff)
>     d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))

Names that begin with an underscore are private.  Also, partial is a 
pointless complexification here.

    def loop():
        d = maybeDeferred(doStuff)
        d.addErrback(log.err, 'Unhandled scheduled exception')
>...the logging is odd:
>
>2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0):
>Unhandled Error
>Traceback (most recent call last):
>   File "test_looping.py", line 47, in <module>
>     reactor.run()
>   File "/twisted/internet/base.py", line 1166, in run
>     self.mainLoop()
>   File "/twisted/internet/base.py", line 1175, in mainLoop
>     self.runUntilCurrent()
>--- <exception caught here> ---
>   File "/twisted/internet/base.py", line 779, in runUntilCurrent
>     call.func(*call.args, **call.kw)
>   File "test_looping.py", line 30, in __call__
>     del self.connector
>exceptions.AttributeError: Break instance has no attribute 'connector'


This is not logged by your code.  Do you recognize that?
>
>called  4
>called  5
>/twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings
>(like 'Break!') to failure.Failure (replacing with a DefaultException).
>   fail = failure.Failure(fail)
>2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0):
>Unhandled scheduled exception
>Traceback (most recent call last):
>Failure: twisted.python.failure.DefaultException: Break!

This comes from some code not included in the code you posted.  It looks 
like you're using Failure wrong though.  Quoting from above:

    Don't pass strings (like 'Break!') to failure.Failure.
>
>So, how come my log.err doesn't get used for the AttributeError on
>connector?

I'm sure it doesn't help for me to simply repeat myself, since if it 
didn't make sense the first time probably won't make sense the third or 
fourth time.  I don't know what else to say though.

log.err is an errback on the Deferred you created in loop.

An errback is called (roughly) when a Deferred fires with a Failure.

Your Deferred *never* fires with a Failure corresponding to that 
AttributeError.  This is the most important thing.  If you don't 
understand this, say so and we can talk about it some more.  Everything 
else is just confusing particulars.

Unfortunately maybeDeferred cannot help here.  It solves a slightly 
related problem and does nothing about this one.  You may well want to 
use it, but it's not going to address your `AttributeError` issue in any 
way, because of what I said above, and will repeat here for emphasis:

The AttributeError never becomes an error result on any Deferred.  It is 
caught inside the reactor implementation, logged there by Twisted 
itself, and then thrown away forever.

Jean-Paul


From chris at simplistix.co.uk  Thu Sep 30 10:35:00 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:35:00 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a safe
 catch-all]
In-Reply-To: <4CA49D78.7010103@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
Message-ID: <4CA4A014.8080608@simplistix.co.uk>

On 30/09/2010 15:23, Phil Mayers wrote:
>> def loop():
>> d = maybeDeferred(doStuff)
>> d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>
>> So, how come my log.err doesn't get used for the AttributeError on
>> connector?
>
> If you mean in your most recent "test_looping.py" example, it still uses
> reactor.callLater. The call stack has gone away by the time the call is
> made, so the exception just propagates up to the top level, where it's
> logged.

So, I appear to be back to the case where I can either gracefully handle 
the exception *or* gracefully handle the errback, but not both?

> I honestly think a more complete example showing the real Twisted API
> that's causing you unhandled errors would help here.

Unfortunately, you neither want to see, nor am I allowed to publish to a 
mailing list, that several hundred lines of proprietary code I'd need to 
post...

As far as the original error goes, we hit the problem using 
twisted.protocols.ftp.FTPClient to ftp a file up to a remote host.
That remote host only accepts active ftp transfers. As a result of 
either of both of our firewall or FTPClient not handling active ftp and 
only handling passive ftp, we end up seeing the following logging as the 
scheduler dies:

2010-09-27 15:30:16,340 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled exception sending schedule transmission
Traceback (most recent call last):
    File
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/python/context.py", line
37, in callWithContext
      return func(*args,**kw)
    File
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/selectreactor.py", line 

146, in _doReadOrWrite
      why = getattr(selectable, method)()
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 631, in doConnect
      self.failIfNotConnected(error.getConnectError((err, strerror(err))))
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 588, in failIfNotConnected
      del self.connector
--- <exception caught here> ---
    File "ourcode.py", line 180, in checkSchedule
      yield self.sendTransmissions(...)
exceptions.GeneratorExit:

2010-09-27 15:30:28,428 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled error in Deferred:
2010-09-27 15:30:28,584 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled Error
Traceback (most recent call last):
Failure: twisted.protocols.ftp.FTPError: ('Connection Failed',
<twisted.python.failure.Failure <class
'twisted.internet.error.ConnectError'>>)

I can't quite make sense of the above, which is why I distilled it down 
to as-small-as-possible a piece of code that shows the type of 
exceptions and errbacks I need to deal with...

cheers,

Chris


-- 
Simplistix - Content Management, Batch Processing & Python Consulting
             - http://www.simplistix.co.uk


From exarkun at twistedmatrix.com  Thu Sep 30 10:42:05 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 14:42:05 -0000
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
	safe	catch-all]
In-Reply-To: <4CA4A014.8080608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
Message-ID: <20100930144205.2022.1515137956.divmod.xquotient.52@localhost.localdomain>

On 02:35 pm, chris at simplistix.co.uk wrote:
>On 30/09/2010 15:23, Phil Mayers wrote:
>>>def loop():
>>>d = maybeDeferred(doStuff)
>>>d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>>
>>>So, how come my log.err doesn't get used for the AttributeError on
>>>connector?
>>
>>If you mean in your most recent "test_looping.py" example, it still 
>>uses
>>reactor.callLater. The call stack has gone away by the time the call 
>>is
>>made, so the exception just propagates up to the top level, where it's
>>logged.
>
>So, I appear to be back to the case where I can either gracefully 
>handle
>the exception *or* gracefully handle the errback, but not both?

No.  Absolutely, categorically wrong.

Jean-Paul


From p.mayers at imperial.ac.uk  Thu Sep 30 10:53:05 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 15:53:05 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A014.8080608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
Message-ID: <4CA4A451.6020509@imperial.ac.uk>

On 30/09/10 15:35, Chris Withers wrote:
> On 30/09/2010 15:23, Phil Mayers wrote:
>>> def loop():
>>> d = maybeDeferred(doStuff)
>>> d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>>
>>> So, how come my log.err doesn't get used for the AttributeError on
>>> connector?
>>
>> If you mean in your most recent "test_looping.py" example, it still uses
>> reactor.callLater. The call stack has gone away by the time the call is
>> made, so the exception just propagates up to the top level, where it's
>> logged.
>
> So, I appear to be back to the case where I can either gracefully handle
> the exception *or* gracefully handle the errback, but not both?


It should be possible if using Twisted APIs correctly to reliably 
capture errors.

If it is not, that is a Twisted bug (or possibly API limitation)

However, your "test_looping.py" is not using the API correctly; the 
reactor.callLater throws away the call stack, so the error has nowhere 
to go.

Since you're not using reactor.callLater in your real code, the example 
is not valid. Hopefully I'm being more clear here!

>
>> I honestly think a more complete example showing the real Twisted API
>> that's causing you unhandled errors would help here.
>
> Unfortunately, you neither want to see, nor am I allowed to publish to a
> mailing list, that several hundred lines of proprietary code I'd need to
> post...

I suspected as much.

I don't think I can help I'm afraid; maybe other more experience people 
can spot the error from the tracebacks. Sorry I couldn't be more useful.


From chris at simplistix.co.uk  Thu Sep 30 11:10:54 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 16:10:54 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A451.6020509@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
	<4CA4A451.6020509@imperial.ac.uk>
Message-ID: <4CA4A87E.7000408@simplistix.co.uk>

On 30/09/2010 15:53, Phil Mayers wrote:
>> So, I appear to be back to the case where I can either gracefully handle
>> the exception *or* gracefully handle the errback, but not both?
>
> It should be possible if using Twisted APIs correctly to reliably
> capture errors.
>
> If it is not, that is a Twisted bug (or possibly API limitation)
>
> However, your "test_looping.py" is not using the API correctly; the
> reactor.callLater throws away the call stack, so the error has nowhere
> to go.

Right, but that's what appears to be happening with the "real code", and 
I get the mysterious GeneratorExit...

> Since you're not using reactor.callLater in your real code, the example
> is not valid. Hopefully I'm being more clear here!

Yes, but I do feel a bit like I'm banging my head against a wall too. 
The effect is the same as the real live observed problem, only I can't 
replicate the real problem without an ftp server that only happens to 
accept active connections. I don't have one of those around, and *even* 
if I did, I want to make the scheduler bulletproof, not *just* go and 
fix the one error that has cropped up so far...

cheers,

Chris


From chris at simplistix.co.uk  Thu Sep 30 11:19:23 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 16:19:23 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>
	<20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>
Message-ID: <4CA4AA7B.6070308@simplistix.co.uk>

On 30/09/2010 15:33, exarkun at twistedmatrix.com wrote:
>> 2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0):
>> Unhandled Error
>> Traceback (most recent call last):
>>    File "test_looping.py", line 47, in<module>
>>      reactor.run()
>>    File "/twisted/internet/base.py", line 1166, in run
>>      self.mainLoop()
>>    File "/twisted/internet/base.py", line 1175, in mainLoop
>>      self.runUntilCurrent()
>> ---<exception caught here>  ---
>>    File "/twisted/internet/base.py", line 779, in runUntilCurrent
>>      call.func(*call.args, **call.kw)
>>    File "test_looping.py", line 30, in __call__
>>      del self.connector
>> exceptions.AttributeError: Break instance has no attribute 'connector'
>
> This is not logged by your code.  Do you recognize that?

Yes, this is what I'm complaining about ;-)

>> /twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings
>> (like 'Break!') to failure.Failure (replacing with a DefaultException).
>>    fail = failure.Failure(fail)
>> 2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0):
>> Unhandled scheduled exception
>> Traceback (most recent call last):
>> Failure: twisted.python.failure.DefaultException: Break!
>
> This comes from some code not included in the code you posted.

Sure it is, it was attached to the message I sent at 14:36.

> It looks
> like you're using Failure wrong though.

Sure, but that's hardly the issue at hand here...
What should I be passing to errback?

>> So, how come my log.err doesn't get used for the AttributeError on
>> connector?
 >
> Your Deferred *never* fires with a Failure corresponding to that
> AttributeError.  This is the most important thing.  If you don't
> understand this, say so and we can talk about it some more.  Everything
> else is just confusing particulars.

Yes, I understand this, and this is what I'm talking about when I say "I 
cannot gracefully handle the exception." Reading back, yes, it appears I 
was mistaken at some stage that my `loop` function was handling the 
exception, but I do understand now that it was not... which is 
frustrating...

> The AttributeError never becomes an error result on any Deferred.  It is
> caught inside the reactor implementation, logged there by Twisted
> itself, and then thrown away forever.

:-(

Chris


From ziga.seilnacht at gmail.com  Thu Sep 30 11:52:16 2010
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Thu, 30 Sep 2010 17:52:16 +0200
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
 when using pseudo terminal
In-Reply-To: <AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
	<AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
Message-ID: <4CA4B230.1030709@gmail.com>

Hello,

Garret Heaton wrote:
> I've simplified this issue down and am able to reproduce it without
> Twisted: http://gist.github.com/603154
> 
> Still not sure what the cause is, so if anyone has any ideas I'd love to
> hear them. Thanks!
> 

The behavior that you are seeing seems to be related to the change in
the 2.6.32 kernel, where they changed the child-runs-first scheduler
parameter to false. Setting that parameter to 1 with:

$ sudo sysctl -w kernel.sched_child_runs_first=1

and rebooting the computer restores the behavior that you saw on the
old kernel for me. See http://lwn.net/Articles/352863/ for more details.

Parent (which is the controlling process when ran with -t) exiting before
the child starts causes the child to receive SIGHUP signal immediately as
it starts running, before it has time to disassociate itself from the
parent's process group. It seems to me that this might be an actual bug
in twistd, it should block the SIGHUP signal across the fork() calls.

Your test program has an additional assumption that the child will run
before the parent; the child in your program tries to write to stdout,
i.e. the controlling terminal, which gets closed once the parent exits.

The modified test program below works for me regardless of the setting
of the kernel.sched_child_runs_first parameter.

Hope this helps,
Ziga



import os
import signal

f = open("test_fork.out", "w")

def daemonize():
     # See http://www.faqs.org/faqs/unix-faq/programmer/faq/ - Section 1.7
     print >> f, '--- %s: daemonizing' % os.getpid()

     signal.signal(signal.SIGHUP, signal.SIG_IGN)
     if os.fork(): # launch child and...
         print >> f, '--- %s: kill parent 1' % os.getpid()
         os._exit(0) # kill off parent
     print >> f, '--- %s: old sid: %r' % (os.getpid(), os.getsid(os.getpid()))
     os.setsid()
     print >> f, '--- %s: new sid: %r' % (os.getpid(), os.getsid(os.getpid()))
     if os.fork(): # launch child and...
         print >> f, '--- %s: kill parent 2' % os.getpid()
         os._exit(0) # kill off parent again.

     signal.signal(signal.SIGHUP, signal.SIG_DFL)
     print >> f, '--- %s: daemonizing done' % os.getpid()

if __name__ == "__main__":
     print >> f, 'starting as %d' % os.getpid()
     daemonize()
     print >> f, 'stopping as %s' % os.getpid()





From p.mayers at imperial.ac.uk  Thu Sep 30 13:01:03 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 18:01:03 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A87E.7000408@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
	<4CA4A451.6020509@imperial.ac.uk>
	<4CA4A87E.7000408@simplistix.co.uk>
Message-ID: <4CA4C24F.8020807@imperial.ac.uk>

On 30/09/10 16:10, Chris Withers wrote:
> On 30/09/2010 15:53, Phil Mayers wrote:
>>> So, I appear to be back to the case where I can either gracefully handle
>>> the exception *or* gracefully handle the errback, but not both?
>>
>> It should be possible if using Twisted APIs correctly to reliably
>> capture errors.
>>
>> If it is not, that is a Twisted bug (or possibly API limitation)
>>
>> However, your "test_looping.py" is not using the API correctly; the
>> reactor.callLater throws away the call stack, so the error has nowhere
>> to go.
>
> Right, but that's what appears to be happening with the "real code", and
> I get the mysterious GeneratorExit...

It is more than a little confusing, and I'm sure frustrating.

I've tried to produce something like this locally, but cannot. I suspect 
the various @inlineCallbacks generators are the cause of the specific issue.


Let me see if I understand the problem in full.

You have an @inlineCallbacks-decorated generator which is the target of 
a LoopingCall, like so:

@inlineCallbacks
def loop():
   try:
     somework()
   except:
     log.err()

lc = task.LoopingCall(loop)

You want this loop function to catch & log all exceptions resulting from 
work it initiates.

Your "somework" function calls, amongst other things, an 
@inlineCallbacks-decorated worker function:

@inlineCallbacks
def sendTransmission(...):
   try:
     yield maybeDeferred(feed.initiateTransmission)
   except:
     ...some handling

You are seeing two errors:


  1. A GeneratorExit exception. This appears (if I'm reading your 
logging right) to be caught by your logging?

  2. A ConnectionLost exception. This is not caught by your logging, and 
is propagating up to the reactor, and giving "Unhandled Error"


Is this an accurate summary?


From glyph at twistedmatrix.com  Thu Sep 30 14:00:21 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Sep 2010 14:00:21 -0400
Subject: [Twisted-Python] Small practice application
In-Reply-To: <AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>
References: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
	<AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>
Message-ID: <88B1BE8B-98D7-4160-8403-800A2D5900CC@twistedmatrix.com>


On Sep 30, 2010, at 1:51 AM, Zubin Mithra wrote:

> However, I am confused on how to write data over to a particular player(0 or 1). Is there any way I could choose to write to a particular object?
> 

Sure, make self.factory.connections into a dictionary which maps player names to connection objects, instead of a simple list.  Or simply do:

for connection in self.factory.connections:
  if connection.username == 'desired-username':
    connection.doSomething()

This isn't really a twisted question, it's a basic Python question :).




From glyph at twistedmatrix.com  Thu Sep 30 14:52:52 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Sep 2010 14:52:52 -0400
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA1F212.9040305@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
Message-ID: <F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>

Chris,

My original reply jumped into the middle of the thread and I didn't completely understand what you were asking.  Let's get back to your original message:

On Sep 28, 2010, at 9:48 AM, Chris Withers wrote:

> The loop() function is supposed to be a "catch all and report" error handler. However, when the async code initiated by doStuff throws the AttributeError, what actually gets logged is:
> 
> 2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): Unhandled Error
> Traceback (most recent call last):
>  File "test_looping.py", line 41, in <module>
>    reactor.run()
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 1128, in run
>    self.mainLoop()
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 1137, in mainLoop
>    self.runUntilCurrent()
> --- <exception caught here> ---
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 757, in runUntilCurrent
>    call.func(*call.args, **call.kw)
>  File "test_looping.py", line 24, in __call__
>    del self.connector
> exceptions.AttributeError: Break instance has no attribute 'connector'

This traceback indicates a bug in Twisted.

This is an error that other people have very occasionally spotted, and we have never been able to reliably reproduce it.  Over the years we have tried to diagnose it in various ways and we have always failed.

It would be really valuable to everyone if you could write up a bug and provide detailed reproduction instructions, ideally with some python code that triggers this error, so that we can address the bug.  It would be super useful if you could write an example that reproduces the same bug on a recent Twisted version (8.2 is pretty old), especially the 10.2 prerelease.  But, if your example reproduces on 8.2 and not 10.0, that tells us something too.

A unit test would be best, but any complete script which reproduces the problem reliably would be extremely useful; we can transform it into a unit test ourselves.

To reiterate, as this pertains to your problem: there is no way for your application code to fix this exception, because it is happening in the guts of the reactor and entirely out of your control.  It is going to screw things up in some pretty arbitrary ways.  The only way to deal with it would be to figure out why it happens and come up with a proper fix for the bug.  And we can't do that without a way to reproduce the bug.

Thanks for your help,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100930/901ff180/attachment.htm 

From anton at iki.fi  Wed Sep  1 04:13:33 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 13:13:33 +0300
Subject: [Twisted-Python] Ldaptor status and updates
Message-ID: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>

I want to use the Ldaptor LDAP client for a project. Does anybody know
whether and how Ldaptor is currently maintained and what the best
upstream source is? I need to make some changes and wonder what to
base the work on and where to discuss and publish changes.

Is it OK to discuss Ldaptor on this list and to send patches here?

The first google hit for ldaptor is
http://webmail.inoi.fi/open/trac/ldaptor but the SVN repo on that site
has last commit Sun May 7 2006. I found a git repo with newer commits
at http://eagain.net/gitweb/?p=ldaptor.git, last commit Sat Aug 23
2008.

I published some work-in-progress changes based on the git repo above at
http://github.com/antong/ldaptor

Best regards
Anton



From jandd at debian.org  Wed Sep  1 04:44:08 2010
From: jandd at debian.org (Jan Dittberner)
Date: Wed, 1 Sep 2010 12:44:08 +0200
Subject: [Twisted-Python] Ldaptor status and updates
In-Reply-To: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
References: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
Message-ID: <20100901104408.GA4144@pneumantius.dittberner.home>

On Wed, Sep 01, 2010 at 01:13:33PM +0300, Anton Gyllenberg wrote:
> I want to use the Ldaptor LDAP client for a project. Does anybody know
> whether and how Ldaptor is currently maintained and what the best
> upstream source is? I need to make some changes and wonder what to
> base the work on and where to discuss and publish changes.

Hello,

I do the primary work on the ldaptor Debian package these days. Tommy did not
release a new version for years but has the mentioned git repository. The
Debian svn repository at
svn://svn.debian.org/python-modules/packages/ldaptor/trunk/ contains a series
of patches in the debian/patches directory to fix some minor issues with
ldaptor.

> Is it OK to discuss Ldaptor on this list and to send patches here?

I can not speak for the list but I'd like to get patches to incorporate them in
the Debian package.

> The first google hit for ldaptor is
> http://webmail.inoi.fi/open/trac/ldaptor but the SVN repo on that site
> has last commit Sun May 7 2006. I found a git repo with newer commits
> at http://eagain.net/gitweb/?p=ldaptor.git, last commit Sat Aug 23
> 2008.
> 
> I published some work-in-progress changes based on the git repo above at
> http://github.com/antong/ldaptor

I'll have a look at your changes later this week.

@Tommy: are you still interested to be the primary upstream for ldaptor or
would you like Anton or me to provide a new upstream project? What do you think
of the idea to merge fixes from github into your git repository and creating
future releases?


Regards
Jan

-- 
Jan Dittberner - Debian Developer
GPG-key: 4096R/558FB8DD 2009-05-10
         B2FF 1D95 CE8F 7A22 DF4C  F09B A73E 0055 558F B8DD
http://www.dittberner.info/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20100901/6e25d837/attachment.sig>

From anton at iki.fi  Wed Sep  1 05:52:06 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 14:52:06 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
	returned by search()
Message-ID: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>

The LDAPEntryWithClient.search() method used to send the LDAP request with
a call like
	self.client.send_multiResponse(... )
send_multiResponse() returns a deferred that was just discarded. If the
operation causes an error then the errback fired on the discarded deferred
will remain unhandled. The deferred returned by search() will then not
have any errback fired and the caller of search() will be waiting forever.

This change adds an errback to the deferred returned by send_multiResponse()
and has the error rerouted to the errback chain of the deferred returned by
search().
---

Discussion: This hits right into the internals of Ldaptor and I am not
sure I understand this well enough to make an accurate fix. The
problem I encountered is real and can be reproduced, and this change
does seem to work around it.

Any comments and suggestions welcome!


 ldaptor/protocols/ldap/ldapsyntax.py |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/ldaptor/protocols/ldap/ldapsyntax.py
b/ldaptor/protocols/ldap/ldapsyntax.py
index f54d2f8..471ffa6 100644
--- a/ldaptor/protocols/ldap/ldapsyntax.py
+++ b/ldaptor/protocols/ldap/ldapsyntax.py
@@ -683,7 +683,7 @@ class LDAPEntryWithClient(entry.EditableLDAPEntry):
                 typesOnly=typesOnly,
                 filter=filterObject,
                 attributes=attributes)
-            self.client.send_multiResponse(
+            dsend = self.client.send_multiResponse(
                 op, self._cbSearchMsg,
                 d, cb, complete=not attributes,
                 sizeLimitIsNonFatal=sizeLimitIsNonFatal)
@@ -692,6 +692,11 @@ class LDAPEntryWithClient(entry.EditableLDAPEntry):
         else:
             if callback is None:
                 d.addCallback(lambda dummy: results)
+            def rerouteerr(e):
+                d.errback(e)
+                # returning None will stop the error
+                # from being propagated and logged.
+            dsend.addErrback(rerouteerr)
         return d

     def lookup(self, dn):
-- 
1.7.1.5.g49342



From anton at iki.fi  Wed Sep  1 06:40:03 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 15:40:03 +0300
Subject: [Twisted-Python] Ldaptor status and updates
In-Reply-To: <20100901104408.GA4144@pneumantius.dittberner.home>
References: <AANLkTi=pP-k8QrxArAX_4GHoYDf0V5Mj=sT=Z4Swj-JT@mail.gmail.com>
	<20100901104408.GA4144@pneumantius.dittberner.home>
Message-ID: <AANLkTinwjSq5NT8r-1=yRy3DWd9vm8URo3HgyyhtBRXV@mail.gmail.com>

> I do the primary work on the ldaptor Debian package these days. Tommy did not
> release a new version for years but has the mentioned git repository. The
> Debian svn repository at
> svn://svn.debian.org/python-modules/packages/ldaptor/trunk/ contains a series
> of patches in the debian/patches directory to fix some minor issues with
> ldaptor.
>
>> Is it OK to discuss Ldaptor on this list and to send patches here?
>
> I can not speak for the list but I'd like to get patches to incorporate them in
> the Debian package.

Thanks! I took a quick look at the patches and it looks like some of
these patches are already incorporated in the git repository. Perhaps
we could incorporate the rest and upgrade the debian package to a
newer version based on the git repo to reduce patches? In
debian/changelog in the git repo there is a version 0.0.44 and there
are changes also after that.

> I'll have a look at your changes later this week.

Thanks. Note that there is a 'master' branch with a couple of fairly
trivial changes and then a 'pu' (proposed updates) branch with an
additional change I'm not sure about and that I just posted to this
list.

I'm mostly interested in the Twisted library part of Ldaptor and less
in the web UI and command line tools.

Best regards
Anton



From itamar at itamarst.org  Wed Sep  1 07:15:17 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:15:17 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
Message-ID: <1283346917.1650.2.camel@blake>

On Tue, 2010-08-31 at 20:54 -0600, Jason J. W. Williams wrote:
> That's one way of handling it. Another way is to wrap the library so
> it does the splitting automatically. The advantage to the latter is
> not making mistakes where you accidentally use the READ connection for
> a write.

That sounds like a bad idea. You want to send reads to the write server
if you're doing so as part of a transaction that does writes, otherwise
in some cases you'll end up with wrong results.

For example, consider a transaction that inserts a row into a table, and
then does a select to count the number of rows in that table. If you
send the latter to a replicated read-only server, the result will be
incorrect, since it will not include the insert (which hasn't been
committed yet).

So, to repeat: you should only use the read server for operations that
are read-only. Which means some reads will go to the write server.




From itamar at itamarst.org  Wed Sep  1 07:16:39 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:16:39 -0400
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <1283346999.1650.4.camel@blake>

On Wed, 2010-09-01 at 07:16 +0200, Einar S. Idsø wrote:
> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.

Well, there's twisted.web.soap, which probably isn't very good, but
should provide an example of how to implement it given a SOAP
encoding/decoding library.





From itamar at itamarst.org  Wed Sep  1 07:17:37 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 01 Sep 2010 09:17:37 -0400
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
Message-ID: <1283347057.1650.5.camel@blake>

On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:

> Any comments and suggestions welcome!

Unit tests are always a good idea :)




From anton at iki.fi  Wed Sep  1 08:05:15 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 17:05:15 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <1283347057.1650.5.camel@blake>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
	<1283347057.1650.5.camel@blake>
Message-ID: <AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>

On Wed, Sep 1, 2010 at 4:17 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:
>
>> Any comments and suggestions welcome!
>
> Unit tests are always a good idea :)

That is so true. And if not writing new ones, then at least running
existing ones. That I hadn't done and it seems I actually broke
something.

Any ideas or directions on how to fix the issue with search not
handling errors in send_multiResponse().

Thanks!
Anton



From anton at iki.fi  Wed Sep  1 08:45:39 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 1 Sep 2010 17:45:39 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Reroute errback to deferred
 returned by search()
In-Reply-To: <AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>
References: <AANLkTin-NA=WKpYvT6jzCk4yxf2LCa3iHLyaEXUyrrwf@mail.gmail.com>
	<1283347057.1650.5.camel@blake>
	<AANLkTinanEFtbvoGhkbRPGt0FUyX+yBagxxwzCW+c=15@mail.gmail.com>
Message-ID: <AANLkTi=YqGPK53UKxCvbtFgiobOhTp7ZQXDfV8mSXvFc@mail.gmail.com>

On Wed, Sep 1, 2010 at 5:05 PM, Anton Gyllenberg <anton at iki.fi> wrote:
> On Wed, Sep 1, 2010 at 4:17 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On Wed, 2010-09-01 at 14:52 +0300, Anton Gyllenberg wrote:
>>
>>> Any comments and suggestions welcome!
>>
>> Unit tests are always a good idea :)
>
> That is so true. And if not writing new ones, then at least running
> existing ones. That I hadn't done and it seems I actually broke
> something.

The send_multiResponse() method within the test framework worked
differently and returned None instead of a deferred like the real
version. Making it return defer.Deferred() instead made the tests
pass. I'm new to this trial stuff so need to do some reading before I
dare make test cases for new code.

Thanks!
Anton



From jasonjwwilliams at gmail.com  Wed Sep  1 09:30:28 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 1 Sep 2010 09:30:28 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283346917.1650.2.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
	<1283346917.1650.2.camel@blake>
Message-ID: <B00921AA-E333-4453-8EA7-22CCCD16B5C5@gmail.com>

That is correct. In our case we've audited our code for transactions and all of ours are single statement trans. 

It's pretty typical for read/write splitting to forbid multiple-statement  transactions as a cost of doing it. 

-J

Sent via iPhone

Is your e-mail Premiere?

On Sep 1, 2010, at 7:15, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> On Tue, 2010-08-31 at 20:54 -0600, Jason J. W. Williams wrote:
>> That's one way of handling it. Another way is to wrap the library so
>> it does the splitting automatically. The advantage to the latter is
>> not making mistakes where you accidentally use the READ connection for
>> a write.
> 
> That sounds like a bad idea. You want to send reads to the write server
> if you're doing so as part of a transaction that does writes, otherwise
> in some cases you'll end up with wrong results.
> 
> For example, consider a transaction that inserts a row into a table, and
> then does a select to count the number of rows in that table. If you
> send the latter to a replicated read-only server, the result will be
> incorrect, since it will not include the insert (which hasn't been
> committed yet).
> 
> So, to repeat: you should only use the read server for operations that
> are read-only. Which means some reads will go to the write server.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From landreville at deadtreepages.com  Wed Sep  1 09:58:01 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 1 Sep 2010 11:58:01 -0400
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <AANLkTikh9uoZpw-_D0wTb5f_dCvq93s6_PS9qvdpt7od@mail.gmail.com>

On Wed, Sep 1, 2010 at 1:16 AM, Einar S. Idsø
<einar.twisted at norsk-esport.no> wrote:
> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.
>
> For future reference: I ended up using suds with the following wrapper
> provided to this list in April by Landreville. It seems to be working
> great, so thanks Landreville :)
>
> """ Wrapper for suds to create deferred instances. """
> from suds.client import Client as SudsClient
> from twisted.internet.threads import deferToThread
>
> class Client(SudsClient):
>
>   # method for returning a deferred for the RPC
>   def callRemote(self, method, *args, **kwargs):
>       def call(m, *a, **kw):
>           result = self.service.__getattr__(m)(*a, **kw)
>           return result
>       d = deferToThread(call, method, *args, **kwargs)
>       return d
>
> Cheers,
> Einar
>

That's pretty much what I did as well. There is twisted.web.soap, but
it uses SOAPpy which is awful -- Suds is much better. If you take a
look at its insides though you can see how they are turning it into a
deferred in a better way than just deferToThread.



From glyph at twistedmatrix.com  Wed Sep  1 15:47:08 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Sep 2010 14:47:08 -0700
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
Message-ID: <2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>


On Sep 1, 2010, at 1:16 AM, Einar S. Idsø wrote:

> Well, at least I've found that the interest in SOAP in the Twisted
> community is not very great ;) And understandably so. Unfortunately,
> however, sometimes Twisted apps do need to talk to alternative
> protocols, so it is a pity there's no recommended way of doing this.

If you want there to be a "recommended way", you can be the one to make the recommendation.  The lack of interest in SOAP in the Twisted community is a self-fulfilling prophecy: since there isn't much SOAP support, we don't have a lot of SOAP people come around, and since we don't have very many SOAP people, we don't have much in the way of SOAP support.

If you would like to change this, please feel free to either contribute patches to Twisted web's SOAP support, or to start a txsoap (or txwsstar, or whatever makes sense in your context).  We'd love to have someone active in maintaining these sorts of protocols, since Twisted is really only as good as the protocol implementations that you need it to talk to.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100901/08b7052d/attachment-0001.html>

From ruslan.usifov at gmail.com  Wed Sep  1 16:53:50 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 02:53:50 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>

Hello

I try to write twisted based daemon that work in multiple workers, like
this:

from twisted.internet import reactor;
from proxy import FASTCGIServerProxyFactory;
import os;

reactor.listenUNIX("/tmp/twisted-fcgi.sock", FASTCGIServerProxyFactory());

for i in xrange(3):
  l_pid = os.fork();

  if(l_pid == 0):
    break;

reactor.run()

I creatae 4 wokers(by num of CPU cores). Im my test all ok, but when i
shutdown daemon i got follow error 3 times (because every worker try to
unlink sock file: /tmp/twisted-fcgi.sock):

Traceback (most recent call last):
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 249, in addCallbacks
    self._runCallbacks()
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 441, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 426, in _continueFiring
    callable(*args, **kwargs)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 613, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", line
84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", line
69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/local/lib/python2.6/site-packages/twisted/internet/unix.py",
line 134, in connectionLost
    os.unlink(self.port)
exceptions.OSError: [Errno 2] No such file or directory:
'/tmp/twisted-fcgi.sock'

So my questions is How can i suppress this behaviour, so shutdown code
executes only once in main process?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100902/c70a3642/attachment.html>

From einar.twisted at norsk-esport.no  Thu Sep  2 00:54:49 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 2 Sep 2010 08:54:49 +0200
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
	<AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>
	<2EB234F7-4344-4C8A-974B-C380152352EF@twistedmatrix.com>
Message-ID: <AANLkTimez9kp-VF_t-bNfbkRrZmE0fjuzevY0Zyvih8X@mail.gmail.com>

On Wed, Sep 1, 2010 at 5:58 PM, Landreville
<landreville at deadtreepages.com> wrote:
> That's pretty much what I did as well.
Actually, it's *exactly* what you did. As mentioned, I posted your
solution from April :)

On Wed, Sep 1, 2010 at 11:47 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> If you want there to be a "recommended way", you can be the one to make the
> recommendation.  The lack of interest in SOAP in the Twisted community is a
> self-fulfilling prophecy: since there isn't much SOAP support, we don't have
> a lot of SOAP people come around, and since we don't have very many SOAP
> people, we don't have much in the way of SOAP support.
> If you would like to change this, please feel free to either contribute
> patches to Twisted web's SOAP support, or to start a txsoap (or txwsstar, or
> whatever makes sense in your context).  We'd love to have someone active in
> maintaining these sorts of protocols, since Twisted is really only as good
> as the protocol implementations that you need it to talk to.

I suppose you can call my reiteration of Landreville's solution my
recommendation. If not based on any extensive experience with Twisted
in any way, then at least based on me finding a solution that works
for me :) Unfortunately, the level of Twisted sophistication I'm
currently at, and also my current requirements for my application,
which only needs to do a couple of SOAP-calls because of one of the
services it interfaces to, leads me to simply having to find a
solution that "just works" rather than develop a better one than what
can be currently done with solutions such as the one mentioned.

Anyways: My application performs the SOAP calls nicely now, and I have
moved on to other issues. Such as the persistent obscurity of
inheritance versus interfaces and adapters. For a guy that has no
experience in object-oriented programming, Twisted has a rather steep
learning-curve. But I'm getting there, thanks to both this list and
the community at large.

Cheers,
Einar



From anton at iki.fi  Thu Sep  2 03:28:56 2010
From: anton at iki.fi (Anton Gyllenberg)
Date: Thu, 2 Sep 2010 12:28:56 +0300
Subject: [Twisted-Python] Ldaptor: [PATCH] Extend test driver
 send_multiResponse() to return deferred and throw errors
Message-ID: <AANLkTinv5qfzhwW8jUmrA8dqRPy4rhTLHAQZ18xdmZ0_@mail.gmail.com>

The deferred returned by the LDAP client send_multiResponse() method was
previously unused in all code covered by tests, and so the replacement
method in the test driver just returned None. The deferred is now used
in search() and this change makes the test driver also return a deferred
instead of None in order to make things work when run within the test
framework.

To make it possible to test failures in the client send() and
send_multiResponse() methods, the test driver is changed to accept Failure
instances in place of lists of LDAPProtocolResponses.  Doing this causes
the errback on the deferred to be called with this failure.

The LDAPSyntaxSearch and Bind test cases are augmented with one test each
to use the new failure functionality in the client test driver. As the
search() code a while back did not handle errors in the send_multiResponse()
deferred chain the test case would time out if run against older code.
Therefore a smaller timeout of 3 seconds is set for the LDAPSyntaxSearch test
case.
---

Discussion: With this change the old test cases pass and the code path
introduced by my modifications to send_multiResponse() is tested by a
new test case. I am still a bit unsure if I am testing the right thing
and if the original fix is the right thing to do. Any comments
welcome!

Code published on http://github.com/antong/ldaptor/tree/pu


 ldaptor/test/test_ldapsyntax.py |   25 +++++++++++++++++++++++++
 ldaptor/testutil.py             |   18 +++++++++++++++++-
 2 files changed, 42 insertions(+), 1 deletions(-)

diff --git a/ldaptor/test/test_ldapsyntax.py b/ldaptor/test/test_ldapsyntax.py
index b8bcf53..46be06c 100755
--- a/ldaptor/test/test_ldapsyntax.py
+++ b/ldaptor/test/test_ldapsyntax.py
@@ -7,6 +7,7 @@ from ldaptor import config, testutil, delta
 from ldaptor.protocols.ldap import ldapsyntax, ldaperrors
 from ldaptor.protocols import pureldap, pureber
 from twisted.internet import defer
+from twisted.internet import error
 from twisted.python import failure
 from ldaptor.testutil import LDAPClientTestDriver

@@ -366,6 +367,7 @@ class
LDAPSyntaxAttributesModificationOnWire(unittest.TestCase):


 class LDAPSyntaxSearch(unittest.TestCase):
+    timeout = 3
     def testSearch(self):
         """Test searches."""

@@ -641,6 +643,17 @@ class LDAPSyntaxSearch(unittest.TestCase):
         d.addCallbacks(testutil.mustRaise, eb)
         return d

+    def testSearch_err(self):
+        client=LDAPClientTestDriver([
+                failure.Failure(error.ConnectionLost())
+                ])
+        o = ldapsyntax.LDAPEntry(client=client, dn='dc=example,dc=com')
+        d = o.search(filterText='(foo=a)')
+        def eb(fail):
+            fail.trap(error.ConnectionLost)
+        d.addCallbacks(testutil.mustRaise, eb)
+        return d
+
 class LDAPSyntaxDNs(unittest.TestCase):
     def testDNKeyExistenceSuccess(self):
         client = LDAPClientTestDriver()
@@ -1516,3 +1529,15 @@ class Bind(unittest.TestCase):
             fail.trap(ldaperrors.LDAPInvalidCredentials)
         d.addCallbacks(testutil.mustRaise, eb)
         return d
+
+    def test_err(self):
+        client = LDAPClientTestDriver([
+                failure.Failure(error.ConnectionLost())])
+
+        o=ldapsyntax.LDAPEntry(client=client,
+                               dn='cn=foo,dc=example,dc=com')
+        d = defer.maybeDeferred(o.bind, 'whatever')
+        def eb(fail):
+            fail.trap(error.ConnectionLost)
+        d.addCallbacks(testutil.mustRaise, eb)
+        return d
diff --git a/ldaptor/testutil.py b/ldaptor/testutil.py
index 8307cb9..cb25aa3 100644
--- a/ldaptor/testutil.py
+++ b/ldaptor/testutil.py
@@ -1,6 +1,7 @@
 """Utilities for writing Twistedy unit tests and debugging."""

 from twisted.internet import defer
+from twisted.python import failure
 from twisted.trial import unittest
 from twisted.test import proto_helpers
 from ldaptor import config
@@ -36,23 +37,37 @@ class LDAPClientTestDriver:
     messages are stored in self.sent, so you can assert that the sent
     messages are what they are supposed to be.

+    It is also possible to include a Failure instance instead of a list
+    of LDAPProtocolResponses to cause which will cause the errback
+    to be called with the failure.
+
     """
     def __init__(self, *responses):
         self.sent=[]
         self.responses=list(responses)
         self.connected = None
         self.transport = FakeTransport(self)
+
     def send(self, op):
         self.sent.append(op)
         l = self._response()
         assert len(l) == 1, \
                "got %d responses for a .send()" % len(l)
-        return defer.succeed(l[0])
+        r = l[0]
+        if isinstance(r, failure.Failure):
+            return defer.fail(r)
+        else:
+            return defer.succeed(r)
+
     def send_multiResponse(self, op, handler, *args, **kwargs):
+        d = defer.Deferred()
         self.sent.append(op)
         responses = self._response()
         while responses:
             r = responses.pop(0)
+            if isinstance(r, failure.Failure):
+                d.errback(r)
+                break
             ret = handler(r, *args, **kwargs)
             if responses:
                 assert not ret, \
@@ -60,6 +75,7 @@ class LDAPClientTestDriver:
             else:
                 assert ret, \
                        "no more responses to give, but handler still
wants more (got %r)." % ret
+        return d

     def send_noResponse(self, op):
         responses = self.responses.pop(0)
-- 
1.7.1.5.g49342



From exarkun at twistedmatrix.com  Thu Sep  2 06:01:41 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Sep 2010 12:01:41 -0000
Subject: [Twisted-Python] multiple workers
In-Reply-To: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>
References: <AANLkTimEU9is+3qJiHCsxeHw6pc7TAtERm7n0rdVYBf8@mail.gmail.com>
Message-ID: <20100902120141.2058.263116298.divmod.xquotient.376@localhost.localdomain>

On 1 Sep, 10:53 pm, ruslan.usifov at gmail.com wrote:
>Hello
>
>I try to write twisted based daemon that work in multiple workers, like
>this:
>
>from twisted.internet import reactor;
>from proxy import FASTCGIServerProxyFactory;
>import os;
>
>reactor.listenUNIX("/tmp/twisted-fcgi.sock", 
>FASTCGIServerProxyFactory());
>
>for i in xrange(3):
>  l_pid = os.fork();
>
>  if(l_pid == 0):
>    break;
>
>reactor.run()
>
>I creatae 4 wokers(by num of CPU cores). Im my test all ok, but when i
>shutdown daemon i got follow error 3 times (because every worker try to
>unlink sock file: /tmp/twisted-fcgi.sock):

Using fork this way isn't supported.  Either fork before you import any 
Twisted modules, or use reactor.spawnProcess to create workers instead. 
If you must share a single listening socket amongst all the workers, you 
might be interested in <http://twistedmatrix.com/trac/ticket/4387>.

Jean-Paul



From ruslan.usifov at gmail.com  Thu Sep  2 11:26:35 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 21:26:35 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>

Why it is not supported? I want behaviour like nginx http://nginx.org/, and
misunderstand why i can't implemented it throw twisted. Its' so easy. Every
process have it's own set sockets, and they doesn't share  this sockets
between each other. "OnConnect" event happens only once and which process
handle this event depend on operation system(select epoll, kqueue), in my
case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here is
unsupported behaviour?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100902/33352af5/attachment-0001.html>

From ruslan.usifov at gmail.com  Thu Sep  2 11:26:35 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 2 Sep 2010 21:26:35 +0400
Subject: [Twisted-Python] multiple workers
Message-ID: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>

Why it is not supported? I want behaviour like nginx http://nginx.org/, and
misunderstand why i can't implemented it throw twisted. Its' so easy. Every
process have it's own set sockets, and they doesn't share  this sockets
between each other. "OnConnect" event happens only once and which process
handle this event depend on operation system(select epoll, kqueue), in my
case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here is
unsupported behaviour?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100902/33352af5/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Sep  2 14:12:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 02 Sep 2010 20:12:18 -0000
Subject: [Twisted-Python] multiple workers
In-Reply-To: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>
References: <AANLkTinebqsVm8RQ-CMd8sUNMZT0X2tyiPiEK6OMBFT3@mail.gmail.com>
Message-ID: <20100902201218.2058.2013892391.divmod.xquotient.404@localhost.localdomain>

On 05:26 pm, ruslan.usifov at gmail.com wrote:
>Why it is not supported?

"Why" it is not supported is that no one has decided to implement and 
support it.  If it's interesting behavior for you, then we would 
completely welcome you implementing it, and we'll even maintain the 
support for it once you've done that. :)

If you were asking about what specific implementation details cause it 
not to work now (more of a "how" question, sort of), then the answer to 
that probably varies from reactor to reactor, but it is all about how 
things end up being shared across the multiple processes created by 
fork.

I want behaviour like nginx http://nginx.org/, and
>misunderstand why i can't implemented it throw twisted. Its' so easy. 
>Every
>process have it's own set sockets, and they doesn't share  this sockets
>between each other. "OnConnect" event happens only once and which 
>process
>handle this event depend on operation system(select epoll, kqueue), in 
>my
>case this happens like round robin(FreeBSD 7.2-RELEASE-p8). Where here 
>is
>unsupported behaviour?

So, for example, epoll descriptors do survive fork().  However, kqueue 
descriptors don't.  So one necessary change for kqueue reactor to 
support this kind of behavior is to have the reactor somehow re- 
initialize itself after the fork.

Another problem is that certain resources are not simply duplicated by a 
fork().  A specific example is the one you brought up in your earlier 
post.  A unix socket only has one entity corresponding to it in the 
filesystem.  Twisted takes responsibility for cleaning these up, but 
after you fork(), there are two unix sockets and still only one 
filesystem entity.  This confuses one of the processes, since it 
believes it needs to delete the file.  Hardly rocket science to fix, but 
it's a specific case which needs to be handled.

And I'm sure you'll come across quite a few more specific cases which 
need to be handled.  This might get us back to the "why" a little - 
actually ensuring that everything will work properly when arbitrary 
forks are added is a major challenge.  I don't see any way to do it 
comprehensively, really.  That would leave you with a long, long 
adventure of fixing one little issue at a time for months or even years 
to come.  And each problem would only become evident after it bit you 
somehow.

That's probably why we have a ticket for an explicit file descriptor 
passing API, rather than a ticket for supporting arbitrary fork calls. 
The former is easier to test and be confident in than the latter.

Jean-Paul



From simonvermeersch at gmail.com  Sat Sep  4 07:19:47 2010
From: simonvermeersch at gmail.com (Vermeersch Simon)
Date: Sat, 4 Sep 2010 15:19:47 +0200
Subject: [Twisted-Python] Telnet MCCP Transport
Message-ID: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>

Hello everyone,

I couldn't find an implementation of MCCP (Mud Client Compression
Protocol) using Twisted so I made my own, which I'm sharing if anyone
else has a use for it.

You can find a description of MCCP here:
http://www.mudstandards.org/MCCP_Specification

Since I'm fairly new to Twisted I would appreciate any input about how
to improve this if you find a better/cleaner way to do it.

import zlib
from twisted.conch.telnet import TelnetTransport
from twisted.conch.telnet import DO, DONT

COMPRESS2 = chr(86)

class MCCPTelnetTransport(TelnetTransport):
    def connectionMade(self):
        self.zlib = None
        TelnetTransport.connectionMade(self)
        self.will(COMPRESS2)

    def commandReceived(self, command, argument):
        if argument == COMPRESS2:
            if command == DO:
                self.requestNegotiation(COMPRESS2, "")
                self.zlib = zlib.compressobj()
            elif command == DONT:
                pass
        else:
            TelnetTransport.commandReceived(self, command, argument)

    def write(self, data):
        data = data.replace('\n', '\r\n')
        if self.zlib:
            data = self.zlib.compress(data)
            data += self.zlib.flush(zlib.Z_SYNC_FLUSH)
        self.transport.write(data)

-- 
Simon Vermeersch



From exarkun at twistedmatrix.com  Sat Sep  4 22:05:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Sep 2010 04:05:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1283659530.48.414321001@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100905/b1484dbc/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Sep  5 07:49:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Sep 2010 13:49:08 -0000
Subject: [Twisted-Python] Telnet MCCP Transport
In-Reply-To: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>
References: <AANLkTikbvPvHkoV7xs0ESEbw0ht1wdLzkV+VwwmAp1YD@mail.gmail.com>
Message-ID: <20100905134908.2058.913926742.divmod.xquotient.445@localhost.localdomain>

On 4 Sep, 01:19 pm, simonvermeersch at gmail.com wrote:
>Hello everyone,
>
>I couldn't find an implementation of MCCP (Mud Client Compression
>Protocol) using Twisted so I made my own, which I'm sharing if anyone
>else has a use for it.
>
>You can find a description of MCCP here:
>http://www.mudstandards.org/MCCP_Specification
>
>Since I'm fairly new to Twisted I would appreciate any input about how
>to improve this if you find a better/cleaner way to do it.
>
>import zlib
>from twisted.conch.telnet import TelnetTransport
>from twisted.conch.telnet import DO, DONT
>
>COMPRESS2 = chr(86)
>
>class MCCPTelnetTransport(TelnetTransport):
>    def connectionMade(self):
>        self.zlib = None
>        TelnetTransport.connectionMade(self)
>        self.will(COMPRESS2)
>
>    def commandReceived(self, command, argument):
>        if argument == COMPRESS2:
>            if command == DO:
>                self.requestNegotiation(COMPRESS2, "")
>                self.zlib = zlib.compressobj()
>            elif command == DONT:
>                pass
>        else:
>            TelnetTransport.commandReceived(self, command, argument)
>
>    def write(self, data):
>        data = data.replace('\n', '\r\n')
>        if self.zlib:
>            data = self.zlib.compress(data)
>            data += self.zlib.flush(zlib.Z_SYNC_FLUSH)
>        self.transport.write(data)

This approach has some drawbacks:

  * Duplication of the logic in TelnetTransport.write.  In this case, the 
duplication appears to be imprecise: the original escapes IAC as well as 
does newline translation, but your version only does the latter.

  * If there's some other similar option you decide you want to support, 
you'll probably have to implement it by adding the feature directly to 
this class.  Since MCCPTelnetTransport is a TelnetTransport subclass, 
you won't be able to compose it with another similar class in any way 
(either through inheritance or composition).  This has slightly 
unfortunate code re-use consequences.

  * If you ever put a transport.write() call into connectionMade, I think 
the result will be a corrupted transport (if the server supports MCCP). 
This is because the bytes will be sent uncompressed because the server 
will not have yet had a chance to send the DO COMPRESS2 response, so the 
zlib object will not yet exist.

Only one idea really comes to mind for an implementation without (at 
least some of) these drawbacks, and it may not really be worth the 
trouble.  The idea is that you would start off with an extra compression 
protocol in the stack.  It would act as a transport to TelnetTransport 
and as a protocol to whatever lower level transport (eg tcp) you're 
using.  It would have methods for enabling and disabling compression 
which you could call from your option negotiation methods.

  * Since it would have a write method which sometimes compressed bytes 
before passing them on, you wouldn't have to override 
TelnetTransport.write, so you wouldn't have the duplication of code 
there.

  * Since most of the code would be on a separate class, it *might* be 
easier to re-use.  Although since it creates a new interface that your 
TelnetTransport subclass wants to use, this might not be true (you might 
always need to use the two classes together, and they might break if you 
inserted extra classes between them).

  * It could buffer writes while negotiations were pending.  Although you 
could also just implement this yourself on MCCPTelnetTransport.

So, maybe a wash.  It might just be better to fix the problems with your 
current approach and move on.

Jean-Paul



From pekcagliyan at labristeknoloji.com  Mon Sep  6 02:28:51 2010
From: pekcagliyan at labristeknoloji.com (Ozgur Pekcagliyan)
Date: Mon, 6 Sep 2010 08:28:51 +0000 (UTC)
Subject: [Twisted-Python] Memory Usage Problem
Message-ID: <loom.20100906T102808-312@post.gmane.org>

Hi All,

I have a problem which is that memory usage of twisted is increasing but not 
decreasing over time.

After few days, it reaches 520MB. You may find the codes below;
How may I reduce the usage of memory?
Twisted version: 8.2.0
Python version: 2.4.3

[root at labris init.d]# cat /usr/bin/labris-flyng.tac
#!/usr/bin/python

import os

from twisted.application import internet, service
from twisted.internet import reactor
from twisted.enterprise import adbapi
from twisted.plugin import getPlugins
from twisted.python import log

import labris.flyng.iflyng as iflyng
import labris.flyng.config as config
import labris.flyng.plugins as pplugins
import labris.flyng.protocols as flyng_protocols

from labris.flyng.config import flyng_config

# Database type to package dictionary
DB_PACKAGE_DICT = {
    "postgresql" : "psycopg2"
}

def initDatabase(config):
    """
    Create database connection pool
    """

    dbtype = config.getDBType()
    dbpackage = DB_PACKAGE_DICT.get(dbtype, None)

    if not dbpackage:
        print "Database type % is not supported yet!" %(dbtype)
        sys.exit(1)


    if dbtype == "mysql":
        dbpool = adbapi.ConnectionPool(
            dbpackage,
                        config.getDBHost(),
                        config.getDBUser(),
                        config.getDBPassword(),
                        config.getDBName()
                )
    else:
            dbpool = adbapi.ConnectionPool(
            dbpackage,
                    database=config.getDBName(),
                    user=config.getDBUser(),
            password=config.getDBPassword(),
                    host=config.getDBHost()
            )

    dbpool.connect()

    return dbpool


def setupPlugins(config, dbpool):
    """
    Initialize and setup plugins
    """

    for plugin in getPlugins(iflyng.IFlyngPlugin, pplugins):
        print "* Plugin %s" %(plugin.name)
        if not config.isEnabled(plugin.name):
            print "   - Not enabled"
            continue

        plugin.init(config, dbpool)

        for type, port in config.getListeningPorts(plugin.name):
            port = port.replace('"', "")
            if type == "tcp":
                print "   -> TCP port: %s" %(port)
                factory = flyng_protocols.FlyngServerFactory(plugin)
                internet.TCPServer(
                    int(port),
                    factory
                ).setServiceParent(application)

            elif type == "udp":
                print "   -> UDP port: %s" %(port)
                internet.UDPServer(
                    int(port),
                    flyng_protocols.FlyngUDPProtocol(plugin)
                ).setServiceParent(application)

            elif type == "unix":
                print "   -> UNIX stream: %s" %(port)
                if os.path.exists(port):
                    os.unlink(port)
                factory = flyng_protocols.FlyngServerFactory(plugin)
                internet.UNIXServer(
                    port,
                    factory
                ).setServiceParent(application)

            else:
                raise "connection type %s is not supported" %(port)

#log.startLogging(open("/var/log/labris-flyng.log", "a"))

config = config.Configuration()

uid, gid = config.getRunAs()

application = service.Application('labris-flyng', uid, gid)

dbpool = initDatabase(config)

setupPlugins(config, dbpool)


-------------------------------------------------------------------


[root at labris init.d]# cat /usr/bin/labris-pyng.tac
#!/usr/bin/python

"""
    A syslog-ng to database mapping service
"""

import os

from twisted.internet import protocol, reactor, defer
from twisted.application import internet, service
from twisted.python import log

from labris.logutils import factories
from labris.logutils.config import pyng_config

class LogFactory(protocol.ServerFactory):
    pass

class UnixLogFactory(protocol.ServerFactory):
    pass

def openUNIXStreams(configuration, application):
    for logtype, stream in configuration.getUnixStreams():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UNIX stream: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UNIX-Stream(%s)]" %(logtype, stream)

            factory = UnixLogFactory()
            factory.protocol = 
factories.ProtocolFactory.getLogProtocol(logtype.strip(), "stream")

            # delete old stream
            if os.path.exists(stream):
                os.unlink(stream)

            internet.UNIXServer(stream.strip(), 
factory).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()

    for logtype, sock in configuration.getUnixDgrams():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UNIX dgram: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UNIX-Datagram(%s)]" %(logtype, stream)

            protocol = factories.ProtocolFactory.getLogProtocol(logtype.strip(), 
"datagram")

            # delete old stream
            if os.path.exists(sock):
                os.unlink(sock)

            internet.UNIXDatagramServer(sock.strip(), 
protocol()).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()


def openSockets(configuration, application):
    for logtype, hostname, port in configuration.getTCP():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: TCP socket: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [TCP => port:%d]" %(logtype, int(port))

            factory = LogFactory()
            factory.protocol = 
factories.ProtocolFactory.getLogProtocol(logtype.strip(), "stream")

            internet.TCPServer(int(port), factory).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()

    for logtype, hostname, port in configuration.getUDP():
        try:
            if not pyng_config.getboolean(logtype.strip(), "enabled"):
                print "Warning: UDP socket: ", logtype, " is DISABLED"
                continue

            print "\nPlugin: %s [UDP => port:%d]" %(logtype, int(port))

            protocol = factories.ProtocolFactory.getLogProtocol(logtype.strip(), 
"datagram")

            internet.UDPServer(int(port), 
protocol()).setServiceParent(application)
        except factories.NoSuchProtocolException, e:
            print "Error: no such protocol:", e.getProtoname()


#log.startLogging(open("/var/log/labris-pyng.log", "a"))

from labris.logutils.dao.pyngdb import PyNgDB

PyNgDB.initDatabase(pyng_config.bind())

application = service.Application('labris-pyng', pyng_config.uid(), 
pyng_config.gid())

openUNIXStreams(pyng_config, application)
openSockets(pyng_config, application)





From therve at free.fr  Mon Sep  6 03:48:35 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Mon, 06 Sep 2010 05:48:35 -0400
Subject: [Twisted-Python] Memory Usage Problem
In-Reply-To: <loom.20100906T102808-312@post.gmane.org>
References: <loom.20100906T102808-312@post.gmane.org>
Message-ID: <1283766515.11755.3.camel@localhost>

Le lundi 06 septembre 2010 à 08:28 +0000, Ozgur Pekcagliyan a écrit :
> Hi All,
> 
> I have a problem which is that memory usage of twisted is increasing but not 
> decreasing over time.
> 
> After few days, it reaches 520MB. You may find the codes below;
> How may I reduce the usage of memory?
> Twisted version: 8.2.0
> Python version: 2.4.3

[snip]

It's a bit hard to tell, because you're only showing the tac files, and
not the application code, where the memory leak is likely to be.

But:
 * Twisted 8.2 is fairly old, it would worth to try a more recent
version.
 * Python 2.4.3 is very old too, *and* contains a pretty bad bug in the
socket module (unless your platform patched). Note also that only Python
2.5 started releasing memory (IIRC).

-- 
Thomas




From pekcagliyan at labristeknoloji.com  Mon Sep  6 08:31:17 2010
From: pekcagliyan at labristeknoloji.com (Ozgur Pekcagliyan)
Date: Mon, 6 Sep 2010 14:31:17 +0000 (UTC)
Subject: [Twisted-Python] Memory Usage Problem
References: <loom.20100906T102808-312@post.gmane.org>
	<1283766515.11755.3.camel@localhost>
Message-ID: <loom.20100906T162947-600@post.gmane.org>

I've tried to upgrade twisted version 10.1.0. But problem still exists. I will 
try to upgrade python but still I have doubts that will fix my problem. Any Idea?




From glyph at twistedmatrix.com  Mon Sep  6 12:34:26 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Sep 2010 11:34:26 -0700
Subject: [Twisted-Python] Memory Usage Problem
In-Reply-To: <loom.20100906T162947-600@post.gmane.org>
References: <loom.20100906T102808-312@post.gmane.org>
	<1283766515.11755.3.camel@localhost>
	<loom.20100906T162947-600@post.gmane.org>
Message-ID: <39B685C2-E8E3-4307-BF5C-4FB6AB2C41A0@twistedmatrix.com>


On Sep 6, 2010, at 7:31 AM, Ozgur Pekcagliyan wrote:

> I've tried to upgrade twisted version 10.1.0. But problem still exists. I will 
> try to upgrade python but still I have doubts that will fix my problem. Any Idea?

Try debugging with a memory profiling tool like Heapy: <http://guppy-pe.sourceforge.net/#Heapy>.

My first guess is that this is simply a bug in your application, where you're leaking some objects, and may have nothing to do with Twisted at all.

Of course, it could also be a bug in Twisted, but if it is, you'll need to tell us what it is before we can fix it.  Since the first Google hit I get for "labris Python" is your first mailing list post, there's no way to try your code, and even if there were, it looks like a big complex program that I don't understand.  If you can reduce your memory leak to a short, self-contained, correct example, (<http://sscce.org/>) then we might be able to do something about it.

Good luck!




From dbcourriel-4all at yahoo.fr  Tue Sep  7 03:28:00 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 09:28:00 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
Message-ID: <573105.78771.qm@web24408.mail.ird.yahoo.com>

Hi,
 
i need to connect (tcp) to many servers.
so i wrote
 
def connectAll(addresses):
logger.info("connect all")
servers = [svcConnect(address) for address in addresses]

defer.DeferredList(servers, consumeErrors=True).addCallback(handleAllResults, addresses)
reactor.run( )
 


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100907/4b390d81/attachment-0001.html>

From dbcourriel-4all at yahoo.fr  Tue Sep  7 03:40:07 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 09:40:07 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
Message-ID: <596556.44808.qm@web24407.mail.ird.yahoo.com>


Hi, i need to connect to many servers
so i've found an example that shows how to connect to many servers see the source below.
But i need to get the way to retrieve each server in order to see the satus of the connection, to send to it a message. Is there an connection object with sendData action, getCxStatus for example
 
Thanks
 
 
class ClntProtocol(protocol.Protocol):
          def sendData(self, data):
                  if data:
                       self.transport.write(data)
                 else:
                      self.transport.loseConnection()

 
          def connectionMade(self, data=''):
                 connectedClientlist.append(self)
                 if data:
                    self.sendData(data)

 
         def dataReceived(self, data):
              if data:
                   self.sendData(data)

 
         def closeConnection(self):
              pass


 
class cxFactory(protocol.ClientFactory):
           protocol = ClntProtocol
          def __init__(self):
                  self.deferred = defer.Deferred( )

 
         def clientConnectionFailed(self, connector, reason):
                self.deferred.errback(reason)
 
        def svcConnect(address):
                clntFactory = cxFactory()
                reactor.connectTCP(address[0], int(address[1]), clntFactory)
return clntFactory.deferred
 
def connectAll(addresses):
         logger.info("connect all")
         servers = [svcConnect(address) for address in addresses]
         defer.DeferredList(servers, consumeErrors=True).addCallback(handleAllResults, addresses)
         reactor.run( )
 


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100907/ceb67091/attachment.html>

From exarkun at twistedmatrix.com  Tue Sep  7 06:52:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 07 Sep 2010 12:52:46 -0000
Subject: [Twisted-Python] connection to many servers
In-Reply-To: <596556.44808.qm@web24407.mail.ird.yahoo.com>
References: <596556.44808.qm@web24407.mail.ird.yahoo.com>
Message-ID: <20100907125246.2058.730326135.divmod.xquotient.452@localhost.localdomain>

On 09:40 am, dbcourriel-4all at yahoo.fr wrote:
>
>Hi, i need to connect to many servers
>so i've found an�example that�shows how to connect to many servers�see 
>the source below.
>But i need to get the way to retrieve each server in order to see the 
>satus of the connection, to send to it a message. Is there an 
>connection object with sendData action, getCxStatus for example

The protocol instance is that object.  In your case, the ClntProtocol (I 
hope that you profited well by omitting "ie" from that name).

If you want to keep track of multiple connections, I suggest a list or 
dictionary.

Jean-Paul



From dbcourriel-4all at yahoo.fr  Tue Sep  7 10:03:03 2010
From: dbcourriel-4all at yahoo.fr (dbcourriel-4all at yahoo.fr)
Date: Tue, 7 Sep 2010 16:03:03 +0000 (GMT)
Subject: [Twisted-Python] connection to many servers
In-Reply-To: <20100907125246.2058.730326135.divmod.xquotient.452@localhost.localdomain>
Message-ID: <972143.49052.qm@web24406.mail.ird.yahoo.com>

Thanks a lot for your answer.
 
regards,


--- En date de : Mar 7.9.10, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com> a écrit :


De: exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>
Objet: Re: [Twisted-Python] connection to many servers
À: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Date: Mardi 7 septembre 2010, 14h52


On 09:40 am, dbcourriel-4all at yahoo.fr wrote:
> 
> Hi, i need to connect to many servers
> so i've found an example that shows how to connect to many servers see the source below.
> But i need to get the way to retrieve each server in order to see the satus of the connection, to send to it a message. Is there an connection object with sendData action, getCxStatus for example

The protocol instance is that object.  In your case, the ClntProtocol (I hope that you profited well by omitting "ie" from that name).

If you want to keep track of multiple connections, I suggest a list or dictionary.

Jean-Paul


-----La pièce jointe associée suit-----


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100907/28d2e7cb/attachment-0001.html>

From lvh at laurensvh.be  Tue Sep  7 13:16:20 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 7 Sep 2010 21:16:20 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a str?
Message-ID: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>

Hi,



As some of you probably know I'm trying to beat OAuth2.0 into submission.
I'm using twisted.cred to do it. The restriction that avatarIds need to be
strs is somewhat getting in my way, and I'm not sure if the correct way to
do it is:
1) ignore the restriction (credentials types are so specific to OAuth that
it's very unlikely you'll find anything already pluggable...)
2) use the mind object (but then it becomes somewhat wonky what goes on the
mind object and what should be the avatarId)

I'll give you a practical example:
An OAuth client makes a request for an access token. This basically means he
trades some credentials in for an access token (I use the expression
trade-in because most of the credentials can only be used once). It presents
some credentials, which can be grouped into two parts:

1) credentials that authenticate the client itself
2) credentials for the access grant (eg I've got this thing that says I
should have access)

Because (1) is pretty much always the same (and is common to other parts of
txOAuth) and (2) depends on the specific kind of request, this results in
two portals:

1) for authenticating the client, which returns an IClient
2) for authenticating the credentials (which includes the authenticated
client, since credentials are client-specific), which returns the token

Coming from Perspective Broker I think the Client would be an apt mind
object for the second portal, since it represents the entity on the other
side trying to do auth.

The appropriate credentials checker in the second portal checks (and
invalidates, since most of the credentials are single use) the credentials.
What avatarId is sent to the Realm? The Realm is also responsible for
requesting the new token, so it needs to know details about the credential
that the credential checker just checked (and in doing so, invalidated).
These are not available through the IClient mind object.

The alternative design is that all of the credentials checkers know how to
request tokens, and instead give the tokenId as avatarId. This is still
insufficient, because tokens can include extra information, such as scope,
expiration time... That can again be solved by sending an opaque string
value which contains all of the data in the token response, but in that case
the Realm is completely useless and the checkers do all of the work.
Additionally, this seems stupid because cred checkers are for checking
credentials, not checking credentials + a bunch of other stuff.

Here's my theory:
13:43 <lvh> aa_: fwiw I *think* it's because cred's supposed to be pluggable
13:43 <lvh> aa_: so avatarId is supposed to be the equivalent of a username
13:44 <lvh> aa_: and it's str not unicode because there's a helluva lot more
things
that store bytes than unicode objects

So um, any thoughts from people that understand cred? Is it ever okay to
send richer things than strings to a Realm?

thanks
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100907/8a581006/attachment.html>

From einar.twisted at norsk-esport.no  Wed Sep  8 07:19:40 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Wed, 8 Sep 2010 15:19:40 +0200
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
Message-ID: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>

Hi,

I am trying to make one class/service hook onto another class/service
to add to its functionality without disturbing the original
class/service.

My situation is this: I currently have a class which at specific
intervals queries one server per instance (via t.u.getProcessOutput())
for some basic information. Each instance has a method which analyses
its returned data and stores the result it to  ts internal data
structure. My dilemma is that I wish to leave this class alone, but I
also wish to be able to add functionality from external classes based
on the result of said method. For instance: If the method analysing
the result from getProcessOutput() discovers a certain user on the
server being queried, I wish to store the data to a mysql database.
Under other circumstances I wish to send a notification to myself over
MSN or via mail. I can easily envision myself wanting to respond to
the results with other actions as well in the future. How can this be
achieved?

I can of course modify the original class so that I pass an
adbapi.ConnectionPool as optional argument to __init__() and modify
the method to check for the existence of such an object before
querying the database. I would then also need to add another optional
argument which is whatever object needs to be passed to allow the
class to send a message to MSN, and still more optional arguments for
any such new service I'd like to add. However, as mentioned I'd rather
not modify the original class, and doing this seems like too much of a
hack. Or is it? Perhaps inheritance is the key, although that would
require me to modify existing methods which I know to be working just
to tack on some additional functionality at the end.

What are my options here? I took a look at t.p.hook, and it seems like
it is perfect for the job: After having instantiated my "global"
adbapi.ConnectionPool(), I can just add a pre- or post-hook to any
class's method from which I'd like to store data. That way I can make
a db-instance which hooks in to any part of my application and stores
any result imaginable from any method. However, it seems that t.p.hook
is very rarely used, so perhaps there is a better way of achieving
what I want?

I hope this was somewhat comprehensible, and that there is an elegant
solution out there. :)

Cheers,
Einar



From glyph at twistedmatrix.com  Wed Sep  8 12:52:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 11:52:25 -0700
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
Message-ID: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>


On Sep 7, 2010, at 12:16 PM, Laurens Van Houtven wrote:

> Hi,
> 
> As some of you probably know I'm trying to beat OAuth2.0 into submission. I'm using twisted.cred to do it. The restriction that avatarIds need to be strs is somewhat getting in my way, and I'm not sure if the correct way to do it is:

Let me begin my answer with Epigram 34:

"The string is a stark data structure and everywhere it is passed there is much duplication of process. It is a perfect vehicle for hiding information."

If I recall correctly, the Divmod realm/checker integration required a particular format for avatar IDs; they had to be 'user at domain' so that the server could do virtual hosting.  In some cases (POP for example) that actually meant the user needed to type in user at domain as their username.  So, while strings may not be ideal, it's almost certainly possible for them to let you do what you want.  I wouldn't recommend that approach if you have a bunch of extra data to deal with... but you don't really give a clear picture of what extra data you do have to deal with :).

> 1) ignore the restriction (credentials types are so specific to OAuth that it's very unlikely you'll find anything already pluggable...)

but the avatarID isn't a credential.  It's a mapping between the checker (which is about authentication) and the realm (which is about application data).  There hopefully _should_ be such a thing as some "already pluggable" application data.

> 2) use the mind object (but then it becomes somewhat wonky what goes on the mind object and what should be the avatarId)

Use the mind object for what??? You're asking this question completely backwards.  Even after reading the whole email I'm still not quite sure what you're on about.  I'll do my best to answer a few specific quirks here, but please re-post starting with what you're actually trying to do, i.e., "I got up today, and I wanted to paint the shed."

If you're already most of the way into an implementation, feel free to present bits of the implementation itself, but you haven't really described enough of it here for me to understand what you're doing and why.

> I'll give you a practical example:
> An OAuth client makes a request for an access token. This basically means he trades some credentials in for an access token (I use the expression trade-in because most of the credentials can only be used once). It presents some credentials, which can be grouped into two parts:
> 
> 1) credentials that authenticate the client itself
> 2) credentials for the access grant (eg I've got this thing that says I should have access)

Only one of these things are really "credentials" from cred's perspective.

Cred's purpose is to tie together two things: a realm that implements some protocol/application logic, and a checker that implements some authentication logic.  _everything that happens before you start talking to the application_ is just authentication stuff, and is part of the checker.  Even if that stuff, itself, needs to be pluggable.

I don't know the specifics of how OAuth works, but I know vaguely what it does, and ultimately what it needs to do is give you access to an IResource that allows you to do ... stuff.  The stuff-doing part is the interesting part.  That is the part that the Realm gives you.  The Realm ought to be able to work with Basic authentication, and the objects returned from the realm should be able to work even with no authentication (if you wanted to just put your resource endpoint up for everyone to use, unauthenticated, which is granted not very sueful).

> Because (1) is pretty much always the same (and is common to other parts of txOAuth) and (2) depends on the specific kind of request, this results in two portals:

> 1) for authenticating the client, which returns an IClient

I have no idea what an "IClient" is.  It sounds like you're using cred internally so that you can make the actual OAuth-ing process plugabble, and that's great, as long as you separate it from the post-OAuth part of actually producing a resource.

> 2) for authenticating the credentials (which includes the authenticated client, since credentials are client-specific), which returns the token

That part sounds like what I would expect.

> Coming from Perspective Broker I think the Client would be an apt mind object for the second portal, since it represents the entity on the other side trying to do auth.

The Mind is the entity on the other side trying to get something done, not trying to auth.  The docs sorely need to be updated to reflect this, but the canonical example of the 'mind' is the IChatClient interface in twisted.words (used in a cred context by twisted.words.service).  Of course, the IChatClient provider may also be involved in authentication, for example receiving a NickServ challenge from the server, but by the time you start calling that object a 'mind', authentication is done.

> The appropriate credentials checker in the second portal checks (and invalidates, since most of the credentials are single use) the credentials. What avatarId is sent to the Realm? The Realm is also responsible for requesting the new token,

OK, and that's where things go wrong.

The realm is responsible for one thing only: returning an object which implements an interface that allows a user of the library to define some application logic.  It should not be participating in auth.  If the authentication layer needs to perform some additional logic on each request, it should wrap up the IResource (or whatever) provider returned by the Realm, so that the Realm can do the work.

(and furthermore, why is anybody responsible for "requesting the new token" in the first place?  why do any new tokens ever need to be requested on the service provider's side of things?)

> so it needs to know details about the credential that the credential checker just checked (and in doing so, invalidated). These are not available through the IClient mind object.
> 
> The alternative design is that all of the credentials checkers know how to request tokens, and instead give the tokenId as avatarId. This is still insufficient, because tokens can include extra information, such as scope, expiration time... That can again be solved by sending an opaque string value which contains all of the data in the token response, but in that case the Realm is completely useless and the checkers do all of the work. Additionally, this seems stupid because cred checkers are for checking credentials, not checking credentials + a bunch of other stuff.

This has historically been a weak point for cred.  While I'm trying to give you a better idea of how to use it "right", you should be keenly aware that it isn't perfect and doesn't necessarily handle every case, so there are some things that you might try to do which won't be well supported.  Since cred is so mysterious and subtle, sometimes people believe that if they could just grasp its essence all their problems will go away; but it only solves one problem, so if that problem isn't the one you're facing, you may still be out of luck :).

The idea is that the realm is supposed to be a backend that has its own storage and logic and so on, and the checker is supposed to have enough information to produce an avatar ID that points at something the realm knows about.  The fiction that cred promulgates is that checkers are somehow agnostic to realms, but can still perform this mapping reliably based on their credentials.

Of course, this can't be universally true: if the checker needs to map things into the realm, then it stands to reason it *does* need to know something about the realm.  This level of flexibility is needed very rarely though, so what ends up happening is that all the existing checkers just relay the 'username' field to be the avatar ID.  In the event that you do need more flexibility - let's say your accounts database uses a peculiar convention to encode the authentication type into the stored user ID so that the same user might get different behavior based on how they authenticate - you could easily write some custom checkers that wrap simple underlying checkers and sprinkle on a little special-case logic to mutate the avatarID appropriately before returning it.

I think you're actually a little lucky to be implementing OAuth rather than OpenID, because my understanding is that with OAuth the expectation is that, as a provider of a service (i.e. someone likely to be using the cred interfaces, not a client) you expect that users have already created an account, and so the realm already has some data.  "expiration time" can be handled by the checker, or at least by the code that's driving the portal, to set session expiration.  (I'm not really sure what "scope" is, perhaps you could elaborate on some of these additional fields.)

The place where cred really falls down is multi-field stuff.  For example, in OpenID, a new user might show up with some OpenID metadata, like their preferred nickname, email address, and location.  Cred provides no way to tell the realm "create an account like this" or "are there any other users with this email address", so if you need to do *that* kind of thing, you're going to need to work on expanding the API.

> Here's my theory:
> 13:43 <lvh> aa_: fwiw I *think* it's because cred's supposed to be pluggable
> 13:43 <lvh> aa_: so avatarId is supposed to be the equivalent of a username
> 13:44 <lvh> aa_: and it's str not unicode because there's a helluva lot more things
> that store bytes than unicode objects
> 
> So um, any thoughts from people that understand cred? Is it ever okay to send richer things than strings to a Realm?

It hadn't really occurred to me to abuse the 'mind' object to provide that sort of structured data, but being able to specify the mind as "something adaptable to (interface X which provides the info you need)" is a nice big loophole :).  And the realm can return whatever it wants; it doesn't need to be based on the avatarID.  If you wanted to cram some more structured fields in there to smuggle them to the realm, that's a better place to put them than the strictly-mandated it's-just-some-bytes avatarID.  (This would allow other 'regular' HTTP realms to work with your OAuth code, but provide extra OAuth stuff for realms that want it).  I'm still not convinced that your realm should actually know about these extra fields, but maybe you just haven't given the relevant example yet.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100908/df134115/attachment.html>

From glyph at twistedmatrix.com  Wed Sep  8 13:47:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 12:47:40 -0700
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
In-Reply-To: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
Message-ID: <64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>

Hi Einar,

On Sep 8, 2010, at 6:19 AM, Einar S. Idsø wrote:

> I am trying to make one class/service hook onto another class/service
> to add to its functionality without disturbing the original
> class/service.

So... you are trying to write a computer program, is what you're saying? ;-)

> My situation is this: I currently have a class which at specific
> intervals queries one server per instance (via t.u.getProcessOutput())
> for some basic information. Each instance has a method which analyses
> its returned data and stores the result it to  ts internal data
> structure. My dilemma is that I wish to leave this class alone, but I
> also wish to be able to add functionality from external classes based
> on the result of said method. For instance: If the method analysing
> the result from getProcessOutput() discovers a certain user on the
> server being queried, I wish to store the data to a mysql database.
> Under other circumstances I wish to send a notification to myself over
> MSN or via mail. I can easily envision myself wanting to respond to
> the results with other actions as well in the future. How can this be
> achieved?

It sounds like this is a pretty trivial application of the Publish/Subscribe pattern (or perhaps the Observer) pattern.

<http://en.wikipedia.org/wiki/Publish/subscribe>
<http://en.wikipedia.org/wiki/Observer_pattern>

In less fancy language, "it sounds like you need a 'for' loop".

> I can of course modify the original class so that I pass an
> adbapi.ConnectionPool as optional argument to __init__() and modify
> the method to check for the existence of such an object before
> querying the database. I would then also need to add another optional
> argument which is whatever object needs to be passed to allow the
> class to send a message to MSN, and still more optional arguments for
> any such new service I'd like to add. However, as mentioned I'd rather
> not modify the original class, and doing this seems like too much of a
> hack. Or is it? Perhaps inheritance is the key, although that would
> require me to modify existing methods which I know to be working just
> to tack on some additional functionality at the end.

No, inheritance isn't the key.  It never is - composition is the key :).  You're right that adding lots of special-purpose arguments to __init__ that each do one thing is a bad idea.  Don't do that.  Add one general-purpose "list of observers that want to be notified (when X happens)" argument.  Then when your getProcessOutput() finishes, just do 'for something in self.observers: something.youJustGotServerStatus(newServerStatus)'.  It usually makes sense to define an interface with a couple of interesting methods when you do this, so that you can have more methods.  If you've only ever got one interesting type of event for this class and you're sure you won't ever have more, you might just use callable objects instead of methods, since that will let users pass in functions (i.e. 'for observer in observers: observer()').

> What are my options here? I took a look at t.p.hook, and it seems like
> it is perfect for the job: After having instantiated my "global"
> adbapi.ConnectionPool(), I can just add a pre- or post-hook to any
> class's method from which I'd like to store data. That way I can make
> a db-instance which hooks in to any part of my application and stores
> any result imaginable from any method. However, it seems that t.p.hook
> is very rarely used, so perhaps there is a better way of achieving
> what I want?

Please, please do not use t.p.hook.  I hope that we delete it one day.

The only thing in all of Twisted which uses t.p.hook is twisted.python.threadable, which is also very lightly used.  This functionality could easily be implemented using a decorator instead of the awfulness that twisted.python.hook gets up to.  If you look at how twisted.python.hook is implemented, you'll notice that it generates strings of Python code at runtime, and compiles and runs them.

More generally, please don't try to do what t.p.hook tries to do, and add functionality to a class that you wrote without that class's cooperation.  If your application depends on magical external modifications to classes in order to work as expected, it will become flaky and difficult to maintain.  For one thing, imagine some new developer reading the code: they're looking at the body of the method, they're looking at the code of the method, and then they're looking at some code in some totally random other spot that is somehow getting invoked when they call it.  Imagine the frustration as they try to figure out why that is happening.

If you instead just have an explicit list of observers, which are passed in to the class, then if one of them blows up, it will be very easy to figure out where it's blowing up: the line will be observer.youJustGotServerStatus(), there will be a couple of youJustGotServerStatus method somewhere that you can track down bugs to.

In some situations, if you're dealing with somebody else's code, that you can't modify for some reason at the source level (for example: you want to work with a released version of the standard library, or an older version of Twisted) it might make sense to patch in some extra functionality from your code.  In that case, using something like twisted.python.hook that enforces a particular style (again: do not use twisted.python.hook itself, it is old, crufty code that is unnecessarily complex) might be slightly better than just raw monkey patching.  But this is very much something that happens across the boundaries of code that is distributed separately.  If you are the maintainer for your class, just change your class, it's much simpler!

Of course, there are perfectly good reasons to use the wonktacular insane dynamic features that Python offers you, but mostly those are useful when you're trying to abstract away some concern that the developer writing the code in question shouldn't have to worry about, like a proxy object.  It's not a good idea to implement core application functionality in terms of meta-programming hacks: the whole point of adding funky meta-programming hacks is to make the core application logic easier to follow, by removing other concerns from the code :).

> I hope this was somewhat comprehensible, and that there is an elegant
> solution out there. :)

Well, if my answer answers your question, then yes :).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100908/88c9b1fe/attachment.html>

From stephen.c.waterbury at nasa.gov  Wed Sep  8 14:27:37 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Wed, 8 Sep 2010 16:27:37 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
 str?
In-Reply-To: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
Message-ID: <4C87F1B9.3070509@nasa.gov>

A nomenclature distinction that might help this conversation:

*authentication* verifies *identity*
(via, e.g., userid/passwd, public key negotiation, etc.)
and may issue a token (e.g., a cookie, Kerberos TGT, etc.).

*authorization* determines what an authenticated identity
(and its associated roles, if any) have access to in an
application context (realm?).

These are standard terms, and the activities they refer to should
be orthogonal.  Neither the OP nor Glyph use the term
"authorization" in either of their messages, but that concept
is clearly involved and is almost always useful for
clarification.

Looking at the OAuth 2.0 protocol specification, it seems quite
similar in concept to Kerberos (and other SSO protocols), in
which the user acquires a Ticket-Granting Ticket (TGT) upon
authentication to a Kerberos domain controller, and then the TGT
is used when interacting with applications in the Kerberos
domain.  Each app is registered with the Kerberos domain
controller and can interact with it securely to verify the
validity (also expiration time, etc.) of a TGT that has been
offered to it.  Once that interaction is complete, the app knows
the identity associated with the TGT has been authenticated, and
it can proceed with authorization, which of course depends on
each application's context, and is completely separate from
authentication.

It might be useful to describe cred's structure in these terms,
since both authentication and authorization are involved.
(Might be useful to me, at least ... :)

Steve




From glyph at twistedmatrix.com  Wed Sep  8 14:46:06 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Sep 2010 13:46:06 -0700
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <4C87F1B9.3070509@nasa.gov>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<4C87F1B9.3070509@nasa.gov>
Message-ID: <8A1E69BB-CFE5-4E31-B21A-096E8D57D026@twistedmatrix.com>


On Sep 8, 2010, at 1:27 PM, Stephen Waterbury wrote:

> Neither the OP nor Glyph use the term
> "authorization" in either of their messages, but that concept
> is clearly involved and is almost always useful for
> clarification.

The checker authenticates; the realm authorizes.

Authorization proceeds from the realm's idea of what a particular avatar ID (and, apparently, mind, as laurens has discovered this particular loophole in the API) is authorized to do; authentication proceeds from what the checker thinks makes some credentials valid.

As you put it:

> Once that interaction is complete, the app knows
> the identity associated with the TGT has been authenticated, and
> it can proceed with authorization, which of course depends on
> each application's context, and is completely separate from
> authentication.


replace "application" with "realm" here and that's basically how twisted.cred works.

The reason I didn't use the term authorization in my original message is that we're talking about an authentication protocol, and hopefully authorization can stay out of it :).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100908/325de3c3/attachment.html>

From jml at mumak.net  Wed Sep  8 15:12:48 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Sep 2010 22:12:48 +0100
Subject: [Twisted-Python] txdev: utility for working on Twisted
Message-ID: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>

Hello everyone,

I wrote a tool to help do Twisted development, especially with Bazaar.
You can get the code with:
  $ bzr branch lp:~jml/+junk/twisteddev

Basically, it's a few things to help with the interactions between
branches and tickets. It might well work with Subversion, since it's
mostly just putting strings together. There's some support for Bazaar
configuration. It might even work with other Twisted-like projects,
(e.g. Divmod projects).

There are some examples below. I hope they are self-explanatory.

I'll try to fix bugs if you find them. Features, well, you're on your own.

Let me know if it helps you.

cheers,
jml

$ txdev --help
Usage: txdev [options]
Options:
  -h, --help       Display this help and exit.
      --trac-url=  The URL of the Trac instance
      --repo-url=  The Bazaar repository with the branches.
      --version
Commands:
    branch           Get the branch for a ticket
    open-ticket      Open ticket in web browser
    reviews          Display tickets needing review

$ txdev branch 4616
http://svn.twistedmatrix.com/bzr/Twisted/branches/remove-lineno-patch-4616

$ bzr branch `txdev branch 4616`
$ cd remove-lineno-patch-4616
$ txdev open-ticket
Created new window in existing browser session.

$ txdev reviews
#4416 - IRCClient: Detect and handle lines that are too long
#4536 - Credentials materials are compared unsafely throughout Twisted
#4567 - Improve lore2sphinx buildbot results for `projects/core/development`
#4568 - Improve lore2sphinx buildbot results for `projects/core/howto`
(except ‘tutorial/’)
#4616 - trial documentation says --coverage requires python 2.3.3
#4617 - Make t.i.a._SocketCloser a new style class
#4623 - Missing interface IQueue
#4632 - ability to cascade canceling inlineCallbacks's deferred
#4641 - twisted.words.im.ircsupport.IRCProto sends USER command with
the wrong data

$ txdev reviews --branches-only
http://svn.twistedmatrix.com/bzr/Twisted/branches/handle-long-IRC-lines-4416
http://svn.twistedmatrix.com/bzr/Twisted/branches/password-comparison-4536-2
http://svn.twistedmatrix.com/bzr/Twisted/branches/improve-lore2sphinx-output-for-projects-core-development-4567
http://svn.twistedmatrix.com/bzr/Twisted/branches/lore2sphinx-projects-core-howto-4568
http://svn.twistedmatrix.com/bzr/Twisted/branches/remove-lineno-patch-4616
http://svn.twistedmatrix.com/bzr/Twisted/branches/newstyle-socketcloser-4617
http://svn.twistedmatrix.com/bzr/Twisted/branches/ircsupport-user-4641



From lvh at laurensvh.be  Wed Sep  8 18:12:56 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 9 Sep 2010 02:12:56 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
Message-ID: <AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>

Actually, I believe much of the confusion is cleared up. Apparently I
misunderstood what a Realm does. Oops!

The application in the original mail, which I will continue to talk about in
this one, is a token endpoint. I've been told an explanation of what that is
is in order. To start out: it is NOT the thing that actually serves
protected resources, that's a resource server, which is a different beast
entirely. The job of a token endpoint is to turn certain kinds of
credentials into an access token; the access token, in turn, can be used to
access protected resources. So basically, these credentials are about
already provided access grants, that haven't been turned into access tokens
yet. Examples of such credentials which can be turned in for access tokens:

    - authorization code: This represents an access grant from the end user.
Instead of receiving an access token when the grant was issued, you got this
code, which basically is a credential that says "This person is allowed to
access the protected resource, but we haven't given him a proper token to do
that yet". The token endpoint is for turning one of these into a token.
    - refresh token: in case your access token has been used up or expired,
one refresh token can be exchanged for one access token
    - assertion: this is basically just a pair of opaque strings (a type and
a value); it's used for tying OAuth in with existing systems. Hence, this is
deliberately vague.
    - user credentials: this is the classic username/password. It's a bit
silly to use this; the only advantage is that you can limit which servers
need access to these credentials.

The key thing to remember is: token endpoints let you trade in some
credentials that prove you're supposed to have access for a token that
actually *gives* you that access.

Since people asked for more detail as to which data exactly needs to be
passed to the Realm (yes, even now that I know what the Realm actually
does). This is basically all of the data in the token endpoint's
response. The response contains the following data, in JSON format:
(explanations of what each thing is in the following paragraphs)
    - the access token (an ascii string, mandatory)
    - the expiration time (optional)
    - the refresh token (another ascii string, similar to the access token,
optional)
    - scope (an ascii string consisting of a set of space-separated words,
optional)

Optional here does not really mean "at my option" but "occasionally
required", so it is necessary that all four can be passed to the IRealm at
the same time. Furthermore, it's impossible to use the Mind for some of
them, because ICredentialsCheckers never see the Mind, and all of that data
(access token, refresh token, expiration time, scope) are only ever visible
to the ICredentialsChecker.

Again, the access token is something you use to actually access a protected
resource. The refresh token is something you use to get a new token when
your old one expires or is used up. Defining the scope properly is hard,
it's deliberately vague in the spec as well; it's a set of strings that
determine what you can do with your shiny new access token. For example, for
Facebook, the scope might be "name friends likes" for a token that allows
someone to access your name, your list of friends and what you like, but not
your pictures, gender, date of birth. These values are not determined by the
spec, and you can just make some up for your service.

Also, to clear up a misunderstanding:
> (and furthermore, why is anybody responsible for "requesting the new
token" in the first place?  why do any new tokens ever need to be requested
on the service provider's side of things?)
Yes, sorry, that was a poorly chosen verb. I should have just said "creates
a new token"; I didn't, because typically token creation and storage happens
somewhere else in a centralized place (hence, this code *requests* it).


Does that help?
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100909/fce6624e/attachment.html>

From petshmidt at googlemail.com  Thu Sep  9 03:42:44 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 9 Sep 2010 11:42:44 +0200
Subject: [Twisted-Python] How to get original error message in failure object
Message-ID: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>

Hello,

if an error occurs in HTTP11ClientProtocol request method
(twisted.web._newclient) then error is stored in
RequestGenerationFailed Exception and wrapped in Failure object:


        def ebRequestWriting(err):
            if self._state == 'TRANSMITTING':
                self._state = 'GENERATION_FAILED'
                self.transport.loseConnection()
                 self._finishedRequest.errback(
                    Failure(RequestGenerationFailed([err])))
            else:
                log.err(err, "foo")

but if I print detailed traceback of failure in my code it doesn't
show all information it contains

Original Failure (err in function above):
[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
not be unicode

This is detailed traceback, where I don't see the message "Data must
not be unicode"

*--- Failure #7 (pickled) ---
Failure: twisted.web._newclient.RequestGenerationFailed:
[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
*--- End of Failure #7 ---
None


Is there a way to get original error message and where it was raised
in Twisted code?


Thanks a lot!



From exarkun at twistedmatrix.com  Thu Sep  9 06:33:19 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 09 Sep 2010 12:33:19 -0000
Subject: [Twisted-Python] How to get original error message in
	failure	object
In-Reply-To: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
References: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
Message-ID: <20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>

On 09:42 am, petshmidt at googlemail.com wrote:
>Hello,
>
>if an error occurs in HTTP11ClientProtocol request method
>(twisted.web._newclient) then error is stored in
>RequestGenerationFailed Exception and wrapped in Failure object:
>
>
>        def ebRequestWriting(err):
>            if self._state == 'TRANSMITTING':
>                self._state = 'GENERATION_FAILED'
>                self.transport.loseConnection()
>                 self._finishedRequest.errback(
>                    Failure(RequestGenerationFailed([err])))
>            else:
>                log.err(err, "foo")
>
>but if I print detailed traceback of failure in my code it doesn't
>show all information it contains
>
>Original Failure (err in function above):
>[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
>not be unicode
>
>This is detailed traceback, where I don't see the message "Data must
>not be unicode"
>
>*--- Failure #7 (pickled) ---
>Failure: twisted.web._newclient.RequestGenerationFailed:
>[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
>*--- End of Failure #7 ---
>None
>
>
>Is there a way to get original error message and where it was raised
>in Twisted code?

See the (documented) `reasons` attribute of `RequestGenerationFailed`.

Jean-Paul



From petshmidt at googlemail.com  Thu Sep  9 06:53:20 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 9 Sep 2010 14:53:20 +0200
Subject: [Twisted-Python] How to get original error message in failure
	object
In-Reply-To: <20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>
References: <AANLkTimh59sf9AHKawGQyke06rK=2c2YrgUYsAtfnkFO@mail.gmail.com>
	<20100909123319.2058.1594844063.divmod.xquotient.501@localhost.localdomain>
Message-ID: <AANLkTiktgs_5faN+QeAs+rtSF3=QOrKxu-476VMbh4mo@mail.gmail.com>

On Thu, Sep 9, 2010 at 2:33 PM,  <exarkun at twistedmatrix.com> wrote:
> On 09:42 am, petshmidt at googlemail.com wrote:
>>Hello,
>>
>>if an error occurs in HTTP11ClientProtocol request method
>>(twisted.web._newclient) then error is stored in
>>RequestGenerationFailed Exception and wrapped in Failure object:
>>
>>
>>        def ebRequestWriting(err):
>>            if self._state == 'TRANSMITTING':
>>                self._state = 'GENERATION_FAILED'
>>                self.transport.loseConnection()
>>                 self._finishedRequest.errback(
>>                    Failure(RequestGenerationFailed([err])))
>>            else:
>>                log.err(err, "foo")
>>
>>but if I print detailed traceback of failure in my code it doesn't
>>show all information it contains
>>
>>Original Failure (err in function above):
>>[Failure instance: Traceback: <type 'exceptions.TypeError'>: Data must
>>not be unicode
>>
>>This is detailed traceback, where I don't see the message "Data must
>>not be unicode"
>>
>>*--- Failure #7 (pickled) ---
>>Failure: twisted.web._newclient.RequestGenerationFailed:
>>[<twisted.python.failure.Failure <type 'exceptions.TypeError'>>]
>>*--- End of Failure #7 ---
>>None
>>
>>
>>Is there a way to get original error message and where it was raised
>>in Twisted code?
>
> See the (documented) `reasons` attribute of `RequestGenerationFailed`.
>

Thanks for hint! RequestGenerationFailed save errors in  `reasons`
attribute, but documentation
doesn't tell how to print reasons. I'm getting just failure object in
my errback.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From einar.twisted at norsk-esport.no  Thu Sep  9 14:27:57 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 9 Sep 2010 22:27:57 +0200
Subject: [Twisted-Python] How to hook onto or append functionality to a
 class (from another class)?
In-Reply-To: <64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
	<64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
Message-ID: <AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>

Hi Glyph, and thank you for your thorough and very helpful response. :)

On Wed, Sep 8, 2010 at 9:47 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> It sounds like this is a pretty trivial application of the Publish/Subscribe
> pattern (or perhaps the Observer) pattern.
(...)
>  Add one general-purpose
> "list of observers that want to be notified (when X happens)" argument.
>  Then when your getProcessOutput() finishes, just do 'for something in
> self.observers: something.youJustGotServerStatus(newServerStatus)'.
Yes! Perfect! That sounds like it's exactly what I need, thank you :)

>It
> usually makes sense to define an interface with a couple of interesting
> methods when you do this, so that you can have more methods.
Interfaces scare me, and I've been doing my best to avoid them in my
application. The primary reason being that I am the only developer, so
as long as I know what I'm doing I'll be alright. Although I'm not so
sure that I actually do...

> Please, please do not use t.p.hook.  I hope that we delete it one day.
Thanks for the advice. I'll stay away.

>> I hope this was somewhat comprehensible, and that there is an elegant
>> solution out there. :)
> Well, if my answer answers your question, then yes :).
It certainly does, and it is much appreciated. I'll just pop out on
Google for a few minutes to find some examples, and will get right
back to coding my app. Thanks again for taking the time to help a
novice out :)

Cheers,
Einar



From glyph at twistedmatrix.com  Thu Sep  9 18:04:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:04:20 -0400
Subject: [Twisted-Python] txdev: utility for working on Twisted
In-Reply-To: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>
References: <AANLkTinCLdXRbbNaUX==rHgqegqgQzz8-5wJTM9hq+fM@mail.gmail.com>
Message-ID: <EB7D9712-689D-4FFE-B7A7-DDDB0F03D20F@twistedmatrix.com>


On Sep 8, 2010, at 5:12 PM, Jonathan Lange wrote:

> I wrote a tool to help do Twisted development, especially with Bazaar.
> You can get the code with:
>  $ bzr branch lp:~jml/+junk/twisteddev

Rad.

Thanks for releasing this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100909/92a6906f/attachment.html>

From glyph at twistedmatrix.com  Thu Sep  9 18:34:48 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:34:48 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
Message-ID: <8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>


On Sep 8, 2010, at 8:12 PM, Laurens Van Houtven wrote:

> Actually, I believe much of the confusion is cleared up. Apparently I misunderstood what a Realm does. Oops!
> 
> The application in the original mail, which I will continue to talk about in this one, is a token endpoint. I've been told an explanation of what that is is in order. To start out: it is NOT the thing that actually serves protected resources, that's a resource server, which is a different beast entirely. The job of a token endpoint is to turn certain kinds of credentials into an access token; the access token, in turn, can be used to access protected resources. So basically, these credentials are about already provided access grants, that haven't been turned into access tokens yet. Examples of such credentials which can be turned in for access tokens:

(...)

> Does that help?
> Laurens

Somewhat, but it really casts the main issue into sharper focus:

for any given cred implementation, there are two key questions:

What is the avatar interface?
What is the associated mind interface?

If we're not talking about a system where the avatar interface (the one passed to 'login', the one that the realm must return something that gets implemented) is IResource, then that's the problem.  What is that interface that you're talking about?  Be very specific: what methods does it have and why?

It sounds like OAuth is very precisely implementing something that maps almost exactly onto the checker part of cred, but you're doing it by implementing a realm to allow applications to provide their own logic.  This might not be the wrong idea, but it needs to be spelled out very clearly.

As you describe it:

> token endpoints let you trade in some credentials that prove you're supposed to have access for a token that actually *gives* you that access

In cred-ese, that would be "checkers let you trade in some credentials that prove you're supposed to have access for an <avatar ID, which you give to a Realm> that actually *gives* you that access".  As far as the OAuth response is concerned, it's like a checker.  Looking at the individual parts, assuming that the avatar interface for the purposes of this discussion is IResource, it breaks down like this in my mind:

>     - the access token (an ascii string, mandatory)

Avatar ID.  (See, it's a str!)

>     - the expiration time (optional)

Implementation detail of the session.  Avatars are actually sessions, which expire: sometimes (as with POP) at the end of a connection, sometimes (as with nevow.guard's HTTP support) with a session timeout.

>     - the refresh token (another ascii string, similar to the access token, optional)

Implementation detail of the authentication protocol.  The client library and server library should be transparently refreshing this without telling either the client application code or server application code, right?

>     - scope (an ascii string consisting of a set of space-separated words, optional)


This part doesn't quite fit, but could be expressed in one of two ways: a modification to the avatar ID, or as some extra structure on the Mind that modifies what functionality the Realm bundles in to your avatar implementation (without changing the interface provided by that object, of course).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100909/15a808ff/attachment.html>

From glyph at twistedmatrix.com  Thu Sep  9 18:36:37 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Sep 2010 20:36:37 -0400
Subject: [Twisted-Python] How to hook onto or append functionality to a
	class (from another class)?
In-Reply-To: <AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>
References: <AANLkTi=LKK1Ue_yov=tey13rkkVEu3RTzn4WG6toYwyX@mail.gmail.com>
	<64C187CC-4259-4294-B437-B198607357D8@twistedmatrix.com>
	<AANLkTimwJXtqsZwvm2ig=AuKSmEySuGOUaepd5x6k71u@mail.gmail.com>
Message-ID: <170F3DC0-65ED-420D-8992-21457B7CEF81@twistedmatrix.com>


On Sep 9, 2010, at 4:27 PM, Einar S. Idsø wrote:

> Hi Glyph, and thank you for your thorough and very helpful response. :)
> 
> On Wed, Sep 8, 2010 at 9:47 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> It sounds like this is a pretty trivial application of the Publish/Subscribe
>> pattern (or perhaps the Observer) pattern.
> (...)
>> Add one general-purpose
>> "list of observers that want to be notified (when X happens)" argument.
>> Then when your getProcessOutput() finishes, just do 'for something in
>> self.observers: something.youJustGotServerStatus(newServerStatus)'.
> Yes! Perfect! That sounds like it's exactly what I need, thank you :)

Great, glad to help :).

>> It
>> usually makes sense to define an interface with a couple of interesting
>> methods when you do this, so that you can have more methods.
> Interfaces scare me, and I've been doing my best to avoid them in my
> application. The primary reason being that I am the only developer, so
> as long as I know what I'm doing I'll be alright. Although I'm not so
> sure that I actually do...

There are some cool implementation things you can do with interfaces, but they're a little obscure and you shouldn't worry about them.  It's most helpful to think of interfaces as just expanded / shared docstrings for things that are shared among many classes.

>> Please, please do not use t.p.hook.  I hope that we delete it one day.
> Thanks for the advice. I'll stay away.

Even greater.

>>> I hope this was somewhat comprehensible, and that there is an elegant
>>> solution out there. :)
>> Well, if my answer answers your question, then yes :).
> It certainly does, and it is much appreciated. I'll just pop out on
> Google for a few minutes to find some examples, and will get right
> back to coding my app. Thanks again for taking the time to help a
> novice out :)

It's always nice to have the help be appreciated.  Good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100909/d391f5bc/attachment.html>

From ypercube at gmail.com  Thu Sep  9 20:17:28 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 05:17:28 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
Message-ID: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>

I have a simple INSERT INTO statement sent to SQL-Server using pymssql
module.

I use the runOperation method to send the query and I get this strange
error. The data goes through OK and is written in the database but
SQL-Server tries to rollback.

Perhaps this is a pymssql problem. In the
http://code.google.com/p/pymssql/wiki/PymssqlExamples
page, they state:

import pymssql
conn = pymssql.connect(host='SQL01', user='user', password='password',
database='mydatabase')
cur = conn.cursor()
cur.execute('CREATE TABLE persons(id INT, name VARCHAR(100))')
cur.executemany("INSERT INTO persons VALUES(%d, %s)", \
    [ (1, 'John Doe'), (2, 'Jane Doe') ])
conn.commit()  # you must call commit() to persist your data if you
don't set autocommit to True


But how can I use the con.commit method with runOperation and runQuery that
I use in my application?

thank you,

Pandelis Theodosiou


Here is the error:

Traceback (most recent call last):
  File "/usr/lib/python2.6/threading.py", line 484, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/lib/python2.6/dist-packages/twisted/python/threadpool.py", line
210, in _worker
    result = context.call(ctx, function, *args, **kwargs)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/enterprise/adbapi.py", line
436, in _runInteraction
    conn.rollback()
  File "/usr/lib/python2.6/dist-packages/twisted/enterprise/adbapi.py", line
52, in rollback
    self._connection.rollback()
  File "/usr/lib/pymodules/python2.6/pymssql.py", line 496, in rollback
    raise OperationalError, "cannot roll back transaction: " + e[0]
pymssql.OperationalError: cannot roll back transaction: SQL Server message
3903, severity 16, state 1, line 1:
The ROLLBACK TRANSACTION request has no corresponding BEGIN TRANSACTION.
DB-Lib error message 3903, severity 16:
General SQL Server error: Check messages from the SQL Server
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/fcb20e06/attachment.html>

From jakamkon at gmail.com  Fri Sep 10 02:57:10 2010
From: jakamkon at gmail.com (=?ISO-8859-2?Q?Kuba_Ko=F1czyk?=)
Date: Fri, 10 Sep 2010 10:57:10 +0200
Subject: [Twisted-Python] conchoctopus: APIs for working with multiple SSH
	servers
Message-ID: <AANLkTinQOhOvwbtL5iUxzo-B_tv7NGE2vUSU3wGihFp0@mail.gmail.com>

Hi Everyone,

Conchoctopus was started as a library that glue together various parts
of twisted.conch
so that it can be easily used in everyday work with SSH
servers.Currently there are two APIs
you can use.

First one takes care of most low level details of t.c such as
authentication and error handling
and provides ready to use classes that you can use in your twisted
code.I would like to make
it as usable for other twisted users as possible.

There's also high level API where all deferred management machinery is hidden.
User have to create a python module with a Task class that specifies
'what to do' using
inlineCallbacks and Config class with a list of servers to work
on.This modules can then
be run with an simple console utility.

Both APIs are documented and armed with test suite.Please play around
and let me know what
can be improved or added.

Code is available from pypi:
http://pypi.python.org/pypi/conchoctopus/

Thanks,
Kuba



From general at vultaire.net  Fri Sep 10 04:41:37 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 10 Sep 2010 19:41:37 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <4C8A0B61.5050202@vultaire.net>

On 9/10/2010 11:17 AM, Pantelis Theodosiou wrote:
> I have a simple INSERT INTO statement sent to SQL-Server using pymssql
> module.
>
> I use the runOperation method to send the query and I get this strange
> error. The data goes through OK and is written in the database but
> SQL-Server tries to rollback.

I don't see any of the Twisted code you're trying; I only see a 
traceback and it doesn't really give enough information.

Any chance you could give us a short, self-contained example which 
demonstrates the problem?  (http://sscce.org/)

- Paul Goins



From general at vultaire.net  Fri Sep 10 04:49:10 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 10 Sep 2010 19:49:10 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <4C8A0D26.8090007@vultaire.net>

Sorry, one more thing.

 > But how can I use the con.commit method with runOperation and runQuery
 > that I use in my application?

I'm pretty sure ConnectionPools should take care of the commit for you, 
provided there was no error.  If there was an error, then it attempts a 
rollback.

This should be true for runQuery, runOperation and runInteraction.  I 
think the one exception is runWithConnection which wraps and gives 
access to a (lightly wrapped) connection object, but I think most people 
don't really need this.

Hope this helps.  Again, please give an example of the problem if you can.

- Paul Goins



From jaroslaw.fedewicz at gmail.com  Fri Sep 10 05:51:14 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Fri, 10 Sep 2010 14:51:14 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
Message-ID: <53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>


On Sep 10, 2010, at 5:17 AM, Pantelis Theodosiou wrote:

> I have a simple INSERT INTO statement sent to SQL-Server using pymssql module.
> 
> I use the runOperation method to send the query and I get this strange error. The data goes through OK and is written in the database but SQL-Server tries to rollback.
> 
> Perhaps this is a pymssql problem. In the 
> http://code.google.com/p/pymssql/wiki/PymssqlExamples 
> page, they state:
> 
> import pymssql
> conn = pymssql.connect(host='SQL01', user='user', password='password', database='mydatabase')
> 
> cur = conn.cursor()
> cur.execute('CREATE TABLE persons(id INT, name VARCHAR(100))')
> 
> cur.executemany("INSERT INTO persons VALUES(%d, %s)", \
> 
>     [ (1, 'John Doe'), (2, 'Jane Doe') ])
> 
> conn.commit()  # you must call commit() to persist your data if you don't set autocommit to True
> 
> 
> But how can I use the con.commit method with runOperation and runQuery that I use in my application?
> 
> thank you,
> 
> Pandelis Theodosiou


I have no experience with MS SQL, only with PostgreSQL via psycopg2, but the idea is:

you want to execute many statements, probably in a blocking fashion: runInteraction()
you want to execute just one statement: runQuery()/runOperation()

AFAIK the latter one will do a commit for you if it is needed.

Anyway, for PostgreSQL I can specify isolation level I need.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/a0ffbeec/attachment.html>

From ypercube at gmail.com  Fri Sep 10 09:54:34 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 18:54:34 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
Message-ID: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>

I have no experience with MS SQL, only with PostgreSQL via psycopg2, but the
> idea is:
>
> you want to execute many statements, probably in a blocking fashion:
> runInteraction()
> you want to execute just one statement: runQuery()/runOperation()
>
> AFAIK the latter one will do a commit for you if it is needed.
>
> Anyway, for PostgreSQL I can specify isolation level I need.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

thnx to all. I used runOperation with the INSERTs and it was solved (or i
think that was the cause).

The part of code with the problem was:

-----------------
from twisted.enterprise import adbapi
import pymssql


class DBAccess:

    def __init__(self):
        # SQL-Server
        myhost = "64.x.x.x:4000"
        mydatabase = "db"
        myuser = "user"
        mypassword = "password"

        try:
            self.dbpool = adbapi.ConnectionPool("pymssql"
                                    , host=myhost
                                    , user=myuser
                                    , password=mypassword
                                    , database=mydatabase
                                    , cp_noisy=False)
            print("db connection pool created")
        except Exception as e:
            print("error starting the ConnectionPool")
            print(e)

    def insertDATA(self
            , serialNumber
            , customerAccount
            , dateAndTime
            , camcount
            , fpv
            , reff
            , restOfFrame
            ):
        sql = ''.join(
            [
             "INSERT INTO fts_data VALUES ("
                    ,  "'" , serialNumber , "'"
            , "," , "'" , customerAccount , "'"
            , "," , "'" , dateAndTime , "'"
            , "," , camcount
            , "," , fpv
            , "," , "'" , reff , "'"
            , "," , "'" , restOfFrame , "'"
            , ") "
            ] )
        #print(sql)
        try:
            deferred = self.dbpool.runOperation(sql)
            #print("DATA sent")
        except Exception as e:
            print("error in insertDATA")
            print(e)
            return
        return deferred
------------------

Anyway, I'm now stuck at other levels, and I'm kind of out of ideas and the
customer wants (or has to) finish the whole project in a  very, very short
notice. Like yesterday. And my experience in Python and Twisted is not at
the level to solve problems and fix bugs quickly.

Since the program is written using Twisted, if anyone likes to step over,
contact me directly and i'll provide details.

Pandelis Theodosiou
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/d3e5035f/attachment.html>

From general at vultaire.net  Fri Sep 10 10:39:13 2010
From: general at vultaire.net (Paul Goins)
Date: Sat, 11 Sep 2010 01:39:13 +0900
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
Message-ID: <4C8A5F31.8020305@vultaire.net>

Thanks for the code example.

I can't offer to take this work over, but maybe I can make a comment. 
There's one part that stands out to me.

>          try:
>              deferred = self.dbpool.runOperation(sql)
>              #print("DATA sent")
>          except Exception as e:
>              print("error in insertDATA")
>              print(e)
>              return
>          return deferred

It seems like maybe you have a misunderstanding about how Deferreds 
generally work in Twisted.  (Been there myself.)  Basically, the above 
try/except block won't work to catch errors from most Deferreds... well, 
at least not without some extra magic.

You really should read the Deferred section of the Twisted documentation 
to understand how errors are handled.

Docs are here: 
http://twistedmatrix.com/documents/current/core/howto/defer.html

----

Basically, to "fix" the above code's error catching, you have two choices:

1. You can add an errback to the deferred.  This is the "standard" 
Twisted way, and would replace the try/except block entirely.

2. You can use the @inlineCallbacks decorator (from 
twisted.internet.defer), and yield on the Deferred.  This is easier, and 
it allows try/except blocks, but there's some gotchas.

inlineCallbacks is what I used when I was learning Twisted, and you may 
want to try that for now.  But please understand that it hides details 
about how Deferreds and callbacks really work.  When you find time, read 
the Deferred docs.

----

Best of luck,

- Paul Goins



From d_belkhiter at yahoo.fr  Fri Sep 10 10:55:01 2010
From: d_belkhiter at yahoo.fr (belk Dj)
Date: Fri, 10 Sep 2010 16:55:01 +0000 (GMT)
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
Message-ID: <228404.72208.qm@web24406.mail.ird.yahoo.com>

I need to communicate with servers over tcp and also communicate with other servers over udp.
It seems not possible to launch two reactor objects one for tcp and one for udp.
The code after a reactor.run is not called.
How can this can be solved ?

One more thing that deals with timer.
When i send a message to a server if after some time i don't get an acknowledge i re send the message. 
And that x times.
To do that i use Timer. When i send the message i start the timer if the acknowledge comes before the timeout i cancel the timer.
If i don't receive this acknwledge in time i cancel the timer i re send the previous message and i re start the timer.

In this two cases the program fails with the message the timer is still started.
What is the issue ? 

Regards


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/2b939a7f/attachment.html>

From lvh at laurensvh.be  Fri Sep 10 11:01:41 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 10 Sep 2010 19:01:41 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
Message-ID: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>

I'll give a very practical example of an example request + response, because
I'm not entirely sure I communicated that properly. The code we're
discussing is part of a TokenEndpoint, which is an IResource. Something (a
client, in OAuth terminology) makes a request that looks like this:

---
POST /token HTTP/1.1
Host: server.example.com
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id=s6BhdRkqt3&client_secret=47HDu8s&username=johndoe&password=A3ddj3w
---

And hopefully the code we're discussing answers with a request that looks
like this:

---
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
"access_token":"SlAV32hkKG",
"expires_in":3600,
 "refresh_token":"8xLOxBtZp8"
"scope": "tummies cookies parrots"
}
---

Where, as mentioned before, everything besides "access_token" is not always
required (but it must be possible to set them, because occasionally they are
required).

On Fri, Sep 10, 2010 at 2:34 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> for any given cred implementation, there are two key questions:
>
>    1. What is the avatar interface?
>    2. What is the associated mind interface?
>
> If we're not talking about a system where the avatar interface (the one
> passed to 'login', the one that the realm must return something that gets
> implemented) is IResource, then that's the problem.  What *is* that
> interface that you're talking about?  Be very specific: what methods does it
> have and why?
>

Okay, to be specific: I believe the appropriate interface is IResource. This
is in line with t.web's general way of interacting with cred: you give me
credentials, I give you a protected IResource.


> It sounds like OAuth is very precisely implementing something that maps
> almost exactly onto the *checker* part of cred, but you're doing it by
> implementing a realm to allow applications to provide their own logic.  This
> might not be the wrong idea, but it needs to be spelled out very clearly.
>

Doing everything in the checker probably might make more sense. The reason I
originally thought to do this in the IRealm is that I figured credentials
checkers should just check credentials, and creating a new credential (the
access token) wasn't part of ICredentialsChecker's job (more like IRealm's
job). Apparently I was mistaken.


> As you describe it:
>
> token endpoints let you trade in some credentials that prove you're
> supposed to have access for a token that actually *gives* you that access
>
> In cred-ese, that would be "checkers let you trade in some credentials that
> prove you're supposed to have access for an <avatar ID, which you give to a
> Realm> that actually *gives* you that access".  As far as the OAuth response
> is concerned, it's like a checker.  Looking at the individual parts,
> assuming that the avatar interface for the purposes of this discussion is
> IResource, it breaks down like this in my mind:
>
>     - the access token (an ascii string, mandatory)
>
> Avatar ID.  (See, it's a str!)
>

Heh, okay; as long as there's a plausible way to get the other important
information (see rest of email) into the HTTP response, I'll believe you.

>     - the expiration time (optional)
>
> Implementation detail of the session.  Avatars are actually sessions, which
> expire: sometimes (as with POP) at the end of a connection, sometimes (as
> with nevow.guard's HTTP support) with a session timeout.
>

Right, but:
a) The avatar needs to know about this timeout, since the timeout
information needs to be able to make it into the HTTP response.
b) The expiration time is only known to the thing that creates the access
token (obviously). From the previous discussion, this is apparently
ICredentialsChecker.

c) (From (a, b)) The ICredentialsChecker needs to be able to communicate the
expiration to the avatar.
d) The ICredentialsChecker and IRealm can only communicate through the
avatarId.

Conclusion (from c,d): The expiration time needs to be in the avatarId?

>     - the refresh token (another ascii string, similar to the access token,
> optional)
>
>
> Implementation detail of the authentication protocol.  The client library
> and server library should be transparently refreshing this without telling
> either the client application code or server application code, right?
>

Sure, but we're still writing library code here.

If the avatar interface isn't actually IResource, but a new interface
IAccessToken, getting the refresh token later might be feasible. (It should
be a different interface, because in order to create a refresh token outside
of this entire cred cycle, I need to know about the thing it's refreshing --
so, the information in the response needs to be easily accessible and not
just an opaque IResource).

I agree entirely that clever client library code would abstract this mess
away from application code. However, right now this code still needs to
somehow be able to eventually produce HTTP responses that don't abstract
anything yet and just contain all the appropriate data, because that's just
what the OAuth spec says it needs to be able to do. There isn't any real
application code in the token endpoint; they're pretty similar for all OAuth
setups, and customization would typically happen through implementing the
appropriate ICredentialsChecker.

    - scope (an ascii string consisting of a set of space-separated words,
> optional)
>
>
> This part doesn't quite fit, but could be expressed in one of two ways: a
> modification to the avatar ID, or as some extra structure on the Mind that
> modifies what functionality the Realm bundles in to your avatar
> implementation (without changing the interface provided by that object, of
> course).
>

Unfortunately I don't believe this can be done through the mind. Again
working under the previous assumption that ICredentialsChecker and not the
IRealm is responsible for creating the access token, and scope is known to
the thing that makes the access token, the ICredentialsChecker knows about
the scope. Unfortunately the only way to pass stuff  between the
ICredentialsChecker and the IRealm is the avatar ID, so you don't have a
choice.


thanks for your infinite patience,
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/76080471/attachment.html>

From ypercube at gmail.com  Fri Sep 10 13:09:17 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 22:09:17 +0300
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
In-Reply-To: <228404.72208.qm@web24406.mail.ird.yahoo.com>
References: <228404.72208.qm@web24406.mail.ird.yahoo.com>
Message-ID: <AANLkTikcuEW-pGSVPy+fs9A2crKmF5HBBrXOymif7N+Z@mail.gmail.com>

On Fri, Sep 10, 2010 at 7:55 PM, belk Dj <d_belkhiter at yahoo.fr> wrote:

> I need to communicate with servers over tcp and also communicate with other
> servers over udp.
> It seems not possible to launch two reactor objects one for tcp and one for
> udp.
> The code after a reactor.run is not called.
> How can this can be solved ?
>
>
I'm not an expert in any way, but I've made something similar using 2
factories.

I think that it is also possible with one factory that uses 2 protocols.

The code after reactor.run() will be invoked only after the reactor stops.
So, you can have 2 factories, each with a different protocol (1 tcp, 1 udp)
and then start the reactor.

Pandelis


> One more thing that deals with timer.
> When i send a message to a server if after some time i don't get an
> acknowledge i re send the message.
> And that x times.
> To do that i use Timer. When i send the message i start the timer if the
> acknowledge comes before the timeout i cancel the timer.
> If i don't receive this acknwledge in time i cancel the timer i re send the
> previous message and i re start the timer.
>
> In this two cases the program fails with the message the timer is still
> started.
> What is the issue ?
>
> Regards
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/7848c316/attachment.html>

From ypercube at gmail.com  Fri Sep 10 13:15:17 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 10 Sep 2010 22:15:17 +0300
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <4C8A5F31.8020305@vultaire.net>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
	<4C8A5F31.8020305@vultaire.net>
Message-ID: <AANLkTim9uKsww-xpWCWjOvpdohD-SXad=mrTxA1X_SNy@mail.gmail.com>

On Fri, Sep 10, 2010 at 7:39 PM, Paul Goins <general at vultaire.net> wrote:

> Thanks for the code example.
>
> I can't offer to take this work over, but maybe I can make a comment.
> There's one part that stands out to me.
>
> >          try:
> >              deferred = self.dbpool.runOperation(sql)
> >              #print("DATA sent")
> >          except Exception as e:
> >              print("error in insertDATA")
> >              print(e)
> >              return
> >          return deferred
>
> It seems like maybe you have a misunderstanding about how Deferreds
> generally work in Twisted.  (Been there myself.)  Basically, the above
> try/except block won't work to catch errors from most Deferreds... well,
> at least not without some extra magic.
>

That is correct. I have only basic understanding of Deferreds and none about
the Errbacks. I realized from various errors that this exception was raised
when errors appeared in other parts of the code.

>
> You really should read the Deferred section of the Twisted documentation
> to understand how errors are handled.
>
> Docs are here:
> http://twistedmatrix.com/documents/current/core/howto/defer.html
>
> ----
>
> Basically, to "fix" the above code's error catching, you have two choices:
>
> 1. You can add an errback to the deferred.  This is the "standard"
> Twisted way, and would replace the try/except block entirely.
>
> 2. You can use the @inlineCallbacks decorator (from
> twisted.internet.defer), and yield on the Deferred.  This is easier, and
> it allows try/except blocks, but there's some gotchas.
>
> inlineCallbacks is what I used when I was learning Twisted, and you may
> want to try that for now.  But please understand that it hides details
> about how Deferreds and callbacks really work.  When you find time, read
> the Deferred docs.
>
> ----
>
> Best of luck,
>
> - Paul Goins
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/7f7f69b2/attachment.html>

From exarkun at twistedmatrix.com  Fri Sep 10 14:29:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 10 Sep 2010 20:29:28 -0000
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
Message-ID: <20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>

On 05:01 pm, lvh at laurensvh.be wrote:
>
>Right, but:
>a) The avatar needs to know about this timeout, since the timeout
>information needs to be able to make it into the HTTP response.
>b) The expiration time is only known to the thing that creates the 
>access
>token (obviously). From the previous discussion, this is apparently
>ICredentialsChecker.

Is the timeout authenticated?

Jean-Paul



From lvh at laurensvh.be  Fri Sep 10 14:50:20 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 10 Sep 2010 22:50:20 +0200
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
	<20100910202928.2058.180499221.divmod.xquotient.504@localhost.localdomain>
Message-ID: <AANLkTi=TXbuE_tGwHiKvMPORB067irNMyR-n751DCFR+@mail.gmail.com>

On Fri, Sep 10, 2010 at 10:29 PM, <exarkun at twistedmatrix.com> wrote:
>
> Is the timeout authenticated?
>
> Jean-Paul
>
>
In the sense that it's not a disaster if you lie about it -- no.

Timeouts are generally optional and really just a friendly hint to the
client receiving the token to not expect it to work after X time.

Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/1952c9c1/attachment.html>

From lance.barisdale at gmail.com  Fri Sep 10 15:32:54 2010
From: lance.barisdale at gmail.com (=?utf-8?B?bGFuY2UuYmFyaXNkYWxlQGdtYWlsLmNvbQ==?=)
Date: Fri, 10 Sep 2010 14:32:54 -0700
Subject: [Twisted-Python]
	=?utf-8?q?Twisted-Python_Digest=2C_Vol_78=2C_Iss?= =?utf-8?q?ue_15?=
Message-ID: <4c8aa3f9.4f7ddc0a.3511.ffff8012@mx.google.com>



Sent from my HTC on the Now Network from Sprint!

----- Reply message -----
From: twisted-python-request at twistedmatrix.com
Date: Fri, Sep 10, 2010 12:09 pm
Subject: Twisted-Python Digest, Vol 78, Issue 15
To: <twisted-python at twistedmatrix.com>

Send Twisted-Python mailing list submissions to
	twisted-python at twistedmatrix.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
or, via email, send a message with subject or body 'help' to
	twisted-python-request at twistedmatrix.com

You can reach the person managing the list at
	twisted-python-owner at twistedmatrix.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Twisted-Python digest..."


Today's Topics:

   1. Re: Strange error: SQL-Server tries to rollback (Paul Goins)
   2. reactor for both udp and tcp/ timer issue (belk Dj)
   3. Re: twisted cred: why does avatarId need to be a	str?
      (Laurens Van Houtven)
   4. Re: reactor for both udp and tcp/ timer issue
      (Pantelis Theodosiou)


----------------------------------------------------------------------

Message: 1
Date: Sat, 11 Sep 2010 01:39:13 +0900
From: Paul Goins <general at vultaire.net>
Subject: Re: [Twisted-Python] Strange error: SQL-Server tries to
	rollback
To: twisted-python at twistedmatrix.com
Message-ID: <4C8A5F31.8020305 at vultaire.net>
Content-Type: text/plain; charset=UTF-8; format=flowed

Thanks for the code example.

I can't offer to take this work over, but maybe I can make a comment. 
There's one part that stands out to me.

>          try:
>              deferred = self.dbpool.runOperation(sql)
>              #print("DATA sent")
>          except Exception as e:
>              print("error in insertDATA")
>              print(e)
>              return
>          return deferred

It seems like maybe you have a misunderstanding about how Deferreds 
generally work in Twisted.  (Been there myself.)  Basically, the above 
try/except block won't work to catch errors from most Deferreds... well, 
at least not without some extra magic.

You really should read the Deferred section of the Twisted documentation 
to understand how errors are handled.

Docs are here: 
http://twistedmatrix.com/documents/current/core/howto/defer.html

----

Basically, to "fix" the above code's error catching, you have two choices:

1. You can add an errback to the deferred.  This is the "standard" 
Twisted way, and would replace the try/except block entirely.

2. You can use the @inlineCallbacks decorator (from 
twisted.internet.defer), and yield on the Deferred.  This is easier, and 
it allows try/except blocks, but there's some gotchas.

inlineCallbacks is what I used when I was learning Twisted, and you may 
want to try that for now.  But please understand that it hides details 
about how Deferreds and callbacks really work.  When you find time, read 
the Deferred docs.

----

Best of luck,

- Paul Goins



------------------------------

Message: 2
Date: Fri, 10 Sep 2010 16:55:01 +0000 (GMT)
From: belk Dj <d_belkhiter at yahoo.fr>
Subject: [Twisted-Python] reactor for both udp and tcp/ timer issue
To: twisted-python at twistedmatrix.com
Message-ID: <228404.72208.qm at web24406.mail.ird.yahoo.com>
Content-Type: text/plain; charset="utf-8"

I need to communicate with servers over tcp and also communicate with other servers over udp.
It seems not possible to launch two reactor objects one for tcp and one for udp.
The code after a reactor.run is not called.
How can this can be solved ?

One more thing that deals with timer.
When i send a message to a server if after some time i don't get an acknowledge i re send the message. 
And that x times.
To do that i use Timer. When i send the message i start the timer if the acknowledge comes before the timeout i cancel the timer.
If i don't receive this acknwledge in time i cancel the timer i re send the previous message and i re start the timer.

In this two cases the program fails with the message the timer is still started.
What is the issue ? 

Regards


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/2b939a7f/attachment-0001.htm 

------------------------------

Message: 3
Date: Fri, 10 Sep 2010 19:01:41 +0200
From: Laurens Van Houtven <lvh at laurensvh.be>
Subject: Re: [Twisted-Python] twisted cred: why does avatarId need to
	be a	str?
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3 at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

I'll give a very practical example of an example request + response, because
I'm not entirely sure I communicated that properly. The code we're
discussing is part of a TokenEndpoint, which is an IResource. Something (a
client, in OAuth terminology) makes a request that looks like this:

---
POST /token HTTP/1.1
Host: server.example.com
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id=s6BhdRkqt3&client_secret=47HDu8s&username=johndoe&password=A3ddj3w
---

And hopefully the code we're discussing answers with a request that looks
like this:

---
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
"access_token":"SlAV32hkKG",
"expires_in":3600,
 "refresh_token":"8xLOxBtZp8"
"scope": "tummies cookies parrots"
}
---

Where, as mentioned before, everything besides "access_token" is not always
required (but it must be possible to set them, because occasionally they are
required).

On Fri, Sep 10, 2010 at 2:34 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> for any given cred implementation, there are two key questions:
>
>    1. What is the avatar interface?
>    2. What is the associated mind interface?
>
> If we're not talking about a system where the avatar interface (the one
> passed to 'login', the one that the realm must return something that gets
> implemented) is IResource, then that's the problem.  What *is* that
> interface that you're talking about?  Be very specific: what methods does it
> have and why?
>

Okay, to be specific: I believe the appropriate interface is IResource. This
is in line with t.web's general way of interacting with cred: you give me
credentials, I give you a protected IResource.


> It sounds like OAuth is very precisely implementing something that maps
> almost exactly onto the *checker* part of cred, but you're doing it by
> implementing a realm to allow applications to provide their own logic.  This
> might not be the wrong idea, but it needs to be spelled out very clearly.
>

Doing everything in the checker probably might make more sense. The reason I
originally thought to do this in the IRealm is that I figured credentials
checkers should just check credentials, and creating a new credential (the
access token) wasn't part of ICredentialsChecker's job (more like IRealm's
job). Apparently I was mistaken.


> As you describe it:
>
> token endpoints let you trade in some credentials that prove you're
> supposed to have access for a token that actually *gives* you that access
>
> In cred-ese, that would be "checkers let you trade in some credentials that
> prove you're supposed to have access for an <avatar ID, which you give to a
> Realm> that actually *gives* you that access".  As far as the OAuth response
> is concerned, it's like a checker.  Looking at the individual parts,
> assuming that the avatar interface for the purposes of this discussion is
> IResource, it breaks down like this in my mind:
>
>     - the access token (an ascii string, mandatory)
>
> Avatar ID.  (See, it's a str!)
>

Heh, okay; as long as there's a plausible way to get the other important
information (see rest of email) into the HTTP response, I'll believe you.

>     - the expiration time (optional)
>
> Implementation detail of the session.  Avatars are actually sessions, which
> expire: sometimes (as with POP) at the end of a connection, sometimes (as
> with nevow.guard's HTTP support) with a session timeout.
>

Right, but:
a) The avatar needs to know about this timeout, since the timeout
information needs to be able to make it into the HTTP response.
b) The expiration time is only known to the thing that creates the access
token (obviously). From the previous discussion, this is apparently
ICredentialsChecker.

c) (From (a, b)) The ICredentialsChecker needs to be able to communicate the
expiration to the avatar.
d) The ICredentialsChecker and IRealm can only communicate through the
avatarId.

Conclusion (from c,d): The expiration time needs to be in the avatarId?

>     - the refresh token (another ascii string, similar to the access token,
> optional)
>
>
> Implementation detail of the authentication protocol.  The client library
> and server library should be transparently refreshing this without telling
> either the client application code or server application code, right?
>

Sure, but we're still writing library code here.

If the avatar interface isn't actually IResource, but a new interface
IAccessToken, getting the refresh token later might be feasible. (It should
be a different interface, because in order to create a refresh token outside
of this entire cred cycle, I need to know about the thing it's refreshing --
so, the information in the response needs to be easily accessible and not
just an opaque IResource).

I agree entirely that clever client library code would abstract this mess
away from application code. However, right now this code still needs to
somehow be able to eventually produce HTTP responses that don't abstract
anything yet and just contain all the appropriate data, because that's just
what the OAuth spec says it needs to be able to do. There isn't any real
application code in the token endpoint; they're pretty similar for all OAuth
setups, and customization would typically happen through implementing the
appropriate ICredentialsChecker.

    - scope (an ascii string consisting of a set of space-separated words,
> optional)
>
>
> This part doesn't quite fit, but could be expressed in one of two ways: a
> modification to the avatar ID, or as some extra structure on the Mind that
> modifies what functionality the Realm bundles in to your avatar
> implementation (without changing the interface provided by that object, of
> course).
>

Unfortunately I don't believe this can be done through the mind. Again
working under the previous assumption that ICredentialsChecker and not the
IRealm is responsible for creating the access token, and scope is known to
the thing that makes the access token, the ICredentialsChecker knows about
the scope. Unfortunately the only way to pass stuff  between the
ICredentialsChecker and the IRealm is the avatar ID, so you don't have a
choice.


thanks for your infinite patience,
Laurens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/76080471/attachment-0001.htm 

------------------------------

Message: 4
Date: Fri, 10 Sep 2010 22:09:17 +0300
From: Pantelis Theodosiou <ypercube at gmail.com>
Subject: Re: [Twisted-Python] reactor for both udp and tcp/ timer
	issue
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<AANLkTikcuEW-pGSVPy+fs9A2crKmF5HBBrXOymif7N+Z at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

On Fri, Sep 10, 2010 at 7:55 PM, belk Dj <d_belkhiter at yahoo.fr> wrote:

> I need to communicate with servers over tcp and also communicate with other
> servers over udp.
> It seems not possible to launch two reactor objects one for tcp and one for
> udp.
> The code after a reactor.run is not called.
> How can this can be solved ?
>
>
I'm not an expert in any way, but I've made something similar using 2
factories.

I think that it is also possible with one factory that uses 2 protocols.

The code after reactor.run() will be invoked only after the reactor stops.
So, you can have 2 factories, each with a different protocol (1 tcp, 1 udp)
and then start the reactor.

Pandelis


> One more thing that deals with timer.
> When i send a message to a server if after some time i don't get an
> acknowledge i re send the message.
> And that x times.
> To do that i use Timer. When i send the message i start the timer if the
> acknowledge comes before the timeout i cancel the timer.
> If i don't receive this acknwledge in time i cancel the timer i re send the
> previous message and i re start the timer.
>
> In this two cases the program fails with the message the timer is still
> started.
> What is the issue ?
>
> Regards
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100910/7848c316/attachment.htm 

------------------------------

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


End of Twisted-Python Digest, Vol 78, Issue 15
**********************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100910/ec484e26/attachment.html>

From screwtape at froup.com  Fri Sep 10 19:21:14 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 11 Sep 2010 11:21:14 +1000
Subject: [Twisted-Python] Strange error: SQL-Server tries to rollback
In-Reply-To: <AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
References: <AANLkTikyH7CKtYnkosR8x035Dupd5-kdc37R7RgFxaiC@mail.gmail.com>
	<53EC192B-E1E3-475B-B6BB-30AEF71753F6@gmail.com>
	<AANLkTikT8jRpBNBUdEGPJGDOZmMp-_d6dNZKXvp-6S2J@mail.gmail.com>
Message-ID: <20100911012114.GM18053@boombah.thristian.org>

On Fri, Sep 10, 2010 at 06:54:34PM +0300, Pantelis Theodosiou wrote:
>         sql = ''.join(
>             [
>              "INSERT INTO fts_data VALUES ("
>                     ,  "'" , serialNumber , "'"
>             , "," , "'" , customerAccount , "'"
>             , "," , "'" , dateAndTime , "'"
>             , "," , camcount
>             , "," , fpv
>             , "," , "'" , reff , "'"
>             , "," , "'" , restOfFrame , "'"
>             , ") "
>             ] )

This is unrelated to your Twisted problem, but *please* tell me you are
not building SQL like this in production code.

If you need a reminder, the best possible way to do this in Python[1]
is:

    sqlPattern = """
	INSERT INTO fts_data VALUES (
	    %s, %s, %s, %s, %s, %s, %s
	);
	"""

    # if you're using a DB-API module directly:
    cursor.execute(sqlPattern, [serialNumber, customerAccount,
	    dateAndTime, camcount, fpv, reff, restOfFrame])

    # if you're using ADBAPI:
    deferred = pool.runOperation(sqlPattern, [serialNumber,
	    customerAccount, dateAndTime, camcount, fpv, reff,
	    restOfFrame])

Note that there's no "%" formatting operator between sqlPattern and the
list of values to be substituted in; the substitution is done with all
the proper quoting and escaping, not with Python's naïve formatting
operator.

Apologies if you already knew this, but apart from correctness it's one
of the few security issues where doing things the safe way is actually
easier than doing it the unsafe way - for a start, the SQL is all
together in one string. :)

[1]: The examples here use what DB-API calls the "format" quoting
style. Not all DB-API modules use it, but pymssql and psycopg2 do.



From therve at free.fr  Sat Sep 11 17:18:21 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Sep 2010 19:18:21 -0400
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
Message-ID: <1284247101.2007.1.camel@localhost>

It's this time of the year again! From the dangerous and intrepid land
of Montréal, Canada, I have the pleasure to announce the first 10.2.0
pre-release.

Tarballs for Twisted 10.2.0pre1 are now available at:
  http://people.canonical.com/~therve/Twisted/10.2.0pre1/


Highlights include:

 * A new implementation of the Deferred callbacks firing, which now
handles chains iteratively instead of recursively, and should prevent
recursion errors.

 * Deferred.setTimeout has finally been removed.

And the usual load of bug fixes. For more information, see the NEWS file.


Please download the tarballs and test them as much as possible. I
intend to do a final release within the next 2 weeks, if I didn't die
by ingestion of poutine.

Thanks,

Thomas




From therve at free.fr  Sat Sep 11 17:58:38 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Sep 2010 19:58:38 -0400
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <1284249518.2007.2.camel@localhost>

Of the subject should say 10.2.0pre1, I hope you translated.

-- 
Thomas




From exarkun at twistedmatrix.com  Sat Sep 11 22:05:52 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Sep 2010 04:05:52 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1284264352.76.482839843@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100912/a66a278f/attachment.html>

From glyph at twistedmatrix.com  Sun Sep 12 00:04:39 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Sep 2010 02:04:39 -0400
Subject: [Twisted-Python] twisted cred: why does avatarId need to be a
	str?
In-Reply-To: <AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
References: <AANLkTinOqOpd9zpKjZ0-og-f2V2kLD5xE-gKHXrH6GjA@mail.gmail.com>
	<DE66EE93-7281-405D-A769-979A98ABFA4B@twistedmatrix.com>
	<AANLkTin0ndkHUa4NkU7=n4Vj3XNZueEV3gU_KX63Wd-D@mail.gmail.com>
	<8217BC64-88A8-4839-A611-244C25316A14@twistedmatrix.com>
	<AANLkTimugXx6Fp588+MPyGc8Ws31S316W8Mbg=i9dQ-3@mail.gmail.com>
Message-ID: <A2332B39-D145-493D-B8BD-D14527A21EA9@twistedmatrix.com>


On Sep 10, 2010, at 1:01 PM, Laurens Van Houtven wrote:


> Okay, to be specific: I believe the appropriate interface is IResource. This is in line with t.web's general way of interacting with cred: you give me credentials, I give you a protected IResource.

This doesn't quite make sense to me.

Mostly, I don't understand what the moving pieces are here.  If this is all to implement a "token endpoint" which doesn't "actually serve protected resources", then what is the IResource being returned by the realm actually *doing*?  If it is not, itself, a "protected resource", then isn't the amount of stuff that its IResource can do severely restricted (i.e. restricted to doing a few OAuth-specific HTTP things) and therefore actually an avatar of a completely different, OAuth-specific interface, which just happens to be wrapped in an IResource by the OAuth implementation for the benefit of formatting those OAuth-specific things over an HTTP channel?

Based on what you've said, I would expect the avatar interface to be 'IToken', since the point of this authentication is to 'generate tokens'.

> It sounds like OAuth is very precisely implementing something that maps almost exactly onto the checker part of cred, but you're doing it by implementing a realm to allow applications to provide their own logic.  This might not be the wrong idea, but it needs to be spelled out very clearly.
> 
> Doing everything in the checker probably might make more sense. The reason I originally thought to do this in the IRealm is that I figured credentials checkers should just check credentials, and creating a new credential (the access token) wasn't part of ICredentialsChecker's job (more like IRealm's job). Apparently I was mistaken.

I'm going to handwave a bit here and pretend we're talking about a thing that actually does serve arbitrary resources, so my answers may be slightly off.  But I think they may be applicable either way.

Speaking the authentication protocol is the authentication implementation's job, not the realm or the checker.  For example: if you need to generate a challenge as part of the authentication process, the checker probably doesn't need to get involved there.  If you need to ask the checker something about the challenge (let's say you have a list of persistent salts), then there needs to be a method on the credential interface to allow the checker to relay that information back.

It strikes me that creating a new access token is also an authentication feature.  If it is, then it goes into the OAuth resource somewhere.  If it needs to be pluggable then it needs to go into the ICredentialsChecker or possibly the realm, but it's possible that this is just an OAuth specific interface that is plugged in to the OAuth-doing IResource separately, as a constructor argument that has nothing to do with cred.

> As you describe it:
>> token endpoints let you trade in some credentials that prove you're supposed to have access for a token that actually *gives* you that access
> 
> In cred-ese, that would be "checkers let you trade in some credentials that prove you're supposed to have access for an <avatar ID, which you give to a Realm> that actually *gives* you that access".  As far as the OAuth response is concerned, it's like a checker.  Looking at the individual parts, assuming that the avatar interface for the purposes of this discussion is IResource, it breaks down like this in my mind:
>>     - the access token (an ascii string, mandatory)
> 
> Avatar ID.  (See, it's a str!)
> 
> Heh, okay; as long as there's a plausible way to get the other important information (see rest of email) into the HTTP response, I'll believe you.

Yes.  The way to get it into the HTTP response is: put it into the HTTP response :).  You don't necessarily need to cram it into the realm.

>>     - the expiration time (optional)
> Implementation detail of the session.  Avatars are actually sessions, which expire: sometimes (as with POP) at the end of a connection, sometimes (as with nevow.guard's HTTP support) with a session timeout.
> 
> Right, but:
> a) The avatar needs to know about this timeout, since the timeout information needs to be able to make it into the HTTP response.

I'll stop you right there: No.  (We can skip the rest of points b, c, and d, since they all apparently follow from this.)

The avatar's job is to give you an IResource, but the OAuth implementation doesn't necessarily need to pass through either the arguments to that resource or that resource's return values (from getChild or render) exactly.  If the timeout needs to be put into the HTTP response as a header, the OAuth resource could wrap the IResource value that it gets from the realm and set the header before calling the ultimate resource's child.

Note that this isn't just the credentials checker: this is the OAuth implementation.  Relaying information there is easy though: depending on how the checker itself gets created and parameterized, either you can have the checker simply have a reference back to the OAuth resource so it can call some methods, or you can expand the OAuth credentials interface to have a method that the checker uses to pass that information back along with the resource.

>>     - the refresh token (another ascii string, similar to the access token, optional)
> 
> Implementation detail of the authentication protocol.  The client library and server library should be transparently refreshing this without telling either the client application code or server application code, right?
> 
> Sure, but we're still writing library code here.

> If the avatar interface isn't actually IResource, but a new interface IAccessToken, getting the refresh token later might be feasible. (It should be a different interface, because in order to create a refresh token outside of this entire cred cycle, I need to know about the thing it's refreshing -- so, the information in the response needs to be easily accessible and not just an opaque IResource).
> 
> I agree entirely that clever client library code would abstract this mess away from application code. However, right now this code still needs to somehow be able to eventually produce HTTP responses that don't abstract anything yet and just contain all the appropriate data, because that's just what the OAuth spec says it needs to be able to do. There isn't any real application code in the token endpoint; they're pretty similar for all OAuth setups, and customization would typically happen through implementing the appropriate ICredentialsChecker.

Again: producing HTTP responses is not the same thing as producing IResource implementations.  You can have an HTTP response produced by an IResource that wraps another IResource and adds some special sauce to the response.  So this information still never needs to make it to the realm.

>>     - scope (an ascii string consisting of a set of space-separated words, optional)
> 
> 
> This part doesn't quite fit, but could be expressed in one of two ways: a modification to the avatar ID, or as some extra structure on the Mind that modifies what functionality the Realm bundles in to your avatar implementation (without changing the interface provided by that object, of course).
> 
> Unfortunately I don't believe this can be done through the mind. Again working under the previous assumption that ICredentialsChecker and not the IRealm is responsible for creating the access token, and scope is known to the thing that makes the access token, the ICredentialsChecker knows about the scope. Unfortunately the only way to pass stuff  between the ICredentialsChecker and the IRealm is the avatar ID, so you don't have a choice.

OK, I admit it, by the time I get here I'm lost.  We should try to meet up and have an interactive conversation about this, because I have a ton of questions about this, and I don't understand who generates the scope ID and why, and why this bit of information would need to be relayed between the checker and the realm in the process of authentication.  Basically this goes back to the first confusion I mentioned at the beginning of this email: I don't understand why the realm is giving back an IResource if the whole purpose is to just generate tokens and return them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100912/434b4157/attachment.html>

From andrew at bemusement.org  Sun Sep 12 06:05:55 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 12 Sep 2010 22:05:55 +1000
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <20100912120555.GA2443@aihal.home.puzzling.org>

Thomas Hervé wrote:
[...]
> 
>  * Deferred.setTimeout has finally been removed.

Hooray!

-Andrew.




From jml at mumak.net  Mon Sep 13 06:39:36 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 13 Sep 2010 13:39:36 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>

On Sun, Sep 12, 2010 at 12:18 AM, Thomas Hervé <therve at free.fr> wrote:
> It's this time of the year again! From the dangerous and intrepid land
> of Montréal, Canada, I have the pleasure to announce the first 10.2.0
> pre-release.
>

Hey, that's where I did the last pre-release!

> Tarballs for Twisted 10.2.0pre1 are now available at:
>  http://people.canonical.com/~therve/Twisted/10.2.0pre1/
>

Woot!

...
> Please download the tarballs and test them as much as possible. I
> intend to do a final release within the next 2 weeks, if I didn't die
> by ingestion of poutine.

Since you're the first person to do a release after I wrote the
process document, I have to know: did it help? any bugs? any
missing/confusing bits?

jml



From mhubig at imko.de  Tue Sep 14 03:24:32 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 11:24:32 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
Message-ID: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>

Hi @all!

I'm trying to write a python library module for a special
serial communication protocol called IMPBUS. To use the serial
interface for sending and receiving packets as for now I'm
sub-classing pyserial. My code looks like this:

from serial import Serial, SerialExceptionfrom serial import
EIGHTBITS, PARITY_ODD, STOPBITS_TWOimport binasciiclass
SerialDevice(Serial):    def __init__(self, port):
Serial.__init__(self)        self.port = port        self.baudrate =
57600        self.bytesize = EIGHTBITS        self.parity = PARITY_ODD
       self.stopbits = STOPBITS_TWO        self.timeout = 0
self.xonxoff = 0        self.rtscts = 0        self.dsrdtr = 0
def _write(self, packet):        fileno = self.fileno()        while
True:            readable, writeable, excepts = select([], [fileno],
[], 0.1)            if fileno in writeable:                length =
self.write(packet)                break        return length
def _read(self):        fileno = self.fileno()        while True:
      readable, writeable, excepts = select([], [fileno], [], 0.1)
       if fileno in readable:                header = self.read(7)
           length = int(binascii.b2a_hex(header[3]), 16)
 data = self.read(length)                packet = header + data
        break        return packet        def talk(self, packet):
  self._write(packet)        responce = self._read()        return
responce

But the problem is that I can't use select with pyserial on Windows,
because it don't provide the fileno() methode. So after some googling
I found twisted.internet.serialport "A select()able serial device, acting
as a transport."

I never used twisted before so I'm a little overwhelmed by how I can
replace pyserial with twisted in the code above ... maybe someone can
point me to the right direction. It seems I need a "Protocol" and a
"receiver" ...

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/337404ea/attachment.html>

From exarkun at twistedmatrix.com  Tue Sep 14 06:08:36 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 12:08:36 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
Message-ID: <20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>

On 09:24 am, mhubig at imko.de wrote:
>Hi @all!
>
>I'm trying to write a python library module for a special
>serial communication protocol called IMPBUS. To use the serial
>interface for sending and receiving packets as for now I'm
>sub-classing pyserial. My code looks like this:
>
>[snip]
>
>But the problem is that I can't use select with pyserial on Windows,
>because it don't provide the fileno() methode. So after some googling
>I found twisted.internet.serialport "A select()able serial device, 
>acting
>as a transport."
>
>I never used twisted before so I'm a little overwhelmed by how I can
>replace pyserial with twisted in the code above ... maybe someone can
>point me to the right direction. It seems I need a "Protocol" and a
>"receiver" ...

See the serialport examples on the website.  A couple are linked from 
http://twistedmatrix.com/documents/current/core/examples/.

You do indeed want a Protocol subclass.  The code from your 
"self.read(7)" line to the end of that loop will probably end up in a 
dataReceived method - but note that you'll have to do some buffering, as 
you can't be assured that dataReceived will get called with exactly the 
number of bytes you want at a time, so you may have to collect data from 
multiple dataReceived calls (likewise you may get more than you want at 
once, and need to split it up).

Jean-Paul



From twisted-web at udmvt.ru  Tue Sep 14 06:29:34 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Tue, 14 Sep 2010 16:29:34 +0400
Subject: [Twisted-Python] Just curious about EINTR in socket.recv()
Message-ID: <20100914122934.GC8187@ruber.office.udmvt.ru>

As far as I know, socket.recv() may raise socket.error exception
in case of error return from recv(2) system call. My system's (Linux i386 2.6.32)
man page say there could be these error values:

       EAGAIN or EWOULDBLOCK
       EBADF
       ECONNREFUSED
       EFAULT
       EINTR
       EINVAL
       ENOMEM
       ENOTCONN
       ENOTSOCK

Now, looking into twisted.internet.tcp, method doRead() on line 443, (twisted 10.1.0)
we may find, that code:
        try:
            data = self.socket.recv(self.bufferSize)
        except socket.error, se:
            if se.args[0] == EWOULDBLOCK:
                return
            else:
                return main.CONNECTION_LOST
        if not data:
            return main.CONNECTION_DONE
        return self.protocol.dataReceived(data)

This is the point in the twisted framework, that decides how TCP socket
will get closed, whether that be in "clean" or "non clean" fashion.

But some error codes, besides EWOULDBLOCK, are not in any way related
to reporting a permanent error, that deserves closing the socket.

Question to Python system library gurus: is socket.recv() supposed to raise socket.error with EINTR code ?
In that case we should return None too, since that operation should be restarted,
and reporting main.CONNECTION_LOST is a bug.

What about ENOMEM case? Is system supposed to have destroyed the socket after that event,
or it can safely recover later, so there is no sense in closing the socket in twisted either?

Sorry, if that is a non-issue, or already tracked, I'm just curious.

-- 
Alexey.



From exarkun at twistedmatrix.com  Tue Sep 14 06:40:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 12:40:27 -0000
Subject: [Twisted-Python] Just curious about EINTR in socket.recv()
In-Reply-To: <20100914122934.GC8187@ruber.office.udmvt.ru>
References: <20100914122934.GC8187@ruber.office.udmvt.ru>
Message-ID: <20100914124027.2058.1257877531.divmod.xquotient.517@localhost.localdomain>

On 12:29 pm, twisted-web at udmvt.ru wrote:
>As far as I know, socket.recv() may raise socket.error exception
>in case of error return from recv(2) system call. My system's (Linux 
>i386 2.6.32)
>man page say there could be these error values:
>
>       EAGAIN or EWOULDBLOCK
>       EBADF
>       ECONNREFUSED
>       EFAULT
>       EINTR
>       EINVAL
>       ENOMEM
>       ENOTCONN
>       ENOTSOCK
>
>Now, looking into twisted.internet.tcp, method doRead() on line 443, 
>(twisted 10.1.0)
>we may find, that code:
>        try:
>            data = self.socket.recv(self.bufferSize)
>        except socket.error, se:
>            if se.args[0] == EWOULDBLOCK:
>                return
>            else:
>                return main.CONNECTION_LOST
>        if not data:
>            return main.CONNECTION_DONE
>        return self.protocol.dataReceived(data)
>
>This is the point in the twisted framework, that decides how TCP socket
>will get closed, whether that be in "clean" or "non clean" fashion.
>
>But some error codes, besides EWOULDBLOCK, are not in any way related
>to reporting a permanent error, that deserves closing the socket.
>
>Question to Python system library gurus: is socket.recv() supposed to 
>raise socket.error with EINTR code ?
>In that case we should return None too, since that operation should be 
>restarted,
>and reporting main.CONNECTION_LOST is a bug.

This particular socket.recv call should not fail with EINTR because it 
is a non-blocking receive.  If you know of a condition which contradicts 
this, please let us know.
>
>What about ENOMEM case? Is system supposed to have destroyed the socket 
>after that event,
>or it can safely recover later, so there is no sense in closing the 
>socket in twisted either?

Python will turn an ENOMEM into a raised MemoryError.  In general in 
Python, it is challenging to do anything useful in response to a 
MemoryError.  It may be possible to recover and continue using the 
socket, or it may not be, there's no way to know in general (and even 
knowing in a particular case can be challenging).  So, without an idea 
of what would be a better way to handle MemoryError, Twisted typically 
treats it the same way it treats any other unexpected exception.  It 
will generally get logged and if it came from a socket.recv() call like 
the one above, that socket will be disconnected and the associated 
protocol object informed.

Jean-Paul



From eulores at gmail.com  Tue Sep 14 07:03:01 2010
From: eulores at gmail.com (eulores)
Date: Tue, 14 Sep 2010 15:03:01 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
Message-ID: <AANLkTikvRjzxhaeehd2eHOySk-G223-ymKdVekzdGGST@mail.gmail.com>

Here is my code for Plug 'n Play detection of serial devices. It's not
yet ready for showtime, but it works with my serial attached Wacom.

Best regards,
eulores


# -*- coding: utf-8 -*-

import sys
if sys.platform == 'win32':
    from twisted.internet import win32eventreactor
    win32eventreactor.install()
from twisted.internet import reactor, protocol
from twisted.internet.task import deferLater, LoopingCall
from twisted.internet.defer import Deferred, inlineCallbacks, returnValue
from twisted.internet.serialport import *
import re

def wait(seconds):
    return deferLater(reactor, seconds, lambda:None)

class StructuredPnP(object):
    ''' The structured PnP field is available with these fields:
            data:    string, required. Original unformatted string.
            other:   string, optional
            rev:     integer, required. Revision of the PnP standard.
100 is standard version 1.00
            eisa:    string, required
            product: string, required
            serial:  string, optional
            klass:   string, optional
            compat:  string, optional. Other older products with
similar functionality
            user:    string, optional. Free flowing field useful for
the end-user
    '''
    def __init__(self, data):
        #data = '\\96,N,8,1(\x01$WAC0608\\\\PEN\\WAC0000\\WACOM
UD\r\nUD-0608-R,V1.4-4\r\nF4)'
        # test string for a 7-bit character string
        #data = 'aaa(bbcccdddd\\eeeeeeee\\fff\\gggg\\hhhhii)'
        # test string for a 6-bit character string
        #data = 'AAA\x08BBCCCDDDD<EEEEEEEE<FFF<GGGG<HHHHII\x09'
        self.data = data
        for key in "other eisa product serial klass compat user".split():
            setattr(self, key, '')
        self.rev = '\0\0'
        prologue = r'(?P<other>[^(]{,16}?)'
        matrix =
r'(?P<rev>..)(?P<eisa>...)(?P<product>....)(?:@(?P<serial>[^@]{,8}))?(?:@(?P<klass>[^@]{,32}))?(?:@(?P<compat>[^@]{,40}))?(?:@(?P<user>.{,40}?))?(?:..)?'
        needle1 = prologue + '\\(' + matrix.replace('@','\\\\') + '\\)'
        needle2 = prologue + '\\\x08' + matrix.replace('@','\\\x3C') + '\\\x09'
        dct = dict()
        mo = re.match(needle1, data, re.S)
        if mo:
            dct = mo.groupdict()
        else:
            mo = re.match(needle2, data, re.S)
            if mo:
                dct = mo.groupdict()
                for k in "eisa product serial klass compat user".split():
                    v = dct[k]
                    dct[k] = ''.join([chr(ord(ch)+0x20) for ch in list(v)])
        for k,v in dct.items():
            setattr(self, k, v)
        self.rev = ((ord(self.rev[0])&0x3f)<<6) + (ord(self.rev[1])&0x3f)
    def __str__(self):
        return self.data
    def __repr__(self):
        l = ['<StructuredPnP object> %r' % self.data]
        for k in "other rev eisa product serial klass compat user".split():
            l.append('  %-8s %r' % (k, getattr(self,k,False)))
        return '\n'.join(l)

class PnPProtocol(protocol.Protocol):
    """ See Plug and Play External COM device Specification, rev 1.00
from Microsoft & Hayes, 1994-1995"""
    def __init__(self, deferred):
        self.deferred = deferred
        self.data = ''
        self.timeout = 1.4
        self.T5 = reactor.callLater(self.timeout, self.deliverPnP)
    def deliverPnP(self):
        self.transport.loseConnection()
        if self.deferred is not None:
            d, self.deferred = self.deferred, None
            d.callback(StructuredPnP(self.data))
    def dataReceived(self, data):
        self.T5.reset(self.timeout)
        self.data += data
        if len(self.data)>=256:
            self.T5.reset(0)
    @inlineCallbacks
    def connectionMade(self):
        while 1:
            # print "2.1.1"
            self.transport.setDTR(1)
            self.transport.setRTS(0)
            yield wait(0.2)
            if not self.transport.getDSR():
                break
            # print "2.1.3 part A"
            self.transport.setDTR(0)
            yield wait(0.2)
            # print "2.1.3 part B"
            self.transport.setDTR(1)
            yield wait(0.2)
            # print "2.1.4"
            self.transport.setRTS(1)
            # timer T5 is now used for per-character timeout
            self.timeout = 0.2
            yield wait(0.2)
            if self.data:
                break
            # print "2.1.5"
            self.transport.setDTR(0)
            self.transport.setRTS(0)
            yield wait(0.2)
            # print "2.1.6"
            self.transport.setDTR(1)
            self.transport.setRTS(1)
            yield wait(0.2)
            break
        if not self.data:
            self.T5.reset(0)
        returnValue(None)
    def connectionLost(self, reason='connectionDone'):
        print "Connection lost:", reason

def pnpString(port=0):
    d = Deferred()
    protocol = PnPProtocol(d)
    try:
        #SerialPort(protocol, port, reactor, baudrate=1200,
bytesize=SEVENBITS, parity=PARITY_NONE, stopbits=STOPBITS_ONE,
timeout=0, xonxoff=0, rtscts=0)
        SerialPort(protocol, port, reactor, baudrate=1200,
bytesize=SEVENBITS, parity=PARITY_NONE, stopbits=STOPBITS_ONE,
xonxoff=0, rtscts=0)
    except serial.SerialException:
        d.callback(StructuredPnP(''))
    return d

@inlineCallbacks
def imRunning():
    print "PnP string: %r" % (yield pnpString(3))
    reactor.stop()

if __name__ == "__main__":
    reactor.callWhenRunning(imRunning)
    reactor.run()



On Tue, Sep 14, 2010 at 11:24 AM, Markus Hubig <mhubig at imko.de> wrote:
> Hi @all!
> I'm trying to write a python library module for a special
> serial communication protocol called IMPBUS. To use the serial
> interface for sending and receiving packets as for now I'm
> sub-classing pyserial. My code looks like this:
>
> But the problem is that I can't use select with pyserial on Windows,
> because it don't provide the fileno() methode. So after some googling
> I found twisted.internet.serialport "A select()able serial device, acting
> as a transport."
> I never used twisted before so I'm a little overwhelmed by how I can
> replace pyserial with twisted in the code above ... maybe someone can
> point me to the right direction. It seems I need a "Protocol" and a
> "receiver" ...
> - Markus
> --
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/147f1bbd/attachment.html>

From mhubig at imko.de  Tue Sep 14 07:32:29 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 15:32:29 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
Message-ID: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>

On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:

> See the serialport examples on the website.  A couple are linked from
> http://twistedmatrix.com/documents/current/core/examples/.
>

The examples I found are mouse.py and gpsfix.py and there only listening on
the serial line. It seems that with twisted I have some sort of a thread
running
which will trigger some methods (e.g. dataRecieved) as it reads something
from the serial line. How could I send data then?


> You do indeed want a Protocol subclass.


Ok I see, and the Protocol subclass provides the dataReceived method!?


> The code from your "self.read(7)" line to the end of that loop will
> probably

end up in a dataReceived method - but note that you'll have to do some

buffering, as you can't be assured that dataReceived will get called with
> exactly

the number of bytes you want at a time, so you may have to collect data from
> multiple dataReceived calls (likewise you may get more than you want at
> once, and need to split it up).
>

Hmm ok so I have to design dataReceived() to buffer the received data until
it get's
the whole answer packet and than let it call e.g. packetRecieved() to
process the
packet ... I'm mot sure if this asynchronous approach is what I need,
because the
protocol I'm implementing is strict Master-Slave.

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/c7407ee0/attachment.html>

From vic.norman at gmail.com  Tue Sep 14 07:43:57 2010
From: vic.norman at gmail.com (Victor Norman)
Date: Tue, 14 Sep 2010 09:43:57 -0400
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
Message-ID: <AANLkTinZbgPnSGYN2NKH6e453+aH=taKkMKDNhQpVmjQ@mail.gmail.com>

Markus,

I wonder if you've seen this really excellent tutorial:

http://krondo.com/?page_id=1327

It is one of the finest tutorials I've seen anywhere on the web, on any
topic.

In fact, I think the Twisted leadership should put links to this tutorial
all over their home page.  While the finger "tutorial" is OK, this tutorial
is much much much better, actually explaining *why* you make certain
classes, etc.

Vic

On Tue, Sep 14, 2010 at 9:32 AM, Markus Hubig <mhubig at imko.de> wrote:

> On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:
>
>> See the serialport examples on the website.  A couple are linked from
>> http://twistedmatrix.com/documents/current/core/examples/.
>>
>
> The examples I found are mouse.py and gpsfix.py and there only listening on
> the serial line. It seems that with twisted I have some sort of a thread
> running
> which will trigger some methods (e.g. dataRecieved) as it reads something
> from the serial line. How could I send data then?
>
>
>> You do indeed want a Protocol subclass.
>
>
> Ok I see, and the Protocol subclass provides the dataReceived method!?
>
>
>> The code from your "self.read(7)" line to the end of that loop will
>> probably
>
> end up in a dataReceived method - but note that you'll have to do some
>
> buffering, as you can't be assured that dataReceived will get called with
>> exactly
>
> the number of bytes you want at a time, so you may have to collect data
>> from
>> multiple dataReceived calls (likewise you may get more than you want at
>> once, and need to split it up).
>>
>
> Hmm ok so I have to design dataReceived() to buffer the received data until
> it get's
> the whole answer packet and than let it call e.g. packetRecieved() to
> process the
> packet ... I'm mot sure if this asynchronous approach is what I need,
> because the
> protocol I'm implementing is strict Master-Slave.
>
> - Markus
>
> --
> __________________________________________________________________
>
> IMKO Micromodultechnik GmbH
> Markus Hubig
> System Administration & Development
> Im Stoeck 2
> D-76275 Ettlingen / GERMANY
>
> HR: HRB 360936 Amtsgericht Mannheim
> President: Dipl.-Ing. (FH) Kurt Koehler
>
> Tel: 0049-(0)7243-5921-26
> Fax: 0049-(0)7243-5921-40
> e-mail: mhubig at imko.de
> internet: www.imko.de
> _________________________________________________________________
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
“A designer knows he has achieved perfection not when there is nothing left
to add, but when there is nothing left to take away.” -- Antoine de Saint
Exupéry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/a166c156/attachment.html>

From exarkun at twistedmatrix.com  Tue Sep 14 07:46:03 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 13:46:03 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
Message-ID: <20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>

On 01:32 pm, mhubig at imko.de wrote:
>On Tue, Sep 14, 2010 at 2:08 PM, <exarkun at twistedmatrix.com> wrote:
>>See the serialport examples on the website.  A couple are linked from
>>http://twistedmatrix.com/documents/current/core/examples/.
>
>The examples I found are mouse.py and gpsfix.py and there only 
>listening on
>the serial line. It seems that with twisted I have some sort of a 
>thread
>running
>which will trigger some methods (e.g. dataRecieved) as it reads 
>something
>from the serial line. How could I send data then?

Call the method for sending data.  Generally, the protocol's transport's 
write method.  Serial ports are not special in this regard, it's how 
almost all protocol implementations in Twisted work.  See some of the 
other documentation (for example the client or server howtos linked from 
<http://twistedmatrix.com/documents/current/core/howto/>) for more 
details on this.
>
>>You do indeed want a Protocol subclass.
>
>
>Ok I see, and the Protocol subclass provides the dataReceived method!?

Typically.
>
>>The code from your "self.read(7)" line to the end of that loop will
>>probably
>
>end up in a dataReceived method - but note that you'll have to do some
>
>buffering, as you can't be assured that dataReceived will get called 
>with
>>exactly
>
>the number of bytes you want at a time, so you may have to collect data 
>from
>>multiple dataReceived calls (likewise you may get more than you want 
>>at
>>once, and need to split it up).
>
>Hmm ok so I have to design dataReceived() to buffer the received data 
>until
>it get's
>the whole answer packet and than let it call e.g. packetRecieved() to
>process the
>packet ... I'm mot sure if this asynchronous approach is what I need,
>because the
>protocol I'm implementing is strict Master-Slave.

I'm not sure I understand this.  What is a "Master-Slave" protocol?  Why 
would someone not benefit from a Twisted-based implementation of such a 
protocol?

Jean-Paul



From mhubig at imko.de  Tue Sep 14 08:00:18 2010
From: mhubig at imko.de (Markus Hubig)
Date: Tue, 14 Sep 2010 16:00:18 +0200
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
	<20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
Message-ID: <AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>

On Tue, Sep 14, 2010 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:

> I'm not sure I understand this.  What is a "Master-Slave" protocol?  Why
> would someone not benefit from a Twisted-based implementation of such a
> protocol?


OK I'm not sure either ;-) this is why I ask. But in my case I have the
following
situation: behind my serial port I have a bus system made of me (the master)
and some slaves. The slaves are absolute passive until I send them a
command.
After I've send a command to one of my slaves the salve ALWAY reply by
sending
a packet.

So what's the benefit if I have a "deamon thread" waiting the hole time to
get
something from the serial line if the only time it can get something is
immediately
after the master has send a packet? The communication
is totally synchronous.

- Markus

-- 
__________________________________________________________________

IMKO Micromodultechnik GmbH
Markus Hubig
System Administration & Development
Im Stoeck 2
D-76275 Ettlingen / GERMANY

HR: HRB 360936 Amtsgericht Mannheim
President: Dipl.-Ing. (FH) Kurt Koehler

Tel: 0049-(0)7243-5921-26
Fax: 0049-(0)7243-5921-40
e-mail: mhubig at imko.de
internet: www.imko.de
_________________________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/54d1bd6e/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Sep 14 08:28:17 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Sep 2010 14:28:17 -0000
Subject: [Twisted-Python] Selectable SerialPort Windows/Linux
In-Reply-To: <AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>
References: <AANLkTi=AG7dDQ4Fcjuqe5dOnkcaxEi=CF5e5Fb7sSAvp@mail.gmail.com>
	<20100914120836.2058.1813768660.divmod.xquotient.511@localhost.localdomain>
	<AANLkTi=2QTgKFDh7Ap4BccpGZnCyCMBf3k=T8gQSw-ZP@mail.gmail.com>
	<20100914134603.2058.1682580987.divmod.xquotient.525@localhost.localdomain>
	<AANLkTimiCP_weB=frzPWu28p0PFf=pNSkwr3bT_VqYk9@mail.gmail.com>
Message-ID: <20100914142817.2058.2121233756.divmod.xquotient.532@localhost.localdomain>

On 02:00 pm, mhubig at imko.de wrote:
>On Tue, Sep 14, 2010 at 3:46 PM, <exarkun at twistedmatrix.com> wrote:
>>I'm not sure I understand this.  What is a "Master-Slave" protocol? 
>>Why
>>would someone not benefit from a Twisted-based implementation of such 
>>a
>>protocol?
>
>
>OK I'm not sure either ;-) this is why I ask. But in my case I have the
>following
>situation: behind my serial port I have a bus system made of me (the 
>master)
>and some slaves. The slaves are absolute passive until I send them a
>command.
>After I've send a command to one of my slaves the salve ALWAY reply by
>sending
>a packet.
>
>So what's the benefit if I have a "deamon thread" waiting the hole time 
>to
>get
>something from the serial line if the only time it can get something is
>immediately
>after the master has send a packet? The communication
>is totally synchronous.

Do you ever want to interact with more than one slave?  Do your slaves 
ever have any bugs that prevent them from responding?  Do you want to be 
able to unit test your protocol code easily?  If  you want any of this, 
you might want to use Twisted.

Also, there generally aren't any threads involved when you're using 
Twisted's serial port support.

Jean-Paul



From ruslan.usifov at gmail.com  Tue Sep 14 11:48:06 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Tue, 14 Sep 2010 21:48:06 +0400
Subject: [Twisted-Python] kqueue reactor
Message-ID: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>

Which kqueue reactor in twisted is best?

Twisted have kqreactor  - but it need PyKQueue patched version, and PyKQueue
doesn't supported
Also i found
https://trac.calendarserver.org/browser/CalendarServer/branches/users/glyph/use-system-twisted/kqreactor.py,
but doesn't known is it possible use in production?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100914/51605947/attachment-0001.html>

From therve at free.fr  Wed Sep 15 02:52:40 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Wed, 15 Sep 2010 10:52:40 +0200
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
References: <1284247101.2007.1.camel@localhost>
	<AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
Message-ID: <1284540760.2636.6.camel@brainwave>

Le lundi 13 septembre 2010 à 13:39 +0100, Jonathan Lange a écrit :

> > Please download the tarballs and test them as much as possible. I
> > intend to do a final release within the next 2 weeks, if I didn't die
> > by ingestion of poutine.
> 
> Since you're the first person to do a release after I wrote the
> process document, I have to know: did it help? any bugs? any
> missing/confusing bits?

It helped a lot. Releasing is mostly about reading the document and
pasting at the command line. It also caught outdated data in README and
INSTALL.

The indirection of the information in separate bugs is a bit difficult,
but this means we should just fix those :).

Regarding the announcement email, I should probably put up for review a
little bit longer, to catch version typos and basic english errors...

-- 
Thomas




From jml at mumak.net  Wed Sep 15 06:06:07 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 15 Sep 2010 13:06:07 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284540760.2636.6.camel@brainwave>
References: <1284247101.2007.1.camel@localhost>
	<AANLkTinuwBEm=HWGGbF0H2Z=rch+OBybBdQiQfa2TpGQ@mail.gmail.com>
	<1284540760.2636.6.camel@brainwave>
Message-ID: <AANLkTik1Ev40nxVO_3qmLNfyXiL1-TQzn_nuwibBOFN5@mail.gmail.com>

On Wed, Sep 15, 2010 at 9:52 AM, Thomas Hervé <therve at free.fr> wrote:
> Le lundi 13 septembre 2010 à 13:39 +0100, Jonathan Lange a écrit :
>
>> > Please download the tarballs and test them as much as possible. I
>> > intend to do a final release within the next 2 weeks, if I didn't die
>> > by ingestion of poutine.
>>
>> Since you're the first person to do a release after I wrote the
>> process document, I have to know: did it help? any bugs? any
>> missing/confusing bits?
>
> It helped a lot. Releasing is mostly about reading the document and
> pasting at the command line. It also caught outdated data in README and
> INSTALL.
>

Glad to hear it.

> The indirection of the information in separate bugs is a bit difficult,
> but this means we should just fix those :).
>

Agreed. You should invite me to Paris for a release tools sprint some time :)

> Regarding the announcement email, I should probably put up for review a
> little bit longer, to catch version typos and basic english errors...

I think it's better to find someone to be a release reviewer so they
can go over that stuff quickly and within a set time. Otherwise you
can be waiting forever.

jml



From chris at simplistix.co.uk  Wed Sep 15 11:12:01 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 15 Sep 2010 18:12:01 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
Message-ID: <4C90FE61.4000307@simplistix.co.uk>

ie: http://pypi.python.org/pypi/Twisted/10.1.0

It's great that they're being done now, but easy_install and friends on 
Windows still fail to find them unless they're on PyPI :-(

Chris



From chris at simplistix.co.uk  Wed Sep 15 11:16:37 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 15 Sep 2010 18:16:37 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FE61.4000307@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
Message-ID: <4C90FF75.4080000@simplistix.co.uk>

On 15/09/2010 18:12, Chris Withers wrote:
> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>
> It's great that they're being done now, but easy_install and friends on
> Windows still fail to find them unless they're on PyPI :-(

Oh, and I'm afraid the 10.1.0 ones are useless since they're not named 
correctly, from the package tools point of view :-(

We have: Twisted-10.1.0.winxp32-py2.5.exe
We need: Twisted-10.1.0.win32.exe

(and no, I don't know you create a .exe usign that format for both Py2.5 
and Py2.6 :-( )

Ideal would be a binary egg distro, but I know you guys have no love for 
them :-(

Chris



From glyph at twistedmatrix.com  Wed Sep 15 14:57:29 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Sep 2010 16:57:29 -0400
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FF75.4080000@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
Message-ID: <EC5B7B74-7456-4236-A1F9-AB765C604893@twistedmatrix.com>


On Sep 15, 2010, at 1:16 PM, Chris Withers wrote:

> On 15/09/2010 18:12, Chris Withers wrote:
>> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>> 
>> It's great that they're being done now, but easy_install and friends on
>> Windows still fail to find them unless they're on PyPI :-(
> 
> Oh, and I'm afraid the 10.1.0 ones are useless since they're not named 
> correctly, from the package tools point of view :-(
> 
> We have: Twisted-10.1.0.winxp32-py2.5.exe
> We need: Twisted-10.1.0.win32.exe
> 
> (and no, I don't know you create a .exe usign that format for both Py2.5 
> and Py2.6 :-( )
> 
> Ideal would be a binary egg distro, but I know you guys have no love for 
> them :-(

No particular hate for them either: would you like to volunteer to build our binary eggs and maintain them? :)




From jml at mumak.net  Thu Sep 16 03:28:28 2010
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 16 Sep 2010 10:28:28 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C90FF75.4080000@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
Message-ID: <AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>

On Wed, Sep 15, 2010 at 6:16 PM, Chris Withers <chris at simplistix.co.uk> wrote:
> On 15/09/2010 18:12, Chris Withers wrote:
>> ie: http://pypi.python.org/pypi/Twisted/10.1.0
>>
>> It's great that they're being done now, but easy_install and friends on
>> Windows still fail to find them unless they're on PyPI :-(
>
> Oh, and I'm afraid the 10.1.0 ones are useless since they're not named
> correctly, from the package tools point of view :-(
>
> We have: Twisted-10.1.0.winxp32-py2.5.exe
> We need: Twisted-10.1.0.win32.exe
>
> (and no, I don't know you create a .exe usign that format for both Py2.5
> and Py2.6 :-( )
>

Two questions:
  * Where are these "correct names" documented?
  * Would you be at all interested in updating our build to generate
exes with these names?

> Ideal would be a binary egg distro, but I know you guys have no love for
> them :-(
>

If you can figure out how to make our Windows buildbots build them
together with the .msis and .exes, that would be great.

jml



From chris at simplistix.co.uk  Thu Sep 16 05:01:20 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 16 Sep 2010 12:01:20 +0100
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
References: <4C90FE61.4000307@simplistix.co.uk>	<4C90FF75.4080000@simplistix.co.uk>
	<AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
Message-ID: <4C91F900.6060802@simplistix.co.uk>

On 16/09/2010 10:28, Jonathan Lange wrote:
> Two questions:
>    * Where are these "correct names" documented?

*snivvles* probably in the setuptools source.
I would have assumed http://www.python.org/dev/peps/pep-0376, but I 
can't see anything on it in there...

>    * Would you be at all interested in updating our build to generate
> exes with these names?

Probably :-) Where are the docs on how to duplicate your current windows 
build process?

>> Ideal would be a binary egg distro, but I know you guys have no love for
>> them :-(
>
> If you can figure out how to make our Windows buildbots build them
> together with the .msis and .exes, that would be great.

Indeed!

Chris



From exarkun at twistedmatrix.com  Thu Sep 16 06:27:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 16 Sep 2010 12:27:08 -0000
Subject: [Twisted-Python] any change of the .exe builds on PyPI?
In-Reply-To: <4C91F900.6060802@simplistix.co.uk>
References: <4C90FE61.4000307@simplistix.co.uk>
	<4C90FF75.4080000@simplistix.co.uk>
	<AANLkTi=8uhiKJg_obs1FysUkDX96ik7HTQ7MizLuqjND@mail.gmail.com>
	<4C91F900.6060802@simplistix.co.uk>
Message-ID: <20100916122708.2058.1480834037.divmod.xquotient.553@localhost.localdomain>

On 11:01 am, chris at simplistix.co.uk wrote:
>On 16/09/2010 10:28, Jonathan Lange wrote:
>>Two questions:
>>    * Where are these "correct names" documented?
>
>*snivvles* probably in the setuptools source.
>I would have assumed http://www.python.org/dev/peps/pep-0376, but I
>can't see anything on it in there...
>>    * Would you be at all interested in updating our build to generate
>>exes with these names?
>
>Probably :-) Where are the docs on how to duplicate your current 
>windows
>build process?

If you're serious about helping out, then I will bump up the priority on 
making our buildbot configuration public.

You can already see the build process in action, though.  There are two 
builders responsible for this now, winxp32-py2.5-msi and 
winxp32-py2.6-msi.  Despite the names, they also build the exes.  You 
can find them on this page:

  http://buildbot.twistedmatrix.com/boxes-all

Following the builder name link will take you to a builder page which 
lists recent builds.  Following one of the build links will take you to 
a build page which lists the steps involved in the build.  Following a 
step link will take you to a page which shows you the command which was 
run for that step along with its results.

Jean-Paul



From glyph at twistedmatrix.com  Thu Sep 16 16:20:31 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Sep 2010 18:20:31 -0400
Subject: [Twisted-Python] kqueue reactor
In-Reply-To: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>
References: <AANLkTimM9HVBgedKLwPVRDuA_+hsFNuTP8x=JfwD9Bs4@mail.gmail.com>
Message-ID: <1834A88B-B786-46DF-8A66-69DF0EDCF835@twistedmatrix.com>


On Sep 14, 2010, at 1:48 PM, ruslan usifov wrote:

> Which kqueue reactor in twisted is best?
> 
> Twisted have kqreactor  - but it need PyKQueue patched version, and PyKQueue doesn't supported
> Also i found https://trac.calendarserver.org/browser/CalendarServer/branches/users/glyph/use-system-twisted/kqreactor.py, but doesn't known is it possible use in production?

You should really follow this ticket: <http://twistedmatrix.com/trac/ticket/1918>.  We'd like there to be an included, working kqueue reactor, and we're working towards it.

As of right now, it depends what you're doing.

Calendar Server uses its version quite successfully in production.  But Calendar Server does not make use of all the features of Twisted; in particular, it doesn't need PTYs to work, and kqueue has some issues with those.

In any event, if you want to use that module, you should be getting it from a release (see <https://trac.calendarserver.org/browser/CalendarServer/tags/release>) or from trunk (<https://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>), not from the branch you mentioned (which is stale, and I have now removed).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100916/44457e5b/attachment-0001.html>

From ruslan.usifov at gmail.com  Fri Sep 17 15:50:45 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sat, 18 Sep 2010 01:50:45 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer (-1)
Message-ID: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>

Hello!

I have use kqreactor from this branch
http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/. In the
follow code we connect to unix socket.
Sometimes we got the error: "file descriptor cannot be a negative integer
(-1)" what does this mean? I haven't any ideas

l_client = protocol.ClientCreator(reactor, Proxy);
l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);

PS: my uname -a is:
     FreeBSD 8.0-RELEASE-p2 FreeBSD 8.0-RELEASE-p2 #2: Wed Jan 13 17:50:25
UTC 2010     root at DTG1383:/usr/obj/usr/src/sys/Z-AMD64  amd64
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100918/95b2fd53/attachment-0001.html>

From exarkun at twistedmatrix.com  Fri Sep 17 16:28:26 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 17 Sep 2010 22:28:26 -0000
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
Message-ID: <20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>

On 09:50 pm, ruslan.usifov at gmail.com wrote:
>Hello!
>
>I have use kqreactor from this branch
>http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/. In 
>the
>follow code we connect to unix socket.
>Sometimes we got the error: "file descriptor cannot be a negative 
>integer
>(-1)" what does this mean? I haven't any ideas
>
>l_client = protocol.ClientCreator(reactor, Proxy);
>l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);
>
>PS: my uname -a is:
>     FreeBSD 8.0-RELEASE-p2 FreeBSD 8.0-RELEASE-p2 #2: Wed Jan 13 
>17:50:25
>UTC 2010     root at DTG1383:/usr/obj/usr/src/sys/Z-AMD64  amd64

It means there's a bug somewhere in your code or in the reactor.  If you 
can reproduce the problem with a simple example, it might be useful in 
fixing the problem.

Jean-Paul



From ruslan.usifov at gmail.com  Fri Sep 17 18:21:59 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sat, 18 Sep 2010 04:21:59 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
Message-ID: <AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>

Sorry fo my question. I'm new in twisted ad may misunderstand some
things:-), and my questions may look like trivial

I have follow stack trace:

cant connect to fcgi socket: [Failure instance: Traceback: <type
'exceptions.ValueError'>: file descriptor can not be a negative integer (-1)
/usr/local/lib/python2.6/site-packages/twisted/internet/base.py:796:runUntilCurrent
/usr/local/lib/python2.6/site-packages/twisted/internet/protocol.py:184:fire
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:318:callback
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:424:_startRunCallbacks
--- <exception caught here> ---
/usr/local/lib/python2.6/site-packages/twisted/internet/defer.py:441:_runCallbacks
/usr/local/fastcgi-0.1/fcgi/proxy.py:124:connectionMade
/usr/local/lib/python2.6/site-packages/twisted/internet/abstract.py:340:resumeProducing
/usr/local/lib/python2.6/site-packages/twisted/internet/abstract.py:278:startReading
/usr/local/lib/python2.6/site-packages/twisted/internet/kqreactor.py:82:addReader
/usr/local/lib/python2.6/site-packages/twisted/internet/kqreactor.py:71:_updateRegistration
]

My connectionMade function looks like this:

    def connectionMade(protocol):
      protocol._setPeer(self);
      self._setPeer(protocol);

      for chunk in self._chunks:
        protocol.transport.write(chunk);

      self._chunks = [];
      self.transport.resumeProducing();



All code that i use look like this:
  def proxy(self):
    def connectionMade(protocol):
      protocol._setPeer(self);
      self._setPeer(protocol);

      for chunk in self._chunks:
        protocol.transport.write(chunk);

      self._chunks = [];
      self.transport.resumeProducing();

    def cantConnect(fail):
      log.err("cant connect to fcgi socket: %s" % (fail.getErrorMessage()));
      self.transport.loseConnection();

    #устанавливаем соединение с реальным обработчиком (в нашем случае это
php)
    self.transport.pauseProducing();
    l_client = protocol.ClientCreator(reactor, Proxy);

l_client.connectUNIX(self.factory.proxysock).addCallback(connectionMade).addErrback(cantConnect);


Its a simply fastcgi proxy, which reads all request(analize it, do some
pending things and then proxy request to real worker)
Thank for your help.

PS: i use kqreactor.py from this branch
http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100918/f236a8b5/attachment.html>

From exarkun at twistedmatrix.com  Sat Sep 18 22:05:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Sep 2010 04:05:27 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1284869127.91.1711461392@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100919/2cc6c63c/attachment.html>

From ruslan.usifov at gmail.com  Sun Sep 19 06:04:39 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sun, 19 Sep 2010 16:04:39 +0400
Subject: [Twisted-Python] how to implement sleep?
Message-ID: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>

Hello

Twisted is great, but how cant i emulate sleep behaviour in syested. I know
that exists callLater, but how to use it in yield scenario, like here:

@inlineCallbacks
def work(self):
    l_attempts = 0;

    while l_attemps < 3:
        try:
            resp = yield <some twisted call>
            break;

        except:
            yield sleep(3);
            l_attempts +=1

    else:
        log.err("cant communicate");


Here i make 3 attempts to connect busy service, with pause 3 seconds between
attempts. How cant i implement this in twisted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100919/5f1a973d/attachment.html>

From donal.mcmullan at gmail.com  Sun Sep 19 06:13:56 2010
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Mon, 20 Sep 2010 00:13:56 +1200
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <419062AB-2025-491F-8DF4-61A95B6FA2C1@gmail.com>

except:
    l_attempts += 1
    yield reactor.callLater(3, self.work)

Total guess

Donal


On 20/09/2010, at 12:04 AM, ruslan usifov wrote:

> Hello
> 
> Twisted is great, but how cant i emulate sleep behaviour in syested. I know that exists callLater, but how to use it in yield scenario, like here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds between attempts. How cant i implement this in twisted 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From stephen at thorne.id.au  Sun Sep 19 06:35:44 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Sun, 19 Sep 2010 22:35:44 +1000
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <20100919123544.GR2666@thorne.id.au>

On 2010-09-19, ruslan usifov wrote:
> Twisted is great, but how cant i emulate sleep behaviour in syested. I know
> that exists callLater, but how to use it in yield scenario, like here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds between
> attempts. How cant i implement this in twisted

Perhaps you want ReconnectingClientFactory ? Set maxRetries to 3. See
twisted.internet.protocols.ReconnectingClientFactory.


-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From andrew at bemusement.org  Sun Sep 19 06:41:11 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 19 Sep 2010 22:41:11 +1000
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <20100919124111.GA7235@aihal.home.puzzling.org>

ruslan usifov wrote:
>    Hello
> 
>    Twisted is great, but how cant i emulate sleep behaviour in syested. I

<http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.task.deferLater.html>

-Andrew.




From luke-lists at hybrid-logic.co.uk  Sun Sep 19 07:20:06 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Sun, 19 Sep 2010 14:20:06 +0100
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
Message-ID: <1284902406.29918.5.camel@pow>

Hi Ruslan,

Try this to drop in to your code, as in: sleep(3)

def sleep(secs):
    d = defer.Deferred()
    reactor.callLater(secs, d.callback, None)
    return d

Cheers,
Luke


On Sun, 2010-09-19 at 16:04 +0400, ruslan usifov wrote:
> Hello
> 
> Twisted is great, but how cant i emulate sleep behaviour in syested. I
> know that exists callLater, but how to use it in yield scenario, like
> here:
> 
> @inlineCallbacks
> def work(self):
>     l_attempts = 0;
> 
>     while l_attemps < 3:
>         try:
>             resp = yield <some twisted call>
>             break;
> 
>         except:
>             yield sleep(3);
>             l_attempts +=1
> 
>     else:
>         log.err("cant communicate");
> 
> 
> Here i make 3 attempts to connect busy service, with pause 3 seconds
> between attempts. How cant i implement this in twisted 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420




From itamar at itamarst.org  Sun Sep 19 07:20:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 19 Sep 2010 09:20:53 -0400
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <20100919124111.GA7235@aihal.home.puzzling.org>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
	<20100919124111.GA7235@aihal.home.puzzling.org>
Message-ID: <1284902453.1586.5.camel@blake>

On Sun, 2010-09-19 at 22:41 +1000, Andrew Bennetts wrote:
> ruslan usifov wrote:
> >    Hello
> > 
> >    Twisted is great, but how cant i emulate sleep behaviour in syested. I
> 
> <http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.task.deferLater.html>

Specifically, deferLater is a wrapper for reactor.callLater that works
well with inlineCallbacks, since it returns a Deferred, so you can do
"yield deferLater(reactor, 3, lambda: None)".






From ruslan.usifov at gmail.com  Sun Sep 19 12:08:31 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Sun, 19 Sep 2010 22:08:31 +0400
Subject: [Twisted-Python] how to implement sleep?
In-Reply-To: <20100919123544.GR2666@thorne.id.au>
References: <AANLkTiktdFMVvjCZ0m8aMccf=rPVSJMTKj5DaL4WrLC6@mail.gmail.com>
	<20100919123544.GR2666@thorne.id.au>
Message-ID: <AANLkTikWmOeRf4hpD2Tw2HRAjPZJ=nBvDD2Y1gyR-Mxp@mail.gmail.com>

Can you provide some code to use it? In maner like protocol.ClientCreator?


Perhaps you want ReconnectingClientFactory ? Set maxRetries to 3. See
> twisted.internet.protocols.ReconnectingClientFactory.
>
>
> --
> Regards,
> Stephen Thorne
> Development Engineer
> Netbox Blue
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100919/7925938d/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Sep 19 22:08:16 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Sep 2010 00:08:16 -0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
Message-ID: <8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>


On Sep 17, 2010, at 8:21 PM, ruslan usifov wrote:

> Its a simply fastcgi proxy, which reads all request(analize it, do some pending things and then proxy request to real worker)

I am very curious about your problem, but I cannot help you with it with the incomplete snippets you have provided.  Can you reduce your program to a smaller test program that produces this traceback?

Here is a guide to producing a useful example: <http://sscce.org/>

> Thank for your help.

Thanks for reporting the bug.  I hope you can provide us with enough information to get it fixed :).

> PS: i use kqreactor.py from this branch http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/ 

If you use the kqreactor.py from <http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>, does it make any difference, or do you still see the same traceback?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100920/4516be8b/attachment.html>

From ruslan.usifov at gmail.com  Mon Sep 20 08:34:24 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Mon, 20 Sep 2010 18:34:24 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
Message-ID: <AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>

I implement specific proxy server, so after analyze i think that this
happens if client disconnected from server, but server already made
connection to proxied service, so call resumeProducing() (in connectionMade
), throws exception (because socket already closed)  "file descriptor can
not be a negative integer (-1)"

So this looks like my bug

2010/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 17, 2010, at 8:21 PM, ruslan usifov wrote:
>
> Its a simply fastcgi proxy, which reads all request(analize it, do some
> pending things and then proxy request to real worker)
>
>
> I am very curious about your problem, but I cannot help you with it with
> the incomplete snippets you have provided.  Can you reduce your program to a
> smaller test program that produces this traceback?
>
> Here is a guide to producing a useful example: <http://sscce.org/>
>
> Thank for your help.
>
>
> Thanks for reporting the bug.  I hope you can provide us with enough
> information to get it fixed :).
>
>
> PS: i use kqreactor.py from this branch
> http://twistedmatrix.com/trac/browser/branches/kqreactor-1918-3/
>
>
> If you use the kqreactor.py from <
> http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/internet/kqreactor.py>,
> does it make any difference, or do you still see the same traceback?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100920/14d13429/attachment.html>

From glyph at twistedmatrix.com  Mon Sep 20 11:48:23 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Sep 2010 13:48:23 -0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
	<AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
Message-ID: <CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>


On Sep 20, 2010, at 10:34 AM, ruslan usifov wrote:

> I implement specific proxy server, so after analyze i think that this happens if client disconnected from server, but server already made connection to proxied service, so call resumeProducing() (in connectionMade ), throws exception (because socket already closed)  "file descriptor can not be a negative integer (-1)"
> 
> So this looks like my bug 

I think I understand what you mean, but could you express this as a simple Python program rather than an english sentence, so that I can be sure?

Thanks!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100920/e338fcd5/attachment-0001.html>

From james at mansionfamily.plus.com  Tue Sep 21 14:45:13 2010
From: james at mansionfamily.plus.com (James Mansion)
Date: Tue, 21 Sep 2010 21:45:13 +0100
Subject: [Twisted-Python] Python 3
Message-ID: <4C991959.1070003@mansionfamily.plus.com>

I found it hard to tell what the level of support is for Python 3 - 
particularly on 64 bit Windows 7.

I found some tickets in trac, but othewise no clear statement.

Is Twisted 10.x OK on Python 3?

James




From itamar at itamarst.org  Tue Sep 21 14:53:44 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 21 Sep 2010 16:53:44 -0400 (EDT)
Subject: [Twisted-Python] Python 3
In-Reply-To: <4C991959.1070003@mansionfamily.plus.com>
References: <4C991959.1070003@mansionfamily.plus.com>
Message-ID: <10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>

> I found it hard to tell what the level of support is for Python 3 -
> particularly on 64 bit Windows 7.
>
> I found some tickets in trac, but othewise no clear statement.
>
> Is Twisted 10.x OK on Python 3?

No. Supporting Python 3 takes a large amount of effort which, as a mostly
volunteer driven organization, Twisted cannot afford at the moment.

This is the reason most Python projects in general are still only
supporting Python 2 (those written in C are an exception because the
switch is easier).




From glyph at twistedmatrix.com  Tue Sep 21 15:38:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Sep 2010 17:38:40 -0400
Subject: [Twisted-Python] Python 3
In-Reply-To: <10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>
References: <4C991959.1070003@mansionfamily.plus.com>
	<10967.63.107.91.99.1285102424.squirrel@webmail.zoteca.com>
Message-ID: <96B76786-508B-4BF6-8845-4EA388D1A9ED@twistedmatrix.com>


On Sep 21, 2010, at 4:53 PM, Itamar Turner-Trauring wrote:

> No. Supporting Python 3 takes a large amount of effort which, as a mostly
> volunteer driven organization, Twisted cannot afford at the moment.

However, as a volunteer driven organization, you may change this at any time by simply volunteering :).

Something vaguely resembling a transition plan is here: <http://stackoverflow.com/questions/172306/how-are-you-planning-on-handling-the-migration-to-python-3/214601#214601>  (Note especially step 3.)

If you want to become a Twisted developer, just read <http://twistedmatrix.com/trac/wiki/TwistedDevelopment> and <http://twistedmatrix.com/trac/wiki/ReviewProcess>.

Pick up some existing tickets - in order to work on python 3, we first need to have zero warnings on python 2, so tickets to eliminate warnings are a good place to begin.  <http://bit.ly/easy-twisted-tickets> usually contains some good things for newcomers.

I hope you'll help out!



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100921/d62a6e0d/attachment-0001.html>

From lvh at laurensvh.be  Tue Sep 21 15:43:26 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 21 Sep 2010 23:43:26 +0200
Subject: [Twisted-Python] Python 3
In-Reply-To: <4C991959.1070003@mansionfamily.plus.com>
References: <4C991959.1070003@mansionfamily.plus.com>
Message-ID: <AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>

Nope.

It wouldn't be excessively hard to do, once some of the sillier missing
methods on bytes objects are fixed -- it's just not very much of a priority.
Twisted is used for a lot of production apps which often aren't even
deployed on recent versions of 2.x, let alone 3.x, so supporting 2.x
properly is far more a priority than supporting 3.x.

64 bit vs 32 bit shouldn't be a problem since Twisted is just Python.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100921/22a18288/attachment.html>

From glyph at twistedmatrix.com  Tue Sep 21 16:31:37 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Sep 2010 18:31:37 -0400
Subject: [Twisted-Python] Python 3
In-Reply-To: <AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>
References: <4C991959.1070003@mansionfamily.plus.com>
	<AANLkTi=pVsinPxuH1bDq7=Fe63U=bafPXTTRWPJ3BWDJ@mail.gmail.com>
Message-ID: <5348FC0B-BD38-4F8E-A94A-A6892D3CCF31@twistedmatrix.com>


On Sep 21, 2010, at 5:43 PM, Laurens Van Houtven wrote:

> 64 bit vs 32 bit shouldn't be a problem since Twisted is just Python.

That's not accurate at all, since there are lots of places that Python can be broken (the struct module, in particular) with respect to 64-bit.  Plus, Twisted has a little bit of C code here and there.

Luckily, we have 64-bit supported buildbots, so we don't have any of those problems :).  See <http://buildbot.twistedmatrix.com/boxes-supported?branch=trunk>.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100921/d1ec1265/attachment.html>

From xieweikai at gmail.com  Wed Sep 22 01:52:20 2010
From: xieweikai at gmail.com (Weikai Xie)
Date: Wed, 22 Sep 2010 15:52:20 +0800
Subject: [Twisted-Python] How to cap the buffering size of data to be sent
	in Protocol class
Message-ID: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>

Folks,
    I have a server program which basically use a protocol.Protocol
class to send a continuous byte stream  to clients on TCP connections.
 However, I found , for whatever reason, if a client hung up and
failed to remove the data from its receiving socket buffer, then the
memory usage of the server program will go up endlessly.

    I think it is because the TCP sendQ buffer of the svr  was
building up as a result of  the other side does not remove the data
from its recvQ buffer (this guess was verified by the output of the
netstat command), which in turn results the twisted Protocol to buffer
the data submitted by upper layer via transport.write() to its
internal buffer.

    My questions is that whether there is any mechanism in Twisted
which can be used to set the maximum buffering size of the Protocol;
and whenever if this cap is reached, I can be informed to give a
chance to know the client is experiencing problem


Regards.

Weikai Xie



From p.mayers at imperial.ac.uk  Wed Sep 22 02:32:03 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Sep 2010 09:32:03 +0100
Subject: [Twisted-Python] How to cap the buffering size of data to be
 sent	in Protocol class
In-Reply-To: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>
References: <AANLkTi=bUpEJWVMDwuQsRs_tk+OXHEy_UzKk14UENaOR@mail.gmail.com>
Message-ID: <4C99BF03.8020202@imperial.ac.uk>

On 09/22/2010 08:52 AM, Weikai Xie wrote
>      My questions is that whether there is any mechanism in Twisted
> which can be used to set the maximum buffering size of the Protocol;
> and whenever if this cap is reached, I can be informed to give a
> chance to know the client is experiencing problem

You need to implement a producer/consumer interface. I'm not very 
familiar with them, but there have been good examples in the past.

Basically your data source should be a producer and the protocol should 
be a consumer. When the protocol (consumer) buffer is full, it'll notify 
the producer to stop producing.



From landreville at deadtreepages.com  Wed Sep 22 10:42:12 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 22 Sep 2010 12:42:12 -0400
Subject: [Twisted-Python] State of snmp
Message-ID: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>

Hello,

What is the current recommended (or most popular) way of using SNMP
with Twisted?

I have tried TwistedSNMP, but it seems to only work with an old
version of pysnmp that I can't find -- the TwistedSNMP website says
pysnmp version 3.x, but pysnmp's website says the latest version is
2.x.  I saw that there is a package in Ubuntu called python-pynetsnmp
which contains bindings for netsnmp and somehow integrates it into
twisted, but I cannot find this outside of Ubuntu's packages (I don't
use Ubuntu) . The pynetsnmp website on sourceforge has no files to
download, so I don't think that is source for the package.

Thanks,
Landreville



From ilya at glas.net  Wed Sep 22 10:48:56 2010
From: ilya at glas.net (Ilya Etingof)
Date: Wed, 22 Sep 2010 20:48:56 +0400 (MSD)
Subject: [Twisted-Python] State of snmp
In-Reply-To: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
References: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.1009222047060.8609@cray.glas.net>


You may want to take a look at pysnmp 4.x, which has Twisted binding 
built-in.

> What is the current recommended (or most popular) way of using SNMP
> with Twisted?
>
> I have tried TwistedSNMP, but it seems to only work with an old
> version of pysnmp that I can't find -- the TwistedSNMP website says
> pysnmp version 3.x, but pysnmp's website says the latest version is
> 2.x.  I saw that there is a package in Ubuntu called python-pynetsnmp
> which contains bindings for netsnmp and somehow integrates it into
> twisted, but I cannot find this outside of Ubuntu's packages (I don't
> use Ubuntu) . The pynetsnmp website on sourceforge has no files to
> download, so I don't think that is source for the package.



From ruslan.usifov at gmail.com  Wed Sep 22 11:06:07 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 22 Sep 2010 21:06:07 +0400
Subject: [Twisted-Python] file descriptor cannot be a negative integer
	(-1)
In-Reply-To: <CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>
References: <AANLkTimb-5c+EwUUxQsRLfGrsqMEowmPzRWhWqyaiFUi@mail.gmail.com>
	<20100917222826.2058.841102315.divmod.xquotient.558@localhost.localdomain>
	<AANLkTikU-Df20Fm93irMFhk2S9yddKbX1UqPh05K=m2n@mail.gmail.com>
	<8584CBDA-1993-42B0-923D-96CD4928FE63@twistedmatrix.com>
	<AANLkTimV9A5JTT75d45FSTr3WdHoUMGPzFgMEjN-WQ_5@mail.gmail.com>
	<CE49855B-EC31-4D1C-9D0B-42431574883E@twistedmatrix.com>
Message-ID: <AANLkTimXU3TO-sM-rOAPSX_Y8MQxb2nweJKSDn1BXxMj@mail.gmail.com>

ok i provide sample till the end of this week

2010/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2010, at 10:34 AM, ruslan usifov wrote:
>
> I implement specific proxy server, so after analyze i think that this
> happens if client disconnected from server, but server already made
> connection to proxied service, so call resumeProducing() (in connectionMade
> ), throws exception (because socket already closed)  "file descriptor can
> not be a negative integer (-1)"
>
> So this looks like my bug
>
>
> I *think* I understand what you mean, but could you express this as a
> simple Python program rather than an english sentence, so that I can be
> sure?
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100922/906a2b87/attachment-0001.html>

From ruslan.usifov at gmail.com  Wed Sep 22 11:09:33 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 22 Sep 2010 21:09:33 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
Message-ID: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>

Hello! Sorry for my bad English!

Can anybody provide some samples how to implement Graceful restart in
twisted?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100922/bdf82772/attachment.html>

From ted.pederson at gmail.com  Wed Sep 22 11:47:11 2010
From: ted.pederson at gmail.com (Ted Pederson)
Date: Wed, 22 Sep 2010 10:47:11 -0700
Subject: [Twisted-Python] High traffic connection issue
Message-ID: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>

Trying to do some scalability testing on my first twisted server.

When I have hundreds of connections and moments of very high server activity
I am seeing that clients are unable to connect.

Here are some numbers: 250 open TCP connections. I see 857 operations in my
log during the second where a new client tries to connect. In the client log
I see that connectionMade() is called. I am pretty sure I don't see a
corresponding connectionMade() on the server side (could this be right?).

Then, about a second later I get a connectionLost() on the client with
'Connection to the other side was lost in a non-clean fashion'.

Is this to be expected? Should the client just be expected to retry?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100922/6374836c/attachment.html>

From exarkun at twistedmatrix.com  Wed Sep 22 12:38:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Sep 2010 18:38:51 -0000
Subject: [Twisted-Python] High traffic connection issue
In-Reply-To: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>
References: <AANLkTim-tDiL_9Zq1PD-XpPKsZ7NYFCipJ=0=mjoSqdq@mail.gmail.com>
Message-ID: <20100922183851.2058.2084885789.divmod.xquotient.628@localhost.localdomain>

On 05:47 pm, ted.pederson at gmail.com wrote:
>Trying to do some scalability testing on my first twisted server.
>
>When I have hundreds of connections and moments of very high server 
>activity
>I am seeing that clients are unable to connect.
>
>Here are some numbers: 250 open TCP connections. I see 857 operations 
>in my
>log during the second where a new client tries to connect. In the 
>client log
>I see that connectionMade() is called. I am pretty sure I don't see a
>corresponding connectionMade() on the server side (could this be 
>right?).
>
>Then, about a second later I get a connectionLost() on the client with
>'Connection to the other side was lost in a non-clean fashion'.
>
>Is this to be expected? Should the client just be expected to retry?

This depends a lot on what your server does, as well as what platform 
you're running it on.  If all your server does is accept TCP connections 
and ignore data received from them, and you're on Linux and using 
epollreactor, then I would expect you to have no problems up into the 
tens of thousands of connections range.  On the other hand, if you check 
an RSA signature for every new connection, and you're on Windows using 
win32eventreactor, I would expect failures once you get to a few dozen 
connections.

Jean-Paul



From exarkun at twistedmatrix.com  Wed Sep 22 12:45:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Sep 2010 18:45:09 -0000
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
Message-ID: <20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>

On 05:09 pm, ruslan.usifov at gmail.com wrote:
>Hello! Sorry for my bad English!
>
>Can anybody provide some samples how to implement Graceful restart in
>twisted?

There's no special way to do this with Twisted.  Perhaps the comments on 
http://twistedmatrix.com/trac/ticket/4072 will help you, though.

Jean-Paul



From landreville at deadtreepages.com  Wed Sep 22 13:02:38 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 22 Sep 2010 15:02:38 -0400
Subject: [Twisted-Python] State of snmp
In-Reply-To: <alpine.LNX.2.00.1009222047060.8609@cray.glas.net>
References: <AANLkTimj8RLpTpZjcjhGJkWsMRCh=wR=Yvy3MWGMxJqo@mail.gmail.com>
	<alpine.LNX.2.00.1009222047060.8609@cray.glas.net>
Message-ID: <AANLkTimRbGm7K5eN=CB62sKcn3QWi73zZ2tX_2JfoDED@mail.gmail.com>

On Wed, Sep 22, 2010 at 12:48 PM, Ilya Etingof <ilya at glas.net> wrote:
>
> You may want to take a look at pysnmp 4.x, which has Twisted binding
> built-in.
>
>> What is the current recommended (or most popular) way of using SNMP
>> with Twisted?
>>
>> I have tried TwistedSNMP, but it seems to only work with an old
>> version of pysnmp that I can't find -- the TwistedSNMP website says
>> pysnmp version 3.x, but pysnmp's website says the latest version is
>> 2.x.  I saw that there is a package in Ubuntu called python-pynetsnmp
>> which contains bindings for netsnmp and somehow integrates it into
>> twisted, but I cannot find this outside of Ubuntu's packages (I don't
>> use Ubuntu) . The pynetsnmp website on sourceforge has no files to
>> download, so I don't think that is source for the package.

pysnmp works well.
Here is the page with the example for working with Twisted in PySNMP
http://pysnmp.sourceforge.net/examples/4.x/v3arch/twisted/manager/getgen.html

If you are using version 1 or 2 you have to change the addTargetParams
call to: config.addTargetParams(snmpEngine, 'myParams', 'test-agent',
'noAuthNoPriv', 1)



From ruslan.usifov at gmail.com  Thu Sep 23 13:23:09 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 23 Sep 2010 23:23:09 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
Message-ID: <AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>

Hello

First of all sorry for my bad english

I don't think that this tikeе suit fro me:-(

When i said Graceful i mean net behaviour:

1). Server doesn't  break already connected clients. Wait while they all
ends and only afte then dies
2). Respawn new workers with new reread config, which will service all next
requests


All this looks like Apache Graceful Restart
http://httpd.apache.org/docs/2.0/en/stopping.html


2010/9/22 <exarkun at twistedmatrix.com>

> On 05:09 pm, ruslan.usifov at gmail.com wrote:
> >Hello! Sorry for my bad English!
> >
> >Can anybody provide some samples how to implement Graceful restart in
> >twisted?
>
> There's no special way to do this with Twisted.  Perhaps the comments on
> http://twistedmatrix.com/trac/ticket/4072 will help you, though.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100923/47ea527a/attachment.html>

From exarkun at twistedmatrix.com  Thu Sep 23 13:36:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 23 Sep 2010 19:36:56 -0000
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
	<AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
Message-ID: <20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>

On 07:23 pm, ruslan.usifov at gmail.com wrote:
>Hello
>
>First of all sorry for my bad english
>
>I don't think that this tikeC5 suit fro me:-(
>
>When i said Graceful i mean net behaviour:
>
>1). Server doesn't  break already connected clients. Wait while they 
>all
>ends and only afte then dies
>2). Respawn new workers with new reread config, which will service all 
>next
>requests
>
>
>All this looks like Apache Graceful Restart
>http://httpd.apache.org/docs/2.0/en/stopping.html

This is application-specific behavior that you'll have to implement 
yourself.

Jean-Paul



From ruslan.usifov at gmail.com  Thu Sep 23 13:49:28 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Thu, 23 Sep 2010 23:49:28 +0400
Subject: [Twisted-Python] Graceful/Hitless restart
In-Reply-To: <20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>
References: <AANLkTimjJzLR5P889E2EbCCycNO=847F2PH6QztrE0bP@mail.gmail.com>
	<20100922184509.2058.734494125.divmod.xquotient.631@localhost.localdomain>
	<AANLkTim1Hs2xEeksDSvZYe1_w_N+uHnjHuU9eQOMw8fw@mail.gmail.com>
	<20100923193656.2058.1991529929.divmod.xquotient.644@localhost.localdomain>
Message-ID: <AANLkTi=0Z4+jyZbuvcJkLkfpUZ0Z9k-NY6Bx8iaidu0m@mail.gmail.com>

I know, i have simply hope that anybody solved a similar problem and could
share source codes :-)))


This is application-specific behavior that you'll have to implement
> yourself.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100923/bc2dbbb1/attachment.html>

From cournape at gmail.com  Thu Sep 23 19:49:24 2010
From: cournape at gmail.com (David Cournapeau)
Date: Fri, 24 Sep 2010 10:49:24 +0900
Subject: [Twisted-Python] How to exit a twistd program with a status code ?
Message-ID: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>

Hi,

I have a program run through twistd, and would like to exit with a non
zero status code on some error. I have a callback which stops the
reactor and then sys.exit(some_value), but twistd still seems to catch
the SystemExit exception after calling for reactor.stop():

Unhandled error in Deferred:
Traceback (most recent call last):
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/base.py",
line 1031, in connectionFailed
    self.factory.clientConnectionFailed(self, reason)
  File "/home/david/local/lib/python2.6/site-packages/twisted/web/client.py",
line 350, in clientConnectionFailed
    self.deferred.errback(reason)
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 307, in errback
    self._startRunCallbacks(fail)
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 354, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
line 371, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "scripts/tests/run_tests.py", line 69, in exit_on_error
    sys.exit(1)
exceptions.SystemExit: 1

What's the correct way of doing this ?

cheers,

David



From zooko at zooko.com  Fri Sep 24 01:57:21 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Fri, 24 Sep 2010 01:57:21 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.0
Message-ID: <AANLkTimuZjukZ7bXeM7CbWzeMsrc_dg2rP7_Rg-ew5zE@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.0

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.0 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" — meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.7.1, which was
released July 18, 2010 [1].

v1.8.0 offers greatly improved performance and fault-tolerance
of downloads and improved Windows support. See the NEWS file
[2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.txt file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the eleventh release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the fifth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

September 23, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4579
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4732
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4591
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/



From ypercube at gmail.com  Fri Sep 24 05:09:08 2010
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Fri, 24 Sep 2010 14:09:08 +0300
Subject: [Twisted-Python] How to exit a twistd program with a status
	code ?
In-Reply-To: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
Message-ID: <AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>

I think that you should not put the sys.exit(1) call, after the
reactor.stop() call.
>From my very limited understanding of how Twisted reactor works, it could be
done with something like:

    statusCode = 1 #or whatever
    reactor.stop()

in the method that stops the reactor

and the exit call should be added where (after) the reactor is started:

    reactor.run()
    # this will be executed after reactor stops
    sys.exit(statusCode)

Please, correct me if I write nonsense here.

Pandelis Theodosiou

On Fri, Sep 24, 2010 at 4:49 AM, David Cournapeau <cournape at gmail.com>wrote:

> Hi,
>
> I have a program run through twistd, and would like to exit with a non
> zero status code on some error. I have a callback which stops the
> reactor and then sys.exit(some_value), but twistd still seems to catch
> the SystemExit exception after calling for reactor.stop():
>
> Unhandled error in Deferred:
> Traceback (most recent call last):
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/base.py",
> line 1031, in connectionFailed
>    self.factory.clientConnectionFailed(self, reason)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/web/client.py",
> line 350, in clientConnectionFailed
>    self.deferred.errback(reason)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 307, in errback
>    self._startRunCallbacks(fail)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 354, in _startRunCallbacks
>    self._runCallbacks()
> --- <exception caught here> ---
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 371, in _runCallbacks
>    self.result = callback(self.result, *args, **kw)
>  File "scripts/tests/run_tests.py", line 69, in exit_on_error
>    sys.exit(1)
> exceptions.SystemExit: 1
>
> What's the correct way of doing this ?
>
> cheers,
>
> David
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100924/fea51209/attachment.html>

From andrew at bemusement.org  Fri Sep 24 05:31:18 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Fri, 24 Sep 2010 21:31:18 +1000
Subject: [Twisted-Python] How to exit a twistd program with a status
 code ?
In-Reply-To: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
Message-ID: <20100924113118.GC2633@aihal.home.puzzling.org>

David Cournapeau wrote:
> Hi,
> 
> I have a program run through twistd, and would like to exit with a non
> zero status code on some error. I have a callback which stops the
> reactor and then sys.exit(some_value), but twistd still seems to catch
> the SystemExit exception after calling for reactor.stop():

This isn't a good answer, exactly, but it may do the trick...

import os
reactor.addSystemEventTrigger('after', 'shutdown', os._exit, some_value)
reactor.stop()

I'm not sure that controlling the process exit value really fits nicely
with twistd's purpose, though.

-Andrew.




From exarkun at twistedmatrix.com  Fri Sep 24 06:43:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Sep 2010 12:43:23 -0000
Subject: [Twisted-Python] How to exit a twistd program with a status
	code ?
In-Reply-To: <AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>
	<AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
Message-ID: <20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>

On 11:09 am, ypercube at gmail.com wrote:
>I think that you should not put the sys.exit(1) call, after the
>reactor.stop() call.
>> From my very limited understanding of how Twisted reactor works, it 
>>could be
>done with something like:
>
>    statusCode = 1 #or whatever
>    reactor.stop()
>
>in the method that stops the reactor
>
>and the exit call should be added where (after) the reactor is started:
>
>    reactor.run()
>    # this will be executed after reactor stops
>    sys.exit(statusCode)
>
>Please, correct me if I write nonsense here.

Your understanding seems correct to me. :)  This is basically how the 
feature would be implemented.  Since David is using `twistd` though, he 
doesn't get to put extra code after the `reactor.run()` call.

http://twistedmatrix.com/trac/ticket/2182 is a ticket for adding a 
feature to `twistd` to make this easier.

Jean-Paul



From general at vultaire.net  Fri Sep 24 07:39:23 2010
From: general at vultaire.net (Paul Goins)
Date: Fri, 24 Sep 2010 22:39:23 +0900
Subject: [Twisted-Python] How to exit a twistd program with a
 status	code ?
In-Reply-To: <20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>
References: <AANLkTim9htMie9Zx48WsyF+mP2La9zmRd8-e+ei7bSfj@mail.gmail.com>	<AANLkTimtZzxxRBXqen3o3XaESeWcsEzPwdMZLgG54fDF@mail.gmail.com>
	<20100924124323.2058.1981506504.divmod.xquotient.665@localhost.localdomain>
Message-ID: <4C9CAA0B.1050309@vultaire.net>

I'd like to add my two cents here; maybe this may be valuable to someone.

I might suggest, if reasonable, to allow for running the app with or 
without twistd.  twistd is really handy for 
profiling/debugging/daemonizing/etc., but it does lack in other areas 
such as command line args and (new to me) return codes.


The last few apps I've done, I've set up a standard Python entry point like:

   #!/usr/bin/env python
   from twisted.internet import reactor
   from myapp import main

   if __name__ == "__main__":
       # For quick/easy logging when running undaemonized
       log.startLogging(sys.stdout)

       reactor.callWhenRunning(main)
       reactor.run()


Along with something for creating the application object in .tac files:

   from twisted.application.service import Application
   from twisted.internet import reactor
   from twisted.python.syslog import SyslogObserver
   from myapp import main

   def create_application():
       app = Application("foo")

       # More robust logging for daemonized (production) mode
       observer = SyslogObserver("bar")
       app.setComponent(ILogObserver, observer.emit)

       reactor.callWhenRunning(main)
       return app


And then, you end up with possibly a really simple .tac file:

   import myapp.tacapp
   application = myapp.tacapp.create_application()


That seems to give the best of both worlds from what I've seen.  Haven't 
seen any key drawbacks yet.

- Paul Goins



From exarkun at twistedmatrix.com  Sat Sep 25 10:06:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 25 Sep 2010 16:06:30 -0000
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <1284247101.2007.1.camel@localhost>
References: <1284247101.2007.1.camel@localhost>
Message-ID: <20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>

On 11 Sep, 11:18 pm, therve at free.fr wrote:
>It's this time of the year again! From the dangerous and intrepid land
>of Montr�al, Canada, I have the pleasure to announce the first 10.2.0
>pre-release.
>
>Tarballs for Twisted 10.2.0pre1 are now available at:
>  http://people.canonical.com/~therve/Twisted/10.2.0pre1/
>
>
>Highlights include:
>
>* A new implementation of the Deferred callbacks firing, which now
>handles chains iteratively instead of recursively, and should prevent
>recursion errors.
>
>* Deferred.setTimeout has finally been removed.

Maybe we can also mention the new email auth example and the 
spawnProcess optimization?  Or a few other issues that seem interesting. 
The Deferred changes are cool, but only having two highlights for the 
release seems weak.
>And the usual load of bug fixes. For more information, see the NEWS 
>file.
>
>
>Please download the tarballs and test them as much as possible. I
>intend to do a final release within the next 2 weeks, if I didn't die
>by ingestion of poutine.

I did a user install (without setuptools) on Ubuntu 9.10.  Some 
observations:

  * #4503 was misclassified as a core bug, but it's a words bug.
  * There are still .doc files in the topfiles directories
  * There are two trial test failures, apparently the ones fixed by #4608
  * The topfiles directories all get installed
  * twisted/web/test/test_util.py appears to be missing

Aside from the two trial failures the test suite passes.  I'm installing 
this on my mail server now, I'll post again if I run into any troubles 
there.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Sep 25 22:05:21 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Sep 2010 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1285473921.36.1509890443@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100926/b27e315b/attachment-0001.html>

From xieweikai at gmail.com  Sun Sep 26 00:23:05 2010
From: xieweikai at gmail.com (Weikai Xie)
Date: Sun, 26 Sep 2010 14:23:05 +0800
Subject: [Twisted-Python] how to abort a Protocol connection
Message-ID: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>

Folks,
    I have a usage case where the server need to abort a client TCP
connection (implemented by Protocol) immediately. However, the normal
Protocol.transport.loseConnection() will try to send pending data to
the client first before close the connection.
    Currently I used an ugly hack to work around it, where I set
Protocol.transport._writeDisconnected=True before call
Protocol.transport.loseConnection() , which can fool the
loseConnection to  give up writing pending data. But I think there
should be some more elegant way to do it. Any idea?


Regards.

Weikai Xie



From exarkun at twistedmatrix.com  Sun Sep 26 20:39:00 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 27 Sep 2010 02:39:00 -0000
Subject: [Twisted-Python] how to abort a Protocol connection
In-Reply-To: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>
References: <AANLkTi=hG8+j5T4-ZNpTwvpTvVd3+L6L6yiMB2cZyUpF@mail.gmail.com>
Message-ID: <20100927023900.4943.1650235315.divmod.xquotient.4@localhost.localdomain>

On 26 Sep, 06:23 am, xieweikai at gmail.com wrote:
>Folks,
>    I have a usage case where the server need to abort a client TCP
>connection (implemented by Protocol) immediately. However, the normal
>Protocol.transport.loseConnection() will try to send pending data to
>the client first before close the connection.
>    Currently I used an ugly hack to work around it, where I set
>Protocol.transport._writeDisconnected=True before call
>Protocol.transport.loseConnection() , which can fool the
>loseConnection to  give up writing pending data. But I think there
>should be some more elegant way to do it. Any idea?

Unfortunately the best answer I have is a reference to an open ticket:

  http://twistedmatrix.com/trac/ticket/78

The feature you want seems to be largely implemented in a branch 
associated with that ticket, but seems to be blocked by some Windows/SSL 
issues.

Jean-Paul



From jml at mumak.net  Mon Sep 27 06:33:38 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Sep 2010 13:33:38 +0100
Subject: [Twisted-Python] Announcing Twisted 10.1.0pre2!
In-Reply-To: <20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>
References: <1284247101.2007.1.camel@localhost>
	<20100925160630.2058.810049457.divmod.xquotient.729@localhost.localdomain>
Message-ID: <AANLkTi=D0LGMwBG39V2+4UXbLW10Z+FEXTB9eisHbXgQ@mail.gmail.com>

On Sat, Sep 25, 2010 at 5:06 PM,  <exarkun at twistedmatrix.com> wrote:
...
> I did a user install (without setuptools) on Ubuntu 9.10.  Some
> observations:
>
>  * #4503 was misclassified as a core bug, but it's a words bug.
>  * There are still .doc files in the topfiles directories

This sounds like a bug in the release process or in the tools
themselves. Thomas, would you be able to file a bug about this?

>  * The topfiles directories all get installed
>  * twisted/web/test/test_util.py appears to be missing
>

Likewise, these seem to be bugs in release tools.

> Aside from the two trial failures the test suite passes.  I'm installing
> this on my mail server now, I'll post again if I run into any troubles
> there.
>

Thanks for testing.

jml



From landreville at deadtreepages.com  Mon Sep 27 08:45:56 2010
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 27 Sep 2010 10:45:56 -0400
Subject: [Twisted-Python] Handling too many open file descriptors
Message-ID: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>

I'm running an application that makes about 1300 snmp connections
every minute; I'm using utils.getProcessOutput with snmpget because
pysnmp throws an error when I try to run it. Now of course I get the
Too many open files error, but is the best way to handle this
increasing the limit on Linux or by implementing some sort of queue so
that there are only x number of the snmpget processes at a time? Is
there such a queue feature in twisted?


Thanks,

Jason



From arjan at scherpenisse.net  Mon Sep 27 08:52:58 2010
From: arjan at scherpenisse.net (Arjan Scherpenisse)
Date: Mon, 27 Sep 2010 16:52:58 +0200
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
Message-ID: <4CA0AFCA.9080700@scherpenisse.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Looks like a DeferredSemaphore might be your solution. Have a look at
this article, which explains that + a lot more:

http://oubiwann.blogspot.com/2008/06/async-batching-with-twisted-walkthrough.html

Arjan


On 09/27/2010 04:45 PM, Landreville wrote:
> I'm running an application that makes about 1300 snmp connections
> every minute; I'm using utils.getProcessOutput with snmpget because
> pysnmp throws an error when I try to run it. Now of course I get the
> Too many open files error, but is the best way to handle this
> increasing the limit on Linux or by implementing some sort of queue so
> that there are only x number of the snmpget processes at a time? Is
> there such a queue feature in twisted?
> 
> 
> Thanks,
> 
> Jason
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAkygr8cACgkQigE4AbflYeoQMACdHfBS6lEA5qZnkgy/0qzBuW5V
fnwAoLFSTSU4uogGToqDF6l8eYv+WUpP
=5H8w
-----END PGP SIGNATURE-----



From exarkun at twistedmatrix.com  Mon Sep 27 08:53:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 27 Sep 2010 14:53:39 -0000
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
Message-ID: <20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>

On 02:45 pm, landreville at deadtreepages.com wrote:
>I'm running an application that makes about 1300 snmp connections
>every minute; I'm using utils.getProcessOutput with snmpget because
>pysnmp throws an error when I try to run it. Now of course I get the
>Too many open files error, but is the best way to handle this
>increasing the limit on Linux or by implementing some sort of queue so
>that there are only x number of the snmpget processes at a time? Is
>there such a queue feature in twisted?

It doesn't seem likely to me that it's useful to have a thousand smtpget 
processes running at once.  But who knows, maybe it is.  To actually 
know, you'll have to decide what your requirements are (how many do you 
actually have to run in parallel to get the throughput you need?  how 
hard are you willing to thrash the machine you're running on?) and then 
measure various approaches and configurations.

If you decide you want to limit the number of snmpget processes you 
launch, then you might find twisted.internet.defer.DeferredSemaphore 
useful (and since the API docs for it are messed up, make sure you find 
the "run" method, not just the "acquire" and "release" methods).

Jean-Paul



From landreville at deadtreepages.com  Mon Sep 27 09:52:49 2010
From: landreville at deadtreepages.com (Landreville)
Date: Mon, 27 Sep 2010 11:52:49 -0400
Subject: [Twisted-Python] Handling too many open file descriptors
In-Reply-To: <20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>
References: <AANLkTikLM5KpVZX2==ju0fJnarqCYGpag0UjzWOD1ty9@mail.gmail.com>
	<20100927145339.4943.1346464266.divmod.xquotient.15@localhost.localdomain>
Message-ID: <AANLkTi=guZJ65X-sVbt1sr--dADh3x2DeWfUDpRJ6+v=@mail.gmail.com>

On Mon, Sep 27, 2010 at 10:53 AM,  <exarkun at twistedmatrix.com> wrote:
> On 02:45 pm, landreville at deadtreepages.com wrote:
>>I'm running an application that makes about 1300 snmp connections
>>every minute; I'm using utils.getProcessOutput with snmpget because
>>pysnmp throws an error when I try to run it. Now of course I get the
>>Too many open files error, but is the best way to handle this
>>increasing the limit on Linux or by implementing some sort of queue so
>>that there are only x number of the snmpget processes at a time? Is
>>there such a queue feature in twisted?
>
> It doesn't seem likely to me that it's useful to have a thousand smtpget
> processes running at once.  But who knows, maybe it is.  To actually
> know, you'll have to decide what your requirements are (how many do you
> actually have to run in parallel to get the throughput you need?  how
> hard are you willing to thrash the machine you're running on?) and then
> measure various approaches and configurations.
>
> If you decide you want to limit the number of snmpget processes you
> launch, then you might find twisted.internet.defer.DeferredSemaphore
> useful (and since the API docs for it are messed up, make sure you find
> the "run" method, not just the "acquire" and "release" methods).
>
> Jean-Paul
>

I've got to get two values (but both can be grabbed at the same time
with snmpget) from each of the interfaces (and inserted into database)
every minute. The machine is dedicated to this, so its cool with the
processing. The only thing is finding out how much parallelism I need
to get each one every minute. Technically I don't need any  parallel
processing right now as I can grab them serially in just under a
minute (bash script) but there will be more interfaces added
periodically so I need to get the fetch time down a little bit.

I'm already playing with deferred semaphore which is neat, but I
haven't looked at the stats for the fetching yet (whether it succeeds
in grabbing the value every minute)



From powdahound at gmail.com  Mon Sep 27 21:15:15 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Mon, 27 Sep 2010 20:15:15 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
	when using pseudo terminal
Message-ID: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>

To me this seems like a very strange problem and I've tried to debug it best
I can but I don't know much about many of the components at work. Here's
what happened:

I've been happily using Capistrano to deploy many twistd services to Ubuntu
9.04 machines. It restarts them via an init.d script based off this
template: http://twistedmatrix.com/trac/attachment/ticket/3434/twistdplugin.
I'm running a self-installed Twisted 8.2.0 on both systems with some small
tweaks to logging.

On newer Ubuntu 10.04 machines I've been deploying to the twistd services
don't restart properly. There are no errors in the log. The only log lines
I'd get were:
[-] Log opened.
[-] twistd 8.2.0 (/usr/bin/python 2.6.5) starting up.
[-] reactor class: twisted.internet.epollreactor.EPollReactor.

But they were only failing to restart when run via Capistrano. I realized
that the only difference was that Capistrano was using a pseudo terminal
when it issued its commands. To recreate the problem without Capistrano I
can run:
> ssh -t user at host "/etc/init.d/service start"

But it works fine when I run:
> ssh user at host "/etc/init.d/service start"

The 3 log lines I see in the failed case are written by twistd before it
forks (clone() syscall) to create the daemon process. The strace dump of
twistd when run with and without pseudo terminal were identical. I tried
running strace with the -f option to get some info about the child process
but it didn't fail in that case since I guess it doesn't actually fork.
Running in a pseudo terminal with --nodaemon passed to twistd also works
fine.

I've tested this with multiple twistd services and am having the same issue
with all of them.

Any ideas? Did I completely misdiagnose the problem? Has there been some
change in this area between Twisted 8.2.0 and 10.x? I'm certainly confused.
:)

- Garret
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100927/9e6867ef/attachment-0001.html>

From orsenthil at gmail.com  Tue Sep 28 04:16:47 2010
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Tue, 28 Sep 2010 15:46:47 +0530
Subject: [Twisted-Python] getProcessOutput - Can it be made to return
	'output' instead of differed
Message-ID: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>

Hello,

My current application structure is like this:

If something:
   d = defertoThread(func1,params1)
if something2:
   d = defertoThread(func2, params2)
...


d.addCallback(lambda r: transport.write(r)

I had designed it this way because, the functions, func1, func2 etc..
were all assumed to be Blocking ones.
One of them, internally uses subprocess.Popen() and executes the
command and returns the output. All is fine till now.

But I had situation, where for the process which is executed via
subprocess module, I had to attach a pseudo-terminal.
subprocess does not have a mechanism to send a pseudo-terminal to the process.

So, I looked into utils.getProcessOutput and found that it does have a
mechanism to send a psuedo-terminal to the process.
But the problem I am facing is,  if I replace the subprocess Call in
one of those functions (which are called via deferToThread ), I might
need to return the value (in a blocking way) so that it fits in rest
of the program well.


So, my question is, how can I make utils.getProcessOutput return value
instead of a differed. I am okay if it blocks.

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/internet/utils.py

Please let me know if you have any other suggestions. (I am still a
learner here).

TIA,


-- 
Senthil



From exarkun at twistedmatrix.com  Tue Sep 28 06:51:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Sep 2010 12:51:22 -0000
Subject: [Twisted-Python] getProcessOutput - Can it be made to
	return	'output' instead of differed
In-Reply-To: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
References: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
Message-ID: <20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>

On 10:16 am, orsenthil at gmail.com wrote:
>Hello,
>
>My current application structure is like this:
>
>If something:
>   d = defertoThread(func1,params1)
>if something2:
>   d = defertoThread(func2, params2)
>...
>
>
>d.addCallback(lambda r: transport.write(r)
>
>I had designed it this way because, the functions, func1, func2 etc..
>were all assumed to be Blocking ones.
>One of them, internally uses subprocess.Popen() and executes the
>command and returns the output. All is fine till now.
>
>But I had situation, where for the process which is executed via
>subprocess module, I had to attach a pseudo-terminal.
>subprocess does not have a mechanism to send a pseudo-terminal to the 
>process.
>
>So, I looked into utils.getProcessOutput and found that it does have a
>mechanism to send a psuedo-terminal to the process.
>But the problem I am facing is,  if I replace the subprocess Call in
>one of those functions (which are called via deferToThread ), I might
>need to return the value (in a blocking way) so that it fits in rest
>of the program well.
>
>
>So, my question is, how can I make utils.getProcessOutput return value
>instead of a differed. I am okay if it blocks.

It's "Deferred" not "differed".  You cannot make getProcessOutput return 
anything but a Deferred.  Also, you cannot call getProcessOutput from a 
thread.

If you're removing the code that blocks, then you should be able to stop 
using deferToThread.  Then you just have to call getProcessOutput to get 
your `d` above (or another function that calls it and perhaps adds a 
callback or two).

Jean-Paul



From orsenthil at gmail.com  Tue Sep 28 07:40:53 2010
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Tue, 28 Sep 2010 19:10:53 +0530
Subject: [Twisted-Python] getProcessOutput - Can it be made to return
 'output' instead of differed
In-Reply-To: <20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>
References: <AANLkTiki72Ewu_pssFaDdToS6TyirLb6KYY2O2krQWgM@mail.gmail.com>
	<20100928125122.4943.1846435048.divmod.xquotient.42@localhost.localdomain>
Message-ID: <20100928134053.GA2857@remy>

On Tue, Sep 28, 2010 at 12:51:22PM -0000, exarkun at twistedmatrix.com wrote:
> 
> If you're removing the code that blocks, then you should be able to stop 
> using deferToThread.  Then you just have to call getProcessOutput to get 
> your `d` above (or another function that calls it and perhaps adds a 
> callback or two).

Thanks for the response. I could recognize this option, I just thought
that structurally it might odd as only one of them is a defer from a process while
others will be from thread. But I guess, it does not matter.

I shall try this approach.

Thanks,
Senthil



From chris at simplistix.co.uk  Tue Sep 28 07:48:02 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Tue, 28 Sep 2010 14:48:02 +0100
Subject: [Twisted-Python] how to write a safe catch-all
Message-ID: <4CA1F212.9040305@simplistix.co.uk>

Hi All,

The attached .py file demonstrates a problem I'm having with a little 
scheduler I need to maintain.

The loop() function is supposed to be a "catch all and report" error 
handler. However, when the async code initiated by doStuff throws the 
AttributeError, what actually gets logged is:

2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): 
Unhandled Error
Traceback (most recent call last):
   File "test_looping.py", line 41, in <module>
     reactor.run()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1128, in run
     self.mainLoop()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1137, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 757, in runUntilCurrent
     call.func(*call.args, **call.kw)
   File "test_looping.py", line 24, in __call__
     del self.connector
exceptions.AttributeError: Break instance has no attribute 'connector'

2010-09-28 14:41:15,707 ERROR   : log         (14757|7f691ba676e0): 
Unhandled scheduled exception
Traceback (most recent call last):
   File "test_looping.py", line 41, in <module>
     reactor.run()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1128, in run
     self.mainLoop()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", 
line 1137, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "test_looping.py", line 35, in loop
     yield doStuff()
exceptions.GeneratorExit:

But, more crucially, the looping call then appears to stop.
What can I do to get the exception logged and then everything handled 
sanely such that the looping call can continue and my lopp function will 
keep getting called once every second rather than stopping?

cheers,

Chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_looping.py
URL: </pipermail/twisted-python/attachments/20100928/650d8b7a/attachment.ksh>

From exarkun at twistedmatrix.com  Tue Sep 28 08:21:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Sep 2010 14:21:51 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA1F212.9040305@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
Message-ID: <20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>

On 01:48 pm, chris at simplistix.co.uk wrote:
>Hi All,
>
>The attached .py file demonstrates a problem I'm having with a little 
>scheduler I need to maintain.
>
>The loop() function is supposed to be a "catch all and report" error 
>handler. However, when the async code initiated by doStuff throws the 
>AttributeError, what actually gets logged is:
>
>2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): 
>Unhandled Error
>   File "test_looping.py", line 24, in __call__
>     del self.connector
>exceptions.AttributeError: Break instance has no attribute 'connector'
>
>2010-09-28 14:41:15,707 ERROR   : log         (14757|7f691ba676e0): 
>Unhandled scheduled exception
>   File "test_looping.py", line 35, in loop
>     yield doStuff()
>exceptions.GeneratorExit:
>
>But, more crucially, the looping call then appears to stop.

The function you're looping over returns a Deferred that never fires. 
The LoopingCall isn't stopped, it's waiting for the Deferred.
>What can I do to get the exception logged and then everything handled 
>sanely such that the looping call can continue and my lopp function 
>will keep getting called once every second rather than stopping?

When you do reactor.callLater(n, f), you put f into an execution context 
where the only thing that will happen to exceptions it raises is that 
they will be logged.  If you want something else to happen to the 
exception, then you have to arrange for that.  You can do this by 
wrapping f with another function that handles the exception and sends it 
where you want.  Or you can use twisted.internet.task.deferLater, which 
probably does something pretty close to what you want.

Jean-Paul



From chris at simplistix.co.uk  Wed Sep 29 09:56:21 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 16:56:21 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
Message-ID: <4CA361A5.2090005@simplistix.co.uk>

On 28/09/2010 15:21, exarkun at twistedmatrix.com wrote:
>> But, more crucially, the looping call then appears to stop.
>
> The function you're looping over returns a Deferred that never fires.
> The LoopingCall isn't stopped, it's waiting for the Deferred.

So, inlineCallbacks/generator things will only process errbacks, not 
actual exceptions raised inside asyncronous code called from them?!

>> What can I do to get the exception logged and then everything handled
>> sanely such that the looping call can continue and my lopp function
>> will keep getting called once every second rather than stopping?
>
> When you do reactor.callLater(n, f), you put f into an execution context
> where the only thing that will happen to exceptions it raises is that
> they will be logged.

Okay, the script was a simplification of the "real problem" to try and 
give the list a "smallest failing example to try and help with".

The real logging looks like this:

2010-09-27 15:30:16,340 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled exception sending schedule transmission
Traceback (most recent call last):
   File 
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/python/context.py", line 
37, in callWithContext
     return func(*args,**kw)
   File 
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/selectreactor.py", line 
146, in _doReadOrWrite
     why = getattr(selectable, method)()
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py", 
line 631, in doConnect
     self.failIfNotConnected(error.getConnectError((err, strerror(err))))
   File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py", 
line 588, in failIfNotConnected
     del self.connector
--- <exception caught here> ---
   File "ourcode.py", line 180, in checkSchedule
     yield self.sendTransmissions(...)
exceptions.GeneratorExit:

2010-09-27 15:30:28,428 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled error in Deferred:
2010-09-27 15:30:28,584 ERROR   : log         (24331|7f2e47b4d6e0): 
Unhandled Error
Traceback (most recent call last):
Failure: twisted.protocols.ftp.FTPError: ('Connection Failed', 
<twisted.python.failure.Failure <class 
'twisted.internet.error.ConnectError'>>)

I don't quite follow what the above is trying to tell me, other than an 
FTP connection failed. However, I don't understand why that results in a 
GeneratorExit rather than an errback of the original exception being 
caught by the top level handler in the loop() function (switching back 
to the example terminology for simplicity). I also don't understand why 
an unhandled deferred is being logged rather than fed back into the 
handler I built for it!

> exception, then you have to arrange for that.  You can do this by
> wrapping f with another function that handles the exception and sends it
> where you want.

Well, as far as I can tell, that's what I'm trying to do. However, the 
thing failing in the real world is in code I don't "own" (looks like 
twisted's inards...) and I'd like to be able to cater for any failure, 
unforseen or not (barring say a SyntaxError ;-)) and still have the 
loop() call keep doing its thing.

How can I do that?

Chris



From p.mayers at imperial.ac.uk  Wed Sep 29 10:16:53 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 29 Sep 2010 17:16:53 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA361A5.2090005@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
Message-ID: <4CA36675.5010603@imperial.ac.uk>

On 29/09/10 16:56, Chris Withers wrote:
> On 28/09/2010 15:21, exarkun at twistedmatrix.com wrote:
>>> But, more crucially, the looping call then appears to stop.
>>
>> The function you're looping over returns a Deferred that never fires.
>> The LoopingCall isn't stopped, it's waiting for the Deferred.
>
> So, inlineCallbacks/generator things will only process errbacks, not
> actual exceptions raised inside asyncronous code called from them?!

No.

The problem is that your example is malformed. You do this:

  1. Create a deferred on the "Break" class instance
  2. Return it from doStuff
  3. You "callLater" doesn't touch that deferred, so the 
generator/doStuff call a) never calls back and b) discards any errors 
that happen inside callLater.

You want something like this:

class Break:

     def __init__(self):
         self.deferred = Deferred()

     def __call__(self):
         try:
             del self.connector
         except:
             self.deferred.errback()
         else:
             self.deferred.callback(1)




From chris at simplistix.co.uk  Wed Sep 29 11:16:30 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 18:16:30 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA36675.5010603@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
Message-ID: <4CA3746E.2040800@simplistix.co.uk>

On 29/09/2010 17:16, Phil Mayers wrote:
> No.
>
> The problem is that your example is malformed.

Well, it's not, it's the reality of the situation and one I'd like to 
protect against; "the scheduler must not die" is the rule I need to make 
work...

> You do this:
>
>    1. Create a deferred on the "Break" class instance

The "Break" class, in reality, is the bowels of 
twisted.protocols.ftp.FTPClient, copying from my previous mail:

      self.failIfNotConnected(error.getConnectError((err, strerror(err))))
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 588, in failIfNotConnected
      del self.connector
--- <exception caught here> ---
    File "ourcode.py", line 180, in checkSchedule
      yield self.sendTransmissions(...)
exceptions.GeneratorExit:

How can I protect my scheduler against code which doesn't catch an 
exception when it should?

cheers,

Chris



From exarkun at twistedmatrix.com  Wed Sep 29 11:31:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 17:31:31 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3746E.2040800@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
Message-ID: <20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>

On 05:16 pm, chris at simplistix.co.uk wrote:
>On 29/09/2010 17:16, Phil Mayers wrote:
>>No.
>>
>>The problem is that your example is malformed.
>
>Well, it's not, it's the reality of the situation and one I'd like to
>protect against; "the scheduler must not die" is the rule I need to 
>make
>work...
>>You do this:
>>
>>    1. Create a deferred on the "Break" class instance
>
>The "Break" class, in reality, is the bowels of
>twisted.protocols.ftp.FTPClient, copying from my previous mail:
>
>      self.failIfNotConnected(error.getConnectError((err, 
>strerror(err))))
>    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
>line 588, in failIfNotConnected
>      del self.connector
>--- <exception caught here> ---
>    File "ourcode.py", line 180, in checkSchedule
>      yield self.sendTransmissions(...)
>exceptions.GeneratorExit:
>
>How can I protect my scheduler against code which doesn't catch an
>exception when it should?

Then you're talking about an API in Twisted which returns a Deferred 
that sometimes doesn't errback when the implementation encounters an 
error.

Also, `failIfNotConnected` should never raise an exception.

These sound like bugs.

File a couple tickets.  With a unit tests please. :)

Jean-Paul



From ruslan.usifov at gmail.com  Wed Sep 29 11:40:07 2010
From: ruslan.usifov at gmail.com (ruslan usifov)
Date: Wed, 29 Sep 2010 21:40:07 +0400
Subject: [Twisted-Python] reactor.stop if no any clients
Message-ID: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>

If we stop listening, how can i wait while all client connection (which was
accepted before stopListening) processed and then call reactor.stop?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100929/f8fde553/attachment.html>

From powdahound at gmail.com  Wed Sep 29 11:48:30 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Wed, 29 Sep 2010 10:48:30 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
	when using pseudo terminal
In-Reply-To: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
Message-ID: <AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>

I've simplified this issue down and am able to reproduce it without
Twisted: http://gist.github.com/603154

Still not sure what the cause is, so if anyone has any ideas I'd love to
hear them. Thanks!

On Mon, Sep 27, 2010 at 8:15 PM, Garret Heaton <powdahound at gmail.com> wrote:

> To me this seems like a very strange problem and I've tried to debug it
> best I can but I don't know much about many of the components at work.
> Here's what happened:
>
> I've been happily using Capistrano to deploy many twistd services to Ubuntu
> 9.04 machines. It restarts them via an init.d script based off this
> template:
> http://twistedmatrix.com/trac/attachment/ticket/3434/twistdplugin. I'm
> running a self-installed Twisted 8.2.0 on both systems with some small
> tweaks to logging.
>
> On newer Ubuntu 10.04 machines I've been deploying to the twistd services
> don't restart properly. There are no errors in the log. The only log lines
> I'd get were:
> [-] Log opened.
> [-] twistd 8.2.0 (/usr/bin/python 2.6.5) starting up.
> [-] reactor class: twisted.internet.epollreactor.EPollReactor.
>
> But they were only failing to restart when run via Capistrano. I realized
> that the only difference was that Capistrano was using a pseudo terminal
> when it issued its commands. To recreate the problem without Capistrano I
> can run:
> > ssh -t user at host "/etc/init.d/service start"
>
> But it works fine when I run:
> > ssh user at host "/etc/init.d/service start"
>
> The 3 log lines I see in the failed case are written by twistd before it
> forks (clone() syscall) to create the daemon process. The strace dump of
> twistd when run with and without pseudo terminal were identical. I tried
> running strace with the -f option to get some info about the child process
> but it didn't fail in that case since I guess it doesn't actually fork.
> Running in a pseudo terminal with --nodaemon passed to twistd also works
> fine.
>
> I've tested this with multiple twistd services and am having the same issue
> with all of them.
>
> Any ideas? Did I completely misdiagnose the problem? Has there been some
> change in this area between Twisted 8.2.0 and 10.x? I'm certainly confused.
> :)
>
> - Garret
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100929/1c52aeca/attachment.html>

From jml at mumak.net  Wed Sep 29 11:52:10 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 29 Sep 2010 18:52:10 +0100
Subject: [Twisted-Python] reactor.stop if no any clients
In-Reply-To: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>
References: <AANLkTikHR12mt_vrq9666fysH9GE=tn2A2D8nxNJ0dA=@mail.gmail.com>
Message-ID: <AANLkTimVFRE26tRSWRbJJsfedJmsC48KtPcxAzeTRm2C@mail.gmail.com>

On Wed, Sep 29, 2010 at 6:40 PM, ruslan usifov <ruslan.usifov at gmail.com> wrote:
> If we stop listening, how can i wait while all client connection (which was
> accepted before stopListening) processed and then call reactor.stop?
>

In your factory, keep a count of the number of clients you have and
whether stopListening has been called. In your protocol's
connectionLost() method, decrease that count by one and check to see
if it's zero. If it's zero, and stopListening has been called, call
reactor.stop().

jml



From chris at simplistix.co.uk  Wed Sep 29 14:27:53 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 21:27:53 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
Message-ID: <4CA3A149.1000703@simplistix.co.uk>

On 29/09/2010 18:31, exarkun at twistedmatrix.com wrote:
> Then you're talking about an API in Twisted which returns a Deferred
> that sometimes doesn't errback when the implementation encounters an
> error.
>
> Also, `failIfNotConnected` should never raise an exception.
>
> These sound like bugs.
>
> File a couple tickets.  With a unit tests please. :)

That's one side of things, sure, but how can I write a scheduler which 
handles the current situation?

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk



From exarkun at twistedmatrix.com  Wed Sep 29 15:06:41 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Sep 2010 21:06:41 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3A149.1000703@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
Message-ID: <20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>

On 08:27 pm, chris at simplistix.co.uk wrote:
>On 29/09/2010 18:31, exarkun at twistedmatrix.com wrote:
>>Then you're talking about an API in Twisted which returns a Deferred
>>that sometimes doesn't errback when the implementation encounters an
>>error.
>>
>>Also, `failIfNotConnected` should never raise an exception.
>>
>>These sound like bugs.
>>
>>File a couple tickets.  With a unit tests please. :)
>
>That's one side of things, sure, but how can I write a scheduler which
>handles the current situation?

Beats me.  I don't know exactly what bug you're hitting or how it's 
triggered, so I can't suggest a fix.  A unit test would clarify the 
situation.

Jean-Paul



From chris at simplistix.co.uk  Wed Sep 29 16:56:16 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Wed, 29 Sep 2010 23:56:16 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
Message-ID: <4CA3C410.8090401@simplistix.co.uk>

On 29/09/2010 22:06, exarkun at twistedmatrix.com wrote:
>> That's one side of things, sure, but how can I write a scheduler which
>> handles the current situation?
>
> Beats me.

So, if some buggy code that should be doing a deferred callback/errback 
instead raises an exception, you're basically screwed?

There's really no way to write a "safety belt" handler that will record 
the problem but then keep going?!

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk



From glyph at twistedmatrix.com  Wed Sep 29 17:31:29 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Sep 2010 19:31:29 -0400
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3C410.8090401@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
Message-ID: <BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>


On Sep 29, 2010, at 6:56 PM, Chris Withers wrote:

> On 29/09/2010 22:06, exarkun at twistedmatrix.com wrote:
>>> That's one side of things, sure, but how can I write a scheduler which
>>> handles the current situation?
>> 
>> Beats me.
> 
> So, if some buggy code that should be doing a deferred callback/errback 
> instead raises an exception, you're basically screwed?
> 
> There's really no way to write a "safety belt" handler that will record 
> the problem but then keep going?!
> 
> Chris

There are so many ways.

You can add a log observer that handles isError=True log messages.

You can write a 'safetyBelt' function that catches the exception and does something with it.

You can always invoke your code with maybeDeferred, which will turn exceptions into failures for you.

You can use inlineCallbacks, where in 'x = yield y()', y() raising an exception and y() returning a failed Deferred are basically indistinguishable to the caller.

And there are hundreds of subtle variations on each of these approaches.

Why would you say there's no way?


From chris at simplistix.co.uk  Wed Sep 29 18:52:12 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 01:52:12 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
Message-ID: <4CA3DF3C.2000706@simplistix.co.uk>

On 30/09/2010 00:31, Glyph Lefkowitz wrote:
>
> There are so many ways.

Yes, that's what I thought, which is why I was confused to keep on 
getting "fix the code" responses when I'd already pointed out it wasn't 
my code to fix, and I'd like to build a solution that caters even for 
this eventually...

> You can add a log observer that handles isError=True log messages.

Okay, and this would mean that my `loop` function from the example I 
posted would keep getting called by LoopingCall?

> You can write a 'safetyBelt' function that catches the exception and does something with it.

 From my original example, I'm pretty sure that's what my `loop` 
function is; I'm confused as to why it catches a GeneratorExit when the 
attribute error is indirectly raised in the `doStuff` function, and more 
confused that even thought the GeneratorExit has been caught, the calls 
to `loop` from LoopingCall cease...

> You can always invoke your code with maybeDeferred, which will turn exceptions into failures for you.

In "the real app", we have another layer or two between doStuff and 
Break, one of which does call down with maybeDeferred, doesn't make any 
difference...

> You can use inlineCallbacks, where in 'x = yield y()', y() raising an exception and y() returning a failed Deferred are basically indistinguishable to the caller.

Yes, as you can see, this is what `loop` does. In "the real app", 
doStuff is actually @inlineCallbacks as well, the level below that calls 
with a maybeDeferred and so yes, doing this, same result...

> Why would you say there's no way?

Because I haven't found any permutation that doesn't result in the 
LoopingCall's calls to `loop` from stopping after the exception.

I would be more than ecstatic to be proved wrong ;-)

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
            - http://www.simplistix.co.uk



From zubin.mithra at gmail.com  Wed Sep 29 19:49:49 2010
From: zubin.mithra at gmail.com (Zubin Mithra)
Date: Thu, 30 Sep 2010 07:19:49 +0530
Subject: [Twisted-Python] Small practice application
Message-ID: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>

Hi everyone,

I've decided to write a Tic-Tac-Toe gameserver and client(no biggie, just
for getting used to twisted as I'm pretty new to it). The gameserver
facilitates the connection between two clients and maintains the game state.

I'm having trouble deciding how to create factories and protocols for the
server.

What I am expecting is a toss to decide who plays first followed by a move
from client in a sequential manner. The client sends messages of the format
"MOV 2 3" to specify co-ordinates on the board, when prompted by a "MAKE
MOVE" from the server.

So the server should alternate between connections, read and send data. How
do I accomplish something such as this?

Thanks,
zm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100930/66f063e2/attachment.html>

From exarkun at twistedmatrix.com  Wed Sep 29 21:45:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 03:45:30 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA3DF3C.2000706@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
Message-ID: <20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>

On 12:52 am, chris at simplistix.co.uk wrote:
>
>Because I haven't found any permutation that doesn't result in the
>LoopingCall's calls to `loop` from stopping after the exception.
>
>I would be more than ecstatic to be proved wrong ;-)

You keep saying the LoopingCall stops.  It does not stop.  It is waiting 
for a result.  If you provide it with a result, it will proceed.  Glyph 
suggested a number of (hackfully) mechanisms you might use to provide it 
with a result.  I suggested another way (fix the broken code, or at 
least supply enough information for someone else to fix it).

Jean-Paul



From zubin.mithra at gmail.com  Wed Sep 29 23:51:25 2010
From: zubin.mithra at gmail.com (Zubin Mithra)
Date: Thu, 30 Sep 2010 11:21:25 +0530
Subject: [Twisted-Python] Small practice application
In-Reply-To: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
References: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
Message-ID: <AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>

>
> Hi everyone,
>
> I've decided to write a Tic-Tac-Toe gameserver and client(no biggie, just
> for getting used to twisted as I'm pretty new to it). The gameserver
> facilitates the connection between two clients and maintains the game state.
>
> I'm having trouble deciding how to create factories and protocols for the
> server.
>
>
I have made little progress in this regard, please view it here.
http://paste.pocoo.org/show/269325/

I intend to read lines from clients based on the value of
ServerFactory.player in the following manner.


   - In the lineReceived() method. I check the value of self.factory.player.
   If the current instance is the (self.factory.player)th element of
   self.factory.connections. If yes, read the input, parse and make changes to
   the table. This is the basic idea for reading data and detecting which
   client it came from.

However, I am confused on how to write data over to a particular player(0 or
1). Is there any way I could choose to write to a particular object?

zm



> What I am expecting is a toss to decide who plays first followed by a move
> from client in a sequential manner. The client sends messages of the format
> "MOV 2 3" to specify co-ordinates on the board, when prompted by a "MAKE
> MOVE" from the server.
>
> So the server should alternate between connections, read and send data. How
> do I accomplish something such as this?
>
> Thanks,
> zm
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100930/fdc1cba3/attachment.html>

From chris at simplistix.co.uk  Thu Sep 30 04:48:40 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 11:48:40 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
Message-ID: <4CA46B08.7000907@simplistix.co.uk>

On 30/09/2010 04:45, exarkun at twistedmatrix.com wrote:
> On 12:52 am, chris at simplistix.co.uk wrote:
>>
>> Because I haven't found any permutation that doesn't result in the
>> LoopingCall's calls to `loop` from stopping after the exception.
>>
>> I would be more than ecstatic to be proved wrong ;-)
>
> You keep saying the LoopingCall stops.  It does not stop.  It is waiting
> for a result.

What result is it waiting for and how do I pass that from the `loop` 
function in my first example when the exception is caught?

> If you provide it with a result, it will proceed.

See above: how do I do that?

> Glyph
> suggested a number of (hackfully) mechanisms you might use to provide it
> with a result.

Why do you say hackfully? I'm trying to build a scheduler that is 
resilient to failure in a scheduled task. Yes, of course I want to fix 
that failure, but I don't want a failure in one scheduled task to 
prevent any further scheduled tasks from being executed...

> I suggested another way (fix the broken code, or at
> least supply enough information for someone else to fix it).

For all I know, it's already fixed in a newer version of Twisted 
(unfortunately, I can't move this project to a newer version of Twisted) 
but once I have a robust scheduler, I'll certainly do my best to report 
the underlying failure to you guys properly...

Chris

-- 
Simplistix - Content Management, Batch Processing & Python Consulting
             - http://www.simplistix.co.uk



From p.mayers at imperial.ac.uk  Thu Sep 30 06:44:42 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 13:44:42 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA46B08.7000907@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
Message-ID: <4CA4863A.3010609@imperial.ac.uk>

On 30/09/10 11:48, Chris Withers wrote:
> On 30/09/2010 04:45, exarkun at twistedmatrix.com wrote:
>> On 12:52 am, chris at simplistix.co.uk wrote:
>>>
>>> Because I haven't found any permutation that doesn't result in the
>>> LoopingCall's calls to `loop` from stopping after the exception.
>>>
>>> I would be more than ecstatic to be proved wrong ;-)
>>
>> You keep saying the LoopingCall stops.  It does not stop.  It is waiting
>> for a result.
>
> What result is it waiting for and how do I pass that from the `loop`
> function in my first example when the exception is caught?

It is waiting for the deferred you return to callback/errback.

This, I found, was initially non-obvious. I assumed that LoopingCall 
would be called every N seconds regardless, but it won't. If you return 
a deferred, the LoopingCall will stop until the deferred 
callback/errback's, then it will be restarted.

This is very useful in some circumstances.

>
>> If you provide it with a result, it will proceed.
>
> See above: how do I do that?
>
>> Glyph
>> suggested a number of (hackfully) mechanisms you might use to provide it
>> with a result.
>
> Why do you say hackfully? I'm trying to build a scheduler that is

Because this is (apparently) a bug in the underlying Twisted code, so 
anything you do to fix that is a hack.

The quickest way I can describe it is this; as I understand, any Twisted 
function which returns a deferred should never raise an Exception. The 
exception should instead flow down the errback.

This is because (as you've discovered) there are circumstances when a 
function is called in Twisted where the exception can't propagate "up" 
to the caller, because the caller is no longer higher in the call stack. 
Most prominent is reactor.callLater.

> resilient to failure in a scheduled task. Yes, of course I want to fix
> that failure, but I don't want a failure in one scheduled task to
> prevent any further scheduled tasks from being executed...
>
>> I suggested another way (fix the broken code, or at
>> least supply enough information for someone else to fix it).
>
> For all I know, it's already fixed in a newer version of Twisted
> (unfortunately, I can't move this project to a newer version of Twisted)
> but once I have a robust scheduler, I'll certainly do my best to report
> the underlying failure to you guys properly...

If you can produce a short example that uses the real Twisted API which 
fails, people might a) be able to find/fix the bug and b) suggest a less 
hacky way of ensuring you see the error.



From p.mayers at imperial.ac.uk  Thu Sep 30 07:03:01 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 14:03:01 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA4863A.3010609@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk>
Message-ID: <4CA48A85.9000608@imperial.ac.uk>

On 30/09/10 13:44, Phil Mayers wrote:

> This is because (as you've discovered) there are circumstances when a
> function is called in Twisted where the exception can't propagate "up"
> to the caller, because the caller is no longer higher in the call stack.
> Most prominent is reactor.callLater.

One quick thing you might be able to do is use t.i.task.deferLater 
instead of reactor.callLater, like so:

def doStuff():
   breakobj = Break()
   d = task.deferLater(reactor, 2, breakobj)
   return d

task.deferLater will schedule the call, but runs the call in a context 
which means any exceptions raised flow down the deferred errback. This:

@inlineCallbacks
def loop():
   try:
     yield doStuff()
   except Exception, e:
     log.err(e)

...will then work, and "see" the exception.



From chris at simplistix.co.uk  Thu Sep 30 07:36:56 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 14:36:56 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA48A85.9000608@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
Message-ID: <4CA49278.5020502@simplistix.co.uk>

On 30/09/2010 14:03, Phil Mayers wrote:
> On 30/09/10 13:44, Phil Mayers wrote:
>
>> This is because (as you've discovered) there are circumstances when a
>> function is called in Twisted where the exception can't propagate "up"
>> to the caller, because the caller is no longer higher in the call stack.

Indeed, but, as I keep saying, I need to build a scheduler that's 
resilient to errors in the tasks its running ;-)

>> Most prominent is reactor.callLater.

...which I'm not actually using, it was just a small-as-possible way I 
could simulate the failure mode (rather than the specific failure) I 
need to protect against.

> @inlineCallbacks
> def loop():
>     try:
>       yield doStuff()
>     except Exception, e:
>       log.err(e)
>
> ...will then work, and "see" the exception.

Actually, what appears to work is simply changing `loop` to not be an 
async fuction:

def loop():
     try:
         doStuff()
     except Exception,e:
         log.err(None,'Unhandled scheduled exception')

looper = task.LoopingCall(loop)
looper.start(1.0)
reactor.run()

This appears to solve most of the problems:
- the schedule now keeps running regardless
- exceptions in doStuff and below get logged

However, it now has the problem that if doStuff *does* return a deferred 
and it errbacks, the I get the ugly:

2010-09-30 14:31:12,478 ERROR   : log         (22159|7fc6c5c356e0): 
Unhandled error in Deferred:
2010-09-30 14:31:12,479 ERROR   : log         (22159|7fc6c5c356e0): 
Unhandled Error
Traceback (most recent call last):
Failure: twisted.python.failure.DefaultException: Break!

...rather than having my exception handler log with a meaningful message.

I've attached the full example as I have it again...

Is there any way I can get both errbacks *and* exceptions handled nicely 
in my `loop` call?

cheers,

Chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_looping.py
URL: </pipermail/twisted-python/attachments/20100930/d8bc6008/attachment.ksh>

From jml at mumak.net  Thu Sep 30 07:39:30 2010
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 30 Sep 2010 14:39:30 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49278.5020502@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
Message-ID: <AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>

On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers <chris at simplistix.co.uk> wrote:
...
>
> Is there any way I can get both errbacks *and* exceptions handled nicely in
> my `loop` call?

You know about defer.maybeDeferred, right?

jml



From p.mayers at imperial.ac.uk  Thu Sep 30 07:46:54 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 14:46:54 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49278.5020502@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
Message-ID: <4CA494CE.9060004@imperial.ac.uk>

On 30/09/10 14:36, Chris Withers wrote:
>
> Indeed, but, as I keep saying, I need to build a scheduler that's
> resilient to errors in the tasks its running ;-)

Sure.

>
>>> Most prominent is reactor.callLater.
>
> ...which I'm not actually using, it was just a small-as-possible way I
> could simulate the failure mode (rather than the specific failure) I
> need to protect against.

Ah.

> Actually, what appears to work is simply changing `loop` to not be an
> async fuction:
>
> def loop():
>       try:
>           doStuff()
>       except Exception,e:
>           log.err(None,'Unhandled scheduled exception')
>
> looper = task.LoopingCall(loop)
> looper.start(1.0)
> reactor.run()
>
> This appears to solve most of the problems:
> - the schedule now keeps running regardless
> - exceptions in doStuff and below get logged
>
> However, it now has the problem that if doStuff *does* return a deferred
> and it errbacks, the I get the ugly:

Well, you could do this, which is more Twist-y, and Glyph suggested:

def loop():
   d = defer.maybeDeferred(doStuff, *args)
   d.addErrback(log.err)

This will call doStuff, converting return/exception into 
callback/errback, or if the call returns a deferred itself, just return 
that.

FWIW, you say "if doStuff does return a deferred"; I presume you don't 
really have a single call returning both normal and deferred values, and 
it's actually several different function calls to different pieces of work.

> Is there any way I can get both errbacks *and* exceptions handled nicely
> in my `loop` call?

I think you want maybeDeferred, as above.



From chris at simplistix.co.uk  Thu Sep 30 08:02:04 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:02:04 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA494CE.9060004@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<4CA494CE.9060004@imperial.ac.uk>
Message-ID: <4CA4985C.6010209@simplistix.co.uk>



On 30/09/2010 14:46, Phil Mayers wrote:
> On 30/09/10 14:36, Chris Withers wrote:
>>
>> Indeed, but, as I keep saying, I need to build a scheduler that's
>> resilient to errors in the tasks its running ;-)
>
> Sure.
>
>>
>>>> Most prominent is reactor.callLater.
>>
>> ...which I'm not actually using, it was just a small-as-possible way I
>> could simulate the failure mode (rather than the specific failure) I
>> need to protect against.
>
> Ah.
>
>> Actually, what appears to work is simply changing `loop` to not be an
>> async fuction:
>>
>> def loop():
>> try:
>> doStuff()
>> except Exception,e:
>> log.err(None,'Unhandled scheduled exception')
>>
>> looper = task.LoopingCall(loop)
>> looper.start(1.0)
>> reactor.run()
>>
>> This appears to solve most of the problems:
>> - the schedule now keeps running regardless
>> - exceptions in doStuff and below get logged
>>
>> However, it now has the problem that if doStuff *does* return a deferred
>> and it errbacks, the I get the ugly:
>
> Well, you could do this, which is more Twist-y, and Glyph suggested:
>
> def loop():
> d = defer.maybeDeferred(doStuff, *args)
> d.addErrback(log.err)

Okay, but further down in the call stack of the "real app", I already have:

     @inlineCallbacks
     def sendTransmission(self...):
         ...
         try:
             yield maybeDeferred(feed.initiateTransmission,
                                 ...)
         except Exception, ex:
             if isinstance(ex,GeneratorExit):
                 raise
             ...

Is that not doing what you're talking about?
If it is, it didn't help...

> FWIW, you say "if doStuff does return a deferred"; I presume you don't
> really have a single call returning both normal and deferred values,

Correct, doStuff *should* always return a deferred, the problem is that 
the deferred returned never fires (errback or callback) when an 
exception is raised in the code that should be firing it.

Chris



From chris at simplistix.co.uk  Thu Sep 30 08:13:50 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:13:50 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
Message-ID: <4CA49B1E.5040608@simplistix.co.uk>

On 30/09/2010 14:39, Jonathan Lange wrote:
> On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk>  wrote:
> ...
>>
>> Is there any way I can get both errbacks *and* exceptions handled nicely in
>> my `loop` call?
>
> You know about defer.maybeDeferred, right?

Yep, the problem is with `loop` implemented like so:

def loop():
     d = maybeDeferred(doStuff)
     d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))

...the logging is odd:

2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0): 
Unhandled Error
Traceback (most recent call last):
   File "test_looping.py", line 47, in <module>
     reactor.run()
   File "/twisted/internet/base.py", line 1166, in run
     self.mainLoop()
   File "/twisted/internet/base.py", line 1175, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "/twisted/internet/base.py", line 779, in runUntilCurrent
     call.func(*call.args, **call.kw)
   File "test_looping.py", line 30, in __call__
     del self.connector
exceptions.AttributeError: Break instance has no attribute 'connector'

called  4
called  5
/twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings 
(like 'Break!') to failure.Failure (replacing with a DefaultException).
   fail = failure.Failure(fail)
2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0): 
Unhandled scheduled exception
Traceback (most recent call last):
Failure: twisted.python.failure.DefaultException: Break!

So, how come my log.err doesn't get used for the AttributeError on 
connector?

cheers,

Chris



From p.mayers at imperial.ac.uk  Thu Sep 30 08:23:52 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 15:23:52 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49B1E.5040608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
Message-ID: <4CA49D78.7010103@imperial.ac.uk>

On 30/09/10 15:13, Chris Withers wrote:
> On 30/09/2010 14:39, Jonathan Lange wrote:
>> On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk>   wrote:
>> ...
>>>
>>> Is there any way I can get both errbacks *and* exceptions handled nicely in
>>> my `loop` call?
>>
>> You know about defer.maybeDeferred, right?
>
> Yep, the problem is with `loop` implemented like so:
>
> def loop():
>       d = maybeDeferred(doStuff)
>       d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))


>
> So, how come my log.err doesn't get used for the AttributeError on
> connector?

If you mean in your most recent "test_looping.py" example, it still uses 
reactor.callLater. The call stack has gone away by the time the call is 
made, so the exception just propagates up to the top level, where it's 
logged.


I honestly think a more complete example showing the real Twisted API 
that's causing you unhandled errors would help here.



From exarkun at twistedmatrix.com  Thu Sep 30 08:33:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 14:33:24 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA49B1E.5040608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
Message-ID: <20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>

On 02:13 pm, chris at simplistix.co.uk wrote:
>On 30/09/2010 14:39, Jonathan Lange wrote:
>>On Thu, Sep 30, 2010 at 2:36 PM, Chris Withers<chris at simplistix.co.uk> 
>>wrote:
>>...
>>>
>>>Is there any way I can get both errbacks *and* exceptions handled 
>>>nicely in
>>>my `loop` call?
>>
>>You know about defer.maybeDeferred, right?
>
>Yep, the problem is with `loop` implemented like so:
>
>def loop():
>     d = maybeDeferred(doStuff)
>     d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))

Names that begin with an underscore are private.  Also, partial is a 
pointless complexification here.

    def loop():
        d = maybeDeferred(doStuff)
        d.addErrback(log.err, 'Unhandled scheduled exception')
>...the logging is odd:
>
>2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0):
>Unhandled Error
>Traceback (most recent call last):
>   File "test_looping.py", line 47, in <module>
>     reactor.run()
>   File "/twisted/internet/base.py", line 1166, in run
>     self.mainLoop()
>   File "/twisted/internet/base.py", line 1175, in mainLoop
>     self.runUntilCurrent()
>--- <exception caught here> ---
>   File "/twisted/internet/base.py", line 779, in runUntilCurrent
>     call.func(*call.args, **call.kw)
>   File "test_looping.py", line 30, in __call__
>     del self.connector
>exceptions.AttributeError: Break instance has no attribute 'connector'


This is not logged by your code.  Do you recognize that?
>
>called  4
>called  5
>/twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings
>(like 'Break!') to failure.Failure (replacing with a DefaultException).
>   fail = failure.Failure(fail)
>2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0):
>Unhandled scheduled exception
>Traceback (most recent call last):
>Failure: twisted.python.failure.DefaultException: Break!

This comes from some code not included in the code you posted.  It looks 
like you're using Failure wrong though.  Quoting from above:

    Don't pass strings (like 'Break!') to failure.Failure.
>
>So, how come my log.err doesn't get used for the AttributeError on
>connector?

I'm sure it doesn't help for me to simply repeat myself, since if it 
didn't make sense the first time probably won't make sense the third or 
fourth time.  I don't know what else to say though.

log.err is an errback on the Deferred you created in loop.

An errback is called (roughly) when a Deferred fires with a Failure.

Your Deferred *never* fires with a Failure corresponding to that 
AttributeError.  This is the most important thing.  If you don't 
understand this, say so and we can talk about it some more.  Everything 
else is just confusing particulars.

Unfortunately maybeDeferred cannot help here.  It solves a slightly 
related problem and does nothing about this one.  You may well want to 
use it, but it's not going to address your `AttributeError` issue in any 
way, because of what I said above, and will repeat here for emphasis:

The AttributeError never becomes an error result on any Deferred.  It is 
caught inside the reactor implementation, logged there by Twisted 
itself, and then thrown away forever.

Jean-Paul



From chris at simplistix.co.uk  Thu Sep 30 08:35:00 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 15:35:00 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a safe
 catch-all]
In-Reply-To: <4CA49D78.7010103@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
Message-ID: <4CA4A014.8080608@simplistix.co.uk>

On 30/09/2010 15:23, Phil Mayers wrote:
>> def loop():
>> d = maybeDeferred(doStuff)
>> d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>
>> So, how come my log.err doesn't get used for the AttributeError on
>> connector?
>
> If you mean in your most recent "test_looping.py" example, it still uses
> reactor.callLater. The call stack has gone away by the time the call is
> made, so the exception just propagates up to the top level, where it's
> logged.

So, I appear to be back to the case where I can either gracefully handle 
the exception *or* gracefully handle the errback, but not both?

> I honestly think a more complete example showing the real Twisted API
> that's causing you unhandled errors would help here.

Unfortunately, you neither want to see, nor am I allowed to publish to a 
mailing list, that several hundred lines of proprietary code I'd need to 
post...

As far as the original error goes, we hit the problem using 
twisted.protocols.ftp.FTPClient to ftp a file up to a remote host.
That remote host only accepts active ftp transfers. As a result of 
either of both of our firewall or FTPClient not handling active ftp and 
only handling passive ftp, we end up seeing the following logging as the 
scheduler dies:

2010-09-27 15:30:16,340 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled exception sending schedule transmission
Traceback (most recent call last):
    File
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/python/context.py", line
37, in callWithContext
      return func(*args,**kw)
    File
"Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/selectreactor.py", line 

146, in _doReadOrWrite
      why = getattr(selectable, method)()
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 631, in doConnect
      self.failIfNotConnected(error.getConnectError((err, strerror(err))))
    File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/tcp.py",
line 588, in failIfNotConnected
      del self.connector
--- <exception caught here> ---
    File "ourcode.py", line 180, in checkSchedule
      yield self.sendTransmissions(...)
exceptions.GeneratorExit:

2010-09-27 15:30:28,428 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled error in Deferred:
2010-09-27 15:30:28,584 ERROR   : log         (24331|7f2e47b4d6e0):
Unhandled Error
Traceback (most recent call last):
Failure: twisted.protocols.ftp.FTPError: ('Connection Failed',
<twisted.python.failure.Failure <class
'twisted.internet.error.ConnectError'>>)

I can't quite make sense of the above, which is why I distilled it down 
to as-small-as-possible a piece of code that shows the type of 
exceptions and errbacks I need to deal with...

cheers,

Chris


-- 
Simplistix - Content Management, Batch Processing & Python Consulting
             - http://www.simplistix.co.uk



From exarkun at twistedmatrix.com  Thu Sep 30 08:42:05 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Sep 2010 14:42:05 -0000
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
	safe	catch-all]
In-Reply-To: <4CA4A014.8080608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>
	<4CA361A5.2090005@simplistix.co.uk>
	<4CA36675.5010603@imperial.ac.uk>
	<4CA3746E.2040800@simplistix.co.uk>
	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>
	<4CA3A149.1000703@simplistix.co.uk>
	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>
	<4CA3C410.8090401@simplistix.co.uk>
	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>
	<4CA3DF3C.2000706@simplistix.co.uk>
	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>
	<4CA46B08.7000907@simplistix.co.uk>
	<4CA4863A.3010609@imperial.ac.uk> <4CA48A85.9000608@imperial.ac.uk>
	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
Message-ID: <20100930144205.2022.1515137956.divmod.xquotient.52@localhost.localdomain>

On 02:35 pm, chris at simplistix.co.uk wrote:
>On 30/09/2010 15:23, Phil Mayers wrote:
>>>def loop():
>>>d = maybeDeferred(doStuff)
>>>d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>>
>>>So, how come my log.err doesn't get used for the AttributeError on
>>>connector?
>>
>>If you mean in your most recent "test_looping.py" example, it still 
>>uses
>>reactor.callLater. The call stack has gone away by the time the call 
>>is
>>made, so the exception just propagates up to the top level, where it's
>>logged.
>
>So, I appear to be back to the case where I can either gracefully 
>handle
>the exception *or* gracefully handle the errback, but not both?

No.  Absolutely, categorically wrong.

Jean-Paul



From p.mayers at imperial.ac.uk  Thu Sep 30 08:53:05 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 15:53:05 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A014.8080608@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
Message-ID: <4CA4A451.6020509@imperial.ac.uk>

On 30/09/10 15:35, Chris Withers wrote:
> On 30/09/2010 15:23, Phil Mayers wrote:
>>> def loop():
>>> d = maybeDeferred(doStuff)
>>> d.addErrback(partial(log.err,_why='Unhandled scheduled exception'))
>>
>>> So, how come my log.err doesn't get used for the AttributeError on
>>> connector?
>>
>> If you mean in your most recent "test_looping.py" example, it still uses
>> reactor.callLater. The call stack has gone away by the time the call is
>> made, so the exception just propagates up to the top level, where it's
>> logged.
>
> So, I appear to be back to the case where I can either gracefully handle
> the exception *or* gracefully handle the errback, but not both?


It should be possible if using Twisted APIs correctly to reliably 
capture errors.

If it is not, that is a Twisted bug (or possibly API limitation)

However, your "test_looping.py" is not using the API correctly; the 
reactor.callLater throws away the call stack, so the error has nowhere 
to go.

Since you're not using reactor.callLater in your real code, the example 
is not valid. Hopefully I'm being more clear here!

>
>> I honestly think a more complete example showing the real Twisted API
>> that's causing you unhandled errors would help here.
>
> Unfortunately, you neither want to see, nor am I allowed to publish to a
> mailing list, that several hundred lines of proprietary code I'd need to
> post...

I suspected as much.

I don't think I can help I'm afraid; maybe other more experience people 
can spot the error from the tracebacks. Sorry I couldn't be more useful.



From chris at simplistix.co.uk  Thu Sep 30 09:10:54 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 16:10:54 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A451.6020509@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
	<4CA4A451.6020509@imperial.ac.uk>
Message-ID: <4CA4A87E.7000408@simplistix.co.uk>

On 30/09/2010 15:53, Phil Mayers wrote:
>> So, I appear to be back to the case where I can either gracefully handle
>> the exception *or* gracefully handle the errback, but not both?
>
> It should be possible if using Twisted APIs correctly to reliably
> capture errors.
>
> If it is not, that is a Twisted bug (or possibly API limitation)
>
> However, your "test_looping.py" is not using the API correctly; the
> reactor.callLater throws away the call stack, so the error has nowhere
> to go.

Right, but that's what appears to be happening with the "real code", and 
I get the mysterious GeneratorExit...

> Since you're not using reactor.callLater in your real code, the example
> is not valid. Hopefully I'm being more clear here!

Yes, but I do feel a bit like I'm banging my head against a wall too. 
The effect is the same as the real live observed problem, only I can't 
replicate the real problem without an ftp server that only happens to 
accept active connections. I don't have one of those around, and *even* 
if I did, I want to make the scheduler bulletproof, not *just* go and 
fix the one error that has cropped up so far...

cheers,

Chris



From chris at simplistix.co.uk  Thu Sep 30 09:19:23 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Thu, 30 Sep 2010 16:19:23 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>
	<20100930143324.2022.913274676.divmod.xquotient.50@localhost.localdomain>
Message-ID: <4CA4AA7B.6070308@simplistix.co.uk>

On 30/09/2010 15:33, exarkun at twistedmatrix.com wrote:
>> 2010-09-30 15:07:03,161 ERROR   : log         (22194|7f41910b26e0):
>> Unhandled Error
>> Traceback (most recent call last):
>>    File "test_looping.py", line 47, in<module>
>>      reactor.run()
>>    File "/twisted/internet/base.py", line 1166, in run
>>      self.mainLoop()
>>    File "/twisted/internet/base.py", line 1175, in mainLoop
>>      self.runUntilCurrent()
>> ---<exception caught here>  ---
>>    File "/twisted/internet/base.py", line 779, in runUntilCurrent
>>      call.func(*call.args, **call.kw)
>>    File "test_looping.py", line 30, in __call__
>>      del self.connector
>> exceptions.AttributeError: Break instance has no attribute 'connector'
>
> This is not logged by your code.  Do you recognize that?

Yes, this is what I'm complaining about ;-)

>> /twisted/internet/defer.py:262: DeprecationWarning: Don't pass strings
>> (like 'Break!') to failure.Failure (replacing with a DefaultException).
>>    fail = failure.Failure(fail)
>> 2010-09-30 15:07:05,167 ERROR   : log         (22194|7f41910b26e0):
>> Unhandled scheduled exception
>> Traceback (most recent call last):
>> Failure: twisted.python.failure.DefaultException: Break!
>
> This comes from some code not included in the code you posted.

Sure it is, it was attached to the message I sent at 14:36.

> It looks
> like you're using Failure wrong though.

Sure, but that's hardly the issue at hand here...
What should I be passing to errback?

>> So, how come my log.err doesn't get used for the AttributeError on
>> connector?
 >
> Your Deferred *never* fires with a Failure corresponding to that
> AttributeError.  This is the most important thing.  If you don't
> understand this, say so and we can talk about it some more.  Everything
> else is just confusing particulars.

Yes, I understand this, and this is what I'm talking about when I say "I 
cannot gracefully handle the exception." Reading back, yes, it appears I 
was mistaken at some stage that my `loop` function was handling the 
exception, but I do understand now that it was not... which is 
frustrating...

> The AttributeError never becomes an error result on any Deferred.  It is
> caught inside the reactor implementation, logged there by Twisted
> itself, and then thrown away forever.

:-(

Chris



From ziga.seilnacht at gmail.com  Thu Sep 30 09:52:16 2010
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Thu, 30 Sep 2010 17:52:16 +0200
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
 when using pseudo terminal
In-Reply-To: <AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
	<AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
Message-ID: <4CA4B230.1030709@gmail.com>

Hello,

Garret Heaton wrote:
> I've simplified this issue down and am able to reproduce it without
> Twisted: http://gist.github.com/603154
> 
> Still not sure what the cause is, so if anyone has any ideas I'd love to
> hear them. Thanks!
> 

The behavior that you are seeing seems to be related to the change in
the 2.6.32 kernel, where they changed the child-runs-first scheduler
parameter to false. Setting that parameter to 1 with:

$ sudo sysctl -w kernel.sched_child_runs_first=1

and rebooting the computer restores the behavior that you saw on the
old kernel for me. See http://lwn.net/Articles/352863/ for more details.

Parent (which is the controlling process when ran with -t) exiting before
the child starts causes the child to receive SIGHUP signal immediately as
it starts running, before it has time to disassociate itself from the
parent's process group. It seems to me that this might be an actual bug
in twistd, it should block the SIGHUP signal across the fork() calls.

Your test program has an additional assumption that the child will run
before the parent; the child in your program tries to write to stdout,
i.e. the controlling terminal, which gets closed once the parent exits.

The modified test program below works for me regardless of the setting
of the kernel.sched_child_runs_first parameter.

Hope this helps,
Ziga



import os
import signal

f = open("test_fork.out", "w")

def daemonize():
     # See http://www.faqs.org/faqs/unix-faq/programmer/faq/ - Section 1.7
     print >> f, '--- %s: daemonizing' % os.getpid()

     signal.signal(signal.SIGHUP, signal.SIG_IGN)
     if os.fork(): # launch child and...
         print >> f, '--- %s: kill parent 1' % os.getpid()
         os._exit(0) # kill off parent
     print >> f, '--- %s: old sid: %r' % (os.getpid(), os.getsid(os.getpid()))
     os.setsid()
     print >> f, '--- %s: new sid: %r' % (os.getpid(), os.getsid(os.getpid()))
     if os.fork(): # launch child and...
         print >> f, '--- %s: kill parent 2' % os.getpid()
         os._exit(0) # kill off parent again.

     signal.signal(signal.SIGHUP, signal.SIG_DFL)
     print >> f, '--- %s: daemonizing done' % os.getpid()

if __name__ == "__main__":
     print >> f, 'starting as %d' % os.getpid()
     daemonize()
     print >> f, 'stopping as %s' % os.getpid()






From p.mayers at imperial.ac.uk  Thu Sep 30 11:01:03 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 30 Sep 2010 18:01:03 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4A87E.7000408@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<20100928142151.4943.2020988630.divmod.xquotient.47@localhost.localdomain>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>
	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>
	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>
	<4CA49B1E.5040608@simplistix.co.uk>
	<4CA49D78.7010103@imperial.ac.uk>
	<4CA4A014.8080608@simplistix.co.uk>
	<4CA4A451.6020509@imperial.ac.uk>
	<4CA4A87E.7000408@simplistix.co.uk>
Message-ID: <4CA4C24F.8020807@imperial.ac.uk>

On 30/09/10 16:10, Chris Withers wrote:
> On 30/09/2010 15:53, Phil Mayers wrote:
>>> So, I appear to be back to the case where I can either gracefully handle
>>> the exception *or* gracefully handle the errback, but not both?
>>
>> It should be possible if using Twisted APIs correctly to reliably
>> capture errors.
>>
>> If it is not, that is a Twisted bug (or possibly API limitation)
>>
>> However, your "test_looping.py" is not using the API correctly; the
>> reactor.callLater throws away the call stack, so the error has nowhere
>> to go.
>
> Right, but that's what appears to be happening with the "real code", and
> I get the mysterious GeneratorExit...

It is more than a little confusing, and I'm sure frustrating.

I've tried to produce something like this locally, but cannot. I suspect 
the various @inlineCallbacks generators are the cause of the specific issue.


Let me see if I understand the problem in full.

You have an @inlineCallbacks-decorated generator which is the target of 
a LoopingCall, like so:

@inlineCallbacks
def loop():
   try:
     somework()
   except:
     log.err()

lc = task.LoopingCall(loop)

You want this loop function to catch & log all exceptions resulting from 
work it initiates.

Your "somework" function calls, amongst other things, an 
@inlineCallbacks-decorated worker function:

@inlineCallbacks
def sendTransmission(...):
   try:
     yield maybeDeferred(feed.initiateTransmission)
   except:
     ...some handling

You are seeing two errors:


  1. A GeneratorExit exception. This appears (if I'm reading your 
logging right) to be caught by your logging?

  2. A ConnectionLost exception. This is not caught by your logging, and 
is propagating up to the reactor, and giving "Unhandled Error"


Is this an accurate summary?



From glyph at twistedmatrix.com  Thu Sep 30 12:00:21 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Sep 2010 14:00:21 -0400
Subject: [Twisted-Python] Small practice application
In-Reply-To: <AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>
References: <AANLkTi=TxXPsHp6qe6O8UqU5==ES2frsUUipz+z42OHX@mail.gmail.com>
	<AANLkTinYarzi4Z_rjan9_XoiBhV=78q7fp1QBygusr7i@mail.gmail.com>
Message-ID: <88B1BE8B-98D7-4160-8403-800A2D5900CC@twistedmatrix.com>


On Sep 30, 2010, at 1:51 AM, Zubin Mithra wrote:

> However, I am confused on how to write data over to a particular player(0 or 1). Is there any way I could choose to write to a particular object?
> 

Sure, make self.factory.connections into a dictionary which maps player names to connection objects, instead of a simple list.  Or simply do:

for connection in self.factory.connections:
  if connection.username == 'desired-username':
    connection.doSomething()

This isn't really a twisted question, it's a basic Python question :).





From glyph at twistedmatrix.com  Thu Sep 30 12:52:52 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Sep 2010 14:52:52 -0400
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA1F212.9040305@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
Message-ID: <F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>

Chris,

My original reply jumped into the middle of the thread and I didn't completely understand what you were asking.  Let's get back to your original message:

On Sep 28, 2010, at 9:48 AM, Chris Withers wrote:

> The loop() function is supposed to be a "catch all and report" error handler. However, when the async code initiated by doStuff throws the AttributeError, what actually gets logged is:
> 
> 2010-09-28 14:41:15,706 ERROR   : log         (14757|7f691ba676e0): Unhandled Error
> Traceback (most recent call last):
>  File "test_looping.py", line 41, in <module>
>    reactor.run()
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 1128, in run
>    self.mainLoop()
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 1137, in mainLoop
>    self.runUntilCurrent()
> --- <exception caught here> ---
>  File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py", line 757, in runUntilCurrent
>    call.func(*call.args, **call.kw)
>  File "test_looping.py", line 24, in __call__
>    del self.connector
> exceptions.AttributeError: Break instance has no attribute 'connector'

This traceback indicates a bug in Twisted.

This is an error that other people have very occasionally spotted, and we have never been able to reliably reproduce it.  Over the years we have tried to diagnose it in various ways and we have always failed.

It would be really valuable to everyone if you could write up a bug and provide detailed reproduction instructions, ideally with some python code that triggers this error, so that we can address the bug.  It would be super useful if you could write an example that reproduces the same bug on a recent Twisted version (8.2 is pretty old), especially the 10.2 prerelease.  But, if your example reproduces on 8.2 and not 10.0, that tells us something too.

A unit test would be best, but any complete script which reproduces the problem reliably would be extremely useful; we can transform it into a unit test ourselves.

To reiterate, as this pertains to your problem: there is no way for your application code to fix this exception, because it is happening in the guts of the reactor and entirely out of your control.  It is going to screw things up in some pretty arbitrary ways.  The only way to deal with it would be to figure out why it happens and come up with a proper fix for the bug.  And we can't do that without a way to reproduce the bug.

Thanks for your help,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100930/901ff180/attachment.html>

