From acapnotic at twistedmatrix.com  Thu Nov  1 01:15:52 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 31 Oct 2001 22:15:52 -0800
Subject: [Twisted-Python] Enterprise, do you copy?
Message-ID: <20011031221552.A1625@troglodyte.menefee>

...hello?  Hello?  Is anyone receiving this transmission?

I heard from Dad again today, and he was grumbling about developing in
this Oracle JDeveloper environment...  Five different languages to
develop "java server[servlet?] pages", he says.  Java, because that's
where Oracle seems to be building its tools these days; then there's
Oracle's query language; then HTML for the web interfaces; and
JavaScript, because there's something that needs to be done client-side,
and, uh, what was the fifth one again?  Then there's the hundreds of
functions the wizards create for simple tasks, spread across untold
numbers of files...

Ye gods, man.  Can anyone save this tragedy?  I can't give you a
complete list of requirements, but the general gist is this:  The
laboratory has researchers and machines, the researchers do experiments
and the machines spit out data.  Quite a bit of data.  This data comes
out in raw form, needs to be stored, processed, the results stored.
It'd be nice to keep track of which data actually belongs to what run of
whose experiment -- it seems like they lose track of that every now and
then.  Anyway, data (lots, but still in the fractional-terabyte range)
stored in Oracle, and, naturally, cross-referenced with other data, and,
well, there's a lot of that going around.

The researchers, who spend most of their time knocking the brains out of
mice instead of clicking on them, need relatively friendly interfaces to
the data from their experiments, and for shoveling it around between
these various phases of analysis.  They hope to add some internet soon,
so they can pool data from their distributed colleagues.


So, I gotta ask.  What's the status of twisted.enterprise these days?
With Oracle?  Webwidgets would help with the web bit, but they'd still
need to write javascript to keep the forms from being completely dumb?
Or can you convince them that there's another interface that's portable
and *drop-dead-easy* to maintain on the client machines, which he can
use as an alternative to web?  Is there an IDE which can make up for all
the shiny things which the Oracle tools have?

If I didn't make the situation sound scary enough before, here's the
truly horrifying detail: there's another faction among the computer-guys
in the lab which wants to use _exclusively_ Perl.

I don't think it's too late.  They're still making up their minds.  But
if there's another option, they've got to know soon, before they're
wholly consumed by the dark side.  And whatever it is, it's got to do a
damn _impressive_ job of selling itself, to overcome both that warm
fuzzy feeling imparted by the "Larry Ellison" brand, and the deap
zealotry of the Perl encampment.

May peace be with you,

 - Kevin

-- 
The moon is waxing gibbous, 99.9% illuminated, 14.5 days old.




From glyph at twistedmatrix.com  Thu Nov  1 12:33:35 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 1 Nov 2001 11:33:35 -0600
Subject: [Twisted-Python] Enterprise, do you copy?
In-Reply-To: <20011031221552.A1625@troglodyte.menefee>
Message-ID: <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>

On Thursday, November 1, 2001, at 12:15  AM, Kevin Turner wrote:

> ...hello?  Hello?  Is anyone receiving this transmission?

[snip complaint about poorly-connected multiple language environment]

> Ye gods, man.  Can anyone save this tragedy?

[snip description of big piles of data]

[snip description of mouse-blood-thirsty research scientists]

> So, I gotta ask.  What's the status of twisted.enterprise these days?
> With Oracle?  Webwidgets would help with the web bit, but they'd still
> need to write javascript to keep the forms from being completely dumb?
> Or can you convince them that there's another interface that's portable
> and *drop-dead-easy* to maintain on the client machines, which he can
> use as an alternative to web?  Is there an IDE which can make up for all
> the shiny things which the Oracle tools have?

I hate to say this, but Twisted is not really in this 'market space' 
yet. This is a "traditional" (insofar as any tradition has yet 
developed) web application, and Twisted probably can't help too much.  
We aim to be there one day, but let me give you a brief description of 
why we're not yet...

Twisted is currently a framework for Python.  Not an IDE, not a 
web-platform development environment.  Web accessibility features are an 
equal partner of several different modes of accessibility.  "Enterprise" 
(relational storage) is still in the prototyping phase, and there are no 
applications yet that use it.

This means it isn't good for quick'n'dirty web apps unless you already 
know it; it certainly isn't good for quick'n'dirty web apps that you 
expect to scale.  [yet]  If you want to have any degree of integrated 
services (an AIM robot which can be configured through a web page or an 
IRC server, for example), then Twisted will be an advantage.  Also, if 
you're developing customized client software, PB can be a huge help in 
getting past the initial milestone of getting your client and server 
connected.

All of these tasks involve a degree of hacking proficiency above and 
beyond that required to go through a JDeveloper wizard and click on 
"-YES-! ENTERPRISE! WEB! WOOD GLUE!".  I don't intend to slur the 
intended audience here; I'm saying we would be misrepresenting Twisted 
to say it's *easy* to add new functionality like that.

Of course, the Oracle corporation is lying as well; but that's what they 
do for a living; I'm just an amateur marketer. ;-)

[snip screaming and gnashing of teeth about perl]

> I don't think it's too late.  They're still making up their minds.  But
> if there's another option, they've got to know soon, before they're
> wholly consumed by the dark side.  And whatever it is, it's got to do a
> damn _impressive_ job of selling itself, to overcome both that warm
> fuzzy feeling imparted by the "Larry Ellison" brand, and the deap
> zealotry of the Perl encampment.

OVERGENERALIZATION MODE ENGAGED

I think that your best bet in this particular situation is to befriend 
the Perl camp.  Show them some of the things you can do with Twisted, 
get them interested in Python.  If they want to go with raw perl, they 
probably understand that having a few  expert people generating code can 
be a lot better than a lot of inexpert people using tools they don't 
quite understand.  They won't be surprised when they hit a rough edge, 
and won't be shy about contributing changes back to the community.  It's 
likely that you won't be able to convince them, but at least you'll be 
speaking the same language.

Those who are pushing for JDeveloper are beyond hope; we don't have a 
big name behind Twisted (unless your father's employer knows the true 
and description-defyingly sinister meaning of "Twisted Matrix 
Laboratories", which I find unlikely).  We don't have big piles of money 
to wow them with flashy demos, and we  don't have any existing 
"customers" who use the "product" in the way that they expect to.  In 
many ways, the product they are shopping for doesn't do nearly the same 
thing as Twisted does; they want buttons to click on, not library 
functionality to use.

i-used-to-be-a-java-developer-too,-make-of-that-what-you-will-ly y'rs,

--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From carmstro at twistedmatrix.com  Thu Nov  1 13:34:30 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 1 Nov 2001 12:34:30 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: WebSite/twistedmatrix.com index.epy,1.22,1.23
In-Reply-To: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com>; from itamarst@twistedmatrix.com on Thu, Nov 01, 2001 at 05:06:33AM -0600
References: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com>
Message-ID: <20011101123429.A26644@twistedmatrix.com>

On Thu, Nov 01, 2001 at 05:06:33AM -0600, Itamar Shtull-Trauring wrote:
> Update of /cvs/WebSite/twistedmatrix.com
> In directory zaibach:/tmp/cvs-serv10487
> 
> Modified Files:
> 	index.epy 
> Log Message:
> added some info on what Twisted actually is

[snip diff..]

Isn't that what whatis.html is for?





From acapnotic at twistedmatrix.com  Thu Nov  1 14:34:36 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 1 Nov 2001 11:34:36 -0800
Subject: [Twisted-Python] Enterprise, do you copy?
In-Reply-To: <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>
References: <20011031221552.A1625@troglodyte.menefee> <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>
Message-ID: <20011101113436.A3063@troglodyte.menefee>

On Thu, Nov 01, 2001 at 11:33:35AM -0600, Glyph Lefkowitz wrote:
> [snip description of mouse-blood-thirsty research scientists]
[...]
> We aim to be there one day, but let me give you a brief description of 
> why we're not yet... 
[snipped]

> I think that your best bet in this particular situation is to befriend 
> the Perl camp.
[...]
> Those who are pushing for JDeveloper are beyond hope;
[...]
> All of these tasks involve a degree of hacking proficiency above and 
> beyond that required to go through a JDeveloper wizard and click on 
> "-YES-! ENTERPRISE! WEB! WOOD GLUE!"

Well, let me clarify a little how they arrived at the current position.
Dad "retired" from the Oracle arena some years back, when the web hadn't
*quite* taken over the world yet.  Now he's back in a situation where
he has an Oracle database and a need to make interfaces so people can
work with this data, and make it otherwise accessable.  (Preferrably
interfaces which require zero maintance on the client machine.)  Of
course, this has people saying "Uhh... internet."

So he goes to consult the Oracle, and the voice of Larry Ellison speaks
to him: "Internet?  Enterprise internet web internet.  Java!" and Dad
comes away thinking, "Oh, so that's how people do Oracle these days."

And yeah, there's a strong sense that "creating database interfaces
shouldn't require this much *code*, why hasn't anyone else made it as
easy as Filemaker has? (too bad there are a host of other disadvantages
to developing for Filemaker)", and I know that nothing Twisted currently
has is going to be really satisfying in that respect; that's what makes
Oracle JDeveloper and its wizardly companions look appealing.

But he also knows that in all likelyhood, someone will have to edit
some of this wizard-generated code someday, and he's quite concerned
that they be able to do so without having them shipped down to the
Neurology lab afterwards.  If my understanding of the environment is
accurate, at least a fair share of the people working on the interfaces
are past the "ENTERPRISE! WEB!  WOOD GLUE!" stage, so I would think that
code maintaniablitity is probably going to be at least as important as
clickability.

Nobody there currently knows Java, the only argument for it is "it's
what Oracle uses today, so if we want to work with Oracle products, this
is what we do."

> We don't have big piles of money to wow them with flashy demos, and we
> don't have any existing "customers" who use the "product" in the way
> that they expect to.
[...]
> "Enterprise" (relational storage) is still in the prototyping phase,
> and there are no applications yet that use it.

There's a relatively low PHB presence here, so while flashy demos would
help, it's not scrictly necessary -- persuasive practical arguments
could be effective.  However, the second issue -- the lack of maturity
and customer base -- is certain to be a killer.

Well, I had to ask.  Thank you for your honest appraisal.

"In-dread-of-being-subjected-to-a-"I'm-learning-java-and-think-it's-stupid"-rant-over-Thankgiving-dinner"-ly yours,

 Kevin

-- 
The moon is waning gibbous, 99.9% illuminated, 15.0 days old.




From lists at itamarst.org  Thu Nov  1 19:08:12 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 02 Nov 2001 02:08:12 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: WebSite/twistedmatrix.com index.epy,1.22,1.23
References: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com> <20011101123429.A26644@twistedmatrix.com>
Message-ID: <3BE1E3EC.9010306@itamarst.org>

Chris Armstrong wrote:


> Isn't that what whatis.html is for?


First rule of marketing: Most people have the attention span of a 
hummingbird on speed. The explanation of what the hell Twisted is should 
be right up front, where people can see them, not on a different page.

The exception is of course when there already is automatic recognition, 
as with Budweiser, where you already know what is. In these cases 
they're trying to sell you on a image, as in "well-endowed young ladies 
enjoy drinking this stuff". Or maybe "drinking this will make you grow 
breasts", those subway ads were pretty unclear about which of the points 
they were trying to make...

But I digress.





From carmstro at twistedmatrix.com  Fri Nov  2 00:26:44 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 1 Nov 2001 23:26:44 -0600
Subject: [Twisted-Python] The never-ending quest for 1.0
Message-ID: <20011101232644.A10886@twistedmatrix.com>

Well, glyph has guilted me into trying out this "release manager" thing
tonight, since I, like, don't actually code anything. I'm gonna _try_ to
get 0.12.0 out tomorrow (well, later today), but my girlfriend might rip me
away from my computer (friday night, and all). If I don't have it 
released by the weekend, (and it's not because of a bunch of bugs), 
then I give you permission to hunt me down and lynch me for my lack of
responsibility. Speaking of responsibility, I think release manager
might actually fit me somewhat, since it's not such a consistent
thing, and doesn't directly involve much coding (i get to yell at
whoever made a bug, unless they're not around, in which case I would try to
find another idle twisted.minion to persuade to fix the bug, and if none of
those around, only THEN will I attempt to fix a bug myself ;) ;))

My humour would probably be more on the ball, but I'm not in top shape
today (yeah yeah, I know you're thinking "what humour?"). sorry.

--
Chris Armstrong <carmstro at twistedmatrix.com>
http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Fri Nov  2 21:39:11 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 2 Nov 2001 18:39:11 -0800
Subject: [Twisted-Python] ingtkernet._conditions
Message-ID: <20011102183911.A5445@troglodyte.menefee>

In Twisted/twisted/internet/ingtkernet.py revision 1.3:
> _conditions = {
>     gtk.GDK.INPUT_READ: 'Read',
>     gtk.GDK.INPUT_WRITE: 'Write',
>     
>     # This is here because SOMETIMES, GTK tells us about this
>     # condition (wtf is 3!?! GDK.INPUT_EXCEPTION is 4!) even though we

These are *bit flags*, so 3 is INPUT_READ & INPUT_WRITE.
I'm not sure what the correct course of action is to take here;
I tried calling both doRead and doWrite, but that only resulted in
brokenness.

>     # don't ask.  I believe this is almost always indicative of a
>     # closed connection.
>     3: 'Read'
>     }

Also relevant in the description of the GDK.INPUT_READ flag:
] the file descriptor has become available for reading. (Or, as is
] standard in Unix, a socket or pipe was closed at the other end; this
] is the case if a subsequent read on the file descriptor returns a
] count of zero.)


-- 
The moon is waning gibbous, 97.6% illuminated, 16.2 days old.




From lists at itamarst.org  Sun Nov  4 10:57:36 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 04 Nov 2001 17:57:36 +0200
Subject: [Twisted-Python] Call for developers: PB for Java
Message-ID: <3BE56570.6020406@itamarst.org>

Hi everyone,

I've started working on a PB implementation for Java. Banana support is 
finished, next up is jelly support, and then finally pb support. If anyone 
is interested in helping please contact me, on #python or by email.

Cheers!





From carmstro at twistedmatrix.com  Sun Nov  4 13:43:32 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 04 Nov 2001 13:43:32 -0500 (EST)
Subject: [Twisted-Python] Twisted 0.12.0
Message-ID: <20011104.134332.161042811.carmstro@twistedmatrix.com>

I'm not one for PR writing, so this is short. ;)

There's a new Twisted release at http://twistedmatrix.com. It's a major 
feature enhancement and bug-fix release, and it went rather smoothly -- 
if you'll notice, everyone's personal webservers on zaibach are still running,
even without needing a restart :-)

--
Chris Armstrong  |  carmstro at twistedmatrix.com  |  cjast3 at robert-morris.edu
Web Page: http://purl.org/net/ChrisArmstrong




From acapnotic at twistedmatrix.com  Mon Nov  5 16:09:04 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 5 Nov 2001 13:09:04 -0800
Subject: [Twisted-Python] Re: internet passport.py,1.15,1.16
In-Reply-To: <E160kgH-0007gE-00@zaibach.twistedmatrix.com>
References: <E160kgH-0007gE-00@zaibach.twistedmatrix.com>
Message-ID: <20011105130904.A16651@troglodyte.menefee>

On Mon, Nov 05, 2001 at 08:24:53AM -0600, Glyph Lefkowitz wrote:
> Modified Files:
> 	passport.py 
> Log Message:
> * small API change to internet.passport; Perspectives are now only
>   attached to the service when they are added to it.

Um, okay.  But why?  Your commit just added an extra line to every place
in the codebase which created a Perspective, without making that code
any more expressive.  If Perspectives in fact only exist to provide a
perspective to a specific service, in what situation would you create
Perspectives without having a Service to pass to the constructor?

Even given the existance of such situations, Service.createPerspective
is decidedly *not* one of them.  Why does a Perspective returned from
a Service method -- which has been added to the Service's list of
perspectives -- not have its service attribute set?

-- 
The moon is waning gibbous, 80.7% illuminated, 19.0 days old.




From glyph at twistedmatrix.com  Mon Nov  5 17:29:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Nov 2001 16:29:26 -0600
Subject: [Twisted-Python] Re: internet passport.py,1.15,1.16
In-Reply-To: <20011105130904.A16651@troglodyte.menefee>
Message-ID: <E160sMz-0000jm-00@zaibach.twistedmatrix.com>

On Monday, November 5, 2001, at 03:09  PM, Kevin Turner wrote:

> On Mon, Nov 05, 2001 at 08:24:53AM -0600, Glyph Lefkowitz wrote:
>> Modified Files:
>> 	passport.py
>> Log Message:
>> * small API change to internet.passport; Perspectives are now only
>>   attached to the service when they are added to it.
>
> Um, okay.  But why?  Your commit just added an extra line to every place
> in the codebase which created a Perspective, without making that code
> any more expressive.  If Perspectives in fact only exist to provide a
> perspective to a specific service, in what situation would you create
> Perspectives without having a Service to pass to the constructor?

In any service where you wish to migrate users across server boundaries 
or among different simulations, you'll need some flexibility there.  
That's why I added the createPerspective method at the same time; I 
think the average case should be to assume that perspective creation is 
the responsibility of a particular service.

> Even given the existance of such situations, Service.createPerspective
> is decidedly *not* one of them.  Why does a Perspective returned from
> a Service method -- which has been added to the Service's list of
> perspectives -- not have its service attribute set?

You are completely correct.  I just checked in a fix.

--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From acapnotic at twistedmatrix.com  Tue Nov  6 17:14:43 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 6 Nov 2001 14:14:43 -0800
Subject: [Twisted-Python] Perspective Shift
In-Reply-To: <E160sMz-0000jm-00@zaibach.twistedmatrix.com>
References: <20011105130904.A16651@troglodyte.menefee> <E160sMz-0000jm-00@zaibach.twistedmatrix.com>
Message-ID: <20011106141443.A22318@troglodyte.menefee>

In my recent inspection of passport.Perspective, I got to thinking:

My first time through Perspective Broker school, I got the impression
that a Perspective is the way a client sees a Service.  In more
practical terms, it seemed a Perspective is an object which provides the
client with an interface to the Service.  In this way a Perspective also
acts as a mediator between client and Service; not giving the client
unfettered access to the Service object, but only to methods defined in
the Perspective's interface.

So the stick figure in my head looks like this:
client <----> interface-perspective -- Service

But really, any podunk Referencable object holding a .service attribute
could do that.  Why, I wonder, all the fanfare about Perspectives? ...


Since the introduction of Passport, my understanding of Perspectives
has been shifting.  One realization is that Perspective objects aren't
transient objects which come and go with the clients who start and stop
viewing through them.  They're persistant objects, they hold state about
the "owners" they represent.  So now, slowly, Perspectives aren't just
how a client interfaces with a Service, they also are what a Service
knows about its clients.

The arrow in my stick figure begins to waver from "this thing is about a
Service" side, towards the "this thing is about a client" side.

Passport; Authorizers, Identities.  Glyph says he wants an object
representing a client's global identity, independant of any particular
service, and thus class Identity is born.  Again, Perspectives firmly
take the middle ground.  A client has an Identity, an identity which
must remain free of any Service-specific baggage.  Any aspects of a
client's state related to a particular Service go into its Perspective
to that service.

Meanwhile, Services still know nothing of Identities, still dealing only
with Perspectives.  To get to a Service though, you've now got to ask an
Authorizer.  Access is kept in the form of (service, perspective) pairs.
You *can't* treat a Perspective instance as transient and disposable
now-- were it to disappear, you might not be able to access the Service
again!

With the latest stirring of the pot,
> In any service where you wish to migrate users across server boundaries 
> or among different simulations, you'll need some flexibility there.  

it seems that the immutable nature of the
Perspective-instance-to-Service-instance link has been cut.  Presumably
the serviceType will remain the same, even if a Perspective drifts among
Service instances.  So I guess the client's conception of "this is my
view of this service" is still accurate.  It seems though that the arrow
has swung quite far to the "this thing is about a client" side.


So, that's my evolving perspective on the evolution of Perspectives.
Partly just thinking out loud.  When I started this message, I wasn't at
all sure that Perspectives are the same thing as they used to be, but I
guess I'm satisfied for now.

If I got any of it wrong...  well, you'll let me know.

 - Kevin

-- 
The moon is waning gibbous, 70.9% illuminated, 20.1 days old.




From lists at itamarst.org  Wed Nov  7 08:04:08 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 15:04:08 +0200
Subject: [Twisted-Python] Perspective Broker for Java works!
Message-ID: <3BE93148.6010100@itamarst.org>

Hi everyone,

Just a status report - PB for Java is up to the point where it can connect 
to the simple example service in doc/examples/pbsimple.py and get the 
response. Which means that implementing a (very) basic implementation with 
equivalent functionality to XML-RPC takes about 3 days.

As always, I'd appreciate any help in making this a complete implementation.





From glyph at twistedmatrix.com  Wed Nov  7 09:49:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 7 Nov 2001 08:49:56 -0600
Subject: [Twisted-Python] Film At 11
Message-ID: <E161U9V-0003Co-00@zaibach.twistedmatrix.com>

This conversation has been edited for length, to fit your screen, and, 
in some cases, content:

<itamar> hi glyph
<glyph> hit itamar
<glyph> hi itamar, even ;)
<itamar> I'm glad to say we now have java interop
<glyph> itamar: So I read from the list
<itamar> now's about the point where I could use some help
<itamar> not that that's gonna happen
<glyph> itamar: So I thought of another cool hack that you might want to 
work on
<glyph> totally unrelated to java ;)
<itamar> yes?
<glyph> itamar: Don't run away --
<glyph> "The configuration system"
<itamar> mmm
<glyph> itamar: I just had a conversation about it last night.
<itamar> what exactly where you thinking of?
<glyph> itamar: Let me ramble about vision for a moment (you'll probably 
see this in an email sometime soon, too)
<itamar> ok
<glyph> Twisted isn't a particularly great webserver, when you compare 
functionality blow-for-blow with apache.  It's not a great chatserver, 
when it has to slug it out with ircd.  But we all like Twisted more than 
either of those -- why?
<glyph> Well, because it's an IRC server *and* a web server.
<itamar> right
<glyph> What makes Twisted special is the degree of integration that it 
allows for all its services.
<glyph> However, this integration is effectively lost to anyone who 
isn't a programmer (and to some extent, to anyone who isn't already 
rather familiar with the codebase) because there's no metaphor for the 
integration.  Everything is rather concrete, speaking in terms of file 
descriptors and delayed events and what-have-you.
<itamar> glyph: ok -
<glyph> With the refactoring that we're talking about, centering around 
t.i.m.A, there is going to be at least a common metaphor for what stuff 
connects to what bit of the network...
<itamar> right
<glyph> The configuration application that I envision has a unified 
notion of the "things that do stuff", although I haven't come up with a 
good name for them.  Zope-like, you'll have a menu to create an object 
of lots of different types (like a Words service, a mail service, a web 
site, etc), some of which listen on ports directly, some of which are 
indirectly connected to the network through PB publishers or web 
resources.
<itamar> well, meanwhile it sounds like a mktap with a slightly better UI
<glyph> itamar: the use-case that I'm thinking of for it is creating a 
web site and a words service, hooking up a tendril to a persistent IRC 
server, creating a personal website and mounting the registration and 
userlist widgets somewhere within your personal web space.
<itamar> hmmm... a configuration tool for web would be quite nice for 
starters, yes
<glyph> itamar: Note that I mention spawning a tendril as well -- one of 
the goals of this tool would be to unify mktap and im.  You really ought 
to just create a "persistent outgoing chat connection w/ Tkinter UI" as 
an object, put it in your tap, and have it run in your personal twistd 
server
<glyph> itamar: this would also clearly define the role of "plugins" -- 
they are code which adds stuff to that menu of base types of objects one 
can create
<glyph> I'm inclined to say that for starters, each object defines its 
own web form that allows you to configure it
<itamar> how would you model something that connects web and a words 
service?
<itamar> this is where you start wishing for a 3d gui
<glyph> itamar: optimally, yeah, you'd have something like a 3D visio 
where you could dynamically drag connections
<itamar> actually a 2d one would do
<glyph> but working with "web form" as the metaphor, there's still quite 
a lot you can do :)
<itamar> where you drag lines from a object to another
<glyph> when you create a words service, it publishes several web 
objects, none of which are connected to anything
<glyph> so when you go to a page that wants to pop up a list of possible 
objects you could add as a web resource, those appear.
<glyph> It's like your application has a "bag" of sub-objects that you 
"carry around" in the configuration interface
<itamar> I like it. of course my innate dislike of web (or GUI, for that 
matter) programming is getting in the way.
<itamar> but it would be good for my software as well, since it has all 
these pluggable components you need to mix and match
<itamar> and then there's monitoring components (web, nt performance 
monitor)
<itamar> and logging components (syslog, file, nt log)
<glyph> itamar: Yeah.  The reason that this configuration thing came to 
me is because someone who was asked to do a technical evaluation of 
Twisted, upon completing his evaluation, had only one thing to say
<glyph> "What is it *for*?"
<itamar> what?
<itamar> what is what for?
<glyph> itamar: What is Twisted for.
<sayke> glyph: that was my response. "that's a damn impressive kitchen 
sink ya got there" ;)
<glyph> itamar: and I realized that *this* is what Twisted is for.  Even 
though we don't have a very good metaphor for it or interface to it, no 
other server framework even aspires to this sort of integrated 
environment.
<glyph> There are a few "java Application servers" that make-believe, 
except that they ONLY do web, and ONLY for business, and severely limit 
the sort of apps you can write with them.
<itamar> yeah, or Zope, which has ftp/http/webdav/xmlrpc, but attempts 
to add nttp or imap have failed
<glyph> itamar: ftp/http/webdav/xmlrpc are still all just ways of 
publishing structured documents
<glyph> itamar: they're not fundamentally different ways of interacting 
with the system
<itamar> yeah
<glyph> itamar: nntp and imap, strangely enough, are :)
<itamar> well, actually, there's a irc bot written for zope
<itamar> on to concretes - is there any way we can do without a web 
interface?
<glyph> itamar: well, a first step in this direction is just a unified 
set of utility methods :)
<itamar> how about anygui? they are promising a html interface
<glyph> itamar: anygui is crack
<itamar> and a curses interface
<itamar> glyph: why do you say that?
<glyph> itamar: Have you ever done any work with webwidgets?
<itamar> nope
<glyph> itamar: take a look at the form widget
<glyph> itamar: it's staggeringly little code to write
<itamar> one sec
<itamar> where can I find an example?
<glyph> You might have to refactor it a little bit, but the basic idea 
is you define what inputs your form takes, then it renders the form for 
you and calls back to a method with the appropriate signature with each 
form value as an arguemnt when the user POSTs
<itamar> ok, so we can have a generic configuration API, and have a web 
interface to that, and a tkinter interface to it etc.?
<glyph> itamar: twisted.web.guard.AuthForm
<glyph> itamar: yes.
<glyph> itamar: I don't want to do anygui, because I'd like the tkinter 
interface to be *different* from the web interface.  To begin with I 
think we should go with web-only and refactor once we see what 
ocnfiguration patterns emerge, but if you want to go with tkinter-only 
or gtk-only for the first pass... hey, I don't have the time to write 
this :)
<itamar> mmmm
<itamar> how about registry.registerThingie(type, description, 
parameters, factoryCallable)
<itamar> registry.listThingies(type)
<itamar> I'm going to eat
<itamar> glyph: mail the log to the list



--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From lists at itamarst.org  Wed Nov  7 10:24:58 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 17:24:58 +0200
Subject: [Twisted-Python] Film At 11
References: <E161U9V-0003Co-00@zaibach.twistedmatrix.com>
Message-ID: <3BE9524A.2000106@itamarst.org>

Glyph Lefkowitz wrote:

> This conversation has been edited for length, to fit your screen, and, 
> in some cases, content:


You don't want to know about *that* part. trust me.

Here's what I've come up with so far-

1) the config thing for a given Service has to be a seperate module that 
makes sure *not* to import the service's module. Otherwise we end up 
importing tkinter and gtk and wxwindows every time we run twisted, and this 
sucks up memory.

2) this isn't going work well with the current threading model.







From lists at itamarst.org  Wed Nov  7 13:17:28 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 20:17:28 +0200
Subject: [Twisted-Python] suggestions for changes to PB
Message-ID: <3BE97AB8.8090501@itamarst.org>

Refactoring:

1) For clarity's sake, turn pb into a package:
    pb.local
    pb.remote
    pb.protocol

2) the methods for connecting to a server assume you are using TCP - they 
should use the new connectTCP, connectSSL, etc. API when we do *that* refactor.


Added functionality:

1) Use SRP instead of whatever the current challenge/response is - see 
http://www-cs-students.stanford.edu/~tjw/srp/.

2) Make a login system that uses X.509 certificates for identities (SSL only).

3) Look at SPKI for an alternate certificate-based system (RFC 2693).





From lists at itamarst.org  Thu Nov  8 06:39:48 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 08 Nov 2001 13:39:48 +0200
Subject: [Twisted-Python] Rocks - Reliable Sockets
Message-ID: <3BEA6F04.7070702@itamarst.org>

<http://www.cs.wisc.edu/~zandy/rocks/>





From lists at itamarst.org  Thu Nov  8 12:34:26 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 08 Nov 2001 19:34:26 +0200
Subject: [Twisted-Python] Sped-up banana
References: <Pine.LNX.4.33.0110301310490.22821-300000@ostrich-deluxe.labs.redhat.com>
Message-ID: <3BEAC222.5060709@itamarst.org>

Elliot Lee wrote:

> The encoder redone in C, and handles 'long' numbers correctly.
> 
> At radix' request,
> -- Elliot


What's the apiarymisc module you use in banana.py?





From carmstro at twistedmatrix.com  Thu Nov  8 12:43:13 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 08 Nov 2001 12:43:13 -0500 (EST)
Subject: [Twisted-Python] Sped-up banana
In-Reply-To: <3BEAC222.5060709@itamarst.org>
References: <Pine.LNX.4.33.0110301310490.22821-300000@ostrich-deluxe.labs.redhat.com>
	<3BEAC222.5060709@itamarst.org>
Message-ID: <20011108.124313.846967840.carmstro@twistedmatrix.com>

From: Itamar Shtull-Trauring <lists at itamarst.org>
Subject: Re: [Twisted-Python] Sped-up banana
Date: Thu, 08 Nov 2001 19:34:26 +0200

> Elliot Lee wrote:
> 
> > The encoder redone in C, and handles 'long' numbers correctly.
> > 
> > At radix' request,
> > -- Elliot
> 
> 
> What's the apiarymisc module you use in banana.py?

I don't think he's subscribed to the list.. You'll have to mail him directly or
find him on IRC.

--
Chris Armstrong <carmstro at twistedmatrix.com>
http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Fri Nov  9 10:12:55 2001
From: andrew at puzzling.org (Andrew Bennetts)
Date: Sat, 10 Nov 2001 02:12:55 +1100
Subject: [Twisted-Python] Tiny bug in echoserv_threaded.py example
Message-ID: <20011110021255.A2057@frobozz.local>

echoserv_threaded.py doesn't work with 1.5.2.  Here's a trivial patch to
fix it:

--- echoserv_threaded.py        Sat Nov 10 02:07:34 2001
+++ echoserv_threaded_fixed.py  Sat Nov 10 02:06:32 2001
@@ -55,7 +55,7 @@
 class Echo(Protocol):
 
     def connectionMade(self):
-        self.messagequeue = Queue.Queue()
+        self.messagequeue = Queue.Queue(0)
         self.handler = Handler(self)
         self.handler.start()
 
Regards,

-Andrew.




From acapnotic at twistedmatrix.com  Sun Nov 11 14:58:02 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 11:58:02 -0800
Subject: [Twisted-Python] ObjectBrowser references
Message-ID: <20011111115802.A18083@troglodyte.menefee>

So, there's been some confusion expressed (by certain
sleep-deprived individuals) about what it is that the
class twisted.python.explorer.ObjectBrowser is for.
Given that this is the first-pass implementation and
a number of questionable decisions were made in the
implementation, that's to be expected.

One train of questions goes like this:

 Q) Why is ObjectBrowser a class at all, and not just a collection of
    introspection functions?

 A) You're right, the browse_* methods make no use of an
    ObjectBrowser instance's state, and could well be static functions.
    The only reason to inXXX (what's the verb "to create an instance of
    a class"?) ObjectBrowser is so it can hold on to a consistant
    namespace.
    (See also the comment preceding the browse_ definitons for another
    reason why these methods should be gathered in a container.)

 Q) What's it doing holding namespaces?

 A) It eval()uates the identifiers (identifiying expressions, really)
    given to it in its namespace.

 Q) Ugh.  What's ObjectBrowser got to use eval() for?  Why doesn't it 
    just take an object?

And thus we arrive at the crux of the issue.

Here's my thinking:

Requirement: When an object is "browsed", the result will contain
references to other objects; it's attributes, sequence elements, etc.
It must be easy for the user to take one of those references and
browse that object.

Requirement: ObjectBrowser be usable via remote interface, i.e. PB or
web.
 
Consequence: When returning references to other objects in its results,
ObjectBrowser cannot return Python references to the objects themselves.
It must return some more "portable" reference which can freely be passed
both ways through the boundry of this Python process.

This is not the first time man has encountered such a problem; it's the
same problem Pickle faces when referencing objects "outside the pickled
data stream".  It's central to the whole concept of Perspective Broker
remote references.  It's why Glyph keeps saying we need some sort of URI
to identify objects with.
 
But not every object is pb.Referenceable, and we don't have a distributed
object URI scheme yet.  So the only way I can think of to refer to a
particular object is the way a programmer refers to the object when
speaking to the interpter -- by its identifier.  that string which, when
evaluated by the interpreter, is a reference to the object.  So that's
what ObjectBrowser returns.  ObjectLinks represeting objects with
particular identifiers.

Now we go back to the first requirement, "It must be easy for the user
to take one of those references and browse that object."  Or, as a unit
test:

    lookAtMe = SomeThing()
    
    # Look at this object.
    objectLink1 = browser.browseIdentifier('lookAtMe')
    
    # Now look at some object related to this one.
    # Simplest case: I am related to me.
    myIdentifier = objectLink1.identifier
    objectLink2 = browser.browseIdentifier(myIdentifier)
    
    # Did I get the object with the desired relation?
    # (Simplest case: Was I really me?)
    failUnlessEqual(objectLink1.id, objectLink2.id)


Now, to obtain objectLink1, you could argue that we could have used
browser.browseObject(object=lookAtMe, identifier='lookAtMe'), and you're
right.  But to obtain objectLink2, when we only have the contents of
objectLink1 to work from, we only have the identifier to pass back.

So that's why I think ObjectBrowser needs to accept identifiers,
and that's why I guess ObjectBrowser has to use eval(),

 ...

Questions, comments, reservations?
Suggestions?

-- 
Kevin Turner <acapnotic at twistedmatrix.com> | OpenPGP encryption welcome here
The moon is waning crescent, 18.2% illuminated, 25.4 days old.




From carmstro at twistedmatrix.com  Sun Nov 11 17:10:46 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 11 Nov 2001 17:10:46 -0500 (EST)
Subject: [Twisted-Python] ObjectBrowser references
In-Reply-To: <20011111115802.A18083@troglodyte.menefee>
References: <20011111115802.A18083@troglodyte.menefee>
Message-ID: <20011111.171046.846932419.carmstro@twistedmatrix.com>

I'm the guy that had sleep-deprived reservations about what Acap was doing,
but I finally beat him^W^Wgot him to understand what I was talking about.

From: Kevin Turner <acapnotic at twistedmatrix.com>
Subject: [Twisted-Python] ObjectBrowser references
Date: Sun, 11 Nov 2001 11:58:02 -0800

[snip everything..]

Here's the plan that Acapnotic and I came up with, after hours of figuring
each other out: 

Refactor existing ObjectBrowser into ObjectExaminer and ObjectWatcher.
Get rid of all namespace/evaluating stuff for now (the "browsing" stuff).
This will probably be reintroduced in another form later. We will also probably
have an ExaminerFactory, which returns different kinds of ObjectExaminers based
on what kind of object you tell it to examine (I'm not so sure we'll need
ObjectExaminers, but we probably will).

So the idea is to be able to say (in manhole):

o = SomeObject()
look at o

This will bring up a slick GUI which allows you to examine the attributes,
type, class, etc of an object, as well as allow you to attach a "watch"
to this object. (just had an idea -- a default ObjectWatcher with a callback
to update the data display for the object being examined. discuss.)

All this slick GUI will do is create an ObjectExaminer for that object 'o'.
This will be done with the Manhole client (that is, the manhole client will
figure out what the string "o" represents, not the manhole service/explorer.

Originally, I said we ought to refactor ObjectBrowser into ObjectBrowser,
ObjectExaminer, and ObjectWatcher. But then I said "let's just ignore 
ObjectBrowser for now, and bring it back later if we find we need it."
Well, I've told acap that I've had ideas brewing in my head, and that
I didn't want to talk about them yet, but I'll say this much:
I think the "object browsing" functionality (namespaces+eval) might indeed
be brought back into the "ObjectExaminer" class, or at least be somehow
closely related to it. That is how we will be able to open up a GUI
for object A, click on Object B inside of it, thus creating a new GUI
for object B. I'm not quite certain how this should be done, and that's
why the plan is to simply get rid of Browsing functionality for now. 

Kevin and I will probably be hacking on this tonight. This probably means
that the release of 0.12.1 (which was planned to be released very soon)
will be pushed back a few days. No big deal, though.

I hope this all made sense (especially to Kevin, since I tried hard to get him
to understand it ;)).

--
<glyph_> it's times like this when I wish I could just swallow my pride and use
a standard thing like asyncore :)
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Sun Nov 11 18:07:57 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 15:07:57 -0800
Subject: [Twisted-Python] ObjectBrowser references
In-Reply-To: <20011111.171046.846932419.carmstro@twistedmatrix.com>
References: <20011111115802.A18083@troglodyte.menefee> <20011111.171046.846932419.carmstro@twistedmatrix.com>
Message-ID: <20011111150757.A18818@troglodyte.menefee>

I am on the list, ya know.  You don't need to CC me.  :)

On Sun, Nov 11, 2001 at 05:10:46PM -0500, Chris Armstrong wrote
...uh, stuff, and

> I hope this all made sense (especially to Kevin, since I tried hard to
> get him to understand it ;)).

I tried hard to get you to me understand it too!  

It was like pulling teeth, but I finally got him to tell me how dividing
the class and dropping the ObjectLink class was a good thing.  Remember
when I said I needed a portable reference to an object, "but not every
object is pb.Referenceable"?  The solution being: wrap the object in a
pb.Referenceable.  Nice.  Simple.  Yay.

> We will also probably have an ExaminerFactory, which returns different
> kinds of ObjectExaminers based on what kind of object you tell it to
> examine (I'm not so sure we'll need ObjectExaminers, but we probably
> will).

"not so sure we'll need ObjectExaminers"?  You meant to write
"not so sure we'll need *different kinds of* ObjectExaminers", right?

Ok, that's all I've got to say to the archive now.  The rest goes to
either IRC or emacs.

-- 
Kevin Turner <acapnotic at users.sourceforge.net> | OpenPGP encryption welcome here




From acapnotic at twistedmatrix.com  Sun Nov 11 18:17:44 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 15:17:44 -0800
Subject: [Twisted-Python] twisted.words.ui.im3.saveState
Message-ID: <20011111151744.A18979@troglodyte.menefee>

Say, what's up with the proliferationg of numbered imX.py files?

Anyway, what I meant to say was:
im3.py:492: No global (gateway) found

-- 
The moon is waning crescent, 16.9% illuminated, 25.5 days old.




From carmstro at twistedmatrix.com  Mon Nov 12 02:08:17 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 12 Nov 2001 02:08:17 -0500 (EST)
Subject: [Twisted-Python] im bug
Message-ID: <20011112.020817.607957970.carmstro@twistedmatrix.com>

Traceback (most recent call last):
  File "/usr/lib/python2.1/lib-tk/Tkinter.py", line 1285, in __call__
    return apply(self.func, args)
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 639, in logOnOff
    self.logonAccount(account)
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 645, in logonAccount
    missing=im3.logonAccount(self.im,account)
  File "/home/punck/cvs/Twisted/twisted/words/ui/im3.py", line 508, in logonAccount
    for foo,key,bar in gateways.__gateways__[account.gatewayname].loginOptions:
ValueError: unpack list of wrong size

this happened while running accepttests. I was trying to log on to my test account. 
I hit "log on/off" and then that traceback happened, and it just says "attempting"
in the connection status.

--
<mbac> strange
<mbac> all my life i've hated object oriented programming
<mbac> when the problem was simply that i was using C++
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Nov 12 02:27:29 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 12 Nov 2001 02:27:29 -0500 (EST)
Subject: [Twisted-Python] im bug... (oops)
Message-ID: <20011112.022729.640896624.carmstro@twistedmatrix.com>

Sorry. I didn't have the latest CVS. That last bug is obsolete. :( But heh,
I have a couple other bugs to report now :) (There was a syntaxerror in toc.py,
but I've already fixed that myself.)

First off, loading of the ~/.imsaved pickles doesn't work. I get an EofError
every time on the cPickle.load(file).

second, I'm getting this:
Traceback (most recent call last):
  File "/home/punck/cvs/Twisted/bin/im", line 54, in ?
    tkim.main()
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 721, in main
    im3.saveState(f,im.am.getState())
  File "/home/punck/cvs/Twisted/twisted/words/ui/im3.py", line 507, in saveState
    lo=gateway.__gateways__[k].loginOptions
NameError: global name 'gateway' is not defined

whenever I close the IM window after I've already logged on.

--
<Yosomono at efnet> swing is to gui programming what cupholders are to cdrom drives
<Yosomono at efnet> something easily mistaken for the real thing
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From lists at itamarst.org  Mon Nov 12 08:10:13 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 12 Nov 2001 15:10:13 +0200
Subject: [Twisted-Python] PB for Java status report
Message-ID: <3BEFCA35.4050904@itamarst.org>

It's now possible to create Referenceables in Java - meanwhile simple 
remote_xxx style ones only, no support for Perspectives or Viewables yet.

In other words, you can now create PB services in Java as well - I think 
it's pluggable enough that you could integrate this with any Java server 
architecture that uses streams (which is probably all of them :).





From jasbahr at crash.org  Mon Nov 12 09:52:23 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Mon, 12 Nov 2001 08:52:23 -0600
Subject: [Twisted-Python] PB for Java status report
In-Reply-To: <3BEFCA35.4050904@itamarst.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMGEPIHJAA.jasbahr@crash.org>

That's awesome!  

Are you planning a Java applet-client to demonstrate your work later?  :-)

Jason

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Monday, November 12, 2001 7:10 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] PB for Java status report


It's now possible to create Referenceables in Java - meanwhile simple 
remote_xxx style ones only, no support for Perspectives or Viewables yet.

In other words, you can now create PB services in Java as well - I think 
it's pluggable enough that you could integrate this with any Java server 
architecture that uses streams (which is probably all of them :).



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lists at itamarst.org  Mon Nov 12 12:27:56 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 12 Nov 2001 19:27:56 +0200
Subject: [Twisted-Python] Referenceable interfaces in Java
Message-ID: <3BF0069C.8060800@itamarst.org>

Any suggestions on how to deal with keywords args in Java PB referenceables?

If I just ignore them I can make methods in Referenceables be a lot more 
normal looking:

	public Object remote_foo(Integer x)

instead of:

	public Object remote_foo(Object[] args, Map kwargs)

And allow method overloading too.

I could of course implement both policies in different classes, in which 
case I'd be happy for suggestions on a name for such classes.





From lists at itamarst.org  Tue Nov 13 10:20:44 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 13 Nov 2001 17:20:44 +0200
Subject: [Twisted-Python] PB for Java status report
References: <EIEFLCFECLLBKGPNJJIMGEPIHJAA.jasbahr@crash.org>
Message-ID: <3BF13A4C.3090405@itamarst.org>

Jason L. Asbahr wrote:


> Are you planning a Java applet-client to demonstrate your work later?  :-)


I really don't enjoy GUI programming, so... "patches accepted" ;)







From acapnotic at twistedmatrix.com  Tue Nov 13 19:37:31 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 13 Nov 2001 16:37:31 -0800
Subject: [Twisted-Python] non-blocking and non-blocking.
Message-ID: <20011113163731.A26072@troglodyte.menefee>

So, if you run something like the following through manhole:

def spam(n=300):
    for i in xrange(n):
        print "iiIiiIiI", i

spam()

the whole mess comes back when the command has finished completion, and
receiving that much data seems to take the protocol-decoder a while to
decode.  Long enough that it can cause a hiccup, or outright stall, in
the GUI.  So it might be nice to do that processing in incremental bit
so it shares time better.  In twisted.python terms, it'd be in a Looping
construct, or in GTK terms, you'd add it on an idle handler.

Gurgf.  My brain, it is not doing the thinking at this time, so this
post just is to say "don't forget about this; put it on the TODO list or
something."

-- 
The moon is waning crescent, 3.3% illuminated, 27.8 days old.




From lists at itamarst.org  Wed Nov 14 04:25:42 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Nov 2001 11:25:42 +0200
Subject: [Twisted-Python] non-blocking and non-blocking.
References: <20011113163731.A26072@troglodyte.menefee>
Message-ID: <3BF23896.1000400@itamarst.org>

Kevin Turner wrote:

> So, if you run something like the following through manhole:
> 
> def spam(n=300):
>     for i in xrange(n):
>         print "iiIiiIiI", i
> 
> spam()
> 
> the whole mess comes back when the command has finished completion, and
> receiving that much data seems to take the protocol-decoder a while to
> decode.  Long enough that it can cause a hiccup, or outright stall, in
> the GUI.  So it might be nice to do that processing in incremental bit
> so it shares time better.  In twisted.python terms, it'd be in a Looping
> construct, or in GTK terms, you'd add it on an idle handler.


Or, you could return a Deferred and dispatch the action to be done by a 
ThreadDispatcher.








From adam.brett at mail.internetseer.com  Tue Nov 13 18:51:19 2001
From: adam.brett at mail.internetseer.com (adam.brett at mail.internetseer.com)
Date: Tue, 13 Nov 2001 18:51:19 -0500 (EST)
Subject: [Twisted-Python] We are Unable to Reach your Web Page
Message-ID: <7341997.1005695479472.JavaMail.promon@pm66>

There appears to be a problem in reaching the following Web page from 
Philadelphia, Pennsylvania:

   http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
   Error:  Time Out 

This error is most commonly due to an Internet connection problem and does not 
necessarily indicate that your server is down. 

As recommended by the robot Guidelines, this email is to explain our research 
activity and to alert you about the connectivity error we encountered. 
InternetSeer, the world's largest web site monitoring service, does not store 
or publish the content of your pages, but rather uses the information to update 
our ongoing Web Connectivity Study.

To learn more about our study results or to request InternetSeer to continue 
monitoring your Web site in this way,  visit: 
http://scclick.internetseer.com/sitecheck/clickthrough.jsp?I5s57g5f5g5f5j5h52R5sxUSYvpfPM_5azJPQII5vxUSzPM_H_xzSU5bRIH55P5qQxPz5m5c5exUSzPM_H_xzSU5bRIH5eNLzVzN6tLI5bPKXxTVV5cNKTMNy5b5f5f5c5e5c5tWLPxT5b5d5f5c5e5l5c5bQxHI52P5s5d=e3

If you find this information about the availability of your Web site useful, 
we would appreciate your feedback. Should you prefer not to receive these 
error notices in the future please let us know by replying to this email and 
placing "remove" in the subject line. You will be removed from receiving 
further email error notices.

Adam Brett 
Analyst Manager
cs-adam.brett at mail.internetseer.com
InternetSeer.com "Your Remote Web Site Monitor"
http://www.internetseer.com

PS. We will send you a courtesy email when we are able to reach your Web 
page again.

##twisted-python at twistedmatrix.com##
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20011113/46fd74bb/attachment.htm 

From glyph at twistedmatrix.com  Wed Nov 14 12:45:16 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Nov 2001 11:45:16 -0600
Subject: [Twisted-Python] We are Unable to Reach your Web Page
In-Reply-To: <7341997.1005695479472.JavaMail.promon@pm66>
References: <7341997.1005695479472.JavaMail.promon@pm66>
Message-ID: <1005759916.4649.20.camel@zelda>

Sorry about that, folks, I had not restricted posting to list members
for some reason.  I encourage anyone who received that email to follow
it up with the other ISPs involved in transmitting it, and with
internetseer.  Won't happen again.

On Tue, 2001-11-13 at 17:51, adam.brett at mail.internetseer.com wrote:
> There appears to be a problem in reaching the following Web page from 
> Philadelphia, Pennsylvania:
> 
>    http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
>    Error:  Time Out 


-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From carmstro at twistedmatrix.com  Wed Nov 14 18:46:28 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 14 Nov 2001 18:46:28 -0500 (EST)
Subject: [Twisted-Python] We are Unable to Reach your Web Page
In-Reply-To: <1005759916.4649.20.camel@zelda>
References: <7341997.1005695479472.JavaMail.promon@pm66>
	<1005759916.4649.20.camel@zelda>
Message-ID: <20011114.184628.730548063.carmstro@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] We are Unable to Reach your Web Page
Date: 14 Nov 2001 11:45:16 -0600

> Sorry about that, folks, I had not restricted posting to list members
> for some reason.  I encourage anyone who received that email to follow
> it up with the other ISPs involved in transmitting it, and with
> internetseer.  Won't happen again.

Are you sure you don't want non-list members to be able to post? Some people
hate signing up for lists, and still might want to send stuff in (frex,
Sopwith).


> On Tue, 2001-11-13 at 17:51, adam.brett at mail.internetseer.com wrote:
> > There appears to be a problem in reaching the following Web page from 
> > Philadelphia, Pennsylvania:
> > 
> >    http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
> >    Error:  Time Out 

--
<sayke> Acapnotic: don't make it twisted-specific
<dash> sayke: pffft
<dash> sayke: twisted isn't specific
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From lists at itamarst.org  Thu Nov 15 11:06:51 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Nov 2001 18:06:51 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/web server.py,1.22,1.23
References: <E164NMs-0003Zw-00@zaibach.twistedmatrix.com>
Message-ID: <3BF3E81B.5090508@itamarst.org>

Itamar Shtull-Trauring wrote:


> +            
> +            # if this is a "HEAD" request, we shouldn't return any data
> +            if self.method == "HEAD":
> +                self.write = lambda data: None
> +        

I just thought of this - is this gonna break spreadable web servers?






From glyph at twistedmatrix.com  Thu Nov 15 18:09:07 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Nov 2001 17:09:07 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/web
	server.py,1.22,1.23
In-Reply-To: <3BF3E81B.5090508@itamarst.org>
References: <E164NMs-0003Zw-00@zaibach.twistedmatrix.com> 
	<3BF3E81B.5090508@itamarst.org>
Message-ID: <1005865747.932.0.camel@zelda>

Hmm, probably, since the lambda won't be serializeable.  Is this really
even the right place to support HEAD?  I mean, dynamic resources can be
responsible for it themselves, but static.File seems the first obvious
place to do this.

On Thu, 2001-11-15 at 10:06, Itamar Shtull-Trauring wrote:
> Itamar Shtull-Trauring wrote:
> 
> 
> > +            
> > +            # if this is a "HEAD" request, we shouldn't return any data
> > +            if self.method == "HEAD":
> > +                self.write = lambda data: None
> > +        
> 
> I just thought of this - is this gonna break spreadable web servers?

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From lists at itamarst.org  Fri Nov 16 08:01:49 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Nov 2001 15:01:49 +0200
Subject: [Twisted-Python] ONJava.com: Atomic File Transactions, Part 1 [Nov. 07, 2001]
Message-ID: <3BF50E3D.8020406@itamarst.org>

This would be very useful to have in Twisted (e.g. we could have a 
transactional dirdbm):

<http://www.onjava.com/pub/a/onjava/2001/11/07/atomic.html>






From acapnotic at twistedmatrix.com  Sat Nov 17 14:26:35 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 17 Nov 2001 11:26:35 -0800
Subject: [Twisted-Python] Process Producer, Request Consumer
Message-ID: <20011117112635.B3204@troglodyte.menefee>

So somebody asked on the channel today, "how do I get the output of a
system command displayed on my .epy web page?"
Basically, the <!--#exec cmd="foo" --> type of thing, if I remember my
SSI.

Now, given the pieces that are in Twisted, it seems like this should be
at most two lines long:
1) create Process
2) designate the web Request as a consumer of the Process.

except that I don't know how to do #2 quite so succinctly.  Can anyone
speak on this subject?

 - Kevin

-- 
The moon is waxing crescent, 5.7% illuminated, 2.3 days old.




From glyph at twistedmatrix.com  Sat Nov 17 15:21:40 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Nov 2001 14:21:40 -0600
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011117112635.B3204@troglodyte.menefee>
References: <20011117112635.B3204@troglodyte.menefee>
Message-ID: <1006028502.3180.0.camel@zelda>

On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> So somebody asked on the channel today, "how do I get the output of a
> system command displayed on my .epy web page?"
> Basically, the <!--#exec cmd="foo" --> type of thing, if I remember my
> SSI.
> 
> Now, given the pieces that are in Twisted, it seems like this should be
> at most two lines long:
> 1) create Process
> 2) designate the web Request as a consumer of the Process.
> 
> except that I don't know how to do #2 quite so succinctly.  Can anyone
> speak on this subject?

Your answer is, unfortunately, wrong.  From a .epy, the best way to do
that is just to run os.popen().read() :).  Otherwise, you would be
abandoning any further output to that webpage; the Process would take
over and close it.

This is exactly the sort of situation that web.widgets was designed to
remedy.  There is unfortunately no widget currently for "process
output", but there should be.  Patches accepted!.  (There should also be
one for "relational database query", of course).

> -- 
> The moon is waxing crescent, 5.7% illuminated, 2.3 days old.

I'm practically afraid to check -- does Nethack still consider this a
"new moon"? :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From acapnotic at twistedmatrix.com  Sat Nov 17 21:10:20 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 17 Nov 2001 18:10:20 -0800
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <1006028502.3180.0.camel@zelda>
References: <20011117112635.B3204@troglodyte.menefee> <1006028502.3180.0.camel@zelda>
Message-ID: <20011117181020.A3776@troglodyte.menefee>

On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > it seems like this should be at most two lines long:
> > 1) create Process
> > 2) designate the web Request as a consumer of the Process.
>
> [...] wrong. [...] you would be abandoning any further output to that
> webpage; the Process would take over and close it.

Well, for the purposes of discussion, because I don't understand how to
best use Process, let's say that's acceptable behavour.  It's okay if
the request is considered finished as soon as the process is.  Now, how
would I do it?

-- 
The moon is waxing crescent, 7.2% illuminated, 2.5 days old.




From carmstro at twistedmatrix.com  Sun Nov 18 02:32:01 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 18 Nov 2001 02:32:01 -0500 (EST)
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011117181020.A3776@troglodyte.menefee>
References: <20011117112635.B3204@troglodyte.menefee>
	<1006028502.3180.0.camel@zelda>
	<20011117181020.A3776@troglodyte.menefee>
Message-ID: <20011118.023201.730548855.carmstro@twistedmatrix.com>

From: Kevin Turner <acapnotic at twistedmatrix.com>
Subject: Re: [Twisted-Python] Process Producer, Request Consumer
Date: Sat, 17 Nov 2001 18:10:20 -0800

> On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> > On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > > it seems like this should be at most two lines long:
> > > 1) create Process
> > > 2) designate the web Request as a consumer of the Process.
> >
> > [...] wrong. [...] you would be abandoning any further output to that
> > webpage; the Process would take over and close it.
> 
> Well, for the purposes of discussion, because I don't understand how to
> best use Process, let's say that's acceptable behavour.  It's okay if
> the request is considered finished as soon as the process is.  Now, how
> would I do it?
> 

Didn't we come to the conclusion on IRC? I think the idea was

class WebProcess(process.Process):
      def __init__(self, request):
          process.Process.__init__(self)
          self.request = request

      def handleChunk(self, data):
          self.request.write(data)

      def connectionLost(self):
          self.write("</body></html>")
          self.request.finish()
          process.Process.connectionLost(self)

and your .epy would look something like

request.write("<html><body>The output of command is:")
WebProcess(request) #you probably have to do something more than this.. 
                    #register it with the mainloop somehow?


Note that this code is guaranteed to be incomplete, but I think that's the
general idea.

--
<radix> I was drinking tea before this job
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Sun Nov 18 04:17:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 18 Nov 2001 03:17:26 -0600
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011118.023201.730548855.carmstro@twistedmatrix.com>
References: <20011117112635.B3204@troglodyte.menefee>
	<1006028502.3180.0.camel@zelda> <20011117181020.A3776@troglodyte.menefee> 
	<20011118.023201.730548855.carmstro@twistedmatrix.com>
Message-ID: <1006075046.4411.0.camel@zelda>

On Sun, 2001-11-18 at 01:32, Chris Armstrong wrote:
> From: Kevin Turner <acapnotic at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Process Producer, Request Consumer
> Date: Sat, 17 Nov 2001 18:10:20 -0800
> 
> > On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> > > On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > > > it seems like this should be at most two lines long:
> > > > 1) create Process
> > > > 2) designate the web Request as a consumer of the Process.
> > >
> > > [...] wrong. [...] you would be abandoning any further output to that
> > > webpage; the Process would take over and close it.
> > 
> > Well, for the purposes of discussion, because I don't understand how to
> > best use Process, let's say that's acceptable behavour.  It's okay if
> > the request is considered finished as soon as the process is.  Now, how
> > would I do it?
> > 
> 
> Didn't we come to the conclusion on IRC? I think the idea was
> 

[the idea]

> and your .epy would look something like

[an epy]

> Note that this code is guaranteed to be incomplete, but I think that's the
> general idea.

That's some creative handwaving. :)

Unfortunately, you can't FORGET_IT from an epy, so this isn't possible. 
If you want to take a look at how a resource does it, take a look at
CGIScript in twisted.web.twcgi.

In my Copious Free Time, I will attempt to write widgets that do this
and database queries.  Others are invited to do so as well.  Don't use
.epy scripts in the future if you can avoid it though; I want to remove
them from the distribution sometime in the very near future.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From twisted at itamarst.org  Sun Nov 18 06:56:14 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Nov 2001 13:56:14 +0200
Subject: [Twisted-Python] Win32 select in internet.main
Message-ID: <3BF7A1DE.7080200@itamarst.org>

HappyFool pointed out on IRC that the fix for empty read and write lists in 
select.select on windows is only done for iterate(), not run(). Perhaps the 
following patch should be used?

Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.42
diff -c -r1.42 main.py
*** twisted/internet/main.py	2001/10/30 23:55:39	1.42
--- twisted/internet/main.py	2001/11/18 11:54:58
***************
*** 440,454 ****
           del writes[writer]

   if platform.getType() == 'win32':
!     """redefine iterate on WinXX to handle wierd error case when passing 
empty lists to select
       """
!     def iterate():
!         for delayed in delayeds:
!             delayed.runUntilCurrent()
!         if (not reads) and (not writes):
!             pass
           else:
!             doSelect(0)

   class _Win32Waker(styles.Ephemeral):
       """I am a workaround for the lack of pipes on win32.
--- 440,455 ----
           del writes[writer]

   if platform.getType() == 'win32':
!     """redefine select on WinXX to handle wierd error case when passing 
empty lists to select
       """
!     def _select(r, w, e, timeout=None, _realselect=select.select):
!         if (not r) and (not w):
!             return [], [], []
           else:
!             return _realselect(r, w, e, timeout)
!
!     select.select = _select
!

   class _Win32Waker(styles.Ephemeral):
       """I am a workaround for the lack of pipes on win32.





From twisted at itamarst.org  Sun Nov 18 13:08:02 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Nov 2001 20:08:02 +0200
Subject: [Twisted-Python] Possible patch to twisted.python.hook
Message-ID: <3BF7F902.3090701@itamarst.org>

The following patch makes post hook get the result of the hooked function. 
THis lets you do cool stuff like pre/post-conditions (like synchronization, 
they can be optional), but it is most likely rather slower than the current 
hook, which means synchronized classes will be slower.

I have a working implementation of pre/post conditions based on this, if 
anyone's interested.


*** hook.py	Sun Nov 18 20:02:59 2001
--- hook.py-new	Sun Nov 11 11:31:17 2001
***************
*** 48,55 ****
--- 48,58 ----
   none of the hooks raise an exception).  Hooks will be executed in the 
order in
   which they are added.

+ Pre-functions should have the signature (self, args, kwargs).
+ Post-functions should have the signature (success, result, self, args, 
kwargs).
   """

+
   # System Imports
   import string

***************
*** 99,114 ****
   hooked_func = """

   import %(module)s

   def %(name)s(*args, **kw):
       klazz = %(module)s.%(klass)s
       for preMethod in klazz.%(preName)s:
           apply(preMethod, args, kw)
       try:
!         return apply(klazz.%(originalName)s, args, kw)
!     finally:
!         for postMethod in klazz.%(postName)s:
!             apply(postMethod, args, kw)
   """

   _PRE = '__hook_pre_%s_%s_%s__'
--- 102,128 ----
   hooked_func = """

   import %(module)s
+ import sys

   def %(name)s(*args, **kw):
       klazz = %(module)s.%(klass)s
       for preMethod in klazz.%(preName)s:
           apply(preMethod, args, kw)
+
       try:
!         result = apply(klazz.%(originalName)s, args, kw)
!         success = 1
!     except:
!         success = 0
!         result = sys.last_value
!
!     for postMethod in klazz.%(postName)s:
!         apply(postMethod, (success, result) + args, kw)
!
!     if success:
!         return result
!     else:
!         raise result
   """

   _PRE = '__hook_pre_%s_%s_%s__'





From magnus.heino at pleon.sigma.se  Mon Nov 19 03:46:29 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 09:46:29 +0100
Subject: [Twisted-Python] Docs/Examples
Message-ID: <DDEJLBDHAHGLGENIHLFEAEPPCCAA.magnus.heino@pleon.sigma.se>

Hi.

Are there any documentation/examples/tutorials/applications that use twisted
available?

I can't find anything useful, except for browsing the source-code... is that
the way to go, or have I missed something?

/Magnus





From twisted at itamarst.org  Mon Nov 19 04:43:33 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Nov 2001 11:43:33 +0200
Subject: [Twisted-Python] Docs/Examples
References: <DDEJLBDHAHGLGENIHLFEAEPPCCAA.magnus.heino@pleon.sigma.se>
Message-ID: <3BF8D445.1080404@itamarst.org>

Magnus Heino wrote:

> Are there any documentation/examples/tutorials/applications that use twisted
> available?
> 
> I can't find anything useful, except for browsing the source-code... is that
> the way to go, or have I missed something?

1) There's a folder called doc/examples/

2) Some of the packages that come with twisted are actually applications 
based on the framework, e.g. twisted.mail, twisted.manhole and twisted.words.

Hopefully in the next few months we'll be seeing some actual written 
documentation and tutorials.





From magnus.heino at pleon.sigma.se  Mon Nov 19 08:11:23 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 14:11:23 +0100
Subject: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <3BF8D445.1080404@itamarst.org>
Message-ID: <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>

> 2) Some of the packages that come with twisted are actually applications 
> based on the framework, e.g. twisted.mail, twisted.manhole and 
> twisted.words.
> 
> Hopefully in the next few months we'll be seeing some actual written 
> documentation and tutorials.

There are no open source applications using it today that are available?

Anything but browsing the source-code is a speedup in learing time imho :)

/Magnus




From carmstro at twistedmatrix.com  Mon Nov 19 08:37:11 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 19 Nov 2001 07:37:11 -0600
Subject: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>; from magnus.heino@pleon.sigma.se on Mon, Nov 19, 2001 at 02:11:23PM +0100
References: <3BF8D445.1080404@itamarst.org> <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011119073711.A6857@twistedmatrix.com>

On Mon, Nov 19, 2001 at 02:11:23PM +0100, Magnus Heino wrote:
> 
> > 2) Some of the packages that come with twisted are actually applications 
> > based on the framework, e.g. twisted.mail, twisted.manhole and 
> > twisted.words.
> > 
> > Hopefully in the next few months we'll be seeing some actual written 
> > documentation and tutorials.
> 
> There are no open source applications using it today that are available?

Those _are_ Open Source applications that are using it today. :-)
There also some 3rd parties using Twisted. The one that jumps to mind
right away is Tommi Vertanen's (I'm guessing at the spelling there)
"mc-foo", an mp3 organizer/player/something-or-other. http://mc-foo.sf.net/.
He hasn't made a release of the python version yet, so you'll have to 
get his CVS version to see it. But anyway, doc/examples/ and friends
should be great for figuring things out. Also, you might want to drop
by on #python at irc.openprojects.net; a lot of the developers/users hang
out there.





From magnus.heino at pleon.sigma.se  Mon Nov 19 08:49:00 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 14:49:00 +0100
Subject: SV: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <20011119073711.A6857@twistedmatrix.com>
Message-ID: <DDEJLBDHAHGLGENIHLFEAEAGCDAA.magnus.heino@pleon.sigma.se>

> > There are no open source applications using it today that are available?
>
> Those _are_ Open Source applications that are using it today. :-)
> There also some 3rd parties using Twisted. The one that jumps to mind
> right away is Tommi Vertanen's (I'm guessing at the spelling there)
> "mc-foo", an mp3 organizer/player/something-or-other.
> http://mc-foo.sf.net/.

Ok, I'll take a look at it.

> get his CVS version to see it. But anyway, doc/examples/ and friends
> should be great for figuring things out. Also, you might want to drop

Well, I find them a bit too basic. There seems to be a lot of useful things
in twisted.web for example, but no examples of how to use it.

> by on #python at irc.openprojects.net; a lot of the developers/users hang
> out there.

Just found my way there, thanks.

/Magnus





From tv at twistedmatrix.com  Mon Nov 19 11:32:06 2001
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 19 Nov 2001 18:32:06 +0200
Subject: [Twisted-Python] ONJava.com: Atomic File Transactions, Part 1 [Nov. 07, 2001]
In-Reply-To: <3BF50E3D.8020406@itamarst.org>
References: <3BF50E3D.8020406@itamarst.org>
Message-ID: <87n11id8mx.fsf@ki.yok.utu.fi>

Itamar Shtull-Trauring <lists at itamarst.org> writes:

> This would be very useful to have in Twisted (e.g. we could have a
> transactional dirdbm):
>
> <http://www.onjava.com/pub/a/onjava/2001/11/07/atomic.html>

	If someone in the audience does start on a Python reimplementation,
        for heavens sakes talk to an FS hacker before you start. The author
        of this article has either very little clue, or a _very_ weird view
        of the world. Hint: he lets others see changes, as they happen, and
        dares to name the library atomic.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}





From magnus.heino at pleon.sigma.se  Mon Nov 19 02:56:57 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 08:56:57 +0100
Subject: [Twisted-Python] Docs/Examples
Message-ID: <DDEJLBDHAHGLGENIHLFEAEPOCCAA.magnus.heino@pleon.sigma.se>

Hi.

Are there any documentation/examples/tutorials/applications that use twisted
available?

I can't find anything useful, except for browsing the source-code... is that
the way to go, or have I missed something?

/Magnus






From magnus.heino at pleon.sigma.se  Tue Nov 20 03:28:30 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Tue, 20 Nov 2001 09:28:30 +0100
Subject: [Twisted-Python] Sites, protocols etc.
Message-ID: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>

Hi.

I've got a basic app using widgets up'n'running. Still, it would be nice
with an example of how it is meant to be used. Surely someone must have
anything? Doesn't even have to work... I just want to know that I'm doing
things The Right Way.

Next question: Can I serve both xmlrpc and http from the same
application/site? I guess I can, but I havent figured out how...

Thanks,

/Magnus





From magnus.heino at pleon.sigma.se  Tue Nov 20 04:36:17 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Tue, 20 Nov 2001 10:36:17 +0100
Subject: [Twisted-Python] More on XMLRPC
Message-ID: <DDEJLBDHAHGLGENIHLFEIECCCDAA.magnus.heino@pleon.sigma.se>

Hi.

I just want to make sure that my conclusions are right:

If I create an application using widgets, resource.Resource.getChild is used
to traverse the URL to find the callable object. This traverse will always
take place if resource.Resource.isLeaf is set to 0.

The server.Request.process will then assume that we want to return html, and
call render() on the object. After processing all childs, the page will be
returned to the browser.


The xmlrpc-implementation in xmlrpc.XMLRPC sets isLeaf to 1, which means
that that the url wont be traversed, the only thing you can do is to use the
_getFunction and traverse to the function manually, and return it. The
useage of _getFunction is provided by overriding render. This means that you
can't use anything in guard.ResourceGuard to protect your resources.

Override isLeaf in the xmlrpc-class, and the url traversal wil take place,
but server.Request isn't aware of anything but html, which means that it
returns html to xmlrpc, which is not what we want. Not good at all... or am
I wrong?

Seems as if widgets and guards are only usable if you always, always only
want to return html?

/Magnus





From twisted at itamarst.org  Wed Nov 21 04:25:04 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Nov 2001 11:25:04 +0200
Subject: [Twisted-Python] More on XMLRPC
References: <DDEJLBDHAHGLGENIHLFEIECCCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <3BFB72F0.7060105@itamarst.org>

Magnus Heino wrote:


> The xmlrpc-implementation in xmlrpc.XMLRPC sets isLeaf to 1, which means
> that that the url wont be traversed, the only thing you can do is to use the
> _getFunction and traverse to the function manually, and return it. The
> useage of _getFunction is provided by overriding render. This means that you
> can't use anything in guard.ResourceGuard to protect your resources.
> 
> Override isLeaf in the xmlrpc-class, and the url traversal wil take place,
> but server.Request isn't aware of anything but html, which means that it
> returns html to xmlrpc, which is not what we want. Not good at all... or am
> I wrong?
> 

You don't have to use twisted.web.xmlrpc if you don't want to - you can 
create your own class that does whatever you want. If you read the XML-RPC 
spec however you'll see that XML-RPC method path is *not* related to the 
URL, so you'll just end up doing the same thing I did. Please read the docs, 
everything will be clearer:

	http://www.xmlrpc.com/spec






From twisted at itamarst.org  Wed Nov 21 09:51:51 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Nov 2001 16:51:51 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com>
Message-ID: <3BFBBF87.3080100@itamarst.org>

Itamar Shtull-Trauring wrote:

> Update of /cvs/Twisted/twisted/internet
> In directory zaibach:/tmp/cvs-serv28575
> 
> Added Files:
> 	poll.py 
> Log Message:
> preliminary poll()-based event loop
> 


What I learned - the addReader/addWriter/etc. API is far too select() 
oriented. Every other alternative (poll, kqeue, windows event thing) works 
by registering and unregistering objects - correct me if I'm wrong.

So instead of having to emulate a select()-like API, we need a select() 
wrapper that acts like poll(). In other words, addReader and friends must go 
when we refactor the event loop code.








From glyph at twistedmatrix.com  Wed Nov 21 19:34:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Nov 2001 18:34:26 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
In-Reply-To: <3BFBBF87.3080100@itamarst.org>; from twisted@itamarst.org on Wed, Nov 21, 2001 at 04:51:51PM +0200
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org>
Message-ID: <20011121183425.A10937@twistedmatrix.com>

On Wed, Nov 21, 2001 at 04:51:51PM +0200, Itamar Shtull-Trauring wrote:
> 
> What I learned - the addReader/addWriter/etc. API is far too select() 
> oriented. Every other alternative (poll, kqeue, windows event thing) works 
> by registering and unregistering objects - correct me if I'm wrong.
> 
> So instead of having to emulate a select()-like API, we need a select() 
> wrapper that acts like poll(). In other words, addReader and friends must go 
> when we refactor the event loop code.

I'm confused.  In what way is "adding/removing a reader/writer" not
"registering/unregistering an object"?

In fact, I chose that API specifically because I didn't think it was like
select().

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From twisted at itamarst.org  Thu Nov 22 04:50:56 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Nov 2001 11:50:56 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com>
Message-ID: <3BFCCA80.4040801@itamarst.org>

Glyph Lefkowitz wrote:


> I'm confused.  In what way is "adding/removing a reader/writer" not
> "registering/unregistering an object"?
> 
> In fact, I chose that API specifically because I didn't think it was like
> select().

Well, in poll() you don't register writing and reading separately - you have 
to register for them together (bu actually the limitation is in the Python 
API, not the C API). Further research shows that the current API might match 
other systems, so I was probably wrong about that.





From twisted at itamarst.org  Thu Nov 22 08:27:20 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Nov 2001 15:27:20 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com>
Message-ID: <3BFCFD38.7010904@itamarst.org>

Glyph Lefkowitz wrote:


 > I'm confused.  In what way is "adding/removing a reader/writer" not
"registering/unregistering
 > an object"?

Here's one issue - removeWriter is called every time the buffer is epmtied
out. In the lifetime of a connection, the transport keeps on adding and
removing, adding and removing itself as a writer because of this. In
select() this isn't an issue, but in poll() it is, since removing and adding
the writer is an expensive operation (in fact it adds a %33 overhead, in
tests under high loads).

I'll see what I can do to fix the poll()-based implementation, but meanwhile
the select event loop is much faster under high loads.





From glyph at twistedmatrix.com  Thu Nov 22 22:33:52 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Nov 2001 21:33:52 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <E166mjG-0005G3-00@zaibach.twistedmatrix.com>; from acapnotic@twistedmatrix.com on Wed, Nov 21, 2001 at 11:48:54PM -0600
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com>
Message-ID: <20011122213352.A28166@twistedmatrix.com>

On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> protocols/irc.py: An exception in the server isn't a reason to drop the
> client, right?

IMHO, it is.  If the protocol isn't specifically designed to deal with
exceptions (For example, dynamic web content or PB protocol exceptions) then
it's undefined behavior and the connection should be dropped.  Bot behavior
should be implemented in a layer above the IRC protocol, if there is a place
for a catch-all exception handler.

I won't revert this change because I'm not living in that part of the code
right now, but Kevin, I suggest you consider it.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From glyph at twistedmatrix.com  Thu Nov 22 22:39:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Nov 2001 21:39:50 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
In-Reply-To: <3BFCFD38.7010904@itamarst.org>; from twisted@itamarst.org on Thu, Nov 22, 2001 at 03:27:20PM +0200
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com> <3BFCFD38.7010904@itamarst.org>
Message-ID: <20011122213950.B28166@twistedmatrix.com>

On Thu, Nov 22, 2001 at 03:27:20PM +0200, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > I'm confused.  In what way is "adding/removing a reader/writer" not
> > "registering/unregistering an object"?
> 
> Here's one issue - removeWriter is called every time the buffer is epmtied
> out. In the lifetime of a connection, the transport keeps on adding and
> removing, adding and removing itself as a writer because of this. In
> select() this isn't an issue, but in poll() it is, since removing and adding
> the writer is an expensive operation (in fact it adds a %33 overhead, in
> tests under high loads).
> 
> I'll see what I can do to fix the poll()-based implementation, but meanwhile
> the select event loop is much faster under high loads.

What I don't understand is that frequently, in an implementation where there is
no distinction between registering for reads and registering for writes, you
won't care if a socket is writable, only if it's readable.  What does the
higher-level implementation do then?  Just early-out of the callback if the
connection isn't "really" registerd for writes?

Even though I am not sure I understand the problem :), perhaps the right answer
to this question, since the common case is that all data can be written at
once, is that the write should happen immediately, only being added to the
select/poll loop if the write would block.  This would probably add a little
complexity to the code but save a bunch of performance on small-write heavy
protocols.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From carmstro at twistedmatrix.com  Thu Nov 22 23:10:23 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 22 Nov 2001 23:10:23 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] CVS:
	Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <20011122213352.A28166@twistedmatrix.com>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> 
	<20011122213352.A28166@twistedmatrix.com>
Message-ID: <1006488624.11630.0.camel@Fookidla.org>

On Thu, 2001-11-22 at 22:33, Glyph Lefkowitz wrote:
> On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> > protocols/irc.py: An exception in the server isn't a reason to drop the
> > client, right?
> 
> IMHO, it is.  If the protocol isn't specifically designed to deal with
> exceptions (For example, dynamic web content or PB protocol exceptions) then
> it's undefined behavior and the connection should be dropped.  Bot behavior
> should be implemented in a layer above the IRC protocol, if there is a place
> for a catch-all exception handler.
> 
> I won't revert this change because I'm not living in that part of the code
> right now, but Kevin, I suggest you consider it.

You know that it wasn't the bot that was getting disconnected, but other
users in the channel? I'm not sure of the technical details behind this,
but it does seem odd that other people should get disconnected for stuff
that the bot is doing.

-- 
<bitPoet> all of twisted is probably like 3 lines of apl
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From acapnotic at twistedmatrix.com  Fri Nov 23 02:40:07 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 22 Nov 2001 23:40:07 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <20011122213352.A28166@twistedmatrix.com>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> <20011122213352.A28166@twistedmatrix.com>
Message-ID: <20011122234007.A2865@troglodyte.menefee>

On Thu, Nov 22, 2001 at 09:33:52PM -0600, Glyph Lefkowitz wrote:
> On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> > protocols/irc.py: An exception in the server isn't a reason to drop the
> > client, right?
> 
> IMHO, it is.  If the protocol isn't specifically designed to deal with
> exceptions (For example, dynamic web content or PB protocol exceptions) then
> it's undefined behavior and the connection should be dropped.
> Bot behavior should be implemented in a layer above the IRC protocol,
> if there is a place for a catch-all exception handler.

Thanks for the comments.  There's an encapsulation problem highligthed
here, let me see if I can un-mire my head from the turkey gravy well
enough to explain it.  This probably won't flow as well as it should,
but hopefully I'll get all the pieces written down here.

That change was to protocols.irc.IRC.dataReceived(), irc.IRC being the
server-oriented side of the IRC client/server protocol.  The 'try' block
I added surrounds the call to the dispatch method.  By this point, the
data received has already been parsed as an IRC command.  If anything
goes wrong after this, I wouldn't consider it to be an error in the
client/server IRC protocol (or protocol.irc.IRC), but rather an error in
the application (substitue a more specific word if you can find one)
that's on the receiving end of that protocol.

I should explain here what triggered this patch:

Setting: 
  twisted.words, with a words.ircservice server as it comes with by default.  
  The ircservice is in the same process as the words service.
  I've also added a tendril to the service, also in the same process.

1) radix logs on to the irc service.  On the server side, he's
represented by a words.ircservice.IRCChatter, a subclass of the irc.IRC
server protocol.

2) radix says "hi".  This triggers Protocol.dataReceived, which
dispatches the message to IRCChatter.irc_PRIVMSG.

3) IRCChatter.irc_PRIVMSG invokes the groupMessage of its correspoding
Participant (Perspective) instance.

4) Participant invokes the sendMessage method of one of the service's
Groups.

5) The Group, in turn, calls receiveGroupMessage on its subscribing
Participants.

6) One of the subscribing Participants is Tendril's.
Tendril-Participant invokes receiveGroupMessage on its client, a
TendrilClient implementing the WordsClientInterface.

7) Oops -- I screwed up.  TendrilClient.receiveGroupMessage raises an
exception.
The exception is passed to Tendril's participant, letting it know that
its client didn't get this OK.
The Tendril participant lets the exception pass on to the Group, letting
the Group know that sending the message to this participant has failed.
The Group lets the exception through to radix's Participant, letting him
know that something went wrong while performing the action he ordered.
His Participant lets the exception pass back to IRCChatter.irc_PRIVMSG,
as the command failed.
Since IRCChatter.irc_PRIVMSG had an error carrying out the command, the
exception goes back to its caller...
the IRCChatter(IRC(Protocol)).dataReceived method.
So an error occoured when calling Protocol.dataReceived, the receiving
method for radix's-irc-client's-tcp-connection-selectable,
When internet.main.doSelect finds out, it busts the selectable, and
kills the TCP connection to radix's IRC client.

Clearly, the wrong guy took the fall for this one.  So what *should*
have happened?

First note that there are some irregularites in this process which are
contrary to what a PB service (e.g. Words) assumes.  Normally, the
relation between Perspective and its client is a remote one, 'client'
being the referenceable that the perspective has .attached().  But here
the clients on both ends, tendril.TendrilClient and
ircservice.IRCChatter, are local references.

When you start out with event-based programming, you get bit when you
assume a call is synchronous when it's not.  When you've worked with
Twisted too long, you get bit when you assume an action is asynchronous
and it turns out to be synchronous.

Both steps 3 and 6 "should" have happened asynchronously.  Since
asynchronous calls "don't really happen now", your program works on the
assumption that it is going to carry on normal operations, leaving any
worries about what may or may not have happened "over there" until
later.  Here, that assumption was violated.


Stopping here feels unfinished, but I've got to go digest some more.

*belch*ing-ly yours,

 - Kevin

-- 
The moon is first quarter, 50.2% illuminated, 7.4 days old.




From acapnotic at twistedmatrix.com  Fri Nov 23 14:17:59 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 23 Nov 2001 11:17:59 -0800
Subject: [Twisted-Python] pyff
In-Reply-To: <20011122234007.A2865@troglodyte.menefee>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> <20011122213352.A28166@twistedmatrix.com> <20011122234007.A2865@troglodyte.menefee>
Message-ID: <20011123111759.B3696@troglodyte.menefee>

On Thu, Nov 22, 2001 at 11:40:07PM -0800, Kevin Turner wrote:
> That change was to protocols.irc.IRC.dataReceived(), irc.IRC being the

I forgot to mention.  For commit-messages, I'd love to be using a
Python-aware human-readable diff program, so that it would clearly show
what class/method/else/etc block the changes were in.  Throw that on the
wishlist/todo heap someplace.  Unless it's already been written?





From m at moshez.org  Wed Nov 21 03:31:26 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 21 Nov 2001 10:31:26 +0200 (IST)
Subject: [Twisted-Python] Sites, protocols etc.
In-Reply-To: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
References: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011121083126.B960C395F@darjeeling>

On Tue, 20 Nov 2001, "Magnus Heino" <magnus.heino at pleon.sigma.se> wrote:

> Next question: Can I serve both xmlrpc and http from the same
> application/site? I guess I can, but I havent figured out how...

On the same port or not?
If you don't need it on the same port, have a look at mktap --append 
-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ





From z3p at twistedmatrix.com  Wed Nov 21 15:08:04 2001
From: z3p at twistedmatrix.com (z3p)
Date: Wed, 21 Nov 2001 14:08:04 -0600
Subject: [Twisted-Python] Sites, protocols etc.
In-Reply-To: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>; from magnus.heino@pleon.sigma.se on Tue, Nov 20, 2001 at 09:28:30AM +0100
References: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011121140804.F31678@twistedmatrix.com>

I moved my site to widgets a while ago, but it seems to work just fine, and could used as an example.  Check out the code at http://www.twistedmatrix.com/users/z3p.twistd/files/z3pSite.tar.gz
-p

--
       Paul Swartz
(o_    http://www.z3p.f2s.com/ _o)
//\    z3p at twistedmatrix.co    /\\
V_/_   AIM: z3penguin         _\_V->

Key ID: 0xBDD9A668
GPG Print: 353A 4103 FFDD A6A2 85CE  06D5 6F48 D823 BDD9 A668





From carmstro at twistedmatrix.com  Fri Nov 23 16:55:20 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 16:55:20 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
Message-ID: <1006552522.13340.1.camel@Fookidla.org>

Ok, riddle me this, glyph (or anyone else who knows about this). Why do
we need Deferreds to be a special-case in WebWidgets? Why can't _all_
widgets be displayed only right when they're needed? RenderSession could
just take a Widget, and display() it (and the widgets that display()
returns) in order.. Is there some sort of performance issue here, maybe?

Maybe I'll try implementing this, and send a patch to be looked at.
-- 
<TomG> I'm in the wrong channel.
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From carmstro at twistedmatrix.com  Fri Nov 23 19:05:19 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 19:05:19 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
In-Reply-To: <1006552522.13340.1.camel@Fookidla.org>
References: <1006552522.13340.1.camel@Fookidla.org>
Message-ID: <1006560325.13339.6.camel@Fookidla.org>

On Fri, 2001-11-23 at 16:55, Chris Armstrong wrote:
> Ok, riddle me this, glyph (or anyone else who knows about this). Why do
> we need Deferreds to be a special-case in WebWidgets? Why can't _all_
> widgets be displayed only right when they're needed? RenderSession could
> just take a Widget, and display() it (and the widgets that display()
> returns) in order.. Is there some sort of performance issue here, maybe?
> 
> Maybe I'll try implementing this, and send a patch to be looked at.

Well, I've spent some time trying to implement this, but I'm having some
problems. Here's a patch. Notice the 'renderSession' (now-module-level)
function and the flatWrite function. flatWrite is the _only_ place where
display() is called now, and the data is written as soon as it comes to
it. There is a problem, however, with a small test I did. I made a
widget that returned a list of 3 widgets: widgets.Time(), SleepWidget(),
widgets.Time(). The only thing SleepWidget has is a display() method
that sleeps for 2 seconds and returns [], to simulate blocking. I try to
render this widget with the new system, but I don't get any content
until the entire request is finished. I put in some log messages to say
exactly when the writes are happening, and the first widgets.Time() is
definitely being written to the request before the SleepWidget is being
displayed, but i still don't see anything until the entire request is
done. 

*sigh*, I'm sure that I'm completely off-track here. Why do I always try
to rewrite everything I come across that I don't understand? (remember
explorer, Kevin?) :P

-- 
<dash> the program isn't debugged until the last user is dead
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/
-------------- next part --------------
--- widgets.py	Fri Nov 23 18:57:22 2001
+++ widgets-new.py	Fri Nov 23 18:56:43 2001
@@ -90,15 +90,7 @@
                     traceback.print_exc(file = io)
                     tm.append(html.PRE(io.getvalue()))
                 else:
-                    if isinstance(x, types.ListType):
-                        tm.extend(x)
-                    elif isinstance(x, Widget):
-                        val = x.display(request)
-                        tm.extend(val)
-                    else:
-                        # Only two allowed types here should be deferred and
-                        # string.
-                        tm.append(x)
+                    tm.append(x)
         return tm
 
 
@@ -209,14 +201,6 @@
     def display(self, request):
         return [self.text]
 
-class TextDeferred(Widget):
-    def __init__(self, text):
-        self.text = text
-
-    def display(self, request):
-        d = defer.Deferred()
-        d.callback([self.text])
-        return [d]
 
 class Time(Widget):
     def display(self, request):
@@ -229,106 +213,26 @@
     def display(self, request):
         value = []
         for widget in self.widgets:
-            d = widget.display(request)
-            value.extend(d)
+            value.extend(widget)
         return value
 
-class _RequestDeferral:
-    def __init__(self):
-        self.deferred = defer.Deferred()
-        self.io = StringIO()
-        self.write = self.io.write
-
-    def finish(self):
-        self.deferred.callback([self.io.getvalue()])
-
-def possiblyDeferWidget(widget, request):
-    # web in my head get it out get it out
-    try:
-        disp = widget.display(request)
-        # if this widget wants to defer anything -- well, I guess we've got to
-        # defer it.
-        for elem in disp:
-            if isinstance(elem, defer.Deferred):
-                req = _RequestDeferral()
-                RenderSession(disp, req)
-                return req.deferred
-        return string.join(disp, '')
-    except:
-        io = StringIO()
-        traceback.print_exc(file=io)
-        return html.PRE(io.getvalue())
-
-class RenderSession:
-    def __init__(self, lst, request):
-        self.lst = lst
-        self.request = request
-        self.position = 0
-        self.needsHeaders = 0
-        pos = 0
-        toArm = []
-        # You might want to set a header from a deferred, in which case you
-        # have to set an attribute -- needsHeader.
-        for item in lst:
-            if isinstance(item, defer.Deferred):
-                self._addDeferred(item, pos)
-                toArm.append(item)
-            pos = pos + 1
-        self.keepRendering()
-        # print "RENDER: DONE WITH INITIAL PASS"
-        for item in toArm:
-            item.arm()
-
-    def _addDeferred(self, deferred, position):
-        if hasattr(deferred, 'needsHeader'):
-            self.needsHeaders = self.needsHeaders + 1
-            args = (position, 1)
-        else:
-            args = (position, 0)
-        deferred.addCallbacks(self.callback, self.callback,
-                              callbackArgs=args, errbackArgs=args)
-
-    def callback(self, result, position, decNeedsHeaders):
-        if result != FORGET_IT:
-            self.needsHeaders = self.needsHeaders - decNeedsHeaders
-        else:
-            result = [FORGET_IT]
-        for i in xrange(len(result)):
-            if isinstance(result[i], defer.Deferred):
-                self._addDeferred(result[i], position+i)
-        # print 'CALLBACK:',self.lst, position, result
-        if not isinstance(result, types.ListType):
-            result = [result]
-        self.lst[position:position+1] = result
-        assert self.position <= position
-        self.keepRendering()
-        for r in result:
-            if isinstance(r, defer.Deferred):
-                r.arm()
-
-
-    def keepRendering(self):
-        if self.needsHeaders:
-            # short circuit actual rendering process until we're sure no more
-            # deferreds need to set headers...
-            return
-        assert self.lst is not None, "This shouldn't happen."
-        while 1:
-            item = self.lst[self.position]
-            if self.position == 0 and item == FORGET_IT:
-                # If I haven't moved yet, and the widget wants to take over the page, let it do so!
-                return
-            if isinstance(item, types.StringType):
-                self.request.write(item)
-            elif isinstance(item, defer.Deferred):
-                return
-            else:
-                self.request.write("RENDERING UNKNOWN: %s" % html.PRE(repr(item)))
-            self.position = self.position + 1
-            if self.position == len(self.lst):
-                self.lst = None
-                self.request.finish()
-                return
+
+def flatWrite(widget, request):
+    val = widget.display(request)
+    if not type(val) == types.ListType:
+        raise TypeError("display() needs to return a list.")
+    for elem in val:
+        if type(elem) == types.StringType:
+            print "writing to the request"
+            request.write(elem)
+        elif isinstance(elem, Widget):
+            flatWrite(elem, request)
+            
+def renderSession(widget, request):
+    flatWrite(widget, request)
+    request.finish()
+
+
 
 
 class WidgetResource(resource.Resource):
@@ -336,7 +240,7 @@
         self.widget = widget
 
     def render(self, request):
-        RenderSession(self.widget.display(request), request)
+        renderSession(self.widget, request)
         return NOT_DONE_YET
 
 
@@ -347,8 +251,7 @@
         Presentation.__init__(self)
 
     def render(self, request):
-        displayed = self.display(request)
-        RenderSession(displayed, request)
+        renderSession(self, request)
         return NOT_DONE_YET
 
 
@@ -404,10 +307,6 @@
         if hasattr(widget, 'stylesheet'):
             self.stylesheet = widget.stylesheet
 
-    def render(self, request):
-        displayed = self.display(request)
-        RenderSession(displayed, request)
-        return NOT_DONE_YET
 
 class Gadget(resource.Resource):
     page = WidgetPage
@@ -437,6 +336,8 @@
         return self.widgets.get(path)
 
     def getChild(self, path, request):
+        #if this Gadget is also a Widget, then render the Widget part of me if the "index"
+        #is requested.
         if path == '':
             # ZOOP!
             if isinstance(self, Widget):

From carmstro at twistedmatrix.com  Fri Nov 23 22:29:47 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 22:29:47 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
In-Reply-To: <1006560325.13339.6.camel@Fookidla.org>
References: <1006552522.13340.1.camel@Fookidla.org> 
	<1006560325.13339.6.camel@Fookidla.org>
Message-ID: <1006572589.14798.0.camel@Fookidla.org>

On Fri, 2001-11-23 at 19:05, Chris Armstrong wrote:
> On Fri, 2001-11-23 at 16:55, Chris Armstrong wrote:
> > Maybe I'll try implementing this, and send a patch to be looked at.
> 
> *sigh*, I'm sure that I'm completely off-track here. Why do I always try
> to rewrite everything I come across that I don't understand? (remember
> explorer, Kevin?) :P

Guess what! I was right! I was completely wrong about the point of
Deferreds! hooray! :-P

So, it seems that the point of Deferreds-in-WebWidgets wasn't just to
"process immediately before writing", but to _let the rest of the
twisted mainloop run while waiting for a Deferred execution_. Blech.
*dorkus*.

Nonetheless, that big huge refactoring is still useful. A lot of code
(not even including the Deferred-support i got rid of) has been shwacked
and replaced by a much simpler system. Now it's time to rewrite the
Deferred code from scratch on top of my new refactorings.

*Dives into Deferred*
-- 
<radix> yosomono: One of these days, I'm going to actually see what you
do
<Yosomono> radix: You will turn to stone almost immediately
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From acapnotic at twistedmatrix.com  Sat Nov 24 01:01:12 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 23 Nov 2001 22:01:12 -0800
Subject: [Twisted-Python] cursors
Message-ID: <20011123220112.A4992@troglodyte.menefee>

Someone, either Glyph or Tommi, mentioned that they wanted cursors a
while back.  "What's that," I asked; then thought "hm.  I could do
that."  But I didn't.  Only, now I did.  I think.

-- 
The moon is waxing gibbous, 58.9% illuminated, 8.2 days old.
-------------- next part --------------
# -*- Python -*-
# Kevin Turner <acapnotic at foobox.net>, November 23, 2001
# This code is in the Public Domain.

from UserList import UserList
import types

class CursoredList(UserList):
    _cursorlist = None

    def __init__(self, seq=None):
        UserList.__init__(self, seq)

    def setCursor(self):
        if self._cursorlist is None:
            self._cursorlist = []

        self._cursorlist[:] = range(len(self.data))
        self._cursorLen = len(self.data)

    def cursor(self, key):
        if self._cursorlist is None:
            return self.__getitem__(key)

        if isinstance(key, types.SliceType):
            start, stop, step = key.start, key.stop, key.step
            if not step:
                step = 1
            if start is None:
                start = 0
            elif start < 0:
                start = self._cursorLen + start

            if (stop is None) or (stop > self._cursorLen):
                stop = self._cursorLen
            elif stop < 0:
                start = self._cursorLen + stop

            result = []
            for i in xrange(start, stop, step):
                result.append(self.cursor(i))
            return result

        else:
            key = int(key)
            if key < 0:
                key = self._cursorLen + key
            assert(0 <= key < self._cursorLen)

            new_key = self._cursorlist.index(key)

            return self.__getitem__(new_key)

    def __setitem__(self, key, value):
        if (self._cursorlist is not None) \
           and isinstance(key, types.SliceType):

            self._cursorlist[key.start:key.stop] = [None] * len(value)

        if isinstance(key, types.SliceType):
            self.data[key.start:key.stop] = value
        else:
            self.data[key] = value

    def __getitem__(self, key):
        if isinstance(key, types.SliceType):
            return self.data[key.start:key.stop]
        else:
            return self.data[key]

    def __delitem__(self, key):
        if not isinstance(key, types.SliceType):
            key = slice(key, key+1)

        self.__setitem__(key, [])

    def __getslice__(self, start, stop):
        return self.__getitem__(slice(start, stop))

    def __setslice__(self, start, stop, value):
        return self.__setitem__(slice(start, stop), value)

    def __delslice__(self, start, stop):
        return self.__delitem__(slice(start, stop))

    def __iadd__(self, other):
        self.extend(other)
        return self

    def __imul__(self, multiplier):
        if self._cursorlist is not None:
            self._cursorlist.extend(([None] * len(self.data))
                                    * (multiplier-1))
        self.data[:] = self.data * multiplier

    def append(self, item):
        self[len(self):len(self)] = [item]

    def insert(self, i, item):
        self[i:i] = [item]

    def pop(self, i=-1):
        value = self[i]
        del self[i]
        return value

    def remove(self, item):
        i = self.index(item)
        del self[i]

    def reverse(self):
        self.data.reverse()
        if self._cursorlist is not None:
            self._cursorlist.reverse()

    def sort(self, cmpfunc=None):
        if self._cursorlist is not None:
            zipped = map(None, self.data, self._cursorlist)
            if cmpfunc:
                # The supplied cmpfunc won't be expecting the zipped list.
                cmpfunc_ = lambda x, y, c=cmpfunc: c(x[0], y[0])
                zipped.sort(cmpfunc_)
            else:
                zipped.sort()
            for i in range(len(zipped)):
                self.data[i], self._cursorlist[i] = zipped[i]
        else:
            self.data.sort()

    def extend(self, other):
        self[len(self):len(self)] = other

From tv at twistedmatrix.com  Sat Nov 24 08:10:08 2001
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 24 Nov 2001 15:10:08 +0200
Subject: [Twisted-Python] cursors
In-Reply-To: <20011123220112.A4992@troglodyte.menefee>
References: <20011123220112.A4992@troglodyte.menefee>
Message-ID: <871yiomi1b.fsf@ki.yok.utu.fi>

Kevin Turner <acapnotic at twistedmatrix.com> writes:

> Someone, either Glyph or Tommi, mentioned that they wanted cursors a
> while back.  "What's that," I asked; then thought "hm.  I could do
> that."  But I didn't.  Only, now I did.  I think.

	The idea was to replace the web.widget Deferreds bookkeeping
	with such a construct. Currently, all widgets to be output
	know their position in the list, and when a Deferred returns
	[deferred2, "foo", deferred3], and later deferred2 return
	["bar", "baz"], deferred3's index is wrong.

	If instead of indexes, the Deferreds had cursors, that
        changed as the list modified, they'd survive.

        Of course, an even bigger rewrite of web.widgets and
        Deferred processing may be wanted.

	Sadly, I have no time to hack on that..

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}





From carmstro at twistedmatrix.com  Sat Nov 24 14:56:10 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 24 Nov 2001 14:56:10 -0500
Subject: [Twisted-Python] cursors
In-Reply-To: <871yiomi1b.fsf@ki.yok.utu.fi>
References: <20011123220112.A4992@troglodyte.menefee> 
	<871yiomi1b.fsf@ki.yok.utu.fi>
Message-ID: <1006631772.16724.0.camel@Fookidla.org>

On Sat, 2001-11-24 at 08:10, Tommi Virtanen wrote:
> Kevin Turner <acapnotic at twistedmatrix.com> writes:
> 
> > Someone, either Glyph or Tommi, mentioned that they wanted cursors a
> > while back.  "What's that," I asked; then thought "hm.  I could do
> > that."  But I didn't.  Only, now I did.  I think.
> 
> 	The idea was to replace the web.widget Deferreds bookkeeping
> 	with such a construct. Currently, all widgets to be output
> 	know their position in the list, and when a Deferred returns
> 	[deferred2, "foo", deferred3], and later deferred2 return
> 	["bar", "baz"], deferred3's index is wrong.
> 
> 	If instead of indexes, the Deferreds had cursors, that
>         changed as the list modified, they'd survive.
> 
>         Of course, an even bigger rewrite of web.widgets and
>         Deferred processing may be wanted.
> 
> 	Sadly, I have no time to hack on that..

That's what I'm working on right now (see my last 3 rants on the list).
I could use a bit of advice, I think, though. Maybe I'll catch you on
IRC soon.

So far I've refactored all normal non-deferred stuff, and I'm taking a
fresh look at implementing Deferreds in widgets. Right now I'm *trying*
to figure out a clever way to allow deferreds to not need to worry about
position -- but I'm just now starting to figure something out. I'll talk
to you some time.
 
-- 
<spiv> NeuroMorphus: That's not really meaningful, though.
<NeuroMorphus> spiv: it's not a matter of meaning, it's an assignment
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Wed Nov 28 12:11:37 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Wed, 28 Nov 2001 12:11:37 -0500 (EST)
Subject: [Twisted-Python] Intro and "Slash- or Squishdot-style stuff?"
Message-ID: <1006967497.3c051ac9b9919@webmail.hampshire.edu>

Hello, everyone.  <introduction>I did some work with God--er, Glyph--on Twisted 
Reality back in the days when it was in Java.  I've done a decent chunk of 
coding, including using Python (which is still my favorite language), but I 
admit to being almost a complete newbie when it comes to network programming.  
Other than that...I live in Madison, WI and work at EDS on the WI Medicaid 
account.</introduction>

I'm considering using Twisted for a news/portal site in a similar style to 
Slashdot.  Glyph told me that there's been some discussion about creating a 
Twisted package along these lines.  I couldn't find anything in the archives; 
has anyone started work on such a thing?

Also, does the server run reliably under Windows 9x?

Thanks,

Mike




From carmstro at twistedmatrix.com  Wed Nov 28 16:56:22 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 28 Nov 2001 16:56:22 -0500
Subject: [Twisted-Python] Intro and "Slash- or Squishdot-style stuff?"
In-Reply-To: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
Message-ID: <1006984583.3209.3.camel@Fookidla.org>

On Wed, 2001-11-28 at 12:11, Michael Dartt wrote:
> Hello, everyone.  <introduction>I did some work with God--er, Glyph--on Twisted 
> Reality back in the days when it was in Java.  I've done a decent chunk of 
> coding, including using Python (which is still my favorite language), but I 
> admit to being almost a complete newbie when it comes to network programming.  
> Other than that...I live in Madison, WI and work at EDS on the WI Medicaid 
> account.</introduction>

Hi Michael! :)

> I'm considering using Twisted for a news/portal site in a similar style to 
> Slashdot.  Glyph told me that there's been some discussion about creating a 
> Twisted package along these lines.  I couldn't find anything in the archives; 
> has anyone started work on such a thing?

Hm.. There have been a few attempts at a weblog, and the most recent one
was just removed from CVS for lack of maintenance. The only hurdle I can
see for creating a good blog system (utilizing WebWidgets etc) would be
lack of decent database support in Twisted. There is glyph's adbapi
module, which is an async interface to dbapi, but I'm not sure how
useful it would be (note that I have very little experience with dbs).
Anyway, if you do decide to do this, give me a holler and I'll help out.

> Also, does the server run reliably under Windows 9x?

I'm not sure about this one. I know people have run it on windows, and I
know for certain that the CGI interface won't work (although this is
irrelevant), but I have no idea how it performs or how easy it is to get
running.

-- 
<bram> have I mentioned there's a FRIGGIN BUTTLOAD of ways web input can
go bad?
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Wed Nov 28 17:50:45 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Wed, 28 Nov 2001 17:50:45 -0500 (EST)
Subject: [Twisted-Python] Twisted.blog
In-Reply-To: <1006984583.3209.3.camel@Fookidla.org>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu> <1006984583.3209.3.camel@Fookidla.org>
Message-ID: <1006987845.3c056a45c351b@webmail.hampshire.edu>

What about coding the DB parts against the Python DB API Spec. 2.0?  
(http://www.python.org/topics/database/DatabaseAPI-2.0.html)

> > I'm considering using Twisted for a news/portal site in a similar
> style to 
> > Slashdot.  Glyph told me that there's been some discussion about
> creating a 
> > Twisted package along these lines.  I couldn't find anything in the
> archives; 
> > has anyone started work on such a thing?
> 
> Hm.. There have been a few attempts at a weblog, and the most recent
> one
> was just removed from CVS for lack of maintenance. The only hurdle I
> can
> see for creating a good blog system (utilizing WebWidgets etc) would
> be
> lack of decent database support in Twisted. There is glyph's adbapi
> module, which is an async interface to dbapi, but I'm not sure how
> useful it would be (note that I have very little experience with dbs).
> Anyway, if you do decide to do this, give me a holler and I'll help
> out.





From carmstro at twistedmatrix.com  Wed Nov 28 18:38:05 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 28 Nov 2001 18:38:05 -0500
Subject: [Twisted-Python] Twisted.blog
In-Reply-To: <1006987845.3c056a45c351b@webmail.hampshire.edu>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
	<1006984583.3209.3.camel@Fookidla.org> 
	<1006987845.3c056a45c351b@webmail.hampshire.edu>
Message-ID: <1006990687.3209.6.camel@Fookidla.org>

On Wed, 2001-11-28 at 17:50, Michael Dartt wrote:
> What about coding the DB parts against the Python DB API Spec. 2.0?  
> (http://www.python.org/topics/database/DatabaseAPI-2.0.html)

Right. That's what adbapi is for -- it's an async interface to DBAPI to play
nice in the Twisted environment.


-- 
<dash> "COM Error: Errors occurred"
* dash attacks ASP with a rusty hacksaw blade
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From twisted at itamarst.org  Thu Nov 29 11:46:00 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2001 18:46:00 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com> <3BFCFD38.7010904@itamarst.org> <20011122213950.B28166@twistedmatrix.com>
Message-ID: <3C066648.9010602@itamarst.org>

Glyph Lefkowitz wrote:


> Even though I am not sure I understand the problem :), perhaps the right answer
> to this question, since the common case is that all data can be written at
> once, is that the write should happen immediately, only being added to the
> select/poll loop if the write would block.  This would probably add a little
> complexity to the code but save a bunch of performance on small-write heavy
> protocols.


Well, I tried this. The result was a 25-50 percent improvement in read benchmarks

on my code. Web performance seems slightly worse in the one test I did. And it's

probably got some issues detecting closed connections... I have another 
behcmark that takes twice as long.

But as you can see there is some room for improvement, even if this patch specifically

is buggy.



Index: twisted/internet/abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.11
diff -c -r1.11 abstract.py
*** twisted/internet/abstract.py	2001/10/30 23:55:39	1.11
--- twisted/internet/abstract.py	2001/11/29 16:26:29
***************
*** 106,111 ****
--- 106,117 ----
          if not self.connected:
              return
          if data:
+             if not self.unsent:
+                 l = self.writeSomeData(data)
+                 if l == len(data) or l < 0:
+                     return
+                 else:
+                     data = data[l:]
              self.unsent = self.unsent + data
              if self.producer is not None:
                  if len(self.unsent) > self.bufferSize:







From carmstro at twistedmatrix.com  Thu Nov 29 20:46:27 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 29 Nov 2001 20:46:27 -0500
Subject: [Twisted-Python] Twisted 0.12.2
Message-ID: <1007084789.1510.3.camel@Fookidla.org>

Hey all. I released Twisted 0.12.2 today, it was mainly a bunch of bug
fixes with a few features. Here's the changes:

What's new in 0.12.2?

  Removed some broken and/or experimental code.
  
  Added poll() based event loop implementation.

  New minimal documentation for WebWidgets and Manhole in the doc/
  directory.
  
  Made some changes to the listen API -- changed from listenOn to
  listenTCP, listenUDP, and listenSSL.

  Some UI changes for InstanceMessenger.

  Some caching support for static files in twisted.web.
  
  Tons of fixed bugs.

Go grab it at http://twistedmatrix.com/downloads/. Have fun.

-- 
<Yosomono> rasterman is the millionth monkey
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Fri Nov 30 15:38:24 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Fri, 30 Nov 2001 15:38:24 -0500 (EST)
Subject: [Twisted-Python] FAQ-o-matic
Message-ID: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>

I'd like to suggest the addition of a FAQ-o-matic 
(http://faqomatic.sourceforge.net/fom-serve/cache/427.html)to the Twisted 
site.  I think it would make it much easier to get and to post info, as you 
wouldn't have to wait for someone to write The Definitive Documentation(tm) for 
a given subject.  From what I've seen/experienced, the "document-as-you-go" 
approach works much better for open-source projects.  

I'm willing to do the work of getting the F-o-m set up.  (Perhaps I should 
stick in in my personal space?)  




From jasbahr at crash.org  Fri Nov 30 15:50:15 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Fri, 30 Nov 2001 14:50:15 -0600
Subject: [Twisted-Python] Nebula Python Integration
In-Reply-To: <1007084789.1510.3.camel@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMIEBFHLAA.jasbahr@crash.org>

Hey, Twisters,

Just wanted to share some news regarding work I've been doing on the 
open source 3D engine, Nebula.  Nebula supports OpenGL on Linux and 
D3D and OpenGL on Windows currently, and will support OpenGL on 
Mac OS X shortly.

Nebula is the chosen client for my open source MMP project, Netsu.

The main Nebula site:  http://www.radonlabs.de/
The Nebula Sourceforge site:  http://sourceforge.net/projects/nebuladevice/

______________________________________________________________________
Jason Asbahr
jason at asbahr.com

---

[ Begin Forward ]

Nebula now has Python support!  It's checked into CVS and has been 
tested on Win32 and Linux.  Please let me know if you run into any 
difficulties with it, or do anything cool with it.

This release exposes the base-level Nebula functions to Python, a
future release will provide Python developers with an object-oriented
interface to Nebula.

Next up: Python tekdemos.

Cheers,

Jason


npython
========

Python Integration Documentation 
Created 2001, by Jason L. Asbahr, jason at asbahr.com

======================================================================
Introduction
======================================================================

npython is an extension which integrates Python into the 
Nebula Device and exposes the functionality of Nebula to Python.
npython can be invoked from inside the standard Nebula utilities
nsh and gfxserv, in addition, npython can be imported directly 
into Python as an extension module.

======================================================================
To Build
======================================================================

- Copy nebula/code/src/python/npython.epk up one directory to 
  nebula/code/src
- Execute updsrc.tcl to build makefiles.
- Compile with 'make' or DevStudio

======================================================================
To Use
======================================================================

- To use Python in the Nebula utilities:
  nsh -script npythonserver
  gfxserv -script npythonserver

- To use Nebula from Python, simply:
  >>> import npython

======================================================================
Commands
======================================================================

npython currently exposes a set of functions to manipulate and control
the Nebula Device.  All functions take arguments formated as strings.

NOTE:  These commands are based on those commands available via Tcl, 
       with a couple differences.  For example, 'dir' has been renamed
       'ndir', and a new command 'set' has been introduced to allow
       invocation of methods on Nebula objects.

new( [class], [path] )
    Create a new object of class [class] with the name
    [path]. Name may be any valid path, missing path
    components will be filled up with 'nroot' objects.
    Returns the complete path name of the new object.

delete( [path] )
    Delete the object with name [path] and all of it's
    sub objects.

ndir()
    List contents of current 'directory'.

sel( [path] )
    Make the object defined by [path] the current object.
    Returns the complete path of the selected object.
 
psel()
    Returns the full path of the currently selected object.

exists( [path] )
    Check whether object exists. Return "1" if yes,
    return "0" if no.

get( [script] )
    Read a serialized object from the 'real' filesystem.
    The serialized object must have been created with
    the '.save' or '.saveas' object command.
    Returns the full path of the created object.

server( [portname] )
    Leave interactive mode and go into server mode by
    creating an ipc port. In server mode, npython will 
    wait for other Nebula apps to connect and execute any
    incoming commands on the local objects. 

connect( [hostname:portname] )
    Connect to another Nebula application in server mode.
    The remote app may be on the same machine (in this
    case you can omit the leading 'hostname:'), or
    on another machine. Communication will go through
    TCP/IP sockets. 'hostname' is any valid TCP/IP address
    in the form of 'ww.xx.yy.zz', or a machine name that
    can be resolved into a numerical tcp/ip address.

disconnect()
    Disconnect from a server.

exit()
    End the npython session (can also be used to shutdown 
    a remote server when in connected state).

======================================================================
Simple Example
======================================================================

new('nroot', 'myObject')

    This will create a new object of class 'nroot' which has the
    name 'myObject'. 

sel('myObject')

    This makes 'myObject' the current object. 'sel' just works like 'cd'
    in an ordinary shell, except that it selects the current object,
    not the current working directory in the filesystem.

set('getcmds')

    This invokes the method 'getcmds' on 'myObject', which
    will return a list of all command prototypes that 'myObject'
    accepts.

sel('..')

    Go back to the root object.


---
EOF








From andrew at puzzling.org  Fri Nov 30 18:54:08 2001
From: andrew at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Dec 2001 10:54:08 +1100
Subject: [Twisted-Python] FAQ-o-matic
In-Reply-To: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
References: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
Message-ID: <20011201105408.A483@frobozz.local>

On Fri, Nov 30, 2001 at 03:38:24PM -0500, Michael Dartt wrote:
> I'd like to suggest the addition of a FAQ-o-matic 
> (http://faqomatic.sourceforge.net/fom-serve/cache/427.html)to the Twisted 
> site.  I think it would make it much easier to get and to post info, as you 
> wouldn't have to wait for someone to write The Definitive Documentation(tm) for 
> a given subject.  From what I've seen/experienced, the "document-as-you-go" 
> approach works much better for open-source projects.  

Wouldn't a wiki be better?

There's already a wiki with stuff about twisted in it:
http://www.twistedmatrix.com/users/jh.twistd/python/moin.cgi/TwistedProject?action=highlight&value=CategoryTwisted
but it doesn't seem to be dedicated to Twisted...

-Andrew.





From glyph at twistedmatrix.com  Thu Nov  1 10:33:35 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 1 Nov 2001 11:33:35 -0600
Subject: [Twisted-Python] Enterprise, do you copy?
In-Reply-To: <20011031221552.A1625@troglodyte.menefee>
Message-ID: <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>

On Thursday, November 1, 2001, at 12:15  AM, Kevin Turner wrote:

> ...hello?  Hello?  Is anyone receiving this transmission?

[snip complaint about poorly-connected multiple language environment]

> Ye gods, man.  Can anyone save this tragedy?

[snip description of big piles of data]

[snip description of mouse-blood-thirsty research scientists]

> So, I gotta ask.  What's the status of twisted.enterprise these days?
> With Oracle?  Webwidgets would help with the web bit, but they'd still
> need to write javascript to keep the forms from being completely dumb?
> Or can you convince them that there's another interface that's portable
> and *drop-dead-easy* to maintain on the client machines, which he can
> use as an alternative to web?  Is there an IDE which can make up for all
> the shiny things which the Oracle tools have?

I hate to say this, but Twisted is not really in this 'market space' 
yet. This is a "traditional" (insofar as any tradition has yet 
developed) web application, and Twisted probably can't help too much.  
We aim to be there one day, but let me give you a brief description of 
why we're not yet...

Twisted is currently a framework for Python.  Not an IDE, not a 
web-platform development environment.  Web accessibility features are an 
equal partner of several different modes of accessibility.  "Enterprise" 
(relational storage) is still in the prototyping phase, and there are no 
applications yet that use it.

This means it isn't good for quick'n'dirty web apps unless you already 
know it; it certainly isn't good for quick'n'dirty web apps that you 
expect to scale.  [yet]  If you want to have any degree of integrated 
services (an AIM robot which can be configured through a web page or an 
IRC server, for example), then Twisted will be an advantage.  Also, if 
you're developing customized client software, PB can be a huge help in 
getting past the initial milestone of getting your client and server 
connected.

All of these tasks involve a degree of hacking proficiency above and 
beyond that required to go through a JDeveloper wizard and click on 
"-YES-! ENTERPRISE! WEB! WOOD GLUE!".  I don't intend to slur the 
intended audience here; I'm saying we would be misrepresenting Twisted 
to say it's *easy* to add new functionality like that.

Of course, the Oracle corporation is lying as well; but that's what they 
do for a living; I'm just an amateur marketer. ;-)

[snip screaming and gnashing of teeth about perl]

> I don't think it's too late.  They're still making up their minds.  But
> if there's another option, they've got to know soon, before they're
> wholly consumed by the dark side.  And whatever it is, it's got to do a
> damn _impressive_ job of selling itself, to overcome both that warm
> fuzzy feeling imparted by the "Larry Ellison" brand, and the deap
> zealotry of the Perl encampment.

OVERGENERALIZATION MODE ENGAGED

I think that your best bet in this particular situation is to befriend 
the Perl camp.  Show them some of the things you can do with Twisted, 
get them interested in Python.  If they want to go with raw perl, they 
probably understand that having a few  expert people generating code can 
be a lot better than a lot of inexpert people using tools they don't 
quite understand.  They won't be surprised when they hit a rough edge, 
and won't be shy about contributing changes back to the community.  It's 
likely that you won't be able to convince them, but at least you'll be 
speaking the same language.

Those who are pushing for JDeveloper are beyond hope; we don't have a 
big name behind Twisted (unless your father's employer knows the true 
and description-defyingly sinister meaning of "Twisted Matrix 
Laboratories", which I find unlikely).  We don't have big piles of money 
to wow them with flashy demos, and we  don't have any existing 
"customers" who use the "product" in the way that they expect to.  In 
many ways, the product they are shopping for doesn't do nearly the same 
thing as Twisted does; they want buttons to click on, not library 
functionality to use.

i-used-to-be-a-java-developer-too,-make-of-that-what-you-will-ly y'rs,

--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From carmstro at twistedmatrix.com  Thu Nov  1 11:34:30 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 1 Nov 2001 12:34:30 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: WebSite/twistedmatrix.com index.epy,1.22,1.23
In-Reply-To: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com>; from itamarst@twistedmatrix.com on Thu, Nov 01, 2001 at 05:06:33AM -0600
References: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com>
Message-ID: <20011101123429.A26644@twistedmatrix.com>

On Thu, Nov 01, 2001 at 05:06:33AM -0600, Itamar Shtull-Trauring wrote:
> Update of /cvs/WebSite/twistedmatrix.com
> In directory zaibach:/tmp/cvs-serv10487
> 
> Modified Files:
> 	index.epy 
> Log Message:
> added some info on what Twisted actually is

[snip diff..]

Isn't that what whatis.html is for?





From acapnotic at twistedmatrix.com  Thu Nov  1 12:34:36 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 1 Nov 2001 11:34:36 -0800
Subject: [Twisted-Python] Enterprise, do you copy?
In-Reply-To: <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>
References: <20011031221552.A1625@troglodyte.menefee> <E15zLqC-0006Qd-00@zaibach.twistedmatrix.com>
Message-ID: <20011101113436.A3063@troglodyte.menefee>

On Thu, Nov 01, 2001 at 11:33:35AM -0600, Glyph Lefkowitz wrote:
> [snip description of mouse-blood-thirsty research scientists]
[...]
> We aim to be there one day, but let me give you a brief description of 
> why we're not yet... 
[snipped]

> I think that your best bet in this particular situation is to befriend 
> the Perl camp.
[...]
> Those who are pushing for JDeveloper are beyond hope;
[...]
> All of these tasks involve a degree of hacking proficiency above and 
> beyond that required to go through a JDeveloper wizard and click on 
> "-YES-! ENTERPRISE! WEB! WOOD GLUE!"

Well, let me clarify a little how they arrived at the current position.
Dad "retired" from the Oracle arena some years back, when the web hadn't
*quite* taken over the world yet.  Now he's back in a situation where
he has an Oracle database and a need to make interfaces so people can
work with this data, and make it otherwise accessable.  (Preferrably
interfaces which require zero maintance on the client machine.)  Of
course, this has people saying "Uhh... internet."

So he goes to consult the Oracle, and the voice of Larry Ellison speaks
to him: "Internet?  Enterprise internet web internet.  Java!" and Dad
comes away thinking, "Oh, so that's how people do Oracle these days."

And yeah, there's a strong sense that "creating database interfaces
shouldn't require this much *code*, why hasn't anyone else made it as
easy as Filemaker has? (too bad there are a host of other disadvantages
to developing for Filemaker)", and I know that nothing Twisted currently
has is going to be really satisfying in that respect; that's what makes
Oracle JDeveloper and its wizardly companions look appealing.

But he also knows that in all likelyhood, someone will have to edit
some of this wizard-generated code someday, and he's quite concerned
that they be able to do so without having them shipped down to the
Neurology lab afterwards.  If my understanding of the environment is
accurate, at least a fair share of the people working on the interfaces
are past the "ENTERPRISE! WEB!  WOOD GLUE!" stage, so I would think that
code maintaniablitity is probably going to be at least as important as
clickability.

Nobody there currently knows Java, the only argument for it is "it's
what Oracle uses today, so if we want to work with Oracle products, this
is what we do."

> We don't have big piles of money to wow them with flashy demos, and we
> don't have any existing "customers" who use the "product" in the way
> that they expect to.
[...]
> "Enterprise" (relational storage) is still in the prototyping phase,
> and there are no applications yet that use it.

There's a relatively low PHB presence here, so while flashy demos would
help, it's not scrictly necessary -- persuasive practical arguments
could be effective.  However, the second issue -- the lack of maturity
and customer base -- is certain to be a killer.

Well, I had to ask.  Thank you for your honest appraisal.

"In-dread-of-being-subjected-to-a-"I'm-learning-java-and-think-it's-stupid"-rant-over-Thankgiving-dinner"-ly yours,

 Kevin

-- 
The moon is waning gibbous, 99.9% illuminated, 15.0 days old.




From lists at itamarst.org  Thu Nov  1 17:08:12 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 02 Nov 2001 02:08:12 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: WebSite/twistedmatrix.com index.epy,1.22,1.23
References: <E15zFg9-0002jG-00@zaibach.twistedmatrix.com> <20011101123429.A26644@twistedmatrix.com>
Message-ID: <3BE1E3EC.9010306@itamarst.org>

Chris Armstrong wrote:


> Isn't that what whatis.html is for?


First rule of marketing: Most people have the attention span of a 
hummingbird on speed. The explanation of what the hell Twisted is should 
be right up front, where people can see them, not on a different page.

The exception is of course when there already is automatic recognition, 
as with Budweiser, where you already know what is. In these cases 
they're trying to sell you on a image, as in "well-endowed young ladies 
enjoy drinking this stuff". Or maybe "drinking this will make you grow 
breasts", those subway ads were pretty unclear about which of the points 
they were trying to make...

But I digress.





From carmstro at twistedmatrix.com  Thu Nov  1 22:26:44 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 1 Nov 2001 23:26:44 -0600
Subject: [Twisted-Python] The never-ending quest for 1.0
Message-ID: <20011101232644.A10886@twistedmatrix.com>

Well, glyph has guilted me into trying out this "release manager" thing
tonight, since I, like, don't actually code anything. I'm gonna _try_ to
get 0.12.0 out tomorrow (well, later today), but my girlfriend might rip me
away from my computer (friday night, and all). If I don't have it 
released by the weekend, (and it's not because of a bunch of bugs), 
then I give you permission to hunt me down and lynch me for my lack of
responsibility. Speaking of responsibility, I think release manager
might actually fit me somewhat, since it's not such a consistent
thing, and doesn't directly involve much coding (i get to yell at
whoever made a bug, unless they're not around, in which case I would try to
find another idle twisted.minion to persuade to fix the bug, and if none of
those around, only THEN will I attempt to fix a bug myself ;) ;))

My humour would probably be more on the ball, but I'm not in top shape
today (yeah yeah, I know you're thinking "what humour?"). sorry.

--
Chris Armstrong <carmstro at twistedmatrix.com>
http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Fri Nov  2 19:39:11 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 2 Nov 2001 18:39:11 -0800
Subject: [Twisted-Python] ingtkernet._conditions
Message-ID: <20011102183911.A5445@troglodyte.menefee>

In Twisted/twisted/internet/ingtkernet.py revision 1.3:
> _conditions = {
>     gtk.GDK.INPUT_READ: 'Read',
>     gtk.GDK.INPUT_WRITE: 'Write',
>     
>     # This is here because SOMETIMES, GTK tells us about this
>     # condition (wtf is 3!?! GDK.INPUT_EXCEPTION is 4!) even though we

These are *bit flags*, so 3 is INPUT_READ & INPUT_WRITE.
I'm not sure what the correct course of action is to take here;
I tried calling both doRead and doWrite, but that only resulted in
brokenness.

>     # don't ask.  I believe this is almost always indicative of a
>     # closed connection.
>     3: 'Read'
>     }

Also relevant in the description of the GDK.INPUT_READ flag:
] the file descriptor has become available for reading. (Or, as is
] standard in Unix, a socket or pipe was closed at the other end; this
] is the case if a subsequent read on the file descriptor returns a
] count of zero.)


-- 
The moon is waning gibbous, 97.6% illuminated, 16.2 days old.




From lists at itamarst.org  Sun Nov  4 08:57:36 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 04 Nov 2001 17:57:36 +0200
Subject: [Twisted-Python] Call for developers: PB for Java
Message-ID: <3BE56570.6020406@itamarst.org>

Hi everyone,

I've started working on a PB implementation for Java. Banana support is 
finished, next up is jelly support, and then finally pb support. If anyone 
is interested in helping please contact me, on #python or by email.

Cheers!





From carmstro at twistedmatrix.com  Sun Nov  4 11:43:32 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 04 Nov 2001 13:43:32 -0500 (EST)
Subject: [Twisted-Python] Twisted 0.12.0
Message-ID: <20011104.134332.161042811.carmstro@twistedmatrix.com>

I'm not one for PR writing, so this is short. ;)

There's a new Twisted release at http://twistedmatrix.com. It's a major 
feature enhancement and bug-fix release, and it went rather smoothly -- 
if you'll notice, everyone's personal webservers on zaibach are still running,
even without needing a restart :-)

--
Chris Armstrong  |  carmstro at twistedmatrix.com  |  cjast3 at robert-morris.edu
Web Page: http://purl.org/net/ChrisArmstrong




From acapnotic at twistedmatrix.com  Mon Nov  5 14:09:04 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 5 Nov 2001 13:09:04 -0800
Subject: [Twisted-Python] Re: internet passport.py,1.15,1.16
In-Reply-To: <E160kgH-0007gE-00@zaibach.twistedmatrix.com>
References: <E160kgH-0007gE-00@zaibach.twistedmatrix.com>
Message-ID: <20011105130904.A16651@troglodyte.menefee>

On Mon, Nov 05, 2001 at 08:24:53AM -0600, Glyph Lefkowitz wrote:
> Modified Files:
> 	passport.py 
> Log Message:
> * small API change to internet.passport; Perspectives are now only
>   attached to the service when they are added to it.

Um, okay.  But why?  Your commit just added an extra line to every place
in the codebase which created a Perspective, without making that code
any more expressive.  If Perspectives in fact only exist to provide a
perspective to a specific service, in what situation would you create
Perspectives without having a Service to pass to the constructor?

Even given the existance of such situations, Service.createPerspective
is decidedly *not* one of them.  Why does a Perspective returned from
a Service method -- which has been added to the Service's list of
perspectives -- not have its service attribute set?

-- 
The moon is waning gibbous, 80.7% illuminated, 19.0 days old.




From glyph at twistedmatrix.com  Mon Nov  5 15:29:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Nov 2001 16:29:26 -0600
Subject: [Twisted-Python] Re: internet passport.py,1.15,1.16
In-Reply-To: <20011105130904.A16651@troglodyte.menefee>
Message-ID: <E160sMz-0000jm-00@zaibach.twistedmatrix.com>

On Monday, November 5, 2001, at 03:09  PM, Kevin Turner wrote:

> On Mon, Nov 05, 2001 at 08:24:53AM -0600, Glyph Lefkowitz wrote:
>> Modified Files:
>> 	passport.py
>> Log Message:
>> * small API change to internet.passport; Perspectives are now only
>>   attached to the service when they are added to it.
>
> Um, okay.  But why?  Your commit just added an extra line to every place
> in the codebase which created a Perspective, without making that code
> any more expressive.  If Perspectives in fact only exist to provide a
> perspective to a specific service, in what situation would you create
> Perspectives without having a Service to pass to the constructor?

In any service where you wish to migrate users across server boundaries 
or among different simulations, you'll need some flexibility there.  
That's why I added the createPerspective method at the same time; I 
think the average case should be to assume that perspective creation is 
the responsibility of a particular service.

> Even given the existance of such situations, Service.createPerspective
> is decidedly *not* one of them.  Why does a Perspective returned from
> a Service method -- which has been added to the Service's list of
> perspectives -- not have its service attribute set?

You are completely correct.  I just checked in a fix.

--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From acapnotic at twistedmatrix.com  Tue Nov  6 15:14:43 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 6 Nov 2001 14:14:43 -0800
Subject: [Twisted-Python] Perspective Shift
In-Reply-To: <E160sMz-0000jm-00@zaibach.twistedmatrix.com>
References: <20011105130904.A16651@troglodyte.menefee> <E160sMz-0000jm-00@zaibach.twistedmatrix.com>
Message-ID: <20011106141443.A22318@troglodyte.menefee>

In my recent inspection of passport.Perspective, I got to thinking:

My first time through Perspective Broker school, I got the impression
that a Perspective is the way a client sees a Service.  In more
practical terms, it seemed a Perspective is an object which provides the
client with an interface to the Service.  In this way a Perspective also
acts as a mediator between client and Service; not giving the client
unfettered access to the Service object, but only to methods defined in
the Perspective's interface.

So the stick figure in my head looks like this:
client <----> interface-perspective -- Service

But really, any podunk Referencable object holding a .service attribute
could do that.  Why, I wonder, all the fanfare about Perspectives? ...


Since the introduction of Passport, my understanding of Perspectives
has been shifting.  One realization is that Perspective objects aren't
transient objects which come and go with the clients who start and stop
viewing through them.  They're persistant objects, they hold state about
the "owners" they represent.  So now, slowly, Perspectives aren't just
how a client interfaces with a Service, they also are what a Service
knows about its clients.

The arrow in my stick figure begins to waver from "this thing is about a
Service" side, towards the "this thing is about a client" side.

Passport; Authorizers, Identities.  Glyph says he wants an object
representing a client's global identity, independant of any particular
service, and thus class Identity is born.  Again, Perspectives firmly
take the middle ground.  A client has an Identity, an identity which
must remain free of any Service-specific baggage.  Any aspects of a
client's state related to a particular Service go into its Perspective
to that service.

Meanwhile, Services still know nothing of Identities, still dealing only
with Perspectives.  To get to a Service though, you've now got to ask an
Authorizer.  Access is kept in the form of (service, perspective) pairs.
You *can't* treat a Perspective instance as transient and disposable
now-- were it to disappear, you might not be able to access the Service
again!

With the latest stirring of the pot,
> In any service where you wish to migrate users across server boundaries 
> or among different simulations, you'll need some flexibility there.  

it seems that the immutable nature of the
Perspective-instance-to-Service-instance link has been cut.  Presumably
the serviceType will remain the same, even if a Perspective drifts among
Service instances.  So I guess the client's conception of "this is my
view of this service" is still accurate.  It seems though that the arrow
has swung quite far to the "this thing is about a client" side.


So, that's my evolving perspective on the evolution of Perspectives.
Partly just thinking out loud.  When I started this message, I wasn't at
all sure that Perspectives are the same thing as they used to be, but I
guess I'm satisfied for now.

If I got any of it wrong...  well, you'll let me know.

 - Kevin

-- 
The moon is waning gibbous, 70.9% illuminated, 20.1 days old.




From lists at itamarst.org  Wed Nov  7 06:04:08 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 15:04:08 +0200
Subject: [Twisted-Python] Perspective Broker for Java works!
Message-ID: <3BE93148.6010100@itamarst.org>

Hi everyone,

Just a status report - PB for Java is up to the point where it can connect 
to the simple example service in doc/examples/pbsimple.py and get the 
response. Which means that implementing a (very) basic implementation with 
equivalent functionality to XML-RPC takes about 3 days.

As always, I'd appreciate any help in making this a complete implementation.





From glyph at twistedmatrix.com  Wed Nov  7 07:49:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 7 Nov 2001 08:49:56 -0600
Subject: [Twisted-Python] Film At 11
Message-ID: <E161U9V-0003Co-00@zaibach.twistedmatrix.com>

This conversation has been edited for length, to fit your screen, and, 
in some cases, content:

<itamar> hi glyph
<glyph> hit itamar
<glyph> hi itamar, even ;)
<itamar> I'm glad to say we now have java interop
<glyph> itamar: So I read from the list
<itamar> now's about the point where I could use some help
<itamar> not that that's gonna happen
<glyph> itamar: So I thought of another cool hack that you might want to 
work on
<glyph> totally unrelated to java ;)
<itamar> yes?
<glyph> itamar: Don't run away --
<glyph> "The configuration system"
<itamar> mmm
<glyph> itamar: I just had a conversation about it last night.
<itamar> what exactly where you thinking of?
<glyph> itamar: Let me ramble about vision for a moment (you'll probably 
see this in an email sometime soon, too)
<itamar> ok
<glyph> Twisted isn't a particularly great webserver, when you compare 
functionality blow-for-blow with apache.  It's not a great chatserver, 
when it has to slug it out with ircd.  But we all like Twisted more than 
either of those -- why?
<glyph> Well, because it's an IRC server *and* a web server.
<itamar> right
<glyph> What makes Twisted special is the degree of integration that it 
allows for all its services.
<glyph> However, this integration is effectively lost to anyone who 
isn't a programmer (and to some extent, to anyone who isn't already 
rather familiar with the codebase) because there's no metaphor for the 
integration.  Everything is rather concrete, speaking in terms of file 
descriptors and delayed events and what-have-you.
<itamar> glyph: ok -
<glyph> With the refactoring that we're talking about, centering around 
t.i.m.A, there is going to be at least a common metaphor for what stuff 
connects to what bit of the network...
<itamar> right
<glyph> The configuration application that I envision has a unified 
notion of the "things that do stuff", although I haven't come up with a 
good name for them.  Zope-like, you'll have a menu to create an object 
of lots of different types (like a Words service, a mail service, a web 
site, etc), some of which listen on ports directly, some of which are 
indirectly connected to the network through PB publishers or web 
resources.
<itamar> well, meanwhile it sounds like a mktap with a slightly better UI
<glyph> itamar: the use-case that I'm thinking of for it is creating a 
web site and a words service, hooking up a tendril to a persistent IRC 
server, creating a personal website and mounting the registration and 
userlist widgets somewhere within your personal web space.
<itamar> hmmm... a configuration tool for web would be quite nice for 
starters, yes
<glyph> itamar: Note that I mention spawning a tendril as well -- one of 
the goals of this tool would be to unify mktap and im.  You really ought 
to just create a "persistent outgoing chat connection w/ Tkinter UI" as 
an object, put it in your tap, and have it run in your personal twistd 
server
<glyph> itamar: this would also clearly define the role of "plugins" -- 
they are code which adds stuff to that menu of base types of objects one 
can create
<glyph> I'm inclined to say that for starters, each object defines its 
own web form that allows you to configure it
<itamar> how would you model something that connects web and a words 
service?
<itamar> this is where you start wishing for a 3d gui
<glyph> itamar: optimally, yeah, you'd have something like a 3D visio 
where you could dynamically drag connections
<itamar> actually a 2d one would do
<glyph> but working with "web form" as the metaphor, there's still quite 
a lot you can do :)
<itamar> where you drag lines from a object to another
<glyph> when you create a words service, it publishes several web 
objects, none of which are connected to anything
<glyph> so when you go to a page that wants to pop up a list of possible 
objects you could add as a web resource, those appear.
<glyph> It's like your application has a "bag" of sub-objects that you 
"carry around" in the configuration interface
<itamar> I like it. of course my innate dislike of web (or GUI, for that 
matter) programming is getting in the way.
<itamar> but it would be good for my software as well, since it has all 
these pluggable components you need to mix and match
<itamar> and then there's monitoring components (web, nt performance 
monitor)
<itamar> and logging components (syslog, file, nt log)
<glyph> itamar: Yeah.  The reason that this configuration thing came to 
me is because someone who was asked to do a technical evaluation of 
Twisted, upon completing his evaluation, had only one thing to say
<glyph> "What is it *for*?"
<itamar> what?
<itamar> what is what for?
<glyph> itamar: What is Twisted for.
<sayke> glyph: that was my response. "that's a damn impressive kitchen 
sink ya got there" ;)
<glyph> itamar: and I realized that *this* is what Twisted is for.  Even 
though we don't have a very good metaphor for it or interface to it, no 
other server framework even aspires to this sort of integrated 
environment.
<glyph> There are a few "java Application servers" that make-believe, 
except that they ONLY do web, and ONLY for business, and severely limit 
the sort of apps you can write with them.
<itamar> yeah, or Zope, which has ftp/http/webdav/xmlrpc, but attempts 
to add nttp or imap have failed
<glyph> itamar: ftp/http/webdav/xmlrpc are still all just ways of 
publishing structured documents
<glyph> itamar: they're not fundamentally different ways of interacting 
with the system
<itamar> yeah
<glyph> itamar: nntp and imap, strangely enough, are :)
<itamar> well, actually, there's a irc bot written for zope
<itamar> on to concretes - is there any way we can do without a web 
interface?
<glyph> itamar: well, a first step in this direction is just a unified 
set of utility methods :)
<itamar> how about anygui? they are promising a html interface
<glyph> itamar: anygui is crack
<itamar> and a curses interface
<itamar> glyph: why do you say that?
<glyph> itamar: Have you ever done any work with webwidgets?
<itamar> nope
<glyph> itamar: take a look at the form widget
<glyph> itamar: it's staggeringly little code to write
<itamar> one sec
<itamar> where can I find an example?
<glyph> You might have to refactor it a little bit, but the basic idea 
is you define what inputs your form takes, then it renders the form for 
you and calls back to a method with the appropriate signature with each 
form value as an arguemnt when the user POSTs
<itamar> ok, so we can have a generic configuration API, and have a web 
interface to that, and a tkinter interface to it etc.?
<glyph> itamar: twisted.web.guard.AuthForm
<glyph> itamar: yes.
<glyph> itamar: I don't want to do anygui, because I'd like the tkinter 
interface to be *different* from the web interface.  To begin with I 
think we should go with web-only and refactor once we see what 
ocnfiguration patterns emerge, but if you want to go with tkinter-only 
or gtk-only for the first pass... hey, I don't have the time to write 
this :)
<itamar> mmmm
<itamar> how about registry.registerThingie(type, description, 
parameters, factoryCallable)
<itamar> registry.listThingies(type)
<itamar> I'm going to eat
<itamar> glyph: mail the log to the list



--
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From lists at itamarst.org  Wed Nov  7 08:24:58 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 17:24:58 +0200
Subject: [Twisted-Python] Film At 11
References: <E161U9V-0003Co-00@zaibach.twistedmatrix.com>
Message-ID: <3BE9524A.2000106@itamarst.org>

Glyph Lefkowitz wrote:

> This conversation has been edited for length, to fit your screen, and, 
> in some cases, content:


You don't want to know about *that* part. trust me.

Here's what I've come up with so far-

1) the config thing for a given Service has to be a seperate module that 
makes sure *not* to import the service's module. Otherwise we end up 
importing tkinter and gtk and wxwindows every time we run twisted, and this 
sucks up memory.

2) this isn't going work well with the current threading model.







From lists at itamarst.org  Wed Nov  7 11:17:28 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Nov 2001 20:17:28 +0200
Subject: [Twisted-Python] suggestions for changes to PB
Message-ID: <3BE97AB8.8090501@itamarst.org>

Refactoring:

1) For clarity's sake, turn pb into a package:
    pb.local
    pb.remote
    pb.protocol

2) the methods for connecting to a server assume you are using TCP - they 
should use the new connectTCP, connectSSL, etc. API when we do *that* refactor.


Added functionality:

1) Use SRP instead of whatever the current challenge/response is - see 
http://www-cs-students.stanford.edu/~tjw/srp/.

2) Make a login system that uses X.509 certificates for identities (SSL only).

3) Look at SPKI for an alternate certificate-based system (RFC 2693).





From lists at itamarst.org  Thu Nov  8 04:39:48 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 08 Nov 2001 13:39:48 +0200
Subject: [Twisted-Python] Rocks - Reliable Sockets
Message-ID: <3BEA6F04.7070702@itamarst.org>

<http://www.cs.wisc.edu/~zandy/rocks/>





From lists at itamarst.org  Thu Nov  8 10:34:26 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 08 Nov 2001 19:34:26 +0200
Subject: [Twisted-Python] Sped-up banana
References: <Pine.LNX.4.33.0110301310490.22821-300000@ostrich-deluxe.labs.redhat.com>
Message-ID: <3BEAC222.5060709@itamarst.org>

Elliot Lee wrote:

> The encoder redone in C, and handles 'long' numbers correctly.
> 
> At radix' request,
> -- Elliot


What's the apiarymisc module you use in banana.py?





From carmstro at twistedmatrix.com  Thu Nov  8 10:43:13 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 08 Nov 2001 12:43:13 -0500 (EST)
Subject: [Twisted-Python] Sped-up banana
In-Reply-To: <3BEAC222.5060709@itamarst.org>
References: <Pine.LNX.4.33.0110301310490.22821-300000@ostrich-deluxe.labs.redhat.com>
	<3BEAC222.5060709@itamarst.org>
Message-ID: <20011108.124313.846967840.carmstro@twistedmatrix.com>

From: Itamar Shtull-Trauring <lists at itamarst.org>
Subject: Re: [Twisted-Python] Sped-up banana
Date: Thu, 08 Nov 2001 19:34:26 +0200

> Elliot Lee wrote:
> 
> > The encoder redone in C, and handles 'long' numbers correctly.
> > 
> > At radix' request,
> > -- Elliot
> 
> 
> What's the apiarymisc module you use in banana.py?

I don't think he's subscribed to the list.. You'll have to mail him directly or
find him on IRC.

--
Chris Armstrong <carmstro at twistedmatrix.com>
http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Fri Nov  9 08:12:55 2001
From: andrew at puzzling.org (Andrew Bennetts)
Date: Sat, 10 Nov 2001 02:12:55 +1100
Subject: [Twisted-Python] Tiny bug in echoserv_threaded.py example
Message-ID: <20011110021255.A2057@frobozz.local>

echoserv_threaded.py doesn't work with 1.5.2.  Here's a trivial patch to
fix it:

--- echoserv_threaded.py        Sat Nov 10 02:07:34 2001
+++ echoserv_threaded_fixed.py  Sat Nov 10 02:06:32 2001
@@ -55,7 +55,7 @@
 class Echo(Protocol):
 
     def connectionMade(self):
-        self.messagequeue = Queue.Queue()
+        self.messagequeue = Queue.Queue(0)
         self.handler = Handler(self)
         self.handler.start()
 
Regards,

-Andrew.




From acapnotic at twistedmatrix.com  Sun Nov 11 12:58:02 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 11:58:02 -0800
Subject: [Twisted-Python] ObjectBrowser references
Message-ID: <20011111115802.A18083@troglodyte.menefee>

So, there's been some confusion expressed (by certain
sleep-deprived individuals) about what it is that the
class twisted.python.explorer.ObjectBrowser is for.
Given that this is the first-pass implementation and
a number of questionable decisions were made in the
implementation, that's to be expected.

One train of questions goes like this:

 Q) Why is ObjectBrowser a class at all, and not just a collection of
    introspection functions?

 A) You're right, the browse_* methods make no use of an
    ObjectBrowser instance's state, and could well be static functions.
    The only reason to inXXX (what's the verb "to create an instance of
    a class"?) ObjectBrowser is so it can hold on to a consistant
    namespace.
    (See also the comment preceding the browse_ definitons for another
    reason why these methods should be gathered in a container.)

 Q) What's it doing holding namespaces?

 A) It eval()uates the identifiers (identifiying expressions, really)
    given to it in its namespace.

 Q) Ugh.  What's ObjectBrowser got to use eval() for?  Why doesn't it 
    just take an object?

And thus we arrive at the crux of the issue.

Here's my thinking:

Requirement: When an object is "browsed", the result will contain
references to other objects; it's attributes, sequence elements, etc.
It must be easy for the user to take one of those references and
browse that object.

Requirement: ObjectBrowser be usable via remote interface, i.e. PB or
web.
 
Consequence: When returning references to other objects in its results,
ObjectBrowser cannot return Python references to the objects themselves.
It must return some more "portable" reference which can freely be passed
both ways through the boundry of this Python process.

This is not the first time man has encountered such a problem; it's the
same problem Pickle faces when referencing objects "outside the pickled
data stream".  It's central to the whole concept of Perspective Broker
remote references.  It's why Glyph keeps saying we need some sort of URI
to identify objects with.
 
But not every object is pb.Referenceable, and we don't have a distributed
object URI scheme yet.  So the only way I can think of to refer to a
particular object is the way a programmer refers to the object when
speaking to the interpter -- by its identifier.  that string which, when
evaluated by the interpreter, is a reference to the object.  So that's
what ObjectBrowser returns.  ObjectLinks represeting objects with
particular identifiers.

Now we go back to the first requirement, "It must be easy for the user
to take one of those references and browse that object."  Or, as a unit
test:

    lookAtMe = SomeThing()
    
    # Look at this object.
    objectLink1 = browser.browseIdentifier('lookAtMe')
    
    # Now look at some object related to this one.
    # Simplest case: I am related to me.
    myIdentifier = objectLink1.identifier
    objectLink2 = browser.browseIdentifier(myIdentifier)
    
    # Did I get the object with the desired relation?
    # (Simplest case: Was I really me?)
    failUnlessEqual(objectLink1.id, objectLink2.id)


Now, to obtain objectLink1, you could argue that we could have used
browser.browseObject(object=lookAtMe, identifier='lookAtMe'), and you're
right.  But to obtain objectLink2, when we only have the contents of
objectLink1 to work from, we only have the identifier to pass back.

So that's why I think ObjectBrowser needs to accept identifiers,
and that's why I guess ObjectBrowser has to use eval(),

 ...

Questions, comments, reservations?
Suggestions?

-- 
Kevin Turner <acapnotic at twistedmatrix.com> | OpenPGP encryption welcome here
The moon is waning crescent, 18.2% illuminated, 25.4 days old.




From carmstro at twistedmatrix.com  Sun Nov 11 15:10:46 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 11 Nov 2001 17:10:46 -0500 (EST)
Subject: [Twisted-Python] ObjectBrowser references
In-Reply-To: <20011111115802.A18083@troglodyte.menefee>
References: <20011111115802.A18083@troglodyte.menefee>
Message-ID: <20011111.171046.846932419.carmstro@twistedmatrix.com>

I'm the guy that had sleep-deprived reservations about what Acap was doing,
but I finally beat him^W^Wgot him to understand what I was talking about.

From: Kevin Turner <acapnotic at twistedmatrix.com>
Subject: [Twisted-Python] ObjectBrowser references
Date: Sun, 11 Nov 2001 11:58:02 -0800

[snip everything..]

Here's the plan that Acapnotic and I came up with, after hours of figuring
each other out: 

Refactor existing ObjectBrowser into ObjectExaminer and ObjectWatcher.
Get rid of all namespace/evaluating stuff for now (the "browsing" stuff).
This will probably be reintroduced in another form later. We will also probably
have an ExaminerFactory, which returns different kinds of ObjectExaminers based
on what kind of object you tell it to examine (I'm not so sure we'll need
ObjectExaminers, but we probably will).

So the idea is to be able to say (in manhole):

o = SomeObject()
look at o

This will bring up a slick GUI which allows you to examine the attributes,
type, class, etc of an object, as well as allow you to attach a "watch"
to this object. (just had an idea -- a default ObjectWatcher with a callback
to update the data display for the object being examined. discuss.)

All this slick GUI will do is create an ObjectExaminer for that object 'o'.
This will be done with the Manhole client (that is, the manhole client will
figure out what the string "o" represents, not the manhole service/explorer.

Originally, I said we ought to refactor ObjectBrowser into ObjectBrowser,
ObjectExaminer, and ObjectWatcher. But then I said "let's just ignore 
ObjectBrowser for now, and bring it back later if we find we need it."
Well, I've told acap that I've had ideas brewing in my head, and that
I didn't want to talk about them yet, but I'll say this much:
I think the "object browsing" functionality (namespaces+eval) might indeed
be brought back into the "ObjectExaminer" class, or at least be somehow
closely related to it. That is how we will be able to open up a GUI
for object A, click on Object B inside of it, thus creating a new GUI
for object B. I'm not quite certain how this should be done, and that's
why the plan is to simply get rid of Browsing functionality for now. 

Kevin and I will probably be hacking on this tonight. This probably means
that the release of 0.12.1 (which was planned to be released very soon)
will be pushed back a few days. No big deal, though.

I hope this all made sense (especially to Kevin, since I tried hard to get him
to understand it ;)).

--
<glyph_> it's times like this when I wish I could just swallow my pride and use
a standard thing like asyncore :)
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Sun Nov 11 16:07:57 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 15:07:57 -0800
Subject: [Twisted-Python] ObjectBrowser references
In-Reply-To: <20011111.171046.846932419.carmstro@twistedmatrix.com>
References: <20011111115802.A18083@troglodyte.menefee> <20011111.171046.846932419.carmstro@twistedmatrix.com>
Message-ID: <20011111150757.A18818@troglodyte.menefee>

I am on the list, ya know.  You don't need to CC me.  :)

On Sun, Nov 11, 2001 at 05:10:46PM -0500, Chris Armstrong wrote
...uh, stuff, and

> I hope this all made sense (especially to Kevin, since I tried hard to
> get him to understand it ;)).

I tried hard to get you to me understand it too!  

It was like pulling teeth, but I finally got him to tell me how dividing
the class and dropping the ObjectLink class was a good thing.  Remember
when I said I needed a portable reference to an object, "but not every
object is pb.Referenceable"?  The solution being: wrap the object in a
pb.Referenceable.  Nice.  Simple.  Yay.

> We will also probably have an ExaminerFactory, which returns different
> kinds of ObjectExaminers based on what kind of object you tell it to
> examine (I'm not so sure we'll need ObjectExaminers, but we probably
> will).

"not so sure we'll need ObjectExaminers"?  You meant to write
"not so sure we'll need *different kinds of* ObjectExaminers", right?

Ok, that's all I've got to say to the archive now.  The rest goes to
either IRC or emacs.

-- 
Kevin Turner <acapnotic at users.sourceforge.net> | OpenPGP encryption welcome here




From acapnotic at twistedmatrix.com  Sun Nov 11 16:17:44 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 11 Nov 2001 15:17:44 -0800
Subject: [Twisted-Python] twisted.words.ui.im3.saveState
Message-ID: <20011111151744.A18979@troglodyte.menefee>

Say, what's up with the proliferationg of numbered imX.py files?

Anyway, what I meant to say was:
im3.py:492: No global (gateway) found

-- 
The moon is waning crescent, 16.9% illuminated, 25.5 days old.




From carmstro at twistedmatrix.com  Mon Nov 12 00:08:17 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 12 Nov 2001 02:08:17 -0500 (EST)
Subject: [Twisted-Python] im bug
Message-ID: <20011112.020817.607957970.carmstro@twistedmatrix.com>

Traceback (most recent call last):
  File "/usr/lib/python2.1/lib-tk/Tkinter.py", line 1285, in __call__
    return apply(self.func, args)
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 639, in logOnOff
    self.logonAccount(account)
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 645, in logonAccount
    missing=im3.logonAccount(self.im,account)
  File "/home/punck/cvs/Twisted/twisted/words/ui/im3.py", line 508, in logonAccount
    for foo,key,bar in gateways.__gateways__[account.gatewayname].loginOptions:
ValueError: unpack list of wrong size

this happened while running accepttests. I was trying to log on to my test account. 
I hit "log on/off" and then that traceback happened, and it just says "attempting"
in the connection status.

--
<mbac> strange
<mbac> all my life i've hated object oriented programming
<mbac> when the problem was simply that i was using C++
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Nov 12 00:27:29 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 12 Nov 2001 02:27:29 -0500 (EST)
Subject: [Twisted-Python] im bug... (oops)
Message-ID: <20011112.022729.640896624.carmstro@twistedmatrix.com>

Sorry. I didn't have the latest CVS. That last bug is obsolete. :( But heh,
I have a couple other bugs to report now :) (There was a syntaxerror in toc.py,
but I've already fixed that myself.)

First off, loading of the ~/.imsaved pickles doesn't work. I get an EofError
every time on the cPickle.load(file).

second, I'm getting this:
Traceback (most recent call last):
  File "/home/punck/cvs/Twisted/bin/im", line 54, in ?
    tkim.main()
  File "/home/punck/cvs/Twisted/twisted/words/ui/tkim.py", line 721, in main
    im3.saveState(f,im.am.getState())
  File "/home/punck/cvs/Twisted/twisted/words/ui/im3.py", line 507, in saveState
    lo=gateway.__gateways__[k].loginOptions
NameError: global name 'gateway' is not defined

whenever I close the IM window after I've already logged on.

--
<Yosomono at efnet> swing is to gui programming what cupholders are to cdrom drives
<Yosomono at efnet> something easily mistaken for the real thing
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From lists at itamarst.org  Mon Nov 12 06:10:13 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 12 Nov 2001 15:10:13 +0200
Subject: [Twisted-Python] PB for Java status report
Message-ID: <3BEFCA35.4050904@itamarst.org>

It's now possible to create Referenceables in Java - meanwhile simple 
remote_xxx style ones only, no support for Perspectives or Viewables yet.

In other words, you can now create PB services in Java as well - I think 
it's pluggable enough that you could integrate this with any Java server 
architecture that uses streams (which is probably all of them :).





From jasbahr at crash.org  Mon Nov 12 07:52:23 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Mon, 12 Nov 2001 08:52:23 -0600
Subject: [Twisted-Python] PB for Java status report
In-Reply-To: <3BEFCA35.4050904@itamarst.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMGEPIHJAA.jasbahr@crash.org>

That's awesome!  

Are you planning a Java applet-client to demonstrate your work later?  :-)

Jason

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Monday, November 12, 2001 7:10 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] PB for Java status report


It's now possible to create Referenceables in Java - meanwhile simple 
remote_xxx style ones only, no support for Perspectives or Viewables yet.

In other words, you can now create PB services in Java as well - I think 
it's pluggable enough that you could integrate this with any Java server 
architecture that uses streams (which is probably all of them :).



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lists at itamarst.org  Mon Nov 12 10:27:56 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 12 Nov 2001 19:27:56 +0200
Subject: [Twisted-Python] Referenceable interfaces in Java
Message-ID: <3BF0069C.8060800@itamarst.org>

Any suggestions on how to deal with keywords args in Java PB referenceables?

If I just ignore them I can make methods in Referenceables be a lot more 
normal looking:

	public Object remote_foo(Integer x)

instead of:

	public Object remote_foo(Object[] args, Map kwargs)

And allow method overloading too.

I could of course implement both policies in different classes, in which 
case I'd be happy for suggestions on a name for such classes.





From lists at itamarst.org  Tue Nov 13 08:20:44 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 13 Nov 2001 17:20:44 +0200
Subject: [Twisted-Python] PB for Java status report
References: <EIEFLCFECLLBKGPNJJIMGEPIHJAA.jasbahr@crash.org>
Message-ID: <3BF13A4C.3090405@itamarst.org>

Jason L. Asbahr wrote:


> Are you planning a Java applet-client to demonstrate your work later?  :-)


I really don't enjoy GUI programming, so... "patches accepted" ;)







From acapnotic at twistedmatrix.com  Tue Nov 13 17:37:31 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 13 Nov 2001 16:37:31 -0800
Subject: [Twisted-Python] non-blocking and non-blocking.
Message-ID: <20011113163731.A26072@troglodyte.menefee>

So, if you run something like the following through manhole:

def spam(n=300):
    for i in xrange(n):
        print "iiIiiIiI", i

spam()

the whole mess comes back when the command has finished completion, and
receiving that much data seems to take the protocol-decoder a while to
decode.  Long enough that it can cause a hiccup, or outright stall, in
the GUI.  So it might be nice to do that processing in incremental bit
so it shares time better.  In twisted.python terms, it'd be in a Looping
construct, or in GTK terms, you'd add it on an idle handler.

Gurgf.  My brain, it is not doing the thinking at this time, so this
post just is to say "don't forget about this; put it on the TODO list or
something."

-- 
The moon is waning crescent, 3.3% illuminated, 27.8 days old.




From lists at itamarst.org  Wed Nov 14 02:25:42 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Nov 2001 11:25:42 +0200
Subject: [Twisted-Python] non-blocking and non-blocking.
References: <20011113163731.A26072@troglodyte.menefee>
Message-ID: <3BF23896.1000400@itamarst.org>

Kevin Turner wrote:

> So, if you run something like the following through manhole:
> 
> def spam(n=300):
>     for i in xrange(n):
>         print "iiIiiIiI", i
> 
> spam()
> 
> the whole mess comes back when the command has finished completion, and
> receiving that much data seems to take the protocol-decoder a while to
> decode.  Long enough that it can cause a hiccup, or outright stall, in
> the GUI.  So it might be nice to do that processing in incremental bit
> so it shares time better.  In twisted.python terms, it'd be in a Looping
> construct, or in GTK terms, you'd add it on an idle handler.


Or, you could return a Deferred and dispatch the action to be done by a 
ThreadDispatcher.








From adam.brett at mail.internetseer.com  Tue Nov 13 16:51:19 2001
From: adam.brett at mail.internetseer.com (adam.brett at mail.internetseer.com)
Date: Tue, 13 Nov 2001 18:51:19 -0500 (EST)
Subject: [Twisted-Python] We are Unable to Reach your Web Page
Message-ID: <7341997.1005695479472.JavaMail.promon@pm66>

There appears to be a problem in reaching the following Web page from 
Philadelphia, Pennsylvania:

   http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
   Error:  Time Out 

This error is most commonly due to an Internet connection problem and does not 
necessarily indicate that your server is down. 

As recommended by the robot Guidelines, this email is to explain our research 
activity and to alert you about the connectivity error we encountered. 
InternetSeer, the world's largest web site monitoring service, does not store 
or publish the content of your pages, but rather uses the information to update 
our ongoing Web Connectivity Study.

To learn more about our study results or to request InternetSeer to continue 
monitoring your Web site in this way,  visit: 
http://scclick.internetseer.com/sitecheck/clickthrough.jsp?I5s57g5f5g5f5j5h52R5sxUSYvpfPM_5azJPQII5vxUSzPM_H_xzSU5bRIH55P5qQxPz5m5c5exUSzPM_H_xzSU5bRIH5eNLzVzN6tLI5bPKXxTVV5cNKTMNy5b5f5f5c5e5c5tWLPxT5b5d5f5c5e5l5c5bQxHI52P5s5d=e3

If you find this information about the availability of your Web site useful, 
we would appreciate your feedback. Should you prefer not to receive these 
error notices in the future please let us know by replying to this email and 
placing "remove" in the subject line. You will be removed from receiving 
further email error notices.

Adam Brett 
Analyst Manager
cs-adam.brett at mail.internetseer.com
InternetSeer.com "Your Remote Web Site Monitor"
http://www.internetseer.com

PS. We will send you a courtesy email when we are able to reach your Web 
page again.

##twisted-python at twistedmatrix.com##
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20011113/46fd74bb/attachment.html>

From glyph at twistedmatrix.com  Wed Nov 14 10:45:16 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Nov 2001 11:45:16 -0600
Subject: [Twisted-Python] We are Unable to Reach your Web Page
In-Reply-To: <7341997.1005695479472.JavaMail.promon@pm66>
References: <7341997.1005695479472.JavaMail.promon@pm66>
Message-ID: <1005759916.4649.20.camel@zelda>

Sorry about that, folks, I had not restricted posting to list members
for some reason.  I encourage anyone who received that email to follow
it up with the other ISPs involved in transmitting it, and with
internetseer.  Won't happen again.

On Tue, 2001-11-13 at 17:51, adam.brett at mail.internetseer.com wrote:
> There appears to be a problem in reaching the following Web page from 
> Philadelphia, Pennsylvania:
> 
>    http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
>    Error:  Time Out 


-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From carmstro at twistedmatrix.com  Wed Nov 14 16:46:28 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 14 Nov 2001 18:46:28 -0500 (EST)
Subject: [Twisted-Python] We are Unable to Reach your Web Page
In-Reply-To: <1005759916.4649.20.camel@zelda>
References: <7341997.1005695479472.JavaMail.promon@pm66>
	<1005759916.4649.20.camel@zelda>
Message-ID: <20011114.184628.730548063.carmstro@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] We are Unable to Reach your Web Page
Date: 14 Nov 2001 11:45:16 -0600

> Sorry about that, folks, I had not restricted posting to list members
> for some reason.  I encourage anyone who received that email to follow
> it up with the other ISPs involved in transmitting it, and with
> internetseer.  Won't happen again.

Are you sure you don't want non-list members to be able to post? Some people
hate signing up for lists, and still might want to send stuff in (frex,
Sopwith).


> On Tue, 2001-11-13 at 17:51, adam.brett at mail.internetseer.com wrote:
> > There appears to be a problem in reaching the following Web page from 
> > Philadelphia, Pennsylvania:
> > 
> >    http://twistedmatrix.com/pipermail/twisted-python/2001-August/000160.html	
> >    Error:  Time Out 

--
<sayke> Acapnotic: don't make it twisted-specific
<dash> sayke: pffft
<dash> sayke: twisted isn't specific
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From lists at itamarst.org  Thu Nov 15 09:06:51 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Nov 2001 18:06:51 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/web server.py,1.22,1.23
References: <E164NMs-0003Zw-00@zaibach.twistedmatrix.com>
Message-ID: <3BF3E81B.5090508@itamarst.org>

Itamar Shtull-Trauring wrote:


> +            
> +            # if this is a "HEAD" request, we shouldn't return any data
> +            if self.method == "HEAD":
> +                self.write = lambda data: None
> +        

I just thought of this - is this gonna break spreadable web servers?






From glyph at twistedmatrix.com  Thu Nov 15 16:09:07 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Nov 2001 17:09:07 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/web
	server.py,1.22,1.23
In-Reply-To: <3BF3E81B.5090508@itamarst.org>
References: <E164NMs-0003Zw-00@zaibach.twistedmatrix.com> 
	<3BF3E81B.5090508@itamarst.org>
Message-ID: <1005865747.932.0.camel@zelda>

Hmm, probably, since the lambda won't be serializeable.  Is this really
even the right place to support HEAD?  I mean, dynamic resources can be
responsible for it themselves, but static.File seems the first obvious
place to do this.

On Thu, 2001-11-15 at 10:06, Itamar Shtull-Trauring wrote:
> Itamar Shtull-Trauring wrote:
> 
> 
> > +            
> > +            # if this is a "HEAD" request, we shouldn't return any data
> > +            if self.method == "HEAD":
> > +                self.write = lambda data: None
> > +        
> 
> I just thought of this - is this gonna break spreadable web servers?

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From lists at itamarst.org  Fri Nov 16 06:01:49 2001
From: lists at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Nov 2001 15:01:49 +0200
Subject: [Twisted-Python] ONJava.com: Atomic File Transactions, Part 1 [Nov. 07, 2001]
Message-ID: <3BF50E3D.8020406@itamarst.org>

This would be very useful to have in Twisted (e.g. we could have a 
transactional dirdbm):

<http://www.onjava.com/pub/a/onjava/2001/11/07/atomic.html>






From acapnotic at twistedmatrix.com  Sat Nov 17 12:26:35 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 17 Nov 2001 11:26:35 -0800
Subject: [Twisted-Python] Process Producer, Request Consumer
Message-ID: <20011117112635.B3204@troglodyte.menefee>

So somebody asked on the channel today, "how do I get the output of a
system command displayed on my .epy web page?"
Basically, the <!--#exec cmd="foo" --> type of thing, if I remember my
SSI.

Now, given the pieces that are in Twisted, it seems like this should be
at most two lines long:
1) create Process
2) designate the web Request as a consumer of the Process.

except that I don't know how to do #2 quite so succinctly.  Can anyone
speak on this subject?

 - Kevin

-- 
The moon is waxing crescent, 5.7% illuminated, 2.3 days old.




From glyph at twistedmatrix.com  Sat Nov 17 13:21:40 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Nov 2001 14:21:40 -0600
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011117112635.B3204@troglodyte.menefee>
References: <20011117112635.B3204@troglodyte.menefee>
Message-ID: <1006028502.3180.0.camel@zelda>

On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> So somebody asked on the channel today, "how do I get the output of a
> system command displayed on my .epy web page?"
> Basically, the <!--#exec cmd="foo" --> type of thing, if I remember my
> SSI.
> 
> Now, given the pieces that are in Twisted, it seems like this should be
> at most two lines long:
> 1) create Process
> 2) designate the web Request as a consumer of the Process.
> 
> except that I don't know how to do #2 quite so succinctly.  Can anyone
> speak on this subject?

Your answer is, unfortunately, wrong.  From a .epy, the best way to do
that is just to run os.popen().read() :).  Otherwise, you would be
abandoning any further output to that webpage; the Process would take
over and close it.

This is exactly the sort of situation that web.widgets was designed to
remedy.  There is unfortunately no widget currently for "process
output", but there should be.  Patches accepted!.  (There should also be
one for "relational database query", of course).

> -- 
> The moon is waxing crescent, 5.7% illuminated, 2.3 days old.

I'm practically afraid to check -- does Nethack still consider this a
"new moon"? :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From acapnotic at twistedmatrix.com  Sat Nov 17 19:10:20 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 17 Nov 2001 18:10:20 -0800
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <1006028502.3180.0.camel@zelda>
References: <20011117112635.B3204@troglodyte.menefee> <1006028502.3180.0.camel@zelda>
Message-ID: <20011117181020.A3776@troglodyte.menefee>

On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > it seems like this should be at most two lines long:
> > 1) create Process
> > 2) designate the web Request as a consumer of the Process.
>
> [...] wrong. [...] you would be abandoning any further output to that
> webpage; the Process would take over and close it.

Well, for the purposes of discussion, because I don't understand how to
best use Process, let's say that's acceptable behavour.  It's okay if
the request is considered finished as soon as the process is.  Now, how
would I do it?

-- 
The moon is waxing crescent, 7.2% illuminated, 2.5 days old.




From carmstro at twistedmatrix.com  Sun Nov 18 00:32:01 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 18 Nov 2001 02:32:01 -0500 (EST)
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011117181020.A3776@troglodyte.menefee>
References: <20011117112635.B3204@troglodyte.menefee>
	<1006028502.3180.0.camel@zelda>
	<20011117181020.A3776@troglodyte.menefee>
Message-ID: <20011118.023201.730548855.carmstro@twistedmatrix.com>

From: Kevin Turner <acapnotic at twistedmatrix.com>
Subject: Re: [Twisted-Python] Process Producer, Request Consumer
Date: Sat, 17 Nov 2001 18:10:20 -0800

> On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> > On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > > it seems like this should be at most two lines long:
> > > 1) create Process
> > > 2) designate the web Request as a consumer of the Process.
> >
> > [...] wrong. [...] you would be abandoning any further output to that
> > webpage; the Process would take over and close it.
> 
> Well, for the purposes of discussion, because I don't understand how to
> best use Process, let's say that's acceptable behavour.  It's okay if
> the request is considered finished as soon as the process is.  Now, how
> would I do it?
> 

Didn't we come to the conclusion on IRC? I think the idea was

class WebProcess(process.Process):
      def __init__(self, request):
          process.Process.__init__(self)
          self.request = request

      def handleChunk(self, data):
          self.request.write(data)

      def connectionLost(self):
          self.write("</body></html>")
          self.request.finish()
          process.Process.connectionLost(self)

and your .epy would look something like

request.write("<html><body>The output of command is:")
WebProcess(request) #you probably have to do something more than this.. 
                    #register it with the mainloop somehow?


Note that this code is guaranteed to be incomplete, but I think that's the
general idea.

--
<radix> I was drinking tea before this job
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Sun Nov 18 02:17:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 18 Nov 2001 03:17:26 -0600
Subject: [Twisted-Python] Process Producer, Request Consumer
In-Reply-To: <20011118.023201.730548855.carmstro@twistedmatrix.com>
References: <20011117112635.B3204@troglodyte.menefee>
	<1006028502.3180.0.camel@zelda> <20011117181020.A3776@troglodyte.menefee> 
	<20011118.023201.730548855.carmstro@twistedmatrix.com>
Message-ID: <1006075046.4411.0.camel@zelda>

On Sun, 2001-11-18 at 01:32, Chris Armstrong wrote:
> From: Kevin Turner <acapnotic at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Process Producer, Request Consumer
> Date: Sat, 17 Nov 2001 18:10:20 -0800
> 
> > On Sat, Nov 17, 2001 at 02:21:40PM -0600, Glyph Lefkowitz wrote:
> > > On Sat, 2001-11-17 at 13:26, Kevin Turner wrote:
> > > > it seems like this should be at most two lines long:
> > > > 1) create Process
> > > > 2) designate the web Request as a consumer of the Process.
> > >
> > > [...] wrong. [...] you would be abandoning any further output to that
> > > webpage; the Process would take over and close it.
> > 
> > Well, for the purposes of discussion, because I don't understand how to
> > best use Process, let's say that's acceptable behavour.  It's okay if
> > the request is considered finished as soon as the process is.  Now, how
> > would I do it?
> > 
> 
> Didn't we come to the conclusion on IRC? I think the idea was
> 

[the idea]

> and your .epy would look something like

[an epy]

> Note that this code is guaranteed to be incomplete, but I think that's the
> general idea.

That's some creative handwaving. :)

Unfortunately, you can't FORGET_IT from an epy, so this isn't possible. 
If you want to take a look at how a resource does it, take a look at
CGIScript in twisted.web.twcgi.

In my Copious Free Time, I will attempt to write widgets that do this
and database queries.  Others are invited to do so as well.  Don't use
.epy scripts in the future if you can avoid it though; I want to remove
them from the distribution sometime in the very near future.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/





From twisted at itamarst.org  Sun Nov 18 04:56:14 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Nov 2001 13:56:14 +0200
Subject: [Twisted-Python] Win32 select in internet.main
Message-ID: <3BF7A1DE.7080200@itamarst.org>

HappyFool pointed out on IRC that the fix for empty read and write lists in 
select.select on windows is only done for iterate(), not run(). Perhaps the 
following patch should be used?

Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.42
diff -c -r1.42 main.py
*** twisted/internet/main.py	2001/10/30 23:55:39	1.42
--- twisted/internet/main.py	2001/11/18 11:54:58
***************
*** 440,454 ****
           del writes[writer]

   if platform.getType() == 'win32':
!     """redefine iterate on WinXX to handle wierd error case when passing 
empty lists to select
       """
!     def iterate():
!         for delayed in delayeds:
!             delayed.runUntilCurrent()
!         if (not reads) and (not writes):
!             pass
           else:
!             doSelect(0)

   class _Win32Waker(styles.Ephemeral):
       """I am a workaround for the lack of pipes on win32.
--- 440,455 ----
           del writes[writer]

   if platform.getType() == 'win32':
!     """redefine select on WinXX to handle wierd error case when passing 
empty lists to select
       """
!     def _select(r, w, e, timeout=None, _realselect=select.select):
!         if (not r) and (not w):
!             return [], [], []
           else:
!             return _realselect(r, w, e, timeout)
!
!     select.select = _select
!

   class _Win32Waker(styles.Ephemeral):
       """I am a workaround for the lack of pipes on win32.





From twisted at itamarst.org  Sun Nov 18 11:08:02 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Nov 2001 20:08:02 +0200
Subject: [Twisted-Python] Possible patch to twisted.python.hook
Message-ID: <3BF7F902.3090701@itamarst.org>

The following patch makes post hook get the result of the hooked function. 
THis lets you do cool stuff like pre/post-conditions (like synchronization, 
they can be optional), but it is most likely rather slower than the current 
hook, which means synchronized classes will be slower.

I have a working implementation of pre/post conditions based on this, if 
anyone's interested.


*** hook.py	Sun Nov 18 20:02:59 2001
--- hook.py-new	Sun Nov 11 11:31:17 2001
***************
*** 48,55 ****
--- 48,58 ----
   none of the hooks raise an exception).  Hooks will be executed in the 
order in
   which they are added.

+ Pre-functions should have the signature (self, args, kwargs).
+ Post-functions should have the signature (success, result, self, args, 
kwargs).
   """

+
   # System Imports
   import string

***************
*** 99,114 ****
   hooked_func = """

   import %(module)s

   def %(name)s(*args, **kw):
       klazz = %(module)s.%(klass)s
       for preMethod in klazz.%(preName)s:
           apply(preMethod, args, kw)
       try:
!         return apply(klazz.%(originalName)s, args, kw)
!     finally:
!         for postMethod in klazz.%(postName)s:
!             apply(postMethod, args, kw)
   """

   _PRE = '__hook_pre_%s_%s_%s__'
--- 102,128 ----
   hooked_func = """

   import %(module)s
+ import sys

   def %(name)s(*args, **kw):
       klazz = %(module)s.%(klass)s
       for preMethod in klazz.%(preName)s:
           apply(preMethod, args, kw)
+
       try:
!         result = apply(klazz.%(originalName)s, args, kw)
!         success = 1
!     except:
!         success = 0
!         result = sys.last_value
!
!     for postMethod in klazz.%(postName)s:
!         apply(postMethod, (success, result) + args, kw)
!
!     if success:
!         return result
!     else:
!         raise result
   """

   _PRE = '__hook_pre_%s_%s_%s__'





From magnus.heino at pleon.sigma.se  Mon Nov 19 01:46:29 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 09:46:29 +0100
Subject: [Twisted-Python] Docs/Examples
Message-ID: <DDEJLBDHAHGLGENIHLFEAEPPCCAA.magnus.heino@pleon.sigma.se>

Hi.

Are there any documentation/examples/tutorials/applications that use twisted
available?

I can't find anything useful, except for browsing the source-code... is that
the way to go, or have I missed something?

/Magnus





From twisted at itamarst.org  Mon Nov 19 02:43:33 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Nov 2001 11:43:33 +0200
Subject: [Twisted-Python] Docs/Examples
References: <DDEJLBDHAHGLGENIHLFEAEPPCCAA.magnus.heino@pleon.sigma.se>
Message-ID: <3BF8D445.1080404@itamarst.org>

Magnus Heino wrote:

> Are there any documentation/examples/tutorials/applications that use twisted
> available?
> 
> I can't find anything useful, except for browsing the source-code... is that
> the way to go, or have I missed something?

1) There's a folder called doc/examples/

2) Some of the packages that come with twisted are actually applications 
based on the framework, e.g. twisted.mail, twisted.manhole and twisted.words.

Hopefully in the next few months we'll be seeing some actual written 
documentation and tutorials.





From magnus.heino at pleon.sigma.se  Mon Nov 19 06:11:23 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 14:11:23 +0100
Subject: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <3BF8D445.1080404@itamarst.org>
Message-ID: <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>

> 2) Some of the packages that come with twisted are actually applications 
> based on the framework, e.g. twisted.mail, twisted.manhole and 
> twisted.words.
> 
> Hopefully in the next few months we'll be seeing some actual written 
> documentation and tutorials.

There are no open source applications using it today that are available?

Anything but browsing the source-code is a speedup in learing time imho :)

/Magnus




From carmstro at twistedmatrix.com  Mon Nov 19 06:37:11 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 19 Nov 2001 07:37:11 -0600
Subject: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>; from magnus.heino@pleon.sigma.se on Mon, Nov 19, 2001 at 02:11:23PM +0100
References: <3BF8D445.1080404@itamarst.org> <DDEJLBDHAHGLGENIHLFEOEAECDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011119073711.A6857@twistedmatrix.com>

On Mon, Nov 19, 2001 at 02:11:23PM +0100, Magnus Heino wrote:
> 
> > 2) Some of the packages that come with twisted are actually applications 
> > based on the framework, e.g. twisted.mail, twisted.manhole and 
> > twisted.words.
> > 
> > Hopefully in the next few months we'll be seeing some actual written 
> > documentation and tutorials.
> 
> There are no open source applications using it today that are available?

Those _are_ Open Source applications that are using it today. :-)
There also some 3rd parties using Twisted. The one that jumps to mind
right away is Tommi Vertanen's (I'm guessing at the spelling there)
"mc-foo", an mp3 organizer/player/something-or-other. http://mc-foo.sf.net/.
He hasn't made a release of the python version yet, so you'll have to 
get his CVS version to see it. But anyway, doc/examples/ and friends
should be great for figuring things out. Also, you might want to drop
by on #python at irc.openprojects.net; a lot of the developers/users hang
out there.





From magnus.heino at pleon.sigma.se  Mon Nov 19 06:49:00 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 14:49:00 +0100
Subject: SV: SV: [Twisted-Python] Docs/Examples
In-Reply-To: <20011119073711.A6857@twistedmatrix.com>
Message-ID: <DDEJLBDHAHGLGENIHLFEAEAGCDAA.magnus.heino@pleon.sigma.se>

> > There are no open source applications using it today that are available?
>
> Those _are_ Open Source applications that are using it today. :-)
> There also some 3rd parties using Twisted. The one that jumps to mind
> right away is Tommi Vertanen's (I'm guessing at the spelling there)
> "mc-foo", an mp3 organizer/player/something-or-other.
> http://mc-foo.sf.net/.

Ok, I'll take a look at it.

> get his CVS version to see it. But anyway, doc/examples/ and friends
> should be great for figuring things out. Also, you might want to drop

Well, I find them a bit too basic. There seems to be a lot of useful things
in twisted.web for example, but no examples of how to use it.

> by on #python at irc.openprojects.net; a lot of the developers/users hang
> out there.

Just found my way there, thanks.

/Magnus





From tv at twistedmatrix.com  Mon Nov 19 09:32:06 2001
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 19 Nov 2001 18:32:06 +0200
Subject: [Twisted-Python] ONJava.com: Atomic File Transactions, Part 1 [Nov. 07, 2001]
In-Reply-To: <3BF50E3D.8020406@itamarst.org>
References: <3BF50E3D.8020406@itamarst.org>
Message-ID: <87n11id8mx.fsf@ki.yok.utu.fi>

Itamar Shtull-Trauring <lists at itamarst.org> writes:

> This would be very useful to have in Twisted (e.g. we could have a
> transactional dirdbm):
>
> <http://www.onjava.com/pub/a/onjava/2001/11/07/atomic.html>

	If someone in the audience does start on a Python reimplementation,
        for heavens sakes talk to an FS hacker before you start. The author
        of this article has either very little clue, or a _very_ weird view
        of the world. Hint: he lets others see changes, as they happen, and
        dares to name the library atomic.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}





From magnus.heino at pleon.sigma.se  Mon Nov 19 00:56:57 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Mon, 19 Nov 2001 08:56:57 +0100
Subject: [Twisted-Python] Docs/Examples
Message-ID: <DDEJLBDHAHGLGENIHLFEAEPOCCAA.magnus.heino@pleon.sigma.se>

Hi.

Are there any documentation/examples/tutorials/applications that use twisted
available?

I can't find anything useful, except for browsing the source-code... is that
the way to go, or have I missed something?

/Magnus






From magnus.heino at pleon.sigma.se  Tue Nov 20 01:28:30 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Tue, 20 Nov 2001 09:28:30 +0100
Subject: [Twisted-Python] Sites, protocols etc.
Message-ID: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>

Hi.

I've got a basic app using widgets up'n'running. Still, it would be nice
with an example of how it is meant to be used. Surely someone must have
anything? Doesn't even have to work... I just want to know that I'm doing
things The Right Way.

Next question: Can I serve both xmlrpc and http from the same
application/site? I guess I can, but I havent figured out how...

Thanks,

/Magnus





From magnus.heino at pleon.sigma.se  Tue Nov 20 02:36:17 2001
From: magnus.heino at pleon.sigma.se (Magnus Heino)
Date: Tue, 20 Nov 2001 10:36:17 +0100
Subject: [Twisted-Python] More on XMLRPC
Message-ID: <DDEJLBDHAHGLGENIHLFEIECCCDAA.magnus.heino@pleon.sigma.se>

Hi.

I just want to make sure that my conclusions are right:

If I create an application using widgets, resource.Resource.getChild is used
to traverse the URL to find the callable object. This traverse will always
take place if resource.Resource.isLeaf is set to 0.

The server.Request.process will then assume that we want to return html, and
call render() on the object. After processing all childs, the page will be
returned to the browser.


The xmlrpc-implementation in xmlrpc.XMLRPC sets isLeaf to 1, which means
that that the url wont be traversed, the only thing you can do is to use the
_getFunction and traverse to the function manually, and return it. The
useage of _getFunction is provided by overriding render. This means that you
can't use anything in guard.ResourceGuard to protect your resources.

Override isLeaf in the xmlrpc-class, and the url traversal wil take place,
but server.Request isn't aware of anything but html, which means that it
returns html to xmlrpc, which is not what we want. Not good at all... or am
I wrong?

Seems as if widgets and guards are only usable if you always, always only
want to return html?

/Magnus





From twisted at itamarst.org  Wed Nov 21 02:25:04 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Nov 2001 11:25:04 +0200
Subject: [Twisted-Python] More on XMLRPC
References: <DDEJLBDHAHGLGENIHLFEIECCCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <3BFB72F0.7060105@itamarst.org>

Magnus Heino wrote:


> The xmlrpc-implementation in xmlrpc.XMLRPC sets isLeaf to 1, which means
> that that the url wont be traversed, the only thing you can do is to use the
> _getFunction and traverse to the function manually, and return it. The
> useage of _getFunction is provided by overriding render. This means that you
> can't use anything in guard.ResourceGuard to protect your resources.
> 
> Override isLeaf in the xmlrpc-class, and the url traversal wil take place,
> but server.Request isn't aware of anything but html, which means that it
> returns html to xmlrpc, which is not what we want. Not good at all... or am
> I wrong?
> 

You don't have to use twisted.web.xmlrpc if you don't want to - you can 
create your own class that does whatever you want. If you read the XML-RPC 
spec however you'll see that XML-RPC method path is *not* related to the 
URL, so you'll just end up doing the same thing I did. Please read the docs, 
everything will be clearer:

	http://www.xmlrpc.com/spec






From twisted at itamarst.org  Wed Nov 21 07:51:51 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Nov 2001 16:51:51 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com>
Message-ID: <3BFBBF87.3080100@itamarst.org>

Itamar Shtull-Trauring wrote:

> Update of /cvs/Twisted/twisted/internet
> In directory zaibach:/tmp/cvs-serv28575
> 
> Added Files:
> 	poll.py 
> Log Message:
> preliminary poll()-based event loop
> 


What I learned - the addReader/addWriter/etc. API is far too select() 
oriented. Every other alternative (poll, kqeue, windows event thing) works 
by registering and unregistering objects - correct me if I'm wrong.

So instead of having to emulate a select()-like API, we need a select() 
wrapper that acts like poll(). In other words, addReader and friends must go 
when we refactor the event loop code.








From glyph at twistedmatrix.com  Wed Nov 21 17:34:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Nov 2001 18:34:26 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
In-Reply-To: <3BFBBF87.3080100@itamarst.org>; from twisted@itamarst.org on Wed, Nov 21, 2001 at 04:51:51PM +0200
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org>
Message-ID: <20011121183425.A10937@twistedmatrix.com>

On Wed, Nov 21, 2001 at 04:51:51PM +0200, Itamar Shtull-Trauring wrote:
> 
> What I learned - the addReader/addWriter/etc. API is far too select() 
> oriented. Every other alternative (poll, kqeue, windows event thing) works 
> by registering and unregistering objects - correct me if I'm wrong.
> 
> So instead of having to emulate a select()-like API, we need a select() 
> wrapper that acts like poll(). In other words, addReader and friends must go 
> when we refactor the event loop code.

I'm confused.  In what way is "adding/removing a reader/writer" not
"registering/unregistering an object"?

In fact, I chose that API specifically because I didn't think it was like
select().

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From twisted at itamarst.org  Thu Nov 22 02:50:56 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Nov 2001 11:50:56 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com>
Message-ID: <3BFCCA80.4040801@itamarst.org>

Glyph Lefkowitz wrote:


> I'm confused.  In what way is "adding/removing a reader/writer" not
> "registering/unregistering an object"?
> 
> In fact, I chose that API specifically because I didn't think it was like
> select().

Well, in poll() you don't register writing and reading separately - you have 
to register for them together (bu actually the limitation is in the Python 
API, not the C API). Further research shows that the current API might match 
other systems, so I was probably wrong about that.





From twisted at itamarst.org  Thu Nov 22 06:27:20 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Nov 2001 15:27:20 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com>
Message-ID: <3BFCFD38.7010904@itamarst.org>

Glyph Lefkowitz wrote:


 > I'm confused.  In what way is "adding/removing a reader/writer" not
"registering/unregistering
 > an object"?

Here's one issue - removeWriter is called every time the buffer is epmtied
out. In the lifetime of a connection, the transport keeps on adding and
removing, adding and removing itself as a writer because of this. In
select() this isn't an issue, but in poll() it is, since removing and adding
the writer is an expensive operation (in fact it adds a %33 overhead, in
tests under high loads).

I'll see what I can do to fix the poll()-based implementation, but meanwhile
the select event loop is much faster under high loads.





From glyph at twistedmatrix.com  Thu Nov 22 20:33:52 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Nov 2001 21:33:52 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <E166mjG-0005G3-00@zaibach.twistedmatrix.com>; from acapnotic@twistedmatrix.com on Wed, Nov 21, 2001 at 11:48:54PM -0600
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com>
Message-ID: <20011122213352.A28166@twistedmatrix.com>

On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> protocols/irc.py: An exception in the server isn't a reason to drop the
> client, right?

IMHO, it is.  If the protocol isn't specifically designed to deal with
exceptions (For example, dynamic web content or PB protocol exceptions) then
it's undefined behavior and the connection should be dropped.  Bot behavior
should be implemented in a layer above the IRC protocol, if there is a place
for a catch-all exception handler.

I won't revert this change because I'm not living in that part of the code
right now, but Kevin, I suggest you consider it.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From glyph at twistedmatrix.com  Thu Nov 22 20:39:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 22 Nov 2001 21:39:50 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
In-Reply-To: <3BFCFD38.7010904@itamarst.org>; from twisted@itamarst.org on Thu, Nov 22, 2001 at 03:27:20PM +0200
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com> <3BFCFD38.7010904@itamarst.org>
Message-ID: <20011122213950.B28166@twistedmatrix.com>

On Thu, Nov 22, 2001 at 03:27:20PM +0200, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > I'm confused.  In what way is "adding/removing a reader/writer" not
> > "registering/unregistering an object"?
> 
> Here's one issue - removeWriter is called every time the buffer is epmtied
> out. In the lifetime of a connection, the transport keeps on adding and
> removing, adding and removing itself as a writer because of this. In
> select() this isn't an issue, but in poll() it is, since removing and adding
> the writer is an expensive operation (in fact it adds a %33 overhead, in
> tests under high loads).
> 
> I'll see what I can do to fix the poll()-based implementation, but meanwhile
> the select event loop is much faster under high loads.

What I don't understand is that frequently, in an implementation where there is
no distinction between registering for reads and registering for writes, you
won't care if a socket is writable, only if it's readable.  What does the
higher-level implementation do then?  Just early-out of the callback if the
connection isn't "really" registerd for writes?

Even though I am not sure I understand the problem :), perhaps the right answer
to this question, since the common case is that all data can be written at
once, is that the write should happen immediately, only being added to the
select/poll loop if the write would block.  This would probably add a little
complexity to the code but save a bunch of performance on small-write heavy
protocols.

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/




From carmstro at twistedmatrix.com  Thu Nov 22 21:10:23 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 22 Nov 2001 23:10:23 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] CVS:
	Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <20011122213352.A28166@twistedmatrix.com>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> 
	<20011122213352.A28166@twistedmatrix.com>
Message-ID: <1006488624.11630.0.camel@Fookidla.org>

On Thu, 2001-11-22 at 22:33, Glyph Lefkowitz wrote:
> On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> > protocols/irc.py: An exception in the server isn't a reason to drop the
> > client, right?
> 
> IMHO, it is.  If the protocol isn't specifically designed to deal with
> exceptions (For example, dynamic web content or PB protocol exceptions) then
> it's undefined behavior and the connection should be dropped.  Bot behavior
> should be implemented in a layer above the IRC protocol, if there is a place
> for a catch-all exception handler.
> 
> I won't revert this change because I'm not living in that part of the code
> right now, but Kevin, I suggest you consider it.

You know that it wasn't the bot that was getting disconnected, but other
users in the channel? I'm not sure of the technical details behind this,
but it does seem odd that other people should get disconnected for stuff
that the bot is doing.

-- 
<bitPoet> all of twisted is probably like 3 lines of apl
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From acapnotic at twistedmatrix.com  Fri Nov 23 00:40:07 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 22 Nov 2001 23:40:07 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/protocols irc.py,1.24,1.25
In-Reply-To: <20011122213352.A28166@twistedmatrix.com>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> <20011122213352.A28166@twistedmatrix.com>
Message-ID: <20011122234007.A2865@troglodyte.menefee>

On Thu, Nov 22, 2001 at 09:33:52PM -0600, Glyph Lefkowitz wrote:
> On Wed, Nov 21, 2001 at 11:48:54PM -0600, Kevin Turner wrote:
> > protocols/irc.py: An exception in the server isn't a reason to drop the
> > client, right?
> 
> IMHO, it is.  If the protocol isn't specifically designed to deal with
> exceptions (For example, dynamic web content or PB protocol exceptions) then
> it's undefined behavior and the connection should be dropped.
> Bot behavior should be implemented in a layer above the IRC protocol,
> if there is a place for a catch-all exception handler.

Thanks for the comments.  There's an encapsulation problem highligthed
here, let me see if I can un-mire my head from the turkey gravy well
enough to explain it.  This probably won't flow as well as it should,
but hopefully I'll get all the pieces written down here.

That change was to protocols.irc.IRC.dataReceived(), irc.IRC being the
server-oriented side of the IRC client/server protocol.  The 'try' block
I added surrounds the call to the dispatch method.  By this point, the
data received has already been parsed as an IRC command.  If anything
goes wrong after this, I wouldn't consider it to be an error in the
client/server IRC protocol (or protocol.irc.IRC), but rather an error in
the application (substitue a more specific word if you can find one)
that's on the receiving end of that protocol.

I should explain here what triggered this patch:

Setting: 
  twisted.words, with a words.ircservice server as it comes with by default.  
  The ircservice is in the same process as the words service.
  I've also added a tendril to the service, also in the same process.

1) radix logs on to the irc service.  On the server side, he's
represented by a words.ircservice.IRCChatter, a subclass of the irc.IRC
server protocol.

2) radix says "hi".  This triggers Protocol.dataReceived, which
dispatches the message to IRCChatter.irc_PRIVMSG.

3) IRCChatter.irc_PRIVMSG invokes the groupMessage of its correspoding
Participant (Perspective) instance.

4) Participant invokes the sendMessage method of one of the service's
Groups.

5) The Group, in turn, calls receiveGroupMessage on its subscribing
Participants.

6) One of the subscribing Participants is Tendril's.
Tendril-Participant invokes receiveGroupMessage on its client, a
TendrilClient implementing the WordsClientInterface.

7) Oops -- I screwed up.  TendrilClient.receiveGroupMessage raises an
exception.
The exception is passed to Tendril's participant, letting it know that
its client didn't get this OK.
The Tendril participant lets the exception pass on to the Group, letting
the Group know that sending the message to this participant has failed.
The Group lets the exception through to radix's Participant, letting him
know that something went wrong while performing the action he ordered.
His Participant lets the exception pass back to IRCChatter.irc_PRIVMSG,
as the command failed.
Since IRCChatter.irc_PRIVMSG had an error carrying out the command, the
exception goes back to its caller...
the IRCChatter(IRC(Protocol)).dataReceived method.
So an error occoured when calling Protocol.dataReceived, the receiving
method for radix's-irc-client's-tcp-connection-selectable,
When internet.main.doSelect finds out, it busts the selectable, and
kills the TCP connection to radix's IRC client.

Clearly, the wrong guy took the fall for this one.  So what *should*
have happened?

First note that there are some irregularites in this process which are
contrary to what a PB service (e.g. Words) assumes.  Normally, the
relation between Perspective and its client is a remote one, 'client'
being the referenceable that the perspective has .attached().  But here
the clients on both ends, tendril.TendrilClient and
ircservice.IRCChatter, are local references.

When you start out with event-based programming, you get bit when you
assume a call is synchronous when it's not.  When you've worked with
Twisted too long, you get bit when you assume an action is asynchronous
and it turns out to be synchronous.

Both steps 3 and 6 "should" have happened asynchronously.  Since
asynchronous calls "don't really happen now", your program works on the
assumption that it is going to carry on normal operations, leaving any
worries about what may or may not have happened "over there" until
later.  Here, that assumption was violated.


Stopping here feels unfinished, but I've got to go digest some more.

*belch*ing-ly yours,

 - Kevin

-- 
The moon is first quarter, 50.2% illuminated, 7.4 days old.




From acapnotic at twistedmatrix.com  Fri Nov 23 12:17:59 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 23 Nov 2001 11:17:59 -0800
Subject: [Twisted-Python] pyff
In-Reply-To: <20011122234007.A2865@troglodyte.menefee>
References: <E166mjG-0005G3-00@zaibach.twistedmatrix.com> <20011122213352.A28166@twistedmatrix.com> <20011122234007.A2865@troglodyte.menefee>
Message-ID: <20011123111759.B3696@troglodyte.menefee>

On Thu, Nov 22, 2001 at 11:40:07PM -0800, Kevin Turner wrote:
> That change was to protocols.irc.IRC.dataReceived(), irc.IRC being the

I forgot to mention.  For commit-messages, I'd love to be using a
Python-aware human-readable diff program, so that it would clearly show
what class/method/else/etc block the changes were in.  Throw that on the
wishlist/todo heap someplace.  Unless it's already been written?





From m at moshez.org  Wed Nov 21 01:31:26 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 21 Nov 2001 10:31:26 +0200 (IST)
Subject: [Twisted-Python] Sites, protocols etc.
In-Reply-To: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
References: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011121083126.B960C395F@darjeeling>

On Tue, 20 Nov 2001, "Magnus Heino" <magnus.heino at pleon.sigma.se> wrote:

> Next question: Can I serve both xmlrpc and http from the same
> application/site? I guess I can, but I havent figured out how...

On the same port or not?
If you don't need it on the same port, have a look at mktap --append 
-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ





From z3p at twistedmatrix.com  Wed Nov 21 13:08:04 2001
From: z3p at twistedmatrix.com (z3p)
Date: Wed, 21 Nov 2001 14:08:04 -0600
Subject: [Twisted-Python] Sites, protocols etc.
In-Reply-To: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>; from magnus.heino@pleon.sigma.se on Tue, Nov 20, 2001 at 09:28:30AM +0100
References: <DDEJLBDHAHGLGENIHLFEMECBCDAA.magnus.heino@pleon.sigma.se>
Message-ID: <20011121140804.F31678@twistedmatrix.com>

I moved my site to widgets a while ago, but it seems to work just fine, and could used as an example.  Check out the code at http://www.twistedmatrix.com/users/z3p.twistd/files/z3pSite.tar.gz
-p

--
       Paul Swartz
(o_    http://www.z3p.f2s.com/ _o)
//\    z3p at twistedmatrix.co    /\\
V_/_   AIM: z3penguin         _\_V->

Key ID: 0xBDD9A668
GPG Print: 353A 4103 FFDD A6A2 85CE  06D5 6F48 D823 BDD9 A668





From carmstro at twistedmatrix.com  Fri Nov 23 14:55:20 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 16:55:20 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
Message-ID: <1006552522.13340.1.camel@Fookidla.org>

Ok, riddle me this, glyph (or anyone else who knows about this). Why do
we need Deferreds to be a special-case in WebWidgets? Why can't _all_
widgets be displayed only right when they're needed? RenderSession could
just take a Widget, and display() it (and the widgets that display()
returns) in order.. Is there some sort of performance issue here, maybe?

Maybe I'll try implementing this, and send a patch to be looked at.
-- 
<TomG> I'm in the wrong channel.
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From carmstro at twistedmatrix.com  Fri Nov 23 17:05:19 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 19:05:19 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
In-Reply-To: <1006552522.13340.1.camel@Fookidla.org>
References: <1006552522.13340.1.camel@Fookidla.org>
Message-ID: <1006560325.13339.6.camel@Fookidla.org>

On Fri, 2001-11-23 at 16:55, Chris Armstrong wrote:
> Ok, riddle me this, glyph (or anyone else who knows about this). Why do
> we need Deferreds to be a special-case in WebWidgets? Why can't _all_
> widgets be displayed only right when they're needed? RenderSession could
> just take a Widget, and display() it (and the widgets that display()
> returns) in order.. Is there some sort of performance issue here, maybe?
> 
> Maybe I'll try implementing this, and send a patch to be looked at.

Well, I've spent some time trying to implement this, but I'm having some
problems. Here's a patch. Notice the 'renderSession' (now-module-level)
function and the flatWrite function. flatWrite is the _only_ place where
display() is called now, and the data is written as soon as it comes to
it. There is a problem, however, with a small test I did. I made a
widget that returned a list of 3 widgets: widgets.Time(), SleepWidget(),
widgets.Time(). The only thing SleepWidget has is a display() method
that sleeps for 2 seconds and returns [], to simulate blocking. I try to
render this widget with the new system, but I don't get any content
until the entire request is finished. I put in some log messages to say
exactly when the writes are happening, and the first widgets.Time() is
definitely being written to the request before the SleepWidget is being
displayed, but i still don't see anything until the entire request is
done. 

*sigh*, I'm sure that I'm completely off-track here. Why do I always try
to rewrite everything I come across that I don't understand? (remember
explorer, Kevin?) :P

-- 
<dash> the program isn't debugged until the last user is dead
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/
-------------- next part --------------
--- widgets.py	Fri Nov 23 18:57:22 2001
+++ widgets-new.py	Fri Nov 23 18:56:43 2001
@@ -90,15 +90,7 @@
                     traceback.print_exc(file = io)
                     tm.append(html.PRE(io.getvalue()))
                 else:
-                    if isinstance(x, types.ListType):
-                        tm.extend(x)
-                    elif isinstance(x, Widget):
-                        val = x.display(request)
-                        tm.extend(val)
-                    else:
-                        # Only two allowed types here should be deferred and
-                        # string.
-                        tm.append(x)
+                    tm.append(x)
         return tm
 
 
@@ -209,14 +201,6 @@
     def display(self, request):
         return [self.text]
 
-class TextDeferred(Widget):
-    def __init__(self, text):
-        self.text = text
-
-    def display(self, request):
-        d = defer.Deferred()
-        d.callback([self.text])
-        return [d]
 
 class Time(Widget):
     def display(self, request):
@@ -229,106 +213,26 @@
     def display(self, request):
         value = []
         for widget in self.widgets:
-            d = widget.display(request)
-            value.extend(d)
+            value.extend(widget)
         return value
 
-class _RequestDeferral:
-    def __init__(self):
-        self.deferred = defer.Deferred()
-        self.io = StringIO()
-        self.write = self.io.write
-
-    def finish(self):
-        self.deferred.callback([self.io.getvalue()])
-
-def possiblyDeferWidget(widget, request):
-    # web in my head get it out get it out
-    try:
-        disp = widget.display(request)
-        # if this widget wants to defer anything -- well, I guess we've got to
-        # defer it.
-        for elem in disp:
-            if isinstance(elem, defer.Deferred):
-                req = _RequestDeferral()
-                RenderSession(disp, req)
-                return req.deferred
-        return string.join(disp, '')
-    except:
-        io = StringIO()
-        traceback.print_exc(file=io)
-        return html.PRE(io.getvalue())
-
-class RenderSession:
-    def __init__(self, lst, request):
-        self.lst = lst
-        self.request = request
-        self.position = 0
-        self.needsHeaders = 0
-        pos = 0
-        toArm = []
-        # You might want to set a header from a deferred, in which case you
-        # have to set an attribute -- needsHeader.
-        for item in lst:
-            if isinstance(item, defer.Deferred):
-                self._addDeferred(item, pos)
-                toArm.append(item)
-            pos = pos + 1
-        self.keepRendering()
-        # print "RENDER: DONE WITH INITIAL PASS"
-        for item in toArm:
-            item.arm()
-
-    def _addDeferred(self, deferred, position):
-        if hasattr(deferred, 'needsHeader'):
-            self.needsHeaders = self.needsHeaders + 1
-            args = (position, 1)
-        else:
-            args = (position, 0)
-        deferred.addCallbacks(self.callback, self.callback,
-                              callbackArgs=args, errbackArgs=args)
-
-    def callback(self, result, position, decNeedsHeaders):
-        if result != FORGET_IT:
-            self.needsHeaders = self.needsHeaders - decNeedsHeaders
-        else:
-            result = [FORGET_IT]
-        for i in xrange(len(result)):
-            if isinstance(result[i], defer.Deferred):
-                self._addDeferred(result[i], position+i)
-        # print 'CALLBACK:',self.lst, position, result
-        if not isinstance(result, types.ListType):
-            result = [result]
-        self.lst[position:position+1] = result
-        assert self.position <= position
-        self.keepRendering()
-        for r in result:
-            if isinstance(r, defer.Deferred):
-                r.arm()
-
-
-    def keepRendering(self):
-        if self.needsHeaders:
-            # short circuit actual rendering process until we're sure no more
-            # deferreds need to set headers...
-            return
-        assert self.lst is not None, "This shouldn't happen."
-        while 1:
-            item = self.lst[self.position]
-            if self.position == 0 and item == FORGET_IT:
-                # If I haven't moved yet, and the widget wants to take over the page, let it do so!
-                return
-            if isinstance(item, types.StringType):
-                self.request.write(item)
-            elif isinstance(item, defer.Deferred):
-                return
-            else:
-                self.request.write("RENDERING UNKNOWN: %s" % html.PRE(repr(item)))
-            self.position = self.position + 1
-            if self.position == len(self.lst):
-                self.lst = None
-                self.request.finish()
-                return
+
+def flatWrite(widget, request):
+    val = widget.display(request)
+    if not type(val) == types.ListType:
+        raise TypeError("display() needs to return a list.")
+    for elem in val:
+        if type(elem) == types.StringType:
+            print "writing to the request"
+            request.write(elem)
+        elif isinstance(elem, Widget):
+            flatWrite(elem, request)
+            
+def renderSession(widget, request):
+    flatWrite(widget, request)
+    request.finish()
+
+
 
 
 class WidgetResource(resource.Resource):
@@ -336,7 +240,7 @@
         self.widget = widget
 
     def render(self, request):
-        RenderSession(self.widget.display(request), request)
+        renderSession(self.widget, request)
         return NOT_DONE_YET
 
 
@@ -347,8 +251,7 @@
         Presentation.__init__(self)
 
     def render(self, request):
-        displayed = self.display(request)
-        RenderSession(displayed, request)
+        renderSession(self, request)
         return NOT_DONE_YET
 
 
@@ -404,10 +307,6 @@
         if hasattr(widget, 'stylesheet'):
             self.stylesheet = widget.stylesheet
 
-    def render(self, request):
-        displayed = self.display(request)
-        RenderSession(displayed, request)
-        return NOT_DONE_YET
 
 class Gadget(resource.Resource):
     page = WidgetPage
@@ -437,6 +336,8 @@
         return self.widgets.get(path)
 
     def getChild(self, path, request):
+        #if this Gadget is also a Widget, then render the Widget part of me if the "index"
+        #is requested.
         if path == '':
             # ZOOP!
             if isinstance(self, Widget):

From carmstro at twistedmatrix.com  Fri Nov 23 20:29:47 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 23 Nov 2001 22:29:47 -0500
Subject: [Twisted-Python] WebWidgets and Deferreds.
In-Reply-To: <1006560325.13339.6.camel@Fookidla.org>
References: <1006552522.13340.1.camel@Fookidla.org> 
	<1006560325.13339.6.camel@Fookidla.org>
Message-ID: <1006572589.14798.0.camel@Fookidla.org>

On Fri, 2001-11-23 at 19:05, Chris Armstrong wrote:
> On Fri, 2001-11-23 at 16:55, Chris Armstrong wrote:
> > Maybe I'll try implementing this, and send a patch to be looked at.
> 
> *sigh*, I'm sure that I'm completely off-track here. Why do I always try
> to rewrite everything I come across that I don't understand? (remember
> explorer, Kevin?) :P

Guess what! I was right! I was completely wrong about the point of
Deferreds! hooray! :-P

So, it seems that the point of Deferreds-in-WebWidgets wasn't just to
"process immediately before writing", but to _let the rest of the
twisted mainloop run while waiting for a Deferred execution_. Blech.
*dorkus*.

Nonetheless, that big huge refactoring is still useful. A lot of code
(not even including the Deferred-support i got rid of) has been shwacked
and replaced by a much simpler system. Now it's time to rewrite the
Deferred code from scratch on top of my new refactorings.

*Dives into Deferred*
-- 
<radix> yosomono: One of these days, I'm going to actually see what you
do
<Yosomono> radix: You will turn to stone almost immediately
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From acapnotic at twistedmatrix.com  Fri Nov 23 23:01:12 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 23 Nov 2001 22:01:12 -0800
Subject: [Twisted-Python] cursors
Message-ID: <20011123220112.A4992@troglodyte.menefee>

Someone, either Glyph or Tommi, mentioned that they wanted cursors a
while back.  "What's that," I asked; then thought "hm.  I could do
that."  But I didn't.  Only, now I did.  I think.

-- 
The moon is waxing gibbous, 58.9% illuminated, 8.2 days old.
-------------- next part --------------
# -*- Python -*-
# Kevin Turner <acapnotic at foobox.net>, November 23, 2001
# This code is in the Public Domain.

from UserList import UserList
import types

class CursoredList(UserList):
    _cursorlist = None

    def __init__(self, seq=None):
        UserList.__init__(self, seq)

    def setCursor(self):
        if self._cursorlist is None:
            self._cursorlist = []

        self._cursorlist[:] = range(len(self.data))
        self._cursorLen = len(self.data)

    def cursor(self, key):
        if self._cursorlist is None:
            return self.__getitem__(key)

        if isinstance(key, types.SliceType):
            start, stop, step = key.start, key.stop, key.step
            if not step:
                step = 1
            if start is None:
                start = 0
            elif start < 0:
                start = self._cursorLen + start

            if (stop is None) or (stop > self._cursorLen):
                stop = self._cursorLen
            elif stop < 0:
                start = self._cursorLen + stop

            result = []
            for i in xrange(start, stop, step):
                result.append(self.cursor(i))
            return result

        else:
            key = int(key)
            if key < 0:
                key = self._cursorLen + key
            assert(0 <= key < self._cursorLen)

            new_key = self._cursorlist.index(key)

            return self.__getitem__(new_key)

    def __setitem__(self, key, value):
        if (self._cursorlist is not None) \
           and isinstance(key, types.SliceType):

            self._cursorlist[key.start:key.stop] = [None] * len(value)

        if isinstance(key, types.SliceType):
            self.data[key.start:key.stop] = value
        else:
            self.data[key] = value

    def __getitem__(self, key):
        if isinstance(key, types.SliceType):
            return self.data[key.start:key.stop]
        else:
            return self.data[key]

    def __delitem__(self, key):
        if not isinstance(key, types.SliceType):
            key = slice(key, key+1)

        self.__setitem__(key, [])

    def __getslice__(self, start, stop):
        return self.__getitem__(slice(start, stop))

    def __setslice__(self, start, stop, value):
        return self.__setitem__(slice(start, stop), value)

    def __delslice__(self, start, stop):
        return self.__delitem__(slice(start, stop))

    def __iadd__(self, other):
        self.extend(other)
        return self

    def __imul__(self, multiplier):
        if self._cursorlist is not None:
            self._cursorlist.extend(([None] * len(self.data))
                                    * (multiplier-1))
        self.data[:] = self.data * multiplier

    def append(self, item):
        self[len(self):len(self)] = [item]

    def insert(self, i, item):
        self[i:i] = [item]

    def pop(self, i=-1):
        value = self[i]
        del self[i]
        return value

    def remove(self, item):
        i = self.index(item)
        del self[i]

    def reverse(self):
        self.data.reverse()
        if self._cursorlist is not None:
            self._cursorlist.reverse()

    def sort(self, cmpfunc=None):
        if self._cursorlist is not None:
            zipped = map(None, self.data, self._cursorlist)
            if cmpfunc:
                # The supplied cmpfunc won't be expecting the zipped list.
                cmpfunc_ = lambda x, y, c=cmpfunc: c(x[0], y[0])
                zipped.sort(cmpfunc_)
            else:
                zipped.sort()
            for i in range(len(zipped)):
                self.data[i], self._cursorlist[i] = zipped[i]
        else:
            self.data.sort()

    def extend(self, other):
        self[len(self):len(self)] = other

From tv at twistedmatrix.com  Sat Nov 24 06:10:08 2001
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 24 Nov 2001 15:10:08 +0200
Subject: [Twisted-Python] cursors
In-Reply-To: <20011123220112.A4992@troglodyte.menefee>
References: <20011123220112.A4992@troglodyte.menefee>
Message-ID: <871yiomi1b.fsf@ki.yok.utu.fi>

Kevin Turner <acapnotic at twistedmatrix.com> writes:

> Someone, either Glyph or Tommi, mentioned that they wanted cursors a
> while back.  "What's that," I asked; then thought "hm.  I could do
> that."  But I didn't.  Only, now I did.  I think.

	The idea was to replace the web.widget Deferreds bookkeeping
	with such a construct. Currently, all widgets to be output
	know their position in the list, and when a Deferred returns
	[deferred2, "foo", deferred3], and later deferred2 return
	["bar", "baz"], deferred3's index is wrong.

	If instead of indexes, the Deferreds had cursors, that
        changed as the list modified, they'd survive.

        Of course, an even bigger rewrite of web.widgets and
        Deferred processing may be wanted.

	Sadly, I have no time to hack on that..

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}





From carmstro at twistedmatrix.com  Sat Nov 24 12:56:10 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 24 Nov 2001 14:56:10 -0500
Subject: [Twisted-Python] cursors
In-Reply-To: <871yiomi1b.fsf@ki.yok.utu.fi>
References: <20011123220112.A4992@troglodyte.menefee> 
	<871yiomi1b.fsf@ki.yok.utu.fi>
Message-ID: <1006631772.16724.0.camel@Fookidla.org>

On Sat, 2001-11-24 at 08:10, Tommi Virtanen wrote:
> Kevin Turner <acapnotic at twistedmatrix.com> writes:
> 
> > Someone, either Glyph or Tommi, mentioned that they wanted cursors a
> > while back.  "What's that," I asked; then thought "hm.  I could do
> > that."  But I didn't.  Only, now I did.  I think.
> 
> 	The idea was to replace the web.widget Deferreds bookkeeping
> 	with such a construct. Currently, all widgets to be output
> 	know their position in the list, and when a Deferred returns
> 	[deferred2, "foo", deferred3], and later deferred2 return
> 	["bar", "baz"], deferred3's index is wrong.
> 
> 	If instead of indexes, the Deferreds had cursors, that
>         changed as the list modified, they'd survive.
> 
>         Of course, an even bigger rewrite of web.widgets and
>         Deferred processing may be wanted.
> 
> 	Sadly, I have no time to hack on that..

That's what I'm working on right now (see my last 3 rants on the list).
I could use a bit of advice, I think, though. Maybe I'll catch you on
IRC soon.

So far I've refactored all normal non-deferred stuff, and I'm taking a
fresh look at implementing Deferreds in widgets. Right now I'm *trying*
to figure out a clever way to allow deferreds to not need to worry about
position -- but I'm just now starting to figure something out. I'll talk
to you some time.
 
-- 
<spiv> NeuroMorphus: That's not really meaningful, though.
<NeuroMorphus> spiv: it's not a matter of meaning, it's an assignment
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Wed Nov 28 10:11:37 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Wed, 28 Nov 2001 12:11:37 -0500 (EST)
Subject: [Twisted-Python] Intro and "Slash- or Squishdot-style stuff?"
Message-ID: <1006967497.3c051ac9b9919@webmail.hampshire.edu>

Hello, everyone.  <introduction>I did some work with God--er, Glyph--on Twisted 
Reality back in the days when it was in Java.  I've done a decent chunk of 
coding, including using Python (which is still my favorite language), but I 
admit to being almost a complete newbie when it comes to network programming.  
Other than that...I live in Madison, WI and work at EDS on the WI Medicaid 
account.</introduction>

I'm considering using Twisted for a news/portal site in a similar style to 
Slashdot.  Glyph told me that there's been some discussion about creating a 
Twisted package along these lines.  I couldn't find anything in the archives; 
has anyone started work on such a thing?

Also, does the server run reliably under Windows 9x?

Thanks,

Mike




From carmstro at twistedmatrix.com  Wed Nov 28 14:56:22 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 28 Nov 2001 16:56:22 -0500
Subject: [Twisted-Python] Intro and "Slash- or Squishdot-style stuff?"
In-Reply-To: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
Message-ID: <1006984583.3209.3.camel@Fookidla.org>

On Wed, 2001-11-28 at 12:11, Michael Dartt wrote:
> Hello, everyone.  <introduction>I did some work with God--er, Glyph--on Twisted 
> Reality back in the days when it was in Java.  I've done a decent chunk of 
> coding, including using Python (which is still my favorite language), but I 
> admit to being almost a complete newbie when it comes to network programming.  
> Other than that...I live in Madison, WI and work at EDS on the WI Medicaid 
> account.</introduction>

Hi Michael! :)

> I'm considering using Twisted for a news/portal site in a similar style to 
> Slashdot.  Glyph told me that there's been some discussion about creating a 
> Twisted package along these lines.  I couldn't find anything in the archives; 
> has anyone started work on such a thing?

Hm.. There have been a few attempts at a weblog, and the most recent one
was just removed from CVS for lack of maintenance. The only hurdle I can
see for creating a good blog system (utilizing WebWidgets etc) would be
lack of decent database support in Twisted. There is glyph's adbapi
module, which is an async interface to dbapi, but I'm not sure how
useful it would be (note that I have very little experience with dbs).
Anyway, if you do decide to do this, give me a holler and I'll help out.

> Also, does the server run reliably under Windows 9x?

I'm not sure about this one. I know people have run it on windows, and I
know for certain that the CGI interface won't work (although this is
irrelevant), but I have no idea how it performs or how easy it is to get
running.

-- 
<bram> have I mentioned there's a FRIGGIN BUTTLOAD of ways web input can
go bad?
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Wed Nov 28 15:50:45 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Wed, 28 Nov 2001 17:50:45 -0500 (EST)
Subject: [Twisted-Python] Twisted.blog
In-Reply-To: <1006984583.3209.3.camel@Fookidla.org>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu> <1006984583.3209.3.camel@Fookidla.org>
Message-ID: <1006987845.3c056a45c351b@webmail.hampshire.edu>

What about coding the DB parts against the Python DB API Spec. 2.0?  
(http://www.python.org/topics/database/DatabaseAPI-2.0.html)

> > I'm considering using Twisted for a news/portal site in a similar
> style to 
> > Slashdot.  Glyph told me that there's been some discussion about
> creating a 
> > Twisted package along these lines.  I couldn't find anything in the
> archives; 
> > has anyone started work on such a thing?
> 
> Hm.. There have been a few attempts at a weblog, and the most recent
> one
> was just removed from CVS for lack of maintenance. The only hurdle I
> can
> see for creating a good blog system (utilizing WebWidgets etc) would
> be
> lack of decent database support in Twisted. There is glyph's adbapi
> module, which is an async interface to dbapi, but I'm not sure how
> useful it would be (note that I have very little experience with dbs).
> Anyway, if you do decide to do this, give me a holler and I'll help
> out.





From carmstro at twistedmatrix.com  Wed Nov 28 16:38:05 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 28 Nov 2001 18:38:05 -0500
Subject: [Twisted-Python] Twisted.blog
In-Reply-To: <1006987845.3c056a45c351b@webmail.hampshire.edu>
References: <1006967497.3c051ac9b9919@webmail.hampshire.edu>
	<1006984583.3209.3.camel@Fookidla.org> 
	<1006987845.3c056a45c351b@webmail.hampshire.edu>
Message-ID: <1006990687.3209.6.camel@Fookidla.org>

On Wed, 2001-11-28 at 17:50, Michael Dartt wrote:
> What about coding the DB parts against the Python DB API Spec. 2.0?  
> (http://www.python.org/topics/database/DatabaseAPI-2.0.html)

Right. That's what adbapi is for -- it's an async interface to DBAPI to play
nice in the Twisted environment.


-- 
<dash> "COM Error: Errors occurred"
* dash attacks ASP with a rusty hacksaw blade
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From twisted at itamarst.org  Thu Nov 29 09:46:00 2001
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2001 18:46:00 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted/twisted/internet poll.py,NONE,1.1
References: <E166Yek-0007R0-00@zaibach.twistedmatrix.com> <3BFBBF87.3080100@itamarst.org> <20011121183425.A10937@twistedmatrix.com> <3BFCFD38.7010904@itamarst.org> <20011122213950.B28166@twistedmatrix.com>
Message-ID: <3C066648.9010602@itamarst.org>

Glyph Lefkowitz wrote:


> Even though I am not sure I understand the problem :), perhaps the right answer
> to this question, since the common case is that all data can be written at
> once, is that the write should happen immediately, only being added to the
> select/poll loop if the write would block.  This would probably add a little
> complexity to the code but save a bunch of performance on small-write heavy
> protocols.


Well, I tried this. The result was a 25-50 percent improvement in read benchmarks

on my code. Web performance seems slightly worse in the one test I did. And it's

probably got some issues detecting closed connections... I have another 
behcmark that takes twice as long.

But as you can see there is some room for improvement, even if this patch specifically

is buggy.



Index: twisted/internet/abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.11
diff -c -r1.11 abstract.py
*** twisted/internet/abstract.py	2001/10/30 23:55:39	1.11
--- twisted/internet/abstract.py	2001/11/29 16:26:29
***************
*** 106,111 ****
--- 106,117 ----
          if not self.connected:
              return
          if data:
+             if not self.unsent:
+                 l = self.writeSomeData(data)
+                 if l == len(data) or l < 0:
+                     return
+                 else:
+                     data = data[l:]
              self.unsent = self.unsent + data
              if self.producer is not None:
                  if len(self.unsent) > self.bufferSize:







From carmstro at twistedmatrix.com  Thu Nov 29 18:46:27 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: 29 Nov 2001 20:46:27 -0500
Subject: [Twisted-Python] Twisted 0.12.2
Message-ID: <1007084789.1510.3.camel@Fookidla.org>

Hey all. I released Twisted 0.12.2 today, it was mainly a bunch of bug
fixes with a few features. Here's the changes:

What's new in 0.12.2?

  Removed some broken and/or experimental code.
  
  Added poll() based event loop implementation.

  New minimal documentation for WebWidgets and Manhole in the doc/
  directory.
  
  Made some changes to the listen API -- changed from listenOn to
  listenTCP, listenUDP, and listenSSL.

  Some UI changes for InstanceMessenger.

  Some caching support for static files in twisted.web.
  
  Tons of fixed bugs.

Go grab it at http://twistedmatrix.com/downloads/. Have fun.

-- 
<Yosomono> rasterman is the millionth monkey
--
                              Chris Armstrong
                      <<< radix at twistedmatrix.com >>>
              http://twistedmatrix.com/users/carmstro.twistd/





From mad96 at hampshire.edu  Fri Nov 30 13:38:24 2001
From: mad96 at hampshire.edu (Michael Dartt)
Date: Fri, 30 Nov 2001 15:38:24 -0500 (EST)
Subject: [Twisted-Python] FAQ-o-matic
Message-ID: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>

I'd like to suggest the addition of a FAQ-o-matic 
(http://faqomatic.sourceforge.net/fom-serve/cache/427.html)to the Twisted 
site.  I think it would make it much easier to get and to post info, as you 
wouldn't have to wait for someone to write The Definitive Documentation(tm) for 
a given subject.  From what I've seen/experienced, the "document-as-you-go" 
approach works much better for open-source projects.  

I'm willing to do the work of getting the F-o-m set up.  (Perhaps I should 
stick in in my personal space?)  




From jasbahr at crash.org  Fri Nov 30 13:50:15 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Fri, 30 Nov 2001 14:50:15 -0600
Subject: [Twisted-Python] Nebula Python Integration
In-Reply-To: <1007084789.1510.3.camel@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMIEBFHLAA.jasbahr@crash.org>

Hey, Twisters,

Just wanted to share some news regarding work I've been doing on the 
open source 3D engine, Nebula.  Nebula supports OpenGL on Linux and 
D3D and OpenGL on Windows currently, and will support OpenGL on 
Mac OS X shortly.

Nebula is the chosen client for my open source MMP project, Netsu.

The main Nebula site:  http://www.radonlabs.de/
The Nebula Sourceforge site:  http://sourceforge.net/projects/nebuladevice/

______________________________________________________________________
Jason Asbahr
jason at asbahr.com

---

[ Begin Forward ]

Nebula now has Python support!  It's checked into CVS and has been 
tested on Win32 and Linux.  Please let me know if you run into any 
difficulties with it, or do anything cool with it.

This release exposes the base-level Nebula functions to Python, a
future release will provide Python developers with an object-oriented
interface to Nebula.

Next up: Python tekdemos.

Cheers,

Jason


npython
========

Python Integration Documentation 
Created 2001, by Jason L. Asbahr, jason at asbahr.com

======================================================================
Introduction
======================================================================

npython is an extension which integrates Python into the 
Nebula Device and exposes the functionality of Nebula to Python.
npython can be invoked from inside the standard Nebula utilities
nsh and gfxserv, in addition, npython can be imported directly 
into Python as an extension module.

======================================================================
To Build
======================================================================

- Copy nebula/code/src/python/npython.epk up one directory to 
  nebula/code/src
- Execute updsrc.tcl to build makefiles.
- Compile with 'make' or DevStudio

======================================================================
To Use
======================================================================

- To use Python in the Nebula utilities:
  nsh -script npythonserver
  gfxserv -script npythonserver

- To use Nebula from Python, simply:
  >>> import npython

======================================================================
Commands
======================================================================

npython currently exposes a set of functions to manipulate and control
the Nebula Device.  All functions take arguments formated as strings.

NOTE:  These commands are based on those commands available via Tcl, 
       with a couple differences.  For example, 'dir' has been renamed
       'ndir', and a new command 'set' has been introduced to allow
       invocation of methods on Nebula objects.

new( [class], [path] )
    Create a new object of class [class] with the name
    [path]. Name may be any valid path, missing path
    components will be filled up with 'nroot' objects.
    Returns the complete path name of the new object.

delete( [path] )
    Delete the object with name [path] and all of it's
    sub objects.

ndir()
    List contents of current 'directory'.

sel( [path] )
    Make the object defined by [path] the current object.
    Returns the complete path of the selected object.
 
psel()
    Returns the full path of the currently selected object.

exists( [path] )
    Check whether object exists. Return "1" if yes,
    return "0" if no.

get( [script] )
    Read a serialized object from the 'real' filesystem.
    The serialized object must have been created with
    the '.save' or '.saveas' object command.
    Returns the full path of the created object.

server( [portname] )
    Leave interactive mode and go into server mode by
    creating an ipc port. In server mode, npython will 
    wait for other Nebula apps to connect and execute any
    incoming commands on the local objects. 

connect( [hostname:portname] )
    Connect to another Nebula application in server mode.
    The remote app may be on the same machine (in this
    case you can omit the leading 'hostname:'), or
    on another machine. Communication will go through
    TCP/IP sockets. 'hostname' is any valid TCP/IP address
    in the form of 'ww.xx.yy.zz', or a machine name that
    can be resolved into a numerical tcp/ip address.

disconnect()
    Disconnect from a server.

exit()
    End the npython session (can also be used to shutdown 
    a remote server when in connected state).

======================================================================
Simple Example
======================================================================

new('nroot', 'myObject')

    This will create a new object of class 'nroot' which has the
    name 'myObject'. 

sel('myObject')

    This makes 'myObject' the current object. 'sel' just works like 'cd'
    in an ordinary shell, except that it selects the current object,
    not the current working directory in the filesystem.

set('getcmds')

    This invokes the method 'getcmds' on 'myObject', which
    will return a list of all command prototypes that 'myObject'
    accepts.

sel('..')

    Go back to the root object.


---
EOF








From acapnotic at twistedmatrix.com  Fri Nov 30 22:23:28 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 30 Nov 2001 21:23:28 -0800
Subject: [Twisted-Python] FAQ-o-matic
In-Reply-To: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
References: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
Message-ID: <20011130212328.A21469@troglodyte.menefee>

On Fri, Nov 30, 2001 at 03:38:24PM -0500, Michael Dartt wrote:
> From what I've seen/experienced, the "document-as-you-go" 
> approach works much better for open-source projects.  

How about using the wiki?
http://twistedmatrix.com/users/jh.twistd/python/moin.cgi/

 - Kevin

(do you know shira rosenhaft at hampshire, class of 2002?)

-- 
The moon is full, 100.0% illuminated, 14.8 days old.




From andrew at puzzling.org  Fri Nov 30 16:54:08 2001
From: andrew at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Dec 2001 10:54:08 +1100
Subject: [Twisted-Python] FAQ-o-matic
In-Reply-To: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
References: <1007152704.3c07ee4015fa4@webmail.hampshire.edu>
Message-ID: <20011201105408.A483@frobozz.local>

On Fri, Nov 30, 2001 at 03:38:24PM -0500, Michael Dartt wrote:
> I'd like to suggest the addition of a FAQ-o-matic 
> (http://faqomatic.sourceforge.net/fom-serve/cache/427.html)to the Twisted 
> site.  I think it would make it much easier to get and to post info, as you 
> wouldn't have to wait for someone to write The Definitive Documentation(tm) for 
> a given subject.  From what I've seen/experienced, the "document-as-you-go" 
> approach works much better for open-source projects.  

Wouldn't a wiki be better?

There's already a wiki with stuff about twisted in it:
http://www.twistedmatrix.com/users/jh.twistd/python/moin.cgi/TwistedProject?action=highlight&value=CategoryTwisted
but it doesn't seem to be dedicated to Twisted...

-Andrew.





