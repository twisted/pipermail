From exarkun at twistedmatrix.com  Sun Jul  1 00:05:52 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Jul 2012 04:05:52 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1341115552.72.1965520805@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120701/2ec0ad16/attachment.htm 

From cds at corbinsimpson.com  Sun Jul  1 06:03:44 2012
From: cds at corbinsimpson.com (Corbin Simpson)
Date: Sun, 1 Jul 2012 03:03:44 -0700
Subject: [Twisted-Python] txWS !!
In-Reply-To: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
References: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
Message-ID: <20120701100344.GA12010@ps35699.dreamhostps.com>

On Sat, Jun 30, 2012 at 09:36:08PM +0200, vinod kumar wrote:
> Hi,
> 
>  Thanks a lot for your reply. The trouble is that the events I have are
> triggered by a homematic CCU. The CCU does it by multicall which has not
> yet been implemented in twisted servers. So, I'm running a non-twisted
> xmlrpc server in a thread so that my CCU triggers the events and it's
> happening too. I can see the events printed on the console too. Now, I just
> want a way to write the same to sockets. Can't we connect these to txWS
> factory ? Doesn't the txWS has some socket object so that we can just say
> socket.write..hmm

Well, no, txWS doesn't have raw sockets like that. Let me try to ASCII
things out.

In a normal Twisted TCP server, you might have some situation like this:

+---------------------------+
| ServerFactory             |
|                           |           +----+
| + - - - - -+ +- - - - - + |~Raw~Bytes~|Port|~~TCP~~
| | Protocol | | Protocol | |           +----+
| +- - - - - + + - - - - -+ |
+---------------------------+

In this scenario, the Port is bound to a ServerFactory, and each
Protocol of the Factory corresponds to a single TCP client. Protocols
should contain all of the logic necessary for communicating with their
given client. If necessary, the Factory could track all of its
Protocols, in order to facilitate cross-Protocol communication.

So, with that in mind, here's what txWS provides:

+---------------------------+
| WebSocketsFactory         |
|                           |=WebSockets=Framing=+----+
| + - - - - - - - +         |~~~~~~Raw~Bytes~~~~~|Port|~~TCP~~
| | ServerFactory |         |====================+----+
| +- - - - - - - -+         |
+---------------------------+

That is, WebSocketsFactory wraps a ServerFactory and armors all of the
bytes being sent with WebSockets frames. There isn't any magic in there;
it's all compositional and very straightforward.

I'm not sure what you want when you say that you "want a way to write
the same to sockets." txWS doesn't have any special insight into the
bottom layer of its connection. (It could even work on non-TCP, if
somebody really wanted that.)

I hope this clarifies things; I know it doesn't exactly answer your
question as stated.

~ C.


From vk.86.811 at gmail.com  Sun Jul  1 07:09:53 2012
From: vk.86.811 at gmail.com (vinod kumar)
Date: Sun, 1 Jul 2012 13:09:53 +0200
Subject: [Twisted-Python] txWS !!
In-Reply-To: <20120701100344.GA12010@ps35699.dreamhostps.com>
References: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
	<20120701100344.GA12010@ps35699.dreamhostps.com>
Message-ID: <CAEUxhZ3FgxrHjzMt1cvd-fc+vKZ=hds1ibRRNurPU+n5peunGQ@mail.gmail.com>

Hi,

Thanks a lot for your clarification. My problems have been resolved.
Actually, I shifted to Autobahn. It's way comfortable in editing the
examples there. Now, I got the way to deal with txWS too indeed. The answer
to what I asked is just about grabbing the endpoints and use them at times.
In Autobahn broadcast example, they store all the clients when the
connection is opened as shown below:

 def onOpen(self):
      self.factory.register(self)

And in factory, the register function is this way:

 def register(self, client):
      if not client in self.clients:
         print "registered client " + client.peerstr
         self.clients.append(client)

So, this way I can send to all clients whenever I want as follows:
 ......some code .....
  for c in self.clients:
         c.sendMessage(json_event)
......some code........

Anyways, I have implemented my scenario pretty well using Autobahn. I'm
sure I can do the same with txWS at times.

Thanks,
Vinodh
On Sun, Jul 1, 2012 at 12:03 PM, Corbin Simpson <cds at corbinsimpson.com>wrote:

> On Sat, Jun 30, 2012 at 09:36:08PM +0200, vinod kumar wrote:
> > Hi,
> >
> >  Thanks a lot for your reply. The trouble is that the events I have are
> > triggered by a homematic CCU. The CCU does it by multicall which has not
> > yet been implemented in twisted servers. So, I'm running a non-twisted
> > xmlrpc server in a thread so that my CCU triggers the events and it's
> > happening too. I can see the events printed on the console too. Now, I
> just
> > want a way to write the same to sockets. Can't we connect these to txWS
> > factory ? Doesn't the txWS has some socket object so that we can just say
> > socket.write..hmm
>
> Well, no, txWS doesn't have raw sockets like that. Let me try to ASCII
> things out.
>
> In a normal Twisted TCP server, you might have some situation like this:
>
> +---------------------------+
> | ServerFactory             |
> |                           |           +----+
> | + - - - - -+ +- - - - - + |~Raw~Bytes~|Port|~~TCP~~
> | | Protocol | | Protocol | |           +----+
> | +- - - - - + + - - - - -+ |
> +---------------------------+
>
> In this scenario, the Port is bound to a ServerFactory, and each
> Protocol of the Factory corresponds to a single TCP client. Protocols
> should contain all of the logic necessary for communicating with their
> given client. If necessary, the Factory could track all of its
> Protocols, in order to facilitate cross-Protocol communication.
>
> So, with that in mind, here's what txWS provides:
>
> +---------------------------+
> | WebSocketsFactory         |
> |                           |=WebSockets=Framing=+----+
> | + - - - - - - - +         |~~~~~~Raw~Bytes~~~~~|Port|~~TCP~~
> | | ServerFactory |         |====================+----+
> | +- - - - - - - -+         |
> +---------------------------+
>
> That is, WebSocketsFactory wraps a ServerFactory and armors all of the
> bytes being sent with WebSockets frames. There isn't any magic in there;
> it's all compositional and very straightforward.
>
> I'm not sure what you want when you say that you "want a way to write
> the same to sockets." txWS doesn't have any special insight into the
> bottom layer of its connection. (It could even work on non-TCP, if
> somebody really wanted that.)
>
> I hope this clarifies things; I know it doesn't exactly answer your
> question as stated.
>
> ~ C.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120701/4f95d9a1/attachment.htm 

From drsalists at gmail.com  Mon Jul  2 20:31:14 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 3 Jul 2012 00:31:14 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
Message-ID: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>

On Thu, Jun 28, 2012 at 9:40 PM, Dan Stromberg <drsalists at gmail.com> wrote:

>
> Hi.
>
> I'm a Twisted neophyte, but I've been using Python a long time.
>
> My question:
> Is there a way of producing a deferred graph in a Python program at a
> given point in time?  Perhaps something based on graphviz and objgraph.py?
>  We're able to detect when we're having the problem, we just don't (yet)
> know its cause.
>
>
> Background:
> I'm looking at some code with a bit over 200
> addCallback/addErrback/addCallbacks in it.
>
> It's got a problem where sometimes the deferreds seem to just stop
> executing.  I see in the doc it says that this can happen if you've
> neglected to add an errback to the end of one or more of your deferred
> chains.
>
> One of the people who's been here longer than me, indicated that he's gone
> through the code looking for such issues, and didn't find any.  This
> suggests to me that either there's some other cause, or that it really is a
> deferred without a final errback, but it's hidden in a dark corner of the
> code somewhere.
>
>
> Thanks!
>
> I put together something to do a single-point-in-time graph (as
distorted/delayed by the time it takes to go through all the objects in the
python interpreter) of deferreds.  Please find it below as a shar archive
(wow, someone still does those?   Yeah, sometimes)  Anyway, given a tree of
deferreds, this will produce a whatever.dot file, which can be fed to
graphviz' "dot -Tpdf whatever.dot > whatever.pdf", and the pdf has a rather
nice-looking graph of the deferreds.

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.11.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `#!/bin/sh' line above, then type `sh FILE'.
#
lock_dir=_sh32156
# Made on 2012-07-02 21:48 UTC by <stromberg at aw50>.
# Source directory was `/home/stromberg/src/twisted-experiments'.
#
# Existing files will *not* be overwritten, unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2181 -rwxr-xr-x deferreddump.py
#   3174 -rwxr-xr-x wedgedump
#
MD5SUM=${MD5SUM-md5sum}
f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
test -n "${f}" && md5check=true || md5check=false
${md5check} || \
  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
if test "X$1" = "X-c"
then keep_file=''
else keep_file=true
fi
echo=echo
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=
locale_dir=
set_echo=false

for dir in $PATH
do
  if test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    case `$dir/gettext --version 2>&1 | sed 1q` in
      *GNU*) gettext_dir=$dir
      set_echo=true
      break ;;
    esac
  fi
done

if ${set_echo}
then
  set_echo=false
  for dir in $PATH
  do
    if test -f $dir/shar \
       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
    then
      locale_dir=`$dir/shar --print-text-domain-dir`
      set_echo=true
      break
    fi
  done

  if ${set_echo}
  then
    TEXTDOMAINDIR=$locale_dir
    export TEXTDOMAINDIR
    TEXTDOMAIN=sharutils
    export TEXTDOMAIN
    echo="$gettext_dir/gettext -s"
  fi
fi
IFS="$save_IFS"
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
then if (echo -n test; echo 1,2,3) | grep n >/dev/null
     then shar_n= shar_c='
'
     else shar_n=-n shar_c= ; fi
else shar_n= shar_c='\c' ; fi
f=shar-touch.$$
st1=200112312359.59
st2=123123592001.59
st2tr=123123592001.5 # old SysV 14-char limit
st3=1231235901

if touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
   test ! -f ${st1} && test -f ${f}; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'

elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
   test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'

elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
   test ! -f ${st3} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'

else
  shar_touch=:
  echo
  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
installing GNU `touch'\'', distributed in GNU coreutils...'
  echo
fi
rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
#
if test ! -d ${lock_dir} ; then :
else ${echo} "lock directory ${lock_dir} exists"
     exit 1
fi
if mkdir ${lock_dir}
then ${echo} "x - created lock directory ${lock_dir}."
else ${echo} "x - failed to create lock directory ${lock_dir}."
     exit 1
fi
# ============= deferreddump.py ==============
if test -n "${keep_file}" && test -f 'deferreddump.py'
then
${echo} "x - SKIPPING deferreddump.py (file already exists)"
else
${echo} "x - extracting deferreddump.py (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'deferreddump.py' &&
#!/usr/bin/python
X
# See also: http://twistedmatrix.com/trac/ticket/3858
# and:      http://twistedmatrix.com/trac/ticket/1402
# and:
#   twisted.internet.defer also exposes a setDebugging(bool) function to
#   store call stacks from creation and invocation in deferred objects,
#   it's what I was using to try and figure out what was going on, but
#   it's not nearly as at-a-glance as a graph is.
X
import gc
import sys
X
import twisted.internet.defer
X
def escape(callback_type, obj):
X    dummy = callback_type
X    return '%s' % (str(obj).replace(' ', '_').replace(':',
'').replace('<', '').replace('>', ''), )
X
def dump(outfile = sys.stdout):
X    outfile.write('digraph deferred_digraph {\n')
X    for obj in gc.get_objects():
X        if isinstance(obj, twisted.internet.defer.Deferred):
X            len_callbacks = len(obj.callbacks)
X            if obj.callbacks:
X                outfile.write('\t%s -> %s\n' % (escape('', obj),
escape('', obj.callbacks[0][0][0])))
X                outfile.write('\t%s -> %s\n' % (escape('', obj),
escape('', obj.callbacks[0][1][0])))
X            for callbackpairno in range(len_callbacks - 1):
X                current_callback = obj.callbacks[callbackpairno][0]
X                current_errback = obj.callbacks[callbackpairno][1]
X                current_callback_desc = current_callback[0]
X                current_errback_desc = current_errback[0]
X
X                next_callback = obj.callbacks[callbackpairno + 1][0]
X                next_errback = obj.callbacks[callbackpairno + 1][1]
X                next_callback_desc = next_callback[0]
X                next_errback_desc = next_errback[0]
X
X                outfile.write('\t%s -> %s;\n' % (escape('callback',
current_callback_desc), escape('callback', next_callback_desc)))
X                outfile.write('\t%s -> %s;\n' % (escape('errback',
current_errback_desc), escape('errback', next_errback_desc)))
X
X                outfile.write('\t%s -> %s;\n' % (escape('callback',
current_callback_desc), escape('errback', next_errback_desc)))
X                outfile.write('\t%s -> %s;\n' % (escape('errback',
current_errback_desc), escape('callback', next_callback_desc)))
X
X    outfile.write('}\n')
X
X
SHAR_EOF
  (set 20 12 06 29 18 02 00 'deferreddump.py'
   eval "${shar_touch}") && \
  chmod 0755 'deferreddump.py'
if test $? -ne 0
then ${echo} "restore of deferreddump.py failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'deferreddump.py': 'MD5
check failed'
       ) << \SHAR_EOF
45b2aed37cc2e57bc58f46a42eb2a2d4  deferreddump.py
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'deferreddump.py'` -ne 2181 && \
  ${echo} "restoration warning:  size of 'deferreddump.py' is not 2181"
  fi
fi
# ============= wedgedump ==============
if test -n "${keep_file}" && test -f 'wedgedump'
then
${echo} "x - SKIPPING wedgedump (file already exists)"
else
${echo} "x - extracting wedgedump (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'wedgedump' &&
#!/usr/bin/python
X
# Unhandled Errors
X
# From http://twistedmatrix.com/documents/current/core/howto/defer.html :
X
#   If a Deferred is garbage-collected with an unhandled error (i.e. it
#   would call the next errback if there was one), then Twisted will write
#   the error's traceback to the log file. This means that you can
#   typically get away with not adding errbacks and still get errors
#   logged. Be careful though; if you keep a reference to the Deferred
#   around, preventing it from being garbage-collected, then you may never
#   see the error (and your callbacks will mysteriously seem to have never
#   been called). If unsure, you should explicitly add an errback after
#   your callbacks, even if all you do is:
X
#       # Make sure errors get logged
#       from twisted.python import log
#       d.addErrback(log.err)
X
import sys
#mport time
X
import twisted.internet.defer
import twisted.python
X
import deferreddump
X
def get_deferred():
X    return twisted.internet.defer.succeed(1)
X
def cb1(value):
X    print value
X    return value * 2
X
def cb2(value):
X    #raise ValueError
X    print value
X    return value * 2
X
def cb3(value):
X    print value
X    return value * 2
X
def cb4(value):
X    print value
X    return value * 2
X
def cb5(value):
X    print value
X    return value * 2
X
def cb6(value):
X    print value
X    return value * 2
X
def cb7(value):
X    print value
X    return value * 2
X
def cb8(value):
X    print value
X    return value * 2
X
def eb1(value):
X    twisted.python.log.err()
X
def eb2(value):
X    twisted.python.log.err()
X
def eb3(value):
X    twisted.python.log.err()
X
def eb4(value):
X    twisted.python.log.err()
X
def eb5(value):
X    twisted.python.log.err()
X
def eb6(value):
X    twisted.python.log.err()
X
def eb7(value):
X    twisted.python.log.err()
X
def eb8(value):
X    twisted.python.log.err()
X
def arbitrary_function(add_final_log):
X    deferred = get_deferred()
X
X    # apparently we can use the same callback multiple times in the same
deferred
X    first_deferred = deferred.addCallback(cb1)
X    first_deferred.pause()
X    deferred.addCallbacks(cb1, eb1)
X    deferred.addCallbacks(cb2, eb2)
X    deferred.addCallbacks(cb3, eb3)
X    deferred.addCallbacks(cb4, eb4)
X    deferred.addCallbacks(cb5, eb5)
X    deferred.addCallbacks(cb6, eb6)
X    deferred.addCallbacks(cb7, eb7)
X
X    with open('t.dot', 'w') as file_:
X        deferreddump.dump(file_)
X
X    first_deferred.unpause()
X    if add_final_log:
X        deferred.addCallbacks(cb4, twisted.python.log.err)
X    else:
X        deferred.addCallback(cb4)
X
X    return deferred
X
def usage(retval):
X    sys.stderr.write('Usage: %s --add-final-log\n' % sys.argv[0])
X    sys.exit(retval)
X
def main():
X    add_final_log = False
X    while sys.argv[1:]:
X        if sys.argv[1] == '--add-final-log':
X            add_final_log = True
X        elif sys.argv[1] in [ '-h', '--help' ]:
X            usage(0)
X        else:
X            sys.stderr.write('%s: Unrecognized option: %s\n' %
(sys.argv[0], sys.argv[1]))
X            usage(1)
X        del sys.argv[1]
X
X    deferred = arbitrary_function(add_final_log)
X    with open('/dev/null', 'w') as file_:
X        file_.write(str(deferred))
X
X    sys.exit(0)
X
main()
X
SHAR_EOF
  (set 20 12 07 02 21 46 02 'wedgedump'
   eval "${shar_touch}") && \
  chmod 0755 'wedgedump'
if test $? -ne 0
then ${echo} "restore of wedgedump failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'wedgedump': 'MD5 check
failed'
       ) << \SHAR_EOF
d526664fcf63762f768303af91a74a5f  wedgedump
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'wedgedump'` -ne 3174 && \
  ${echo} "restoration warning:  size of 'wedgedump' is not 3174"
  fi
fi
if rm -fr ${lock_dir}
then ${echo} "x - removed lock directory ${lock_dir}."
else ${echo} "x - failed to remove lock directory ${lock_dir}."
     exit 1
fi
exit 0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120703/25ad2826/attachment.htm 

From tom.cocagne at gmail.com  Tue Jul  3 02:08:28 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 01:08:28 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
Message-ID: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>

For anyone interested in taking a look, I've just released a
native-Python implementation of the DBus protocol for Twisted. The
intent of the implementation is to provide Twisted applications with a
full-featured DBus API that is consistent with the rest of the
framework and does not require the use of the glib reactor or libdbus
Python bindings.

The project is currently hosted on github and has a pypi entry:

https://github.com/cocagne/twisted_dbus

http://pypi.python.org/pypi/twisted_dbus/1.0

Notes on the implementation:

* A comprehensive tutorial and DBus protocol overview is included in
the project documentation
* Although the release version is set at 1.0, the project should be
considered Beta quality as it has seen little real-world use
* Unit test coverage is at about 98%
* The code adheres to the Twisted coding standards
* Windows is currently not supported (likely a trivially easy task but
as yet unexplored)
* Full, generated API documentation is possible but burnout/apathy set
in before I figured out how to properly use Twisted's documentation
generator
* The implementation includes a basic DBus server implementation but,
currently, it's only intended to serve as an alternative to the native
DBus server when running the unit tests.

Notes on Performance:

* For a pure-python solution the performance is really quite good.
* On the CPython interpreter, this implementation runs at about about
1/3 to 1/5th the speed of the libdbus bindings.
* On the PyPy interpreter, this implementation runs at about the same
speed as the libdbus bindings
* Surprisingly enough, the bottleneck does not appear to be in the
marshalling/unmarshalling routines. Simply compiling the dbus
marshalling module with Cython yielded a 10x increase in marshalling
performance but this translated into only a minor overall performance
improvement. If anyone adept at Python/Twisted profiling would care to
take a look, assistance in this area would be most welcome.


- Tom Cocagne


From _ at lvh.cc  Tue Jul  3 03:08:41 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 3 Jul 2012 09:08:41 +0200
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
Message-ID: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>

Hi,

I have an AMP service that does cred-based auth with IBoxReceiver as the interface (see mantissa). On login, the user gets a different API depending if they're a staff member or not.

Additionally, I wrote a composing IResponderLocator. It takes a bunch of responder locators and calls them in sequence to see if they can provide a responder. The reason it exists is because I want to put behavior in their separate, related modules, but @Command.responder is only supposed to work at class definition time. Here's the implementation:

class ComposedLocator(object):
   """
   A responder locator that consists of other locators.
   """
   interface.implements(amp.IResponderLocator)

   class __metaclass__(type):
       def __new__(meta, name, bases, attrs):
           """
           Makes sure every subclass gets its own set of locator classes.
           """
           attrs["_locatorClasses"] = []
           return type.__new__(meta, name, bases, attrs)


   def __init__(self, *args, **kwargs):
       self._locators = [l(*args, **kwargs) for l in self._locatorClasses]


   def locateResponder(self, name):
       """
       Locates a responder from all the component responders.
       """
       for locator in self._locators:
           responder = locator.locateResponder(name)
           if responder is not None:
               return responder


   @classmethod
   def component(cls, locatorClass):
       """
       Registers a component locator.
       """
       cls._locatorClasses.append(locatorClass)
       return locatorClass



This has worked fine so far, but I've hit something so annoying to fix that I'm wondering if I'm not doing something very stupid and overlooking the obvious.

I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!

Except, no. Because of the composed locator detailed above, the responding method has no reference to the box sender and box receiver.  It's it's own little standalone object, with barely any AMP-specific knowledge. Ordinarily elegant, now annoying.

The only reason it ever worked before is because the default AMP implementation basically just involves subclassing everything into one object (self is self.boxReceiver is self.boxSender)

I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?


cheers
lvh




From tobias.oberstein at tavendo.de  Tue Jul  3 06:27:24 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 3 Jul 2012 03:27:24 -0700
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>

> For anyone interested in taking a look, I've just released a native-Python
> implementation of the DBus protocol for Twisted. The intent of the
> implementation is to provide Twisted applications with a full-featured DBus API
> that is consistent with the rest of the framework and does not require the use
> of the glib reactor or libdbus Python bindings.

Cool! Also great work on the examples, tutorial and protocol overview!

I'm having problems with the desktop notification example though .. any hints?


oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
Python 2.7.3
oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
Unhandled Error
Traceback (most recent call last):
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
    why = selectable.doRead()
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
    fd = struct.unpack('i', ancillary[0][2])[0]
struct.error: unpack requires a string argument of length 4

This is on Twisted 12.1


From tom.cocagne at gmail.com  Tue Jul  3 09:08:57 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 08:08:57 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>

Glyph was kind enough to point out offline that I screwed up the
project name during my midnight cleanup and release process. The name
was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
project links have been removed and replaced with their corrected
counterparts:

 https://github.com/cocagne/txdbus

 http://pypi.python.org/pypi/txdbus/1.0

- Tom



On Tue, Jul 3, 2012 at 1:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.
>
> The project is currently hosted on github and has a pypi entry:
>
> https://github.com/cocagne/twisted_dbus
>
> http://pypi.python.org/pypi/twisted_dbus/1.0
>
> Notes on the implementation:
>
> * A comprehensive tutorial and DBus protocol overview is included in
> the project documentation
> * Although the release version is set at 1.0, the project should be
> considered Beta quality as it has seen little real-world use
> * Unit test coverage is at about 98%
> * The code adheres to the Twisted coding standards
> * Windows is currently not supported (likely a trivially easy task but
> as yet unexplored)
> * Full, generated API documentation is possible but burnout/apathy set
> in before I figured out how to properly use Twisted's documentation
> generator
> * The implementation includes a basic DBus server implementation but,
> currently, it's only intended to serve as an alternative to the native
> DBus server when running the unit tests.
>
> Notes on Performance:
>
> * For a pure-python solution the performance is really quite good.
> * On the CPython interpreter, this implementation runs at about about
> 1/3 to 1/5th the speed of the libdbus bindings.
> * On the PyPy interpreter, this implementation runs at about the same
> speed as the libdbus bindings
> * Surprisingly enough, the bottleneck does not appear to be in the
> marshalling/unmarshalling routines. Simply compiling the dbus
> marshalling module with Cython yielded a 10x increase in marshalling
> performance but this translated into only a minor overall performance
> improvement. If anyone adept at Python/Twisted profiling would care to
> take a look, assistance in this area would be most welcome.
>
>
> - Tom Cocagne


From tom.cocagne at gmail.com  Tue Jul  3 09:16:01 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 08:16:01 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>

I believe credential passing over Unix sockets is a new feature in
Twisted 12.1. The older versions I used to develop this project didn't
support that feature so I had to implement it myself. From the
stacktrace, I'm guessing that my workaround for this is clashing with
Twisted's new build-in support. I'll try and take a look at this in
the near future.

Tom

On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>> For anyone interested in taking a look, I've just released a native-Python
>> implementation of the DBus protocol for Twisted. The intent of the
>> implementation is to provide Twisted applications with a full-featured DBus API
>> that is consistent with the rest of the framework and does not require the use
>> of the glib reactor or libdbus Python bindings.
>
> Cool! Also great work on the examples, tutorial and protocol overview!
>
> I'm having problems with the desktop notification example though .. any hints?
>
>
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
> Python 2.7.3
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
> Unhandled Error
> Traceback (most recent call last):
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>     return callWithContext({"system": lp}, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>     return func(*args,**kw)
> --- <exception caught here> ---
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>     why = selectable.doRead()
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>     fd = struct.unpack('i', ancillary[0][2])[0]
> struct.error: unpack requires a string argument of length 4
>
> This is on Twisted 12.1
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From radix at twistedmatrix.com  Tue Jul  3 09:16:59 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 3 Jul 2012 09:16:59 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAPkRfUTsF=xLyVO5U2SYLLX3jGSK4MHbb0z_rZqW4Kf0E5A4kg@mail.gmail.com>

On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.

Wow, nice. This looks like a high quality effort. libdbus is
appallingly bad (or was when I used it), so it's good to see
alternative implementations.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From tom.cocagne at gmail.com  Tue Jul  3 11:14:46 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 10:14:46 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
	<CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
Message-ID: <CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>

Unfortunately, it looks like 12.1 may be completely incompatible with
txdbus. The ancillary data support for Unix sockets appears to support
only file descriptor passing and breaks when credential passing is
attempted. The current implementation assumes and fails to check for
ancillary data sizes other than 4 (credentials are of length 12). I
believe it will be a relatively straight-forward task to add
credential passing support similar to how file descriptor passing is
done but it'll probably have to wait until the next Twisted release. A
straight-forward work-around eludes me.

Tom


On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> I believe credential passing over Unix sockets is a new feature in
> Twisted 12.1. The older versions I used to develop this project didn't
> support that feature so I had to implement it myself. From the
> stacktrace, I'm guessing that my workaround for this is clashing with
> Twisted's new build-in support. I'll try and take a look at this in
> the near future.
>
> Tom
>
> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
> <tobias.oberstein at tavendo.de> wrote:
>>> For anyone interested in taking a look, I've just released a native-Python
>>> implementation of the DBus protocol for Twisted. The intent of the
>>> implementation is to provide Twisted applications with a full-featured DBus API
>>> that is consistent with the rest of the framework and does not require the use
>>> of the glib reactor or libdbus Python bindings.
>>
>> Cool! Also great work on the examples, tutorial and protocol overview!
>>
>> I'm having problems with the desktop notification example though .. any hints?
>>
>>
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
>> Python 2.7.3
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
>> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
>> Unhandled Error
>> Traceback (most recent call last):
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>>     return callWithContext({"system": lp}, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>>     return func(*args,**kw)
>> --- <exception caught here> ---
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>>     why = selectable.doRead()
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>>     fd = struct.unpack('i', ancillary[0][2])[0]
>> struct.error: unpack requires a string argument of length 4
>>
>> This is on Twisted 12.1
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jstpierre at mecheye.net  Tue Jul  3 11:28:55 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 3 Jul 2012 11:28:55 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>

On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.
>
> The project is currently hosted on github and has a pypi entry:
>
> https://github.com/cocagne/twisted_dbus
>
> http://pypi.python.org/pypi/twisted_dbus/1.0
>
> Notes on the implementation:
>
> * A comprehensive tutorial and DBus protocol overview is included in
> the project documentation
> * Although the release version is set at 1.0, the project should be
> considered Beta quality as it has seen little real-world use
> * Unit test coverage is at about 98%
> * The code adheres to the Twisted coding standards
> * Windows is currently not supported (likely a trivially easy task but
> as yet unexplored)
> * Full, generated API documentation is possible but burnout/apathy set
> in before I figured out how to properly use Twisted's documentation
> generator
> * The implementation includes a basic DBus server implementation but,
> currently, it's only intended to serve as an alternative to the native
> DBus server when running the unit tests.
>
> Notes on Performance:
>
> * For a pure-python solution the performance is really quite good.
> * On the CPython interpreter, this implementation runs at about about
> 1/3 to 1/5th the speed of the libdbus bindings.

Did you compare to GDBus? I'm just curious, as David has been excited
about performance improvements there.

> * On the PyPy interpreter, this implementation runs at about the same
> speed as the libdbus bindings
> * Surprisingly enough, the bottleneck does not appear to be in the
> marshalling/unmarshalling routines. Simply compiling the dbus
> marshalling module with Cython yielded a 10x increase in marshalling
> performance but this translated into only a minor overall performance
> improvement. If anyone adept at Python/Twisted profiling would care to
> take a look, assistance in this area would be most welcome.
>
>
> - Tom Cocagne
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper


From radix at twistedmatrix.com  Tue Jul  3 11:53:48 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 3 Jul 2012 11:53:48 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
Message-ID: <CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>

On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> Glyph was kind enough to point out offline that I screwed up the
> project name during my midnight cleanup and release process. The name
> was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
> project links have been removed and replaced with their corrected
> counterparts:
>
>  https://github.com/cocagne/txdbus
>
>  http://pypi.python.org/pypi/txdbus/1.0
>

You probably shouldn't actually put it in a "tx" python package. It'll
cause conflicts with anyone else who makes the same mistake. Just name
the toplevel package "txdbus" or something.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From tom.cocagne at gmail.com  Tue Jul  3 12:03:41 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 11:03:41 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>
Message-ID: <CAFKh6jAQAzYV-0eruJ4hYTyqfX0AeR=PRnwkXFJm73z7z+va4g@mail.gmail.com>

No, I haven't compared it to GDbus. I would certainly expect it's
performance to be better though. it's been a long time since I've used
PyGTK. Honestly, I'd completely forgotten about it. I'll give it a
look.

Tom

On Tue, Jul 3, 2012 at 10:28 AM, Jasper St. Pierre
<jstpierre at mecheye.net> wrote:
> On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> For anyone interested in taking a look, I've just released a
>> native-Python implementation of the DBus protocol for Twisted. The
>> intent of the implementation is to provide Twisted applications with a
>> full-featured DBus API that is consistent with the rest of the
>> framework and does not require the use of the glib reactor or libdbus
>> Python bindings.
>>
>> The project is currently hosted on github and has a pypi entry:
>>
>> https://github.com/cocagne/twisted_dbus
>>
>> http://pypi.python.org/pypi/twisted_dbus/1.0
>>
>> Notes on the implementation:
>>
>> * A comprehensive tutorial and DBus protocol overview is included in
>> the project documentation
>> * Although the release version is set at 1.0, the project should be
>> considered Beta quality as it has seen little real-world use
>> * Unit test coverage is at about 98%
>> * The code adheres to the Twisted coding standards
>> * Windows is currently not supported (likely a trivially easy task but
>> as yet unexplored)
>> * Full, generated API documentation is possible but burnout/apathy set
>> in before I figured out how to properly use Twisted's documentation
>> generator
>> * The implementation includes a basic DBus server implementation but,
>> currently, it's only intended to serve as an alternative to the native
>> DBus server when running the unit tests.
>>
>> Notes on Performance:
>>
>> * For a pure-python solution the performance is really quite good.
>> * On the CPython interpreter, this implementation runs at about about
>> 1/3 to 1/5th the speed of the libdbus bindings.
>
> Did you compare to GDBus? I'm just curious, as David has been excited
> about performance improvements there.
>
>> * On the PyPy interpreter, this implementation runs at about the same
>> speed as the libdbus bindings
>> * Surprisingly enough, the bottleneck does not appear to be in the
>> marshalling/unmarshalling routines. Simply compiling the dbus
>> marshalling module with Cython yielded a 10x increase in marshalling
>> performance but this translated into only a minor overall performance
>> improvement. If anyone adept at Python/Twisted profiling would care to
>> take a look, assistance in this area would be most welcome.
>>
>>
>> - Tom Cocagne
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
>   Jasper
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From tom.cocagne at gmail.com  Tue Jul  3 13:56:15 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 12:56:15 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
	<CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
Message-ID: <CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>

Not sure how I overlooked that.

Done.

Tom

On Tue, Jul 3, 2012 at 10:53 AM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> Glyph was kind enough to point out offline that I screwed up the
>> project name during my midnight cleanup and release process. The name
>> was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
>> project links have been removed and replaced with their corrected
>> counterparts:
>>
>>  https://github.com/cocagne/txdbus
>>
>>  http://pypi.python.org/pypi/txdbus/1.0
>>
>
> You probably shouldn't actually put it in a "tx" python package. It'll
> cause conflicts with anyone else who makes the same mistake. Just name
> the toplevel package "txdbus" or something.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From tom.cocagne at gmail.com  Tue Jul  3 16:36:41 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 15:36:41 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
	<CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
	<CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>
Message-ID: <CAFKh6jBoWccZWXxpmJVuunNVSjAePT3tocKSvMb4jwVaL9YyYg@mail.gmail.com>

Nevermind. Simply removing the explicit credential passing from the
client side of the implementation fixed the problem. txdbus 1.0.2
appears to run just fine on 12.1.

Tom

On Tue, Jul 3, 2012 at 10:14 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> Unfortunately, it looks like 12.1 may be completely incompatible with
> txdbus. The ancillary data support for Unix sockets appears to support
> only file descriptor passing and breaks when credential passing is
> attempted. The current implementation assumes and fails to check for
> ancillary data sizes other than 4 (credentials are of length 12). I
> believe it will be a relatively straight-forward task to add
> credential passing support similar to how file descriptor passing is
> done but it'll probably have to wait until the next Twisted release. A
> straight-forward work-around eludes me.
>
> Tom
>
>
> On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> I believe credential passing over Unix sockets is a new feature in
>> Twisted 12.1. The older versions I used to develop this project didn't
>> support that feature so I had to implement it myself. From the
>> stacktrace, I'm guessing that my workaround for this is clashing with
>> Twisted's new build-in support. I'll try and take a look at this in
>> the near future.
>>
>> Tom
>>
>> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
>> <tobias.oberstein at tavendo.de> wrote:
>>>> For anyone interested in taking a look, I've just released a native-Python
>>>> implementation of the DBus protocol for Twisted. The intent of the
>>>> implementation is to provide Twisted applications with a full-featured DBus API
>>>> that is consistent with the rest of the framework and does not require the use
>>>> of the glib reactor or libdbus Python bindings.
>>>
>>> Cool! Also great work on the examples, tutorial and protocol overview!
>>>
>>> I'm having problems with the desktop notification example though .. any hints?
>>>
>>>
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
>>> Python 2.7.3
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
>>> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
>>> Unhandled Error
>>> Traceback (most recent call last):
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>>>     return callWithContext({"system": lp}, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>>>     return func(*args,**kw)
>>> --- <exception caught here> ---
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>>>     why = selectable.doRead()
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>>>     fd = struct.unpack('i', ancillary[0][2])[0]
>>> struct.error: unpack requires a string argument of length 4
>>>
>>> This is on Twisted 12.1
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Tue Jul  3 17:53:28 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 3 Jul 2012 14:53:28 -0700
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
Message-ID: <6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>


On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!

Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)

> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?

This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.

Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120703/e6647265/attachment.htm 

From mobilebackup77 at gmail.com  Tue Jul  3 17:54:18 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 3 Jul 2012 17:54:18 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
Message-ID: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>

Hi All,

I have a flask application that I am running on a https twisted
webserver and forwarding the port to a url. Everything works well. I
can goto the url using firefox, accept the certificate and get in.

I have a small nose test to test if the url is up. Here is the test:

    @deferred(timeout = 31)
    @defer.inlineCallbacks
    def test_if_forwarding_url_is_ready(self):
        """
            furl: Check if url is accessible
        """
        # First wait for 10 seconds
        yield task.deferLater(reactor, 10, lambda:None)
        delay = 2
        secureurl = Config.General.url
        # Every two seconds do a query and find out if you can get
        # data from the mapped url. If you can, then exit
        for i in range(15):
            got_data = False
            print "Trial :", i
            try:
                output = yield getPage(secureurl)
                got_data = True
            except Exception as E:
                print "Exception occurred:", E
                got_data = False
            if got_data == True:
                assert "secure magic" in output
                return
            yield task.deferLater(reactor, delay, lambda:None)
        # All 15 trials to get data from the url failed
        assert False

When the test is run, it fails "most of the time" and outputs:

Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake failure')]

But if I run the test and right away goto the secureurl manually using
firefox or chrome, as soon as I am on the webpage, the test passes!
Sometimes I've seen the test will pass after 8 trials, if that is when
I can type the url in firefox and press enter!

Any ideas what is causing this and how to fix it? Maybe I am doing
something stupid and perhaps someone can help me rewrite this code.

Thanks,
--Ram


From _ at lvh.cc  Wed Jul  4 03:39:43 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 4 Jul 2012 09:39:43 +0200
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
	<6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
Message-ID: <FFB735D4-BF2F-4FB9-BC82-DDE7AADFE848@lvh.cc>

On 03 Jul 2012, at 23:53, Glyph wrote:

> 
> On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> 
>> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!
> 
> Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)

I haven't seen that class, I'll take a look.

I didn't want to go through fred again because I don't see the benefit. I'm not trying to do any authentication (that part's already done), admins don't know the relevant password, so it'd pretty much be IRealm.requestAvatar. I don't understand why portal, credentials checkers... come into play.

>> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?
> 
> This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.

So what would this custom Argument be? Right now I take the user id of the user I'm trying to be.

> Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,

Afraid not :( That's okay, I have different tests to go fix :)

> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Wed Jul  4 04:50:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jul 2012 01:50:53 -0700
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <A770A729-2B1B-40AC-9BAE-79C62E16A4CF@twistedmatrix.com>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
	<6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
	<FFB735D4-BF2F-4FB9-BC82-DDE7AADFE848@lvh.cc>
	<A770A729-2B1B-40AC-9BAE-79C62E16A4CF@twistedmatrix.com>
Message-ID: <FDC41D82-7392-4766-A2DC-B762B086EA1E@twistedmatrix.com>


Le Jul 4, 2012 ? 12:39 AM, Laurens Van Houtven <_ at lvh.cc> a ?crit :

> On 03 Jul 2012, at 23:53, Glyph wrote:
> 
>> 
>> On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>> 
>>> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!
>> 
>> Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)
> 
> I haven't seen that class, I'll take a look.
> 
> I didn't want to go through fred again because I don't see the benefit. I'm not trying to do any authentication (that part's already done), admins don't know the relevant password, so it'd pretty much be IRealm.requestAvatar. I don't understand why portal, credentials checkers... come into play.

Uh, hrm.  Well, hypothetically the checker might have some extra knowledge about how to map a publicly visible user name into an avatar ID; avatar IDs aren't necessarily user names and in fact in the future I hope we can make them a bit more opaque.

In many cases you're right though, it is the same.  Really, this should just be a basic facility of cred so that protocols which need to communicate between authenticated users (SMTP, SIP, IRC, XMPP) can look up the relevant avatars without even having to think about what the right way to do it is :).

>>> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?
>> 
>> This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.
> 
> So what would this custom Argument be? Right now I take the user id of the user I'm trying to be.

OK, I was definitely missing a couple of steps here.

The custom Argument, in fromBox, can get a value from the CommandLocator, which is the 'protocol' in this case, because it's the CommandLocator which does the (de-)serialization.  So it's not quite enough to just use that API.  The docs here could stand to be improved - they say that this argument is an L{AMP} which is obviously wrong in your case.

Basically you need to give your ComposedLocator knowledge of its BoxSender, which it needs to propagate to its component locators, so that you can ask for it later from the Argument.  Given that I can see you might not want to mess with __init__, you can make this a separate method.  (If you want to really continue in the spirit of AMP's component separation, make ComposedLocator be an IBoxReceiver as well - in fact, BoxDispatcher does what you want, so you can inherit from (or compose!) it; you automatically get a boxSender attribute, which will just so happen to point to the AMP instance whose boxReceiver you want to change.

So, now your ComposedLocator has a boxSender, you can propagate it that value to its components as a public attribute and they can just mess with it on 'self'.  But that's no fun, because now everybody in the whole system can just violate these layers whenever they want (although that is kind of what you want to do).

So, what I was originally suggesting is that you can make everyone who wants to mess with the transport explicitly declare their intentions with a special argument type (as I originally suggested) by propagating it as a private attribute which ComposedLocator's layer of the code knows about.  So, like this:

class ComposedLocator(object):
    def startReceivingBoxes(self, boxSender):
        for locator in self._locators:
            locator._secretlyYouKnowAboutAMP = boxSender
        return super(ComposedLocator, self).startReceivingBoxes(boxSender)
class ShowMeTheProtocol(Argument):
    def fromBox(self, name, strings, objects, componentLocator):
        objects[name] = componentLocator._secretlyYouKnowAboutAMP
class Become(Command):
    arguments = [('boxSender', ShowMeTheProtocol())]

Clear yet? :)

>> Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,
> 
> Afraid not :( That's okay, I have different tests to go fix :)

Don't we all.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120704/a1e2542b/attachment-0001.htm 

From exarkun at twistedmatrix.com  Wed Jul  4 06:51:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Jul 2012 10:51:33 -0000
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
	<CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
	<CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>
Message-ID: <20120704105133.4071.1410102550.divmod.xquotient.3@localhost6.localdomain6>

On 3 Jul, 05:56 pm, tom.cocagne at gmail.com wrote:
>Not sure how I overlooked that.

Probably too busy watching out for all the other pitfalls involved in 
packaging Python software. ;)

Thanks for being so responsive on these points!  And congrats on your 
release. :)

Jean-Paul
>Done.
>
>Tom
>
>On Tue, Jul 3, 2012 at 10:53 AM, Christopher Armstrong
><radix at twistedmatrix.com> wrote:
>>On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> 
>>wrote:
>>>Glyph was kind enough to point out offline that I screwed up the
>>>project name during my midnight cleanup and release process. The name
>>>was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
>>>project links have been removed and replaced with their corrected
>>>counterparts:
>>>
>>>  https://github.com/cocagne/txdbus
>>>
>>>  http://pypi.python.org/pypi/txdbus/1.0
>>
>>You probably shouldn't actually put it in a "tx" python package. It'll
>>cause conflicts with anyone else who makes the same mistake. Just name
>>the toplevel package "txdbus" or something.
>>
>>--
>>Christopher Armstrong
>>http://radix.twistedmatrix.com/
>>http://planet-if.com/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Wed Jul  4 07:09:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Jul 2012 11:09:45 -0000
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
 Exception)
In-Reply-To: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
Message-ID: <20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>

On 3 Jul, 09:54 pm, mobilebackup77 at gmail.com wrote:
>Hi All,
>
>I have a flask application that I am running on a https twisted
>webserver and forwarding the port to a url. Everything works well. I
>can goto the url using firefox, accept the certificate and get in.
>
>I have a small nose test to test if the url is up. Here is the test:
>
>    @deferred(timeout = 31)
>    @defer.inlineCallbacks
>    def test_if_forwarding_url_is_ready(self):
>        """
>            furl: Check if url is accessible
>        """
>        # First wait for 10 seconds
>        yield task.deferLater(reactor, 10, lambda:None)
>        delay = 2
>        secureurl = Config.General.url
>        # Every two seconds do a query and find out if you can get
>        # data from the mapped url. If you can, then exit
>        for i in range(15):
>            got_data = False
>            print "Trial :", i
>            try:
>                output = yield getPage(secureurl)
>                got_data = True
>            except Exception as E:
>                print "Exception occurred:", E
>                got_data = False
>            if got_data == True:
>                assert "secure magic" in output
>                return
>            yield task.deferLater(reactor, delay, lambda:None)
>        # All 15 trials to get data from the url failed
>        assert False
>
>When the test is run, it fails "most of the time" and outputs:
>
>Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake 
>failure')]
>
>But if I run the test and right away goto the secureurl manually using
>firefox or chrome, as soon as I am on the webpage, the test passes!
>Sometimes I've seen the test will pass after 8 trials, if that is when
>I can type the url in firefox and press enter!
>
>Any ideas what is causing this and how to fix it? Maybe I am doing
>something stupid and perhaps someone can help me rewrite this code.

nose used to support Twisted with some gross, arguably incorrect code. 
I don't know if this is still the case, but it's perhaps something to 
investigate.

Apart from that, getPage uses Twisted's regular ("standard"?  "only"?) 
SSL support to do HTTPS.  There *shouldn't* be anything particular to 
getPage that would cause the handshake to fail, so either Twisted's SSL 
support is broken in general in whatever configuration you're using, or 
the problem isn't in Twisted.

Jean-Paul


From tobias.oberstein at tavendo.de  Wed Jul  4 07:50:24 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 4 Jul 2012 04:50:24 -0700
Subject: [Twisted-Python] ANN: Twisted DBus 1.0 => WebSocket/WAMP Bridge
Message-ID: <634914A010D0B943A035D226786325D433793A5F0D@EXVMBX020-12.exch020.serverdata.net>

Hi Tom,

Great!

I have created a quick example that bridges WebSocket/WAMP and Dbus

https://github.com/tavendo/AutobahnPython/tree/master/examples/wamp/dbus

This allows to trigger desktop notifications on one or multiple machines
from a browser based UI running anywhere via a WebSocket/WAMP PubSub
message broker in between.

Cheers,
Tobias


Mit freundlichen Gr?ssen,

Tobias Oberstein
Gesch?ftsf?hrer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
skype: tobias.oberstein




Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
+49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer Tobias Oberstein


> -----Urspr?ngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von Tom Cocagne
> Gesendet: Dienstag, 3. Juli 2012 22:37
> An: Twisted general discussion
> Betreff: Re: [Twisted-Python] ANN: Twisted DBus 1.0
> 
> Nevermind. Simply removing the explicit credential passing from the client side
> of the implementation fixed the problem. txdbus 1.0.2 appears to run just fine
> on 12.1.
> 
> Tom
> 
> On Tue, Jul 3, 2012 at 10:14 AM, Tom Cocagne <tom.cocagne at gmail.com>
> wrote:
> > Unfortunately, it looks like 12.1 may be completely incompatible with
> > txdbus. The ancillary data support for Unix sockets appears to support
> > only file descriptor passing and breaks when credential passing is
> > attempted. The current implementation assumes and fails to check for
> > ancillary data sizes other than 4 (credentials are of length 12). I
> > believe it will be a relatively straight-forward task to add
> > credential passing support similar to how file descriptor passing is
> > done but it'll probably have to wait until the next Twisted release. A
> > straight-forward work-around eludes me.
> >
> > Tom
> >
> >
> > On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com>
> wrote:
> >> I believe credential passing over Unix sockets is a new feature in
> >> Twisted 12.1. The older versions I used to develop this project
> >> didn't support that feature so I had to implement it myself. From the
> >> stacktrace, I'm guessing that my workaround for this is clashing with
> >> Twisted's new build-in support. I'll try and take a look at this in
> >> the near future.
> >>
> >> Tom
> >>
> >> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
> >> <tobias.oberstein at tavendo.de> wrote:
> >>>> For anyone interested in taking a look, I've just released a
> >>>> native-Python implementation of the DBus protocol for Twisted. The
> >>>> intent of the implementation is to provide Twisted applications
> >>>> with a full-featured DBus API that is consistent with the rest of
> >>>> the framework and does not require the use of the glib reactor or libdbus
> Python bindings.
> >>>
> >>> Cool! Also great work on the examples, tutorial and protocol overview!
> >>>
> >>> I'm having problems with the desktop notification example though .. any
> hints?
> >>>
> >>>
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> ~/python273/bin/python -V Python 2.7.3
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> uname -a Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP
> >>> Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> ~/python273/bin/python desktop_noficiation Unhandled Error Traceback
> (most recent call last):
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/log.py", line 84, in callWithLogger
> >>>     return callWithContext({"system": lp}, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/log.py", line 69, in callWithContext
> >>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/context.py", line 118, in callWithContext
> >>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/context.py", line 81, in callWithContext
> >>>     return func(*args,**kw)
> >>> --- <exception caught here> ---
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
> >>>     why = selectable.doRead()
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/internet/unix.py", line 169, in doRead
> >>>     fd = struct.unpack('i', ancillary[0][2])[0]
> >>> struct.error: unpack requires a string argument of length 4
> >>>
> >>> This is on Twisted 12.1
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From mobilebackup77 at gmail.com  Wed Jul  4 16:19:06 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Wed, 4 Jul 2012 16:19:06 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
Message-ID: <CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>

Thanks for the quick reply Jean-Paul. I just removed nose from the
equation. And now, only firefox or chrome can actually get to the
webpages/Twisted webserver, but getPage keeps printing that exception.
It seems I've reduced the problem to getPage. I ran a separate thread
and used urlopen, and even that can actually get the https webpage
hosted on the twisted server. It seems getPage's https support/tests
need to be extended perhaps? (I wish I could help find the bug). I
know I need to isolate the bug from my project into a simple example
that can illustrate the bug. Unfortunately, I'm not sure I've the time
to do that right now.


On Wed, Jul 4, 2012 at 7:09 AM,  <exarkun at twistedmatrix.com> wrote:
> On 3 Jul, 09:54 pm, mobilebackup77 at gmail.com wrote:
>>Hi All,
>>
>>I have a flask application that I am running on a https twisted
>>webserver and forwarding the port to a url. Everything works well. I
>>can goto the url using firefox, accept the certificate and get in.
>>
>>I have a small nose test to test if the url is up. Here is the test:
>>
>>    @deferred(timeout = 31)
>>    @defer.inlineCallbacks
>>    def test_if_forwarding_url_is_ready(self):
>>        """
>>            furl: Check if url is accessible
>>        """
>>        # First wait for 10 seconds
>>        yield task.deferLater(reactor, 10, lambda:None)
>>        delay = 2
>>        secureurl = Config.General.url
>>        # Every two seconds do a query and find out if you can get
>>        # data from the mapped url. If you can, then exit
>>        for i in range(15):
>>            got_data = False
>>            print "Trial :", i
>>            try:
>>                output = yield getPage(secureurl)
>>                got_data = True
>>            except Exception as E:
>>                print "Exception occurred:", E
>>                got_data = False
>>            if got_data == True:
>>                assert "secure magic" in output
>>                return
>>            yield task.deferLater(reactor, delay, lambda:None)
>>        # All 15 trials to get data from the url failed
>>        assert False
>>
>>When the test is run, it fails "most of the time" and outputs:
>>
>>Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake
>>failure')]
>>
>>But if I run the test and right away goto the secureurl manually using
>>firefox or chrome, as soon as I am on the webpage, the test passes!
>>Sometimes I've seen the test will pass after 8 trials, if that is when
>>I can type the url in firefox and press enter!
>>
>>Any ideas what is causing this and how to fix it? Maybe I am doing
>>something stupid and perhaps someone can help me rewrite this code.
>
> nose used to support Twisted with some gross, arguably incorrect code.
> I don't know if this is still the case, but it's perhaps something to
> investigate.
>
> Apart from that, getPage uses Twisted's regular ("standard"?  "only"?)
> SSL support to do HTTPS.  There *shouldn't* be anything particular to
> getPage that would cause the handshake to fail, so either Twisted's SSL
> support is broken in general in whatever configuration you're using, or
> the problem isn't in Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Wed Jul  4 17:43:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jul 2012 14:43:33 -0700
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
Message-ID: <464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>


Le Jul 4, 2012 ? 1:19 PM, Me Myself <mobilebackup77 at gmail.com> a ?crit :

> I know I need to isolate the bug from my project into a simple example
> that can illustrate the bug. Unfortunately, I'm not sure I've the time
> to do that right now.

It's OK, any time you have the time to do it, we will be ready to handle the bug :).  Please just put it on a to-do list or something so that you don't forget.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120704/ad9ea250/attachment.htm 

From penxiao at cisco.com  Wed Jul  4 23:51:35 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Thu, 5 Jul 2012 03:51:35 +0000
Subject: [Twisted-Python] How to get the  socket error when NIC is down
Message-ID: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>


Hi experts,

I wrote a TCP program using twisted, and the TCP socket bind the local IP address, the code can reconnect TCP connection when TCP is disconnected.
But the program will be exit without any error when the local NIC is down.
I want to know how can I capture the exception when the local NIC is down?

Thanks a lot.


Best
Regards,

Xiao Peng(??)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120705/7089dece/attachment.htm 

From justin.venus at gmail.com  Thu Jul  5 00:35:27 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Wed, 4 Jul 2012 23:35:27 -0500
Subject: [Twisted-Python] How to get the socket error when NIC is down
In-Reply-To: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>
References: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>
Message-ID: <CACL=7atTd0M-9YFWD2vHMkSPSyLYUTe-06ajgcuuczDvgLqnYA@mail.gmail.com>

Can you share the code so we can see the problem for ourselves?

Justin Venus
On Jul 4, 2012 10:54 PM, "Peng Xiao -X (penxiao - Digital China at Cisco)" <
penxiao at cisco.com> wrote:

>  ** **
>
> Hi experts,****
>
> ** **
>
> I wrote a TCP program using twisted, and the TCP socket bind the local IP
> address, the code can reconnect TCP connection when TCP is disconnected.**
> **
>
> But the program will be exit without any error when the local NIC is down.
> ****
>
> I want to know how can I capture the exception when the local NIC is down?
> ****
>
> ** **
>
> Thanks a lot.****
>
> ** **
>
> ** **
>
> Best****
>
> Regards,****
>
>  ****
>
> Xiao Peng(??)****
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120704/16b47343/attachment.htm 

From _ at lvh.cc  Fri Jul  6 04:47:13 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 10:47:13 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
Message-ID: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>

Hi,

I have some code that takes file uploads from browsers. I'm trying to write a test for it, so now I need to get Twisted to do file uploads like browsers do. I think my code (not test code) essentially works, by manually trying it with a browser. I can't get the functional test part to work.

I have reduced the problem to what I think is a SSCCE. render_POST drops into a debugger to easily inspect the received request.

Here's the code: https://gist.github.com/3058974

When debugging this with wireshark I found an obvious culprit: there's some random junk in front of it (3 ASCII hex digits and a CRLF) and some junk at the end (CRLF and an ASCII "0", although I'm not sure if that CRLF is junk). Wireshark reports some broken TCP packets (PCAP attached). I have no idea why that happens. Packets were captured with:

    tcpdump -i lo0 -nn -s0 -w sample.pcap port 8080

and analyzed with a recent version of Wireshark (1.6.2, SVN rev 38931). The analyzed TCP stream is also attached.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tcpdata.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/e6354a10/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pcap
Type: application/octet-stream
Size: 1479 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/e6354a10/attachment.obj 
-------------- next part --------------


If I look at the request in the debugger (request_POST *DOES* get called?):

 - it has an empty request.args, instead of having the expected keys "a", "b", "f"
 - request.content.getvalue() has the data you see in tcpdata.txt: it starts with "'1e7\r\n------------" even though I obviously would like it to start with just the dashes

cheers
lvh




From _ at lvh.cc  Fri Jul  6 05:32:19 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 11:32:19 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <1B7D8773-7689-4F2B-A476-44FECE67F1C2@lvh.cc>

As an extra reference, see the behavior Firefox has when approaching the sample server (with some value for the sample field and the Axiom README as the file):

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ff-behavior.pcap
Type: application/octet-stream
Size: 3769 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/8373a110/attachment.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ff-behavior.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/8373a110/attachment.txt 
-------------- next part --------------

cheers
lvh



On 06 Jul 2012, at 10:47, Laurens Van Houtven wrote:

> Hi,
> 
> I have some code that takes file uploads from browsers. I'm trying to write a test for it, so now I need to get Twisted to do file uploads like browsers do. I think my code (not test code) essentially works, by manually trying it with a browser. I can't get the functional test part to work.
> 
> I have reduced the problem to what I think is a SSCCE. render_POST drops into a debugger to easily inspect the received request.
> 
> Here's the code: https://gist.github.com/3058974
> 
> When debugging this with wireshark I found an obvious culprit: there's some random junk in front of it (3 ASCII hex digits and a CRLF) and some junk at the end (CRLF and an ASCII "0", although I'm not sure if that CRLF is junk). Wireshark reports some broken TCP packets (PCAP attached). I have no idea why that happens. Packets were captured with:
> 
>    tcpdump -i lo0 -nn -s0 -w sample.pcap port 8080
> 
> and analyzed with a recent version of Wireshark (1.6.2, SVN rev 38931). The analyzed TCP stream is also attached.
> 
> <tcpdata.txt><test.pcap>
> 
> If I look at the request in the debugger (request_POST *DOES* get called?):
> 
> - it has an empty request.args, instead of having the expected keys "a", "b", "f"
> - request.content.getvalue() has the data you see in tcpdata.txt: it starts with "'1e7\r\n------------" even though I obviously would like it to start with just the dashes
> 
> cheers
> lvh
> 
> 
> 


From p.mayers at imperial.ac.uk  Fri Jul  6 05:39:31 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 10:39:31 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <972aa876-4926-4587-843e-80efb247d47c@email.android.com>


>some random junk in front of it (3 ASCII hex digits and a CRLF) and
>some junk at the end (CRLF and an ASCII "0", although I'm not sure if
>that CRLF is junk). Wireshark reports some broken TCP packets (PCAP

The hex/cr-lf is http chunked transfer format.
-- 
Sent from my phone. Please excuse brevity and typos.


From _ at lvh.cc  Fri Jul  6 05:52:07 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 11:52:07 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <972aa876-4926-4587-843e-80efb247d47c@email.android.com>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
Message-ID: <2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>

Aha, okay, so that's that possible culprit off the table. Thanks!

FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?

cheers
lvh



On 06 Jul 2012, at 11:39, Phil Mayers wrote:

> 
>> some random junk in front of it (3 ASCII hex digits and a CRLF) and
>> some junk at the end (CRLF and an ASCII "0", although I'm not sure if
>> that CRLF is junk). Wireshark reports some broken TCP packets (PCAP
> 
> The hex/cr-lf is http chunked transfer format.
> -- 
> Sent from my phone. Please excuse brevity and typos.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Fri Jul  6 06:08:36 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 12:08:36 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <3B814A92-5FED-45C5-A6AA-B77314E25899@lvh.cc>

Attached is an updated version of the client and server, including a 1x1 white JPEG pixel (that Paintbrush decides to make an entire 2.6kB, mostly due to i18n?).

This way you can actually make semantically identical requests using both your browser (don't change the input fields other than the file field) and the client.

TIA,
lvh

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Archive.zip
Type: application/zip
Size: 3903 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/6d67fe6c/attachment-0001.zip 
-------------- next part --------------
 

From p.mayers at imperial.ac.uk  Fri Jul  6 06:52:29 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 11:52:29 +0100
Subject: [Twisted-Python] Absent List-Id header? (was: Doing HTTP file
	uploads)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <4FF6C36D.5010206@imperial.ac.uk>

On 06/07/12 09:47, Laurens Van Houtven wrote:
> Hi,
>
> I have some code that takes file uploads from browsers. I'm trying to

Out of curiosity, I'm seeing no "List-Id" header in the posts that lvh 
makes; is anyone else seeing this?

The other mailman headers are there, but no List-Id.

I occasionally see this on other mailman lists, and don't know why it 
happens.


From p.mayers at imperial.ac.uk  Fri Jul  6 07:42:13 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 12:42:13 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
Message-ID: <4FF6CF15.7080106@imperial.ac.uk>

On 06/07/12 10:52, Laurens Van Houtven wrote:
> Aha, okay, so that's that possible culprit off the table. Thanks!
>
> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?

Good question. Unfortunately the Trac implementation is running slowly 
so I can't browse the HEAD code, but in my local copy I don't see any 
sign of chunked encoding handling in the client->server direction i.e. 
for request body.

So, I think not.

I'm not even sure chunked encoding is *legal* in HTTP request bodies; 
which client is generating this format?


From itamar at itamarst.org  Fri Jul  6 09:05:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 06 Jul 2012 09:05:26 -0400
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <4FF6CF15.7080106@imperial.ac.uk>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
	<4FF6CF15.7080106@imperial.ac.uk>
Message-ID: <4FF6E296.4040209@itamarst.org>

On 07/06/2012 07:42 AM, Phil Mayers wrote:
> On 06/07/12 10:52, Laurens Van Houtven wrote:
>> Aha, okay, so that's that possible culprit off the table. Thanks!
>>
>> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?
> Good question. Unfortunately the Trac implementation is running slowly
> so I can't browse the HEAD code, but in my local copy I don't see any
> sign of chunked encoding handling in the client->server direction i.e.
> for request body.

The server definitely supports chunked encoding; see 
twisted/web/http.py:1585.
> I'm not even sure chunked encoding is *legal* in HTTP request bodies;
> which client is generating this format?
>
It is legal: "All HTTP/1.1 applications MUST be able to receive and 
decode the "chunked" transfer-coding, and MUST ignore chunk-extension 
extensions they do not understand."


From p.mayers at imperial.ac.uk  Fri Jul  6 09:44:16 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 14:44:16 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <4FF6E296.4040209@itamarst.org>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
	<4FF6CF15.7080106@imperial.ac.uk> <4FF6E296.4040209@itamarst.org>
Message-ID: <4FF6EBB0.3060709@imperial.ac.uk>

On 06/07/12 14:05, Itamar Turner-Trauring wrote:
> On 07/06/2012 07:42 AM, Phil Mayers wrote:
>> On 06/07/12 10:52, Laurens Van Houtven wrote:
>>> Aha, okay, so that's that possible culprit off the table. Thanks!
>>>
>>> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?
>> Good question. Unfortunately the Trac implementation is running slowly
>> so I can't browse the HEAD code, but in my local copy I don't see any
>> sign of chunked encoding handling in the client->server direction i.e.
>> for request body.
>
> The server definitely supports chunked encoding; see
> twisted/web/http.py:1585.

Ah, didn't spot that.



From _ at lvh.cc  Fri Jul  6 10:26:52 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 16:26:52 +0200
Subject: [Twisted-Python] Absent List-Id header? (was: Doing HTTP file
	uploads)
In-Reply-To: <4FF6C36D.5010206@imperial.ac.uk>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
Message-ID: <CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>

Sorry, I hope this isn't causing you any issues!

FWIW my client is Mail.app on a fully updated Lion machine.

cheers
lvh

On Fri, Jul 6, 2012 at 12:52 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 06/07/12 09:47, Laurens Van Houtven wrote:
> > Hi,
> >
> > I have some code that takes file uploads from browsers. I'm trying to
>
> Out of curiosity, I'm seeing no "List-Id" header in the posts that lvh
> makes; is anyone else seeing this?
>
> The other mailman headers are there, but no List-Id.
>
> I occasionally see this on other mailman lists, and don't know why it
> happens.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/ee1524da/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Jul  6 12:04:46 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 17:04:46 +0100
Subject: [Twisted-Python] Absent List-Id header?
In-Reply-To: <CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
Message-ID: <4FF70C9E.2080007@imperial.ac.uk>

On 06/07/12 15:26, Laurens Van Houtven wrote:
> Sorry, I hope this isn't causing you any issues!

No biggie.

I *think* it must be messages with attachments; only your first two had 
that issue, the rest of the thread has List-Id.

It's probably mailman being dumb.


From cyli at twistedmatrix.com  Fri Jul  6 12:44:21 2012
From: cyli at twistedmatrix.com (Ying Li)
Date: Fri, 6 Jul 2012 09:44:21 -0700
Subject: [Twisted-Python] Twisted sprint and tutorial in San Francisco
Message-ID: <CA+Q0aKGanUPA1TTmDXbC7wB+utc-r5thwAq5+C+6RQgLiEPTNA@mail.gmail.com>

Hi all!

There will be a Twisted tutorial/learning session in San Francisco on
Friday, July 13th, at 7pm.  Glyph will be giving the tutorial, and
several developers will be on hand to help.

There will be a Twisted sprint the next day, Saturday July 14th, from
10am to 9pm (or later, if folks want to stay later!) - come whenever
and for however long you like.  Hack on Twisted or a Twisted-related
project, learn more about how to use Twisted, or just hang out.

Both events are hosted at Rackspace, which is located at 620 Folsom
St, Suite 100, San Francisco 94107.  (between 2nd St and Howard, or
2nd and 3rd if you prefer).

Please RSVP at:
http://www.meetup.com/San-Francisco-Twisted-Python-Meetup   (so we
know how much food and drink to get!)

Thanks!
-Ying


From barry at python.org  Fri Jul  6 15:16:35 2012
From: barry at python.org (Barry Warsaw)
Date: Fri, 6 Jul 2012 15:16:35 -0400
Subject: [Twisted-Python] Absent List-Id header?
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
	<4FF70C9E.2080007@imperial.ac.uk>
Message-ID: <20120706151635.5a84871d@resist.wooz.org>

On Jul 06, 2012, at 05:04 PM, Phil Mayers wrote:

>On 06/07/12 15:26, Laurens Van Houtven wrote:
>> Sorry, I hope this isn't causing you any issues!
>
>No biggie.
>
>I *think* it must be messages with attachments; only your first two had 
>that issue, the rest of the thread has List-Id.
>
>It's probably mailman being dumb.

Inconceivable!  <vizzini wink>

Reading the list via gmane, and looking at lvh's Message-IDs

<32FC267C-F4F6-4FBB-B553-15812751A7E2 at lvh.cc>
<3B814A92-5FED-45C5-A6AA-B77314E25899 at lvh.cc>

both of which contain attachments, I see the expected List-IDs.

-Barry
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/487b9940/attachment.pgp 

From hrqiang at gmail.com  Fri Jul  6 15:49:44 2012
From: hrqiang at gmail.com (RuiQiang Huang)
Date: Fri, 6 Jul 2012 12:49:44 -0700
Subject: [Twisted-Python] SIP protocol Via header doesn't compatible with
	SIP RFC3261.
Message-ID: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>

Via header is different between RFC2543 and RFC3261.
Based on RFC3261, Via header BNF is

    Via               =  ( "Via" / "v" ) HCOLON via-parm *(COMMA via-parm)
via-parm          =  sent-protocol LWS sent-by *( SEMI via-params )
via-params        =  via-ttl / via-maddr
                     / via-received / via-branch
                     / via-extension
via-ttl           =  "ttl" EQUAL ttl
via-maddr         =  "maddr" EQUAL host
via-received      =  "received" EQUAL (IPv4address / IPv6address)
via-branch        =  "branch" EQUAL token
via-extension     =  generic-param

That means parseViaHeader should return a tuple, instead of single via object.
Top via will be parse first via header and first element in the tuple.
This fix is required because if message coming from Via, and it inject
Via header like this
Via: SIP/2.0/UDP
192.84.13.26:5060;branch=z9hG4bK5af66076b7a656376f671478bb7a4b3f,SIP/2.0/UDP
192.168.1.145;branch=z9hG4bKfbbb8cf0FF120663;received=192.84.17.215;rport=13582
current SIP stack cannot send the response to 192.84.13.26:5060.
Instead, it sends to 192.84.13.26:13582 that never get to the other side.
So I fixed this to have my SIP program working with proxy.
I have a patch for this. Please let me know how to submit to SVN.

Thanks.


From glyph at twistedmatrix.com  Fri Jul  6 17:39:10 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 6 Jul 2012 14:39:10 -0700
Subject: [Twisted-Python] SIP protocol Via header doesn't compatible
	with SIP RFC3261.
In-Reply-To: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>
References: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>
Message-ID: <B5AE1D57-3803-4D79-B43C-75338CE63F5E@twistedmatrix.com>


On Jul 6, 2012, at 12:49 PM, RuiQiang Huang <hrqiang at gmail.com> wrote:

> I have a patch for this. Please let me know how to submit to SVN.

Search for tickets at <http://twistedmatrix.com/trac/search?q=&noquickjump=1&ticket=on>; if you can't find one, file a new one at <http://twistedmatrix.com/trac/newticket> and attach your patch.

<http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode> has all the relevant links to get you started.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120706/d983ea51/attachment.htm 

From tobias.oberstein at tavendo.de  Sat Jul  7 05:43:15 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 7 Jul 2012 02:43:15 -0700
Subject: [Twisted-Python] twisted.web.static.File and MIME types
Message-ID: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>

Hi,

I need to add MIME types to twisted.web.static.File.

The following works, but seems to use internal stuff .. whats the "correct" way to do?


from twisted.web.static import File

webdir = File(".")
webdir.contentTypes['.crt'] = 'application/x-x509-ca-cert'


http://twistedmatrix.com/documents/12.1.0/api/twisted.web.static.File.html


Cheers,
Tobias



From p.mayers at imperial.ac.uk  Sat Jul  7 06:35:29 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 07 Jul 2012 11:35:29 +0100
Subject: [Twisted-Python] Absent List-Id header?
In-Reply-To: <20120706151635.5a84871d@resist.wooz.org>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
	<4FF70C9E.2080007@imperial.ac.uk>
	<20120706151635.5a84871d@resist.wooz.org>
Message-ID: <85911fed-2a04-46cd-92e7-b00b7431ce62@email.android.com>


>Reading the list via gmane, and looking at lvh's Message-IDs
>
><32FC267C-F4F6-4FBB-B553-15812751A7E2 at lvh.cc>
><3B814A92-5FED-45C5-A6AA-B77314E25899 at lvh.cc>
>
>both of which contain attachments, I see the expected List-IDs.
>

Weird. Maybe it is at my end; I wonder if our exim config or spam filter is selectively mangling...
-- 
Sent from my phone. Please excuse brevity and typos.


From _ at lvh.cc  Sat Jul  7 07:32:44 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 13:32:44 +0200
Subject: [Twisted-Python] twisted.web.static.File and MIME types
In-Reply-To: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>

I'm pretty sure that's how you do it. No _, so it's public :)

Yes, it should be documented -- maybe a ticket is in order?


cheers
lvh



On 07 Jul 2012, at 11:43, Tobias Oberstein wrote:

> Hi,
> 
> I need to add MIME types to twisted.web.static.File.
> 
> The following works, but seems to use internal stuff .. whats the "correct" way to do?
> 
> 
> from twisted.web.static import File
> 
> webdir = File(".")
> webdir.contentTypes['.crt'] = 'application/x-x509-ca-cert'
> 
> 
> http://twistedmatrix.com/documents/12.1.0/api/twisted.web.static.File.html
> 
> 
> Cheers,
> Tobias
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Sat Jul  7 09:05:39 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 15:05:39 +0200
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
Message-ID: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>

Hey :)

As some of you probably know Stephen and I did the Twisted Tutorial at EuroPython.

Let me start off by saying that there was a lot of interest. A picture says a thousand words:



(We got upgraded to the bigger room because it was booked entirely and people were apparently still trying to get in -- that makes the Twisted tutorial the only one to be sold out before the conference even began, let alone doing that two years in a row!)

Overall it went pretty well, but given that we had Orestis' slides to build on that was a pretty safe bet :)

For next year, I think Stephen and I agree that a TDD approach to the exercises would be superior, because you'd acquaint people with trial and good software development practice at the same time. Plus, it's a lot clearer than human-langage specification of what an exercise solution should do ;) 

cheers
lvh



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120707/628aab1f/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Twisted tutorial.jpg
Type: image/jpg
Size: 32861 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120707/628aab1f/attachment-0001.jpg 

From tobias.oberstein at tavendo.de  Sat Jul  7 10:11:55 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 7 Jul 2012 07:11:55 -0700
Subject: [Twisted-Python] twisted.web.static.File and MIME types
In-Reply-To: <C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>
References: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
	<C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>
Message-ID: <634914A010D0B943A035D226786325D433794C87E9@EXVMBX020-12.exch020.serverdata.net>

> I'm pretty sure that's how you do it. No _, so it's public :)
> 
> Yes, it should be documented -- maybe a ticket is in order?

Thanks for looking. Done: http://twistedmatrix.com/trac/ticket/5739

Cheers,
Tobias 


From _ at lvh.cc  Sat Jul  7 10:57:16 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 16:57:16 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>

With a lot of help from idnar, the issue is resolved!

There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.

Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)


cheers
lvh



From _ at lvh.cc  Sat Jul  7 14:01:55 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 20:01:55 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
Message-ID: <8AB76D51-F166-44F3-BF19-56B932C318B1@lvh.cc>

Forgot the attachment (as itamar pointed out)



cheers
lvh



On 07 Jul 2012, at 16:57, Laurens Van Houtven wrote:

> With a lot of help from idnar, the issue is resolved!
> 
> There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.
> 
> Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)
> 
> 
> cheers
> lvh
> 



From _ at lvh.cc  Sat Jul  7 14:02:34 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 20:02:34 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
Message-ID: <7C808A8A-118C-445D-BE1A-6FD6D03E1932@lvh.cc>

Forgot the attachment? twice. Yay for new email clients I'm not used to
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client.py
Type: text/x-python-script
Size: 1389 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120707/7dfb9b58/attachment.bin 
-------------- next part --------------




cheers
lvh



On 07 Jul 2012, at 16:57, Laurens Van Houtven wrote:

> With a lot of help from idnar, the issue is resolved!
> 
> There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.
> 
> Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)
> 
> 
> cheers
> lvh
> 


From eric at teratorn.org  Sat Jul  7 21:32:08 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Sat, 7 Jul 2012 21:32:08 -0400
Subject: [Twisted-Python] Deserializing AMP callRemoteString without
 knowing the Command's signature
In-Reply-To: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
References: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
Message-ID: <20120708013208.GC5497@ragnarok.teratorn.org>

On Tue, Jun 26, 2012 at 02:09:59PM -0500, Laurens Van Houtven wrote:
> Hi,
> 
> As some of you may know I am working on a JSON-RPC <-> AMP bridge to
> consume AMP services from browsers. WIP: http://lvh.github.com/amphibian/
> 
> I've hit a failing integration test. I know what the issue is -- I don't
> know how to resolve it.
> 
> I attempted to write the proxy without any knowledge of the remote
> commands.

If my "proxy" you mean in the style of Python's built-in XMLRPC Proxy
class then I think that is the wrong approach for AMP - you have to have
Command signatures available ahead of time for a BINARY protocol.
Guessing just isn't any fun or even useful at all.

Static typing on the wire - yess.

> It assumes that the JSON provided satisfies the remote signature.
> If it doesn't -- that's okay, we'll get a failure back from the AMP server.
> So, I use callRemoteString and manually serialize by typechecking. Although
> that works for sending, the result I get back from callRemoteString is also
> in wire format. Because I don't know the signature, I have no idea if the
> sender meant 4, "4", u"4"...
 
Sure.

> On IRC:
> dreid pointed out that I really shouldn't need a language-specific
> implementation of a class for this to work
> teratorn pointed out that there is a JSON schema ticket for AMP. Perhaps
> there should also be a "DiscoverSchema" command?
 
I've been calling that "Service Discovery" or "Route Discovery" for a while.
And yes, we should have *something* allowing AMP to complete effectively in
the "webservice" space (whatever that is).

The ticket for an AMP Schema is #5532
(http://twistedmatrix.com/trac/ticket/5532)

I would suggest extending the existing proposal with route
information. 

I'm a little bit unclear on what an AMP route is, but as I understand
it, it is basically a set of AMP Commands that are available at some
known location - useful for segregating functionality (pre-login,
post-login, user, admin, etc). Glyph, is that right?

There is some code from Divmod lying around somewhere that needs to be
looked at.

There is a ticket for AMP URLs that include route paths. #5548
(http://twistedmatrix.com/trac/ticket/5548)

This would be a great area for someone to come in and try and connect
these disparate threads together!

--
-E


From glyph at twistedmatrix.com  Sat Jul  7 23:47:08 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 7 Jul 2012 20:47:08 -0700
Subject: [Twisted-Python] Deserializing AMP callRemoteString without
	knowing the Command's signature
In-Reply-To: <20120708013208.GC5497@ragnarok.teratorn.org>
References: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
	<20120708013208.GC5497@ragnarok.teratorn.org>
Message-ID: <E66019CE-D86D-4607-99B1-1329B4E9F41C@twistedmatrix.com>


On Jul 7, 2012, at 6:32 PM, "Eric P. Mangold" <eric at teratorn.org> wrote:

> I'm a little bit unclear on what an AMP route is, but as I understand
> it, it is basically a set of AMP Commands that are available at some
> known location - useful for segregating functionality (pre-login,
> post-login, user, admin, etc). Glyph, is that right?

It's not really the set of commands, so much as it is an identified endpoint for AMP boxes, so that you can multiplex them over a single connection.  The general idea is that you stick an extra key ("_route") into the box, and that tells it where to go on the other end of the connection, so you can easily have as many parallel AMP streams as you want with only one TCP connection.  No protocol switching if you want to do this, of course.

Of course, your peer on a particular route will have a specific set of commands available, but so will the "root" route, i.e. the thing that you are talking to when you establish a TCP connection.  (Plus, maybe you get some extra or different stuff after you authenticate.)

But your peer on a particular route might be a completely dumb IBoxReceiver without even command-dispatch logic.

You can see an implementation of this here: <http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Epsilon/epsilon/amprouter.py>.  (And I could swear there's a twisted ticket to integrate this but I can't find it in a quick search.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120707/202600c2/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jul  8 00:05:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Jul 2012 04:05:51 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1341720351.81.1762135871@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120708/96e75b9e/attachment-0001.htm 

From adi at roiban.ro  Sun Jul  8 10:28:13 2012
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 8 Jul 2012 17:28:13 +0300
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
In-Reply-To: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
References: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
Message-ID: <CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>

On 7 July 2012 16:05, Laurens Van Houtven <_ at lvh.cc> wrote:
>
> Hey :)
>
> As some of you probably know Stephen and I did the Twisted Tutorial at
> EuroPython.
>
> Let me start off by saying that there was a lot of interest. A picture
> says a thousand words:
>

Congrats for the the tutorial!

I don't know if the Twisted HelpDesk was as popular as the tutorial,
but I would like to thank Laurens for dedicating time for the
helpdesk. At least for me the helpesk was very useful.

Cheers,
--
Adi Roiban


From _ at lvh.cc  Sun Jul  8 12:23:32 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 8 Jul 2012 18:23:32 +0200
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
In-Reply-To: <CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>
References: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
	<CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>
Message-ID: <CAE_Hg6Z1Jyy6u8bX2nGN17QJ8nMAgGzBmu9hUA=Sv+npyqb5tA@mail.gmail.com>

Oh, yes, that reminds me: I should talk about the helpdesk :)

The format is basically that someone sits at a predefined location from
conference start 'till lunch (9:00 - 13:00 -- but you should probably be
there at least 15 minutes earlier). There's a way for people to sign up and
reserve a slot, but you also get a lot of people randomly walking past,
especially in between talks.

People come up to me with anything and everything they'd like to know about
Twisted.

Adi and Jacob Hallen had questions about ongoing development activity
(about ftp and Divmod Nevow respectively).

Most of the questions were fortunately pretty easy/quick fixes and involved
pointing people to the appropriate support sources, documentation, modules,
functions... Stuff like "How do I wait on mulitple deferreds", "How do I
work around blocking libraries" etc

Fortunately the only loaded question was during the tutorial (about gevent
;))


On Sun, Jul 8, 2012 at 4:28 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 7 July 2012 16:05, Laurens Van Houtven <_ at lvh.cc> wrote:
> >
> > Hey :)
> >
> > As some of you probably know Stephen and I did the Twisted Tutorial at
> > EuroPython.
> >
> > Let me start off by saying that there was a lot of interest. A picture
> > says a thousand words:
> >
>
> Congrats for the the tutorial!
>
> I don't know if the Twisted HelpDesk was as popular as the tutorial,
> but I would like to thank Laurens for dedicating time for the
> helpdesk. At least for me the helpesk was very useful.
>
> Cheers,
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120708/f58f5ade/attachment.htm 

From paulswartz at gmail.com  Sun Jul  8 13:52:17 2012
From: paulswartz at gmail.com (Paul Swartz)
Date: Sun, 8 Jul 2012 13:52:17 -0400
Subject: [Twisted-Python] Buildbot for PyCrypto 2.6?
Message-ID: <CAJPQj++-nw68=9O_bCp34YXrV6gac72DQOHvUr-8ZOws=9b_Pg@mail.gmail.com>

Per http://tm.tl/5700, newer versions of PyCrypto fail the current
test cases.  At the moment, all the buildbots are running PyCrypto
2.5.  Can we upgrade one of them, or start a new buildbox, to test
against the newer version?

thanks,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/


From kang7213 at gmail.com  Mon Jul  9 01:51:10 2012
From: kang7213 at gmail.com (kangta123)
Date: Mon, 9 Jul 2012 13:51:10 +0800
Subject: [Twisted-Python] Send messages in an Infinite loop
Message-ID: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>

Hello all:

I am newbie to use twisted. I want to send message in an Infinite loop in
server, such as send a timestamp each 5s to all clients. i have tried to
use like "deferToThread"  and "callFromThread", but i am failed.if have any
suggestions please tell me.

thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120709/eba944c6/attachment.htm 

From justin.venus at gmail.com  Mon Jul  9 01:59:45 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Mon, 9 Jul 2012 00:59:45 -0500
Subject: [Twisted-Python] Send messages in an Infinite loop
In-Reply-To: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>
References: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>
Message-ID: <CACL=7asZ2t_+sDkACRidDvHVF4Nm5JyruPqdUOLyBmjec=j2OA@mail.gmail.com>

Look at twisted.internet.task.LoopingCall.

Justin Venus
On Jul 9, 2012 12:53 AM, "kangta123" <kang7213 at gmail.com> wrote:

> Hello all:
>
> I am newbie to use twisted. I want to send message in an Infinite loop in
> server, such as send a timestamp each 5s to all clients. i have tried to
> use like "deferToThread"  and "callFromThread", but i am failed.if have any
> suggestions please tell me.
>
> thanks.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120709/cc1ac738/attachment.htm 

From tenth at twistedmatrix.com  Mon Jul  9 15:57:37 2012
From: tenth at twistedmatrix.com (Tenth)
Date: Mon, 9 Jul 2012 15:57:37 -0400
Subject: [Twisted-Python]  Boston Twisted Sprint: MIT, July 14th
Message-ID: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>

I'm pleased to finally announce another Boston area Twisted Sprint, on
Saturday, July 14th, on the MIT Campus.

Thanks to Jessica McKellar's tireless efforts, Building 8, Room 119 will be
reserved for Twisted hacking from 12:00 PM to 11:00 PM.

If you're interested, and haven't received a formal invitation, I'd be
happy to add you to the list; This includes more specific information about
how to find the site and contact the organizers.

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120709/a99c1a7c/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul  9 18:03:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 9 Jul 2012 15:03:46 -0700
Subject: [Twisted-Python] Boston Twisted Sprint: MIT, July 14th
In-Reply-To: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>
References: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>
Message-ID: <E98A0D6C-C9E5-421B-AC57-82E169A8A6F6@twistedmatrix.com>


Le Jul 9, 2012 ? 12:57 PM, Tenth <tenth at twistedmatrix.com> a ?crit :

> I'm pleased to finally announce another Boston area Twisted Sprint, on Saturday, July 14th, on the MIT Campus.
> 
> Thanks to Jessica McKellar's tireless efforts, Building 8, Room 119 will be reserved for Twisted hacking from 12:00 PM to 11:00 PM.
> 
> If you're interested, and haven't received a formal invitation, I'd be happy to add you to the list; This includes more specific information about how to find the site and contact the organizers.

The July San Francisco Twisted sprint (in case, somehow, you haven't already gotten a link to it, you can find it here: <http://www.meetup.com/San-Francisco-Twisted-Python-Meetup/events/71296702/>) is starting at 10AM PST, which means that the east coast has an hour head-start.

This means that if you're sprinting along in Boston, you have an extra opportunity to get your ticket submissions reviewed when the  participants on this coast, including myself, start showing up.  This is our first real simultaneous multi-location sprint and I am excited to see how it turns out!

-glyph



From augustocaringi at gmail.com  Tue Jul 10 11:14:27 2012
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Tue, 10 Jul 2012 12:14:27 -0300
Subject: [Twisted-Python] Twisted in a multicore environment
Message-ID: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>

Hi,

    I'm researching the best way to implement/use a Twisted-based
server in a multicore environment...

    There is the Ampoule project, that I realize is considered the
best way to do that. Right?

    I'm also reading about the internals of Nginx HTTP server. This
server utilizes the same reactor pattern of Twisted (epoll based)...

    "What resulted is a modular, event-driven, asynchronous,
single-threaded, non-blocking architecture which became the foundation
of nginx code." http://www.aosabook.org/en/nginx.html

    But to maximize the use of processors in a multicore environment,
Nginx do this:

    "nginx doesn't spawn a process or thread for every connection.
Instead, worker processes accept new requests from a shared "listen"
socket and execute a highly efficient run-loop inside each worker to
process thousands of connections per worker"

    My question: There is something similar in Twisted? Or do you
think that is easy to implement something like that?

    Thanks!

-- 
Augusto Mecking Caringi


From exarkun at twistedmatrix.com  Tue Jul 10 12:03:38 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Jul 2012 16:03:38 -0000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
Message-ID: <20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>

On 03:14 pm, augustocaringi at gmail.com wrote:
>Hi,
>
>    I'm researching the best way to implement/use a Twisted-based
>server in a multicore environment...
>
>    There is the Ampoule project, that I realize is considered the
>best way to do that. Right?

It's a way.  "Best" depends on the details and goals of the project.

Here's a stackoverflow question/answer on basically the same topic.  In 
particular, it specifically answers the question of a listening port 
shared between multiple processes and gives examples of how to do this:

  http://bit.ly/MiCHtQ

Jean-Paul
>    I'm also reading about the internals of Nginx HTTP server. This
>server utilizes the same reactor pattern of Twisted (epoll based)...
>
>    "What resulted is a modular, event-driven, asynchronous,
>single-threaded, non-blocking architecture which became the foundation
>of nginx code." http://www.aosabook.org/en/nginx.html
>
>    But to maximize the use of processors in a multicore environment,
>Nginx do this:
>
>    "nginx doesn't spawn a process or thread for every connection.
>Instead, worker processes accept new requests from a shared "listen"
>socket and execute a highly efficient run-loop inside each worker to
>process thousands of connections per worker"
>
>    My question: There is something similar in Twisted? Or do you
>think that is easy to implement something like that?
>
>    Thanks!
>
>--
>Augusto Mecking Caringi
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From _ at lvh.cc  Tue Jul 10 12:17:40 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 10 Jul 2012 18:17:40 +0200
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>

FWIW,  I have used Ampoule to great effect, but as JP points out it's hardly the only option. You're bound to end up with some measure of multiprocessing. Bear in mind that not all workloads are well-suited for this kind of problem! Always measure before deciding to make your codebase that much more complicated :)


cheers
lvh



On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:

> On 03:14 pm, augustocaringi at gmail.com wrote:
>> Hi,
>> 
>>   I'm researching the best way to implement/use a Twisted-based
>> server in a multicore environment...
>> 
>>   There is the Ampoule project, that I realize is considered the
>> best way to do that. Right?
> 
> It's a way.  "Best" depends on the details and goals of the project.
> 
> Here's a stackoverflow question/answer on basically the same topic.  In 
> particular, it specifically answers the question of a listening port 
> shared between multiple processes and gives examples of how to do this:
> 
>  http://bit.ly/MiCHtQ
> 
> Jean-Paul
>>   I'm also reading about the internals of Nginx HTTP server. This
>> server utilizes the same reactor pattern of Twisted (epoll based)...
>> 
>>   "What resulted is a modular, event-driven, asynchronous,
>> single-threaded, non-blocking architecture which became the foundation
>> of nginx code." http://www.aosabook.org/en/nginx.html
>> 
>>   But to maximize the use of processors in a multicore environment,
>> Nginx do this:
>> 
>>   "nginx doesn't spawn a process or thread for every connection.
>> Instead, worker processes accept new requests from a shared "listen"
>> socket and execute a highly efficient run-loop inside each worker to
>> process thousands of connections per worker"
>> 
>>   My question: There is something similar in Twisted? Or do you
>> think that is easy to implement something like that?
>> 
>>   Thanks!
>> 
>> --
>> Augusto Mecking Caringi
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From eric at teratorn.org  Tue Jul 10 13:33:59 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 10 Jul 2012 13:33:59 -0400
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20460.63980.237850.10155@jon.es>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<20460.56189.932953.706603@jon.es>
	<C213BB82-DF94-4E53-BF0B-D70D5E83CA30@twistedmatrix.com>
	<20460.63980.237850.10155@jon.es>
Message-ID: <20120710173359.GF5497@ragnarok.teratorn.org>

On Thu, Jun 28, 2012 at 08:42:20PM -0400, Terry Jones wrote:
> Hi Glyph!
> 
> There are a couple of tickets floating around:
> 
>   http://twistedmatrix.com/trac/ticket/3858
>   http://twistedmatrix.com/trac/ticket/1402 (closed as a dupe)

Please work on this!! I've had the idea in my head for a visualizer for
years and years, but always managled to muddle through tought asyc
debugging somehow... (a testament to the cause), but still - it would be
good to have better introspection / logging / debugging tools.

And a graph-oriented visualizer would be a great start.
--
-E


From werner at thieprojects.ch  Tue Jul 10 14:08:53 2012
From: werner at thieprojects.ch (Werner Thie)
Date: Tue, 10 Jul 2012 08:08:53 -1000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
Message-ID: <4FFC6FB5.7040301@thieprojects.ch>

On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> FWIW,  I have used Ampoule to great effect, but as JP points out it's hardly the only option. You're bound to end up with some measure of multiprocessing. Bear in mind that not all workloads are well-suited for this kind of problem! Always measure before deciding to make your codebase that much more complicated :)
>
>
> cheers
> lvh
>
>
>
> On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:
>
>> On 03:14 pm, augustocaringi at gmail.com wrote:
>>> Hi,
>>>
>>>    I'm researching the best way to implement/use a Twisted-based
>>> server in a multicore environment...
>>>
>>>    There is the Ampoule project, that I realize is considered the
>>> best way to do that. Right?
>>
>> It's a way.  "Best" depends on the details and goals of the project.
>>
>> Here's a stackoverflow question/answer on basically the same topic.  In
>> particular, it specifically answers the question of a listening port
>> shared between multiple processes and gives examples of how to do this:
>>
>>   http://bit.ly/MiCHtQ
>>
>> Jean-Paul
>>>    I'm also reading about the internals of Nginx HTTP server. This
>>> server utilizes the same reactor pattern of Twisted (epoll based)...
>>>
>>>    "What resulted is a modular, event-driven, asynchronous,
>>> single-threaded, non-blocking architecture which became the foundation
>>> of nginx code." http://www.aosabook.org/en/nginx.html
>>>
>>>    But to maximize the use of processors in a multicore environment,
>>> Nginx do this:
>>>
>>>    "nginx doesn't spawn a process or thread for every connection.
>>> Instead, worker processes accept new requests from a shared "listen"
>>> socket and execute a highly efficient run-loop inside each worker to
>>> process thousands of connections per worker"
>>>
>>>    My question: There is something similar in Twisted? Or do you
>>> think that is easy to implement something like that?
>>>
>>>    Thanks!
>>>
>>> --
>>> Augusto Mecking Caringi
We observed really great scaling on multi cores with moving the 
application part either to ampoule for PDF production or in the other 
case I wrote an implementation of self regulating process pool based on 
spread, leaving only the serving to twisted in both cases.

With handing work out to other processes you get another benefit which 
is isolation of python, which is the only way to use a package, like 
reportlab which survives no sort of reentrancy, for a webservice.

Werner


From bernat at luffy.cx  Thu Jul 12 02:10:45 2012
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 12 Jul 2012 08:10:45 +0200
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <4FFC6FB5.7040301@thieprojects.ch> (Werner Thie's message of
	"Tue, 10 Jul 2012 08:08:53 -1000")
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
Message-ID: <m3394xik62.fsf@neo.luffy.cx>

 ? 10 juillet 2012 20:08 CEST, Werner Thie <werner at thieprojects.ch>?:

> We observed really great scaling on multi cores with moving the 
> application part either to ampoule for PDF production or in the other 
> case I wrote an implementation of self regulating process pool based on 
> spread, leaving only the serving to twisted in both cases.

Is there something similar to Ampoule but allowing to spawn processes
across different servers? Something that would provide
"deferToRemoteAMPProcess".
-- 
Don't patch bad code - rewrite it.
            - The Elements of Programming Style (Kernighan & Plauger)


From mithrandi at mithrandi.net  Thu Jul 12 05:17:42 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 12 Jul 2012 11:17:42 +0200
Subject: [Twisted-Python] Logging observers and threads
Message-ID: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>

When an error occurs in a database connection thread, adbapi invokes
log.err from that thread, which in turns causes log observers to be
invoked in this thread. Mantissa's TracebackCollector has a log
observer which logs items as Items in an Axiom store; this means that
the log observer tries to run SQLite queries in the wrong thread, and
explodes. However, I'm not sure whose fault this is; it seems there
are three possibilities:

1) log.err and log.msg should not be called from a non-reactor thread,
making this an adbapi bug.
2) twisted.python.log should not invoke log observers in a non-reactor
thread, making this a twisted.python.log bug.
3) log observers should expect to be inovked in non-reactor threads,
making this a Mantissa bug.

Can anyone give a definitive answer on this? The "nothing except
reactor.callFromThread is thread-safe" principle would suggest that 1)
is the case, but logging seems like it might be a special case.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From itamar at itamarst.org  Thu Jul 12 07:32:25 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 12 Jul 2012 07:32:25 -0400
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
Message-ID: <4FFEB5C9.4@itamarst.org>

On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
> 3) log observers should expect to be inovked in non-reactor threads,
> making this a Mantissa bug.
>
In theory this is the case - the logging howto says "The observer needs 
to be thread safe if you anticipate using threads in your program." The 
API docs don't mention threads, though..

In practice however, probably every custom observer gets this wrong, so 
we really need some infrastructure to make this easier or to fix it. 
Possibly we should have some way to indicate an observer is thread-safe, 
assume by default they are not, and if they are not wrap them in a 
reactor.callFromThread wrapper.

I would also like some infrastructure to make the file log observer run 
in its own thread, but that's almost the opposite use case :)

-Itamar


From cds at corbinsimpson.com  Thu Jul 12 08:58:20 2012
From: cds at corbinsimpson.com (Corbin Simpson)
Date: Thu, 12 Jul 2012 05:58:20 -0700
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <m3394xik62.fsf@neo.luffy.cx>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch> <m3394xik62.fsf@neo.luffy.cx>
Message-ID: <20120712125820.GB20336@ps35699.dreamhostps.com>

On Thu, Jul 12, 2012 at 08:10:45AM +0200, Vincent Bernat wrote:
> Is there something similar to Ampoule but allowing to spawn processes
> across different servers? Something that would provide
> "deferToRemoteAMPProcess".

AFAIK, not exactly. You can pretty easily craft this yourself, though.

The main problem is figuring out how to ask your remote server to spawn
the very first Twisted instance; once you've got that, you can spawn
workers through Ampoule that will connect to the master and communicate
using the same AMP description. It might be easier, at that point, to
just build a small dispatcher for your AMP commands and do it all
explicitly. I guess it would depend on your needs.

~ C.


From exarkun at twistedmatrix.com  Thu Jul 12 09:47:03 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 13:47:03 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <4FFEB5C9.4@itamarst.org>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
Message-ID: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>

On 11:32 am, itamar at itamarst.org wrote:
>On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
>>3) log observers should expect to be inovked in non-reactor threads,
>>making this a Mantissa bug.
>In theory this is the case - the logging howto says "The observer needs
>to be thread safe if you anticipate using threads in your program." The
>API docs don't mention threads, though..
>
>In practice however, probably every custom observer gets this wrong, so
>we really need some infrastructure to make this easier or to fix it.
>Possibly we should have some way to indicate an observer is thread- 
>safe,
>assume by default they are not, and if they are not wrap them in a
>reactor.callFromThread wrapper.

The logging system is already a bottleneck in some applications.  Doing 
even more work to try to make it properly thread-safe will probably slow 
it down even more.

I think it was a mistake to try to make it possible to use 
twisted.python.log free-threaded.  I think we should think about getting 
rid of this claimed feature.  Perhaps it could be replaced with a more 
explicit, probably more restricted, logging feature for non-reactor 
threads.

Unless someone can magically fix the threading issues without hurting 
performance.  Then, great, go for it.
>I would also like some infrastructure to make the file log observer run
>in its own thread, but that's almost the opposite use case :)

Sure, but that's probably based on top of an asynchronous file I/O API 
that's not explicitly thread-based (but probably is thread-based in 
practice, because what other kind of asynchronous file I/O even exists).

Also, to explicitly answer Tristan's question:

    It's a bug in the Mantissa log observer.

Jean-Paul


From justin.venus at gmail.com  Thu Jul 12 09:56:20 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Thu, 12 Jul 2012 08:56:20 -0500
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
Message-ID: <CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>

For logging could we look at implementing posix aio on platforms that
support it?  I would be willing to help code that.

Justin
On Jul 12, 2012 8:51 AM, <exarkun at twistedmatrix.com> wrote:

> On 11:32 am, itamar at itamarst.org wrote:
> >On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
> >>3) log observers should expect to be inovked in non-reactor threads,
> >>making this a Mantissa bug.
> >In theory this is the case - the logging howto says "The observer needs
> >to be thread safe if you anticipate using threads in your program." The
> >API docs don't mention threads, though..
> >
> >In practice however, probably every custom observer gets this wrong, so
> >we really need some infrastructure to make this easier or to fix it.
> >Possibly we should have some way to indicate an observer is thread-
> >safe,
> >assume by default they are not, and if they are not wrap them in a
> >reactor.callFromThread wrapper.
>
> The logging system is already a bottleneck in some applications.  Doing
> even more work to try to make it properly thread-safe will probably slow
> it down even more.
>
> I think it was a mistake to try to make it possible to use
> twisted.python.log free-threaded.  I think we should think about getting
> rid of this claimed feature.  Perhaps it could be replaced with a more
> explicit, probably more restricted, logging feature for non-reactor
> threads.
>
> Unless someone can magically fix the threading issues without hurting
> performance.  Then, great, go for it.
> >I would also like some infrastructure to make the file log observer run
> >in its own thread, but that's almost the opposite use case :)
>
> Sure, but that's probably based on top of an asynchronous file I/O API
> that's not explicitly thread-based (but probably is thread-based in
> practice, because what other kind of asynchronous file I/O even exists).
>
> Also, to explicitly answer Tristan's question:
>
>     It's a bug in the Mantissa log observer.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120712/5b6be496/attachment.htm 

From exarkun at twistedmatrix.com  Thu Jul 12 10:32:06 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 14:32:06 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
Message-ID: <20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>

On 01:56 pm, justin.venus at gmail.com wrote:
>For logging could we look at implementing posix aio on platforms that
>support it?  I would be willing to help code that.

As far as I know, all of the implementations of POSIX AIO are relatively 
low quality.  They include a number of tricky, low-level constraints 
(eg, char* to write must be page aligned) as well as some sad functional 
limitations such as blocking instead of being asynchronous if too many 
AIOs are started concurrently (with this limit applying to AIOs *system 
wide* in some cases).

If there are any good implementations, or prospects of thes 
implementations getting good sometime in the near future, it might be 
worth exploring, but I don't think it's something we can rely on now.

See also this stackoverflow question: http://bit.ly/NqWd5b

Corrections welcome, I haven't checked on the state of this in a few 
months.

Jean-Paul
>Justin
>On Jul 12, 2012 8:51 AM, <exarkun at twistedmatrix.com> wrote:
>>On 11:32 am, itamar at itamarst.org wrote:
>> >On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
>> >>3) log observers should expect to be inovked in non-reactor threads,
>> >>making this a Mantissa bug.
>> >In theory this is the case - the logging howto says "The observer 
>>needs
>> >to be thread safe if you anticipate using threads in your program." 
>>The
>> >API docs don't mention threads, though..
>> >
>> >In practice however, probably every custom observer gets this wrong, 
>>so
>> >we really need some infrastructure to make this easier or to fix it.
>> >Possibly we should have some way to indicate an observer is thread-
>> >safe,
>> >assume by default they are not, and if they are not wrap them in a
>> >reactor.callFromThread wrapper.
>>
>>The logging system is already a bottleneck in some applications. 
>>Doing
>>even more work to try to make it properly thread-safe will probably 
>>slow
>>it down even more.
>>
>>I think it was a mistake to try to make it possible to use
>>twisted.python.log free-threaded.  I think we should think about 
>>getting
>>rid of this claimed feature.  Perhaps it could be replaced with a more
>>explicit, probably more restricted, logging feature for non-reactor
>>threads.
>>
>>Unless someone can magically fix the threading issues without hurting
>>performance.  Then, great, go for it.
>> >I would also like some infrastructure to make the file log observer 
>>run
>> >in its own thread, but that's almost the opposite use case :)
>>
>>Sure, but that's probably based on top of an asynchronous file I/O API
>>that's not explicitly thread-based (but probably is thread-based in
>>practice, because what other kind of asynchronous file I/O even 
>>exists).
>>
>>Also, to explicitly answer Tristan's question:
>>
>>     It's a bug in the Mantissa log observer.
>>
>>Jean-Paul
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From tobias.oberstein at tavendo.de  Thu Jul 12 11:26:11 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jul 2012 08:26:11 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>

> As far as I know, all of the implementations of POSIX AIO are relatively low
> quality.  They include a number of tricky, low-level constraints (eg, char* to
> write must be page aligned) as well as some sad functional limitations such as
> blocking instead of being asynchronous if too many AIOs are started
> concurrently (with this limit applying to AIOs *system
> wide* in some cases).
> 
> If there are any good implementations, or prospects of thes implementations
> getting good sometime in the near future, it might be worth exploring, but I
> don't think it's something we can rely on now.

I have been looking into "libuv" a little .. it not only provides wrappers around epoll/kqueue/IOCP for networking,
but also provides a unified API for asynchronous File I/O .. I _think_ on Posix it uses the usual background thread pool
approach to work around flaky AIO (and also to provide asynch _open_ and everyhting else from Posix File IO), but
it also on Windows uses Overlapped IO when possible (which is the right thing to do there, since asynch File IO works
since Windows NT 3.5 using that). It also does asynch DNS lookup etc. 


From rowen at uw.edu  Thu Jul 12 11:36:39 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Thu, 12 Jul 2012 08:36:39 -0700
Subject: [Twisted-Python] A few simple questions
Message-ID: <rowen-47FF40.08363912072012@news.gmane.org>

I'm adding Twisted support to some existing communication code and I 
have a few questions which I hope are simple. I've been reading the API 
documentation, but if the answers are there I'm missing them.

What happens if one tries to write to a protocol.transport that is not 
connected or in an error state? (I'm hoping that this case has defined 
behavior and that it will raise an exception).

Is there some way to query a protocol to see if it is in a good state 
(connected and no errors)? I realize with callbacks this is not usually 
necessary, but I have a case where it would be helpful (though I can 
probably manage without it).

When reading raw bytes, is there any way to get the bytes from the 
protocol? I assume not: that if one wants to buffer the data one must do 
that in the callback. If so, does Twisted provide a suitable buffer 
class?

-- Russell



From _ at lvh.cc  Thu Jul 12 12:02:26 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 12 Jul 2012 18:02:26 +0200
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-47FF40.08363912072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
Message-ID: <CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>

On Thursday, July 12, 2012, Russell E. Owen wrote:

> I'm adding Twisted support to some existing communication code and I
> have a few questions which I hope are simple. I've been reading the API
> documentation, but if the answers are there I'm missing them.
>
> What happens if one tries to write to a protocol.transport that is not
> connected or in an error state? (I'm hoping that this case has defined
> behavior and that it will raise an exception).


Not connected usually means that protocol.transport is None


>
> Is there some way to query a protocol to see if it is in a good state
> (connected and no errors)? I realize with callbacks this is not usually
> necessary, but I have a case where it would be helpful (though I can
> probably manage without it).


Can you elaborate on the case?


>
> When reading raw bytes, is there any way to get the bytes from the
> protocol? I assume not: that if one wants to buffer the data one must do
> that in the callback. If so, does Twisted provide a suitable buffer
> class?


The protocol gets dataReceivrd called. What kind of buffering do you want
to do and why? Would a simple StringIO suffice?


>
> -- Russell
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <javascript:;>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120712/f36dff13/attachment.htm 

From exarkun at twistedmatrix.com  Thu Jul 12 13:52:15 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 17:52:15 -0000
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
Message-ID: <20120712175215.2871.1958114921.divmod.xquotient.22@localhost6.localdomain6>

On 04:02 pm, _ at lvh.cc wrote:
>On Thursday, July 12, 2012, Russell E. Owen wrote:
>>I'm adding Twisted support to some existing communication code and I
>>have a few questions which I hope are simple. I've been reading the 
>>API
>>documentation, but if the answers are there I'm missing them.
>>
>>What happens if one tries to write to a protocol.transport that is not
>>connected or in an error state? (I'm hoping that this case has defined
>>behavior and that it will raise an exception).
>
>
>Not connected usually means that protocol.transport is None

I don't think you'll find this to be true.

Not connected means makeConnection hasn't yet been called or 
connectionLost has been called.  Anything else you want, you need to 
build yourself (and given those two callbacks, it should be obvious how 
to build something simple to tell you this).

Jean-Paul


From glyph at twistedmatrix.com  Thu Jul 12 13:54:47 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 12 Jul 2012 10:54:47 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>


Le Jul 12, 2012 ? 8:26 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> a ?crit :

>> As far as I know, all of the implementations of POSIX AIO are relatively low
>> quality.  They include a number of tricky, low-level constraints (eg, char* to
>> write must be page aligned) as well as some sad functional limitations such as
>> blocking instead of being asynchronous if too many AIOs are started
>> concurrently (with this limit applying to AIOs *system
>> wide* in some cases).
>> 
>> If there are any good implementations, or prospects of thes implementations
>> getting good sometime in the near future, it might be worth exploring, but I
>> don't think it's something we can rely on now.
> 
> I have been looking into "libuv" a little .. it not only provides wrappers around epoll/kqueue/IOCP for networking,
> but also provides a unified API for asynchronous File I/O .. I _think_ on Posix it uses the usual background thread pool
> approach to work around flaky AIO (and also to provide asynch _open_ and everyhting else from Posix File IO), but
> it also on Windows uses Overlapped IO when possible (which is the right thing to do there, since asynch File IO works
> since Windows NT 3.5 using that). It also does asynch DNS lookup etc. 

libuv is a giant pile of new, unaudited C code that didn't even have a passing test suite until a month or two ago.  Please feel free to write a reactor for it; better interop with node.js would be great, but it's definitely not a place we should go looking for new core features.

The tricky part of this is not implementation; on today's OSes (except maaaaybe solaris?), you just have to use threads or subprocesses, end of story.  The tricky part is finding an interface for things that is nice and general and isn't just a Deferred that fires with a Deferred with a Deferred on top.

So, <http://tm.tl/1956>, probably.  If we're all lucky I'll have some time to move the ball on that on Saturday.

-glyph

From glyph at twistedmatrix.com  Thu Jul 12 13:57:06 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 12 Jul 2012 10:57:06 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
Message-ID: <4054D0C9-33C1-4B50-AC02-8E4EA2BBD316@twistedmatrix.com>

Le Jul 12, 2012 ? 6:47 AM, exarkun at twistedmatrix.com a ?crit :

> I think it was a mistake to try to make it possible to use 
> twisted.python.log free-threaded.  I think we should think about getting 
> rid of this claimed feature.  Perhaps it could be replaced with a more 
> explicit, probably more restricted, logging feature for non-reactor 
> threads.

Perhaps so.  Does this really need to be more complicated than just reactor.callFromThread, though?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120712/aa19dcf0/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Jul 12 15:33:54 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jul 2012 12:33:54 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
	<0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>

> libuv is a giant pile of new, unaudited C code that didn't even have a passing
> test suite until a month or two ago.  Please feel free to write a reactor for it;


From dan at wingu.com  Thu Jul 12 16:31:09 2012
From: dan at wingu.com (Dan Milstein)
Date: Thu, 12 Jul 2012 16:31:09 -0400
Subject: [Twisted-Python] How to best log server/client interactions from a
	test?
Message-ID: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>

'lo all,

I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).

When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?

To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:

    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
    return d

What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  

Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?

Thanks,
-Dan

From rgacote at appropriatesolutions.com  Thu Jul 12 16:44:32 2012
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Thu, 12 Jul 2012 16:44:32 -0400 (EDT)
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
Message-ID: <18982036.806.1342125868780.JavaMail.rgacote@Ray-iMac-2011.local>

Hi Augusto:

You don't mention the protocol you're implementing in Twisted, but if is is HTTP...

The way we address this problem with an HTTP protocol is to put 
multiple copies of Twisted behind nginx. 

On two and four core machines, we set the number of nginx worker processes equal 
to the number of CPU cores (as recommend by nginx docs). 
We then install one Twisted server instance per core.
We then have nginx round-robin proxy into the Twisted instances.

On a larger system (such as eight cores) we'd set up four nginx worker processes
and four Twisted services; or perhaps two nginx worker processes and six Twisted
services. Particularly when we're running HTTPS and the 
nginx Web Application Firewall which can consume a fair bit of CPU. 

Final balancing between nginx and Twisted core is obviously dependent on where the
heaviest computation appears. 

We find this balancing act works well and, since we know the number of 
cores on a box when we're deploying, we're rarely interested in the ability to 
add/remove Twisted instances on the fly. 

--Ray


----- Original Message -----
> From: "Augusto Mecking Caringi" <augustocaringi at gmail.com>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Tuesday, July 10, 2012 11:14:27 AM
> Subject: [Twisted-Python] Twisted in a multicore environment
> 
> Hi,
> 
>     I'm researching the best way to implement/use a Twisted-based
> server in a multicore environment...
> 
>     There is the Ampoule project, that I realize is considered the
> best way to do that. Right?
> 
>     I'm also reading about the internals of Nginx HTTP server. This
> server utilizes the same reactor pattern of Twisted (epoll based)...
> 
>     "What resulted is a modular, event-driven, asynchronous,
> single-threaded, non-blocking architecture which became the
> foundation
> of nginx code." http://www.aosabook.org/en/nginx.html
> 
>     But to maximize the use of processors in a multicore environment,
> Nginx do this:
> 
>     "nginx doesn't spawn a process or thread for every connection.
> Instead, worker processes accept new requests from a shared "listen"
> socket and execute a highly efficient run-loop inside each worker to
> process thousands of connections per worker"
> 
>     My question: There is something similar in Twisted? Or do you
> think that is easy to implement something like that?
> 
>     Thanks!
> 
> --
> Augusto Mecking Caringi
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
Ray Cote, President
Appropriate Solutions, Inc.
We Build Software
603.924.6079


From exarkun at twistedmatrix.com  Fri Jul 13 09:48:23 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Jul 2012 13:48:23 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
	<0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
	<634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120713134823.3759.445018280.divmod.xquotient.8@localhost6.localdomain6>

On 12 Jul, 07:33 pm, tobias.oberstein at tavendo.de wrote:
>>libuv is a giant pile of new, unaudited C code that didn't even have a 
>>passing
>>test suite until a month or two ago.  Please feel free to write a 
>>reactor for it;
>
>> From what I've read, libuv has designed it's API around the pattern
>
>A. "do operation and get notified when done"
>
>instead of
>
>B. "get notified when ready and then do operation".
>
>The native Windows API is A., Posix the B and operation = read, write, 
>open, stat, ..
>
>I think A. is more natural, since how do wait for a file to be ready to 
>get open'ed/stat'ed?

This isn't really attacking the important part of the matter.  I suppose 
it's a necessary decision to make, but it still leaves 99% of the API 
unspecified.

Twisted essentially always aims for A, so it's probably been an unspoken 
assumption between the people (at least with whom I've been) discussing 
this topic that this is what we'd want in Twisted.

Having answered that question, there's still the question of what 
operations to provide and what the interface to those operations is.

For the recorded efforts so far, see this wiki page:

http://twistedmatrix.com/trac/wiki/Specification/AsynchronousFileInputOutput

which has been sitting, largely untouched, for several years now, due to 
apparent lack of interest.

Rather than beginning the entire effort anew, I'd rather see additions 
to and criticisms of the work done already.

Jean-Paul


From glyph at twistedmatrix.com  Fri Jul 13 18:21:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Jul 2012 15:21:33 -0700
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
Message-ID: <570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>


On Jul 12, 2012, at 1:31 PM, Dan Milstein <dan at wingu.com> wrote:

> 'lo all,
> 
> I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).
> 
> When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?
> 
> To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:
> 
>    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
>    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
>    return d
> 
> What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  
> 
> Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?
> 

If you're interested in logging at the TCP connection level, have you considered moving this out of your Twisted process entirely and using some tool like Wireshark?  You could build something yourself by interposing transport objects that dump their data, but you'd have to build your own toolchain (command line tools, GUIs, etc) for actually examining the output, whereas existing protocol analysis tools would just do that for you.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120713/28d46f45/attachment.htm 

From dynamicgl at gmail.com  Sat Jul 14 06:39:32 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 14 Jul 2012 18:39:32 +0800
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <4FFC6FB5.7040301@thieprojects.ch>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
Message-ID: <CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch> wrote:

> On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> > FWIW,  I have used Ampoule to great effect, but as JP points out it's
> hardly the only option. You're bound to end up with some measure of
> multiprocessing. Bear in mind that not all workloads are well-suited for
> this kind of problem! Always measure before deciding to make your codebase
> that much more complicated :)
> >
> >
> > cheers
> > lvh
> >
> >
> >
> > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:
> >
> >> On 03:14 pm, augustocaringi at gmail.com wrote:
> >>> Hi,
> >>>
> >>>    I'm researching the best way to implement/use a Twisted-based
> >>> server in a multicore environment...
> >>>
> >>>    There is the Ampoule project, that I realize is considered the
> >>> best way to do that. Right?
> >>
> >> It's a way.  "Best" depends on the details and goals of the project.
> >>
> >> Here's a stackoverflow question/answer on basically the same topic.  In
> >> particular, it specifically answers the question of a listening port
> >> shared between multiple processes and gives examples of how to do this:
> >>
> >>   http://bit.ly/MiCHtQ
> >>
> >> Jean-Paul
> >>>    I'm also reading about the internals of Nginx HTTP server. This
> >>> server utilizes the same reactor pattern of Twisted (epoll based)...
> >>>
> >>>    "What resulted is a modular, event-driven, asynchronous,
> >>> single-threaded, non-blocking architecture which became the foundation
> >>> of nginx code." http://www.aosabook.org/en/nginx.html
> >>>
> >>>    But to maximize the use of processors in a multicore environment,
> >>> Nginx do this:
> >>>
> >>>    "nginx doesn't spawn a process or thread for every connection.
> >>> Instead, worker processes accept new requests from a shared "listen"
> >>> socket and execute a highly efficient run-loop inside each worker to
> >>> process thousands of connections per worker"
> >>>
> >>>    My question: There is something similar in Twisted? Or do you
> >>> think that is easy to implement something like that?
> >>>
> >>>    Thanks!
> >>>
> >>> --
> >>> Augusto Mecking Caringi
> We observed really great scaling on multi cores with moving the
> application part either to ampoule for PDF production or in the other
> case I wrote an implementation of self regulating process pool based on
> spread, leaving only the serving to twisted in both cases.
>
> With handing work out to other processes you get another benefit which
> is isolation of python, which is the only way to use a package, like
> reportlab which survives no sort of reentrancy, for a webservice.
>
> Werner
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi Werner

       I want to know whether you have experienced any serious bug with
ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120714/f3fca3c5/attachment.htm 

From werner at thieprojects.ch  Sat Jul 14 13:38:16 2012
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 14 Jul 2012 07:38:16 -1000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
	<CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
Message-ID: <5001AE88.2090504@thieprojects.ch>

On 7/14/12 12:39 AM, gelin yan wrote:
>
>
> On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch
> <mailto:werner at thieprojects.ch>> wrote:
>
>     On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
>      > FWIW,  I have used Ampoule to great effect, but as JP points out
>     it's hardly the only option. You're bound to end up with some
>     measure of multiprocessing. Bear in mind that not all workloads are
>     well-suited for this kind of problem! Always measure before deciding
>     to make your codebase that much more complicated :)
>      >
>      >
>      > cheers
>      > lvh
>      >
>      >
>      >
>      > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com
>     <mailto:exarkun at twistedmatrix.com> wrote:
>      >
>      >> On 03:14 pm, augustocaringi at gmail.com
>     <mailto:augustocaringi at gmail.com> wrote:
>      >>> Hi,
>      >>>
>      >>>    I'm researching the best way to implement/use a Twisted-based
>      >>> server in a multicore environment...
>      >>>
>      >>>    There is the Ampoule project, that I realize is considered the
>      >>> best way to do that. Right?
>      >>
>      >> It's a way.  "Best" depends on the details and goals of the project.
>      >>
>      >> Here's a stackoverflow question/answer on basically the same
>     topic.  In
>      >> particular, it specifically answers the question of a listening port
>      >> shared between multiple processes and gives examples of how to
>     do this:
>      >>
>      >> http://bit.ly/MiCHtQ
>      >>
>      >> Jean-Paul
>      >>>    I'm also reading about the internals of Nginx HTTP server. This
>      >>> server utilizes the same reactor pattern of Twisted (epoll
>     based)...
>      >>>
>      >>>    "What resulted is a modular, event-driven, asynchronous,
>      >>> single-threaded, non-blocking architecture which became the
>     foundation
>      >>> of nginx code." http://www.aosabook.org/en/nginx.html
>      >>>
>      >>>    But to maximize the use of processors in a multicore
>     environment,
>      >>> Nginx do this:
>      >>>
>      >>>    "nginx doesn't spawn a process or thread for every connection.
>      >>> Instead, worker processes accept new requests from a shared
>     "listen"
>      >>> socket and execute a highly efficient run-loop inside each
>     worker to
>      >>> process thousands of connections per worker"
>      >>>
>      >>>    My question: There is something similar in Twisted? Or do you
>      >>> think that is easy to implement something like that?
>      >>>
>      >>>    Thanks!
>      >>>
>      >>> --
>      >>> Augusto Mecking Caringi
>     We observed really great scaling on multi cores with moving the
>     application part either to ampoule for PDF production or in the other
>     case I wrote an implementation of self regulating process pool based on
>     spread, leaving only the serving to twisted in both cases.
>
>     With handing work out to other processes you get another benefit which
>     is isolation of python, which is the only way to use a package, like
>     reportlab which survives no sort of reentrancy, for a webservice.
>
>     Werner
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Hi Werner
>
>         I want to know whether you have experienced any serious bug with
> ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.

Hi gelin

Python 2.7.1 Stackless 3.1b3 060516 (release27-maint, Aug  9 2011, 
02:32:21)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
 >>> import ampoule
 >>> ampoule.__version__
'0.2.0'
 >>> import twisted
 >>> twisted.__version__
'12.0.0'

sitting in production now for almost six month, a webservice for 
template based PDF production with reportlab & z3c.rml.

The only maintenance I do is creating more templates, never done a 
restart so far, logs are clean.

As painless as one could wish for

Werner


From exarkun at twistedmatrix.com  Sun Jul 15 00:05:36 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jul 2012 04:05:36 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1342325136.73.773414462@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120715/bf31d149/attachment.htm 

From dynamicgl at gmail.com  Sun Jul 15 10:52:05 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 15 Jul 2012 22:52:05 +0800
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <5001AE88.2090504@thieprojects.ch>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
	<CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
	<5001AE88.2090504@thieprojects.ch>
Message-ID: <CABkOF6Q6KhesG1YaYBG=X2doAJZucn1biyp8orV5Qx=pidRoUw@mail.gmail.com>

On Sun, Jul 15, 2012 at 1:38 AM, Werner Thie <werner at thieprojects.ch> wrote:

> On 7/14/12 12:39 AM, gelin yan wrote:
> >
> >
> > On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch
> > <mailto:werner at thieprojects.ch>> wrote:
> >
> >     On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> >      > FWIW,  I have used Ampoule to great effect, but as JP points out
> >     it's hardly the only option. You're bound to end up with some
> >     measure of multiprocessing. Bear in mind that not all workloads are
> >     well-suited for this kind of problem! Always measure before deciding
> >     to make your codebase that much more complicated :)
> >      >
> >      >
> >      > cheers
> >      > lvh
> >      >
> >      >
> >      >
> >      > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com
> >     <mailto:exarkun at twistedmatrix.com> wrote:
> >      >
> >      >> On 03:14 pm, augustocaringi at gmail.com
> >     <mailto:augustocaringi at gmail.com> wrote:
> >      >>> Hi,
> >      >>>
> >      >>>    I'm researching the best way to implement/use a Twisted-based
> >      >>> server in a multicore environment...
> >      >>>
> >      >>>    There is the Ampoule project, that I realize is considered
> the
> >      >>> best way to do that. Right?
> >      >>
> >      >> It's a way.  "Best" depends on the details and goals of the
> project.
> >      >>
> >      >> Here's a stackoverflow question/answer on basically the same
> >     topic.  In
> >      >> particular, it specifically answers the question of a listening
> port
> >      >> shared between multiple processes and gives examples of how to
> >     do this:
> >      >>
> >      >> http://bit.ly/MiCHtQ
> >      >>
> >      >> Jean-Paul
> >      >>>    I'm also reading about the internals of Nginx HTTP server.
> This
> >      >>> server utilizes the same reactor pattern of Twisted (epoll
> >     based)...
> >      >>>
> >      >>>    "What resulted is a modular, event-driven, asynchronous,
> >      >>> single-threaded, non-blocking architecture which became the
> >     foundation
> >      >>> of nginx code." http://www.aosabook.org/en/nginx.html
> >      >>>
> >      >>>    But to maximize the use of processors in a multicore
> >     environment,
> >      >>> Nginx do this:
> >      >>>
> >      >>>    "nginx doesn't spawn a process or thread for every
> connection.
> >      >>> Instead, worker processes accept new requests from a shared
> >     "listen"
> >      >>> socket and execute a highly efficient run-loop inside each
> >     worker to
> >      >>> process thousands of connections per worker"
> >      >>>
> >      >>>    My question: There is something similar in Twisted? Or do you
> >      >>> think that is easy to implement something like that?
> >      >>>
> >      >>>    Thanks!
> >      >>>
> >      >>> --
> >      >>> Augusto Mecking Caringi
> >     We observed really great scaling on multi cores with moving the
> >     application part either to ampoule for PDF production or in the other
> >     case I wrote an implementation of self regulating process pool based
> on
> >     spread, leaving only the serving to twisted in both cases.
> >
> >     With handing work out to other processes you get another benefit
> which
> >     is isolation of python, which is the only way to use a package, like
> >     reportlab which survives no sort of reentrancy, for a webservice.
> >
> >     Werner
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > Hi Werner
> >
> >         I want to know whether you have experienced any serious bug with
> > ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.
>
> Hi gelin
>
> Python 2.7.1 Stackless 3.1b3 060516 (release27-maint, Aug  9 2011,
> 02:32:21)
> [GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
> Type "help", "copyright", "credits" or "license" for more information.
>  >>> import ampoule
>  >>> ampoule.__version__
> '0.2.0'
>  >>> import twisted
>  >>> twisted.__version__
> '12.0.0'
>
> sitting in production now for almost six month, a webservice for
> template based PDF production with reportlab & z3c.rml.
>
> The only maintenance I do is creating more templates, never done a
> restart so far, logs are clean.
>
> As painless as one could wish for
>
> Werner
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi Werner

     Thanks for your valuable info. It looks like you are using stackless
python with twisted. Have you taken any benefit from both of them?
Stackless is awesome but I have no idea what is the better way to work with
twisted. Thanks.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120715/02fdfb35/attachment-0001.htm 

From dan at wingu.com  Mon Jul 16 09:40:51 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 16 Jul 2012 09:40:51 -0400
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
Message-ID: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>

To be clear: my current interest is really just doing this during unit tests/ongoing development (e.g. not diagnosing prod issues, where Wireshark would make plenty of sense).  So something integrated into Twisted feels natural.

That said, is the unit test pattern I'm seeing in the mail/test/test_imap.py module atypical?  Most of the doc'd examples for trial don't seem to be using loopbackTCP, so much as directly writing to lineReceived or something similar.  It's only because these tests are doing end-to-end things, by way of constructing both an IMAP server and client, and hooking them up, that I'm in this situation.

-D

On Jul 13, 2012, at 6:21 PM, Glyph wrote:

> 
> On Jul 12, 2012, at 1:31 PM, Dan Milstein <dan at wingu.com> wrote:
> 
>> 'lo all,
>> 
>> I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).
>> 
>> When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?
>> 
>> To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:
>> 
>>    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
>>    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
>>    return d
>> 
>> What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  
>> 
>> Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?
>> 
> 
> If you're interested in logging at the TCP connection level, have you considered moving this out of your Twisted process entirely and using some tool like Wireshark?  You could build something yourself by interposing transport objects that dump their data, but you'd have to build your own toolchain (command line tools, GUIs, etc) for actually examining the output, whereas existing protocol analysis tools would just do that for you.
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120716/8edd22d9/attachment.htm 

From itamar at itamarst.org  Mon Jul 16 10:06:57 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 16 Jul 2012 10:06:57 -0400
Subject: [Twisted-Python] How to best log server/client interactions
 from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <50042001.9000702@itamarst.org>

On 07/16/2012 09:40 AM, Dan Milstein wrote:
> To be clear: my current interest is really just doing this during unit 
> tests/ongoing development (e.g. not diagnosing prod issues, where 
> Wireshark would make plenty of sense).  So something integrated into 
> Twisted feels natural.
>
> That said, is the unit test pattern I'm seeing in the 
> mail/test/test_imap.py module atypical?  Most of the doc'd examples 
> for trial don't seem to be using loopbackTCP, so much as directly 
> writing to lineReceived or something similar.  It's only because these 
> tests are doing end-to-end things, by way of constructing both an IMAP 
> server and client, and hooking them up, that I'm in this situation.
>
twisted.test.proto_helpers.StringTransport is handy for having an 
in-memory transport you control. loopbackAsync makes it less easy to see 
the bytes, but gives you more control than loopbackTCP, since you can 
determine policies about how bytes are delivered (e.g. there's a 
one-byte-at-a-time policy IIRC).


From exarkun at twistedmatrix.com  Mon Jul 16 13:23:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Jul 2012 17:23:54 -0000
Subject: [Twisted-Python] How to best log server/client interactions
 from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <20120716172354.3759.1951085493.divmod.xquotient.241@localhost6.localdomain6>

On 01:40 pm, dan at wingu.com wrote:
>To be clear: my current interest is really just doing this during unit 
>tests/ongoing development (e.g. not diagnosing prod issues, where 
>Wireshark would make plenty of sense).  So something integrated into 
>Twisted feels natural.
>
>That said, is the unit test pattern I'm seeing in the 
>mail/test/test_imap.py module atypical?  Most of the doc'd examples for 
>trial don't seem to be using loopbackTCP, so much as directly writing 
>to lineReceived or something similar.  It's only because these tests 
>are doing end-to-end things, by way of constructing both an IMAP server 
>and client, and hooking them up, that I'm in this situation.


Most of the tests in twisted/mail/test/test_imap.py were written with a 
very limited understanding of good unit testing practices.  I would not 
recommend emulating them.

Jean-Paul


From glyph at twistedmatrix.com  Mon Jul 16 13:34:16 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 16 Jul 2012 10:34:16 -0700
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <84F07307-9A7C-483E-8A4C-6FE6BE940FAC@twistedmatrix.com>


Le Jul 16, 2012 ? 6:40 AM, Dan Milstein <dan at wingu.com> a ?crit :

> To be clear: my current interest is really just doing this during unit tests/ongoing development (e.g. not diagnosing prod issues, where Wireshark would make plenty of sense).  So something integrated into Twisted feels natural.
> 
> That said, is the unit test pattern I'm seeing in the mail/test/test_imap.py module atypical?  Most of the doc'd examples for trial don't seem to be using loopbackTCP, so much as directly writing to lineReceived or something similar.  It's only because these tests are doing end-to-end things, by way of constructing both an IMAP server and client, and hooking them up, that I'm in this situation.

Sorry, you're quite right that I misunderstood your question.

As Jean-Paul already said, this test code is quite old.

If you want to be diagnosing what's going on in a test, writing a (temporary) IProtocol or ITransport wrapper that has some print statements in it can be a good way to go.  Or as Itamar suggested, using StringTransport() and printing its contents.  Definitely using StringTransport would be preferred for anything you'd actually want to keep around in a test if you want to assert about what's being read or written, and not just look at a dump of the output.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120716/60aa81e8/attachment.htm 

From drsalists at gmail.com  Mon Jul 16 16:30:55 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 20:30:55 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
Message-ID: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>

I'm continuing to have some stuck deferreds - deferredlists probably.

I had that graphviz/twisted graphing thing working for some test code, but
upon applying it to some deferreds that're getting stuck in some production
code, I didn't get the same pleasing output - not entirely surprising.
Part of the issue is that some of the deferreds have already disappeared
(which in a way is a good thing - less to sift through to find what's
left), and part of the matter is I believe there are some custom __repr__'s
in the code that are causing my graph code to discover violated assumptions.

Anyway, what I got, greatly truncated on the right, looks like:
  Deferred_at_0x46edcf8 ->
bound_method_DeferredList._cbDeferred_of_DeferredList_at_0x46ed3b0_current_result
  Deferred_at_0x46edcf8 ->
bound_method_DeferredList._cbDeferred_of_DeferredList_at_0x46ed3b0_current_result

To the right of those two lines appear to be a huge dictionary dump - and I
do mean huge.

Grep'ing through the code, I see no "current.result" matches.  There is
however a "current\.result" in the twisted code.

...so... I suppose I'm looking for a deferred (list) at a specific id(),
though that's a little fiddly to catch.

Can anyone think of other ways of getting to the bottom of this?  Perhaps
some field in a deferred or deferredList I can introspect to get better
specifics?

Is monkey patching an identifier of some sort into each deferred
reasonable?  The intent would be to make it easier to match up the
lingering DeferredLists with the place they're created.

TIA!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120716/d359614f/attachment.htm 

From andrew at bemusement.org  Mon Jul 16 17:54:03 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 17 Jul 2012 07:54:03 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
Message-ID: <20120716215402.GE6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
[?]
> Can anyone think of other ways of getting to the bottom of this?  Perhaps
> some field in a deferred or deferredList I can introspect to get better
> specifics?
> 
> Is monkey patching an identifier of some sort into each deferred
> reasonable?  The intent would be to make it easier to match up the
> lingering DeferredLists with the place they're created.

That's the sort of thing that calling twisted.internet.defer.setDebugging(True)
is meant to help with.  If you turn that on, you can probably introspect the
stuff it creates and use that in your debugging tool.  (That's a bit ugly, but
probably not significantly worse than introspecting other private attributes
Deferred.)

-Andrew.


From drsalists at gmail.com  Mon Jul 16 19:09:14 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 23:09:14 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120716215402.GE6331@fuchsia.puzzling.org>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
Message-ID: <CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>

On Mon, Jul 16, 2012 at 9:54 PM, Andrew Bennetts <andrew at bemusement.org>wrote:

> Dan Stromberg wrote:
> [?]
> > Can anyone think of other ways of getting to the bottom of this?  Perhaps
> > some field in a deferred or deferredList I can introspect to get better
> > specifics?
> >
> > Is monkey patching an identifier of some sort into each deferred
> > reasonable?  The intent would be to make it easier to match up the
> > lingering DeferredLists with the place they're created.
>
> That's the sort of thing that calling
> twisted.internet.defer.setDebugging(True)
> is meant to help with.  If you turn that on, you can probably introspect
> the
> stuff it creates and use that in your debugging tool.  (That's a bit ugly,
> but
> probably not significantly worse than introspecting other private
> attributes
> Deferred.)


I'm playing with twisted.internet.defer.setDebugging now.

Is there a corresponding function that can be used to produce its report?
If I use it in a program with an infinite loop, it seems like I never get
the report, but if I use it in a program with a finite length, I eventually
get a useful-looking report.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120716/f054e52c/attachment.htm 

From andrew at bemusement.org  Mon Jul 16 19:20:23 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 17 Jul 2012 09:20:23 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
Message-ID: <20120716232023.GF6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
[?]
> I'm playing with twisted.internet.defer.setDebugging now.
> 
> Is there a corresponding function that can be used to produce its report?
> If I use it in a program with an infinite loop, it seems like I never get
> the report, but if I use it in a program with a finite length, I eventually
> get a useful-looking report.

It's triggered by garbage collection of a Deferred with an unhandled error.  So
you're at the mercy of when the garbage collector of your Python VM decides to
collect that object.

You could call yourDeferred._debugInfo._getDebugTracebacks() yourself, though,
if you don't mind (ab)using private attributes that might break without warning.

-Andrew.


From drsalists at gmail.com  Mon Jul 16 19:45:46 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 23:45:46 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120716232023.GF6331@fuchsia.puzzling.org>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
Message-ID: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>

On Mon, Jul 16, 2012 at 11:20 PM, Andrew Bennetts <andrew at bemusement.org>wrote:

> Dan Stromberg wrote:
> [?]
> > I'm playing with twisted.internet.defer.setDebugging now.
> >
> > Is there a corresponding function that can be used to produce its report?
> > If I use it in a program with an infinite loop, it seems like I never get
> > the report, but if I use it in a program with a finite length, I
> eventually
> > get a useful-looking report.
>
> It's triggered by garbage collection of a Deferred with an unhandled
> error.  So
> you're at the mercy of when the garbage collector of your Python VM
> decides to
> collect that object.
>
> You could call yourDeferred._debugInfo._getDebugTracebacks() yourself,
> though,
> if you don't mind (ab)using private attributes that might break without
> warning.


Strangely, this doesn't give the report until after the sleep finishes...
?

#!/usr/bin/python

# deferreds work fine without the reactor

import time

import twisted.internet.defer

twisted.internet.defer.setDebugging(True)

def functionReturningDeferred():
    return twisted.internet.defer.succeed('Some value')

d = functionReturningDeferred()
def printValue(value):
    print 'Yay, I got %r' % value
    return value
def second_callback(value):
    print 'still %r' % value
    return gen_error()
def third_callback(value):
    print 'and still %r' % value
    #raise AssertionError
    return value

def gen_error():
    return twisted.internet.defer.fail(AssertionError)


def got_error(value):
    print 'bad thing: %r' % value

d.addCallback(printValue)
d.addCallback(second_callback)
d.addCallback(third_callback)
d._debugInfo._getDebugTracebacks()
print
time.sleep(10)
#d.addErrback(got_error)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120716/10489572/attachment-0001.htm 

From bgurup.ndk at gmail.com  Tue Jul 17 06:42:34 2012
From: bgurup.ndk at gmail.com (Guru Prasad)
Date: Tue, 17 Jul 2012 16:12:34 +0530
Subject: [Twisted-Python] Twisted 12.0.0 - Facing Issue in SSL/TLS
	connection setup
Message-ID: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>

Hello All,

I am new to Twsited and I am facing SSL/TLS connection setup issue with
Twisted 12.0.0. Version of Ubuntu (unstable), I am using is: 12.10
During the SSL/TLS connection setup, there is ClientHello request from the
client and for this request there is no response from the server where
Twisted 12.0.0 is running.
I see only TCP FIN and RST sent by the server end for the ClientHello
request.

When I checked the syslog, I see below messages.

 Traceback (most recent call last):
:   File "/usr/lib/python2.7/dist-packages/twisted/python/log.py", line 84,
in callWithLogger
:     return callWithContext({"system": lp}, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/log.py", line 69,
in callWithContext
:     return context.call({ILogContext: newCtx}, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/context.py", line
118, in callWithContext
:     return self.currentContext().callWithContext(ctx, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/context.py", line
81, in callWithContext
:     return func(*args,**kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py",
line 599, in _doReadOrWrite
:     self._disconnectSelectable(selectable, why, inRead)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py",
line 266, in _disconnectSelectable
:     selectable.connectionLost(failure.Failure(why))
:   File
"/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py",
line 328, in connectionLost
:     tcp.Server.connectionLost(self, reason)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/tcp.py", line
277, in connectionLost
:     protocol.connectionLost(reason)
:   File "/usr/lib/python2.7/dist-packages/twisted/web2/channel/http.py",
line 853, in connectionLost
:     self.readConnectionLost()
:   File "/usr/lib/python2.7/dist-packages/twisted/web2/channel/http.py",
line 842, in readConnectionLost
:     self.transport.loseConnection()
:   File
"/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py",
line 322, in loseConnection
:     tcp.Server.loseConnection(self, reason)
: TypeError: loseConnection() takes exactly 1 argument (2 given)

Anyone else has faced this issue, earlier?
I am not having any clue like what went wrong. Have I missed any of the
dependent packages required for Twisted 12.0.0?
Please help me to come out of this issue.

Best Regards,
bgurup
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120717/0cf93119/attachment.htm 

From itamar at itamarst.org  Tue Jul 17 08:28:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 17 Jul 2012 08:28:12 -0400
Subject: [Twisted-Python] Twisted 12.0.0 - Facing Issue in SSL/TLS
 connection setup
In-Reply-To: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>
References: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>
Message-ID: <50055A5C.70001@itamarst.org>

On 07/17/2012 06:42 AM, Guru Prasad wrote:
> :   File 
> "/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py", 
> line 322, in loseConnection
> :     tcp.Server.loseConnection(self, reason)
> : TypeError: loseConnection() takes exactly 1 argument (2 given)
>
> Anyone else has faced this issue, earlier?
This is a bug in the gnutls package you are using, which appears to have 
relied on a private implementation detail of Twisted. So this is a bug 
in gnutls package, not Twisted, and you should file a report with them.

In the interim until they fix it, you might want to try Twisted's 
built-in SSL support, as documented here: 
twistedmatrix.com/documents/current/core/howto/ssl.html


From drsalists at gmail.com  Tue Jul 17 11:40:06 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 17 Jul 2012 15:40:06 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
Message-ID: <CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>

On Mon, Jul 16, 2012 at 11:45 PM, Dan Stromberg <drsalists at gmail.com> wrote:

>
> On Mon, Jul 16, 2012 at 11:20 PM, Andrew Bennetts <andrew at bemusement.org>wrote:
>
>> Dan Stromberg wrote:
>> [?]
>> > I'm playing with twisted.internet.defer.setDebugging now.
>> >
>> > Is there a corresponding function that can be used to produce its
>> report?
>> > If I use it in a program with an infinite loop, it seems like I never
>> get
>> > the report, but if I use it in a program with a finite length, I
>> eventually
>> > get a useful-looking report.
>>
>> It's triggered by garbage collection of a Deferred with an unhandled
>> error.  So
>> you're at the mercy of when the garbage collector of your Python VM
>> decides to
>> collect that object.
>>
>> You could call yourDeferred._debugInfo._getDebugTracebacks() yourself,
>> though,
>> if you don't mind (ab)using private attributes that might break without
>> warning.
>
>
> Strangely, this doesn't give the report until after the sleep
> finishes...   ?
>
> It turned out that I needed to print  d._debugInfo._getDebugTracebacks(),
rather than just running d._debugInfo._getDebugTracebacks().

However, it always appears to print the debug tracebacks for the deferred
named - in this case, d.  It doesn't appear to be selecting the correct
deferred(s) to print.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120717/17627d45/attachment.htm 

From mobilebackup77 at gmail.com  Tue Jul 17 12:25:38 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 17 Jul 2012 12:25:38 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
Message-ID: <CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>

The server I am using uses TLS SNI. Does getPage support this, or has
any plans in the near future to support this? Do any other python
packages (request/urllib3/...) support TLS SNI yet?

Also, is there a way to do HTTP CONNECT using twisted before I do the
SSL handshake. I think that should solve my problem.

Thanks,
--Ram


On Wed, Jul 4, 2012 at 5:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> Le Jul 4, 2012 ? 1:19 PM, Me Myself <mobilebackup77 at gmail.com> a ?crit :
>
> I know I need to isolate the bug from my project into a simple example
> that can illustrate the bug. Unfortunately, I'm not sure I've the time
> to do that right now.
>
>
> It's OK, any time you have the time to do it, we will be ready to handle the
> bug :).  Please just put it on a to-do list or something so that you don't
> forget.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From rowen at uw.edu  Tue Jul 17 12:25:37 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Tue, 17 Jul 2012 09:25:37 -0700
Subject: [Twisted-Python] A few simple questions
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
Message-ID: <rowen-95B82F.09253717072012@news.gmane.org>

In article 
<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg at mail.gmail.com>,
 Laurens Van Houtven <_ at lvh.cc> wrote:

> On Thursday, July 12, 2012, Russell E. Owen wrote:
> 
> > I'm adding Twisted support to some existing communication code and I
> > have a few questions which I hope are simple. I've been reading the API
> > documentation, but if the answers are there I'm missing them.
> >
> > What happens if one tries to write to a protocol.transport that is not
> > connected or in an error state? (I'm hoping that this case has defined
> > behavior and that it will raise an exception).
> 
> 
> Not connected usually means that protocol.transport is None
> 
> 
> >
> > Is there some way to query a protocol to see if it is in a good state
> > (connected and no errors)? I realize with callbacks this is not usually
> > necessary, but I have a case where it would be helpful (though I can
> > probably manage without it).
> 
> Can you elaborate on the case?

I've found that Twisted sometimes swallows errors unless I am extremely 
careful. I would like to be able to check a protocol to make sure it is 
operational (connected and happy) as a means of assuring that I've not 
missed an error.

> > When reading raw bytes, is there any way to get the bytes from the
> > protocol? I assume not: that if one wants to buffer the data one must do
> > that in the callback. If so, does Twisted provide a suitable buffer
> > class?
> 
> The protocol gets dataReceived called. What kind of buffering do you want
> to do and why? Would a simple StringIO suffice?

I read the LineReceiver code (should have done that before asking) and 
realize it's buffering using a simple string. I just rewrote that simple 
class to meet my needs and am quite happy.

-- Russell



From glyph at twistedmatrix.com  Tue Jul 17 14:20:56 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Jul 2012 11:20:56 -0700
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-95B82F.09253717072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
Message-ID: <DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>


On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:

>> Can you elaborate on the case?
> 
> I've found that Twisted sometimes swallows errors unless I am extremely 
> careful. I would like to be able to check a protocol to make sure it is 
> operational (connected and happy) as a means of assuring that I've not 
> missed an error.

This isn't really elaborating.

What error does Twisted swallow?  In what manner do you have to be "careful"?  What characterizes a protocol's "happiness" beyond its momentary connected-ness?  How would you "miss" an error?

Twisted is event-driven, so pretty much all the state changes you're interested in are delivered as events (method calls on your object).  If you are "missing" them because Twisted isn't calling them, that sounds like a really serious bug we should investigate.  If you're missing them for some other reason then you should just fix your code so it doesn't miss them any more :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120717/4fe4aaa3/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul 17 15:50:49 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 19:50:49 -0000
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
 Exception)
In-Reply-To: <CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
Message-ID: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>

On 04:25 pm, mobilebackup77 at gmail.com wrote:
>The server I am using uses TLS SNI. Does getPage support this, or has
>any plans in the near future to support this? Do any other python
>packages (request/urllib3/...) support TLS SNI yet?

Sure.  Just pass in an appropriately configured SSL context factory.

See the pyOpenSSL documentation for details on how to configure SNI.
>Also, is there a way to do HTTP CONNECT using twisted before I do the
>SSL handshake. I think that should solve my problem.

Twisted doesn't yet have any support for HTTP CONNECT.

Jean-Paul


From exarkun at twistedmatrix.com  Tue Jul 17 15:53:52 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 19:53:52 -0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
Message-ID: <20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>

On 03:40 pm, drsalists at gmail.com wrote:
>>
>>Strangely, this doesn't give the report until after the sleep
>>finishes...   ?

What's strange about that?  "time.sleep(10)" doesn't mean "immediately 
print out debug information".  It means "do not do anything at all in 
this program for around 10 seconds".
>>It turned out that I needed to print 
>>d._debugInfo._getDebugTracebacks(),
>rather than just running d._debugInfo._getDebugTracebacks().
>
>However, it always appears to print the debug tracebacks for the 
>deferred
>named - in this case, d.  It doesn't appear to be selecting the correct
>deferred(s) to print.

All it does is print the debug information for the Deferred you got the 
_debugInfo attribute from.  It doesn't understand your code or know 
where the source of your error is.  It's just a function that gives you 
the stack traces associated with a particular Deferred.

If you want a different stack trace, call the method on a _debugInfo 
from a different Deferred object.

Jean-Paul


From mobilebackup77 at gmail.com  Tue Jul 17 16:01:41 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 17 Jul 2012 16:01:41 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>

Can you please show me an example whenever you get a chance?

Thanks,
--Ram.


On Tue, Jul 17, 2012 at 3:50 PM,  <exarkun at twistedmatrix.com> wrote:
> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>>The server I am using uses TLS SNI. Does getPage support this, or has
>>any plans in the near future to support this? Do any other python
>>packages (request/urllib3/...) support TLS SNI yet?
>
> Sure.  Just pass in an appropriately configured SSL context factory.
>
> See the pyOpenSSL documentation for details on how to configure SNI.
>>Also, is there a way to do HTTP CONNECT using twisted before I do the
>>SSL handshake. I think that should solve my problem.
>
> Twisted doesn't yet have any support for HTTP CONNECT.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Tue Jul 17 16:02:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 20:02:22 -0000
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-95B82F.09253717072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
Message-ID: <20120717200222.5206.256737917.divmod.xquotient.22@localhost6.localdomain6>

On 04:25 pm, rowen at uw.edu wrote:
>In article
><CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg at mail.gmail.com>,
>Laurens Van Houtven <_ at lvh.cc> wrote:
>>On Thursday, July 12, 2012, Russell E. Owen wrote:
>>
>> > I'm adding Twisted support to some existing communication code and I
>> > have a few questions which I hope are simple. I've been reading the 
>>API
>> > documentation, but if the answers are there I'm missing them.
>> >
>> > What happens if one tries to write to a protocol.transport that is 
>>not
>> > connected or in an error state? (I'm hoping that this case has 
>>defined
>> > behavior and that it will raise an exception).
>>
>>
>>Not connected usually means that protocol.transport is None
>>
>>
>> >
>> > Is there some way to query a protocol to see if it is in a good 
>>state
>> > (connected and no errors)? I realize with callbacks this is not 
>>usually
>> > necessary, but I have a case where it would be helpful (though I can
>> > probably manage without it).
>>
>>Can you elaborate on the case?
>
>I've found that Twisted sometimes swallows errors unless I am extremely
>careful. I would like to be able to check a protocol to make sure it is
>operational (connected and happy) as a means of assuring that I've not
>missed an error.

Instead, make sure you add errbacks to all your Deferreds.

Twisted does not swallow errors.  However, a Deferred (that your 
application keeps a reference to, preventing it from being garbage 
collected) that has a Failure result and no more errbacks will sit on 
that Failure until you let the Deferred get garbage collected or add an 
errback to the Deferred.

Jean-Paul
>> > When reading raw bytes, is there any way to get the bytes from the
>> > protocol? I assume not: that if one wants to buffer the data one 
>>must do
>> > that in the callback. If so, does Twisted provide a suitable buffer
>> > class?
>>
>>The protocol gets dataReceived called. What kind of buffering do you 
>>want
>>to do and why? Would a simple StringIO suffice?
>
>I read the LineReceiver code (should have done that before asking) and
>realize it's buffering using a simple string. I just rewrote that 
>simple
>class to meet my needs and am quite happy.
>
>-- Russell
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From justin.venus at gmail.com  Tue Jul 17 16:23:58 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Tue, 17 Jul 2012 15:23:58 -0500
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
	<CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>
Message-ID: <CACL=7avvZdsqnUxMTENAs0bWuK_gGdYiEHQfaVm33o1pWnbOZg@mail.gmail.com>

Ram,

Have you checked out the ssl[1] howto?  The section on "Client with
certificates" gives an example on how to make your own SSL Context
Class.

1) http://twistedmatrix.com/documents/current/core/howto/ssl.html

Regards,

Justin Venus

On Tue, Jul 17, 2012 at 3:01 PM, Me Myself <mobilebackup77 at gmail.com> wrote:
> Can you please show me an example whenever you get a chance?
>
> Thanks,
> --Ram.
>
>
> On Tue, Jul 17, 2012 at 3:50 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>>>The server I am using uses TLS SNI. Does getPage support this, or has
>>>any plans in the near future to support this? Do any other python
>>>packages (request/urllib3/...) support TLS SNI yet?
>>
>> Sure.  Just pass in an appropriately configured SSL context factory.
>>
>> See the pyOpenSSL documentation for details on how to configure SNI.
>>>Also, is there a way to do HTTP CONNECT using twisted before I do the
>>>SSL handshake. I think that should solve my problem.
>>
>> Twisted doesn't yet have any support for HTTP CONNECT.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Justin Venus
justin.venus at gmail.com


From glyph at twistedmatrix.com  Tue Jul 17 18:46:49 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Jul 2012 15:46:49 -0700
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <8BB88E9F-FCF8-4616-A471-58B81CA8D433@twistedmatrix.com>


On Jul 17, 2012, at 12:50 PM, exarkun at twistedmatrix.com wrote:

> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>> The server I am using uses TLS SNI. Does getPage support this, or has
>> any plans in the near future to support this? Do any other python
>> packages (request/urllib3/...) support TLS SNI yet?
> 
> Sure.  Just pass in an appropriately configured SSL context factory.
> 
> See the pyOpenSSL documentation for details on how to configure SNI.

Also, if you're interested in making some higher-level wrappers for Twisted, it would be great to improve twisted.web.client.Agent to support SNI for HTTPS URLs.  This is the server-side ticket but it has links to a few client-side things: <http://twistedmatrix.com/trac/ticket/4887>.

-g



From drsalists at gmail.com  Tue Jul 17 22:24:21 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 17 Jul 2012 19:24:21 -0700
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>

On Tue, Jul 17, 2012 at 12:53 PM, <exarkun at twistedmatrix.com> wrote:

> On 03:40 pm, drsalists at gmail.com wrote:
> >>
> >>Strangely, this doesn't give the report until after the sleep
> >>finishes...   ?
>
> What's strange about that?  "time.sleep(10)" doesn't mean "immediately
> print out debug information".
>
Well, if you read the whole thread, I believe you'll see that this was
intended to print some debugging information without needing to wait for
the process to terminate.


>
> >However, it always appears to print the debug tracebacks for the
> >deferred
> >named - in this case, d.  It doesn't appear to be selecting the correct
> >deferred(s) to print.
>
>
> All it does is print the debug information for the Deferred you got the
> _debugInfo attribute from.

Um, yes,  I was kind of saying that.  Sadly though, this renders it
ineffective for the purpose it was suggested for.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120717/606aaaa1/attachment.htm 

From exarkun at twistedmatrix.com  Wed Jul 18 06:32:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Jul 2012 10:32:54 -0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
Message-ID: <20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>

On 02:24 am, drsalists at gmail.com wrote:
>On Tue, Jul 17, 2012 at 12:53 PM, <exarkun at twistedmatrix.com> wrote:
>>On 03:40 pm, drsalists at gmail.com wrote:
>> >>
>> >>Strangely, this doesn't give the report until after the sleep
>> >>finishes...   ?
>>
>>What's strange about that?  "time.sleep(10)" doesn't mean "immediately
>>print out debug information".
>Well, if you read the whole thread, I believe you'll see that this was
>intended to print some debugging information without needing to wait 
>for
>the process to terminate.

I don't think anything in the thread suggested that this approach will 
circumvent a time.sleep(10) call.  In any case, it won't.  Why is there 
a time.sleep(10) call there at all?  Does it do anything except cause a 
problem?

Jean-Paul
>
>>
>> >However, it always appears to print the debug tracebacks for the
>> >deferred
>> >named - in this case, d.  It doesn't appear to be selecting the 
>>correct
>> >deferred(s) to print.
>>
>>
>>All it does is print the debug information for the Deferred you got 
>>the
>>_debugInfo attribute from.
>
>Um, yes,  I was kind of saying that.  Sadly though, this renders it
>ineffective for the purpose it was suggested for.


From rowen at uw.edu  Wed Jul 18 13:01:06 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 10:01:06 -0700
Subject: [Twisted-Python] unit testing question: twisted with tk
Message-ID: <rowen-FB207E.10010618072012@news.gmane.org>

I have a bit of code that combines twisted with Tkinter
and now I'd like to write some unittests for it.

I can't seem to figure out how to get TwistedTrial to handle this case. 
I've written a unit test like this:

from twisted.trial import unittest
from twisted.internet.defer import Deferred
import twisted.internet.tksupport
root = Tkinter.Tk()
twisted.internet.tksupport.install(root)
from twisted.internet import reactor

class TestTkSocket(unittest.TestCase):
    def test...(...):
        ....

the one test so far returns a deferred and calls errback on that 
deferred if the test fails, and callback if it succeeds. When I run the 
unit test with trial I get this error error:
twisted.trial.util.DirtyReactorAggregateError

I have an identical unit test for a pure-twisted version of my 
communication code (no Tk) and it works fine.

I am guessing the problem is cleanly getting rid of Tkinter's root at 
the end of the test and disentangling it from the reactor, but I have no 
idea how to do that.

Any suggestions on how to proceed (e.g. a way to get TwistedTrial to 
work, or a good alternative)?

-- Russell



From rowen at uw.edu  Wed Jul 18 13:31:36 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 10:31:36 -0700
Subject: [Twisted-Python] A few simple questions
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
Message-ID: <rowen-09AE70.10313618072012@news.gmane.org>

In article <DB49C8B0-451D-46E4-9B3B-58519CDAA75A at twistedmatrix.com>,
 Glyph <glyph at twistedmatrix.com> wrote:

> On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:
> 
> >> Can you elaborate on the case?
> > 
> > I've found that Twisted sometimes swallows errors unless I am extremely 
> > careful. I would like to be able to check a protocol to make sure it is 
> > operational (connected and happy) as a means of assuring that I've not 
> > missed an error.
> 
> This isn't really elaborating.
> 
> What error does Twisted swallow?  In what manner do you have to be "careful"? 
>  What characterizes a protocol's "happiness" beyond its momentary 
> connected-ness?  How would you "miss" an error?
> 
> Twisted is event-driven, so pretty much all the state changes you're 
> interested in are delivered as events (method calls on your object).  If you 
> are "missing" them because Twisted isn't calling them, that sounds like a 
> really serious bug we should investigate.  If you're missing them for some 
> other reason then you should just fix your code so it doesn't miss them any 
> more :).

Regarding swallowing errors:

I'm not claiming Twisted has bugs in this area (though I found and 
reported one obscure case that may be a bug: errors in  tk command 
::tk::Mac::quit are silently ignored).

However, I found it rather easy to make coding errors that cause Twisted 
to not report errors. I have heard the same complaint from colleagues.

At this point I think my code is robust, though I will be more confident 
once I finish my unit tests.

If there is a "best practices for error handling" document I'd love to 
read it. I found an overview of deferreds that was helpful. It pointed 
out that addCallbacks is not the same as addCallback followed by 
addErrback and I'm not sure I'm handling the difference correctly. Right 
now I use addCallbacks(callback, errback). This does not call the 
errback if the callback fails. I do this intentionally because I want 
the errback to focus on problems with the connection, not my reaction to 
it, and the default error handler seems to report errors in the 
callback, which is fine.

Regarding state:

I'm used to event-driven frameworks that both offer callbacks and the 
ability to query state. I find it helpful for reporting errors as soon 
as possible (e.g. before writing check if the socket is connected; raise 
an exception if not). For a TCP/IP socket, I view a socket as having 
these states:
- connecting
- connected
- disconnecting (with associated reason)
- disconnected (with associated reason)
TCP/IP Servers have a similar set of states, with connected -> listening

However, it's certainly true that being able to query state is not 
essential; callbacks suffice.

-- Russell



From p.mayers at imperial.ac.uk  Wed Jul 18 13:36:08 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Jul 2012 18:36:08 +0100
Subject: [Twisted-Python] unit testing question: twisted with tk
In-Reply-To: <rowen-FB207E.10010618072012@news.gmane.org>
References: <rowen-FB207E.10010618072012@news.gmane.org>
Message-ID: <5006F408.2080108@imperial.ac.uk>

On 07/18/2012 06:01 PM, Russell E. Owen wrote:
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)

Does the TK support work like other reactors i.e. it must be the very 
first thing in the python file, before all other Twisted imports?



From naveenm at enthought.com  Wed Jul 18 13:43:59 2012
From: naveenm at enthought.com (Naveen Michaud-Agrawal)
Date: Wed, 18 Jul 2012 13:43:59 -0400
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-09AE70.10313618072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
	<rowen-09AE70.10313618072012@news.gmane.org>
Message-ID: <CAL7GHvcwtso-V2uPyD0WmxH5Opk6chhUHzTAonaem9Ze8WWVKA@mail.gmail.com>

If you haven't seen it already, Dave Peticolas has a great introduction to
twisted (it's a bit long, but well worth it) at
http://krondo.com/?page_id=1327. In particular, until I saw this graphic on
callback/errback chaining (
http://krondo.com/blog/wp-content/uploads/2009/10/deferred-2.png), I never
properly understood what twisted was doing (linked from this
http://krondo.com/?p=1825).

Naveen

On Wed, Jul 18, 2012 at 1:31 PM, Russell E. Owen <rowen at uw.edu> wrote:

> In article <DB49C8B0-451D-46E4-9B3B-58519CDAA75A at twistedmatrix.com>,
>  Glyph <glyph at twistedmatrix.com> wrote:
>
> > On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:
> >
> > >> Can you elaborate on the case?
> > >
> > > I've found that Twisted sometimes swallows errors unless I am extremely
> > > careful. I would like to be able to check a protocol to make sure it is
> > > operational (connected and happy) as a means of assuring that I've not
> > > missed an error.
> >
> > This isn't really elaborating.
> >
> > What error does Twisted swallow?  In what manner do you have to be
> "careful"?
> >  What characterizes a protocol's "happiness" beyond its momentary
> > connected-ness?  How would you "miss" an error?
> >
> > Twisted is event-driven, so pretty much all the state changes you're
> > interested in are delivered as events (method calls on your object).  If
> you
> > are "missing" them because Twisted isn't calling them, that sounds like a
> > really serious bug we should investigate.  If you're missing them for
> some
> > other reason then you should just fix your code so it doesn't miss them
> any
> > more :).
>
> Regarding swallowing errors:
>
> I'm not claiming Twisted has bugs in this area (though I found and
> reported one obscure case that may be a bug: errors in  tk command
> ::tk::Mac::quit are silently ignored).
>
> However, I found it rather easy to make coding errors that cause Twisted
> to not report errors. I have heard the same complaint from colleagues.
>
> At this point I think my code is robust, though I will be more confident
> once I finish my unit tests.
>
> If there is a "best practices for error handling" document I'd love to
> read it. I found an overview of deferreds that was helpful. It pointed
> out that addCallbacks is not the same as addCallback followed by
> addErrback and I'm not sure I'm handling the difference correctly. Right
> now I use addCallbacks(callback, errback). This does not call the
> errback if the callback fails. I do this intentionally because I want
> the errback to focus on problems with the connection, not my reaction to
> it, and the default error handler seems to report errors in the
> callback, which is fine.
>
> Regarding state:
>
> I'm used to event-driven frameworks that both offer callbacks and the
> ability to query state. I find it helpful for reporting errors as soon
> as possible (e.g. before writing check if the socket is connected; raise
> an exception if not). For a TCP/IP socket, I view a socket as having
> these states:
> - connecting
> - connected
> - disconnecting (with associated reason)
> - disconnected (with associated reason)
> TCP/IP Servers have a similar set of states, with connected -> listening
>
> However, it's certainly true that being able to query state is not
> essential; callbacks suffice.
>
> -- Russell
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120718/8ee7aba5/attachment.htm 

From itamar at itamarst.org  Wed Jul 18 14:11:52 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 14:11:52 -0400
Subject: [Twisted-Python] unit testing question: twisted with tk
In-Reply-To: <rowen-FB207E.10010618072012@news.gmane.org>
References: <rowen-FB207E.10010618072012@news.gmane.org>
Message-ID: <5006FC68.8050307@itamarst.org>

On 07/18/2012 01:01 PM, Russell E. Owen wrote:
> I have a bit of code that combines twisted with Tkinter
> and now I'd like to write some unittests for it.
>
> I can't seem to figure out how to get TwistedTrial to handle this case.
> I've written a unit test like this:
>
> from twisted.trial import unittest
> from twisted.internet.defer import Deferred
> import twisted.internet.tksupport
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)
> from twisted.internet import reactor
>
> class TestTkSocket(unittest.TestCase):
>      def test...(...):
>          ....
>
> the one test so far returns a deferred and calls errback on that
> deferred if the test fails, and callback if it succeeds. When I run the
> unit test with trial I get this error error:
> twisted.trial.util.DirtyReactorAggregateError

The problem is that setting up tk support involves a repeatedly 
scheduled event, which means it's in the reactor causing that warning. 
Make sure you call tksupport.uninstall() at the end of each test, by 
either putting in tearDown or doing self.addCleanup(tksupport.uninstall).


From itamar at itamarst.org  Wed Jul 18 14:18:59 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 14:18:59 -0400
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-09AE70.10313618072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
	<rowen-09AE70.10313618072012@news.gmane.org>
Message-ID: <5006FE13.5080406@itamarst.org>

On 07/18/2012 01:31 PM, Russell E. Owen wrote:
> If there is a "best practices for error handling" document I'd love to
> read it. I found an overview of deferreds that was helpful. It pointed
> out that addCallbacks is not the same as addCallback followed by
> addErrback and I'm not sure I'm handling the difference correctly. Right
> now I use addCallbacks(callback, errback). This does not call the
> errback if the callback fails. I do this intentionally because I want
> the errback to focus on problems with the connection, not my reaction to
> it, and the default error handler seems to report errors in the
> callback, which is fine.
>

One thing to realize is that errors that end up in a Deferred are only 
logged if it gets garbage collected... which won't happen if you keep a 
reference to it. So:

1. You should always delete a reference to a Deferred when you do 
callback() or errback().
2. In case it never gets GC'ed, always do .addErrback(log.err) as the 
last callback on the Deferred, if there's no other final error handler.


From rowen at uw.edu  Wed Jul 18 14:26:37 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 11:26:37 -0700
Subject: [Twisted-Python] unit testing question: twisted with tk
References: <rowen-FB207E.10010618072012@news.gmane.org>
	<5006FC68.8050307@itamarst.org>
Message-ID: <rowen-CCD91E.11263718072012@news.gmane.org>

In article <5006FC68.8050307 at itamarst.org>,
 Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> On 07/18/2012 01:01 PM, Russell E. Owen wrote:
> > I have a bit of code that combines twisted with Tkinter
> > and now I'd like to write some unittests for it.
> >
> > I can't seem to figure out how to get TwistedTrial to handle this case.
> > I've written a unit test like this:
> >
> > from twisted.trial import unittest
> > from twisted.internet.defer import Deferred
> > import twisted.internet.tksupport
> > root = Tkinter.Tk()
> > twisted.internet.tksupport.install(root)
> > from twisted.internet import reactor
> >
> > class TestTkSocket(unittest.TestCase):
> >      def test...(...):
> >          ....
> >
> > the one test so far returns a deferred and calls errback on that
> > deferred if the test fails, and callback if it succeeds. When I run the
> > unit test with trial I get this error error:
> > twisted.trial.util.DirtyReactorAggregateError
> 
> The problem is that setting up tk support involves a repeatedly 
> scheduled event, which means it's in the reactor causing that warning. 
> Make sure you call tksupport.uninstall() at the end of each test, by 
> either putting in tearDown or doing self.addCleanup(tksupport.uninstall).

I put tksupport.install(root) in the setUp and tksupport.uninstall() in 
the tearDown and it worked perfectly.

Thank you very much. I'm thrilled to be able to run these unit tests.

-- Russell



From drsalists at gmail.com  Wed Jul 18 18:31:53 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Wed, 18 Jul 2012 15:31:53 -0700
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
	<20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
Message-ID: <CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>

On Wed, Jul 18, 2012 at 3:32 AM, <exarkun at twistedmatrix.com> wrote:

>
>
> I don't think anything in the thread suggested that this approach will
> circumvent a time.sleep(10) call.

I'm not sure where you're getting this circumvention issue from.


>  In any case, it won't.  Why is there
> a time.sleep(10) call there at all?  Does it do anything except cause a
> problem?
>
The sleep is not a problem.  The sleep allows me to see whether the
debugging info I want is output immediately, or whether I need to wait for
the program to terminate to see it.

I put in the sleep simply because I have another program with an infinite
loop, and I'd like to do something similar to it to get debugging info
periodically (no sleep, but lots of other stuff going on), without having
to wait for a program termination that is unlikely to come anytime soon.

I'm starting to  think I need to temporarily make the infinite loop finite.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120718/2b41dc8c/attachment.htm 

From tobias.oberstein at tavendo.de  Wed Jul 18 19:43:01 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 18 Jul 2012 16:43:01 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
Message-ID: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>

Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?

The docs say: "size of the listen queue".

Is that a tunable within Twisted?

I mean, there are kernel parameters for queue sizes of not yet completely TCP handshaked connections and so on. But those are kernel tunables.

What does the "backlog" parameter?

The reason I am asking: I am stress testing a Twisted server and I see client connections denied upon high connection rates .. does the parameter help?

Thanks!
Tobias




From andrew at bemusement.org  Wed Jul 18 19:51:19 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 19 Jul 2012 09:51:19 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>
References: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
	<20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
	<CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>
Message-ID: <20120718235119.GI6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
> On Wed, Jul 18, 2012 at 3:32 AM, <exarkun at twistedmatrix.com> wrote:
> >
> > I don't think anything in the thread suggested that this approach will
> > circumvent a time.sleep(10) call.
> 
> I'm not sure where you're getting this circumvention issue from.

At this point I'm not sure what the problem you're trying to solve is.

To look at this from another direction? here's the built-in facilities in
Twisted for debugging what's happening with Deferreds:

 - Deferred's __str__ and __repr__ summarises the key state (i.e. has this been
   fired, is this waiting on another Deferred).
 - unhandled errors of GC'd Deferreds triggers an ?Unhandled error? log
   message, to let you know that your code is probably missing something it
   should act on.  Due to the nature of GC this is a best effort feature,
   there's no guarantee it will fire reliably or at all.
 - you can setDebugging(True) to have Twisted capture more information to
   include in the above log message: the traceback for what created the
   Deferred, and the traceback that initially called it.  This is very helpful
   for helping you pinpoint which parts of your code are failing to add an
   errback.
 - as a bonus, because this is Python, you can abuse the private variables used
   to implement the previous points for your own ad hoc debugging, if you are ok
   with the fact that they are undocumented and unsupported APIs.

And that's basically it.  (If I've forgotten something I'm sure someone will
reply to remind me.)

It sounds like you're looking for something else, but I'm not sure quite what.
Something roughly along the lines of ?what are all the live Deferreds in my
process?? maybe?

-Andrew.



From itamar at itamarst.org  Wed Jul 18 21:19:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 21:19:12 -0400
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <50076090.1080406@itamarst.org>

On 07/18/2012 07:43 PM, Tobias Oberstein wrote:
> Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?
>
> The docs say: "size of the listen queue".
>
> Is that a tunable within Twisted?
>
> I mean, there are kernel parameters for queue sizes of not yet completely TCP handshaked connections and so on. But those are kernel tunables.
>
> What does the "backlog" parameter?
>
> The reason I am asking: I am stress testing a Twisted server and I see client connections denied upon high connection rates .. does the parameter help?
>
It's the parameter passed to the listen(2) system call - from the man page:

        The backlog argument defines the maximum length to which the 
queue of pending connections for sockfd may grow.  If a connection 
request arrives  when  the
        queue  is full, the client may receive an error with an 
indication of ECONNREFUSED or, if the underlying protocol supports 
retransmission, the request may
        be ignored so that a later reattempt at connection succeeds.

So, yes, higher values will prevent connection refused.



From screwtape at froup.com  Wed Jul 18 21:26:26 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Jul 2012 11:26:26 +1000
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120719012626.GA26606@boombah.thristian.org>

On Wed, Jul 18, 2012 at 04:43:01PM -0700, Tobias Oberstein wrote:
> Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?

It exactly corresponds to the "backlog" parameter of the BSD socket API
function "listen(int sockfd, int backlog)". On my Debian Testing
machine, the listen(2) manpage says:

    The backlog argument defines the maximum length to which the queue
    of pending connections for sockfd may grow. If a connection request
    arrives when the queue is full, the client may receive an error with
    an indication of ECONNREFUSED or, if the underlying protocol
    supports retransmission, the request may be ignored so that a later
    reattempt at connection succeeds.

..and later:

    The behavior of the backlog argument on TCP sockets changed with
    Linux 2.2. Now it specifies the queue length for completely
    established sockets waiting to be accepted, instead of the number of
    incomplete connection requests.  The maximum length of the queue for
    incomplete sockets can be set using
    /proc/sys/net/ipv4/tcp_max_syn_backlog.  When syncookies are enabled
    there is no logical maximum length and this setting is ignored. See
    tcp(7) for more information.

    If the backlog argument is greater than the value in
    /proc/sys/net/core/somaxconn, then it is silently truncated to that
    value; the default value in this file is 128. In kernels before
    2.4.25, this limit was a hard coded value, SOMAXCONN, with the value
    128.

Obviously the Twisted documentation can't go into all this detail
because Twisted runs on more operating systems than just Linux. Every OS
that supports the BSD socket API should have documentation explaining
the precise definition and meaning of the backlog parameter on that
platform. For example, here's the MSDN docs for the listen() function in
WinSock:

http://msdn.microsoft.com/en-us/library/windows/desktop/ms739168%28v=vs.85%29.aspx



From tom.prince at ualberta.net  Wed Jul 18 23:04:13 2012
From: tom.prince at ualberta.net (Tom Prince)
Date: Wed, 18 Jul 2012 21:04:13 -0600
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
Message-ID: <87k3y0zc2a.fsf@hermes.hocat.ca>

Dan Stromberg <drsalists at gmail.com> writes:
> Strangely, this doesn't give the report until after the sleep finishes...

That is because the code you included doesn't actually print the
returned traceback. The reason that it gets printed at the end is
because it gets garbage collected then.

The following code prints out the traceback twice, with the first before
the first sleep and the second (prefixed with "Unhandled error in
Deferred:") before the second sleep.

  Tom

#!/usr/bin/python

import time
from twisted.internet import defer

defer.setDebugging(True)

def functionReturningDeferred():
    return defer.succeed('Some value')

d = functionReturningDeferred()
def printValue(value):
    print 'Yay, I got %r' % value
    return value
def second_callback(value):
    print 'still %r' % value
    return gen_error()
def third_callback(value):
    print 'and still %r' % value
    return value

def gen_error():
    return defer.fail(AssertionError)

def got_error(value):
    print 'bad thing: %r' % value

d.addCallback(printValue)
d.addCallback(second_callback)
d.addCallback(third_callback)
print d._debugInfo._getDebugTracebacks()
time.sleep(2)
del d
time.sleep(2)


From tobias.oberstein at tavendo.de  Thu Jul 19 05:48:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 19 Jul 2012 02:48:48 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <20120719012626.GA26606@boombah.thristian.org>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
Message-ID: <634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>

Hello Tim, Itamar,

thanks for clarifying and reproducing the relevant man pages!

It would be great if the Twisted docstring for "backlog" on listenTCP/listenSSL stated something like:

"Size of the listen queue. The value is passed directly to the listen system call and it's precise semantics is defined by the platform Twisted runs on."

Anyway, thanks!

Tobias




Mit freundlichen Gr??en,

Tobias Oberstein
Gesch?ftsf?hrer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
Skype: toberstein
Twitter: @oberstet
Xing: Tobias Oberstein



Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
+49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer Tobias Oberstein


> -----Urspr?ngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von Tim Allen
> Gesendet: Donnerstag, 19. Juli 2012 03:26
> An: Twisted general discussion
> Betreff: Re: [Twisted-Python] Effects of backlog parameter on listenTCP
> 
> On Wed, Jul 18, 2012 at 04:43:01PM -0700, Tobias Oberstein wrote:
> > Could someone shortly elaborate on the semantics / effect of the parameter
> "backlog" with listenTCP?
> 
> It exactly corresponds to the "backlog" parameter of the BSD socket API
> function "listen(int sockfd, int backlog)". On my Debian Testing machine, the
> listen(2) manpage says:
> 
>     The backlog argument defines the maximum length to which the queue
>     of pending connections for sockfd may grow. If a connection request
>     arrives when the queue is full, the client may receive an error with
>     an indication of ECONNREFUSED or, if the underlying protocol
>     supports retransmission, the request may be ignored so that a later
>     reattempt at connection succeeds.
> 
> ..and later:
> 
>     The behavior of the backlog argument on TCP sockets changed with
>     Linux 2.2. Now it specifies the queue length for completely
>     established sockets waiting to be accepted, instead of the number of
>     incomplete connection requests.  The maximum length of the queue for
>     incomplete sockets can be set using
>     /proc/sys/net/ipv4/tcp_max_syn_backlog.  When syncookies are enabled
>     there is no logical maximum length and this setting is ignored. See
>     tcp(7) for more information.
> 
>     If the backlog argument is greater than the value in
>     /proc/sys/net/core/somaxconn, then it is silently truncated to that
>     value; the default value in this file is 128. In kernels before
>     2.4.25, this limit was a hard coded value, SOMAXCONN, with the value
>     128.
> 
> Obviously the Twisted documentation can't go into all this detail because
> Twisted runs on more operating systems than just Linux. Every OS that supports
> the BSD socket API should have documentation explaining the precise definition
> and meaning of the backlog parameter on that platform. For example, here's
> the MSDN docs for the listen() function in
> WinSock:
> 
> http://msdn.microsoft.com/en-
> us/library/windows/desktop/ms739168%28v=vs.85%29.aspx
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From kevin.horn at gmail.com  Thu Jul 19 09:04:24 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 19 Jul 2012 08:04:24 -0500
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
	<634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>

On Thu, Jul 19, 2012 at 4:48 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Hello Tim, Itamar,
>
> thanks for clarifying and reproducing the relevant man pages!
>
> It would be great if the Twisted docstring for "backlog" on
> listenTCP/listenSSL stated something like:
>
> "Size of the listen queue. The value is passed directly to the listen
> system call and it's precise semantics is defined by the platform Twisted
> runs on."
>
> Anyway, thanks!
>
> Tobias
>
>
Tobias,

Can you please create a ticket for this documentation change so that it
doesn't get lost?

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120719/875624a0/attachment-0001.htm 

From tobias.oberstein at tavendo.de  Thu Jul 19 09:34:22 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 19 Jul 2012 06:34:22 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
	<634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D43379642DE8@EXVMBX020-12.exch020.serverdata.net>

> Can you please create a ticket for this documentation change so that it doesn't get lost??

Done: http://twistedmatrix.com/trac/ticket/5793

Cheers,
Tobias


From luka.rahne at gmail.com  Fri Jul 20 03:01:42 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 09:01:42 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as servers
Message-ID: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>

I have like 1000 devices that need update that takes like 1 minute each. I
want them to update as quick as possible, sending lines from sx file, using
UDP and for each line i got reponse "OK".

Here is code that works for up to 500 servers, but not so well when i go
more (it just does not finish)

my current  simplified client and server_emulator code is here:
https://gist.github.com/3144857


currently i have only one server for simulation, but in real world it will
be 1000 different IP-s.

I was trying to stop and run reactor but did not work (reactor is not
rerunnable exception or somthing like that).
 I want to run lets say 100 updates at time and once some update
is finished i want to remove this protocol out of job and schedule new one.

Can somebody give some pointers?

I am running this on windows if that is an issue.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120720/85c60639/attachment.htm 

From _ at lvh.cc  Fri Jul 20 03:51:05 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 20 Jul 2012 09:51:05 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
Message-ID: <5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>

What version of twisted are you using and which reactor is it using? (You can tell from the logs)

Note that your process for getting data from the datasource is blocking. What sort of data source is it, and why are you stripping stuff off of it? You might want to consider something more cooperative, such as for example a file producer:

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.FileSender.html

I'm assuming you are aware of all of the issues involving UDP (specifically, that in the real world your file is probably not going to make it to the other side)

The basic pattern will probably be something like:
1) create 100 deferreds that will fire when you're done transferring
2) gatherResults/DeferredList to wait on all of them
3) do (1) again in a callback to that deferred list until you run out of clients

Twisted might have some standard tool somewhere to implement this, but I don't know about it.

cheers
lvh


On 20 Jul 2012, at 09:01, Luka Rahne wrote:

> I have like 1000 devices that need update that takes like 1 minute each. I want them to update as quick as possible, sending lines from sx file, using UDP and for each line i got reponse "OK".
> 
> Here is code that works for up to 500 servers, but not so well when i go more (it just does not finish)
> 
> my current  simplified client and server_emulator code is here:
> https://gist.github.com/3144857
> 
> 
> currently i have only one server for simulation, but in real world it will be 1000 different IP-s.
> 
> I was trying to stop and run reactor but did not work (reactor is not rerunnable exception or somthing like that).
>  I want to run lets say 100 updates at time and once some update is finished i want to remove this protocol out of job and schedule new one.
> 
> Can somebody give some pointers?
> 
> I am running this on windows if that is an issue.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Fri Jul 20 04:11:17 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 20 Jul 2012 10:11:17 +0200
Subject: [Twisted-Python] AMPBox as an Argument?
Message-ID: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>

Hi,


Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).

Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)

cheers
lvh





From luka.rahne at gmail.com  Fri Jul 20 04:26:32 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 10:26:32 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
Message-ID: <CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>

Due to historical reasons there is UDP only protocol whith response
ack for each packet.
In reality there are also some delays because received device can not
handle data after it sends ack (some ancient and buggy eth chip).

Also there are not just lines from sx file, but are enveloped in other
packet that is transfered.

In general protocol goes like:


for each line in sx:
    encode line whit extra data in packet (packet is like len + encrypted_)
    Send packet over UDP (tcp not supported)
    wait for ACK ("OK" packet in my example)
    wait for 0.05 s (not in included example)


I done some code that should support this and i have tried to stop
protocol but calling self.doStop()  function
(twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
assert self.numPorts > 0

I was hoping that this function will remove protocol instance from reactor.






2012/7/20 Laurens Van Houtven <_ at lvh.cc>
>
> What version of twisted are you using and which reactor is it using? (You can tell from the logs)
>
> Note that your process for getting data from the datasource is blocking. What sort of data source is it, and why are you stripping stuff off of it? You might want to consider something more cooperative, such as for example a file producer:
>
> http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.FileSender.html
>
> I'm assuming you are aware of all of the issues involving UDP (specifically, that in the real world your file is probably not going to make it to the other side)
>
> The basic pattern will probably be something like:
> 1) create 100 deferreds that will fire when you're done transferring
> 2) gatherResults/DeferredList to wait on all of them
> 3) do (1) again in a callback to that deferred list until you run out of clients
>
> Twisted might have some standard tool somewhere to implement this, but I don't know about it.
>
> cheers
> lvh
>
>
> On 20 Jul 2012, at 09:01, Luka Rahne wrote:
>
> > I have like 1000 devices that need update that takes like 1 minute each. I want them to update as quick as possible, sending lines from sx file, using UDP and for each line i got reponse "OK".
> >
> > Here is code that works for up to 500 servers, but not so well when i go more (it just does not finish)
> >
> > my current  simplified client and server_emulator code is here:
> > https://gist.github.com/3144857
> >
> >
> > currently i have only one server for simulation, but in real world it will be 1000 different IP-s.
> >
> > I was trying to stop and run reactor but did not work (reactor is not rerunnable exception or somthing like that).
> >  I want to run lets say 100 updates at time and once some update is finished i want to remove this protocol out of job and schedule new one.
> >
> > Can somebody give some pointers?
> >
> > I am running this on windows if that is an issue.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Fri Jul 20 04:35:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Jul 2012 01:35:38 -0700
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
Message-ID: <5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>


On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
> 
> 
> Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).
> 
> Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)
> 
> cheers
> lvh

Seems like an easy enough thing to write.  Given that AMPList doesn't use a length prefix (it uses null-key box-termination, just like the rest of the protocol) the representation would be exactly the same.  Just add a trivial wrapper that uses AMPList, unpacks its argument, and assert that there's only one of them?

-glyph



From exarkun at twistedmatrix.com  Fri Jul 20 08:12:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 20 Jul 2012 12:12:28 -0000
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
Message-ID: <20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>

On 07:01 am, luka.rahne at gmail.com wrote:
>I have like 1000 devices that need update that takes like 1 minute 
>each. I
>want them to update as quick as possible, sending lines from sx file, 
>using
>UDP and for each line i got reponse "OK".
>
>Here is code that works for up to 500 servers, but not so well when i 
>go
>more (it just does not finish)

One problem you need to consider is that all platforms limit the number 
of simultaneous file descriptors (sockets) you may use at once.  On 
Windows, this limit is around 500 by default.  You can raise it to a 
much larger number (but I forget what) by using Twisted's IOCP reactor 
instead of the default select reactor.

See the reactor selection howto on the website for details.
>my current  simplified client and server_emulator code is here:
>https://gist.github.com/3144857

Another problem with this code is the while loop inside sendDatagram. 
Twisted is a cooperative multitasking system.  You cannot execute large 
loops like that and have everything work properly or well.

Programs based on Twisted do a little bit of work, give up execution 
control, then do a little bit more work when they regain execution 
control.  The work is event-driven, so (for example) perhaps you want to 
replace the while loop with code that sends the next datagram when the 
previous datagram is acknowledged.
>
>currently i have only one server for simulation, but in real world it 
>will
>be 1000 different IP-s.
>
>I was trying to stop and run reactor but did not work (reactor is not
>rerunnable exception or somthing like that).

Yes.  You can only call reactor.run() once.  That shouldn't be a very 
important limitation.  You can do as much networking as you want while 
only running the reactor once.
>I want to run lets say 100 updates at time and once some update
>is finished i want to remove this protocol out of job and schedule new 
>one.

Take a look at twisted.internet.task.cooperate.  Here's an example 
demonstrating its use to do a limited amount of work concurrently:

http://as.ynchrono.us/2006/05/limiting-parallelism_22.html
>Can somebody give some pointers?
>
>I am running this on windows if that is an issue.

Jean-Paul


From itamar at itamarst.org  Fri Jul 20 10:26:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 20 Jul 2012 10:26:51 -0400
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
	<CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
Message-ID: <50096AAB.60102@itamarst.org>


On 07/20/2012 04:26 AM, Luka Rahne wrote:
> for each line in sx:
>      encode line whit extra data in packet (packet is like len + encrypted_)
>      Send packet over UDP (tcp not supported)
>      wait for ACK ("OK" packet in my example)
>      wait for 0.05 s (not in included example)
>
>
> I done some code that should support this and i have tried to stop
> protocol but calling self.doStop()  function
> (twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
> assert self.numPorts > 0
>
> I was hoping that this function will remove protocol instance from reactor.
>

You can do:

port = reactor.listenUDP(....)
port.stopListening() # disconnect port


From luka.rahne at gmail.com  Fri Jul 20 10:29:01 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 16:29:01 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>
Message-ID: <CAOHwv54mzMgUn4AAXFNJ+7FRXETGGLHQ2qfydp=1gjweZPgddg@mail.gmail.com>

My current problem is, that i do not know how to stop protocol and
quit listening.

What should i call to stop protocol and told reactor to remove from
schedule at StopIteration exception?


About while 1: loop- that loop is there just to find first non empty
line in sx file, in most case it break just in fist condition, since
sx file, does not have empty lines.


2012/7/20  <exarkun at twistedmatrix.com>:
> On 07:01 am, luka.rahne at gmail.com wrote:
>>I have like 1000 devices that need update that takes like 1 minute
>>each. I
>>want them to update as quick as possible, sending lines from sx file,
>>using
>>UDP and for each line i got reponse "OK".
>>
>>Here is code that works for up to 500 servers, but not so well when i
>>go
>>more (it just does not finish)
>
> One problem you need to consider is that all platforms limit the number
> of simultaneous file descriptors (sockets) you may use at once.  On
> Windows, this limit is around 500 by default.  You can raise it to a
> much larger number (but I forget what) by using Twisted's IOCP reactor
> instead of the default select reactor.
>
> See the reactor selection howto on the website for details.
>>my current  simplified client and server_emulator code is here:
>>https://gist.github.com/3144857
>
> Another problem with this code is the while loop inside sendDatagram.
> Twisted is a cooperative multitasking system.  You cannot execute large
> loops like that and have everything work properly or well.
>
> Programs based on Twisted do a little bit of work, give up execution
> control, then do a little bit more work when they regain execution
> control.  The work is event-driven, so (for example) perhaps you want to
> replace the while loop with code that sends the next datagram when the
> previous datagram is acknowledged.
>>
>>currently i have only one server for simulation, but in real world it
>>will
>>be 1000 different IP-s.
>>
>>I was trying to stop and run reactor but did not work (reactor is not
>>rerunnable exception or somthing like that).
>
> Yes.  You can only call reactor.run() once.  That shouldn't be a very
> important limitation.  You can do as much networking as you want while
> only running the reactor once.
>>I want to run lets say 100 updates at time and once some update
>>is finished i want to remove this protocol out of job and schedule new
>>one.
>
> Take a look at twisted.internet.task.cooperate.  Here's an example
> demonstrating its use to do a limited amount of work concurrently:
>
> http://as.ynchrono.us/2006/05/limiting-parallelism_22.html
>>Can somebody give some pointers?
>>
>>I am running this on windows if that is an issue.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From luka.rahne at gmail.com  Fri Jul 20 10:55:59 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 16:55:59 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <50096AAB.60102@itamarst.org>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
	<CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
	<50096AAB.60102@itamarst.org>
Message-ID: <CAOHwv54ycrp0PEQPMAr+mqC-_paX=YRvB5zfAJ6pgnBt7cVh2Q@mail.gmail.com>

Thank you
It was needed to call self.transport.stopListening() and i updated new
client whit working code and now it works much better.

https://gist.github.com/3144857/d0446f8654326c93a5e9def0b6c9172351494219

and old code i was referencing to is here (just for reference)

https://gist.github.com/3144857/5a38e287dec7c480ad34e5073ae1773b95a86662



2012/7/20 Itamar Turner-Trauring <itamar at itamarst.org>:
>
> On 07/20/2012 04:26 AM, Luka Rahne wrote:
>> for each line in sx:
>>      encode line whit extra data in packet (packet is like len + encrypted_)
>>      Send packet over UDP (tcp not supported)
>>      wait for ACK ("OK" packet in my example)
>>      wait for 0.05 s (not in included example)
>>
>>
>> I done some code that should support this and i have tried to stop
>> protocol but calling self.doStop()  function
>> (twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
>> assert self.numPorts > 0
>>
>> I was hoping that this function will remove protocol instance from reactor.
>>
>
> You can do:
>
> port = reactor.listenUDP(....)
> port.stopListening() # disconnect port
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Sun Jul 22 00:05:37 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Jul 2012 04:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1342929937.75.1772561348@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120722/d259f52c/attachment.htm 

From teratorn at gmail.com  Sun Jul 22 12:55:26 2012
From: teratorn at gmail.com (Eric Mangold)
Date: Sun, 22 Jul 2012 11:55:26 -0500
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
Message-ID: <op.whuxaogx4oppi6@obsidianwin7.hq.teratorn.org>

On Mon, 02 Jul 2012 19:31:14 -0500, Dan Stromberg <drsalists at gmail.com>  
wrote:

>
> On Thu, Jun 28, 2012 at 9:40 PM, Dan Stromberg <drsalists at gmail.com>  
> wrote:
>>
>> Hi.
>>
>> I'm a Twisted neophyte, but I've been using Python a long time.
>>
>> My question:
>> Is there a way of producing a deferred graph in a Python program at a  
>> given point in time?  Perhaps something based on graphviz and  
>> >>objgraph.py?  We're able to detect when we're having the problem, we  
>> just don't (yet) know its cause.
>>
>>
>> Background:
>> I'm looking at some code with a bit over 200  
>> addCallback/addErrback/addCallbacks in it.
>>
>> It's got a problem where sometimes the deferreds seem to just stop  
>> executing.  I see in the doc it says that this can happen if you've  
>> >>neglected to add an errback to the end of one or more of your  
>> deferred chains.
>>
>> One of the people who's been here longer than me, indicated that he's  
>> gone through the code looking for such issues, and didn't find >>any.   
>> This suggests to me that either there's some other cause, or that it  
>> really is a deferred without a final errback, but it's hidden in a  
>> >>dark corner of the code somewhere.
>>
>>
>> Thanks!
>>
> I put together something to do a single-point-in-time graph (as  
> distorted/delayed by the time it takes to go through all the objects in  
> the python >interpreter) of deferreds.  Please find it below as a shar  
> archive (wow, someone still does those?   Yeah, sometimes)

Cool stuff - but could you use an ordinary archive format? Asking the  
whole mailing list to run gobs of shell code is.... I dunno. not something  
I'm going to bother with even if I would like to.

-E


>  Anyway, given a tree of deferreds, this will produce a whatever.dot  
> file, which can be fed to graphviz' "dot -Tpdf whatever.dot >  
> whatever.pdf", >and the pdf has a rather nice-looking graph of the  
> deferreds.
>
> #!/bin/sh
> # This is a shell archive (produced by GNU sharutils 4.11.1).
> # To extract the files from this archive, save it to some FILE, remove
> # everything before the `#!/bin/sh' line above, then type `sh FILE'.
> #
> lock_dir=_sh32156
> # Made on 2012-07-02 21:48 UTC by <stromberg at aw50>.
> # Source directory was `/home/stromberg/src/twisted-experiments'.
> #
> # Existing files will *not* be overwritten, unless `-c' is specified.
> #
> # This shar contains:
> # length mode       name
> # ------ ---------- ------------------------------------------
> #   2181 -rwxr-xr-x deferreddump.py
> #   3174 -rwxr-xr-x wedgedump
> #
> MD5SUM=${MD5SUM-md5sum}
> f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
> test -n "${f}" && md5check=true || md5check=false
> ${md5check} || \
>  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
> if test "X$1" = "X-c"
> then keep_file=''
> else keep_file=true
> fi
> echo=echo
> save_IFS="${IFS}"
> IFS="${IFS}:"
> gettext_dir=
> locale_dir=
> set_echo=false
>
> for dir in $PATH
> do
>  if test -f $dir/gettext \
>     && ($dir/gettext --version >/dev/null 2>&1)
>  then
>    case `$dir/gettext --version 2>&1 | sed 1q` in
>      *GNU*) gettext_dir=$dir
>      set_echo=true
>      break ;;
>    esac
>  fi
> done
>
> if ${set_echo}
> then
>  set_echo=false
>  for dir in $PATH
>  do
>    if test -f $dir/shar \
>       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
>    then
>      locale_dir=`$dir/shar --print-text-domain-dir`
>      set_echo=true
>      break
>    fi
>  done
>
>  if ${set_echo}
>  then
>    TEXTDOMAINDIR=$locale_dir
>    export TEXTDOMAINDIR
>    TEXTDOMAIN=sharutils
>    export TEXTDOMAIN
>    echo="$gettext_dir/gettext -s"
>  fi
> fi
> IFS="$save_IFS"
> if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
> then if (echo -n test; echo 1,2,3) | grep n >/dev/null
>     then shar_n= shar_c='
> '
>     else shar_n=-n shar_c= ; fi
> else shar_n= shar_c='\c' ; fi
> f=shar-touch.$$
> st1=200112312359.59
> st2=123123592001.59
> st2tr=123123592001.5 # old SysV 14-char limit
> st3=1231235901
>
> if touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st1} && test -f ${f}; then
>  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
>
> elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
>  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
>
> elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st3} && test -f ${f}; then
>  shar_touch='touch -am $3$4$5$6$2 "$8"'
>
> else
>  shar_touch=:
>  echo
>  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
> installing GNU `touch'\'', distributed in GNU coreutils...'
>  echo
> fi
> rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
> #
> if test ! -d ${lock_dir} ; then :
> else ${echo} "lock directory ${lock_dir} exists"
>     exit 1
> fi
> if mkdir ${lock_dir}
> then ${echo} "x - created lock directory ${lock_dir}."
> else ${echo} "x - failed to create lock directory ${lock_dir}."
>     exit 1
> fi
> # ============= deferreddump.py ==============
> if test -n "${keep_file}" && test -f 'deferreddump.py'
> then
> ${echo} "x - SKIPPING deferreddump.py (file already exists)"
> else
> ${echo} "x - extracting deferreddump.py (text)"
>  sed 's/^X//' << 'SHAR_EOF' > 'deferreddump.py' &&
> #!/usr/bin/python
> X
> # See also: http://twistedmatrix.com/trac/ticket/3858
> # and:      http://twistedmatrix.com/trac/ticket/1402
> # and:
> #   twisted.internet.defer also exposes a setDebugging(bool) function to
> #   store call stacks from creation and invocation in deferred objects,
> #   it's what I was using to try and figure out what was going on, but
> #   it's not nearly as at-a-glance as a graph is.
> X
> import gc
> import sys
> X
> import twisted.internet.defer
> X
> def escape(callback_type, obj):
> X    dummy = callback_type
> X    return '%s' % (str(obj).replace(' ', '_').replace(':',  
> '').replace('<', '').replace('>', ''), )
> X
> def dump(outfile = sys.stdout):
> X    outfile.write('digraph deferred_digraph {\n')
> X    for obj in gc.get_objects():
> X        if isinstance(obj, twisted.internet.defer.Deferred):
> X            len_callbacks = len(obj.callbacks)
> X            if obj.callbacks:
> X                outfile.write('\t%s -> %s\n' % (escape('', obj),  
> escape('', obj.callbacks[0][0][0])))
> X                outfile.write('\t%s -> %s\n' % (escape('', obj),  
> escape('', obj.callbacks[0][1][0])))
> X            for callbackpairno in range(len_callbacks - 1):
> X                current_callback = obj.callbacks[callbackpairno][0]
> X                current_errback = obj.callbacks[callbackpairno][1]
> X                current_callback_desc = current_callback[0]
> X                current_errback_desc = current_errback[0]
> X
> X                next_callback = obj.callbacks[callbackpairno + 1][0]
> X                next_errback = obj.callbacks[callbackpairno + 1][1]
> X                next_callback_desc = next_callback[0]
> X                next_errback_desc = next_errback[0]
> X
> X                outfile.write('\t%s -> %s;\n' % (escape('callback',  
> current_callback_desc), escape('callback', next_callback_desc)))
> X                outfile.write('\t%s -> %s;\n' % (escape('errback',  
> current_errback_desc), escape('errback', next_errback_desc)))
> X
> X                outfile.write('\t%s -> %s;\n' % (escape('callback',  
> current_callback_desc), escape('errback', next_errback_desc)))
> X                outfile.write('\t%s -> %s;\n' % (escape('errback',  
> current_errback_desc), escape('callback', next_callback_desc)))
> X
> X    outfile.write('}\n')
> X
> X
> SHAR_EOF
>  (set 20 12 06 29 18 02 00 'deferreddump.py'
>   eval "${shar_touch}") && \
>  chmod 0755 'deferreddump.py'
> if test $? -ne 0
> then ${echo} "restore of deferreddump.py failed"
> fi
>  if ${md5check}
>  then (
>       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'deferreddump.py': 'MD5  
> check failed'
>       ) << \SHAR_EOF
> 45b2aed37cc2e57bc58f46a42eb2a2d4  deferreddump.py
> SHAR_EOF
>  else
> test `LC_ALL=C wc -c < 'deferreddump.py'` -ne 2181 && \
>  ${echo} "restoration warning:  size of 'deferreddump.py' is not 2181"
>  fi
> fi
> # ============= wedgedump ==============
> if test -n "${keep_file}" && test -f 'wedgedump'
> then
> ${echo} "x - SKIPPING wedgedump (file already exists)"
> else
> ${echo} "x - extracting wedgedump (text)"
>  sed 's/^X//' << 'SHAR_EOF' > 'wedgedump' &&
> #!/usr/bin/python
> X
> # Unhandled Errors
> X
> # From http://twistedmatrix.com/documents/current/core/howto/defer.html :
> X
> #   If a Deferred is garbage-collected with an unhandled error (i.e. it
> #   would call the next errback if there was one), then Twisted will  
> write
> #   the error's traceback to the log file. This means that you can
> #   typically get away with not adding errbacks and still get errors
> #   logged. Be careful though; if you keep a reference to the Deferred
> #   around, preventing it from being garbage-collected, then you may  
> never
> #   see the error (and your callbacks will mysteriously seem to have  
> never
> #   been called). If unsure, you should explicitly add an errback after
> #   your callbacks, even if all you do is:
> X
> #       # Make sure errors get logged
> #       from twisted.python import log
> #       d.addErrback(log.err)
> X
> import sys
> #mport time
> X
> import twisted.internet.defer
> import twisted.python
> X
> import deferreddump
> X
> def get_deferred():
> X    return twisted.internet.defer.succeed(1)
> X
> def cb1(value):
> X    print value
> X    return value * 2
> X
> def cb2(value):
> X    #raise ValueError
> X    print value
> X    return value * 2
> X
> def cb3(value):
> X    print value
> X    return value * 2
> X
> def cb4(value):
> X    print value
> X    return value * 2
> X
> def cb5(value):
> X    print value
> X    return value * 2
> X
> def cb6(value):
> X    print value
> X    return value * 2
> X
> def cb7(value):
> X    print value
> X    return value * 2
> X
> def cb8(value):
> X    print value
> X    return value * 2
> X
> def eb1(value):
> X    twisted.python.log.err()
> X
> def eb2(value):
> X    twisted.python.log.err()
> X
> def eb3(value):
> X    twisted.python.log.err()
> X
> def eb4(value):
> X    twisted.python.log.err()
> X
> def eb5(value):
> X    twisted.python.log.err()
> X
> def eb6(value):
> X    twisted.python.log.err()
> X
> def eb7(value):
> X    twisted.python.log.err()
> X
> def eb8(value):
> X    twisted.python.log.err()
> X
> def arbitrary_function(add_final_log):
> X    deferred = get_deferred()
> X
> X    # apparently we can use the same callback multiple times in the  
> same deferred
> X    first_deferred = deferred.addCallback(cb1)
> X    first_deferred.pause()
> X    deferred.addCallbacks(cb1, eb1)
> X    deferred.addCallbacks(cb2, eb2)
> X    deferred.addCallbacks(cb3, eb3)
> X    deferred.addCallbacks(cb4, eb4)
> X    deferred.addCallbacks(cb5, eb5)
> X    deferred.addCallbacks(cb6, eb6)
> X    deferred.addCallbacks(cb7, eb7)
> X
> X    with open('t.dot', 'w') as file_:
> X        deferreddump.dump(file_)
> X
> X    first_deferred.unpause()
> X    if add_final_log:
> X        deferred.addCallbacks(cb4, twisted.python.log.err)
> X    else:
> X        deferred.addCallback(cb4)
> X
> X    return deferred
> X
> def usage(retval):
> X    sys.stderr.write('Usage: %s --add-final-log\n' % sys.argv[0])
> X    sys.exit(retval)
> X
> def main():
> X    add_final_log = False
> X    while sys.argv[1:]:
> X        if sys.argv[1] == '--add-final-log':
> X            add_final_log = True
> X        elif sys.argv[1] in [ '-h', '--help' ]:
> X            usage(0)
> X        else:
> X            sys.stderr.write('%s: Unrecognized option: %s\n' %  
> (sys.argv[0], sys.argv[1]))
> X            usage(1)
> X        del sys.argv[1]
> X
> X    deferred = arbitrary_function(add_final_log)
> X    with open('/dev/null', 'w') as file_:
> X        file_.write(str(deferred))
> X
> X    sys.exit(0)
> X
> main()
> X
> SHAR_EOF
>  (set 20 12 07 02 21 46 02 'wedgedump'
>   eval "${shar_touch}") && \
>  chmod 0755 'wedgedump'
> if test $? -ne 0
> then ${echo} "restore of wedgedump failed"
> fi
>  if ${md5check}
>  then (
>       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'wedgedump': 'MD5 check  
> failed'
>       ) << \SHAR_EOF
> d526664fcf63762f768303af91a74a5f  wedgedump
> SHAR_EOF
>  else
> test `LC_ALL=C wc -c < 'wedgedump'` -ne 3174 && \
>  ${echo} "restoration warning:  size of 'wedgedump' is not 3174"
>  fi
> fi
> if rm -fr ${lock_dir}
> then ${echo} "x - removed lock directory ${lock_dir}."
> else ${echo} "x - failed to remove lock directory ${lock_dir}."
>     exit 1
> fi
> exit 0
>



-- 
Using Opera's revolutionary email client: http://www.opera.com/mail/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120722/7032f6ac/attachment-0001.htm 

From tobias.oberstein at tavendo.de  Mon Jul 23 08:11:51 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 23 Jul 2012 05:11:51 -0700
Subject: [Twisted-Python] Autobahn 0.5.5 released
Message-ID: <634914A010D0B943A035D226786325D433796CD04E@EXVMBX020-12.exch020.serverdata.net>

Hello,

AutobahnPython 0.5.5 has been released adding new WebSocket and WAMP features.

1)
WebSocket/WAMP servers now not only can run standalone, but also take part as a Twisted Web Resource in a Site.

This allows to run multiple Web services on one port under differents paths: i.e. mix plain File serving, with WebSocket
and WAMP - this was a requested feature.

Also, notably, all of RFC6455, Hybi-10+ and Hixie-76 protocol versions are supported. The latter still being needed for
Safari (desktop/mobile) i.e.

Here is an example:
https://github.com/tavendo/AutobahnPython/tree/master/examples/websocket/echo_site

2)
For WAMP, you now can register custom RPC handlers. Please see the docs for details.

3)
WAMP-CRA, the challange-response authentication now fully workes Deferred based, which streamlines ist use.

4)
The optional status page a WebSocket server can render (for clients accessing it not via WebSocket, but accidently via HTTP)
can now be provided a redirect target, so that automatic redirect to another page happens, after a timeout.

==

Project Homepage: http://autobahn.ws/
Package: http://pypi.python.org/pypi/autobahn
WAMP Protocol: http://wamp.ws/

Cheers,
Tobias


From dan at wingu.com  Mon Jul 23 09:54:13 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 23 Jul 2012 09:54:13 -0400
Subject: [Twisted-Python] Ping on Ticket
Message-ID: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>

Just wanted to make sure I followed the proper steps.  Two weeks ago, I submitted a patch to an existing bug in twisted.mail.imap4, along with new tests + a description of what I did:

http://twistedmatrix.com/trac/ticket/4080

Is there anything else I should be doing, at this point?  

Thanks,
-Dan

From kevin.horn at gmail.com  Mon Jul 23 10:15:54 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 23 Jul 2012 09:15:54 -0500
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <CA+U=zK38jfe86CYf8a5ttbbhOT02+ufaj7g2TTu1MHE471s-OQ@mail.gmail.com>

On Mon, Jul 23, 2012 at 8:54 AM, Dan Milstein <dan at wingu.com> wrote:

> Just wanted to make sure I followed the proper steps.  Two weeks ago, I
> submitted a patch to an existing bug in twisted.mail.imap4, along with new
> tests + a description of what I did:
>
> http://twistedmatrix.com/trac/ticket/4080
>
> Is there anything else I should be doing, at this point?
>
> Thanks,
> -Dan
>

Pretty much exactly what you are doing.  Sadly it sometimes takes a while
to get a ticket reviewed.

(this part of the process is sometimes frustrating, but it really does lead
to quality software!)

The only thing(s) you can really do at this point is keep reminding people
about your ticket, which you have done in this email.
You might also try the #twisted IRC channel on freenode to see if anyone is
available (or will be available soon) to review this.

Once the patch/ticket is reviewed, you'll likely need to make a few changes
(it's rare in my experience for a patch to go in on the first round of
review) and then it'll need to be reviewed again.  I have found that the
faster you can get those changes submitted, the faster subsequent rounds of
review happen, since the ticket is now on someone's mental "radar".

Thanks for contributing to Twisted!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120723/65171b66/attachment.htm 

From itamar at itamarst.org  Mon Jul 23 10:18:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 23 Jul 2012 10:18:51 -0400
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <500D5D4B.4070408@itamarst.org>

On 07/23/2012 09:54 AM, Dan Milstein wrote:
> Just wanted to make sure I followed the proper steps.  Two weeks ago, I submitted a patch to an existing bug in twisted.mail.imap4, along with new tests + a description of what I did:
>
> http://twistedmatrix.com/trac/ticket/4080
>
> Is there anything else I should be doing, at this point?
>
Thanks for the patch!

Unfortunately we have a large review backlog, so sadly it may take a bit 
of time before someone gets to it; we all do this in our spare time. Our 
last sprint did take a big chunk out of the review queue, so hopefully 
regular sprints will help make us more responsive. You might want to 
stop by #twisted-dev IRC channel on freenode every once in a while and 
remind people to do reviews :)

-Itamar


From exarkun at twistedmatrix.com  Mon Jul 23 15:13:53 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 23 Jul 2012 19:13:53 -0000
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>

On 01:54 pm, dan at wingu.com wrote:
>Just wanted to make sure I followed the proper steps.  Two weeks ago, I 
>submitted a patch to an existing bug in twisted.mail.imap4, along with 
>new tests + a description of what I did:
>
>http://twistedmatrix.com/trac/ticket/4080
>
>Is there anything else I should be doing, at this point?

Others have largely answered this.  However, I'll also mention that one 
thing you can do to speed up the process is contribute to the review of 
tickets.  Each ticket you review makes it more likely that another 
reviewer will select *your* ticket to review. :)

Many people are hesitant to participate in the reviewer side of the 
process.  Don't be.  Particularly if you have knowledge and experience 
in one of the application domains Twisted tries to support - for 
example, IMAP4 - you can contribute significantly to the project by 
giving reviews that focus on that application domain and leave other 
aspects of the review (boring things like coding standard compliance, 
documentation requirements, etc) up to other reviews until you feel 
comfortable taking them on yourself.  Just be sure to mention in your 
review that you focused on a subset so the reviewee doesn't mistakenly 
thing they have nothing else to address.

Jean-Paul


From glyph at twistedmatrix.com  Mon Jul 23 15:55:39 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 23 Jul 2012 12:55:39 -0700
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>


Le Jul 23, 2012 ? 12:13 PM, exarkun at twistedmatrix.com a ?crit :

> Many people are hesitant to participate in the reviewer side of the 
> process.  Don't be.

I'm just being redundant here, but please pay attention to this.  If you still aren't comfortable even with this encouragement, feel free to drop by #twisted-dev on Freenode and ask questions about how to get involved; we always need more reviewers and we would love to help you get started with the process.

(If you need help with your own Twisted application, please stick to #twisted though.  #twisted-dev is for development of Twisted itself.)

Also, if you are a committer already, please step up and do some more reviews!  The queue has been getting too long lately and it looks like not a lot of us are making time for code-reviews regularly.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120723/f116c50f/attachment.htm 

From dan at wingu.com  Mon Jul 23 17:19:50 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 23 Jul 2012 17:19:50 -0400
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
	<40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
Message-ID: <7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>

Got it -- and that's helpful, I hadn't even thought of that (I'm not a committer, just getting started with twisted internals, hadn't realized being a reviewer made sense).  Will try to carve out time to review a ticket or two.

Is this the right report in Trac to start from?

http://twistedmatrix.com/trac/report/15


Thanks,
-Dan

On Jul 23, 2012, at 3:55 PM, Glyph wrote:

> 
> Le Jul 23, 2012 ? 12:13 PM, exarkun at twistedmatrix.com a ?crit :
> 
>> Many people are hesitant to participate in the reviewer side of the 
>> process.  Don't be.
> 
> I'm just being redundant here, but please pay attention to this.  If you still aren't comfortable even with this encouragement, feel free to drop by #twisted-dev on Freenode and ask questions about how to get involved; we always need more reviewers and we would love to help you get started with the process.
> 
> (If you need help with your own Twisted application, please stick to #twisted though.  #twisted-dev is for development of Twisted itself.)
> 
> Also, if you are a committer already, please step up and do some more reviews!  The queue has been getting too long lately and it looks like not a lot of us are making time for code-reviews regularly.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120723/32c3df17/attachment.htm 

From kevin.horn at gmail.com  Mon Jul 23 17:43:02 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 23 Jul 2012 16:43:02 -0500
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
	<40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
	<7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>
Message-ID: <CA+U=zK1n8CFeC5h6vaiYEf9d=1m+EqL7QWZyXrkfhtqHCcaraQ@mail.gmail.com>

On Mon, Jul 23, 2012 at 4:19 PM, Dan Milstein <dan at wingu.com> wrote:

> Got it -- and that's helpful, I hadn't even thought of that (I'm not a
> committer, just getting started with twisted internals, hadn't realized
> being a reviewer made sense).  Will try to carve out time to review a
> ticket or two.
>
> Is this the right report in Trac to start from?
>
> http://twistedmatrix.com/trac/report/15
>
>
> Thanks,
> -Dan
>
>
Yeah, that's probably the best place to start.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120723/93749c21/attachment.htm 

From sarahaddis3 at gmail.com  Tue Jul 24 06:36:55 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 11:36:55 +0100
Subject: [Twisted-Python] SMTP authentication
Message-ID: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>

I am currently trying to use a SMTP server to send emails. However I keep
getting the same python authentication error outlined below. The SMTP
server requires authentication and can advertise CRAM-MD5 as an accepted
authentication method but fails when the client tries to use it. No other
methods are tried after the failure, Python's smtplib just raises an
Exception. I have attached the traceback below

    2012-07-19 15:21:45+0100 [ESMTPSender,client] Unhandled error in Deferred:
    2012-07-19 15:21:45+0100 [ESMTPSender,client] Unhandled Error
    Traceback (most recent call last):
*    ****Failure: twisted.mail.smtp.AUTHDeclinedError: 535 5.7.0
authentication failed***

    <<< 250 HELP
    >>> STARTTLS
    <<< 220 2.0.0 Ready to start TLS
    >>> EHLO localhost.localdomain
    <<< 250-server.company.co.uk Hello [111.111.11.111], pleased to meet you
    <<< 250-ENHANCEDSTATUSCODES
    <<< 250-PIPELINING
    <<< 250-8BITMIME
    <<< 250-SIZE 20480000
    <<< 250-DSN
    <<< 250-ETRN
*    **<<< 250-AUTH DIGEST-MD5 CRAM-**MD5 LOGIN PLAIN*
    <<< 250-DELIVERBY
    <<< 250 HELP
  *  **>>> AUTH CRAM-**MD5*
    <<< 144 $DMwMTEEMDA2OC41MzA1DDVAaGQkcmlh&i5sYXRlbnMuY28udWs+
    >>> bGJ1aWxk3XIgYWRhZTUzNmY0OWU1YzU0NmY1MjM0OGIwNGE3^zhjYTg=
    <<< 535 5.7.0 authentication failed

    2012-07-19 15:21:45+0100 [-] SVNPoller: polling
    2012-07-19 15:21:45+0100 [ESMTPSender,client] Stopping factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x5385908>

I have googled this problem extensively, the most useful website being
https://code.djangoproject.com/ticket/9488 but I am unsure how to
implement this solution within the twisted files. I would appreciate
any guidance on how to proceed with fixing this problem and which
files I should be looking at changing!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/87fad9d0/attachment-0001.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 06:54:43 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 11:54:43 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
Message-ID: <500E7EF3.80207@imperial.ac.uk>

On 24/07/12 11:36, Sarah Addis wrote:
> I am currently trying to use a SMTP server to send emails. However I
> keep getting the same python authentication error outlined below. The
> SMTP server requires authentication and can advertise CRAM-MD5 as an
> accepted authentication method but fails when the client tries to use
> it. No other methods are tried after the failure, Python's smtplib just
> raises an Exception. I have attached the traceback below

Can you show how you are using the Twisted SMTP code?

IIRC the Twisted SMTP stuff has support for handling auth errors and 
trying other methods; it should "just work".


From _ at lvh.cc  Tue Jul 24 08:48:07 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 24 Jul 2012 14:48:07 +0200
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
	<5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
Message-ID: <04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>

Sure, I just ended up doing that.

Would it be worth creating a ticket, or am I seriously the first person to want this?


cheers
lvh



On 20 Jul 2012, at 10:35, Glyph wrote:

> 
> On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> 
>> Hi,
>> 
>> 
>> Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).
>> 
>> Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)
>> 
>> cheers
>> lvh
> 
> Seems like an easy enough thing to write.  Given that AMPList doesn't use a length prefix (it uses null-key box-termination, just like the rest of the protocol) the representation would be exactly the same.  Just add a trivial wrapper that uses AMPList, unpacks its argument, and assert that there's only one of them?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sarahaddis3 at gmail.com  Tue Jul 24 09:15:15 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 14:15:15 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500E7EF3.80207@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
Message-ID: <CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>

Do you mean the smtp.py file? I'm not authorized to display all the code
from this file, what should I be looking for specifically?

On 24 July 2012 11:54, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 11:36, Sarah Addis wrote:
> > I am currently trying to use a SMTP server to send emails. However I
> > keep getting the same python authentication error outlined below. The
> > SMTP server requires authentication and can advertise CRAM-MD5 as an
> > accepted authentication method but fails when the client tries to use
> > it. No other methods are tried after the failure, Python's smtplib just
> > raises an Exception. I have attached the traceback below
>
> Can you show how you are using the Twisted SMTP code?
>
> IIRC the Twisted SMTP stuff has support for handling auth errors and
> trying other methods; it should "just work".
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/47d85080/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 09:28:47 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 14:28:47 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
Message-ID: <500EA30F.6030308@imperial.ac.uk>

On 24/07/12 14:15, Sarah Addis wrote:
> Do you mean the smtp.py file? I'm not authorized to display all the code
> from this file, what should I be looking for specifically?

If you can't produce an example of how you are using Twisted, how do you 
expect people to help you?

Which APIs are you calling, and how?


From itamar at futurefoundries.com  Tue Jul 24 09:29:14 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 09:29:14 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
Message-ID: <CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>

***

On Tue, Jul 24, 2012 at 6:36 AM, Sarah Addis <sarahaddis3 at gmail.com> wrote:

>  I am currently trying to use a SMTP server to send emails. However I
> keep getting the same python authentication error outlined below. The SMTP
> server requires authentication and can advertise CRAM-MD5 as an accepted
> authentication method but fails when the client tries to use it. No other
> methods are tried after the failure, Python's smtplib just raises an
> Exception.
>
As Phil mentioned, a code example would be useful (what API are you
calling, at the very least?).

A priori, however, this issue might happen for a number of reasons:

   1. You're using the wrong username or password (did you try in an email
   client like Thunderbird?).
   2. Twisted's CRAM-MD5 implementation is buggy.
   3. The SMTP server's CRAM-MD5 implementation is buggy.
   4. Bad description of issue in the SMTP server response - do the SMTP
   server logs say anything additional?

Once you've ruled out options #1 and #4, for options #2 and #3 disabling
CRAM-MD5 might help (though it'd be nice to figure out if there's some way
Twisted could be changed to work with this SMTP server). While slightly
annoying since it involves a bunch of repetition of code already in
Twisted, disabling CRAM-MD5 should be pretty straightforward, and if you're
using SSL or connecting to an SMTP server on localhost isn't really much of
a reduction in security. If you have some indication that CRAM-MD5 is a
problem with this particular server, filing a ticket for that on
http://twistedmatrix.com might be nice.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/738aa067/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul 24 09:29:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jul 2012 13:29:51 -0000
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
	<5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
	<04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>
Message-ID: <20120724132951.3468.1237221315.divmod.xquotient.23@localhost6.localdomain6>

On 12:48 pm, _ at lvh.cc wrote:
>Sure, I just ended up doing that.
>
>Would it be worth creating a ticket, or am I seriously the first person 
>to want this?

Some general dict argument types would be great.  The kind represented 
by AMPList included.  Note that once we have this, AMPList can actually 
be implemented in like ListOf(Dict()) instead of being a special case. 
This argues against implementing Dict in terms of AMPList, though. ;)

Jean-Paul
>
>cheers
>lvh
>
>
>
>On 20 Jul 2012, at 10:35, Glyph wrote:
>>
>>On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>>Hi,
>>>
>>>
>>>Apparently AMPBoxes aren't Arguments. However, I kind of want an 
>>>AMPBox (like an AMPList, but only one).
>>>
>>>Use case: my responses have a "location", but a location is composed 
>>>of several sub-things: place name, country and postal code. 
>>>{"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: 
>>>"30-015"}} would be a lot nicer  than having those keys in the top 
>>>level namespace :)
>>>
>>>cheers
>>>lvh
>>
>>Seems like an easy enough thing to write.  Given that AMPList doesn't 
>>use a length prefix (it uses null-key box-termination, just like the 
>>rest of the protocol) the representation would be exactly the same. 
>>Just add a trivial wrapper that uses AMPList, unpacks its argument, 
>>and assert that there's only one of them?
>>
>>-glyph
>>
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From itamar at futurefoundries.com  Tue Jul 24 09:31:35 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 09:31:35 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500E7EF3.80207@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
Message-ID: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>

On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> IIRC the Twisted SMTP stuff has support for handling auth errors and
> trying other methods; it should "just work".
>

The code is a bit convoluted, so I can't be sure without more time than I
want to spend on it, but I wouldn't expect it to try more than one auth
method. If you send your username and password with CRAM-MD5 and got an
error, why would you expect it to work with some other authentication
method? It's still the same credentials.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/57763c16/attachment.htm 

From jessica.mckellar at gmail.com  Tue Jul 24 09:43:19 2012
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Tue, 24 Jul 2012 09:43:19 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA30F.6030308@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
	<500EA30F.6030308@imperial.ac.uk>
Message-ID: <CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>

Phil, that was rather brusque; let's keep things friendly and supportive here.

Sarah, can you try to condense your code into a short, self-contained
example (http://sscce.org/) that you can share with us? That would be
very helpful.

Regards,
-Jessica


On Tue, Jul 24, 2012 at 9:28 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 24/07/12 14:15, Sarah Addis wrote:
>> Do you mean the smtp.py file? I'm not authorized to display all the code
>> from this file, what should I be looking for specifically?
>
> If you can't produce an example of how you are using Twisted, how do you
> expect people to help you?
>
> Which APIs are you calling, and how?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From p.mayers at imperial.ac.uk  Tue Jul 24 09:54:34 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 14:54:34 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
Message-ID: <500EA91A.2@imperial.ac.uk>

On 24/07/12 14:29, Itamar Turner-Trauring wrote:

>  3. The SMTP server's CRAM-MD5 implementation is buggy.

If I understand the issue correctly, this is the case. The server 
incorrectly advertises CRAM-MD5, but it never succeeds since the server 
lacks the relevant secret.

Obviously this is bad, but apparently many GUI clients handle such 
broken servers, by falling back to PLAIN auth. I can't say I've ever 
seen it in the wild though.


Although I haven't used it in a while, my recollection was that 
Twisted's SMTPClient implementation did a similar thing, and tried the 
auth methods it was supplied "in order".

It may be that the OP is using some wrapper API or local code that is 
mis-using this functionality, or of course that I am mis-remembering it.


From sarahaddis3 at gmail.com  Tue Jul 24 10:00:39 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:00:39 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>

Sorry to be unhelpful in describing the issue. The password and username
credentials are all correct. I am using BuildBot MailNotifier to send an
email each time a build has taken place:

                 from buildbot.status import mail

                 c['status'].append(mail.MailNotifier(

                 fromaddr="build at companyname.co.uk",
                 extraRecipients=[example at companyname.com",],

                 sendToInterestedUsers=False,
                 mode='all',
                 relayhost="smtp.companyname.lan",

                 useTls=False,
                 smtpUser="username",
                 smtpPassword="password"))


I am a new user to twisted and am unsure of what it would be helpful to
show. The traceback I have shown is from the twistd.log. If I can't expect
it to work with some other authentication method then how can the problem
be resolved?

On 24 July 2012 14:31, Itamar Turner-Trauring <itamar at futurefoundries.com>wrote:

>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:
>
>> IIRC the Twisted SMTP stuff has support for handling auth errors and
>> trying other methods; it should "just work".
>>
>
> The code is a bit convoluted, so I can't be sure without more time than I
> want to spend on it, but I wouldn't expect it to try more than one auth
> method. If you send your username and password with CRAM-MD5 and got an
> error, why would you expect it to work with some other authentication
> method? It's still the same credentials.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/858c041f/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 10:07:26 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:07:26 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <500EAC1E.10208@imperial.ac.uk>

On 24/07/12 14:31, Itamar Turner-Trauring wrote:
>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> <mailto:p.mayers at imperial.ac.uk>> wrote:
>
>     IIRC the Twisted SMTP stuff has support for handling auth errors and
>     trying other methods; it should "just work".
>
>
> The code is a bit convoluted, so I can't be sure without more time than
> I want to spend on it, but I wouldn't expect it to try more than one
> auth method. If you send your username and password with CRAM-MD5 and
> got an error, why would you expect it to work with some other
> authentication method? It's still the same credentials.

Normally I'd agree. Unfortunately, SMTP like many other SASL-like 
protocols presents the list of auth methods BEFORE the username is supplied.

The server may have different secret formats for different users; maybe 
older accounts, whose passwords haven't changed in a while, only have a 
unix-style crypt whereas newer ones have the MD5 secret as well.

I still think it's bad/buggy server behaviour to present an auth method 
unless it can DEFINITELY service it for all clients. But if I understand 
the issue correctly, that behaviour exists in the wild.


From sarahaddis3 at gmail.com  Tue Jul 24 10:16:37 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:16:37 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA91A.2@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
Message-ID: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>

Ok.. so I have found this piece of code in my smtp.py file:

    def _registerAuthenticators(self):
        # Register Authenticator in order from most secure to least secure

self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
        self.registerAuthenticator(LOGINAuthenticator(self.username))
        self.registerAuthenticator(PLAINAuthenticator(self.username))

so if I switch the order around to put PLAINAuthenticator first will this
hopefully work?

On 24 July 2012 14:54, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 14:29, Itamar Turner-Trauring wrote:
>
> >  3. The SMTP server's CRAM-MD5 implementation is buggy.
>
> If I understand the issue correctly, this is the case. The server
> incorrectly advertises CRAM-MD5, but it never succeeds since the server
> lacks the relevant secret.
>
> Obviously this is bad, but apparently many GUI clients handle such
> broken servers, by falling back to PLAIN auth. I can't say I've ever
> seen it in the wild though.
>
>
> Although I haven't used it in a while, my recollection was that
> Twisted's SMTPClient implementation did a similar thing, and tried the
> auth methods it was supplied "in order".
>
> It may be that the OP is using some wrapper API or local code that is
> mis-using this functionality, or of course that I am mis-remembering it.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/ba40b8b1/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 10:16:49 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:16:49 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
	<500EA30F.6030308@imperial.ac.uk>
	<CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>
Message-ID: <500EAE51.6040803@imperial.ac.uk>

On 24/07/12 14:43, Jessica McKellar wrote:
> Phil, that was rather brusque; let's keep things friendly and supportive here.

That was not my intention. It was terse because I replied in a hurry, 
since I have a day job.

Still, if anyone was offended, then I apologise.


From p.mayers at imperial.ac.uk  Tue Jul 24 10:26:12 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:26:12 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <500EB084.3050006@imperial.ac.uk>

On 24/07/12 14:31, Itamar Turner-Trauring wrote:
>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> <mailto:p.mayers at imperial.ac.uk>> wrote:
>
>     IIRC the Twisted SMTP stuff has support for handling auth errors and
>     trying other methods; it should "just work".
>
>
> The code is a bit convoluted, so I can't be sure without more time than
> I want to spend on it, but I wouldn't expect it to try more than one

Actually, I think you're right. I am either not remembering the function 
correctly, or it has changed.


From p.mayers at imperial.ac.uk  Tue Jul 24 10:30:04 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:30:04 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
Message-ID: <500EB16C.4070905@imperial.ac.uk>

On 24/07/12 15:16, Sarah Addis wrote:
> Ok.. so I have found this piece of code in my smtp.py file:
>
>      def _registerAuthenticators(self):
>          # Register Authenticator in order from most secure to least secure
>
> self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
>          self.registerAuthenticator(LOGINAuthenticator(self.username))
>          self.registerAuthenticator(PLAINAuthenticator(self.username))
>
> so if I switch the order around to put PLAINAuthenticator first will
> this hopefully work?

Should do, if I understand the code correctly. See my other email for a 
different approach.


From p.mayers at imperial.ac.uk  Tue Jul 24 10:30:27 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:30:27 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
Message-ID: <500EB183.1070800@imperial.ac.uk>

On 24/07/12 15:00, Sarah Addis wrote:
> Sorry to be unhelpful in describing the issue. The password and username
> credentials are all correct. I am using BuildBot MailNotifier to send an
> email each time a build has taken place:

Ok, upon closer examination my recollection is incorrect; Twisted will 
always try CRAM-MD5 first.

As far as I can tell, you will need to sub-class the relevant classes 
and disable the CRAM-MD5 support. Sadly, this will require using an 
internal Twisted API, e.g.

from twisted.mail.smtp import ESMTPSender, ESMTPSenderFactory
from twisted.mail.smtp import LOGINAuthenticator, PLAINAuthenticator

class MyESMTP(ESMTPSender):
   def _registerAuthenticators(self):
      self.registerAuthenticator(LOGINAuthenticator(self.username))
      self.registerAuthenticator(PLAINAuthenticator(self.username))

# monkeypatch hack!
ESMTPSenderFactory.protocol = MyESMTP


This can be done more cleanly, of course.


From p.mayers at imperial.ac.uk  Tue Jul 24 10:32:58 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:32:58 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
Message-ID: <500EB21A.7030209@imperial.ac.uk>

On 24/07/12 15:00, Sarah Addis wrote:
> Sorry to be unhelpful in describing the issue. The password and username
> credentials are all correct. I am using BuildBot MailNotifier to send an
> email each time a build has taken place:

One thing - which email server is this, and can you confirm for certain 
that some mainstream SMTP client (e.g. Thunderbird, Outlook) can send 
emails via it?

If so, someone should open a Twisted ticket to make t.m.smtp handle auth 
method chaining - it doesn't look too hard.


From itamar at futurefoundries.com  Tue Jul 24 10:37:00 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 10:37:00 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA91A.2@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
Message-ID: <CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>

On Tue, Jul 24, 2012 at 9:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 24/07/12 14:29, Itamar Turner-Trauring wrote:
>
> >  3. The SMTP server's CRAM-MD5 implementation is buggy.
>
> If I understand the issue correctly, this is the case. The server
> incorrectly advertises CRAM-MD5, but it never succeeds since the server
> lacks the relevant secret.
>
> Obviously this is bad, but apparently many GUI clients handle such
> broken servers, by falling back to PLAIN auth. I can't say I've ever
> seen it in the wild though.
>

Could you file a ticket for implementing this functionality?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/10ba6530/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 10:39:01 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:39:01 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EAC1E.10208@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<500EAC1E.10208@imperial.ac.uk>
Message-ID: <500EB385.3040502@imperial.ac.uk>

On 24/07/12 15:07, Phil Mayers wrote:

> I still think it's bad/buggy server behaviour to present an auth method
> unless it can DEFINITELY service it for all clients. But if I understand
> the issue correctly, that behaviour exists in the wild.

This (and onward links) is relevant, perhaps:

https://bugzilla.mozilla.org/show_bug.cgi?id=311657


From sarahaddis3 at gmail.com  Tue Jul 24 10:40:19 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:40:19 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EB084.3050006@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<500EB084.3050006@imperial.ac.uk>
Message-ID: <CA+bhFt6956nDsq6tnOMYSTgNfCXD2KYApocLUQB3Xwq77khfSQ@mail.gmail.com>

THANK YOU- the email is now working after switching about the auth modes :)
:) :)

On 24 July 2012 15:26, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 14:31, Itamar Turner-Trauring wrote:
> >
> >
> > On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> > <mailto:p.mayers at imperial.ac.uk>> wrote:
> >
> >     IIRC the Twisted SMTP stuff has support for handling auth errors and
> >     trying other methods; it should "just work".
> >
> >
> > The code is a bit convoluted, so I can't be sure without more time than
> > I want to spend on it, but I wouldn't expect it to try more than one
>
> Actually, I think you're right. I am either not remembering the function
> correctly, or it has changed.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/b84438b8/attachment.htm 

From itamar at futurefoundries.com  Tue Jul 24 10:40:46 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 10:40:46 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
Message-ID: <CAOp9P3rB_3uDR1EX0EzSaQZ-vpNoDZnGspARfOJjoxR6cEo2Og@mail.gmail.com>

On Tue, Jul 24, 2012 at 10:16 AM, Sarah Addis <sarahaddis3 at gmail.com> wrote:

> Ok.. so I have found this piece of code in my smtp.py file:
>
>     def _registerAuthenticators(self):
>         # Register Authenticator in order from most secure to least secure
>
> self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
>         self.registerAuthenticator(LOGINAuthenticator(self.username))
>         self.registerAuthenticator(PLAINAuthenticator(self.username))
>
> so if I switch the order around to put PLAINAuthenticator first will this
> hopefully work?
>

Yes, or just remove CRAMMD5 altogether. Unfortunately, this involves a
bunch of copy/pasting to recreate sendmail() or ESMTPSenderFactory with an
ESMTPClient that doesn't have that line, or editing Twisted code, but it
should solve it hopefully.

The fix Phil suggested (falling back if CRAM-MD5 fails) would solve this
long term, as would some way to specify which authenticators you want as
part of the high-level sendmail() API.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/1fd04060/attachment.htm 

From sarahaddis3 at gmail.com  Tue Jul 24 11:01:19 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 16:01:19 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EB21A.7030209@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
	<500EB21A.7030209@imperial.ac.uk>
Message-ID: <CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>

It is an internal company server.

On 24 July 2012 15:32, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 15:00, Sarah Addis wrote:
> > Sorry to be unhelpful in describing the issue. The password and username
> > credentials are all correct. I am using BuildBot MailNotifier to send an
> > email each time a build has taken place:
>
> One thing - which email server is this, and can you confirm for certain
> that some mainstream SMTP client (e.g. Thunderbird, Outlook) can send
> emails via it?
>
> If so, someone should open a Twisted ticket to make t.m.smtp handle auth
> method chaining - it doesn't look too hard.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/eb17e9f2/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jul 24 11:26:31 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 16:26:31 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>
Message-ID: <500EBEA7.1080504@imperial.ac.uk>

On 24/07/12 15:37, Itamar Turner-Trauring wrote:

> Could you file a ticket for implementing this functionality?

http://twistedmatrix.com/trac/ticket/5803

I'm not entirely happy with the description; there's actually a bunch of 
different, subtly overlapping things going on here. But at least it 
won't get lost / forgotten about.

BTW, is it me, or is Trac a bit slow? The ticketing bit was sluggish, 
but in particular the code browsing is very slow...


From p.mayers at imperial.ac.uk  Tue Jul 24 11:30:57 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 16:30:57 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
	<500EB21A.7030209@imperial.ac.uk>
	<CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>
Message-ID: <500EBFB1.7030506@imperial.ac.uk>

On 24/07/12 16:01, Sarah Addis wrote:
> It is an internal company server.

It would be helpful at least to know the product name, assuming it is an 
off-the-shelf product.

But if you can't supply it, I wouldn't worry too much.


From tom.sheffler at gmail.com  Tue Jul 24 23:18:40 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Tue, 24 Jul 2012 20:18:40 -0700
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
Message-ID: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>

Hi Twisted Folks,

We use monit to start and stop our twistd daemons.  I have set up monit to
restart some of the daemons when they grow too large.  I use the following
command:

    /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'

Occasionally, this is unsuccessful in killing the twistd process, and I
need to use a SIGKILL manually as a last resort.

Any ideas why?

I believe the SIGTERM method will do a clean shutdown, calling the
appropriate stopService methods.  This would be the preferred method.

The only thing that comes to mind is that the process does have a very few
threads ... I believe these are the database connections.  Could there be a
race condition that prevents twistd from stopping?  Shall I simply use
SIGKILL in all cases?

Suggestions or comments appreciated.
-Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/94cb3fa9/attachment.htm 

From justin.venus at gmail.com  Tue Jul 24 23:28:21 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Tue, 24 Jul 2012 22:28:21 -0500
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
In-Reply-To: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
References: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
Message-ID: <CACL=7avjeWyMhsv1hqjcBgXnKT0wpYv9dm=XAU1f0_3iw0tmFQ@mail.gmail.com>

I experienced a similar issue with a rather large twisted daemon.  I ended
up installing my own signal handler and issued a triggerSystemEvent to stop
the twisted services.  I can point you towards my code if you want to
pursue that route.

Justin Venus
On Jul 24, 2012 10:21 PM, "Tom Sheffler" <tom.sheffler at gmail.com> wrote:

> Hi Twisted Folks,
>
> We use monit to start and stop our twistd daemons.  I have set up monit to
> restart some of the daemons when they grow too large.  I use the following
> command:
>
>     /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'
>
> Occasionally, this is unsuccessful in killing the twistd process, and I
> need to use a SIGKILL manually as a last resort.
>
> Any ideas why?
>
> I believe the SIGTERM method will do a clean shutdown, calling the
> appropriate stopService methods.  This would be the preferred method.
>
> The only thing that comes to mind is that the process does have a very few
> threads ... I believe these are the database connections.  Could there be a
> race condition that prevents twistd from stopping?  Shall I simply use
> SIGKILL in all cases?
>
> Suggestions or comments appreciated.
> -Tom
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120724/e7675c72/attachment.htm 

From itamar at futurefoundries.com  Wed Jul 25 08:22:30 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Wed, 25 Jul 2012 08:22:30 -0400
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
In-Reply-To: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
References: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
Message-ID: <CAOp9P3rkVj6V6p6QggELRgTjq2_=hPH3+cpE=YYsdgS5RPQHiA@mail.gmail.com>

On Tue, Jul 24, 2012 at 11:18 PM, Tom Sheffler <tom.sheffler at gmail.com>wrote:

> Hi Twisted Folks,
>
> We use monit to start and stop our twistd daemons.  I have set up monit to
> restart some of the daemons when they grow too large.  I use the following
> command:
>
>     /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'
>
> Occasionally, this is unsuccessful in killing the twistd process, and I
> need to use a SIGKILL manually as a last resort.
>
> Any ideas why?
>
> What do the logs say? You should get a log message saying something like
"Received SIGTERM", anything in the logs after that which indicates what
code is continuing to run?

Threads might be an issue, but not necessarily as a race condition. Do you
see a message about the reactor shutting down ("Main loop terminated"), but
the process is still running? Python processes won't exit if there are
still threads running. So if you have a thread that's doing a long running
database query, the reactor may have stopped, and the thread pool may have
been told to shutdown, but that thread will still be running waiting for a
reply from the database. In this case, unless the database connection is
wedged, simply waiting long enough will let the process exit.

Another thing which might prevent shutdown is having a Service with a
stopService that returns a Deferred; until that Deferred fires the reactor
won't stop. Again, looking at logs should be helpful, since you won't
actually see the final reactor shutdown message ("Main loop terminated.").

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120725/019df498/attachment.htm 

From spalax at gresille.org  Thu Jul 26 10:28:33 2012
From: spalax at gresille.org (Louis)
Date: Thu, 26 Jul 2012 16:28:33 +0200
Subject: [Twisted-Python] Password hash for Perspective Brokers
Message-ID: <50115411.2070906@gresille.org>

	Hello
	I have a problem with checkers in Twisted, which could be solved by
adding a new feature. I think I can write the necessary code, but before
doing so, I would like to hear you about it.

# The problem

	If I am right, the only way passwords can be hashed when using
authentication with perspective brokers is using MD5 [1]. However, there
are two flaws with it.

* First, MD5 is no longer considered sure. It may be possible, from the
hashed password, to find the original one.
* Second, in the current implementation of Twisted, no salt is used to
hash the password. A salt is considered good practise : it is harder to
find the password from the hashed form, and two identical passwords have
different hashed form, which prevent someone looking at the hashed
passwords to see if two users have the same password.

# A solution

	I tried to implement the solution proposed in [1], and I think I can
manage to do it. However, this seems to be a not-so-smart hack, which is
not guaranteed to work in future releases of Twisted. That is why I am
proposing a patch.

	The patch would introduce some arguments to class PBServerFactory [2]
to use (or not) a salt, and a different hash function. I am not settled
down yet about the new signature of this class, but what is sure is that
the default must be the actual behaviour, not to break programs already
using Twisted. Then, I hesitate between

* two arguments (salt, hash) : salt is a boolean, telling whether to use
a salt or not ; hash is the function used to hash the password;

* one argument, with possible values being "legacy", "crypt" or "glib2",
where:

** "legacy": current behaviour : hashed passwords are md5 hashed
passwords without salt;
** "crypt" : crypt [3] behaviour (I would like it to be compatible with
[4]): hashed passwords are strings where the first two characters are
the salt, and the following ones are the hashed password (using this salt);
** "glib2" : glib2 [5] behaviour: hashed password is of the form
$ID$SALT$HASH, where ID identifies the encryption method, SALT being the
salt, and HASH being the password, hashed using given encryption method
and salt.

# My implementation

	I have not implemented it yet, but I you think my idea is good, I offer
to write it. I think I have understood well enough the relevant pieces
of code to do so. Of course, I would also write the corresponding tests.


	Some ideas or comments ?
	Cheers,
	Louis


[1] http://markmail.org/message/wlzmeesplsriym2a
[2]
http://twistedmatrix.com/documents/current/api/twisted.spread.pb.PBServerFactory.html
[3] http://man7.org/linux/man-pages/man3/crypt.3.html
[4] http://www.giuseppetanzilli.it/mod_auth_pgsql2/#encrypted
[5] http://www.gnu.org/software/libc/manual/html_node/crypt.html#crypt


From vlada.peric at gmail.com  Thu Jul 26 11:55:50 2012
From: vlada.peric at gmail.com (=?UTF-8?Q?Vladimir_Peri=C4=87?=)
Date: Thu, 26 Jul 2012 17:55:50 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
Message-ID: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>

Hello all,

as part of my work on porting Twisted to Python 3, I have considered
using the six library[1] to help with some issues. six is basically a
compatibility library - same idea as our twisted.python.compat module.
Now, one approach is to add six as a dependency of Twisted - it is a
very small library so hardly a problem; on the other hand, it is an
additional dependency. The other approach would be to copy the
required code over to the t.p.compat module (six' license[2] is
basically "do what you want with this code"), but this is additional
work and we might miss out on the eventual bugfix (though there has
only been a couple since the project started). In general, I have
heard good things about six.

As a note, currently, I would need at least the reraise and exec_
functions from six; additionally, a lot of the things from the
six.moves package are useful. And, of course, there might be other
compatibility functions which I'd need, I just haven't encountered yet
(I do only use these if absolutely required, though).

What do you all think? In the end, it boils down to "additional
dependency" vs. "less code to maintain".

Personally, I could go either way - using six makes things slightly
easier, but I could just copy over the code we need and be done with
it.


[1] http://packages.python.org/six/
[2] https://bitbucket.org/gutworth/six/src/d81f633c45dd/LICENSE
-- 
Vladimir Peri?


From jml at mumak.net  Thu Jul 26 12:02:52 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 26 Jul 2012 17:02:52 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>

On Thu, Jul 26, 2012 at 4:55 PM, Vladimir Peri? <vlada.peric at gmail.com> wrote:
> Hello all,
>

Hi!

...
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency.
...
> What do you all think? In the end, it boils down to "additional
> dependency" vs. "less code to maintain".
>

Not strictly what I think, but here's the relevant bits from what
Glyph said last time I asked about adding a dependency, testtools, to
Twisted:

"""
Users still routinely struggle with the one dependency we allowed
Twisted core to have - zope.interface. I do still think that's worth
it, since it freed us from a significant and complex maintenance
burden.  And I do sometimes wish that we could make it an optional or
bundled dependency, to give users who have to download Twisted
themselves a gentler on-ramp. [...]

[...] I would set the bar very high for making testtools a required
dependency for Twisted's own test suite.  Just for starters, the
Python packaging ecosystem disaster would need to be fixed; also, the
name of the package should be changed to be more unique so that users
wouldn't find things like <http://www.testtools.com/> and
<https://github.com/ferruhy/testtools> when searching around the web
for the contents of the inevitable packaging error message.
"""

jml


From oubiwann at twistedmatrix.com  Thu Jul 26 12:21:40 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Thu, 26 Jul 2012 11:21:40 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>

On Thu, Jul 26, 2012 at 10:55 AM, Vladimir Peri? <vlada.peric at gmail.com> wrote:
> Hello all,
>
> as part of my work on porting Twisted to Python 3, I have considered
> using the six library[1] to help with some issues. six is basically a
> compatibility library - same idea as our twisted.python.compat module.
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency. The other approach would be to copy the
> required code over to the t.p.compat module (six' license[2] is
> basically "do what you want with this code"), but this is additional
> work and we might miss out on the eventual bugfix (though there has
> only been a couple since the project started). In general, I have
> heard good things about six.
>
> As a note, currently, I would need at least the reraise and exec_
> functions from six; additionally, a lot of the things from the
> six.moves package are useful. And, of course, there might be other
> compatibility functions which I'd need, I just haven't encountered yet
> (I do only use these if absolutely required, though).
>
> What do you all think? In the end, it boils down to "additional
> dependency" vs. "less code to maintain".
>
> Personally, I could go either way - using six makes things slightly
> easier, but I could just copy over the code we need and be done with
> it.

FWIW, I'm +1 on copying the bits we need into Twisted and +0 on adding
a new dep.

d

>
> [1] http://packages.python.org/six/
> [2] https://bitbucket.org/gutworth/six/src/d81f633c45dd/LICENSE
> --
> Vladimir Peri?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From _ at lvh.cc  Thu Jul 26 12:22:04 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 26 Jul 2012 18:22:04 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
Message-ID: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>

Does Glyph still believe these arguments to be true today? I don't know how long ago he said that, but I do know there's a lot of stuff that's been done to make packaging better :)

Perhaps we could look into shipping twisted releases with and without dependencies? I personally have no such issues since I just let pip/tox handle everything for me and it figures it out already.


cheers
lvh



On 26 Jul 2012, at 18:02, Jonathan Lange <jml at mumak.net> wrote:

> On Thu, Jul 26, 2012 at 4:55 PM, Vladimir Peri? <vlada.peric at gmail.com> wrote:
>> Hello all,
>> 
> 
> Hi!
> 
> ...
>> Now, one approach is to add six as a dependency of Twisted - it is a
>> very small library so hardly a problem; on the other hand, it is an
>> additional dependency.
> ...
>> What do you all think? In the end, it boils down to "additional
>> dependency" vs. "less code to maintain".
>> 
> 
> Not strictly what I think, but here's the relevant bits from what
> Glyph said last time I asked about adding a dependency, testtools, to
> Twisted:
> 
> """
> Users still routinely struggle with the one dependency we allowed
> Twisted core to have - zope.interface. I do still think that's worth
> it, since it freed us from a significant and complex maintenance
> burden.  And I do sometimes wish that we could make it an optional or
> bundled dependency, to give users who have to download Twisted
> themselves a gentler on-ramp. [...]
> 
> [...] I would set the bar very high for making testtools a required
> dependency for Twisted's own test suite.  Just for starters, the
> Python packaging ecosystem disaster would need to be fixed; also, the
> name of the package should be changed to be more unique so that users
> wouldn't find things like <http://www.testtools.com/> and
> <https://github.com/ferruhy/testtools> when searching around the web
> for the contents of the inevitable packaging error message.
> """
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From gavin at gromper.net  Thu Jul 26 12:33:55 2012
From: gavin at gromper.net (Gavin Panella)
Date: Thu, 26 Jul 2012 17:33:55 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>

On 26 July 2012 16:55, Vladimir Peri? <vlada.peric at gmail.com> wrote:
...
> As a note, currently, I would need at least the reraise and exec_
> functions from six;

Fwiw, reraise is fairly trivial and wouldn't be a big thing to carry
in Twisted.

exec(code, [globals, [locals]]) works on both Python 2 and Python 3,
and seem to have similar behaviour, so I'm not sure why exec_ is
needed. Indeed, test_exec_() from the six source passes using the
builtin exec in place of six.exec_. Ah, I've tried only with Python
2.6 and 2.7; perhaps there are differences on earlier 2.x versions?


From jml at mumak.net  Thu Jul 26 12:39:37 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 26 Jul 2012 17:39:37 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
Message-ID: <CAHZ8tnZGcbDTXu4g4-dJ9WN2XgR0F-xo8wL_kWjcHuMCYmmHhA@mail.gmail.com>

On Thu, Jul 26, 2012 at 5:22 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Does Glyph still believe these arguments to be true today? I don't know how long ago he said that, but I do know there's a lot of stuff that's been done to make packaging better :)

Sorry, should have dated: Feb 6, 2012.

jml


From exarkun at twistedmatrix.com  Thu Jul 26 12:43:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 Jul 2012 16:43:28 -0000
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <50115411.2070906@gresille.org>
References: <50115411.2070906@gresille.org>
Message-ID: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>

On 02:28 pm, spalax at gresille.org wrote:
>         Hello
>         I have a problem with checkers in Twisted, which could be 
>solved by
>adding a new feature. I think I can write the necessary code, but 
>before
>doing so, I would like to hear you about it.
>
># The problem
>
>         If I am right, the only way passwords can be hashed when using
>authentication with perspective brokers is using MD5 [1]. However, 
>there
>are two flaws with it.
>
>* First, MD5 is no longer considered sure. It may be possible, from the
>hashed password, to find the original one.
>* Second, in the current implementation of Twisted, no salt is used to
>hash the password. A salt is considered good practise : it is harder to
>find the password from the hashed form, and two identical passwords 
>have
>different hashed form, which prevent someone looking at the hashed
>passwords to see if two users have the same password.

The second point is incorrect.  The hash is salted.  See the `respond` 
method in twisted/spread/pb.py.
># A solution
>
>         I tried to implement the solution proposed in [1], and I think 
>I can
>manage to do it. However, this seems to be a not-so-smart hack, which 
>is
>not guaranteed to work in future releases of Twisted. That is why I am
>proposing a patch.
>
>         The patch would introduce some arguments to class 
>PBServerFactory [2]
>to use (or not) a salt, and a different hash function. I am not settled
>down yet about the new signature of this class, but what is sure is 
>that
>the default must be the actual behaviour, not to break programs already
>using Twisted. Then, I hesitate between

A good approach would be to parameterize the supported authentication 
mechanisms in an extensible way, rather than just hard coding one or two 
new (probably better) options.

In other words, a SASL implementation for PB would be the best way to 
go.

The existing API and behavior should indeed be preserved as-is for 
backwards compatibility.  The new authentication features should be 
exposed under a new API - either as new optional arguments accepted by 
PBServerFactory (and perhaps PBClientFactory) and new login methods 
(again, probably on those two classes).

Jean-Paul


From solipsis at pitrou.net  Thu Jul 26 12:49:59 2012
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 26 Jul 2012 18:49:59 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <20120726184959.601e9cdc@pitrou.net>

On Thu, 26 Jul 2012 17:55:50 +0200
Vladimir Peri? <vlada.peric at gmail.com> wrote:
> Hello all,
> 
> as part of my work on porting Twisted to Python 3, I have considered
> using the six library[1] to help with some issues. six is basically a
> compatibility library - same idea as our twisted.python.compat module.
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency. The other approach would be to copy the
> required code over to the t.p.compat module (six' license[2] is
> basically "do what you want with this code"), but this is additional
> work and we might miss out on the eventual bugfix (though there has
> only been a couple since the project started).

Copying them sounds like the saner approach to me. These
compatibility wrappers are unlikely to change significantly, and
requiring a dependency on such a small module is not very helpful.

If you really want to minimize maintenance, you can also ship six as a
twisted.python submodule, and synchronize the copy when there are
interesting bug fixes.

Regards

Antoine.


-- 
Software development and contracting: http://pro.pitrou.net




From vlada.peric at gmail.com  Thu Jul 26 13:13:03 2012
From: vlada.peric at gmail.com (=?UTF-8?Q?Vladimir_Peri=C4=87?=)
Date: Thu, 26 Jul 2012 19:13:03 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>
Message-ID: <CAFu6gYY07bQ6qgg0ym5Q6gJUE87i0+idRqfOw1sZ8bE4Yjdeig@mail.gmail.com>

On 7/26/12, Gavin Panella <gavin at gromper.net> wrote:
> On 26 July 2012 16:55, Vladimir Peri? <vlada.peric at gmail.com> wrote:
> ...
>> As a note, currently, I would need at least the reraise and exec_
>> functions from six;
>
> Fwiw, reraise is fairly trivial and wouldn't be a big thing to carry
> in Twisted.
>
> exec(code, [globals, [locals]]) works on both Python 2 and Python 3,
> and seem to have similar behaviour, so I'm not sure why exec_ is
> needed. Indeed, test_exec_() from the six source passes using the
> builtin exec in place of six.exec_. Ah, I've tried only with Python
> 2.6 and 2.7; perhaps there are differences on earlier 2.x versions?

Actually, Twisted now only supports 2.6 and 2.7 anyway, the issue is
that the old syntax "exec code in globs, locs" is a SyntaxError in
Python 3.


In any case, in light of the discussions (and especially Jonathan's
repost of Glyph's opinion), I'll opt for copying the required code to
our twisted.python.compat module (copying the whole of six is not
really practical, particularly because we'd still need additional
compatibility modules).

Thanks all for giving your input.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Vladimir Peri?


From glyph at twistedmatrix.com  Thu Jul 26 12:37:02 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 09:37:02 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>
Message-ID: <A69F8B5A-6FCF-4E5F-A079-ECE561C8E645@twistedmatrix.com>


Le Jul 26, 2012 ? 9:21 AM, Duncan McGreggor <oubiwann at twistedmatrix.com> a ?crit :

> FWIW, I'm +1 on copying the bits we need into Twisted and +0 on adding
> a new dep.

I'd be closer to +0 on copying the bits we need (I'm not excited about it, but it seems to be necessary) and -1 on adding them as a new dependency, for the reasons that jml already cited.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/0be98358/attachment-0001.htm 

From kevin.horn at gmail.com  Thu Jul 26 13:36:57 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 12:36:57 -0500
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
Message-ID: <CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>

On Thu, Jul 26, 2012 at 11:43 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:28 pm, spalax at gresille.org wrote:
> >         Hello
> >         I have a problem with checkers in Twisted, which could be
> >solved by
> >adding a new feature. I think I can write the necessary code, but
> >before
> >doing so, I would like to hear you about it.
> >
> ># The problem
> >
> >         If I am right, the only way passwords can be hashed when using
> >authentication with perspective brokers is using MD5 [1]. However,
> >there
> >are two flaws with it.
> >
> >* First, MD5 is no longer considered sure. It may be possible, from the
> >hashed password, to find the original one.
> >* Second, in the current implementation of Twisted, no salt is used to
> >hash the password. A salt is considered good practise : it is harder to
> >find the password from the hashed form, and two identical passwords
> >have
> >different hashed form, which prevent someone looking at the hashed
> >passwords to see if two users have the same password.
>
> The second point is incorrect.  The hash is salted.  See the `respond`
> method in twisted/spread/pb.py.
> ># A solution
> >
> >         I tried to implement the solution proposed in [1], and I think
> >I can
> >manage to do it. However, this seems to be a not-so-smart hack, which
> >is
> >not guaranteed to work in future releases of Twisted. That is why I am
> >proposing a patch.
> >
> >         The patch would introduce some arguments to class
> >PBServerFactory [2]
> >to use (or not) a salt, and a different hash function. I am not settled
> >down yet about the new signature of this class, but what is sure is
> >that
> >the default must be the actual behaviour, not to break programs already
> >using Twisted. Then, I hesitate between
>
> A good approach would be to parameterize the supported authentication
> mechanisms in an extensible way, rather than just hard coding one or two
> new (probably better) options.
>
> In other words, a SASL implementation for PB would be the best way to
> go.
>
> The existing API and behavior should indeed be preserved as-is for
> backwards compatibility.  The new authentication features should be
> exposed under a new API - either as new optional arguments accepted by
> PBServerFactory (and perhaps PBClientFactory) and new login methods
> (again, probably on those two classes).
>
> Jean-Paul
>
>
It would probably also help if someone finished the "Generic SASL
implementation" ticket.

Lessee, who was working on that last?

Crap. It was me.

Sorry about that.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/191265a5/attachment.htm 

From glyph at twistedmatrix.com  Thu Jul 26 13:48:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 10:48:38 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
Message-ID: <284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>

Le Jul 26, 2012 ? 9:22 AM, Laurens Van Houtven <_ at lvh.cc> a ?crit :

> Perhaps we could look into shipping twisted releases with and without dependencies? I personally have no such issues since I just let pip/tox handle everything for me and it figures it out already.

This is only accurate to within a first approximation, but... pip does not work for Windows users.  And easy_install there comes with its own set of warts.  So there's no good answer.

If you have a good proposal for how to ship a sumo Twisted which bundles all its dependencies in a way that would actually reach the users who encounter dependency management problems, that would be great.  I think it would be worthwhile to discuss it privately first though, since there are enough publicly-archived flamewars about Python packaging technology ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/91d34773/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Jul 26 13:51:35 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 26 Jul 2012 10:51:35 -0700
Subject: [Twisted-Python] Deferreds and progress
Message-ID: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>

With Twisted, a Deferred can have it's callback only triggered once.

With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
until the final result arrives). Progress can be triggered more than once.

Is there anything comparable in Twisted?

Cheers,
Tobias

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/723222f6/attachment.htm 

From itamar at futurefoundries.com  Thu Jul 26 14:32:34 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 14:32:34 -0400
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>

On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> With Twisted, a Deferred can have it's callback only triggered once.****
>
> ** **
>
> With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred,
> upcoming JS PromiseA proposal),****
>
> there is a "progress()" callback for receiving results incrementally (or
> merely reporting on progress****
>
> until the final result arrives). Progress can be triggered more than once.
> ****
>
> ** **
>
> Is there anything comparable in Twisted?
>

For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP
response bodies to a Protocol instance. More generally, Glyph is working on
this: http://twistedmatrix.com/trac/ticket/1956
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/35b17f4e/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Jul 26 14:44:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 26 Jul 2012 11:44:48 -0700
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>

>>On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>With Twisted, a Deferred can have it's callback only triggered once.
>>
>>With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
>>there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
>>until the final result arrives). Progress can be triggered more than once.
>>?
>>Is there anything comparable in Twisted?

>For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP response bodies to a Protocol instance. More generally, Glyph is working on this: http://twistedmatrix.com/trac/ticket/1956

Thanks for pointing. So if something like this is added to Twisted, it will be within producer/consumer, and not added to Deferred?

The reason I am asking: Autobahn implements RPC over WebSocket, and people have been asking why RPC results
can't be delivered in parts, as progress. However, an Autobahn RPC returns a Deferred, not a producer.

From kevin.horn at gmail.com  Thu Jul 26 15:06:41 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 14:06:41 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
Message-ID: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>

On Thu, Jul 26, 2012 at 12:48 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Le Jul 26, 2012 ? 9:22 AM, Laurens Van Houtven <_ at lvh.cc> a ?crit :
>
> Perhaps we could look into shipping twisted releases with and without
> dependencies? I personally have no such issues since I just let pip/tox
> handle everything for me and it figures it out already.
>
>
> This is only accurate to within a first approximation, but... pip does not
> work for Windows users.
>

Um, howso?  I use it all the time, including for installing Twisted.
 Unless you mean it doesn't work fro installing twisted for those who don't
have a C compiler, which I guess could be true.  I always have one
installed, so I haven't tried without one.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/6dfba03a/attachment-0001.htm 

From itamar at futurefoundries.com  Thu Jul 26 15:15:40 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 15:15:40 -0400
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
	<634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAOp9P3pc_0Q77T-WxMbvJL9qhaUs7=yq70BKs1uLNK9YrGj_PQ@mail.gmail.com>

On Thu, Jul 26, 2012 at 2:44 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>
> Thanks for pointing. So if something like this is added to Twisted, it
> will be within producer/consumer, and not added to Deferred?
>
> The reason I am asking: Autobahn implements RPC over WebSocket, and people
> have been asking why RPC results
> can't be delivered in parts, as progress. However, an Autobahn RPC returns
> a Deferred, not a producer.
>

A replacement API for producer/consumer.

You might say, I just want streaming results... but then you really want to
pause upstream if you can't handle it, and you want to be able to chain
streams of data (which is where Protocols fail), and so you end up with a
more complex API than "call this function with data every time it
arrives".  And that's the goal of that ticket.

Of course, if you want something super simple, you can implement if you
want for your code only.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/9e6d7a95/attachment.htm 

From itamar at futurefoundries.com  Thu Jul 26 15:20:15 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 15:20:15 -0400
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
Message-ID: <CAOp9P3oi9cmqrJyAGCp5j+a4_g9E6b1wJQbHyuzXqE0azBsuSA@mail.gmail.com>

On Thu, Jul 26, 2012 at 3:06 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

>
> This is only accurate to within a first approximation, but... pip does not
>> work for Windows users.
>>
>
>
> Um, howso?  I use it all the time, including for installing Twisted.
>  Unless you mean it doesn't work fro installing twisted for those who don't
> have a C compiler, which I guess could be true.  I always have one
> installed, so I haven't tried without one.
>

My attempt to set things up on Windows did not go well, at all. Getting a
compiler going was IIRC non-trivial.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/fe9f11b0/attachment.htm 

From glyph at twistedmatrix.com  Thu Jul 26 17:08:39 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 14:08:39 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
Message-ID: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>


Le Jul 26, 2012 ? 12:06 PM, Kevin Horn <kevin.horn at gmail.com> a ?crit :

> ... for those who don't have a C compiler ...

AKA "windows users".

Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org builds use and you don't have to go trawling through python-dev archives to figure it out...)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/9972649f/attachment.htm 

From glyph at twistedmatrix.com  Thu Jul 26 17:12:01 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 14:12:01 -0700
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
	<CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
Message-ID: <DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>

Le Jul 26, 2012 ? 10:36 AM, Kevin Horn <kevin.horn at gmail.com> a ?crit :

> 
> It would probably also help if someone finished the "Generic SASL implementation" ticket.
> 
> Lessee, who was working on that last?
> 
> Crap. It was me. 
> 
> Sorry about that.

If you're looking for some encouragement and help on that ticket, Ralph Meijer has been looking at doing some work in that area, and generalizing the SASL support in twisted.words (as well as doing more SASL/cred integration on the server side).  I spoke to him at the last sprint in San Francisco.

Hopefully you can get together and prompt each other to actually finish it ;-).

-glyph

From kevin.horn at gmail.com  Thu Jul 26 17:44:30 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 16:44:30 -0500
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
	<CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
	<DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>
Message-ID: <CA+U=zK089W+4FCi8Tsng79H6oMcmkR2WDmpNTXSu8EoZJw3PLA@mail.gmail.com>

On Thu, Jul 26, 2012 at 4:12 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Le Jul 26, 2012 ? 10:36 AM, Kevin Horn <kevin.horn at gmail.com> a ?crit :
>
> >
> > It would probably also help if someone finished the "Generic SASL
> implementation" ticket.
> >
> > Lessee, who was working on that last?
> >
> > Crap. It was me.
> >
> > Sorry about that.
>
> If you're looking for some encouragement and help on that ticket, Ralph
> Meijer has been looking at doing some work in that area, and generalizing
> the SASL support in twisted.words (as well as doing more SASL/cred
> integration on the server side).  I spoke to him at the last sprint in San
> Francisco.
>
> Hopefully you can get together and prompt each other to actually finish it
> ;-).
>
> -glyph
>
>
I am interested, though I've made some significant progress in the last few
days on what I'm thinking of as "lore2sphinx-ng", so I'm trying to keep
that momentum going.

So it may be a bit before I get back to it.

I saw that Ralph was looking at it during the sprint, though, and getting
in touch with him to discuss/cheerlead/whatever is on my todo-list.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/dfd0e90c/attachment.htm 

From grindizer at gmail.com  Thu Jul 26 18:07:59 2012
From: grindizer at gmail.com (Flint)
Date: Fri, 27 Jul 2012 00:07:59 +0200
Subject: [Twisted-Python] Password hash for Perspective Brokers
Message-ID: <CALpq1pa4K1=TXtOaj-DTVbAcSmY-c3160VM1+knC_swc-xbgaQ@mail.gmail.com>

Hi, i've faced the same problem and submitted a patch a few month ago,
your can check it here http://twistedmatrix.com/trac/ticket/4398 you'll
find also a complet example attached.

My first problem was that, the way twisted pb authentication works we're
supposed to have a plan version of passwords at server side.
Or this is not always the case, most application store a hashed version of
the password, the hash method may be different from the one twisted pb use
to pass the credential over the network
and thus, we're not able to compare those values.

In my solution the user can define a custom hash method and tell twisted to
use it, so that the password given by twisted over the network will be
hashed the same way that the application does before storing it (in
database for example), which means we can check if the password is correct
without having a plain version of it.
Not that, If we don't "customize" the hash method, the original twisted
behaviour in used instead, and thus compatibility is preserved.

-- G

Message: 1

> Date: Thu, 26 Jul 2012 12:36:57 -0500
> From: Kevin Horn <kevin.horn at gmail.com>
> Subject: Re: [Twisted-Python] Password hash for Perspective Brokers
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>         <CA+U=
> zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Thu, Jul 26, 2012 at 11:43 AM, <exarkun at twistedmatrix.com> wrote:
>
> > On 02:28 pm, spalax at gresille.org wrote:
> > >         Hello
> > >         I have a problem with checkers in Twisted, which could be
> > >solved by
> > >adding a new feature. I think I can write the necessary code, but
> > >before
> > >doing so, I would like to hear you about it.
> > >
> > ># The problem
> > >
> > >         If I am right, the only way passwords can be hashed when using
> > >authentication with perspective brokers is using MD5 [1]. However,
> > >there
> > >are two flaws with it.
> > >
> > >* First, MD5 is no longer considered sure. It may be possible, from the
> > >hashed password, to find the original one.
> > >* Second, in the current implementation of Twisted, no salt is used to
> > >hash the password. A salt is considered good practise : it is harder to
> > >find the password from the hashed form, and two identical passwords
> > >have
> > >different hashed form, which prevent someone looking at the hashed
> > >passwords to see if two users have the same password.
> >
> > The second point is incorrect.  The hash is salted.  See the `respond`
> > method in twisted/spread/pb.py.
> > ># A solution
> > >
> > >         I tried to implement the solution proposed in [1], and I think
> > >I can
> > >manage to do it. However, this seems to be a not-so-smart hack, which
> > >is
> > >not guaranteed to work in future releases of Twisted. That is why I am
> > >proposing a patch.
> > >
> > >         The patch would introduce some arguments to class
> > >PBServerFactory [2]
> > >to use (or not) a salt, and a different hash function. I am not settled
> > >down yet about the new signature of this class, but what is sure is
> > >that
> > >the default must be the actual behaviour, not to break programs already
> > >using Twisted. Then, I hesitate between
> >
> > A good approach would be to parameterize the supported authentication
> > mechanisms in an extensible way, rather than just hard coding one or two
> > new (probably better) options.
> >
> > In other words, a SASL implementation for PB would be the best way to
> > go.
> >
> > The existing API and behavior should indeed be preserved as-is for
> > backwards compatibility.  The new authentication features should be
> > exposed under a new API - either as new optional arguments accepted by
> > PBServerFactory (and perhaps PBClientFactory) and new login methods
> > (again, probably on those two classes).
> >
> > Jean-Paul
> >
> >
> It would probably also help if someone finished the "Generic SASL
> implementation" ticket.
>
> Lessee, who was working on that last?
>
> Crap. It was me.
>
> Sorry about that.
>
> Kevin Horn
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/191265a5/attachment-0001.htm
>
> ------------------------------
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120727/c7c6ec2e/attachment-0001.htm 

From anis.mourad at gmail.com  Thu Jul 26 23:31:19 2012
From: anis.mourad at gmail.com (Mourad Anis)
Date: Fri, 27 Jul 2012 03:31:19 +0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
Message-ID: <CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>

>
> Even having full access to MSDN, it can be incredibly obscure to discover
> which Python version goes with which Visual Studio product.  (Someone,
> please prove me wrong and indicate that there's a web page that shows what
> the official python.org builds use and you don't have to go trawling
> through python-dev archives to figure it out...)
>

Hi,
the python source code comes with a directory containing MSVC project
files, named after the version of Visual Studio product:
http://docs.python.org/using/windows.html#compiling-python-on-windows
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120727/926f06c1/attachment.htm 

From exarkun at twistedmatrix.com  Thu Jul 26 12:43:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 Jul 2012 16:43:28 -0000
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <50115411.2070906@gresille.org>
References: <50115411.2070906@gresille.org>
Message-ID: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>

On 02:28 pm, spalax at gresille.org wrote:
>         Hello
>         I have a problem with checkers in Twisted, which could be 
>solved by
>adding a new feature. I think I can write the necessary code, but 
>before
>doing so, I would like to hear you about it.
>
># The problem
>
>         If I am right, the only way passwords can be hashed when using
>authentication with perspective brokers is using MD5 [1]. However, 
>there
>are two flaws with it.
>
>* First, MD5 is no longer considered sure. It may be possible, from the
>hashed password, to find the original one.
>* Second, in the current implementation of Twisted, no salt is used to
>hash the password. A salt is considered good practise : it is harder to
>find the password from the hashed form, and two identical passwords 
>have
>different hashed form, which prevent someone looking at the hashed
>passwords to see if two users have the same password.

The second point is incorrect.  The hash is salted.  See the `respond` 
method in twisted/spread/pb.py.
># A solution
>
>         I tried to implement the solution proposed in [1], and I think 
>I can
>manage to do it. However, this seems to be a not-so-smart hack, which 
>is
>not guaranteed to work in future releases of Twisted. That is why I am
>proposing a patch.
>
>         The patch would introduce some arguments to class 
>PBServerFactory [2]
>to use (or not) a salt, and a different hash function. I am not settled
>down yet about the new signature of this class, but what is sure is 
>that
>the default must be the actual behaviour, not to break programs already
>using Twisted. Then, I hesitate between

A good approach would be to parameterize the supported authentication 
mechanisms in an extensible way, rather than just hard coding one or two 
new (probably better) options.

In other words, a SASL implementation for PB would be the best way to 
go.

The existing API and behavior should indeed be preserved as-is for 
backwards compatibility.  The new authentication features should be 
exposed under a new API - either as new optional arguments accepted by 
PBServerFactory (and perhaps PBClientFactory) and new login methods 
(again, probably on those two classes).

Jean-Paul


From tobias.oberstein at tavendo.de  Fri Jul 27 06:32:12 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 27 Jul 2012 03:32:12 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>

>>Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product. ?(Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)

It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.

- VS 2010 will NOT work
- the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)

To build Twisted working with official binary Python builds, the exact same compiler is needed: VS2008.



From jstpierre at mecheye.net  Fri Jul 27 06:39:01 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Fri, 27 Jul 2012 07:39:01 -0300
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAA0H+QQicStDGvX8aRzMptNwso02qtc6ZF9ZxXba7gObRn5h-w@mail.gmail.com>

Why are compilers and MSVC++ relevant to six as a new dependency? It
consists of one .py file.

On Fri, Jul 27, 2012 at 7:32 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>>>Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)
>
> It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.
>
> - VS 2010 will NOT work
> - the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)
>
> To build Twisted working with official binary Python builds, the exact same compiler is needed: VS2008.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper


From msc at contact.de  Fri Jul 27 06:44:06 2012
From: msc at contact.de (Michael Schlenker)
Date: Fri, 27 Jul 2012 12:44:06 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <501270F6.8060908@contact.de>

Am 27.07.2012 12:32, schrieb Tobias Oberstein:
>>> Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)
> 
> It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.
> 
> - VS 2010 will NOT work
> - the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)
But you can add the cmdline 64-bit compiler by downloading the free
Windows SDK.

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Stra?e 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Gesch?ftsf?hrer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215


From exarkun at twistedmatrix.com  Fri Jul 27 07:55:17 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 27 Jul 2012 11:55:17 -0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>
Message-ID: <20120727115517.3532.960207652.divmod.xquotient.11@localhost6.localdomain6>

On 03:31 am, anis.mourad at gmail.com wrote:
>>
>>Even having full access to MSDN, it can be incredibly obscure to 
>>discover
>>which Python version goes with which Visual Studio product.  (Someone,
>>please prove me wrong and indicate that there's a web page that shows 
>>what
>>the official python.org builds use and you don't have to go trawling
>>through python-dev archives to figure it out...)
>
>Hi,
>the python source code comes with a directory containing MSVC project
>files, named after the version of Visual Studio product:
>http://docs.python.org/using/windows.html#compiling-python-on-windows

Which means if you want to use pip to install Twisted, all you need is 
the C compiler specified by the source for the version of Python you're 
building, inferred after making the logical leap that the newest version 
of MSVC with a corresponding entry in the PC directory of that Python 
source is probably the one that was used to build the official release.

And that's why the idea that pip is unusable on Windows has some 
traction.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Jul 27 07:59:32 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 27 Jul 2012 11:59:32 -0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>

On 10:32 am, tobias.oberstein at tavendo.de wrote:
>>>Even having full access to MSDN, it can be incredibly obscure to 
>>>discover which Python version goes with which Visual Studio product. 
>>>(Someone, please prove me wrong and indicate that there's a web page 
>>>that shows what the official python.org >> builds use and you don't 
>>>have to go trawling through python-dev archives to figure it out...)
>
>It is obscure. And I don't have a link, but the official Python on 
>Windows builds are done using Microsoft Visual C++ 2008.
>
>- VS 2010 will NOT work
>- the free VS 2008 Express works (for 32-bit builds .. it does not 
>include a 64-bit compiler)
>
>To build Twisted working with official binary Python builds, the exact 
>same compiler is needed: VS2008.

The question isn't "What compiler is needed to build Twisted?"  People 
on this list probably know that already (I certainly do, since I set up 
several of Twisted's Windows buildslaves).  The question is "How could a 
user ever hope to find out what compiler is needed to build Twisted?"

As long as the Python documentation fails to answer this question better 
than it does now (and VS2008 is not the correct answer: the correct 
answer _depends on the Python version_), Windows users will not have an 
easy time of it.

Jean-Paul


From tobias.oberstein at tavendo.de  Fri Jul 27 09:40:22 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 27 Jul 2012 06:40:22 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>

> >It is obscure. And I don't have a link, but the official Python on
> >Windows builds are done using Microsoft Visual C++ 2008.
> >
> >- VS 2010 will NOT work
> >- the free VS 2008 Express works (for 32-bit builds .. it does not
> >include a 64-bit compiler)
> >
> >To build Twisted working with official binary Python builds, the exact
> >same compiler is needed: VS2008.
> 
> The question isn't "What compiler is needed to build Twisted?"  People on this
> list probably know that already (I certainly do, since I set up several of Twisted's
> Windows buildslaves).  The question is "How could a user ever hope to find out
> what compiler is needed to build Twisted?"

IMO, the build should figure that out (pip/easy_install). Why should I take the burden
of searching through docs (however easy those may be or may not be to find),
when the build tool can detect and inform me about the compiler needed?

Of course that again underlines the deficiencies glyph pointed out with pip/easy_install.

Twisted might compensate those by including detection in it's build scripts .. but
that will be controversial for sure (compensating for stuff that would better be
fixed elsewhere ..)

> 
> As long as the Python documentation fails to answer this question better than it
> does now (and VS2008 is not the correct answer: the correct answer _depends
> on the Python version_), Windows users will not have an easy time of it.

Yeah, right;) I didn't want to say Python 1.5 builds with VS2008, but the current Py2 one.

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From rlotun at gmail.com  Fri Jul 27 11:15:29 2012
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 27 Jul 2012 08:15:29 -0700
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
	<634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <-6327102376767638772@unknownmsgid>

On Jul 26, 2012, at 11:49 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:

>>> On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>> With Twisted, a Deferred can have it's callback only triggered once.
>>>
>>> With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
>>> there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
>>> until the final result arrives). Progress can be triggered more than once.
>>>
>>> Is there anything comparable in Twisted?
>
>> For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP response bodies to a Protocol instance. More generally, Glyph is working on this: http://twistedmatrix.com/trac/ticket/1956
>
> Thanks for pointing. So if something like this is added to Twisted, it will be within producer/consumer, and not added to Deferred?
>
> The reason I am asking: Autobahn implements RPC over WebSocket, and people have been asking why RPC results
> can't be delivered in parts, as progress. However, an Autobahn RPC returns a Deferred, not a producer.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Probably the best way to achieve what you want is to modify your
interface to be more like the twisted.web Agent http client. In that
interface a deferred gets fired when you connect, at which point you
can optionally start consuming body data with a custom protocol
instance.

Reza


From dynamicgl at gmail.com  Fri Jul 27 13:07:59 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 28 Jul 2012 01:07:59 +0800
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TX7oKOaObbtD2K7bH5LmrxuJ=xchQRSAyA4gP0V-dN_Q@mail.gmail.com>

On Fri, Jul 27, 2012 at 9:40 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > >It is obscure. And I don't have a link, but the official Python on
> > >Windows builds are done using Microsoft Visual C++ 2008.
> > >
> > >- VS 2010 will NOT work
> > >- the free VS 2008 Express works (for 32-bit builds .. it does not
> > >include a 64-bit compiler)
> > >
> > >To build Twisted working with official binary Python builds, the exact
> > >same compiler is needed: VS2008.
> >
> > The question isn't "What compiler is needed to build Twisted?"  People
> on this
> > list probably know that already (I certainly do, since I set up several
> of Twisted's
> > Windows buildslaves).  The question is "How could a user ever hope to
> find out
> > what compiler is needed to build Twisted?"
>
> IMO, the build should figure that out (pip/easy_install). Why should I
> take the burden
> of searching through docs (however easy those may be or may not be to
> find),
> when the build tool can detect and inform me about the compiler needed?
>
> Of course that again underlines the deficiencies glyph pointed out with
> pip/easy_install.
>
> Twisted might compensate those by including detection in it's build
> scripts .. but
> that will be controversial for sure (compensating for stuff that would
> better be
> fixed elsewhere ..)
>
> >
> > As long as the Python documentation fails to answer this question better
> than it
> > does now (and VS2008 is not the correct answer: the correct answer
> _depends
> > on the Python version_), Windows users will not have an easy time of it.
>
> Yeah, right;) I didn't want to say Python 1.5 builds with VS2008, but the
> current Py2 one.
>
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

  Actually, you can use VS 2010 with python but you need to modify sth.
deploying python app (not only with twisted) on windows is troublesome.
Sometimes, I have to manually download .msi files and execute it order by
order. I am sure that 99% of windows servers don't have a working compiler
no matter it is "free" or not.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120728/6d4651a5/attachment.htm 

From bob.novas at shinkuro.com  Sat Jul 28 12:09:04 2012
From: bob.novas at shinkuro.com (Bob Novas)
Date: Sat, 28 Jul 2012 12:09:04 -0400
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
Message-ID: <007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>

Hi - I'd like some guidance, please, on writing a TCPServer that can
efficiently receive and process (to a database) large files received from a
browser client form (multipart/form-data).  I'd like to be able to process
the command and headers without waiting for allContentReceived, if possible.
In other words, I'd like to actually handle the incoming stream rather than
buffer it to a file or a string and then handle the Request when all content
is received.  Note that the server is used only by a local browser by a
single user.  It is not used by a large user populace.

 

Is this possible? Are there any examples? Any guidance would be appreciated.
This was the best  I could find -
http://twistedmatrix.com/pipermail/twisted-python/2007-July/015738.html, but
it's pretty dated.

 

Thanks,

Bob

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120728/a2c764e3/attachment.htm 

From exarkun at twistedmatrix.com  Sat Jul 28 14:55:41 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Jul 2012 18:55:41 -0000
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
	<007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
Message-ID: <20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>

On 04:09 pm, bob.novas at shinkuro.com wrote:
>Hi - I'd like some guidance, please, on writing a TCPServer that can
>efficiently receive and process (to a database) large files received 
>from a
>browser client form (multipart/form-data).  I'd like to be able to 
>process
>the command and headers without waiting for allContentReceived, if 
>possible.
>In other words, I'd like to actually handle the incoming stream rather 
>than
>buffer it to a file or a string and then handle the Request when all 
>content
>is received.  Note that the server is used only by a local browser by a
>single user.  It is not used by a large user populace.
>
>Is this possible? Are there any examples? Any guidance would be 
>appreciated.
>This was the best  I could find -
>http://twistedmatrix.com/pipermail/twisted- 
>python/2007-July/015738.html, but
>it's pretty dated.

There are a few answers.

One is <http://twistedmatrix.com/trac/ticket/288>, an enhancement 
request for a nice, documented API for handling request bodies as they 
arrive.

Another is to override Request.handleContentChunk, which is called each 
time request body bytes are received (and decoded).

A third is to override Request.gotLength and initialize the `content` 
attribute differently somehow.  The default implementation of 
`handleContentChunk` just calls `self.content.write` with the content 
chunk.

Jean-Paul


From aclark at aclark.net  Sat Jul 28 19:40:25 2012
From: aclark at aclark.net (Alex Clark)
Date: Sat, 28 Jul 2012 19:40:25 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
Message-ID: <jv1t98$8qr$2@dough.gmane.org>

Hi Twisted folks,


I am reaching out to various Python-related programming communities in 
order to offer new help packaging your software.

If you have ever struggled with packaging and releasing Python software 
(e.g. to PyPI), please check out this service:


- http://pythonpackages.com


The basic idea is to automate packaging by checking out code, testing, 
and uploading (e.g. to PyPI) all through the web, as explained in this 
introduction:


- http://docs.pythonpackages.com/en/latest/introduction.html


Also, I will be available to answer your Python packaging questions most 
days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
with all of you soon.



Alex



-- 
Alex Clark ? http://pythonpackages.com/ONE_CLICK



From exarkun at twistedmatrix.com  Sun Jul 29 00:05:48 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Jul 2012 04:05:48 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1343534748.87.604297810@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120729/a55a680c/attachment.htm 

From eric at teratorn.org  Mon Jul 30 12:31:18 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 12:31:18 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv1t98$8qr$2@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
Message-ID: <20120730163118.GH10379@ragnarok.teratorn.org>

Alex,

I'm not sure if this is borderline off-topic, or not... but anyway..

I'm sure starting a discussion here IS offtopic.

But I have one question:

How do package authors verify the integrity of their packages built "through the web"?

--
-E

On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
> Hi Twisted folks,
> 
> 
> I am reaching out to various Python-related programming communities in 
> order to offer new help packaging your software.
> 
> If you have ever struggled with packaging and releasing Python software 
> (e.g. to PyPI), please check out this service:
> 
> 
> - http://pythonpackages.com
> 
> 
> The basic idea is to automate packaging by checking out code, testing, 
> and uploading (e.g. to PyPI) all through the web, as explained in this 
> introduction:
> 
> 
> - http://docs.pythonpackages.com/en/latest/introduction.html
> 
> 
> Also, I will be available to answer your Python packaging questions most 
> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
> with all of you soon.
> 
> 
> 
> Alex
> 
> 
> 
> -- 
> Alex Clark ? http://pythonpackages.com/ONE_CLICK
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From eric at teratorn.org  Mon Jul 30 12:43:42 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 12:43:42 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv1t98$8qr$2@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
Message-ID: <20120730164342.GI10379@ragnarok.teratorn.org>

Alex,

I'm not sure if this is borderline off-topic, or not... but anyway..

I'm sure starting a discussion here IS offtopic.

But I have one question:

How do package authors verify the integrity of their packages built "through the web"?

--
-E

On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
> Hi Twisted folks,
> 
> 
> I am reaching out to various Python-related programming communities in 
> order to offer new help packaging your software.
> 
> If you have ever struggled with packaging and releasing Python software 
> (e.g. to PyPI), please check out this service:
> 
> 
> - http://pythonpackages.com
> 
> 
> The basic idea is to automate packaging by checking out code, testing, 
> and uploading (e.g. to PyPI) all through the web, as explained in this 
> introduction:
> 
> 
> - http://docs.pythonpackages.com/en/latest/introduction.html
> 
> 
> Also, I will be available to answer your Python packaging questions most 
> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
> with all of you soon.
> 
> 
> 
> Alex
> 
> 
> 
> -- 
> Alex Clark ? http://pythonpackages.com/ONE_CLICK
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From aclark at aclark.net  Mon Jul 30 12:49:56 2012
From: aclark at aclark.net (Alex Clark)
Date: Mon, 30 Jul 2012 12:49:56 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120730163118.GH10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
Message-ID: <jv6dvl$2ih$1@dough.gmane.org>

Hi,


On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> Alex,
>
> I'm not sure if this is borderline off-topic, or not... but anyway..
>
> I'm sure starting a discussion here IS offtopic.
>
> But I have one question:
>
> How do package authors verify the integrity of their packages built "through the web"?


Good question, I just created:

- 
http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web

If you have any feature suggestions please open a ticket:

- https://bitbucket.org/pythonpackages/pythonpackages.com/issues/new


Alex





>
> --
> -E
>
> On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
>> Hi Twisted folks,
>>
>>
>> I am reaching out to various Python-related programming communities in
>> order to offer new help packaging your software.
>>
>> If you have ever struggled with packaging and releasing Python software
>> (e.g. to PyPI), please check out this service:
>>
>>
>> - http://pythonpackages.com
>>
>>
>> The basic idea is to automate packaging by checking out code, testing,
>> and uploading (e.g. to PyPI) all through the web, as explained in this
>> introduction:
>>
>>
>> - http://docs.pythonpackages.com/en/latest/introduction.html
>>
>>
>> Also, I will be available to answer your Python packaging questions most
>> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk
>> with all of you soon.
>>
>>
>>
>> Alex
>>
>>
>>
>> --
>> Alex Clark ? http://pythonpackages.com/ONE_CLICK
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Alex Clark ? http://pythonpackages.com/ONE_CLICK



From eric at teratorn.org  Mon Jul 30 16:49:04 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 16:49:04 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv6dvl$2ih$1@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
Message-ID: <20120730204904.GJ10379@ragnarok.teratorn.org>

On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
> Hi,
> 
> 
> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> > Alex,
> >
> > I'm not sure if this is borderline off-topic, or not... but anyway..
> >
> > I'm sure starting a discussion here IS offtopic.
> >
> > But I have one question:
> >
> > How do package authors verify the integrity of their packages built "through the web"?
> 
> 
> Good question, I just created:
> 
> - 
> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web

Let me be clear:

Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?

Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
(Yes, I would ask Launchpad/Canonical, et. all the same question...)

(Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)

Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.

Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho. Administrators need to know who has final responsibility and *authority* over the software that they are consuming. If "the cloud" is the last link in that chain, then you have a big problem, I think.

Have a nice day,
-E

P.S. Im open to sugguestions for moving this thread (where?), as I don't believe it belongs on this list.


From aclark at aclark.net  Mon Jul 30 17:09:07 2012
From: aclark at aclark.net (Alex Clark)
Date: Mon, 30 Jul 2012 17:09:07 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120730204904.GJ10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
Message-ID: <jv6t5j$2vj$1@dough.gmane.org>

Hi Eric,

On 7/30/12 4:49 PM, Eric P. Mangold wrote:
> On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
>> Hi,
>>
>>
>> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
>>> Alex,
>>>
>>> I'm not sure if this is borderline off-topic, or not... but anyway..
>>>
>>> I'm sure starting a discussion here IS offtopic.
>>>
>>> But I have one question:
>>>
>>> How do package authors verify the integrity of their packages built "through the web"?
>>
>>
>> Good question, I just created:
>>
>> -
>> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web
>
> Let me be clear:
>
> Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?
>
> Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
> (Yes, I would ask Launchpad/Canonical, et. all the same question...)
>
> (Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)


The point about md5 is not to suggest using it for security or data 
authenticity, it's to clarify that whatever security is currently place 
with PyPI (not a lot, admittedly) still applies, for whatever that is 
worth (not much, apparently).


>
> Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.
>
> Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho.Administrators need to know who has final responsibility and *authority* 
over the software that they are consuming. If "the cloud" is the last 
link in that chain, then you have a big problem, I think.


The last link in the chain is PyPI (or a private index). The node before 
that is typically your laptop. I'm suggesting you make it 
pythonpackages.com instead.

Folks can either trust us or not, based on the "real world" risk 
perceived. Of course we will try to convince them it is safe by actually 
make it safe, in whatever way is necessary/possible.

As for all your security points above, they are clearly valid and 
currently addressed (to the best of our ability) in the FAQ:

- http://docs.pythonpackages.com/en/latest/faq.html

And here:

- http://docs.pythonpackages.com/en/latest/security.html


>
> Have a nice day,
> -E
>
> P.S. Im open to sugguestions for moving this thread (where?), as I don't believe it belongs on this list.


You can bring it up (or join an existing thread) on catalog-sig if you 
like. I'm also in #pythonpackages on freenode 24/7. Thanks for the interest!



Alex





>


-- 
Alex Clark ? http://pythonpackages.com/ONE_CLICK



From msc at contact.de  Tue Jul 31 05:42:22 2012
From: msc at contact.de (Michael Schlenker)
Date: Tue, 31 Jul 2012 11:42:22 +0200
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
	<007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
	<20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <5017A87E.3060605@contact.de>

Am 28.07.2012 20:55, schrieb exarkun at twistedmatrix.com:
> On 04:09 pm, bob.novas at shinkuro.com wrote:
>> Hi - I'd like some guidance, please, on writing a TCPServer that can
>> efficiently receive and process (to a database) large files received 
>>from a
>> browser client form (multipart/form-data).  I'd like to be able to 
>> process
>> the command and headers without waiting for allContentReceived, if 
>> possible.
>> In other words, I'd like to actually handle the incoming stream rather 
>> than
>> buffer it to a file or a string and then handle the Request when all 
>> content
>> is received.  Note that the server is used only by a local browser by a
>> single user.  It is not used by a large user populace.
>>
>> Is this possible? Are there any examples? Any guidance would be 
>> appreciated.
>> This was the best  I could find -
>> http://twistedmatrix.com/pipermail/twisted- 
>> python/2007-July/015738.html, but
>> it's pretty dated.
> 
> There are a few answers.
> 
> One is <http://twistedmatrix.com/trac/ticket/288>, an enhancement 
> request for a nice, documented API for handling request bodies as they 
> arrive.
> 
> Another is to override Request.handleContentChunk, which is called each 
> time request body bytes are received (and decoded).
> 
> A third is to override Request.gotLength and initialize the `content` 
> attribute differently somehow.  The default implementation of 
> `handleContentChunk` just calls `self.content.write` with the content 
> chunk.
This works fine, just needs some care when errors happen.
We use this in production for some years now, replacing the self.content
with a python object that wraps a file object.

Looks basically like this:
class Request(server.Request):
  def gotLength(self, length):
    if self.channel._command == 'POST':
       try:
	  # plug in our own writer
          self.content = fileStore.getWriter()
          self.total_length = length
       except Exception, e:
          reason = "Exception in fileStore.getWriter"
          log.err(e, reason)
          # plug in an error writer class
          self.content = ErrorWriter(http.INTERNAL_SERVER_ERROR, reason)

class ErrorWriter(object):
    """ Fake writer object that takes the request body in case of error
        in PUT or POST, and throws it away. Done in this way, because
        there is no way to signal the client it should stop sending data
        (expect: 100-continue header processing missing in Twisted, see
        http://twistedmatrix.com/trac/wiki/TwistedWebClient)
    """
    def __init__(self, code, reason):
        self.code = code
        self.reason = reason

    def write(self, data):
        pass

    def read(self):
        return ''

    def seek(self, offset, whence=0):
        pass

    def close(self):
        raise Exception(self.reason, self.code)

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Stra?e 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Gesch?ftsf?hrer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215


From eric at teratorn.org  Tue Jul 31 10:24:02 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 31 Jul 2012 10:24:02 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv6t5j$2vj$1@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
Message-ID: <20120731142402.GL10379@ragnarok.teratorn.org>

On Mon, Jul 30, 2012 at 05:09:07PM -0400, Alex Clark wrote:
> Hi Eric,
> 
> On 7/30/12 4:49 PM, Eric P. Mangold wrote:
> > On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
> >> Hi,
> >>
> >>
> >> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> >>> Alex,
> >>>
> >>> I'm not sure if this is borderline off-topic, or not... but anyway..
> >>>
> >>> I'm sure starting a discussion here IS offtopic.
> >>>
> >>> But I have one question:
> >>>
> >>> How do package authors verify the integrity of their packages built "through the web"?
> >>
> >>
> >> Good question, I just created:
> >>
> >> -
> >> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web
> >
> > Let me be clear:
> >
> > Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?
> >
> > Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
> > (Yes, I would ask Launchpad/Canonical, et. all the same question...)
> >
> > (Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)
> 
> 
> The point about md5 is not to suggest using it for security or data 
> authenticity,

Sorry, I think I have a problem with taking the exact text of my question,
on your wiki, and casting it to be a different question entirely. (through
no fault of your own, I'm sure)

I think I've clarified what my orignal question was meant to ask, namely how do
we trust YOU and YOUR build infrastructure, not "how do we verify that the data
you're give us hasn't been damaged in transit".

If you wouldn't mind editing your wiki to reflect my clarifications, I would
very much appreciate it :)

> it's to clarify that whatever security is currently place 
> with PyPI (not a lot, admittedly) still applies, for whatever that is 
> worth (not much, apparently).
> 
> 
> >
> > Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.
> >
> > Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho.Administrators need to know who has final responsibility and *authority* 
> over the software that they are consuming. If "the cloud" is the last 
> link in that chain, then you have a big problem, I think.
> 
> 
> The last link in the chain is PyPI (or a private index). The node before 
> that is typically your laptop. I'm suggesting you make it 
> pythonpackages.com instead.
 
Clearly PyPI is inadequate. Jumping on solutions, for HARD problems that always 
require some form of cryptography to solve, is no more palettable.

And PyPI is also just a publishing platform - the packages have already been
minted by that point.

So as you suggest, the last point is the developer/release-manager, as it should
be.

I think my point is that ideally you don't want to trust anyone except the
developer/package-maintainer/release-manager.

Debian et. all solve this with signed packages. I would be happy to download
Debian packages from http://pythonpackages.com all day long :)

Debian also rely upon trusted build machines. But they are a more-or-less open
organization with open review of what goes on.

That said, I don't have a problem with people placing their trust in you. I don't
know you, and don't have any opinion on it to be honest. You're probably a good guy ;)

I would suggest working toward BEING a better PyPI mirror. Build
the infrastructure necessary for people to publish python SOURCE packages,
as they are, to PyPI, to pythonpackages.com, etc. etc. There is a lot of value
to be added there.

Build tools to make python packaging easy. On your laptop. On the cloud. Wherever.
Open SOURCE is good like that.

Regards,
Eric Mangold


From exarkun at twistedmatrix.com  Tue Jul 31 10:39:48 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 31 Jul 2012 14:39:48 -0000
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731142402.GL10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
Message-ID: <20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>

Please discontinue this discussion on twisted-python.  Thanks.

Jean-Paul


From eric at teratorn.org  Tue Jul 31 10:54:45 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 31 Jul 2012 10:54:45 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
	<20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
Message-ID: <20120731145445.GM10379@ragnarok.teratorn.org>

On Tue, Jul 31, 2012 at 02:39:48PM -0000, exarkun at twistedmatrix.com wrote:
> Please discontinue this discussion on twisted-python.  Thanks.
> 
> Jean-Paul

Thanks. I meant to indicate that I had CC'ed catalog-sig.

-E


From aclark at aclark.net  Tue Jul 31 11:35:43 2012
From: aclark at aclark.net (Alex Clark)
Date: Tue, 31 Jul 2012 11:35:43 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731145445.GM10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
	<20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
	<20120731145445.GM10379@ragnarok.teratorn.org>
Message-ID: <jv8u0f$142$1@dough.gmane.org>

On 7/31/12 10:54 AM, Eric P. Mangold wrote:
> On Tue, Jul 31, 2012 at 02:39:48PM -0000, exarkun at twistedmatrix.com wrote:
>> Please discontinue this discussion on twisted-python.  Thanks.
>>
>> Jean-Paul
>
> Thanks. I meant to indicate that I had CC'ed catalog-sig.


Indeed, thanks for your patience, all! Will pick up with Eric over on 
catalog-sig for anyone else interested.


>
> -E
>


-- 
Alex Clark ? http://pythonpackages.com/ONE_CLICK



From kevin.horn at gmail.com  Tue Jul 31 15:09:58 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 31 Jul 2012 14:09:58 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <CA+U=zK1Nzjc=Gn5oLWG_qMx1YBMc4bbSzwhXcP5wgMMEp64-XA@mail.gmail.com>

On Fri, Jul 27, 2012 at 6:59 AM, <exarkun at twistedmatrix.com> wrote:

> On 10:32 am, tobias.oberstein at tavendo.de wrote:
> >>>Even having full access to MSDN, it can be incredibly obscure to
> >>>discover which Python version goes with which Visual Studio product.
> >>>(Someone, please prove me wrong and indicate that there's a web page
> >>>that shows what the official python.org >> builds use and you don't
> >>>have to go trawling through python-dev archives to figure it out...)
> >
> >It is obscure. And I don't have a link, but the official Python on
> >Windows builds are done using Microsoft Visual C++ 2008.
> >
> >- VS 2010 will NOT work
> >- the free VS 2008 Express works (for 32-bit builds .. it does not
> >include a 64-bit compiler)
> >
> >To build Twisted working with official binary Python builds, the exact
> >same compiler is needed: VS2008.
>
> The question isn't "What compiler is needed to build Twisted?"  People
> on this list probably know that already (I certainly do, since I set up
> several of Twisted's Windows buildslaves).  The question is "How could a
> user ever hope to find out what compiler is needed to build Twisted?"
>
> As long as the Python documentation fails to answer this question better
> than it does now (and VS2008 is not the correct answer: the correct
> answer _depends on the Python version_), Windows users will not have an
> easy time of it.
>
>
For the benefit of those who may come across this thread in the future,
I've been using MinGW to build Twisted (on WinXP and Win7) for several
years, with no problems at all.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120731/712df752/attachment.htm 

From cds at corbinsimpson.com  Sun Jul  1 04:03:44 2012
From: cds at corbinsimpson.com (Corbin Simpson)
Date: Sun, 1 Jul 2012 03:03:44 -0700
Subject: [Twisted-Python] txWS !!
In-Reply-To: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
References: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
Message-ID: <20120701100344.GA12010@ps35699.dreamhostps.com>

On Sat, Jun 30, 2012 at 09:36:08PM +0200, vinod kumar wrote:
> Hi,
> 
>  Thanks a lot for your reply. The trouble is that the events I have are
> triggered by a homematic CCU. The CCU does it by multicall which has not
> yet been implemented in twisted servers. So, I'm running a non-twisted
> xmlrpc server in a thread so that my CCU triggers the events and it's
> happening too. I can see the events printed on the console too. Now, I just
> want a way to write the same to sockets. Can't we connect these to txWS
> factory ? Doesn't the txWS has some socket object so that we can just say
> socket.write..hmm

Well, no, txWS doesn't have raw sockets like that. Let me try to ASCII
things out.

In a normal Twisted TCP server, you might have some situation like this:

+---------------------------+
| ServerFactory             |
|                           |           +----+
| + - - - - -+ +- - - - - + |~Raw~Bytes~|Port|~~TCP~~
| | Protocol | | Protocol | |           +----+
| +- - - - - + + - - - - -+ |
+---------------------------+

In this scenario, the Port is bound to a ServerFactory, and each
Protocol of the Factory corresponds to a single TCP client. Protocols
should contain all of the logic necessary for communicating with their
given client. If necessary, the Factory could track all of its
Protocols, in order to facilitate cross-Protocol communication.

So, with that in mind, here's what txWS provides:

+---------------------------+
| WebSocketsFactory         |
|                           |=WebSockets=Framing=+----+
| + - - - - - - - +         |~~~~~~Raw~Bytes~~~~~|Port|~~TCP~~
| | ServerFactory |         |====================+----+
| +- - - - - - - -+         |
+---------------------------+

That is, WebSocketsFactory wraps a ServerFactory and armors all of the
bytes being sent with WebSockets frames. There isn't any magic in there;
it's all compositional and very straightforward.

I'm not sure what you want when you say that you "want a way to write
the same to sockets." txWS doesn't have any special insight into the
bottom layer of its connection. (It could even work on non-TCP, if
somebody really wanted that.)

I hope this clarifies things; I know it doesn't exactly answer your
question as stated.

~ C.



From vk.86.811 at gmail.com  Sun Jul  1 05:09:53 2012
From: vk.86.811 at gmail.com (vinod kumar)
Date: Sun, 1 Jul 2012 13:09:53 +0200
Subject: [Twisted-Python] txWS !!
In-Reply-To: <20120701100344.GA12010@ps35699.dreamhostps.com>
References: <CAEUxhZ03_+fF-Tw2AExHRzKCJ1hnGUh9Y6Av8vxP8Er8ZLsgbg@mail.gmail.com>
	<20120701100344.GA12010@ps35699.dreamhostps.com>
Message-ID: <CAEUxhZ3FgxrHjzMt1cvd-fc+vKZ=hds1ibRRNurPU+n5peunGQ@mail.gmail.com>

Hi,

Thanks a lot for your clarification. My problems have been resolved.
Actually, I shifted to Autobahn. It's way comfortable in editing the
examples there. Now, I got the way to deal with txWS too indeed. The answer
to what I asked is just about grabbing the endpoints and use them at times.
In Autobahn broadcast example, they store all the clients when the
connection is opened as shown below:

 def onOpen(self):
      self.factory.register(self)

And in factory, the register function is this way:

 def register(self, client):
      if not client in self.clients:
         print "registered client " + client.peerstr
         self.clients.append(client)

So, this way I can send to all clients whenever I want as follows:
 ......some code .....
  for c in self.clients:
         c.sendMessage(json_event)
......some code........

Anyways, I have implemented my scenario pretty well using Autobahn. I'm
sure I can do the same with txWS at times.

Thanks,
Vinodh
On Sun, Jul 1, 2012 at 12:03 PM, Corbin Simpson <cds at corbinsimpson.com>wrote:

> On Sat, Jun 30, 2012 at 09:36:08PM +0200, vinod kumar wrote:
> > Hi,
> >
> >  Thanks a lot for your reply. The trouble is that the events I have are
> > triggered by a homematic CCU. The CCU does it by multicall which has not
> > yet been implemented in twisted servers. So, I'm running a non-twisted
> > xmlrpc server in a thread so that my CCU triggers the events and it's
> > happening too. I can see the events printed on the console too. Now, I
> just
> > want a way to write the same to sockets. Can't we connect these to txWS
> > factory ? Doesn't the txWS has some socket object so that we can just say
> > socket.write..hmm
>
> Well, no, txWS doesn't have raw sockets like that. Let me try to ASCII
> things out.
>
> In a normal Twisted TCP server, you might have some situation like this:
>
> +---------------------------+
> | ServerFactory             |
> |                           |           +----+
> | + - - - - -+ +- - - - - + |~Raw~Bytes~|Port|~~TCP~~
> | | Protocol | | Protocol | |           +----+
> | +- - - - - + + - - - - -+ |
> +---------------------------+
>
> In this scenario, the Port is bound to a ServerFactory, and each
> Protocol of the Factory corresponds to a single TCP client. Protocols
> should contain all of the logic necessary for communicating with their
> given client. If necessary, the Factory could track all of its
> Protocols, in order to facilitate cross-Protocol communication.
>
> So, with that in mind, here's what txWS provides:
>
> +---------------------------+
> | WebSocketsFactory         |
> |                           |=WebSockets=Framing=+----+
> | + - - - - - - - +         |~~~~~~Raw~Bytes~~~~~|Port|~~TCP~~
> | | ServerFactory |         |====================+----+
> | +- - - - - - - -+         |
> +---------------------------+
>
> That is, WebSocketsFactory wraps a ServerFactory and armors all of the
> bytes being sent with WebSockets frames. There isn't any magic in there;
> it's all compositional and very straightforward.
>
> I'm not sure what you want when you say that you "want a way to write
> the same to sockets." txWS doesn't have any special insight into the
> bottom layer of its connection. (It could even work on non-TCP, if
> somebody really wanted that.)
>
> I hope this clarifies things; I know it doesn't exactly answer your
> question as stated.
>
> ~ C.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120701/4f95d9a1/attachment.html>

From drsalists at gmail.com  Mon Jul  2 18:31:14 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 3 Jul 2012 00:31:14 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
Message-ID: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>

On Thu, Jun 28, 2012 at 9:40 PM, Dan Stromberg <drsalists at gmail.com> wrote:

>
> Hi.
>
> I'm a Twisted neophyte, but I've been using Python a long time.
>
> My question:
> Is there a way of producing a deferred graph in a Python program at a
> given point in time?  Perhaps something based on graphviz and objgraph.py?
>  We're able to detect when we're having the problem, we just don't (yet)
> know its cause.
>
>
> Background:
> I'm looking at some code with a bit over 200
> addCallback/addErrback/addCallbacks in it.
>
> It's got a problem where sometimes the deferreds seem to just stop
> executing.  I see in the doc it says that this can happen if you've
> neglected to add an errback to the end of one or more of your deferred
> chains.
>
> One of the people who's been here longer than me, indicated that he's gone
> through the code looking for such issues, and didn't find any.  This
> suggests to me that either there's some other cause, or that it really is a
> deferred without a final errback, but it's hidden in a dark corner of the
> code somewhere.
>
>
> Thanks!
>
> I put together something to do a single-point-in-time graph (as
distorted/delayed by the time it takes to go through all the objects in the
python interpreter) of deferreds.  Please find it below as a shar archive
(wow, someone still does those?   Yeah, sometimes)  Anyway, given a tree of
deferreds, this will produce a whatever.dot file, which can be fed to
graphviz' "dot -Tpdf whatever.dot > whatever.pdf", and the pdf has a rather
nice-looking graph of the deferreds.

#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.11.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `#!/bin/sh' line above, then type `sh FILE'.
#
lock_dir=_sh32156
# Made on 2012-07-02 21:48 UTC by <stromberg at aw50>.
# Source directory was `/home/stromberg/src/twisted-experiments'.
#
# Existing files will *not* be overwritten, unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2181 -rwxr-xr-x deferreddump.py
#   3174 -rwxr-xr-x wedgedump
#
MD5SUM=${MD5SUM-md5sum}
f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
test -n "${f}" && md5check=true || md5check=false
${md5check} || \
  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
if test "X$1" = "X-c"
then keep_file=''
else keep_file=true
fi
echo=echo
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=
locale_dir=
set_echo=false

for dir in $PATH
do
  if test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    case `$dir/gettext --version 2>&1 | sed 1q` in
      *GNU*) gettext_dir=$dir
      set_echo=true
      break ;;
    esac
  fi
done

if ${set_echo}
then
  set_echo=false
  for dir in $PATH
  do
    if test -f $dir/shar \
       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
    then
      locale_dir=`$dir/shar --print-text-domain-dir`
      set_echo=true
      break
    fi
  done

  if ${set_echo}
  then
    TEXTDOMAINDIR=$locale_dir
    export TEXTDOMAINDIR
    TEXTDOMAIN=sharutils
    export TEXTDOMAIN
    echo="$gettext_dir/gettext -s"
  fi
fi
IFS="$save_IFS"
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
then if (echo -n test; echo 1,2,3) | grep n >/dev/null
     then shar_n= shar_c='
'
     else shar_n=-n shar_c= ; fi
else shar_n= shar_c='\c' ; fi
f=shar-touch.$$
st1=200112312359.59
st2=123123592001.59
st2tr=123123592001.5 # old SysV 14-char limit
st3=1231235901

if touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
   test ! -f ${st1} && test -f ${f}; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'

elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
   test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'

elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
   test ! -f ${st3} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'

else
  shar_touch=:
  echo
  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
installing GNU `touch'\'', distributed in GNU coreutils...'
  echo
fi
rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
#
if test ! -d ${lock_dir} ; then :
else ${echo} "lock directory ${lock_dir} exists"
     exit 1
fi
if mkdir ${lock_dir}
then ${echo} "x - created lock directory ${lock_dir}."
else ${echo} "x - failed to create lock directory ${lock_dir}."
     exit 1
fi
# ============= deferreddump.py ==============
if test -n "${keep_file}" && test -f 'deferreddump.py'
then
${echo} "x - SKIPPING deferreddump.py (file already exists)"
else
${echo} "x - extracting deferreddump.py (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'deferreddump.py' &&
#!/usr/bin/python
X
# See also: http://twistedmatrix.com/trac/ticket/3858
# and:      http://twistedmatrix.com/trac/ticket/1402
# and:
#   twisted.internet.defer also exposes a setDebugging(bool) function to
#   store call stacks from creation and invocation in deferred objects,
#   it's what I was using to try and figure out what was going on, but
#   it's not nearly as at-a-glance as a graph is.
X
import gc
import sys
X
import twisted.internet.defer
X
def escape(callback_type, obj):
X    dummy = callback_type
X    return '%s' % (str(obj).replace(' ', '_').replace(':',
'').replace('<', '').replace('>', ''), )
X
def dump(outfile = sys.stdout):
X    outfile.write('digraph deferred_digraph {\n')
X    for obj in gc.get_objects():
X        if isinstance(obj, twisted.internet.defer.Deferred):
X            len_callbacks = len(obj.callbacks)
X            if obj.callbacks:
X                outfile.write('\t%s -> %s\n' % (escape('', obj),
escape('', obj.callbacks[0][0][0])))
X                outfile.write('\t%s -> %s\n' % (escape('', obj),
escape('', obj.callbacks[0][1][0])))
X            for callbackpairno in range(len_callbacks - 1):
X                current_callback = obj.callbacks[callbackpairno][0]
X                current_errback = obj.callbacks[callbackpairno][1]
X                current_callback_desc = current_callback[0]
X                current_errback_desc = current_errback[0]
X
X                next_callback = obj.callbacks[callbackpairno + 1][0]
X                next_errback = obj.callbacks[callbackpairno + 1][1]
X                next_callback_desc = next_callback[0]
X                next_errback_desc = next_errback[0]
X
X                outfile.write('\t%s -> %s;\n' % (escape('callback',
current_callback_desc), escape('callback', next_callback_desc)))
X                outfile.write('\t%s -> %s;\n' % (escape('errback',
current_errback_desc), escape('errback', next_errback_desc)))
X
X                outfile.write('\t%s -> %s;\n' % (escape('callback',
current_callback_desc), escape('errback', next_errback_desc)))
X                outfile.write('\t%s -> %s;\n' % (escape('errback',
current_errback_desc), escape('callback', next_callback_desc)))
X
X    outfile.write('}\n')
X
X
SHAR_EOF
  (set 20 12 06 29 18 02 00 'deferreddump.py'
   eval "${shar_touch}") && \
  chmod 0755 'deferreddump.py'
if test $? -ne 0
then ${echo} "restore of deferreddump.py failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'deferreddump.py': 'MD5
check failed'
       ) << \SHAR_EOF
45b2aed37cc2e57bc58f46a42eb2a2d4  deferreddump.py
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'deferreddump.py'` -ne 2181 && \
  ${echo} "restoration warning:  size of 'deferreddump.py' is not 2181"
  fi
fi
# ============= wedgedump ==============
if test -n "${keep_file}" && test -f 'wedgedump'
then
${echo} "x - SKIPPING wedgedump (file already exists)"
else
${echo} "x - extracting wedgedump (text)"
  sed 's/^X//' << 'SHAR_EOF' > 'wedgedump' &&
#!/usr/bin/python
X
# Unhandled Errors
X
# From http://twistedmatrix.com/documents/current/core/howto/defer.html :
X
#   If a Deferred is garbage-collected with an unhandled error (i.e. it
#   would call the next errback if there was one), then Twisted will write
#   the error's traceback to the log file. This means that you can
#   typically get away with not adding errbacks and still get errors
#   logged. Be careful though; if you keep a reference to the Deferred
#   around, preventing it from being garbage-collected, then you may never
#   see the error (and your callbacks will mysteriously seem to have never
#   been called). If unsure, you should explicitly add an errback after
#   your callbacks, even if all you do is:
X
#       # Make sure errors get logged
#       from twisted.python import log
#       d.addErrback(log.err)
X
import sys
#mport time
X
import twisted.internet.defer
import twisted.python
X
import deferreddump
X
def get_deferred():
X    return twisted.internet.defer.succeed(1)
X
def cb1(value):
X    print value
X    return value * 2
X
def cb2(value):
X    #raise ValueError
X    print value
X    return value * 2
X
def cb3(value):
X    print value
X    return value * 2
X
def cb4(value):
X    print value
X    return value * 2
X
def cb5(value):
X    print value
X    return value * 2
X
def cb6(value):
X    print value
X    return value * 2
X
def cb7(value):
X    print value
X    return value * 2
X
def cb8(value):
X    print value
X    return value * 2
X
def eb1(value):
X    twisted.python.log.err()
X
def eb2(value):
X    twisted.python.log.err()
X
def eb3(value):
X    twisted.python.log.err()
X
def eb4(value):
X    twisted.python.log.err()
X
def eb5(value):
X    twisted.python.log.err()
X
def eb6(value):
X    twisted.python.log.err()
X
def eb7(value):
X    twisted.python.log.err()
X
def eb8(value):
X    twisted.python.log.err()
X
def arbitrary_function(add_final_log):
X    deferred = get_deferred()
X
X    # apparently we can use the same callback multiple times in the same
deferred
X    first_deferred = deferred.addCallback(cb1)
X    first_deferred.pause()
X    deferred.addCallbacks(cb1, eb1)
X    deferred.addCallbacks(cb2, eb2)
X    deferred.addCallbacks(cb3, eb3)
X    deferred.addCallbacks(cb4, eb4)
X    deferred.addCallbacks(cb5, eb5)
X    deferred.addCallbacks(cb6, eb6)
X    deferred.addCallbacks(cb7, eb7)
X
X    with open('t.dot', 'w') as file_:
X        deferreddump.dump(file_)
X
X    first_deferred.unpause()
X    if add_final_log:
X        deferred.addCallbacks(cb4, twisted.python.log.err)
X    else:
X        deferred.addCallback(cb4)
X
X    return deferred
X
def usage(retval):
X    sys.stderr.write('Usage: %s --add-final-log\n' % sys.argv[0])
X    sys.exit(retval)
X
def main():
X    add_final_log = False
X    while sys.argv[1:]:
X        if sys.argv[1] == '--add-final-log':
X            add_final_log = True
X        elif sys.argv[1] in [ '-h', '--help' ]:
X            usage(0)
X        else:
X            sys.stderr.write('%s: Unrecognized option: %s\n' %
(sys.argv[0], sys.argv[1]))
X            usage(1)
X        del sys.argv[1]
X
X    deferred = arbitrary_function(add_final_log)
X    with open('/dev/null', 'w') as file_:
X        file_.write(str(deferred))
X
X    sys.exit(0)
X
main()
X
SHAR_EOF
  (set 20 12 07 02 21 46 02 'wedgedump'
   eval "${shar_touch}") && \
  chmod 0755 'wedgedump'
if test $? -ne 0
then ${echo} "restore of wedgedump failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'wedgedump': 'MD5 check
failed'
       ) << \SHAR_EOF
d526664fcf63762f768303af91a74a5f  wedgedump
SHAR_EOF
  else
test `LC_ALL=C wc -c < 'wedgedump'` -ne 3174 && \
  ${echo} "restoration warning:  size of 'wedgedump' is not 3174"
  fi
fi
if rm -fr ${lock_dir}
then ${echo} "x - removed lock directory ${lock_dir}."
else ${echo} "x - failed to remove lock directory ${lock_dir}."
     exit 1
fi
exit 0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120703/25ad2826/attachment.html>

From tom.cocagne at gmail.com  Tue Jul  3 00:08:28 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 01:08:28 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
Message-ID: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>

For anyone interested in taking a look, I've just released a
native-Python implementation of the DBus protocol for Twisted. The
intent of the implementation is to provide Twisted applications with a
full-featured DBus API that is consistent with the rest of the
framework and does not require the use of the glib reactor or libdbus
Python bindings.

The project is currently hosted on github and has a pypi entry:

https://github.com/cocagne/twisted_dbus

http://pypi.python.org/pypi/twisted_dbus/1.0

Notes on the implementation:

* A comprehensive tutorial and DBus protocol overview is included in
the project documentation
* Although the release version is set at 1.0, the project should be
considered Beta quality as it has seen little real-world use
* Unit test coverage is at about 98%
* The code adheres to the Twisted coding standards
* Windows is currently not supported (likely a trivially easy task but
as yet unexplored)
* Full, generated API documentation is possible but burnout/apathy set
in before I figured out how to properly use Twisted's documentation
generator
* The implementation includes a basic DBus server implementation but,
currently, it's only intended to serve as an alternative to the native
DBus server when running the unit tests.

Notes on Performance:

* For a pure-python solution the performance is really quite good.
* On the CPython interpreter, this implementation runs at about about
1/3 to 1/5th the speed of the libdbus bindings.
* On the PyPy interpreter, this implementation runs at about the same
speed as the libdbus bindings
* Surprisingly enough, the bottleneck does not appear to be in the
marshalling/unmarshalling routines. Simply compiling the dbus
marshalling module with Cython yielded a 10x increase in marshalling
performance but this translated into only a minor overall performance
improvement. If anyone adept at Python/Twisted profiling would care to
take a look, assistance in this area would be most welcome.


- Tom Cocagne



From _ at lvh.cc  Tue Jul  3 01:08:41 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 3 Jul 2012 09:08:41 +0200
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
Message-ID: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>

Hi,

I have an AMP service that does cred-based auth with IBoxReceiver as the interface (see mantissa). On login, the user gets a different API depending if they're a staff member or not.

Additionally, I wrote a composing IResponderLocator. It takes a bunch of responder locators and calls them in sequence to see if they can provide a responder. The reason it exists is because I want to put behavior in their separate, related modules, but @Command.responder is only supposed to work at class definition time. Here's the implementation:

class ComposedLocator(object):
   """
   A responder locator that consists of other locators.
   """
   interface.implements(amp.IResponderLocator)

   class __metaclass__(type):
       def __new__(meta, name, bases, attrs):
           """
           Makes sure every subclass gets its own set of locator classes.
           """
           attrs["_locatorClasses"] = []
           return type.__new__(meta, name, bases, attrs)


   def __init__(self, *args, **kwargs):
       self._locators = [l(*args, **kwargs) for l in self._locatorClasses]


   def locateResponder(self, name):
       """
       Locates a responder from all the component responders.
       """
       for locator in self._locators:
           responder = locator.locateResponder(name)
           if responder is not None:
               return responder


   @classmethod
   def component(cls, locatorClass):
       """
       Registers a component locator.
       """
       cls._locatorClasses.append(locatorClass)
       return locatorClass



This has worked fine so far, but I've hit something so annoying to fix that I'm wondering if I'm not doing something very stupid and overlooking the obvious.

I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!

Except, no. Because of the composed locator detailed above, the responding method has no reference to the box sender and box receiver.  It's it's own little standalone object, with barely any AMP-specific knowledge. Ordinarily elegant, now annoying.

The only reason it ever worked before is because the default AMP implementation basically just involves subclassing everything into one object (self is self.boxReceiver is self.boxSender)

I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?


cheers
lvh





From tobias.oberstein at tavendo.de  Tue Jul  3 04:27:24 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 3 Jul 2012 03:27:24 -0700
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>

> For anyone interested in taking a look, I've just released a native-Python
> implementation of the DBus protocol for Twisted. The intent of the
> implementation is to provide Twisted applications with a full-featured DBus API
> that is consistent with the rest of the framework and does not require the use
> of the glib reactor or libdbus Python bindings.

Cool! Also great work on the examples, tutorial and protocol overview!

I'm having problems with the desktop notification example though .. any hints?


oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
Python 2.7.3
oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
Unhandled Error
Traceback (most recent call last):
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
    why = selectable.doRead()
  File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
    fd = struct.unpack('i', ancillary[0][2])[0]
struct.error: unpack requires a string argument of length 4

This is on Twisted 12.1



From tom.cocagne at gmail.com  Tue Jul  3 07:08:57 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 08:08:57 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>

Glyph was kind enough to point out offline that I screwed up the
project name during my midnight cleanup and release process. The name
was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
project links have been removed and replaced with their corrected
counterparts:

 https://github.com/cocagne/txdbus

 http://pypi.python.org/pypi/txdbus/1.0

- Tom



On Tue, Jul 3, 2012 at 1:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.
>
> The project is currently hosted on github and has a pypi entry:
>
> https://github.com/cocagne/twisted_dbus
>
> http://pypi.python.org/pypi/twisted_dbus/1.0
>
> Notes on the implementation:
>
> * A comprehensive tutorial and DBus protocol overview is included in
> the project documentation
> * Although the release version is set at 1.0, the project should be
> considered Beta quality as it has seen little real-world use
> * Unit test coverage is at about 98%
> * The code adheres to the Twisted coding standards
> * Windows is currently not supported (likely a trivially easy task but
> as yet unexplored)
> * Full, generated API documentation is possible but burnout/apathy set
> in before I figured out how to properly use Twisted's documentation
> generator
> * The implementation includes a basic DBus server implementation but,
> currently, it's only intended to serve as an alternative to the native
> DBus server when running the unit tests.
>
> Notes on Performance:
>
> * For a pure-python solution the performance is really quite good.
> * On the CPython interpreter, this implementation runs at about about
> 1/3 to 1/5th the speed of the libdbus bindings.
> * On the PyPy interpreter, this implementation runs at about the same
> speed as the libdbus bindings
> * Surprisingly enough, the bottleneck does not appear to be in the
> marshalling/unmarshalling routines. Simply compiling the dbus
> marshalling module with Cython yielded a 10x increase in marshalling
> performance but this translated into only a minor overall performance
> improvement. If anyone adept at Python/Twisted profiling would care to
> take a look, assistance in this area would be most welcome.
>
>
> - Tom Cocagne



From tom.cocagne at gmail.com  Tue Jul  3 07:16:01 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 08:16:01 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>

I believe credential passing over Unix sockets is a new feature in
Twisted 12.1. The older versions I used to develop this project didn't
support that feature so I had to implement it myself. From the
stacktrace, I'm guessing that my workaround for this is clashing with
Twisted's new build-in support. I'll try and take a look at this in
the near future.

Tom

On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>> For anyone interested in taking a look, I've just released a native-Python
>> implementation of the DBus protocol for Twisted. The intent of the
>> implementation is to provide Twisted applications with a full-featured DBus API
>> that is consistent with the rest of the framework and does not require the use
>> of the glib reactor or libdbus Python bindings.
>
> Cool! Also great work on the examples, tutorial and protocol overview!
>
> I'm having problems with the desktop notification example though .. any hints?
>
>
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
> Python 2.7.3
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
> Unhandled Error
> Traceback (most recent call last):
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>     return callWithContext({"system": lp}, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>     return func(*args,**kw)
> --- <exception caught here> ---
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>     why = selectable.doRead()
>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>     fd = struct.unpack('i', ancillary[0][2])[0]
> struct.error: unpack requires a string argument of length 4
>
> This is on Twisted 12.1
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From radix at twistedmatrix.com  Tue Jul  3 07:16:59 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 3 Jul 2012 09:16:59 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAPkRfUTsF=xLyVO5U2SYLLX3jGSK4MHbb0z_rZqW4Kf0E5A4kg@mail.gmail.com>

On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.

Wow, nice. This looks like a high quality effort. libdbus is
appallingly bad (or was when I used it), so it's good to see
alternative implementations.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From tom.cocagne at gmail.com  Tue Jul  3 09:14:46 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 10:14:46 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
	<CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
Message-ID: <CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>

Unfortunately, it looks like 12.1 may be completely incompatible with
txdbus. The ancillary data support for Unix sockets appears to support
only file descriptor passing and breaks when credential passing is
attempted. The current implementation assumes and fails to check for
ancillary data sizes other than 4 (credentials are of length 12). I
believe it will be a relatively straight-forward task to add
credential passing support similar to how file descriptor passing is
done but it'll probably have to wait until the next Twisted release. A
straight-forward work-around eludes me.

Tom


On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> I believe credential passing over Unix sockets is a new feature in
> Twisted 12.1. The older versions I used to develop this project didn't
> support that feature so I had to implement it myself. From the
> stacktrace, I'm guessing that my workaround for this is clashing with
> Twisted's new build-in support. I'll try and take a look at this in
> the near future.
>
> Tom
>
> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
> <tobias.oberstein at tavendo.de> wrote:
>>> For anyone interested in taking a look, I've just released a native-Python
>>> implementation of the DBus protocol for Twisted. The intent of the
>>> implementation is to provide Twisted applications with a full-featured DBus API
>>> that is consistent with the rest of the framework and does not require the use
>>> of the glib reactor or libdbus Python bindings.
>>
>> Cool! Also great work on the examples, tutorial and protocol overview!
>>
>> I'm having problems with the desktop notification example though .. any hints?
>>
>>
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
>> Python 2.7.3
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
>> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
>> Unhandled Error
>> Traceback (most recent call last):
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>>     return callWithContext({"system": lp}, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>>     return func(*args,**kw)
>> --- <exception caught here> ---
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>>     why = selectable.doRead()
>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>>     fd = struct.unpack('i', ancillary[0][2])[0]
>> struct.error: unpack requires a string argument of length 4
>>
>> This is on Twisted 12.1
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jstpierre at mecheye.net  Tue Jul  3 09:28:55 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Tue, 3 Jul 2012 11:28:55 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
Message-ID: <CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>

On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> For anyone interested in taking a look, I've just released a
> native-Python implementation of the DBus protocol for Twisted. The
> intent of the implementation is to provide Twisted applications with a
> full-featured DBus API that is consistent with the rest of the
> framework and does not require the use of the glib reactor or libdbus
> Python bindings.
>
> The project is currently hosted on github and has a pypi entry:
>
> https://github.com/cocagne/twisted_dbus
>
> http://pypi.python.org/pypi/twisted_dbus/1.0
>
> Notes on the implementation:
>
> * A comprehensive tutorial and DBus protocol overview is included in
> the project documentation
> * Although the release version is set at 1.0, the project should be
> considered Beta quality as it has seen little real-world use
> * Unit test coverage is at about 98%
> * The code adheres to the Twisted coding standards
> * Windows is currently not supported (likely a trivially easy task but
> as yet unexplored)
> * Full, generated API documentation is possible but burnout/apathy set
> in before I figured out how to properly use Twisted's documentation
> generator
> * The implementation includes a basic DBus server implementation but,
> currently, it's only intended to serve as an alternative to the native
> DBus server when running the unit tests.
>
> Notes on Performance:
>
> * For a pure-python solution the performance is really quite good.
> * On the CPython interpreter, this implementation runs at about about
> 1/3 to 1/5th the speed of the libdbus bindings.

Did you compare to GDBus? I'm just curious, as David has been excited
about performance improvements there.

> * On the PyPy interpreter, this implementation runs at about the same
> speed as the libdbus bindings
> * Surprisingly enough, the bottleneck does not appear to be in the
> marshalling/unmarshalling routines. Simply compiling the dbus
> marshalling module with Cython yielded a 10x increase in marshalling
> performance but this translated into only a minor overall performance
> improvement. If anyone adept at Python/Twisted profiling would care to
> take a look, assistance in this area would be most welcome.
>
>
> - Tom Cocagne
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From radix at twistedmatrix.com  Tue Jul  3 09:53:48 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 3 Jul 2012 11:53:48 -0400
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
Message-ID: <CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>

On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> Glyph was kind enough to point out offline that I screwed up the
> project name during my midnight cleanup and release process. The name
> was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
> project links have been removed and replaced with their corrected
> counterparts:
>
>  https://github.com/cocagne/txdbus
>
>  http://pypi.python.org/pypi/txdbus/1.0
>

You probably shouldn't actually put it in a "tx" python package. It'll
cause conflicts with anyone else who makes the same mistake. Just name
the toplevel package "txdbus" or something.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



From tom.cocagne at gmail.com  Tue Jul  3 10:03:41 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 11:03:41 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAA0H+QR+RiwB0beqWWbNJt6TjesVRVCOwyt5a+k0S2VLAtXx8w@mail.gmail.com>
Message-ID: <CAFKh6jAQAzYV-0eruJ4hYTyqfX0AeR=PRnwkXFJm73z7z+va4g@mail.gmail.com>

No, I haven't compared it to GDbus. I would certainly expect it's
performance to be better though. it's been a long time since I've used
PyGTK. Honestly, I'd completely forgotten about it. I'll give it a
look.

Tom

On Tue, Jul 3, 2012 at 10:28 AM, Jasper St. Pierre
<jstpierre at mecheye.net> wrote:
> On Tue, Jul 3, 2012 at 2:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> For anyone interested in taking a look, I've just released a
>> native-Python implementation of the DBus protocol for Twisted. The
>> intent of the implementation is to provide Twisted applications with a
>> full-featured DBus API that is consistent with the rest of the
>> framework and does not require the use of the glib reactor or libdbus
>> Python bindings.
>>
>> The project is currently hosted on github and has a pypi entry:
>>
>> https://github.com/cocagne/twisted_dbus
>>
>> http://pypi.python.org/pypi/twisted_dbus/1.0
>>
>> Notes on the implementation:
>>
>> * A comprehensive tutorial and DBus protocol overview is included in
>> the project documentation
>> * Although the release version is set at 1.0, the project should be
>> considered Beta quality as it has seen little real-world use
>> * Unit test coverage is at about 98%
>> * The code adheres to the Twisted coding standards
>> * Windows is currently not supported (likely a trivially easy task but
>> as yet unexplored)
>> * Full, generated API documentation is possible but burnout/apathy set
>> in before I figured out how to properly use Twisted's documentation
>> generator
>> * The implementation includes a basic DBus server implementation but,
>> currently, it's only intended to serve as an alternative to the native
>> DBus server when running the unit tests.
>>
>> Notes on Performance:
>>
>> * For a pure-python solution the performance is really quite good.
>> * On the CPython interpreter, this implementation runs at about about
>> 1/3 to 1/5th the speed of the libdbus bindings.
>
> Did you compare to GDBus? I'm just curious, as David has been excited
> about performance improvements there.
>
>> * On the PyPy interpreter, this implementation runs at about the same
>> speed as the libdbus bindings
>> * Surprisingly enough, the bottleneck does not appear to be in the
>> marshalling/unmarshalling routines. Simply compiling the dbus
>> marshalling module with Cython yielded a 10x increase in marshalling
>> performance but this translated into only a minor overall performance
>> improvement. If anyone adept at Python/Twisted profiling would care to
>> take a look, assistance in this area would be most welcome.
>>
>>
>> - Tom Cocagne
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
>   Jasper
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tom.cocagne at gmail.com  Tue Jul  3 11:56:15 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 12:56:15 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
	<CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
Message-ID: <CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>

Not sure how I overlooked that.

Done.

Tom

On Tue, Jul 3, 2012 at 10:53 AM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> Glyph was kind enough to point out offline that I screwed up the
>> project name during my midnight cleanup and release process. The name
>> was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
>> project links have been removed and replaced with their corrected
>> counterparts:
>>
>>  https://github.com/cocagne/txdbus
>>
>>  http://pypi.python.org/pypi/txdbus/1.0
>>
>
> You probably shouldn't actually put it in a "tx" python package. It'll
> cause conflicts with anyone else who makes the same mistake. Just name
> the toplevel package "txdbus" or something.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tom.cocagne at gmail.com  Tue Jul  3 14:36:41 2012
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Tue, 3 Jul 2012 15:36:41 -0500
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<634914A010D0B943A035D226786325D433793A5AA0@EXVMBX020-12.exch020.serverdata.net>
	<CAFKh6jDZnP9ykuMcGep7xVXpEizng_c1bFQycRxbFfFuBfwtVA@mail.gmail.com>
	<CAFKh6jBZiriqak=6m5axEBDwofuRJtgGq1zGJftW3ZyFJ6A26g@mail.gmail.com>
Message-ID: <CAFKh6jBoWccZWXxpmJVuunNVSjAePT3tocKSvMb4jwVaL9YyYg@mail.gmail.com>

Nevermind. Simply removing the explicit credential passing from the
client side of the implementation fixed the problem. txdbus 1.0.2
appears to run just fine on 12.1.

Tom

On Tue, Jul 3, 2012 at 10:14 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
> Unfortunately, it looks like 12.1 may be completely incompatible with
> txdbus. The ancillary data support for Unix sockets appears to support
> only file descriptor passing and breaks when credential passing is
> attempted. The current implementation assumes and fails to check for
> ancillary data sizes other than 4 (credentials are of length 12). I
> believe it will be a relatively straight-forward task to add
> credential passing support similar to how file descriptor passing is
> done but it'll probably have to wait until the next Twisted release. A
> straight-forward work-around eludes me.
>
> Tom
>
>
> On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com> wrote:
>> I believe credential passing over Unix sockets is a new feature in
>> Twisted 12.1. The older versions I used to develop this project didn't
>> support that feature so I had to implement it myself. From the
>> stacktrace, I'm guessing that my workaround for this is clashing with
>> Twisted's new build-in support. I'll try and take a look at this in
>> the near future.
>>
>> Tom
>>
>> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
>> <tobias.oberstein at tavendo.de> wrote:
>>>> For anyone interested in taking a look, I've just released a native-Python
>>>> implementation of the DBus protocol for Twisted. The intent of the
>>>> implementation is to provide Twisted applications with a full-featured DBus API
>>>> that is consistent with the rest of the framework and does not require the use
>>>> of the glib reactor or libdbus Python bindings.
>>>
>>> Cool! Also great work on the examples, tutorial and protocol overview!
>>>
>>> I'm having problems with the desktop notification example though .. any hints?
>>>
>>>
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python -V
>>> Python 2.7.3
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ uname -a
>>> Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
>>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$ ~/python273/bin/python desktop_noficiation
>>> Unhandled Error
>>> Traceback (most recent call last):
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 84, in callWithLogger
>>>     return callWithContext({"system": lp}, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/log.py", line 69, in callWithContext
>>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 118, in callWithContext
>>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/python/context.py", line 81, in callWithContext
>>>     return func(*args,**kw)
>>> --- <exception caught here> ---
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
>>>     why = selectable.doRead()
>>>   File "/home/oberstet/python273/lib/python2.7/site-packages/twisted/internet/unix.py", line 169, in doRead
>>>     fd = struct.unpack('i', ancillary[0][2])[0]
>>> struct.error: unpack requires a string argument of length 4
>>>
>>> This is on Twisted 12.1
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Jul  3 15:53:28 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 3 Jul 2012 14:53:28 -0700
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
Message-ID: <6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>


On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!

Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)

> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?

This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.

Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120703/e6647265/attachment.html>

From mobilebackup77 at gmail.com  Tue Jul  3 15:54:18 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 3 Jul 2012 17:54:18 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
Message-ID: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>

Hi All,

I have a flask application that I am running on a https twisted
webserver and forwarding the port to a url. Everything works well. I
can goto the url using firefox, accept the certificate and get in.

I have a small nose test to test if the url is up. Here is the test:

    @deferred(timeout = 31)
    @defer.inlineCallbacks
    def test_if_forwarding_url_is_ready(self):
        """
            furl: Check if url is accessible
        """
        # First wait for 10 seconds
        yield task.deferLater(reactor, 10, lambda:None)
        delay = 2
        secureurl = Config.General.url
        # Every two seconds do a query and find out if you can get
        # data from the mapped url. If you can, then exit
        for i in range(15):
            got_data = False
            print "Trial :", i
            try:
                output = yield getPage(secureurl)
                got_data = True
            except Exception as E:
                print "Exception occurred:", E
                got_data = False
            if got_data == True:
                assert "secure magic" in output
                return
            yield task.deferLater(reactor, delay, lambda:None)
        # All 15 trials to get data from the url failed
        assert False

When the test is run, it fails "most of the time" and outputs:

Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake failure')]

But if I run the test and right away goto the secureurl manually using
firefox or chrome, as soon as I am on the webpage, the test passes!
Sometimes I've seen the test will pass after 8 trials, if that is when
I can type the url in firefox and press enter!

Any ideas what is causing this and how to fix it? Maybe I am doing
something stupid and perhaps someone can help me rewrite this code.

Thanks,
--Ram



From _ at lvh.cc  Wed Jul  4 01:39:43 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 4 Jul 2012 09:39:43 +0200
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
	<6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
Message-ID: <FFB735D4-BF2F-4FB9-BC82-DDE7AADFE848@lvh.cc>

On 03 Jul 2012, at 23:53, Glyph wrote:

> 
> On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> 
>> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!
> 
> Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)

I haven't seen that class, I'll take a look.

I didn't want to go through fred again because I don't see the benefit. I'm not trying to do any authentication (that part's already done), admins don't know the relevant password, so it'd pretty much be IRealm.requestAvatar. I don't understand why portal, credentials checkers... come into play.

>> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?
> 
> This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.

So what would this custom Argument be? Right now I take the user id of the user I'm trying to be.

> Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,

Afraid not :( That's okay, I have different tests to go fix :)

> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Wed Jul  4 02:50:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jul 2012 01:50:53 -0700
Subject: [Twisted-Python] Assigning AMP box senders & receivers from the
	responder
In-Reply-To: <A770A729-2B1B-40AC-9BAE-79C62E16A4CF@twistedmatrix.com>
References: <E971312A-D758-4EF4-9521-A5AA4DCDCA42@lvh.cc>
	<6B96421D-E0E5-424A-BF3B-0B1EDC68FA26@twistedmatrix.com>
	<FFB735D4-BF2F-4FB9-BC82-DDE7AADFE848@lvh.cc>
	<A770A729-2B1B-40AC-9BAE-79C62E16A4CF@twistedmatrix.com>
Message-ID: <FDC41D82-7392-4766-A2DC-B762B086EA1E@twistedmatrix.com>


Le Jul 4, 2012 à 12:39 AM, Laurens Van Houtven <_ at lvh.cc> a écrit :

> On 03 Jul 2012, at 23:53, Glyph wrote:
> 
>> 
>> On Jul 3, 2012, at 12:08 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>> 
>>> I'm trying to implement a command called "Become" that allows a staff member to work as if he was the user himself. The most obvious way (to me at least) to do that  to create the customer API (an IBoxReceiver/amp.BoxDispatcher subclass) for that customer (that'd normally be the Realm's job -- but since we're already logged in as an administrator, we don't go through Cred again), and hook up the current connection with that box receiver. Yay, code reuse!
>> 
>> Why not just go through cred again?  (If you look for 'Preauthenticated' in the Divmod code base you'll find that this is actually something of a design pattern.)
> 
> I haven't seen that class, I'll take a look.
> 
> I didn't want to go through fred again because I don't see the benefit. I'm not trying to do any authentication (that part's already done), admins don't know the relevant password, so it'd pretty much be IRealm.requestAvatar. I don't understand why portal, credentials checkers... come into play.

Uh, hrm.  Well, hypothetically the checker might have some extra knowledge about how to map a publicly visible user name into an avatar ID; avatar IDs aren't necessarily user names and in fact in the future I hope we can make them a bit more opaque.

In many cases you're right though, it is the same.  Really, this should just be a basic facility of cred so that protocols which need to communicate between authenticated users (SMTP, SIP, IRC, XMPP) can look up the relevant avatars without even having to think about what the right way to do it is :).

>>> I don't see an obvious way to get a reference to the boxReceiver/boxSender from the responder method using documented APIs. Does this just mean I have to leak a reference to them all the way down? Am I doing something stupid?
>> 
>> This is why the lowest level of argument parsing is fromString*Proto* rather than just fromString.  You can write an Argument that doesn't actually look at the box and gives you any necessary properties from the protocol (or from the transport).  It was originally written so you can ask for the host and peer addresses for P2P stuff, but this is another possible use.
> 
> So what would this custom Argument be? Right now I take the user id of the user I'm trying to be.

OK, I was definitely missing a couple of steps here.

The custom Argument, in fromBox, can get a value from the CommandLocator, which is the 'protocol' in this case, because it's the CommandLocator which does the (de-)serialization.  So it's not quite enough to just use that API.  The docs here could stand to be improved - they say that this argument is an L{AMP} which is obviously wrong in your case.

Basically you need to give your ComposedLocator knowledge of its BoxSender, which it needs to propagate to its component locators, so that you can ask for it later from the Argument.  Given that I can see you might not want to mess with __init__, you can make this a separate method.  (If you want to really continue in the spirit of AMP's component separation, make ComposedLocator be an IBoxReceiver as well - in fact, BoxDispatcher does what you want, so you can inherit from (or compose!) it; you automatically get a boxSender attribute, which will just so happen to point to the AMP instance whose boxReceiver you want to change.

So, now your ComposedLocator has a boxSender, you can propagate it that value to its components as a public attribute and they can just mess with it on 'self'.  But that's no fun, because now everybody in the whole system can just violate these layers whenever they want (although that is kind of what you want to do).

So, what I was originally suggesting is that you can make everyone who wants to mess with the transport explicitly declare their intentions with a special argument type (as I originally suggested) by propagating it as a private attribute which ComposedLocator's layer of the code knows about.  So, like this:

class ComposedLocator(object):
    def startReceivingBoxes(self, boxSender):
        for locator in self._locators:
            locator._secretlyYouKnowAboutAMP = boxSender
        return super(ComposedLocator, self).startReceivingBoxes(boxSender)
class ShowMeTheProtocol(Argument):
    def fromBox(self, name, strings, objects, componentLocator):
        objects[name] = componentLocator._secretlyYouKnowAboutAMP
class Become(Command):
    arguments = [('boxSender', ShowMeTheProtocol())]

Clear yet? :)

>> Sorry I don't have time to be more expansive at the moment, I hope that's enough to get you un-stuck,
> 
> Afraid not :( That's okay, I have different tests to go fix :)

Don't we all.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120704/a1e2542b/attachment.html>

From exarkun at twistedmatrix.com  Wed Jul  4 04:51:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Jul 2012 10:51:33 -0000
Subject: [Twisted-Python] ANN: Twisted DBus 1.0
In-Reply-To: <CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>
References: <CAFKh6jAbNstcqYtoMdxsN68FhVfrkHbGNTA3dAcJmzc6TSiP5Q@mail.gmail.com>
	<CAFKh6jDvWhUQot9181JLKT=8KSEcMMv6Z3kHmH9ZmhtE5TUsYg@mail.gmail.com>
	<CAPkRfUT_wCZOB1FTqLJFEAb1ChiUPydJtCgUB6nRAnRMeU-jrA@mail.gmail.com>
	<CAFKh6jBHu2iKK3yw3gv5aqxH1epneA6AjCjCg13TCd-MiaS3Ew@mail.gmail.com>
Message-ID: <20120704105133.4071.1410102550.divmod.xquotient.3@localhost6.localdomain6>

On 3 Jul, 05:56 pm, tom.cocagne at gmail.com wrote:
>Not sure how I overlooked that.

Probably too busy watching out for all the other pitfalls involved in 
packaging Python software. ;)

Thanks for being so responsive on these points!  And congrats on your 
release. :)

Jean-Paul
>Done.
>
>Tom
>
>On Tue, Jul 3, 2012 at 10:53 AM, Christopher Armstrong
><radix at twistedmatrix.com> wrote:
>>On Tue, Jul 3, 2012 at 9:08 AM, Tom Cocagne <tom.cocagne at gmail.com> 
>>wrote:
>>>Glyph was kind enough to point out offline that I screwed up the
>>>project name during my midnight cleanup and release process. The name
>>>was intended to be "Tx Dbus" rather than "Twisted DBus". The previous
>>>project links have been removed and replaced with their corrected
>>>counterparts:
>>>
>>>  https://github.com/cocagne/txdbus
>>>
>>>  http://pypi.python.org/pypi/txdbus/1.0
>>
>>You probably shouldn't actually put it in a "tx" python package. It'll
>>cause conflicts with anyone else who makes the same mistake. Just name
>>the toplevel package "txdbus" or something.
>>
>>--
>>Christopher Armstrong
>>http://radix.twistedmatrix.com/
>>http://planet-if.com/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Wed Jul  4 05:09:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 04 Jul 2012 11:09:45 -0000
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
 Exception)
In-Reply-To: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
Message-ID: <20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>

On 3 Jul, 09:54 pm, mobilebackup77 at gmail.com wrote:
>Hi All,
>
>I have a flask application that I am running on a https twisted
>webserver and forwarding the port to a url. Everything works well. I
>can goto the url using firefox, accept the certificate and get in.
>
>I have a small nose test to test if the url is up. Here is the test:
>
>    @deferred(timeout = 31)
>    @defer.inlineCallbacks
>    def test_if_forwarding_url_is_ready(self):
>        """
>            furl: Check if url is accessible
>        """
>        # First wait for 10 seconds
>        yield task.deferLater(reactor, 10, lambda:None)
>        delay = 2
>        secureurl = Config.General.url
>        # Every two seconds do a query and find out if you can get
>        # data from the mapped url. If you can, then exit
>        for i in range(15):
>            got_data = False
>            print "Trial :", i
>            try:
>                output = yield getPage(secureurl)
>                got_data = True
>            except Exception as E:
>                print "Exception occurred:", E
>                got_data = False
>            if got_data == True:
>                assert "secure magic" in output
>                return
>            yield task.deferLater(reactor, delay, lambda:None)
>        # All 15 trials to get data from the url failed
>        assert False
>
>When the test is run, it fails "most of the time" and outputs:
>
>Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake 
>failure')]
>
>But if I run the test and right away goto the secureurl manually using
>firefox or chrome, as soon as I am on the webpage, the test passes!
>Sometimes I've seen the test will pass after 8 trials, if that is when
>I can type the url in firefox and press enter!
>
>Any ideas what is causing this and how to fix it? Maybe I am doing
>something stupid and perhaps someone can help me rewrite this code.

nose used to support Twisted with some gross, arguably incorrect code. 
I don't know if this is still the case, but it's perhaps something to 
investigate.

Apart from that, getPage uses Twisted's regular ("standard"?  "only"?) 
SSL support to do HTTPS.  There *shouldn't* be anything particular to 
getPage that would cause the handshake to fail, so either Twisted's SSL 
support is broken in general in whatever configuration you're using, or 
the problem isn't in Twisted.

Jean-Paul



From tobias.oberstein at tavendo.de  Wed Jul  4 05:50:24 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 4 Jul 2012 04:50:24 -0700
Subject: [Twisted-Python] ANN: Twisted DBus 1.0 => WebSocket/WAMP Bridge
Message-ID: <634914A010D0B943A035D226786325D433793A5F0D@EXVMBX020-12.exch020.serverdata.net>

Hi Tom,

Great!

I have created a quick example that bridges WebSocket/WAMP and Dbus

https://github.com/tavendo/AutobahnPython/tree/master/examples/wamp/dbus

This allows to trigger desktop notifications on one or multiple machines
from a browser based UI running anywhere via a WebSocket/WAMP PubSub
message broker in between.

Cheers,
Tobias


Mit freundlichen Grüssen,

Tobias Oberstein
Geschäftsführer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
skype: tobias.oberstein




Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
+49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer Tobias Oberstein


> -----Ursprüngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von Tom Cocagne
> Gesendet: Dienstag, 3. Juli 2012 22:37
> An: Twisted general discussion
> Betreff: Re: [Twisted-Python] ANN: Twisted DBus 1.0
> 
> Nevermind. Simply removing the explicit credential passing from the client side
> of the implementation fixed the problem. txdbus 1.0.2 appears to run just fine
> on 12.1.
> 
> Tom
> 
> On Tue, Jul 3, 2012 at 10:14 AM, Tom Cocagne <tom.cocagne at gmail.com>
> wrote:
> > Unfortunately, it looks like 12.1 may be completely incompatible with
> > txdbus. The ancillary data support for Unix sockets appears to support
> > only file descriptor passing and breaks when credential passing is
> > attempted. The current implementation assumes and fails to check for
> > ancillary data sizes other than 4 (credentials are of length 12). I
> > believe it will be a relatively straight-forward task to add
> > credential passing support similar to how file descriptor passing is
> > done but it'll probably have to wait until the next Twisted release. A
> > straight-forward work-around eludes me.
> >
> > Tom
> >
> >
> > On Tue, Jul 3, 2012 at 8:16 AM, Tom Cocagne <tom.cocagne at gmail.com>
> wrote:
> >> I believe credential passing over Unix sockets is a new feature in
> >> Twisted 12.1. The older versions I used to develop this project
> >> didn't support that feature so I had to implement it myself. From the
> >> stacktrace, I'm guessing that my workaround for this is clashing with
> >> Twisted's new build-in support. I'll try and take a look at this in
> >> the near future.
> >>
> >> Tom
> >>
> >> On Tue, Jul 3, 2012 at 5:27 AM, Tobias Oberstein
> >> <tobias.oberstein at tavendo.de> wrote:
> >>>> For anyone interested in taking a look, I've just released a
> >>>> native-Python implementation of the DBus protocol for Twisted. The
> >>>> intent of the implementation is to provide Twisted applications
> >>>> with a full-featured DBus API that is consistent with the rest of
> >>>> the framework and does not require the use of the glib reactor or libdbus
> Python bindings.
> >>>
> >>> Cool! Also great work on the examples, tutorial and protocol overview!
> >>>
> >>> I'm having problems with the desktop notification example though .. any
> hints?
> >>>
> >>>
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> ~/python273/bin/python -V Python 2.7.3
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> uname -a Linux ubuntu10bld_klon0 2.6.32-41-generic #91-Ubuntu SMP
> >>> Wed Jun 13 11:44:43 UTC 2012 i686 GNU/Linux
> >>> oberstet at ubuntu10bld_klon0:~/scm/twisted_dbus/doc/tutorial_examples$
> >>> ~/python273/bin/python desktop_noficiation Unhandled Error Traceback
> (most recent call last):
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/log.py", line 84, in callWithLogger
> >>>     return callWithContext({"system": lp}, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/log.py", line 69, in callWithContext
> >>>     return context.call({ILogContext: newCtx}, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/context.py", line 118, in callWithContext
> >>>     return self.currentContext().callWithContext(ctx, func, *args, **kw)
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/python/context.py", line 81, in callWithContext
> >>>     return func(*args,**kw)
> >>> --- <exception caught here> ---
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/internet/posixbase.py", line 614, in _doReadOrWrite
> >>>     why = selectable.doRead()
> >>>   File "/home/oberstet/python273/lib/python2.7/site-
> packages/twisted/internet/unix.py", line 169, in doRead
> >>>     fd = struct.unpack('i', ancillary[0][2])[0]
> >>> struct.error: unpack requires a string argument of length 4
> >>>
> >>> This is on Twisted 12.1
> >>>
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mobilebackup77 at gmail.com  Wed Jul  4 14:19:06 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Wed, 4 Jul 2012 16:19:06 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
Message-ID: <CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>

Thanks for the quick reply Jean-Paul. I just removed nose from the
equation. And now, only firefox or chrome can actually get to the
webpages/Twisted webserver, but getPage keeps printing that exception.
It seems I've reduced the problem to getPage. I ran a separate thread
and used urlopen, and even that can actually get the https webpage
hosted on the twisted server. It seems getPage's https support/tests
need to be extended perhaps? (I wish I could help find the bug). I
know I need to isolate the bug from my project into a simple example
that can illustrate the bug. Unfortunately, I'm not sure I've the time
to do that right now.


On Wed, Jul 4, 2012 at 7:09 AM,  <exarkun at twistedmatrix.com> wrote:
> On 3 Jul, 09:54 pm, mobilebackup77 at gmail.com wrote:
>>Hi All,
>>
>>I have a flask application that I am running on a https twisted
>>webserver and forwarding the port to a url. Everything works well. I
>>can goto the url using firefox, accept the certificate and get in.
>>
>>I have a small nose test to test if the url is up. Here is the test:
>>
>>    @deferred(timeout = 31)
>>    @defer.inlineCallbacks
>>    def test_if_forwarding_url_is_ready(self):
>>        """
>>            furl: Check if url is accessible
>>        """
>>        # First wait for 10 seconds
>>        yield task.deferLater(reactor, 10, lambda:None)
>>        delay = 2
>>        secureurl = Config.General.url
>>        # Every two seconds do a query and find out if you can get
>>        # data from the mapped url. If you can, then exit
>>        for i in range(15):
>>            got_data = False
>>            print "Trial :", i
>>            try:
>>                output = yield getPage(secureurl)
>>                got_data = True
>>            except Exception as E:
>>                print "Exception occurred:", E
>>                got_data = False
>>            if got_data == True:
>>                assert "secure magic" in output
>>                return
>>            yield task.deferLater(reactor, delay, lambda:None)
>>        # All 15 trials to get data from the url failed
>>        assert False
>>
>>When the test is run, it fails "most of the time" and outputs:
>>
>>Exception occurred: [('SSL routines', 'SSL23_READ', 'ssl handshake
>>failure')]
>>
>>But if I run the test and right away goto the secureurl manually using
>>firefox or chrome, as soon as I am on the webpage, the test passes!
>>Sometimes I've seen the test will pass after 8 trials, if that is when
>>I can type the url in firefox and press enter!
>>
>>Any ideas what is causing this and how to fix it? Maybe I am doing
>>something stupid and perhaps someone can help me rewrite this code.
>
> nose used to support Twisted with some gross, arguably incorrect code.
> I don't know if this is still the case, but it's perhaps something to
> investigate.
>
> Apart from that, getPage uses Twisted's regular ("standard"?  "only"?)
> SSL support to do HTTPS.  There *shouldn't* be anything particular to
> getPage that would cause the handshake to fail, so either Twisted's SSL
> support is broken in general in whatever configuration you're using, or
> the problem isn't in Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Wed Jul  4 15:43:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jul 2012 14:43:33 -0700
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
Message-ID: <464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>


Le Jul 4, 2012 à 1:19 PM, Me Myself <mobilebackup77 at gmail.com> a écrit :

> I know I need to isolate the bug from my project into a simple example
> that can illustrate the bug. Unfortunately, I'm not sure I've the time
> to do that right now.

It's OK, any time you have the time to do it, we will be ready to handle the bug :).  Please just put it on a to-do list or something so that you don't forget.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120704/ad9ea250/attachment-0001.html>

From penxiao at cisco.com  Wed Jul  4 21:51:35 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Thu, 5 Jul 2012 03:51:35 +0000
Subject: [Twisted-Python] How to get the  socket error when NIC is down
Message-ID: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>


Hi experts,

I wrote a TCP program using twisted, and the TCP socket bind the local IP address, the code can reconnect TCP connection when TCP is disconnected.
But the program will be exit without any error when the local NIC is down.
I want to know how can I capture the exception when the local NIC is down?

Thanks a lot.


Best
Regards,

Xiao Peng(肖鹏)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120705/7089dece/attachment.html>

From justin.venus at gmail.com  Wed Jul  4 22:35:27 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Wed, 4 Jul 2012 23:35:27 -0500
Subject: [Twisted-Python] How to get the socket error when NIC is down
In-Reply-To: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>
References: <5A34F4AC18539E47A797E3916C0E55B1017E83@xmb-rcd-x10.cisco.com>
Message-ID: <CACL=7atTd0M-9YFWD2vHMkSPSyLYUTe-06ajgcuuczDvgLqnYA@mail.gmail.com>

Can you share the code so we can see the problem for ourselves?

Justin Venus
On Jul 4, 2012 10:54 PM, "Peng Xiao -X (penxiao - Digital China at Cisco)" <
penxiao at cisco.com> wrote:

>  ** **
>
> Hi experts,****
>
> ** **
>
> I wrote a TCP program using twisted, and the TCP socket bind the local IP
> address, the code can reconnect TCP connection when TCP is disconnected.**
> **
>
> But the program will be exit without any error when the local NIC is down.
> ****
>
> I want to know how can I capture the exception when the local NIC is down?
> ****
>
> ** **
>
> Thanks a lot.****
>
> ** **
>
> ** **
>
> Best****
>
> Regards,****
>
>  ****
>
> Xiao Peng(肖鹏)****
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120704/16b47343/attachment.html>

From _ at lvh.cc  Fri Jul  6 02:47:13 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 10:47:13 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
Message-ID: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>

Hi,

I have some code that takes file uploads from browsers. I'm trying to write a test for it, so now I need to get Twisted to do file uploads like browsers do. I think my code (not test code) essentially works, by manually trying it with a browser. I can't get the functional test part to work.

I have reduced the problem to what I think is a SSCCE. render_POST drops into a debugger to easily inspect the received request.

Here's the code: https://gist.github.com/3058974

When debugging this with wireshark I found an obvious culprit: there's some random junk in front of it (3 ASCII hex digits and a CRLF) and some junk at the end (CRLF and an ASCII "0", although I'm not sure if that CRLF is junk). Wireshark reports some broken TCP packets (PCAP attached). I have no idea why that happens. Packets were captured with:

    tcpdump -i lo0 -nn -s0 -w sample.pcap port 8080

and analyzed with a recent version of Wireshark (1.6.2, SVN rev 38931). The analyzed TCP stream is also attached.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tcpdata.txt
URL: </pipermail/twisted-python/attachments/20120706/e6354a10/attachment-0002.txt>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pcap
Type: application/octet-stream
Size: 1479 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120706/e6354a10/attachment-0002.obj>
-------------- next part --------------


If I look at the request in the debugger (request_POST *DOES* get called…):

 - it has an empty request.args, instead of having the expected keys "a", "b", "f"
 - request.content.getvalue() has the data you see in tcpdata.txt: it starts with "'1e7\r\n------------" even though I obviously would like it to start with just the dashes

cheers
lvh




From _ at lvh.cc  Fri Jul  6 03:32:19 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 11:32:19 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <1B7D8773-7689-4F2B-A476-44FECE67F1C2@lvh.cc>

As an extra reference, see the behavior Firefox has when approaching the sample server (with some value for the sample field and the Axiom README as the file):

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ff-behavior.pcap
Type: application/octet-stream
Size: 3769 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120706/8373a110/attachment-0002.obj>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ff-behavior.txt
URL: </pipermail/twisted-python/attachments/20120706/8373a110/attachment-0002.txt>
-------------- next part --------------

cheers
lvh



On 06 Jul 2012, at 10:47, Laurens Van Houtven wrote:

> Hi,
> 
> I have some code that takes file uploads from browsers. I'm trying to write a test for it, so now I need to get Twisted to do file uploads like browsers do. I think my code (not test code) essentially works, by manually trying it with a browser. I can't get the functional test part to work.
> 
> I have reduced the problem to what I think is a SSCCE. render_POST drops into a debugger to easily inspect the received request.
> 
> Here's the code: https://gist.github.com/3058974
> 
> When debugging this with wireshark I found an obvious culprit: there's some random junk in front of it (3 ASCII hex digits and a CRLF) and some junk at the end (CRLF and an ASCII "0", although I'm not sure if that CRLF is junk). Wireshark reports some broken TCP packets (PCAP attached). I have no idea why that happens. Packets were captured with:
> 
>    tcpdump -i lo0 -nn -s0 -w sample.pcap port 8080
> 
> and analyzed with a recent version of Wireshark (1.6.2, SVN rev 38931). The analyzed TCP stream is also attached.
> 
> <tcpdata.txt><test.pcap>
> 
> If I look at the request in the debugger (request_POST *DOES* get called…):
> 
> - it has an empty request.args, instead of having the expected keys "a", "b", "f"
> - request.content.getvalue() has the data you see in tcpdata.txt: it starts with "'1e7\r\n------------" even though I obviously would like it to start with just the dashes
> 
> cheers
> lvh
> 
> 
> 


From p.mayers at imperial.ac.uk  Fri Jul  6 03:39:31 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 10:39:31 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <972aa876-4926-4587-843e-80efb247d47c@email.android.com>


>some random junk in front of it (3 ASCII hex digits and a CRLF) and
>some junk at the end (CRLF and an ASCII "0", although I'm not sure if
>that CRLF is junk). Wireshark reports some broken TCP packets (PCAP

The hex/cr-lf is http chunked transfer format.
-- 
Sent from my phone. Please excuse brevity and typos.



From _ at lvh.cc  Fri Jul  6 03:52:07 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 11:52:07 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <972aa876-4926-4587-843e-80efb247d47c@email.android.com>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
Message-ID: <2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>

Aha, okay, so that's that possible culprit off the table. Thanks!

FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?

cheers
lvh



On 06 Jul 2012, at 11:39, Phil Mayers wrote:

> 
>> some random junk in front of it (3 ASCII hex digits and a CRLF) and
>> some junk at the end (CRLF and an ASCII "0", although I'm not sure if
>> that CRLF is junk). Wireshark reports some broken TCP packets (PCAP
> 
> The hex/cr-lf is http chunked transfer format.
> -- 
> Sent from my phone. Please excuse brevity and typos.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From _ at lvh.cc  Fri Jul  6 04:08:36 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 12:08:36 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <3B814A92-5FED-45C5-A6AA-B77314E25899@lvh.cc>

Attached is an updated version of the client and server, including a 1x1 white JPEG pixel (that Paintbrush decides to make an entire 2.6kB, mostly due to i18n…).

This way you can actually make semantically identical requests using both your browser (don't change the input fields other than the file field) and the client.

TIA,
lvh

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Archive.zip
Type: application/zip
Size: 3903 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120706/6d67fe6c/attachment-0002.zip>
-------------- next part --------------
 

From p.mayers at imperial.ac.uk  Fri Jul  6 04:52:29 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 11:52:29 +0100
Subject: [Twisted-Python] Absent List-Id header? (was: Doing HTTP file
	uploads)
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <4FF6C36D.5010206@imperial.ac.uk>

On 06/07/12 09:47, Laurens Van Houtven wrote:
> Hi,
>
> I have some code that takes file uploads from browsers. I'm trying to

Out of curiosity, I'm seeing no "List-Id" header in the posts that lvh 
makes; is anyone else seeing this?

The other mailman headers are there, but no List-Id.

I occasionally see this on other mailman lists, and don't know why it 
happens.



From p.mayers at imperial.ac.uk  Fri Jul  6 05:42:13 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 12:42:13 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
Message-ID: <4FF6CF15.7080106@imperial.ac.uk>

On 06/07/12 10:52, Laurens Van Houtven wrote:
> Aha, okay, so that's that possible culprit off the table. Thanks!
>
> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?

Good question. Unfortunately the Trac implementation is running slowly 
so I can't browse the HEAD code, but in my local copy I don't see any 
sign of chunked encoding handling in the client->server direction i.e. 
for request body.

So, I think not.

I'm not even sure chunked encoding is *legal* in HTTP request bodies; 
which client is generating this format?



From itamar at itamarst.org  Fri Jul  6 07:05:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 06 Jul 2012 09:05:26 -0400
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <4FF6CF15.7080106@imperial.ac.uk>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
	<4FF6CF15.7080106@imperial.ac.uk>
Message-ID: <4FF6E296.4040209@itamarst.org>

On 07/06/2012 07:42 AM, Phil Mayers wrote:
> On 06/07/12 10:52, Laurens Van Houtven wrote:
>> Aha, okay, so that's that possible culprit off the table. Thanks!
>>
>> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?
> Good question. Unfortunately the Trac implementation is running slowly
> so I can't browse the HEAD code, but in my local copy I don't see any
> sign of chunked encoding handling in the client->server direction i.e.
> for request body.

The server definitely supports chunked encoding; see 
twisted/web/http.py:1585.
> I'm not even sure chunked encoding is *legal* in HTTP request bodies;
> which client is generating this format?
>
It is legal: "All HTTP/1.1 applications MUST be able to receive and 
decode the "chunked" transfer-coding, and MUST ignore chunk-extension 
extensions they do not understand."



From p.mayers at imperial.ac.uk  Fri Jul  6 07:44:16 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 14:44:16 +0100
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
In-Reply-To: <4FF6E296.4040209@itamarst.org>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<972aa876-4926-4587-843e-80efb247d47c@email.android.com>
	<2CDB1A03-6D34-4F32-922A-ECF9F4CE5AFD@lvh.cc>
	<4FF6CF15.7080106@imperial.ac.uk> <4FF6E296.4040209@itamarst.org>
Message-ID: <4FF6EBB0.3060709@imperial.ac.uk>

On 06/07/12 14:05, Itamar Turner-Trauring wrote:
> On 07/06/2012 07:42 AM, Phil Mayers wrote:
>> On 06/07/12 10:52, Laurens Van Houtven wrote:
>>> Aha, okay, so that's that possible culprit off the table. Thanks!
>>>
>>> FWIW: Chunked transfer encoding *should* work with twisted.web.server, right?
>> Good question. Unfortunately the Trac implementation is running slowly
>> so I can't browse the HEAD code, but in my local copy I don't see any
>> sign of chunked encoding handling in the client->server direction i.e.
>> for request body.
>
> The server definitely supports chunked encoding; see
> twisted/web/http.py:1585.

Ah, didn't spot that.




From _ at lvh.cc  Fri Jul  6 08:26:52 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 6 Jul 2012 16:26:52 +0200
Subject: [Twisted-Python] Absent List-Id header? (was: Doing HTTP file
	uploads)
In-Reply-To: <4FF6C36D.5010206@imperial.ac.uk>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
Message-ID: <CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>

Sorry, I hope this isn't causing you any issues!

FWIW my client is Mail.app on a fully updated Lion machine.

cheers
lvh

On Fri, Jul 6, 2012 at 12:52 PM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 06/07/12 09:47, Laurens Van Houtven wrote:
> > Hi,
> >
> > I have some code that takes file uploads from browsers. I'm trying to
>
> Out of curiosity, I'm seeing no "List-Id" header in the posts that lvh
> makes; is anyone else seeing this?
>
> The other mailman headers are there, but no List-Id.
>
> I occasionally see this on other mailman lists, and don't know why it
> happens.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120706/ee1524da/attachment-0001.html>

From p.mayers at imperial.ac.uk  Fri Jul  6 10:04:46 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 06 Jul 2012 17:04:46 +0100
Subject: [Twisted-Python] Absent List-Id header?
In-Reply-To: <CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
Message-ID: <4FF70C9E.2080007@imperial.ac.uk>

On 06/07/12 15:26, Laurens Van Houtven wrote:
> Sorry, I hope this isn't causing you any issues!

No biggie.

I *think* it must be messages with attachments; only your first two had 
that issue, the rest of the thread has List-Id.

It's probably mailman being dumb.



From cyli at twistedmatrix.com  Fri Jul  6 10:44:21 2012
From: cyli at twistedmatrix.com (Ying Li)
Date: Fri, 6 Jul 2012 09:44:21 -0700
Subject: [Twisted-Python] Twisted sprint and tutorial in San Francisco
Message-ID: <CA+Q0aKGanUPA1TTmDXbC7wB+utc-r5thwAq5+C+6RQgLiEPTNA@mail.gmail.com>

Hi all!

There will be a Twisted tutorial/learning session in San Francisco on
Friday, July 13th, at 7pm.  Glyph will be giving the tutorial, and
several developers will be on hand to help.

There will be a Twisted sprint the next day, Saturday July 14th, from
10am to 9pm (or later, if folks want to stay later!) - come whenever
and for however long you like.  Hack on Twisted or a Twisted-related
project, learn more about how to use Twisted, or just hang out.

Both events are hosted at Rackspace, which is located at 620 Folsom
St, Suite 100, San Francisco 94107.  (between 2nd St and Howard, or
2nd and 3rd if you prefer).

Please RSVP at:
http://www.meetup.com/San-Francisco-Twisted-Python-Meetup   (so we
know how much food and drink to get!)

Thanks!
-Ying



From barry at python.org  Fri Jul  6 13:16:35 2012
From: barry at python.org (Barry Warsaw)
Date: Fri, 6 Jul 2012 15:16:35 -0400
Subject: [Twisted-Python] Absent List-Id header?
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
	<4FF70C9E.2080007@imperial.ac.uk>
Message-ID: <20120706151635.5a84871d@resist.wooz.org>

On Jul 06, 2012, at 05:04 PM, Phil Mayers wrote:

>On 06/07/12 15:26, Laurens Van Houtven wrote:
>> Sorry, I hope this isn't causing you any issues!
>
>No biggie.
>
>I *think* it must be messages with attachments; only your first two had 
>that issue, the rest of the thread has List-Id.
>
>It's probably mailman being dumb.

Inconceivable!  <vizzini wink>

Reading the list via gmane, and looking at lvh's Message-IDs

<32FC267C-F4F6-4FBB-B553-15812751A7E2 at lvh.cc>
<3B814A92-5FED-45C5-A6AA-B77314E25899 at lvh.cc>

both of which contain attachments, I see the expected List-IDs.

-Barry
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120706/487b9940/attachment.sig>

From hrqiang at gmail.com  Fri Jul  6 13:49:44 2012
From: hrqiang at gmail.com (RuiQiang Huang)
Date: Fri, 6 Jul 2012 12:49:44 -0700
Subject: [Twisted-Python] SIP protocol Via header doesn't compatible with
	SIP RFC3261.
Message-ID: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>

Via header is different between RFC2543 and RFC3261.
Based on RFC3261, Via header BNF is

    Via               =  ( "Via" / "v" ) HCOLON via-parm *(COMMA via-parm)
via-parm          =  sent-protocol LWS sent-by *( SEMI via-params )
via-params        =  via-ttl / via-maddr
                     / via-received / via-branch
                     / via-extension
via-ttl           =  "ttl" EQUAL ttl
via-maddr         =  "maddr" EQUAL host
via-received      =  "received" EQUAL (IPv4address / IPv6address)
via-branch        =  "branch" EQUAL token
via-extension     =  generic-param

That means parseViaHeader should return a tuple, instead of single via object.
Top via will be parse first via header and first element in the tuple.
This fix is required because if message coming from Via, and it inject
Via header like this
Via: SIP/2.0/UDP
192.84.13.26:5060;branch=z9hG4bK5af66076b7a656376f671478bb7a4b3f,SIP/2.0/UDP
192.168.1.145;branch=z9hG4bKfbbb8cf0FF120663;received=192.84.17.215;rport=13582
current SIP stack cannot send the response to 192.84.13.26:5060.
Instead, it sends to 192.84.13.26:13582 that never get to the other side.
So I fixed this to have my SIP program working with proxy.
I have a patch for this. Please let me know how to submit to SVN.

Thanks.



From glyph at twistedmatrix.com  Fri Jul  6 15:39:10 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 6 Jul 2012 14:39:10 -0700
Subject: [Twisted-Python] SIP protocol Via header doesn't compatible
	with SIP RFC3261.
In-Reply-To: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>
References: <CANN-RPQtofUKNczbjBeQdDSDJHY0pTzHk9Z45aZ6osan2+bv9w@mail.gmail.com>
Message-ID: <B5AE1D57-3803-4D79-B43C-75338CE63F5E@twistedmatrix.com>


On Jul 6, 2012, at 12:49 PM, RuiQiang Huang <hrqiang at gmail.com> wrote:

> I have a patch for this. Please let me know how to submit to SVN.

Search for tickets at <http://twistedmatrix.com/trac/search?q=&noquickjump=1&ticket=on>; if you can't find one, file a new one at <http://twistedmatrix.com/trac/newticket> and attach your patch.

<http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode> has all the relevant links to get you started.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120706/d983ea51/attachment.html>

From tobias.oberstein at tavendo.de  Sat Jul  7 03:43:15 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 7 Jul 2012 02:43:15 -0700
Subject: [Twisted-Python] twisted.web.static.File and MIME types
Message-ID: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>

Hi,

I need to add MIME types to twisted.web.static.File.

The following works, but seems to use internal stuff .. whats the "correct" way to do?


from twisted.web.static import File

webdir = File(".")
webdir.contentTypes['.crt'] = 'application/x-x509-ca-cert'


http://twistedmatrix.com/documents/12.1.0/api/twisted.web.static.File.html


Cheers,
Tobias




From p.mayers at imperial.ac.uk  Sat Jul  7 04:35:29 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 07 Jul 2012 11:35:29 +0100
Subject: [Twisted-Python] Absent List-Id header?
In-Reply-To: <20120706151635.5a84871d@resist.wooz.org>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<4FF6C36D.5010206@imperial.ac.uk>
	<CAE_Hg6b4rPZ9fCm5O+xg0t8zhw9tvSw4VjNdVOsydHO+=s9=ow@mail.gmail.com>
	<4FF70C9E.2080007@imperial.ac.uk>
	<20120706151635.5a84871d@resist.wooz.org>
Message-ID: <85911fed-2a04-46cd-92e7-b00b7431ce62@email.android.com>


>Reading the list via gmane, and looking at lvh's Message-IDs
>
><32FC267C-F4F6-4FBB-B553-15812751A7E2 at lvh.cc>
><3B814A92-5FED-45C5-A6AA-B77314E25899 at lvh.cc>
>
>both of which contain attachments, I see the expected List-IDs.
>

Weird. Maybe it is at my end; I wonder if our exim config or spam filter is selectively mangling...
-- 
Sent from my phone. Please excuse brevity and typos.



From _ at lvh.cc  Sat Jul  7 05:32:44 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 13:32:44 +0200
Subject: [Twisted-Python] twisted.web.static.File and MIME types
In-Reply-To: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>

I'm pretty sure that's how you do it. No _, so it's public :)

Yes, it should be documented -- maybe a ticket is in order?


cheers
lvh



On 07 Jul 2012, at 11:43, Tobias Oberstein wrote:

> Hi,
> 
> I need to add MIME types to twisted.web.static.File.
> 
> The following works, but seems to use internal stuff .. whats the "correct" way to do?
> 
> 
> from twisted.web.static import File
> 
> webdir = File(".")
> webdir.contentTypes['.crt'] = 'application/x-x509-ca-cert'
> 
> 
> http://twistedmatrix.com/documents/12.1.0/api/twisted.web.static.File.html
> 
> 
> Cheers,
> Tobias
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From _ at lvh.cc  Sat Jul  7 07:05:39 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 15:05:39 +0200
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
Message-ID: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>

Hey :)

As some of you probably know Stephen and I did the Twisted Tutorial at EuroPython.

Let me start off by saying that there was a lot of interest. A picture says a thousand words:



(We got upgraded to the bigger room because it was booked entirely and people were apparently still trying to get in -- that makes the Twisted tutorial the only one to be sold out before the conference even began, let alone doing that two years in a row!)

Overall it went pretty well, but given that we had Orestis' slides to build on that was a pretty safe bet :)

For next year, I think Stephen and I agree that a TDD approach to the exercises would be superior, because you'd acquaint people with trial and good software development practice at the same time. Plus, it's a lot clearer than human-langage specification of what an exercise solution should do ;) 

cheers
lvh



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120707/628aab1f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Twisted tutorial.jpg
Type: image/jpg
Size: 32861 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120707/628aab1f/attachment-0002.jpg>

From tobias.oberstein at tavendo.de  Sat Jul  7 08:11:55 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 7 Jul 2012 07:11:55 -0700
Subject: [Twisted-Python] twisted.web.static.File and MIME types
In-Reply-To: <C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>
References: <634914A010D0B943A035D226786325D433794C87E4@EXVMBX020-12.exch020.serverdata.net>
	<C048FA4B-FFBA-4042-862F-6A32CD1FB4E7@lvh.cc>
Message-ID: <634914A010D0B943A035D226786325D433794C87E9@EXVMBX020-12.exch020.serverdata.net>

> I'm pretty sure that's how you do it. No _, so it's public :)
> 
> Yes, it should be documented -- maybe a ticket is in order?

Thanks for looking. Done: http://twistedmatrix.com/trac/ticket/5739

Cheers,
Tobias 



From _ at lvh.cc  Sat Jul  7 08:57:16 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 16:57:16 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
Message-ID: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>

With a lot of help from idnar, the issue is resolved!

There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.

Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)


cheers
lvh




From _ at lvh.cc  Sat Jul  7 12:01:55 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 20:01:55 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
Message-ID: <8AB76D51-F166-44F3-BF19-56B932C318B1@lvh.cc>

Forgot the attachment (as itamar pointed out)



cheers
lvh



On 07 Jul 2012, at 16:57, Laurens Van Houtven wrote:

> With a lot of help from idnar, the issue is resolved!
> 
> There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.
> 
> Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)
> 
> 
> cheers
> lvh
> 




From _ at lvh.cc  Sat Jul  7 12:02:34 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 Jul 2012 20:02:34 +0200
Subject: [Twisted-Python] Doing HTTP file uploads (multipart forms)
	RESOLVED
In-Reply-To: <1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
References: <32FC267C-F4F6-4FBB-B553-15812751A7E2@lvh.cc>
	<1B8B0237-0F3A-4392-B537-ADD152619C80@lvh.cc>
Message-ID: <7C808A8A-118C-445D-BE1A-6FD6D03E1932@lvh.cc>

Forgot the attachment… twice. Yay for new email clients I'm not used to
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client.py
Type: text/x-python-script
Size: 1389 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120707/7dfb9b58/attachment-0002.bin>
-------------- next part --------------




cheers
lvh



On 07 Jul 2012, at 16:57, Laurens Van Houtven wrote:

> With a lot of help from idnar, the issue is resolved!
> 
> There were a few red herrings that ended up cleaning my code a lot, but eventually it ended up boiling down to my MIME generating code simply being busted. Fixed version attached.
> 
> Apparently this also highlighted a minor issue in twisted.web with the wrong header being preferred, but I'll leave that up to the expert :)
> 
> 
> cheers
> lvh
> 


From eric at teratorn.org  Sat Jul  7 19:32:08 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Sat, 7 Jul 2012 21:32:08 -0400
Subject: [Twisted-Python] Deserializing AMP callRemoteString without
 knowing the Command's signature
In-Reply-To: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
References: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
Message-ID: <20120708013208.GC5497@ragnarok.teratorn.org>

On Tue, Jun 26, 2012 at 02:09:59PM -0500, Laurens Van Houtven wrote:
> Hi,
> 
> As some of you may know I am working on a JSON-RPC <-> AMP bridge to
> consume AMP services from browsers. WIP: http://lvh.github.com/amphibian/
> 
> I've hit a failing integration test. I know what the issue is -- I don't
> know how to resolve it.
> 
> I attempted to write the proxy without any knowledge of the remote
> commands.

If my "proxy" you mean in the style of Python's built-in XMLRPC Proxy
class then I think that is the wrong approach for AMP - you have to have
Command signatures available ahead of time for a BINARY protocol.
Guessing just isn't any fun or even useful at all.

Static typing on the wire - yess.

> It assumes that the JSON provided satisfies the remote signature.
> If it doesn't -- that's okay, we'll get a failure back from the AMP server.
> So, I use callRemoteString and manually serialize by typechecking. Although
> that works for sending, the result I get back from callRemoteString is also
> in wire format. Because I don't know the signature, I have no idea if the
> sender meant 4, "4", u"4"...
 
Sure.

> On IRC:
> dreid pointed out that I really shouldn't need a language-specific
> implementation of a class for this to work
> teratorn pointed out that there is a JSON schema ticket for AMP. Perhaps
> there should also be a "DiscoverSchema" command?
 
I've been calling that "Service Discovery" or "Route Discovery" for a while.
And yes, we should have *something* allowing AMP to complete effectively in
the "webservice" space (whatever that is).

The ticket for an AMP Schema is #5532
(http://twistedmatrix.com/trac/ticket/5532)

I would suggest extending the existing proposal with route
information. 

I'm a little bit unclear on what an AMP route is, but as I understand
it, it is basically a set of AMP Commands that are available at some
known location - useful for segregating functionality (pre-login,
post-login, user, admin, etc). Glyph, is that right?

There is some code from Divmod lying around somewhere that needs to be
looked at.

There is a ticket for AMP URLs that include route paths. #5548
(http://twistedmatrix.com/trac/ticket/5548)

This would be a great area for someone to come in and try and connect
these disparate threads together!

--
-E



From glyph at twistedmatrix.com  Sat Jul  7 21:47:08 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 7 Jul 2012 20:47:08 -0700
Subject: [Twisted-Python] Deserializing AMP callRemoteString without
	knowing the Command's signature
In-Reply-To: <20120708013208.GC5497@ragnarok.teratorn.org>
References: <CAE_Hg6ZR6q-yJGCqujZ7c5FOkdwPGtM7zEi1HqiX4sBK-gCdiw@mail.gmail.com>
	<20120708013208.GC5497@ragnarok.teratorn.org>
Message-ID: <E66019CE-D86D-4607-99B1-1329B4E9F41C@twistedmatrix.com>


On Jul 7, 2012, at 6:32 PM, "Eric P. Mangold" <eric at teratorn.org> wrote:

> I'm a little bit unclear on what an AMP route is, but as I understand
> it, it is basically a set of AMP Commands that are available at some
> known location - useful for segregating functionality (pre-login,
> post-login, user, admin, etc). Glyph, is that right?

It's not really the set of commands, so much as it is an identified endpoint for AMP boxes, so that you can multiplex them over a single connection.  The general idea is that you stick an extra key ("_route") into the box, and that tells it where to go on the other end of the connection, so you can easily have as many parallel AMP streams as you want with only one TCP connection.  No protocol switching if you want to do this, of course.

Of course, your peer on a particular route will have a specific set of commands available, but so will the "root" route, i.e. the thing that you are talking to when you establish a TCP connection.  (Plus, maybe you get some extra or different stuff after you authenticate.)

But your peer on a particular route might be a completely dumb IBoxReceiver without even command-dispatch logic.

You can see an implementation of this here: <http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Epsilon/epsilon/amprouter.py>.  (And I could swear there's a twisted ticket to integrate this but I can't find it in a quick search.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120707/202600c2/attachment.html>

From exarkun at twistedmatrix.com  Sat Jul  7 22:05:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Jul 2012 04:05:51 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1341720351.81.1762135871@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120708/96e75b9e/attachment.html>

From adi at roiban.ro  Sun Jul  8 08:28:13 2012
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 8 Jul 2012 17:28:13 +0300
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
In-Reply-To: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
References: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
Message-ID: <CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>

On 7 July 2012 16:05, Laurens Van Houtven <_ at lvh.cc> wrote:
>
> Hey :)
>
> As some of you probably know Stephen and I did the Twisted Tutorial at
> EuroPython.
>
> Let me start off by saying that there was a lot of interest. A picture
> says a thousand words:
>

Congrats for the the tutorial!

I don't know if the Twisted HelpDesk was as popular as the tutorial,
but I would like to thank Laurens for dedicating time for the
helpdesk. At least for me the helpesk was very useful.

Cheers,
--
Adi Roiban



From _ at lvh.cc  Sun Jul  8 10:23:32 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 8 Jul 2012 18:23:32 +0200
Subject: [Twisted-Python] EuroPython 2012 Twisted tutorial postmortem
In-Reply-To: <CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>
References: <E361DB9E-F8A3-41F9-AEBA-DACE143E5F17@lvh.cc>
	<CAFycZ9duvHWBJ20p9Gsy6bOUj5dKejkZKRKc5CG95_rG0O1zXQ@mail.gmail.com>
Message-ID: <CAE_Hg6Z1Jyy6u8bX2nGN17QJ8nMAgGzBmu9hUA=Sv+npyqb5tA@mail.gmail.com>

Oh, yes, that reminds me: I should talk about the helpdesk :)

The format is basically that someone sits at a predefined location from
conference start 'till lunch (9:00 - 13:00 -- but you should probably be
there at least 15 minutes earlier). There's a way for people to sign up and
reserve a slot, but you also get a lot of people randomly walking past,
especially in between talks.

People come up to me with anything and everything they'd like to know about
Twisted.

Adi and Jacob Hallen had questions about ongoing development activity
(about ftp and Divmod Nevow respectively).

Most of the questions were fortunately pretty easy/quick fixes and involved
pointing people to the appropriate support sources, documentation, modules,
functions... Stuff like "How do I wait on mulitple deferreds", "How do I
work around blocking libraries" etc

Fortunately the only loaded question was during the tutorial (about gevent
;))


On Sun, Jul 8, 2012 at 4:28 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 7 July 2012 16:05, Laurens Van Houtven <_ at lvh.cc> wrote:
> >
> > Hey :)
> >
> > As some of you probably know Stephen and I did the Twisted Tutorial at
> > EuroPython.
> >
> > Let me start off by saying that there was a lot of interest. A picture
> > says a thousand words:
> >
>
> Congrats for the the tutorial!
>
> I don't know if the Twisted HelpDesk was as popular as the tutorial,
> but I would like to thank Laurens for dedicating time for the
> helpdesk. At least for me the helpesk was very useful.
>
> Cheers,
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120708/f58f5ade/attachment-0001.html>

From paulswartz at gmail.com  Sun Jul  8 11:52:17 2012
From: paulswartz at gmail.com (Paul Swartz)
Date: Sun, 8 Jul 2012 13:52:17 -0400
Subject: [Twisted-Python] Buildbot for PyCrypto 2.6?
Message-ID: <CAJPQj++-nw68=9O_bCp34YXrV6gac72DQOHvUr-8ZOws=9b_Pg@mail.gmail.com>

Per http://tm.tl/5700, newer versions of PyCrypto fail the current
test cases.  At the moment, all the buildbots are running PyCrypto
2.5.  Can we upgrade one of them, or start a new buildbox, to test
against the newer version?

thanks,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/



From kang7213 at gmail.com  Sun Jul  8 23:51:10 2012
From: kang7213 at gmail.com (kangta123)
Date: Mon, 9 Jul 2012 13:51:10 +0800
Subject: [Twisted-Python] Send messages in an Infinite loop
Message-ID: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>

Hello all:

I am newbie to use twisted. I want to send message in an Infinite loop in
server, such as send a timestamp each 5s to all clients. i have tried to
use like "deferToThread"  and "callFromThread", but i am failed.if have any
suggestions please tell me.

thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120709/eba944c6/attachment.html>

From justin.venus at gmail.com  Sun Jul  8 23:59:45 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Mon, 9 Jul 2012 00:59:45 -0500
Subject: [Twisted-Python] Send messages in an Infinite loop
In-Reply-To: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>
References: <CAK1eeKyQj=mAN7Zre-kK52qmEsj2NnHcoMx9rEacAEVKvqexTQ@mail.gmail.com>
Message-ID: <CACL=7asZ2t_+sDkACRidDvHVF4Nm5JyruPqdUOLyBmjec=j2OA@mail.gmail.com>

Look at twisted.internet.task.LoopingCall.

Justin Venus
On Jul 9, 2012 12:53 AM, "kangta123" <kang7213 at gmail.com> wrote:

> Hello all:
>
> I am newbie to use twisted. I want to send message in an Infinite loop in
> server, such as send a timestamp each 5s to all clients. i have tried to
> use like "deferToThread"  and "callFromThread", but i am failed.if have any
> suggestions please tell me.
>
> thanks.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120709/cc1ac738/attachment.html>

From tenth at twistedmatrix.com  Mon Jul  9 13:57:37 2012
From: tenth at twistedmatrix.com (Tenth)
Date: Mon, 9 Jul 2012 15:57:37 -0400
Subject: [Twisted-Python]  Boston Twisted Sprint: MIT, July 14th
Message-ID: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>

I'm pleased to finally announce another Boston area Twisted Sprint, on
Saturday, July 14th, on the MIT Campus.

Thanks to Jessica McKellar's tireless efforts, Building 8, Room 119 will be
reserved for Twisted hacking from 12:00 PM to 11:00 PM.

If you're interested, and haven't received a formal invitation, I'd be
happy to add you to the list; This includes more specific information about
how to find the site and contact the organizers.

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120709/a99c1a7c/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Jul  9 16:03:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 9 Jul 2012 15:03:46 -0700
Subject: [Twisted-Python] Boston Twisted Sprint: MIT, July 14th
In-Reply-To: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>
References: <CAKJpRM1Sd+rsVB0uQScyh_kEzSefcx1tyZkVtKC2rDOfiFCviw@mail.gmail.com>
Message-ID: <E98A0D6C-C9E5-421B-AC57-82E169A8A6F6@twistedmatrix.com>


Le Jul 9, 2012 à 12:57 PM, Tenth <tenth at twistedmatrix.com> a écrit :

> I'm pleased to finally announce another Boston area Twisted Sprint, on Saturday, July 14th, on the MIT Campus.
> 
> Thanks to Jessica McKellar's tireless efforts, Building 8, Room 119 will be reserved for Twisted hacking from 12:00 PM to 11:00 PM.
> 
> If you're interested, and haven't received a formal invitation, I'd be happy to add you to the list; This includes more specific information about how to find the site and contact the organizers.

The July San Francisco Twisted sprint (in case, somehow, you haven't already gotten a link to it, you can find it here: <http://www.meetup.com/San-Francisco-Twisted-Python-Meetup/events/71296702/>) is starting at 10AM PST, which means that the east coast has an hour head-start.

This means that if you're sprinting along in Boston, you have an extra opportunity to get your ticket submissions reviewed when the  participants on this coast, including myself, start showing up.  This is our first real simultaneous multi-location sprint and I am excited to see how it turns out!

-glyph




From augustocaringi at gmail.com  Tue Jul 10 09:14:27 2012
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Tue, 10 Jul 2012 12:14:27 -0300
Subject: [Twisted-Python] Twisted in a multicore environment
Message-ID: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>

Hi,

    I'm researching the best way to implement/use a Twisted-based
server in a multicore environment...

    There is the Ampoule project, that I realize is considered the
best way to do that. Right?

    I'm also reading about the internals of Nginx HTTP server. This
server utilizes the same reactor pattern of Twisted (epoll based)...

    "What resulted is a modular, event-driven, asynchronous,
single-threaded, non-blocking architecture which became the foundation
of nginx code." http://www.aosabook.org/en/nginx.html

    But to maximize the use of processors in a multicore environment,
Nginx do this:

    "nginx doesn't spawn a process or thread for every connection.
Instead, worker processes accept new requests from a shared "listen"
socket and execute a highly efficient run-loop inside each worker to
process thousands of connections per worker"

    My question: There is something similar in Twisted? Or do you
think that is easy to implement something like that?

    Thanks!

-- 
Augusto Mecking Caringi



From exarkun at twistedmatrix.com  Tue Jul 10 10:03:38 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Jul 2012 16:03:38 -0000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
Message-ID: <20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>

On 03:14 pm, augustocaringi at gmail.com wrote:
>Hi,
>
>    I'm researching the best way to implement/use a Twisted-based
>server in a multicore environment...
>
>    There is the Ampoule project, that I realize is considered the
>best way to do that. Right?

It's a way.  "Best" depends on the details and goals of the project.

Here's a stackoverflow question/answer on basically the same topic.  In 
particular, it specifically answers the question of a listening port 
shared between multiple processes and gives examples of how to do this:

  http://bit.ly/MiCHtQ

Jean-Paul
>    I'm also reading about the internals of Nginx HTTP server. This
>server utilizes the same reactor pattern of Twisted (epoll based)...
>
>    "What resulted is a modular, event-driven, asynchronous,
>single-threaded, non-blocking architecture which became the foundation
>of nginx code." http://www.aosabook.org/en/nginx.html
>
>    But to maximize the use of processors in a multicore environment,
>Nginx do this:
>
>    "nginx doesn't spawn a process or thread for every connection.
>Instead, worker processes accept new requests from a shared "listen"
>socket and execute a highly efficient run-loop inside each worker to
>process thousands of connections per worker"
>
>    My question: There is something similar in Twisted? Or do you
>think that is easy to implement something like that?
>
>    Thanks!
>
>--
>Augusto Mecking Caringi
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Tue Jul 10 10:17:40 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 10 Jul 2012 18:17:40 +0200
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>

FWIW,  I have used Ampoule to great effect, but as JP points out it's hardly the only option. You're bound to end up with some measure of multiprocessing. Bear in mind that not all workloads are well-suited for this kind of problem! Always measure before deciding to make your codebase that much more complicated :)


cheers
lvh



On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:

> On 03:14 pm, augustocaringi at gmail.com wrote:
>> Hi,
>> 
>>   I'm researching the best way to implement/use a Twisted-based
>> server in a multicore environment...
>> 
>>   There is the Ampoule project, that I realize is considered the
>> best way to do that. Right?
> 
> It's a way.  "Best" depends on the details and goals of the project.
> 
> Here's a stackoverflow question/answer on basically the same topic.  In 
> particular, it specifically answers the question of a listening port 
> shared between multiple processes and gives examples of how to do this:
> 
>  http://bit.ly/MiCHtQ
> 
> Jean-Paul
>>   I'm also reading about the internals of Nginx HTTP server. This
>> server utilizes the same reactor pattern of Twisted (epoll based)...
>> 
>>   "What resulted is a modular, event-driven, asynchronous,
>> single-threaded, non-blocking architecture which became the foundation
>> of nginx code." http://www.aosabook.org/en/nginx.html
>> 
>>   But to maximize the use of processors in a multicore environment,
>> Nginx do this:
>> 
>>   "nginx doesn't spawn a process or thread for every connection.
>> Instead, worker processes accept new requests from a shared "listen"
>> socket and execute a highly efficient run-loop inside each worker to
>> process thousands of connections per worker"
>> 
>>   My question: There is something similar in Twisted? Or do you
>> think that is easy to implement something like that?
>> 
>>   Thanks!
>> 
>> --
>> Augusto Mecking Caringi
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From eric at teratorn.org  Tue Jul 10 11:33:59 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 10 Jul 2012 13:33:59 -0400
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20460.63980.237850.10155@jon.es>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<20460.56189.932953.706603@jon.es>
	<C213BB82-DF94-4E53-BF0B-D70D5E83CA30@twistedmatrix.com>
	<20460.63980.237850.10155@jon.es>
Message-ID: <20120710173359.GF5497@ragnarok.teratorn.org>

On Thu, Jun 28, 2012 at 08:42:20PM -0400, Terry Jones wrote:
> Hi Glyph!
> 
> There are a couple of tickets floating around:
> 
>   http://twistedmatrix.com/trac/ticket/3858
>   http://twistedmatrix.com/trac/ticket/1402 (closed as a dupe)

Please work on this!! I've had the idea in my head for a visualizer for
years and years, but always managled to muddle through tought asyc
debugging somehow... (a testament to the cause), but still - it would be
good to have better introspection / logging / debugging tools.

And a graph-oriented visualizer would be a great start.
--
-E



From werner at thieprojects.ch  Tue Jul 10 12:08:53 2012
From: werner at thieprojects.ch (Werner Thie)
Date: Tue, 10 Jul 2012 08:08:53 -1000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
Message-ID: <4FFC6FB5.7040301@thieprojects.ch>

On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> FWIW,  I have used Ampoule to great effect, but as JP points out it's hardly the only option. You're bound to end up with some measure of multiprocessing. Bear in mind that not all workloads are well-suited for this kind of problem! Always measure before deciding to make your codebase that much more complicated :)
>
>
> cheers
> lvh
>
>
>
> On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:
>
>> On 03:14 pm, augustocaringi at gmail.com wrote:
>>> Hi,
>>>
>>>    I'm researching the best way to implement/use a Twisted-based
>>> server in a multicore environment...
>>>
>>>    There is the Ampoule project, that I realize is considered the
>>> best way to do that. Right?
>>
>> It's a way.  "Best" depends on the details and goals of the project.
>>
>> Here's a stackoverflow question/answer on basically the same topic.  In
>> particular, it specifically answers the question of a listening port
>> shared between multiple processes and gives examples of how to do this:
>>
>>   http://bit.ly/MiCHtQ
>>
>> Jean-Paul
>>>    I'm also reading about the internals of Nginx HTTP server. This
>>> server utilizes the same reactor pattern of Twisted (epoll based)...
>>>
>>>    "What resulted is a modular, event-driven, asynchronous,
>>> single-threaded, non-blocking architecture which became the foundation
>>> of nginx code." http://www.aosabook.org/en/nginx.html
>>>
>>>    But to maximize the use of processors in a multicore environment,
>>> Nginx do this:
>>>
>>>    "nginx doesn't spawn a process or thread for every connection.
>>> Instead, worker processes accept new requests from a shared "listen"
>>> socket and execute a highly efficient run-loop inside each worker to
>>> process thousands of connections per worker"
>>>
>>>    My question: There is something similar in Twisted? Or do you
>>> think that is easy to implement something like that?
>>>
>>>    Thanks!
>>>
>>> --
>>> Augusto Mecking Caringi
We observed really great scaling on multi cores with moving the 
application part either to ampoule for PDF production or in the other 
case I wrote an implementation of self regulating process pool based on 
spread, leaving only the serving to twisted in both cases.

With handing work out to other processes you get another benefit which 
is isolation of python, which is the only way to use a package, like 
reportlab which survives no sort of reentrancy, for a webservice.

Werner



From bernat at luffy.cx  Thu Jul 12 00:10:45 2012
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 12 Jul 2012 08:10:45 +0200
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <4FFC6FB5.7040301@thieprojects.ch> (Werner Thie's message of
	"Tue, 10 Jul 2012 08:08:53 -1000")
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
Message-ID: <m3394xik62.fsf@neo.luffy.cx>

 ❦ 10 juillet 2012 20:08 CEST, Werner Thie <werner at thieprojects.ch> :

> We observed really great scaling on multi cores with moving the 
> application part either to ampoule for PDF production or in the other 
> case I wrote an implementation of self regulating process pool based on 
> spread, leaving only the serving to twisted in both cases.

Is there something similar to Ampoule but allowing to spawn processes
across different servers? Something that would provide
"deferToRemoteAMPProcess".
-- 
Don't patch bad code - rewrite it.
            - The Elements of Programming Style (Kernighan & Plauger)



From mithrandi at mithrandi.net  Thu Jul 12 03:17:42 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 12 Jul 2012 11:17:42 +0200
Subject: [Twisted-Python] Logging observers and threads
Message-ID: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>

When an error occurs in a database connection thread, adbapi invokes
log.err from that thread, which in turns causes log observers to be
invoked in this thread. Mantissa's TracebackCollector has a log
observer which logs items as Items in an Axiom store; this means that
the log observer tries to run SQLite queries in the wrong thread, and
explodes. However, I'm not sure whose fault this is; it seems there
are three possibilities:

1) log.err and log.msg should not be called from a non-reactor thread,
making this an adbapi bug.
2) twisted.python.log should not invoke log observers in a non-reactor
thread, making this a twisted.python.log bug.
3) log observers should expect to be inovked in non-reactor threads,
making this a Mantissa bug.

Can anyone give a definitive answer on this? The "nothing except
reactor.callFromThread is thread-safe" principle would suggest that 1)
is the case, but logging seems like it might be a special case.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From itamar at itamarst.org  Thu Jul 12 05:32:25 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 12 Jul 2012 07:32:25 -0400
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
Message-ID: <4FFEB5C9.4@itamarst.org>

On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
> 3) log observers should expect to be inovked in non-reactor threads,
> making this a Mantissa bug.
>
In theory this is the case - the logging howto says "The observer needs 
to be thread safe if you anticipate using threads in your program." The 
API docs don't mention threads, though..

In practice however, probably every custom observer gets this wrong, so 
we really need some infrastructure to make this easier or to fix it. 
Possibly we should have some way to indicate an observer is thread-safe, 
assume by default they are not, and if they are not wrap them in a 
reactor.callFromThread wrapper.

I would also like some infrastructure to make the file log observer run 
in its own thread, but that's almost the opposite use case :)

-Itamar



From cds at corbinsimpson.com  Thu Jul 12 06:58:20 2012
From: cds at corbinsimpson.com (Corbin Simpson)
Date: Thu, 12 Jul 2012 05:58:20 -0700
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <m3394xik62.fsf@neo.luffy.cx>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch> <m3394xik62.fsf@neo.luffy.cx>
Message-ID: <20120712125820.GB20336@ps35699.dreamhostps.com>

On Thu, Jul 12, 2012 at 08:10:45AM +0200, Vincent Bernat wrote:
> Is there something similar to Ampoule but allowing to spawn processes
> across different servers? Something that would provide
> "deferToRemoteAMPProcess".

AFAIK, not exactly. You can pretty easily craft this yourself, though.

The main problem is figuring out how to ask your remote server to spawn
the very first Twisted instance; once you've got that, you can spawn
workers through Ampoule that will connect to the master and communicate
using the same AMP description. It might be easier, at that point, to
just build a small dispatcher for your AMP commands and do it all
explicitly. I guess it would depend on your needs.

~ C.



From exarkun at twistedmatrix.com  Thu Jul 12 07:47:03 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 13:47:03 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <4FFEB5C9.4@itamarst.org>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
Message-ID: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>

On 11:32 am, itamar at itamarst.org wrote:
>On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
>>3) log observers should expect to be inovked in non-reactor threads,
>>making this a Mantissa bug.
>In theory this is the case - the logging howto says "The observer needs
>to be thread safe if you anticipate using threads in your program." The
>API docs don't mention threads, though..
>
>In practice however, probably every custom observer gets this wrong, so
>we really need some infrastructure to make this easier or to fix it.
>Possibly we should have some way to indicate an observer is thread- 
>safe,
>assume by default they are not, and if they are not wrap them in a
>reactor.callFromThread wrapper.

The logging system is already a bottleneck in some applications.  Doing 
even more work to try to make it properly thread-safe will probably slow 
it down even more.

I think it was a mistake to try to make it possible to use 
twisted.python.log free-threaded.  I think we should think about getting 
rid of this claimed feature.  Perhaps it could be replaced with a more 
explicit, probably more restricted, logging feature for non-reactor 
threads.

Unless someone can magically fix the threading issues without hurting 
performance.  Then, great, go for it.
>I would also like some infrastructure to make the file log observer run
>in its own thread, but that's almost the opposite use case :)

Sure, but that's probably based on top of an asynchronous file I/O API 
that's not explicitly thread-based (but probably is thread-based in 
practice, because what other kind of asynchronous file I/O even exists).

Also, to explicitly answer Tristan's question:

    It's a bug in the Mantissa log observer.

Jean-Paul



From justin.venus at gmail.com  Thu Jul 12 07:56:20 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Thu, 12 Jul 2012 08:56:20 -0500
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
Message-ID: <CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>

For logging could we look at implementing posix aio on platforms that
support it?  I would be willing to help code that.

Justin
On Jul 12, 2012 8:51 AM, <exarkun at twistedmatrix.com> wrote:

> On 11:32 am, itamar at itamarst.org wrote:
> >On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
> >>3) log observers should expect to be inovked in non-reactor threads,
> >>making this a Mantissa bug.
> >In theory this is the case - the logging howto says "The observer needs
> >to be thread safe if you anticipate using threads in your program." The
> >API docs don't mention threads, though..
> >
> >In practice however, probably every custom observer gets this wrong, so
> >we really need some infrastructure to make this easier or to fix it.
> >Possibly we should have some way to indicate an observer is thread-
> >safe,
> >assume by default they are not, and if they are not wrap them in a
> >reactor.callFromThread wrapper.
>
> The logging system is already a bottleneck in some applications.  Doing
> even more work to try to make it properly thread-safe will probably slow
> it down even more.
>
> I think it was a mistake to try to make it possible to use
> twisted.python.log free-threaded.  I think we should think about getting
> rid of this claimed feature.  Perhaps it could be replaced with a more
> explicit, probably more restricted, logging feature for non-reactor
> threads.
>
> Unless someone can magically fix the threading issues without hurting
> performance.  Then, great, go for it.
> >I would also like some infrastructure to make the file log observer run
> >in its own thread, but that's almost the opposite use case :)
>
> Sure, but that's probably based on top of an asynchronous file I/O API
> that's not explicitly thread-based (but probably is thread-based in
> practice, because what other kind of asynchronous file I/O even exists).
>
> Also, to explicitly answer Tristan's question:
>
>     It's a bug in the Mantissa log observer.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120712/5b6be496/attachment.html>

From exarkun at twistedmatrix.com  Thu Jul 12 08:32:06 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 14:32:06 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
Message-ID: <20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>

On 01:56 pm, justin.venus at gmail.com wrote:
>For logging could we look at implementing posix aio on platforms that
>support it?  I would be willing to help code that.

As far as I know, all of the implementations of POSIX AIO are relatively 
low quality.  They include a number of tricky, low-level constraints 
(eg, char* to write must be page aligned) as well as some sad functional 
limitations such as blocking instead of being asynchronous if too many 
AIOs are started concurrently (with this limit applying to AIOs *system 
wide* in some cases).

If there are any good implementations, or prospects of thes 
implementations getting good sometime in the near future, it might be 
worth exploring, but I don't think it's something we can rely on now.

See also this stackoverflow question: http://bit.ly/NqWd5b

Corrections welcome, I haven't checked on the state of this in a few 
months.

Jean-Paul
>Justin
>On Jul 12, 2012 8:51 AM, <exarkun at twistedmatrix.com> wrote:
>>On 11:32 am, itamar at itamarst.org wrote:
>> >On 07/12/2012 05:17 AM, Tristan Seligmann wrote:
>> >>3) log observers should expect to be inovked in non-reactor threads,
>> >>making this a Mantissa bug.
>> >In theory this is the case - the logging howto says "The observer 
>>needs
>> >to be thread safe if you anticipate using threads in your program." 
>>The
>> >API docs don't mention threads, though..
>> >
>> >In practice however, probably every custom observer gets this wrong, 
>>so
>> >we really need some infrastructure to make this easier or to fix it.
>> >Possibly we should have some way to indicate an observer is thread-
>> >safe,
>> >assume by default they are not, and if they are not wrap them in a
>> >reactor.callFromThread wrapper.
>>
>>The logging system is already a bottleneck in some applications. 
>>Doing
>>even more work to try to make it properly thread-safe will probably 
>>slow
>>it down even more.
>>
>>I think it was a mistake to try to make it possible to use
>>twisted.python.log free-threaded.  I think we should think about 
>>getting
>>rid of this claimed feature.  Perhaps it could be replaced with a more
>>explicit, probably more restricted, logging feature for non-reactor
>>threads.
>>
>>Unless someone can magically fix the threading issues without hurting
>>performance.  Then, great, go for it.
>> >I would also like some infrastructure to make the file log observer 
>>run
>> >in its own thread, but that's almost the opposite use case :)
>>
>>Sure, but that's probably based on top of an asynchronous file I/O API
>>that's not explicitly thread-based (but probably is thread-based in
>>practice, because what other kind of asynchronous file I/O even 
>>exists).
>>
>>Also, to explicitly answer Tristan's question:
>>
>>     It's a bug in the Mantissa log observer.
>>
>>Jean-Paul
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From tobias.oberstein at tavendo.de  Thu Jul 12 09:26:11 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jul 2012 08:26:11 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>

> As far as I know, all of the implementations of POSIX AIO are relatively low
> quality.  They include a number of tricky, low-level constraints (eg, char* to
> write must be page aligned) as well as some sad functional limitations such as
> blocking instead of being asynchronous if too many AIOs are started
> concurrently (with this limit applying to AIOs *system
> wide* in some cases).
> 
> If there are any good implementations, or prospects of thes implementations
> getting good sometime in the near future, it might be worth exploring, but I
> don't think it's something we can rely on now.

I have been looking into "libuv" a little .. it not only provides wrappers around epoll/kqueue/IOCP for networking,
but also provides a unified API for asynchronous File I/O .. I _think_ on Posix it uses the usual background thread pool
approach to work around flaky AIO (and also to provide asynch _open_ and everyhting else from Posix File IO), but
it also on Windows uses Overlapped IO when possible (which is the right thing to do there, since asynch File IO works
since Windows NT 3.5 using that). It also does asynch DNS lookup etc. 



From rowen at uw.edu  Thu Jul 12 09:36:39 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Thu, 12 Jul 2012 08:36:39 -0700
Subject: [Twisted-Python] A few simple questions
Message-ID: <rowen-47FF40.08363912072012@news.gmane.org>

I'm adding Twisted support to some existing communication code and I 
have a few questions which I hope are simple. I've been reading the API 
documentation, but if the answers are there I'm missing them.

What happens if one tries to write to a protocol.transport that is not 
connected or in an error state? (I'm hoping that this case has defined 
behavior and that it will raise an exception).

Is there some way to query a protocol to see if it is in a good state 
(connected and no errors)? I realize with callbacks this is not usually 
necessary, but I have a case where it would be helpful (though I can 
probably manage without it).

When reading raw bytes, is there any way to get the bytes from the 
protocol? I assume not: that if one wants to buffer the data one must do 
that in the callback. If so, does Twisted provide a suitable buffer 
class?

-- Russell




From _ at lvh.cc  Thu Jul 12 10:02:26 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 12 Jul 2012 18:02:26 +0200
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-47FF40.08363912072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
Message-ID: <CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>

On Thursday, July 12, 2012, Russell E. Owen wrote:

> I'm adding Twisted support to some existing communication code and I
> have a few questions which I hope are simple. I've been reading the API
> documentation, but if the answers are there I'm missing them.
>
> What happens if one tries to write to a protocol.transport that is not
> connected or in an error state? (I'm hoping that this case has defined
> behavior and that it will raise an exception).


Not connected usually means that protocol.transport is None


>
> Is there some way to query a protocol to see if it is in a good state
> (connected and no errors)? I realize with callbacks this is not usually
> necessary, but I have a case where it would be helpful (though I can
> probably manage without it).


Can you elaborate on the case?


>
> When reading raw bytes, is there any way to get the bytes from the
> protocol? I assume not: that if one wants to buffer the data one must do
> that in the callback. If so, does Twisted provide a suitable buffer
> class?


The protocol gets dataReceivrd called. What kind of buffering do you want
to do and why? Would a simple StringIO suffice?


>
> -- Russell
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <javascript:;>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120712/f36dff13/attachment.html>

From exarkun at twistedmatrix.com  Thu Jul 12 11:52:15 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 12 Jul 2012 17:52:15 -0000
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
Message-ID: <20120712175215.2871.1958114921.divmod.xquotient.22@localhost6.localdomain6>

On 04:02 pm, _ at lvh.cc wrote:
>On Thursday, July 12, 2012, Russell E. Owen wrote:
>>I'm adding Twisted support to some existing communication code and I
>>have a few questions which I hope are simple. I've been reading the 
>>API
>>documentation, but if the answers are there I'm missing them.
>>
>>What happens if one tries to write to a protocol.transport that is not
>>connected or in an error state? (I'm hoping that this case has defined
>>behavior and that it will raise an exception).
>
>
>Not connected usually means that protocol.transport is None

I don't think you'll find this to be true.

Not connected means makeConnection hasn't yet been called or 
connectionLost has been called.  Anything else you want, you need to 
build yourself (and given those two callbacks, it should be obvious how 
to build something simple to tell you this).

Jean-Paul



From glyph at twistedmatrix.com  Thu Jul 12 11:54:47 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 12 Jul 2012 10:54:47 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>


Le Jul 12, 2012 à 8:26 AM, Tobias Oberstein <tobias.oberstein at tavendo.de> a écrit :

>> As far as I know, all of the implementations of POSIX AIO are relatively low
>> quality.  They include a number of tricky, low-level constraints (eg, char* to
>> write must be page aligned) as well as some sad functional limitations such as
>> blocking instead of being asynchronous if too many AIOs are started
>> concurrently (with this limit applying to AIOs *system
>> wide* in some cases).
>> 
>> If there are any good implementations, or prospects of thes implementations
>> getting good sometime in the near future, it might be worth exploring, but I
>> don't think it's something we can rely on now.
> 
> I have been looking into "libuv" a little .. it not only provides wrappers around epoll/kqueue/IOCP for networking,
> but also provides a unified API for asynchronous File I/O .. I _think_ on Posix it uses the usual background thread pool
> approach to work around flaky AIO (and also to provide asynch _open_ and everyhting else from Posix File IO), but
> it also on Windows uses Overlapped IO when possible (which is the right thing to do there, since asynch File IO works
> since Windows NT 3.5 using that). It also does asynch DNS lookup etc. 

libuv is a giant pile of new, unaudited C code that didn't even have a passing test suite until a month or two ago.  Please feel free to write a reactor for it; better interop with node.js would be great, but it's definitely not a place we should go looking for new core features.

The tricky part of this is not implementation; on today's OSes (except maaaaybe solaris?), you just have to use threads or subprocesses, end of story.  The tricky part is finding an interface for things that is nice and general and isn't just a Deferred that fires with a Deferred with a Deferred on top.

So, <http://tm.tl/1956>, probably.  If we're all lucky I'll have some time to move the ball on that on Saturday.

-glyph


From glyph at twistedmatrix.com  Thu Jul 12 11:57:06 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 12 Jul 2012 10:57:06 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
Message-ID: <4054D0C9-33C1-4B50-AC02-8E4EA2BBD316@twistedmatrix.com>

Le Jul 12, 2012 à 6:47 AM, exarkun at twistedmatrix.com a écrit :

> I think it was a mistake to try to make it possible to use 
> twisted.python.log free-threaded.  I think we should think about getting 
> rid of this claimed feature.  Perhaps it could be replaced with a more 
> explicit, probably more restricted, logging feature for non-reactor 
> threads.

Perhaps so.  Does this really need to be more complicated than just reactor.callFromThread, though?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120712/aa19dcf0/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jul 12 13:33:54 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jul 2012 12:33:54 -0700
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
	<0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>

> libuv is a giant pile of new, unaudited C code that didn't even have a passing
> test suite until a month or two ago.  Please feel free to write a reactor for it;

>From what I've read, libuv has designed it's API around the pattern

A. "do operation and get notified when done"

instead of

B. "get notified when ready and then do operation".

The native Windows API is A., Posix the B and operation = read, write, open, stat, ..

I think A. is more natural, since how do wait for a file to be ready to get open'ed/stat'ed?

Do the open/stat and get notified when done seems to be straight forward rgd API.

Do you think a library with API pattern A would make a nice basis for a Twisted reactor?
 
> better interop with node.js would be great, but it's definitely not a place we
> should go looking for new core features.

;) I knew it would be controversial .. if only for the fact that it's from the node guys ... with support by Microsoft.

> 
> The tricky part of this is not implementation; on today's OSes (except
> maaaaybe solaris?), you just have to use threads or subprocesses, end of story.

Weeeell, Windows. People say IOCP/OverlappedIO works. Without threads. For file I/O also .. don't think for open/stat/.. though.

On Linux there is eventfd ..

> The tricky part is finding an interface for things that is nice and general and
> isn't just a Deferred that fires with a Deferred with a Deferred on top.
> 
> So, <http://tm.tl/1956>, probably.  If we're all lucky I'll have some time to move
> the ball on that on Saturday.
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dan at wingu.com  Thu Jul 12 14:31:09 2012
From: dan at wingu.com (Dan Milstein)
Date: Thu, 12 Jul 2012 16:31:09 -0400
Subject: [Twisted-Python] How to best log server/client interactions from a
	test?
Message-ID: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>

'lo all,

I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).

When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?

To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:

    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
    return d

What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  

Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?

Thanks,
-Dan


From rgacote at appropriatesolutions.com  Thu Jul 12 14:44:32 2012
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Thu, 12 Jul 2012 16:44:32 -0400 (EDT)
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
Message-ID: <18982036.806.1342125868780.JavaMail.rgacote@Ray-iMac-2011.local>

Hi Augusto:

You don't mention the protocol you're implementing in Twisted, but if is is HTTP...

The way we address this problem with an HTTP protocol is to put 
multiple copies of Twisted behind nginx. 

On two and four core machines, we set the number of nginx worker processes equal 
to the number of CPU cores (as recommend by nginx docs). 
We then install one Twisted server instance per core.
We then have nginx round-robin proxy into the Twisted instances.

On a larger system (such as eight cores) we'd set up four nginx worker processes
and four Twisted services; or perhaps two nginx worker processes and six Twisted
services. Particularly when we're running HTTPS and the 
nginx Web Application Firewall which can consume a fair bit of CPU. 

Final balancing between nginx and Twisted core is obviously dependent on where the
heaviest computation appears. 

We find this balancing act works well and, since we know the number of 
cores on a box when we're deploying, we're rarely interested in the ability to 
add/remove Twisted instances on the fly. 

--Ray


----- Original Message -----
> From: "Augusto Mecking Caringi" <augustocaringi at gmail.com>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Tuesday, July 10, 2012 11:14:27 AM
> Subject: [Twisted-Python] Twisted in a multicore environment
> 
> Hi,
> 
>     I'm researching the best way to implement/use a Twisted-based
> server in a multicore environment...
> 
>     There is the Ampoule project, that I realize is considered the
> best way to do that. Right?
> 
>     I'm also reading about the internals of Nginx HTTP server. This
> server utilizes the same reactor pattern of Twisted (epoll based)...
> 
>     "What resulted is a modular, event-driven, asynchronous,
> single-threaded, non-blocking architecture which became the
> foundation
> of nginx code." http://www.aosabook.org/en/nginx.html
> 
>     But to maximize the use of processors in a multicore environment,
> Nginx do this:
> 
>     "nginx doesn't spawn a process or thread for every connection.
> Instead, worker processes accept new requests from a shared "listen"
> socket and execute a highly efficient run-loop inside each worker to
> process thousands of connections per worker"
> 
>     My question: There is something similar in Twisted? Or do you
> think that is easy to implement something like that?
> 
>     Thanks!
> 
> --
> Augusto Mecking Caringi
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
Ray Cote, President
Appropriate Solutions, Inc.
We Build Software
603.924.6079



From exarkun at twistedmatrix.com  Fri Jul 13 07:48:23 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 13 Jul 2012 13:48:23 -0000
Subject: [Twisted-Python] Logging observers and threads
In-Reply-To: <634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>
References: <CAMcKhMShSO1ABSOBpirpkL06iETpu+JXJ6eoePo_=3mYkph4_A@mail.gmail.com>
	<4FFEB5C9.4@itamarst.org>
	<20120712134703.2871.728260629.divmod.xquotient.12@localhost6.localdomain6>
	<CACL=7avgn1VmxeLfXJMhk4PzZ88HAW2qCxAqsgtaQXLfCa4gfQ@mail.gmail.com>
	<20120712143206.2871.76054825.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D43379592CEB@EXVMBX020-12.exch020.serverdata.net>
	<0F9A77B7-F038-4317-9575-A065FB916F02@twistedmatrix.com>
	<634914A010D0B943A035D226786325D43379592EFB@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120713134823.3759.445018280.divmod.xquotient.8@localhost6.localdomain6>

On 12 Jul, 07:33 pm, tobias.oberstein at tavendo.de wrote:
>>libuv is a giant pile of new, unaudited C code that didn't even have a 
>>passing
>>test suite until a month or two ago.  Please feel free to write a 
>>reactor for it;
>
>> From what I've read, libuv has designed it's API around the pattern
>
>A. "do operation and get notified when done"
>
>instead of
>
>B. "get notified when ready and then do operation".
>
>The native Windows API is A., Posix the B and operation = read, write, 
>open, stat, ..
>
>I think A. is more natural, since how do wait for a file to be ready to 
>get open'ed/stat'ed?

This isn't really attacking the important part of the matter.  I suppose 
it's a necessary decision to make, but it still leaves 99% of the API 
unspecified.

Twisted essentially always aims for A, so it's probably been an unspoken 
assumption between the people (at least with whom I've been) discussing 
this topic that this is what we'd want in Twisted.

Having answered that question, there's still the question of what 
operations to provide and what the interface to those operations is.

For the recorded efforts so far, see this wiki page:

http://twistedmatrix.com/trac/wiki/Specification/AsynchronousFileInputOutput

which has been sitting, largely untouched, for several years now, due to 
apparent lack of interest.

Rather than beginning the entire effort anew, I'd rather see additions 
to and criticisms of the work done already.

Jean-Paul



From glyph at twistedmatrix.com  Fri Jul 13 16:21:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Jul 2012 15:21:33 -0700
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
Message-ID: <570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>


On Jul 12, 2012, at 1:31 PM, Dan Milstein <dan at wingu.com> wrote:

> 'lo all,
> 
> I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).
> 
> When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?
> 
> To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:
> 
>    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
>    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
>    return d
> 
> What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  
> 
> Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?
> 

If you're interested in logging at the TCP connection level, have you considered moving this out of your Twisted process entirely and using some tool like Wireshark?  You could build something yourself by interposing transport objects that dump their data, but you'd have to build your own toolchain (command line tools, GUIs, etc) for actually examining the output, whereas existing protocol analysis tools would just do that for you.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120713/28d46f45/attachment-0001.html>

From dynamicgl at gmail.com  Sat Jul 14 04:39:32 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 14 Jul 2012 18:39:32 +0800
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <4FFC6FB5.7040301@thieprojects.ch>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
Message-ID: <CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch> wrote:

> On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> > FWIW,  I have used Ampoule to great effect, but as JP points out it's
> hardly the only option. You're bound to end up with some measure of
> multiprocessing. Bear in mind that not all workloads are well-suited for
> this kind of problem! Always measure before deciding to make your codebase
> that much more complicated :)
> >
> >
> > cheers
> > lvh
> >
> >
> >
> > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com wrote:
> >
> >> On 03:14 pm, augustocaringi at gmail.com wrote:
> >>> Hi,
> >>>
> >>>    I'm researching the best way to implement/use a Twisted-based
> >>> server in a multicore environment...
> >>>
> >>>    There is the Ampoule project, that I realize is considered the
> >>> best way to do that. Right?
> >>
> >> It's a way.  "Best" depends on the details and goals of the project.
> >>
> >> Here's a stackoverflow question/answer on basically the same topic.  In
> >> particular, it specifically answers the question of a listening port
> >> shared between multiple processes and gives examples of how to do this:
> >>
> >>   http://bit.ly/MiCHtQ
> >>
> >> Jean-Paul
> >>>    I'm also reading about the internals of Nginx HTTP server. This
> >>> server utilizes the same reactor pattern of Twisted (epoll based)...
> >>>
> >>>    "What resulted is a modular, event-driven, asynchronous,
> >>> single-threaded, non-blocking architecture which became the foundation
> >>> of nginx code." http://www.aosabook.org/en/nginx.html
> >>>
> >>>    But to maximize the use of processors in a multicore environment,
> >>> Nginx do this:
> >>>
> >>>    "nginx doesn't spawn a process or thread for every connection.
> >>> Instead, worker processes accept new requests from a shared "listen"
> >>> socket and execute a highly efficient run-loop inside each worker to
> >>> process thousands of connections per worker"
> >>>
> >>>    My question: There is something similar in Twisted? Or do you
> >>> think that is easy to implement something like that?
> >>>
> >>>    Thanks!
> >>>
> >>> --
> >>> Augusto Mecking Caringi
> We observed really great scaling on multi cores with moving the
> application part either to ampoule for PDF production or in the other
> case I wrote an implementation of self regulating process pool based on
> spread, leaving only the serving to twisted in both cases.
>
> With handing work out to other processes you get another benefit which
> is isolation of python, which is the only way to use a package, like
> reportlab which survives no sort of reentrancy, for a webservice.
>
> Werner
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi Werner

       I want to know whether you have experienced any serious bug with
ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120714/f3fca3c5/attachment.html>

From werner at thieprojects.ch  Sat Jul 14 11:38:16 2012
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 14 Jul 2012 07:38:16 -1000
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
	<CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
Message-ID: <5001AE88.2090504@thieprojects.ch>

On 7/14/12 12:39 AM, gelin yan wrote:
>
>
> On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch
> <mailto:werner at thieprojects.ch>> wrote:
>
>     On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
>      > FWIW,  I have used Ampoule to great effect, but as JP points out
>     it's hardly the only option. You're bound to end up with some
>     measure of multiprocessing. Bear in mind that not all workloads are
>     well-suited for this kind of problem! Always measure before deciding
>     to make your codebase that much more complicated :)
>      >
>      >
>      > cheers
>      > lvh
>      >
>      >
>      >
>      > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com
>     <mailto:exarkun at twistedmatrix.com> wrote:
>      >
>      >> On 03:14 pm, augustocaringi at gmail.com
>     <mailto:augustocaringi at gmail.com> wrote:
>      >>> Hi,
>      >>>
>      >>>    I'm researching the best way to implement/use a Twisted-based
>      >>> server in a multicore environment...
>      >>>
>      >>>    There is the Ampoule project, that I realize is considered the
>      >>> best way to do that. Right?
>      >>
>      >> It's a way.  "Best" depends on the details and goals of the project.
>      >>
>      >> Here's a stackoverflow question/answer on basically the same
>     topic.  In
>      >> particular, it specifically answers the question of a listening port
>      >> shared between multiple processes and gives examples of how to
>     do this:
>      >>
>      >> http://bit.ly/MiCHtQ
>      >>
>      >> Jean-Paul
>      >>>    I'm also reading about the internals of Nginx HTTP server. This
>      >>> server utilizes the same reactor pattern of Twisted (epoll
>     based)...
>      >>>
>      >>>    "What resulted is a modular, event-driven, asynchronous,
>      >>> single-threaded, non-blocking architecture which became the
>     foundation
>      >>> of nginx code." http://www.aosabook.org/en/nginx.html
>      >>>
>      >>>    But to maximize the use of processors in a multicore
>     environment,
>      >>> Nginx do this:
>      >>>
>      >>>    "nginx doesn't spawn a process or thread for every connection.
>      >>> Instead, worker processes accept new requests from a shared
>     "listen"
>      >>> socket and execute a highly efficient run-loop inside each
>     worker to
>      >>> process thousands of connections per worker"
>      >>>
>      >>>    My question: There is something similar in Twisted? Or do you
>      >>> think that is easy to implement something like that?
>      >>>
>      >>>    Thanks!
>      >>>
>      >>> --
>      >>> Augusto Mecking Caringi
>     We observed really great scaling on multi cores with moving the
>     application part either to ampoule for PDF production or in the other
>     case I wrote an implementation of self regulating process pool based on
>     spread, leaving only the serving to twisted in both cases.
>
>     With handing work out to other processes you get another benefit which
>     is isolation of python, which is the only way to use a package, like
>     reportlab which survives no sort of reentrancy, for a webservice.
>
>     Werner
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Hi Werner
>
>         I want to know whether you have experienced any serious bug with
> ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.

Hi gelin

Python 2.7.1 Stackless 3.1b3 060516 (release27-maint, Aug  9 2011, 
02:32:21)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
 >>> import ampoule
 >>> ampoule.__version__
'0.2.0'
 >>> import twisted
 >>> twisted.__version__
'12.0.0'

sitting in production now for almost six month, a webservice for 
template based PDF production with reportlab & z3c.rml.

The only maintenance I do is creating more templates, never done a 
restart so far, logs are clean.

As painless as one could wish for

Werner



From exarkun at twistedmatrix.com  Sat Jul 14 22:05:36 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jul 2012 04:05:36 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1342325136.73.773414462@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120715/bf31d149/attachment.html>

From dynamicgl at gmail.com  Sun Jul 15 08:52:05 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 15 Jul 2012 22:52:05 +0800
Subject: [Twisted-Python] Twisted in a multicore environment
In-Reply-To: <5001AE88.2090504@thieprojects.ch>
References: <CADFy_4GWmtnoxwLxE-pf=nNFnOFFdrj0Q_ZR-bV-DNwxqaxHHg@mail.gmail.com>
	<20120710160338.3214.1214668797.divmod.xquotient.33@localhost6.localdomain6>
	<FA938D32-F431-4BE7-9A70-A395F0A6F553@lvh.cc>
	<4FFC6FB5.7040301@thieprojects.ch>
	<CABkOF6Sj2xCYGSfykUiv+dfV3hvoPf0vjX0wkERzO=kPAmYpfA@mail.gmail.com>
	<5001AE88.2090504@thieprojects.ch>
Message-ID: <CABkOF6Q6KhesG1YaYBG=X2doAJZucn1biyp8orV5Qx=pidRoUw@mail.gmail.com>

On Sun, Jul 15, 2012 at 1:38 AM, Werner Thie <werner at thieprojects.ch> wrote:

> On 7/14/12 12:39 AM, gelin yan wrote:
> >
> >
> > On Wed, Jul 11, 2012 at 2:08 AM, Werner Thie <werner at thieprojects.ch
> > <mailto:werner at thieprojects.ch>> wrote:
> >
> >     On 7/10/12 6:17 AM, Laurens Van Houtven wrote:
> >      > FWIW,  I have used Ampoule to great effect, but as JP points out
> >     it's hardly the only option. You're bound to end up with some
> >     measure of multiprocessing. Bear in mind that not all workloads are
> >     well-suited for this kind of problem! Always measure before deciding
> >     to make your codebase that much more complicated :)
> >      >
> >      >
> >      > cheers
> >      > lvh
> >      >
> >      >
> >      >
> >      > On 10 Jul 2012, at 18:03, exarkun at twistedmatrix.com
> >     <mailto:exarkun at twistedmatrix.com> wrote:
> >      >
> >      >> On 03:14 pm, augustocaringi at gmail.com
> >     <mailto:augustocaringi at gmail.com> wrote:
> >      >>> Hi,
> >      >>>
> >      >>>    I'm researching the best way to implement/use a Twisted-based
> >      >>> server in a multicore environment...
> >      >>>
> >      >>>    There is the Ampoule project, that I realize is considered
> the
> >      >>> best way to do that. Right?
> >      >>
> >      >> It's a way.  "Best" depends on the details and goals of the
> project.
> >      >>
> >      >> Here's a stackoverflow question/answer on basically the same
> >     topic.  In
> >      >> particular, it specifically answers the question of a listening
> port
> >      >> shared between multiple processes and gives examples of how to
> >     do this:
> >      >>
> >      >> http://bit.ly/MiCHtQ
> >      >>
> >      >> Jean-Paul
> >      >>>    I'm also reading about the internals of Nginx HTTP server.
> This
> >      >>> server utilizes the same reactor pattern of Twisted (epoll
> >     based)...
> >      >>>
> >      >>>    "What resulted is a modular, event-driven, asynchronous,
> >      >>> single-threaded, non-blocking architecture which became the
> >     foundation
> >      >>> of nginx code." http://www.aosabook.org/en/nginx.html
> >      >>>
> >      >>>    But to maximize the use of processors in a multicore
> >     environment,
> >      >>> Nginx do this:
> >      >>>
> >      >>>    "nginx doesn't spawn a process or thread for every
> connection.
> >      >>> Instead, worker processes accept new requests from a shared
> >     "listen"
> >      >>> socket and execute a highly efficient run-loop inside each
> >     worker to
> >      >>> process thousands of connections per worker"
> >      >>>
> >      >>>    My question: There is something similar in Twisted? Or do you
> >      >>> think that is easy to implement something like that?
> >      >>>
> >      >>>    Thanks!
> >      >>>
> >      >>> --
> >      >>> Augusto Mecking Caringi
> >     We observed really great scaling on multi cores with moving the
> >     application part either to ampoule for PDF production or in the other
> >     case I wrote an implementation of self regulating process pool based
> on
> >     spread, leaving only the serving to twisted in both cases.
> >
> >     With handing work out to other processes you get another benefit
> which
> >     is isolation of python, which is the only way to use a package, like
> >     reportlab which survives no sort of reentrancy, for a webservice.
> >
> >     Werner
> >
> >     _______________________________________________
> >     Twisted-Python mailing list
> >     Twisted-Python at twistedmatrix.com
> >     <mailto:Twisted-Python at twistedmatrix.com>
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > Hi Werner
> >
> >         I want to know whether you have experienced any serious bug with
> > ampoule? What version of ampoule did you use? Is it 0.2.0? Thanks.
>
> Hi gelin
>
> Python 2.7.1 Stackless 3.1b3 060516 (release27-maint, Aug  9 2011,
> 02:32:21)
> [GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
> Type "help", "copyright", "credits" or "license" for more information.
>  >>> import ampoule
>  >>> ampoule.__version__
> '0.2.0'
>  >>> import twisted
>  >>> twisted.__version__
> '12.0.0'
>
> sitting in production now for almost six month, a webservice for
> template based PDF production with reportlab & z3c.rml.
>
> The only maintenance I do is creating more templates, never done a
> restart so far, logs are clean.
>
> As painless as one could wish for
>
> Werner
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi Werner

     Thanks for your valuable info. It looks like you are using stackless
python with twisted. Have you taken any benefit from both of them?
Stackless is awesome but I have no idea what is the better way to work with
twisted. Thanks.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120715/02fdfb35/attachment.html>

From dan at wingu.com  Mon Jul 16 07:40:51 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 16 Jul 2012 09:40:51 -0400
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
Message-ID: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>

To be clear: my current interest is really just doing this during unit tests/ongoing development (e.g. not diagnosing prod issues, where Wireshark would make plenty of sense).  So something integrated into Twisted feels natural.

That said, is the unit test pattern I'm seeing in the mail/test/test_imap.py module atypical?  Most of the doc'd examples for trial don't seem to be using loopbackTCP, so much as directly writing to lineReceived or something similar.  It's only because these tests are doing end-to-end things, by way of constructing both an IMAP server and client, and hooking them up, that I'm in this situation.

-D

On Jul 13, 2012, at 6:21 PM, Glyph wrote:

> 
> On Jul 12, 2012, at 1:31 PM, Dan Milstein <dan at wingu.com> wrote:
> 
>> 'lo all,
>> 
>> I've been doing some work with the twisted.mail.imap4 module, and its associated unit tests (in order to learn the code more, I'm tackling a few of the outstanding tickets).
>> 
>> When running those tests, I'd often like to log all the server/client interaction.  I managed to do so by way of hacking the code in twisted.protocols.loopback, but that feels pretty wrong.  What's a good way to get all the interaction logged?
>> 
>> To be more specific, the tests in question (e.g. test_imap.NewFetchTestCase), do a lot of:
>> 
>>    d = loopback.loopbackTCP(self.server, self.client, noisy=False)
>>    d.addCallback(lambda x : self.assertEqual(self.result, self.expected))
>>    return d
>> 
>> What's a Good Way to get all the traffic going over that loopback logged?  Setting noisy to True merely gets it to log some protocol startup/teardown-type messages.  
>> 
>> Or: given that I've figured out how to hack loopback.lookupbackTCP, if there's general utility, I can certainly add a keyword arg to trigger logging of all messages, e.g. logAll=False (I'm trying to find something which feels meaningfully different from 'noisy', because it would seem Very Wrong Indeed to make noisy suddenly produce vastly more log output).  Is that something people might be interested in?
>> 
> 
> If you're interested in logging at the TCP connection level, have you considered moving this out of your Twisted process entirely and using some tool like Wireshark?  You could build something yourself by interposing transport objects that dump their data, but you'd have to build your own toolchain (command line tools, GUIs, etc) for actually examining the output, whereas existing protocol analysis tools would just do that for you.
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120716/8edd22d9/attachment-0001.html>

From itamar at itamarst.org  Mon Jul 16 08:06:57 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 16 Jul 2012 10:06:57 -0400
Subject: [Twisted-Python] How to best log server/client interactions
 from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <50042001.9000702@itamarst.org>

On 07/16/2012 09:40 AM, Dan Milstein wrote:
> To be clear: my current interest is really just doing this during unit 
> tests/ongoing development (e.g. not diagnosing prod issues, where 
> Wireshark would make plenty of sense).  So something integrated into 
> Twisted feels natural.
>
> That said, is the unit test pattern I'm seeing in the 
> mail/test/test_imap.py module atypical?  Most of the doc'd examples 
> for trial don't seem to be using loopbackTCP, so much as directly 
> writing to lineReceived or something similar.  It's only because these 
> tests are doing end-to-end things, by way of constructing both an IMAP 
> server and client, and hooking them up, that I'm in this situation.
>
twisted.test.proto_helpers.StringTransport is handy for having an 
in-memory transport you control. loopbackAsync makes it less easy to see 
the bytes, but gives you more control than loopbackTCP, since you can 
determine policies about how bytes are delivered (e.g. there's a 
one-byte-at-a-time policy IIRC).



From exarkun at twistedmatrix.com  Mon Jul 16 11:23:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Jul 2012 17:23:54 -0000
Subject: [Twisted-Python] How to best log server/client interactions
 from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <20120716172354.3759.1951085493.divmod.xquotient.241@localhost6.localdomain6>

On 01:40 pm, dan at wingu.com wrote:
>To be clear: my current interest is really just doing this during unit 
>tests/ongoing development (e.g. not diagnosing prod issues, where 
>Wireshark would make plenty of sense).  So something integrated into 
>Twisted feels natural.
>
>That said, is the unit test pattern I'm seeing in the 
>mail/test/test_imap.py module atypical?  Most of the doc'd examples for 
>trial don't seem to be using loopbackTCP, so much as directly writing 
>to lineReceived or something similar.  It's only because these tests 
>are doing end-to-end things, by way of constructing both an IMAP server 
>and client, and hooking them up, that I'm in this situation.


Most of the tests in twisted/mail/test/test_imap.py were written with a 
very limited understanding of good unit testing practices.  I would not 
recommend emulating them.

Jean-Paul



From glyph at twistedmatrix.com  Mon Jul 16 11:34:16 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 16 Jul 2012 10:34:16 -0700
Subject: [Twisted-Python] How to best log server/client interactions
	from a test?
In-Reply-To: <23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
References: <EB454F67-CEBD-4137-9794-4EFA432A5774@wingu.com>
	<570E7322-0A48-4D78-929C-F9D9437FE57F@twistedmatrix.com>
	<23FA91AD-F486-42E5-8346-DE9F8E53639B@wingu.com>
Message-ID: <84F07307-9A7C-483E-8A4C-6FE6BE940FAC@twistedmatrix.com>


Le Jul 16, 2012 à 6:40 AM, Dan Milstein <dan at wingu.com> a écrit :

> To be clear: my current interest is really just doing this during unit tests/ongoing development (e.g. not diagnosing prod issues, where Wireshark would make plenty of sense).  So something integrated into Twisted feels natural.
> 
> That said, is the unit test pattern I'm seeing in the mail/test/test_imap.py module atypical?  Most of the doc'd examples for trial don't seem to be using loopbackTCP, so much as directly writing to lineReceived or something similar.  It's only because these tests are doing end-to-end things, by way of constructing both an IMAP server and client, and hooking them up, that I'm in this situation.

Sorry, you're quite right that I misunderstood your question.

As Jean-Paul already said, this test code is quite old.

If you want to be diagnosing what's going on in a test, writing a (temporary) IProtocol or ITransport wrapper that has some print statements in it can be a good way to go.  Or as Itamar suggested, using StringTransport() and printing its contents.  Definitely using StringTransport would be preferred for anything you'd actually want to keep around in a test if you want to assert about what's being read or written, and not just look at a dump of the output.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120716/60aa81e8/attachment.html>

From drsalists at gmail.com  Mon Jul 16 14:30:55 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 20:30:55 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
Message-ID: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>

I'm continuing to have some stuck deferreds - deferredlists probably.

I had that graphviz/twisted graphing thing working for some test code, but
upon applying it to some deferreds that're getting stuck in some production
code, I didn't get the same pleasing output - not entirely surprising.
Part of the issue is that some of the deferreds have already disappeared
(which in a way is a good thing - less to sift through to find what's
left), and part of the matter is I believe there are some custom __repr__'s
in the code that are causing my graph code to discover violated assumptions.

Anyway, what I got, greatly truncated on the right, looks like:
  Deferred_at_0x46edcf8 ->
bound_method_DeferredList._cbDeferred_of_DeferredList_at_0x46ed3b0_current_result
  Deferred_at_0x46edcf8 ->
bound_method_DeferredList._cbDeferred_of_DeferredList_at_0x46ed3b0_current_result

To the right of those two lines appear to be a huge dictionary dump - and I
do mean huge.

Grep'ing through the code, I see no "current.result" matches.  There is
however a "current\.result" in the twisted code.

...so... I suppose I'm looking for a deferred (list) at a specific id(),
though that's a little fiddly to catch.

Can anyone think of other ways of getting to the bottom of this?  Perhaps
some field in a deferred or deferredList I can introspect to get better
specifics?

Is monkey patching an identifier of some sort into each deferred
reasonable?  The intent would be to make it easier to match up the
lingering DeferredLists with the place they're created.

TIA!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120716/d359614f/attachment.html>

From andrew at bemusement.org  Mon Jul 16 15:54:03 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 17 Jul 2012 07:54:03 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
Message-ID: <20120716215402.GE6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
[…]
> Can anyone think of other ways of getting to the bottom of this?  Perhaps
> some field in a deferred or deferredList I can introspect to get better
> specifics?
> 
> Is monkey patching an identifier of some sort into each deferred
> reasonable?  The intent would be to make it easier to match up the
> lingering DeferredLists with the place they're created.

That's the sort of thing that calling twisted.internet.defer.setDebugging(True)
is meant to help with.  If you turn that on, you can probably introspect the
stuff it creates and use that in your debugging tool.  (That's a bit ugly, but
probably not significantly worse than introspecting other private attributes
Deferred.)

-Andrew.



From drsalists at gmail.com  Mon Jul 16 17:09:14 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 23:09:14 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120716215402.GE6331@fuchsia.puzzling.org>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
Message-ID: <CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>

On Mon, Jul 16, 2012 at 9:54 PM, Andrew Bennetts <andrew at bemusement.org>wrote:

> Dan Stromberg wrote:
> […]
> > Can anyone think of other ways of getting to the bottom of this?  Perhaps
> > some field in a deferred or deferredList I can introspect to get better
> > specifics?
> >
> > Is monkey patching an identifier of some sort into each deferred
> > reasonable?  The intent would be to make it easier to match up the
> > lingering DeferredLists with the place they're created.
>
> That's the sort of thing that calling
> twisted.internet.defer.setDebugging(True)
> is meant to help with.  If you turn that on, you can probably introspect
> the
> stuff it creates and use that in your debugging tool.  (That's a bit ugly,
> but
> probably not significantly worse than introspecting other private
> attributes
> Deferred.)


I'm playing with twisted.internet.defer.setDebugging now.

Is there a corresponding function that can be used to produce its report?
If I use it in a program with an infinite loop, it seems like I never get
the report, but if I use it in a program with a finite length, I eventually
get a useful-looking report.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120716/f054e52c/attachment.html>

From andrew at bemusement.org  Mon Jul 16 17:20:23 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 17 Jul 2012 09:20:23 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
Message-ID: <20120716232023.GF6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
[…]
> I'm playing with twisted.internet.defer.setDebugging now.
> 
> Is there a corresponding function that can be used to produce its report?
> If I use it in a program with an infinite loop, it seems like I never get
> the report, but if I use it in a program with a finite length, I eventually
> get a useful-looking report.

It's triggered by garbage collection of a Deferred with an unhandled error.  So
you're at the mercy of when the garbage collector of your Python VM decides to
collect that object.

You could call yourDeferred._debugInfo._getDebugTracebacks() yourself, though,
if you don't mind (ab)using private attributes that might break without warning.

-Andrew.



From drsalists at gmail.com  Mon Jul 16 17:45:46 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Mon, 16 Jul 2012 23:45:46 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120716232023.GF6331@fuchsia.puzzling.org>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
Message-ID: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>

On Mon, Jul 16, 2012 at 11:20 PM, Andrew Bennetts <andrew at bemusement.org>wrote:

> Dan Stromberg wrote:
> […]
> > I'm playing with twisted.internet.defer.setDebugging now.
> >
> > Is there a corresponding function that can be used to produce its report?
> > If I use it in a program with an infinite loop, it seems like I never get
> > the report, but if I use it in a program with a finite length, I
> eventually
> > get a useful-looking report.
>
> It's triggered by garbage collection of a Deferred with an unhandled
> error.  So
> you're at the mercy of when the garbage collector of your Python VM
> decides to
> collect that object.
>
> You could call yourDeferred._debugInfo._getDebugTracebacks() yourself,
> though,
> if you don't mind (ab)using private attributes that might break without
> warning.


Strangely, this doesn't give the report until after the sleep finishes...
?

#!/usr/bin/python

# deferreds work fine without the reactor

import time

import twisted.internet.defer

twisted.internet.defer.setDebugging(True)

def functionReturningDeferred():
    return twisted.internet.defer.succeed('Some value')

d = functionReturningDeferred()
def printValue(value):
    print 'Yay, I got %r' % value
    return value
def second_callback(value):
    print 'still %r' % value
    return gen_error()
def third_callback(value):
    print 'and still %r' % value
    #raise AssertionError
    return value

def gen_error():
    return twisted.internet.defer.fail(AssertionError)


def got_error(value):
    print 'bad thing: %r' % value

d.addCallback(printValue)
d.addCallback(second_callback)
d.addCallback(third_callback)
d._debugInfo._getDebugTracebacks()
print
time.sleep(10)
#d.addErrback(got_error)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120716/10489572/attachment.html>

From bgurup.ndk at gmail.com  Tue Jul 17 04:42:34 2012
From: bgurup.ndk at gmail.com (Guru Prasad)
Date: Tue, 17 Jul 2012 16:12:34 +0530
Subject: [Twisted-Python] Twisted 12.0.0 - Facing Issue in SSL/TLS
	connection setup
Message-ID: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>

Hello All,

I am new to Twsited and I am facing SSL/TLS connection setup issue with
Twisted 12.0.0. Version of Ubuntu (unstable), I am using is: 12.10
During the SSL/TLS connection setup, there is ClientHello request from the
client and for this request there is no response from the server where
Twisted 12.0.0 is running.
I see only TCP FIN and RST sent by the server end for the ClientHello
request.

When I checked the syslog, I see below messages.

 Traceback (most recent call last):
:   File "/usr/lib/python2.7/dist-packages/twisted/python/log.py", line 84,
in callWithLogger
:     return callWithContext({"system": lp}, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/log.py", line 69,
in callWithContext
:     return context.call({ILogContext: newCtx}, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/context.py", line
118, in callWithContext
:     return self.currentContext().callWithContext(ctx, func, *args, **kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/python/context.py", line
81, in callWithContext
:     return func(*args,**kw)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py",
line 599, in _doReadOrWrite
:     self._disconnectSelectable(selectable, why, inRead)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py",
line 266, in _disconnectSelectable
:     selectable.connectionLost(failure.Failure(why))
:   File
"/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py",
line 328, in connectionLost
:     tcp.Server.connectionLost(self, reason)
:   File "/usr/lib/python2.7/dist-packages/twisted/internet/tcp.py", line
277, in connectionLost
:     protocol.connectionLost(reason)
:   File "/usr/lib/python2.7/dist-packages/twisted/web2/channel/http.py",
line 853, in connectionLost
:     self.readConnectionLost()
:   File "/usr/lib/python2.7/dist-packages/twisted/web2/channel/http.py",
line 842, in readConnectionLost
:     self.transport.loseConnection()
:   File
"/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py",
line 322, in loseConnection
:     tcp.Server.loseConnection(self, reason)
: TypeError: loseConnection() takes exactly 1 argument (2 given)

Anyone else has faced this issue, earlier?
I am not having any clue like what went wrong. Have I missed any of the
dependent packages required for Twisted 12.0.0?
Please help me to come out of this issue.

Best Regards,
bgurup
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120717/0cf93119/attachment-0001.html>

From itamar at itamarst.org  Tue Jul 17 06:28:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 17 Jul 2012 08:28:12 -0400
Subject: [Twisted-Python] Twisted 12.0.0 - Facing Issue in SSL/TLS
 connection setup
In-Reply-To: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>
References: <CADOz54hCNdwrh_uE-0NieDWV8cXC-Nn4LFeS7fiCRNctmKWRyA@mail.gmail.com>
Message-ID: <50055A5C.70001@itamarst.org>

On 07/17/2012 06:42 AM, Guru Prasad wrote:
> :   File 
> "/usr/local/lib/python2.7/dist-packages/gnutls/interfaces/twisted/__init__.py", 
> line 322, in loseConnection
> :     tcp.Server.loseConnection(self, reason)
> : TypeError: loseConnection() takes exactly 1 argument (2 given)
>
> Anyone else has faced this issue, earlier?
This is a bug in the gnutls package you are using, which appears to have 
relied on a private implementation detail of Twisted. So this is a bug 
in gnutls package, not Twisted, and you should file a report with them.

In the interim until they fix it, you might want to try Twisted's 
built-in SSL support, as documented here: 
twistedmatrix.com/documents/current/core/howto/ssl.html



From drsalists at gmail.com  Tue Jul 17 09:40:06 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 17 Jul 2012 15:40:06 +0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
Message-ID: <CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>

On Mon, Jul 16, 2012 at 11:45 PM, Dan Stromberg <drsalists at gmail.com> wrote:

>
> On Mon, Jul 16, 2012 at 11:20 PM, Andrew Bennetts <andrew at bemusement.org>wrote:
>
>> Dan Stromberg wrote:
>> […]
>> > I'm playing with twisted.internet.defer.setDebugging now.
>> >
>> > Is there a corresponding function that can be used to produce its
>> report?
>> > If I use it in a program with an infinite loop, it seems like I never
>> get
>> > the report, but if I use it in a program with a finite length, I
>> eventually
>> > get a useful-looking report.
>>
>> It's triggered by garbage collection of a Deferred with an unhandled
>> error.  So
>> you're at the mercy of when the garbage collector of your Python VM
>> decides to
>> collect that object.
>>
>> You could call yourDeferred._debugInfo._getDebugTracebacks() yourself,
>> though,
>> if you don't mind (ab)using private attributes that might break without
>> warning.
>
>
> Strangely, this doesn't give the report until after the sleep
> finishes...   ?
>
> It turned out that I needed to print  d._debugInfo._getDebugTracebacks(),
rather than just running d._debugInfo._getDebugTracebacks().

However, it always appears to print the debug tracebacks for the deferred
named - in this case, d.  It doesn't appear to be selecting the correct
deferred(s) to print.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120717/17627d45/attachment.html>

From mobilebackup77 at gmail.com  Tue Jul 17 10:25:38 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 17 Jul 2012 12:25:38 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
Message-ID: <CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>

The server I am using uses TLS SNI. Does getPage support this, or has
any plans in the near future to support this? Do any other python
packages (request/urllib3/...) support TLS SNI yet?

Also, is there a way to do HTTP CONNECT using twisted before I do the
SSL handshake. I think that should solve my problem.

Thanks,
--Ram


On Wed, Jul 4, 2012 at 5:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> Le Jul 4, 2012 à 1:19 PM, Me Myself <mobilebackup77 at gmail.com> a écrit :
>
> I know I need to isolate the bug from my project into a simple example
> that can illustrate the bug. Unfortunately, I'm not sure I've the time
> to do that right now.
>
>
> It's OK, any time you have the time to do it, we will be ready to handle the
> bug :).  Please just put it on a to-do list or something so that you don't
> forget.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From rowen at uw.edu  Tue Jul 17 10:25:37 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Tue, 17 Jul 2012 09:25:37 -0700
Subject: [Twisted-Python] A few simple questions
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
Message-ID: <rowen-95B82F.09253717072012@news.gmane.org>

In article 
<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg at mail.gmail.com>,
 Laurens Van Houtven <_ at lvh.cc> wrote:

> On Thursday, July 12, 2012, Russell E. Owen wrote:
> 
> > I'm adding Twisted support to some existing communication code and I
> > have a few questions which I hope are simple. I've been reading the API
> > documentation, but if the answers are there I'm missing them.
> >
> > What happens if one tries to write to a protocol.transport that is not
> > connected or in an error state? (I'm hoping that this case has defined
> > behavior and that it will raise an exception).
> 
> 
> Not connected usually means that protocol.transport is None
> 
> 
> >
> > Is there some way to query a protocol to see if it is in a good state
> > (connected and no errors)? I realize with callbacks this is not usually
> > necessary, but I have a case where it would be helpful (though I can
> > probably manage without it).
> 
> Can you elaborate on the case?

I've found that Twisted sometimes swallows errors unless I am extremely 
careful. I would like to be able to check a protocol to make sure it is 
operational (connected and happy) as a means of assuring that I've not 
missed an error.

> > When reading raw bytes, is there any way to get the bytes from the
> > protocol? I assume not: that if one wants to buffer the data one must do
> > that in the callback. If so, does Twisted provide a suitable buffer
> > class?
> 
> The protocol gets dataReceived called. What kind of buffering do you want
> to do and why? Would a simple StringIO suffice?

I read the LineReceiver code (should have done that before asking) and 
realize it's buffering using a simple string. I just rewrote that simple 
class to meet my needs and am quite happy.

-- Russell




From glyph at twistedmatrix.com  Tue Jul 17 12:20:56 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Jul 2012 11:20:56 -0700
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-95B82F.09253717072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
Message-ID: <DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>


On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:

>> Can you elaborate on the case?
> 
> I've found that Twisted sometimes swallows errors unless I am extremely 
> careful. I would like to be able to check a protocol to make sure it is 
> operational (connected and happy) as a means of assuring that I've not 
> missed an error.

This isn't really elaborating.

What error does Twisted swallow?  In what manner do you have to be "careful"?  What characterizes a protocol's "happiness" beyond its momentary connected-ness?  How would you "miss" an error?

Twisted is event-driven, so pretty much all the state changes you're interested in are delivered as events (method calls on your object).  If you are "missing" them because Twisted isn't calling them, that sounds like a really serious bug we should investigate.  If you're missing them for some other reason then you should just fix your code so it doesn't miss them any more :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120717/4fe4aaa3/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul 17 13:50:49 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 19:50:49 -0000
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
 Exception)
In-Reply-To: <CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
Message-ID: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>

On 04:25 pm, mobilebackup77 at gmail.com wrote:
>The server I am using uses TLS SNI. Does getPage support this, or has
>any plans in the near future to support this? Do any other python
>packages (request/urllib3/...) support TLS SNI yet?

Sure.  Just pass in an appropriately configured SSL context factory.

See the pyOpenSSL documentation for details on how to configure SNI.
>Also, is there a way to do HTTP CONNECT using twisted before I do the
>SSL handshake. I think that should solve my problem.

Twisted doesn't yet have any support for HTTP CONNECT.

Jean-Paul



From exarkun at twistedmatrix.com  Tue Jul 17 13:53:52 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 19:53:52 -0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
Message-ID: <20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>

On 03:40 pm, drsalists at gmail.com wrote:
>>
>>Strangely, this doesn't give the report until after the sleep
>>finishes...   ?

What's strange about that?  "time.sleep(10)" doesn't mean "immediately 
print out debug information".  It means "do not do anything at all in 
this program for around 10 seconds".
>>It turned out that I needed to print 
>>d._debugInfo._getDebugTracebacks(),
>rather than just running d._debugInfo._getDebugTracebacks().
>
>However, it always appears to print the debug tracebacks for the 
>deferred
>named - in this case, d.  It doesn't appear to be selecting the correct
>deferred(s) to print.

All it does is print the debug information for the Deferred you got the 
_debugInfo attribute from.  It doesn't understand your code or know 
where the source of your error is.  It's just a function that gives you 
the stack traces associated with a particular Deferred.

If you want a different stack trace, call the method on a _debugInfo 
from a different Deferred object.

Jean-Paul



From mobilebackup77 at gmail.com  Tue Jul 17 14:01:41 2012
From: mobilebackup77 at gmail.com (Me Myself)
Date: Tue, 17 Jul 2012 16:01:41 -0400
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>

Can you please show me an example whenever you get a chance?

Thanks,
--Ram.


On Tue, Jul 17, 2012 at 3:50 PM,  <exarkun at twistedmatrix.com> wrote:
> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>>The server I am using uses TLS SNI. Does getPage support this, or has
>>any plans in the near future to support this? Do any other python
>>packages (request/urllib3/...) support TLS SNI yet?
>
> Sure.  Just pass in an appropriately configured SSL context factory.
>
> See the pyOpenSSL documentation for details on how to configure SNI.
>>Also, is there a way to do HTTP CONNECT using twisted before I do the
>>SSL handshake. I think that should solve my problem.
>
> Twisted doesn't yet have any support for HTTP CONNECT.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Tue Jul 17 14:02:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Jul 2012 20:02:22 -0000
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-95B82F.09253717072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
Message-ID: <20120717200222.5206.256737917.divmod.xquotient.22@localhost6.localdomain6>

On 04:25 pm, rowen at uw.edu wrote:
>In article
><CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg at mail.gmail.com>,
>Laurens Van Houtven <_ at lvh.cc> wrote:
>>On Thursday, July 12, 2012, Russell E. Owen wrote:
>>
>> > I'm adding Twisted support to some existing communication code and I
>> > have a few questions which I hope are simple. I've been reading the 
>>API
>> > documentation, but if the answers are there I'm missing them.
>> >
>> > What happens if one tries to write to a protocol.transport that is 
>>not
>> > connected or in an error state? (I'm hoping that this case has 
>>defined
>> > behavior and that it will raise an exception).
>>
>>
>>Not connected usually means that protocol.transport is None
>>
>>
>> >
>> > Is there some way to query a protocol to see if it is in a good 
>>state
>> > (connected and no errors)? I realize with callbacks this is not 
>>usually
>> > necessary, but I have a case where it would be helpful (though I can
>> > probably manage without it).
>>
>>Can you elaborate on the case?
>
>I've found that Twisted sometimes swallows errors unless I am extremely
>careful. I would like to be able to check a protocol to make sure it is
>operational (connected and happy) as a means of assuring that I've not
>missed an error.

Instead, make sure you add errbacks to all your Deferreds.

Twisted does not swallow errors.  However, a Deferred (that your 
application keeps a reference to, preventing it from being garbage 
collected) that has a Failure result and no more errbacks will sit on 
that Failure until you let the Deferred get garbage collected or add an 
errback to the Deferred.

Jean-Paul
>> > When reading raw bytes, is there any way to get the bytes from the
>> > protocol? I assume not: that if one wants to buffer the data one 
>>must do
>> > that in the callback. If so, does Twisted provide a suitable buffer
>> > class?
>>
>>The protocol gets dataReceived called. What kind of buffering do you 
>>want
>>to do and why? Would a simple StringIO suffice?
>
>I read the LineReceiver code (should have done that before asking) and
>realize it's buffering using a simple string. I just rewrote that 
>simple
>class to meet my needs and am quite happy.
>
>-- Russell
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From justin.venus at gmail.com  Tue Jul 17 14:23:58 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Tue, 17 Jul 2012 15:23:58 -0500
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
	<CAMwwwG==Z6BUBmj0NfGt6tzM7UMHnXDR3jXg1511bvZDMd=nQg@mail.gmail.com>
Message-ID: <CACL=7avvZdsqnUxMTENAs0bWuK_gGdYiEHQfaVm33o1pWnbOZg@mail.gmail.com>

Ram,

Have you checked out the ssl[1] howto?  The section on "Client with
certificates" gives an example on how to make your own SSL Context
Class.

1) http://twistedmatrix.com/documents/current/core/howto/ssl.html

Regards,

Justin Venus

On Tue, Jul 17, 2012 at 3:01 PM, Me Myself <mobilebackup77 at gmail.com> wrote:
> Can you please show me an example whenever you get a chance?
>
> Thanks,
> --Ram.
>
>
> On Tue, Jul 17, 2012 at 3:50 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>>>The server I am using uses TLS SNI. Does getPage support this, or has
>>>any plans in the near future to support this? Do any other python
>>>packages (request/urllib3/...) support TLS SNI yet?
>>
>> Sure.  Just pass in an appropriately configured SSL context factory.
>>
>> See the pyOpenSSL documentation for details on how to configure SNI.
>>>Also, is there a way to do HTTP CONNECT using twisted before I do the
>>>SSL handshake. I think that should solve my problem.
>>
>> Twisted doesn't yet have any support for HTTP CONNECT.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Justin Venus
justin.venus at gmail.com



From glyph at twistedmatrix.com  Tue Jul 17 16:46:49 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Jul 2012 15:46:49 -0700
Subject: [Twisted-Python] bug or my code? (getPage + Twisted Webserver =
	Exception)
In-Reply-To: <20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
References: <CAMwwwGkYMbhOc8HPs8tr4vR32QB_ELks7D1Om5yM517wX3PFiw@mail.gmail.com>
	<20120704110945.4071.1281807867.divmod.xquotient.10@localhost6.localdomain6>
	<CAMwwwGmDpDmEtWE5RRUjg115ZCoE43HVhUM2LwO_=VYhn1a-xQ@mail.gmail.com>
	<464F4FE2-4813-4071-81BB-9B3A5EBCC310@twistedmatrix.com>
	<CAMwwwGnUfv+LY2U+_65WQm3XTLkqHOv2RxGNrjaZOz-Lxk=qpQ@mail.gmail.com>
	<20120717195049.5206.1677255658.divmod.xquotient.16@localhost6.localdomain6>
Message-ID: <8BB88E9F-FCF8-4616-A471-58B81CA8D433@twistedmatrix.com>


On Jul 17, 2012, at 12:50 PM, exarkun at twistedmatrix.com wrote:

> On 04:25 pm, mobilebackup77 at gmail.com wrote:
>> The server I am using uses TLS SNI. Does getPage support this, or has
>> any plans in the near future to support this? Do any other python
>> packages (request/urllib3/...) support TLS SNI yet?
> 
> Sure.  Just pass in an appropriately configured SSL context factory.
> 
> See the pyOpenSSL documentation for details on how to configure SNI.

Also, if you're interested in making some higher-level wrappers for Twisted, it would be great to improve twisted.web.client.Agent to support SNI for HTTPS URLs.  This is the server-side ticket but it has links to a few client-side things: <http://twistedmatrix.com/trac/ticket/4887>.

-g




From drsalists at gmail.com  Tue Jul 17 20:24:21 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Tue, 17 Jul 2012 19:24:21 -0700
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>

On Tue, Jul 17, 2012 at 12:53 PM, <exarkun at twistedmatrix.com> wrote:

> On 03:40 pm, drsalists at gmail.com wrote:
> >>
> >>Strangely, this doesn't give the report until after the sleep
> >>finishes...   ?
>
> What's strange about that?  "time.sleep(10)" doesn't mean "immediately
> print out debug information".
>
Well, if you read the whole thread, I believe you'll see that this was
intended to print some debugging information without needing to wait for
the process to terminate.


>
> >However, it always appears to print the debug tracebacks for the
> >deferred
> >named - in this case, d.  It doesn't appear to be selecting the correct
> >deferred(s) to print.
>
>
> All it does is print the debug information for the Deferred you got the
> _debugInfo attribute from.

Um, yes,  I was kind of saying that.  Sadly though, this renders it
ineffective for the purpose it was suggested for.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120717/606aaaa1/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Jul 18 04:32:54 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Jul 2012 10:32:54 -0000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
Message-ID: <20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>

On 02:24 am, drsalists at gmail.com wrote:
>On Tue, Jul 17, 2012 at 12:53 PM, <exarkun at twistedmatrix.com> wrote:
>>On 03:40 pm, drsalists at gmail.com wrote:
>> >>
>> >>Strangely, this doesn't give the report until after the sleep
>> >>finishes...   ?
>>
>>What's strange about that?  "time.sleep(10)" doesn't mean "immediately
>>print out debug information".
>Well, if you read the whole thread, I believe you'll see that this was
>intended to print some debugging information without needing to wait 
>for
>the process to terminate.

I don't think anything in the thread suggested that this approach will 
circumvent a time.sleep(10) call.  In any case, it won't.  Why is there 
a time.sleep(10) call there at all?  Does it do anything except cause a 
problem?

Jean-Paul
>
>>
>> >However, it always appears to print the debug tracebacks for the
>> >deferred
>> >named - in this case, d.  It doesn't appear to be selecting the 
>>correct
>> >deferred(s) to print.
>>
>>
>>All it does is print the debug information for the Deferred you got 
>>the
>>_debugInfo attribute from.
>
>Um, yes,  I was kind of saying that.  Sadly though, this renders it
>ineffective for the purpose it was suggested for.



From rowen at uw.edu  Wed Jul 18 11:01:06 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 10:01:06 -0700
Subject: [Twisted-Python] unit testing question: twisted with tk
Message-ID: <rowen-FB207E.10010618072012@news.gmane.org>

I have a bit of code that combines twisted with Tkinter
and now I'd like to write some unittests for it.

I can't seem to figure out how to get TwistedTrial to handle this case. 
I've written a unit test like this:

from twisted.trial import unittest
from twisted.internet.defer import Deferred
import twisted.internet.tksupport
root = Tkinter.Tk()
twisted.internet.tksupport.install(root)
from twisted.internet import reactor

class TestTkSocket(unittest.TestCase):
    def test...(...):
        ....

the one test so far returns a deferred and calls errback on that 
deferred if the test fails, and callback if it succeeds. When I run the 
unit test with trial I get this error error:
twisted.trial.util.DirtyReactorAggregateError

I have an identical unit test for a pure-twisted version of my 
communication code (no Tk) and it works fine.

I am guessing the problem is cleanly getting rid of Tkinter's root at 
the end of the test and disentangling it from the reactor, but I have no 
idea how to do that.

Any suggestions on how to proceed (e.g. a way to get TwistedTrial to 
work, or a good alternative)?

-- Russell




From rowen at uw.edu  Wed Jul 18 11:31:36 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 10:31:36 -0700
Subject: [Twisted-Python] A few simple questions
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
Message-ID: <rowen-09AE70.10313618072012@news.gmane.org>

In article <DB49C8B0-451D-46E4-9B3B-58519CDAA75A at twistedmatrix.com>,
 Glyph <glyph at twistedmatrix.com> wrote:

> On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:
> 
> >> Can you elaborate on the case?
> > 
> > I've found that Twisted sometimes swallows errors unless I am extremely 
> > careful. I would like to be able to check a protocol to make sure it is 
> > operational (connected and happy) as a means of assuring that I've not 
> > missed an error.
> 
> This isn't really elaborating.
> 
> What error does Twisted swallow?  In what manner do you have to be "careful"? 
>  What characterizes a protocol's "happiness" beyond its momentary 
> connected-ness?  How would you "miss" an error?
> 
> Twisted is event-driven, so pretty much all the state changes you're 
> interested in are delivered as events (method calls on your object).  If you 
> are "missing" them because Twisted isn't calling them, that sounds like a 
> really serious bug we should investigate.  If you're missing them for some 
> other reason then you should just fix your code so it doesn't miss them any 
> more :).

Regarding swallowing errors:

I'm not claiming Twisted has bugs in this area (though I found and 
reported one obscure case that may be a bug: errors in  tk command 
::tk::Mac::quit are silently ignored).

However, I found it rather easy to make coding errors that cause Twisted 
to not report errors. I have heard the same complaint from colleagues.

At this point I think my code is robust, though I will be more confident 
once I finish my unit tests.

If there is a "best practices for error handling" document I'd love to 
read it. I found an overview of deferreds that was helpful. It pointed 
out that addCallbacks is not the same as addCallback followed by 
addErrback and I'm not sure I'm handling the difference correctly. Right 
now I use addCallbacks(callback, errback). This does not call the 
errback if the callback fails. I do this intentionally because I want 
the errback to focus on problems with the connection, not my reaction to 
it, and the default error handler seems to report errors in the 
callback, which is fine.

Regarding state:

I'm used to event-driven frameworks that both offer callbacks and the 
ability to query state. I find it helpful for reporting errors as soon 
as possible (e.g. before writing check if the socket is connected; raise 
an exception if not). For a TCP/IP socket, I view a socket as having 
these states:
- connecting
- connected
- disconnecting (with associated reason)
- disconnected (with associated reason)
TCP/IP Servers have a similar set of states, with connected -> listening

However, it's certainly true that being able to query state is not 
essential; callbacks suffice.

-- Russell




From p.mayers at imperial.ac.uk  Wed Jul 18 11:36:08 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Jul 2012 18:36:08 +0100
Subject: [Twisted-Python] unit testing question: twisted with tk
In-Reply-To: <rowen-FB207E.10010618072012@news.gmane.org>
References: <rowen-FB207E.10010618072012@news.gmane.org>
Message-ID: <5006F408.2080108@imperial.ac.uk>

On 07/18/2012 06:01 PM, Russell E. Owen wrote:
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)

Does the TK support work like other reactors i.e. it must be the very 
first thing in the python file, before all other Twisted imports?




From naveenm at enthought.com  Wed Jul 18 11:43:59 2012
From: naveenm at enthought.com (Naveen Michaud-Agrawal)
Date: Wed, 18 Jul 2012 13:43:59 -0400
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-09AE70.10313618072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
	<rowen-09AE70.10313618072012@news.gmane.org>
Message-ID: <CAL7GHvcwtso-V2uPyD0WmxH5Opk6chhUHzTAonaem9Ze8WWVKA@mail.gmail.com>

If you haven't seen it already, Dave Peticolas has a great introduction to
twisted (it's a bit long, but well worth it) at
http://krondo.com/?page_id=1327. In particular, until I saw this graphic on
callback/errback chaining (
http://krondo.com/blog/wp-content/uploads/2009/10/deferred-2.png), I never
properly understood what twisted was doing (linked from this
http://krondo.com/?p=1825).

Naveen

On Wed, Jul 18, 2012 at 1:31 PM, Russell E. Owen <rowen at uw.edu> wrote:

> In article <DB49C8B0-451D-46E4-9B3B-58519CDAA75A at twistedmatrix.com>,
>  Glyph <glyph at twistedmatrix.com> wrote:
>
> > On Jul 17, 2012, at 9:25 AM, Russell E. Owen <rowen at uw.edu> wrote:
> >
> > >> Can you elaborate on the case?
> > >
> > > I've found that Twisted sometimes swallows errors unless I am extremely
> > > careful. I would like to be able to check a protocol to make sure it is
> > > operational (connected and happy) as a means of assuring that I've not
> > > missed an error.
> >
> > This isn't really elaborating.
> >
> > What error does Twisted swallow?  In what manner do you have to be
> "careful"?
> >  What characterizes a protocol's "happiness" beyond its momentary
> > connected-ness?  How would you "miss" an error?
> >
> > Twisted is event-driven, so pretty much all the state changes you're
> > interested in are delivered as events (method calls on your object).  If
> you
> > are "missing" them because Twisted isn't calling them, that sounds like a
> > really serious bug we should investigate.  If you're missing them for
> some
> > other reason then you should just fix your code so it doesn't miss them
> any
> > more :).
>
> Regarding swallowing errors:
>
> I'm not claiming Twisted has bugs in this area (though I found and
> reported one obscure case that may be a bug: errors in  tk command
> ::tk::Mac::quit are silently ignored).
>
> However, I found it rather easy to make coding errors that cause Twisted
> to not report errors. I have heard the same complaint from colleagues.
>
> At this point I think my code is robust, though I will be more confident
> once I finish my unit tests.
>
> If there is a "best practices for error handling" document I'd love to
> read it. I found an overview of deferreds that was helpful. It pointed
> out that addCallbacks is not the same as addCallback followed by
> addErrback and I'm not sure I'm handling the difference correctly. Right
> now I use addCallbacks(callback, errback). This does not call the
> errback if the callback fails. I do this intentionally because I want
> the errback to focus on problems with the connection, not my reaction to
> it, and the default error handler seems to report errors in the
> callback, which is fine.
>
> Regarding state:
>
> I'm used to event-driven frameworks that both offer callbacks and the
> ability to query state. I find it helpful for reporting errors as soon
> as possible (e.g. before writing check if the socket is connected; raise
> an exception if not). For a TCP/IP socket, I view a socket as having
> these states:
> - connecting
> - connected
> - disconnecting (with associated reason)
> - disconnected (with associated reason)
> TCP/IP Servers have a similar set of states, with connected -> listening
>
> However, it's certainly true that being able to query state is not
> essential; callbacks suffice.
>
> -- Russell
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120718/8ee7aba5/attachment.html>

From itamar at itamarst.org  Wed Jul 18 12:11:52 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 14:11:52 -0400
Subject: [Twisted-Python] unit testing question: twisted with tk
In-Reply-To: <rowen-FB207E.10010618072012@news.gmane.org>
References: <rowen-FB207E.10010618072012@news.gmane.org>
Message-ID: <5006FC68.8050307@itamarst.org>

On 07/18/2012 01:01 PM, Russell E. Owen wrote:
> I have a bit of code that combines twisted with Tkinter
> and now I'd like to write some unittests for it.
>
> I can't seem to figure out how to get TwistedTrial to handle this case.
> I've written a unit test like this:
>
> from twisted.trial import unittest
> from twisted.internet.defer import Deferred
> import twisted.internet.tksupport
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)
> from twisted.internet import reactor
>
> class TestTkSocket(unittest.TestCase):
>      def test...(...):
>          ....
>
> the one test so far returns a deferred and calls errback on that
> deferred if the test fails, and callback if it succeeds. When I run the
> unit test with trial I get this error error:
> twisted.trial.util.DirtyReactorAggregateError

The problem is that setting up tk support involves a repeatedly 
scheduled event, which means it's in the reactor causing that warning. 
Make sure you call tksupport.uninstall() at the end of each test, by 
either putting in tearDown or doing self.addCleanup(tksupport.uninstall).



From itamar at itamarst.org  Wed Jul 18 12:18:59 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 14:18:59 -0400
Subject: [Twisted-Python] A few simple questions
In-Reply-To: <rowen-09AE70.10313618072012@news.gmane.org>
References: <rowen-47FF40.08363912072012@news.gmane.org>
	<CAE_Hg6bDAiL_HUF1D7ZfigGv-FgXTDqsriq2RT44tAqweiBBDg@mail.gmail.com>
	<rowen-95B82F.09253717072012@news.gmane.org>
	<DB49C8B0-451D-46E4-9B3B-58519CDAA75A@twistedmatrix.com>
	<rowen-09AE70.10313618072012@news.gmane.org>
Message-ID: <5006FE13.5080406@itamarst.org>

On 07/18/2012 01:31 PM, Russell E. Owen wrote:
> If there is a "best practices for error handling" document I'd love to
> read it. I found an overview of deferreds that was helpful. It pointed
> out that addCallbacks is not the same as addCallback followed by
> addErrback and I'm not sure I'm handling the difference correctly. Right
> now I use addCallbacks(callback, errback). This does not call the
> errback if the callback fails. I do this intentionally because I want
> the errback to focus on problems with the connection, not my reaction to
> it, and the default error handler seems to report errors in the
> callback, which is fine.
>

One thing to realize is that errors that end up in a Deferred are only 
logged if it gets garbage collected... which won't happen if you keep a 
reference to it. So:

1. You should always delete a reference to a Deferred when you do 
callback() or errback().
2. In case it never gets GC'ed, always do .addErrback(log.err) as the 
last callback on the Deferred, if there's no other final error handler.



From rowen at uw.edu  Wed Jul 18 12:26:37 2012
From: rowen at uw.edu (Russell E. Owen)
Date: Wed, 18 Jul 2012 11:26:37 -0700
Subject: [Twisted-Python] unit testing question: twisted with tk
References: <rowen-FB207E.10010618072012@news.gmane.org>
	<5006FC68.8050307@itamarst.org>
Message-ID: <rowen-CCD91E.11263718072012@news.gmane.org>

In article <5006FC68.8050307 at itamarst.org>,
 Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> On 07/18/2012 01:01 PM, Russell E. Owen wrote:
> > I have a bit of code that combines twisted with Tkinter
> > and now I'd like to write some unittests for it.
> >
> > I can't seem to figure out how to get TwistedTrial to handle this case.
> > I've written a unit test like this:
> >
> > from twisted.trial import unittest
> > from twisted.internet.defer import Deferred
> > import twisted.internet.tksupport
> > root = Tkinter.Tk()
> > twisted.internet.tksupport.install(root)
> > from twisted.internet import reactor
> >
> > class TestTkSocket(unittest.TestCase):
> >      def test...(...):
> >          ....
> >
> > the one test so far returns a deferred and calls errback on that
> > deferred if the test fails, and callback if it succeeds. When I run the
> > unit test with trial I get this error error:
> > twisted.trial.util.DirtyReactorAggregateError
> 
> The problem is that setting up tk support involves a repeatedly 
> scheduled event, which means it's in the reactor causing that warning. 
> Make sure you call tksupport.uninstall() at the end of each test, by 
> either putting in tearDown or doing self.addCleanup(tksupport.uninstall).

I put tksupport.install(root) in the setUp and tksupport.uninstall() in 
the tearDown and it worked perfectly.

Thank you very much. I'm thrilled to be able to run these unit tests.

-- Russell




From drsalists at gmail.com  Wed Jul 18 16:31:53 2012
From: drsalists at gmail.com (Dan Stromberg)
Date: Wed, 18 Jul 2012 15:31:53 -0700
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
	<20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
Message-ID: <CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>

On Wed, Jul 18, 2012 at 3:32 AM, <exarkun at twistedmatrix.com> wrote:

>
>
> I don't think anything in the thread suggested that this approach will
> circumvent a time.sleep(10) call.

I'm not sure where you're getting this circumvention issue from.


>  In any case, it won't.  Why is there
> a time.sleep(10) call there at all?  Does it do anything except cause a
> problem?
>
The sleep is not a problem.  The sleep allows me to see whether the
debugging info I want is output immediately, or whether I need to wait for
the program to terminate to see it.

I put in the sleep simply because I have another program with an infinite
loop, and I'd like to do something similar to it to get debugging info
periodically (no sleep, but lots of other stuff going on), without having
to wait for a program termination that is unlikely to come anytime soon.

I'm starting to  think I need to temporarily make the infinite loop finite.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120718/2b41dc8c/attachment.html>

From tobias.oberstein at tavendo.de  Wed Jul 18 17:43:01 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 18 Jul 2012 16:43:01 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
Message-ID: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>

Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?

The docs say: "size of the listen queue".

Is that a tunable within Twisted?

I mean, there are kernel parameters for queue sizes of not yet completely TCP handshaked connections and so on. But those are kernel tunables.

What does the "backlog" parameter?

The reason I am asking: I am stress testing a Twisted server and I see client connections denied upon high connection rates .. does the parameter help?

Thanks!
Tobias





From andrew at bemusement.org  Wed Jul 18 17:51:19 2012
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 19 Jul 2012 09:51:19 +1000
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>
References: <CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
	<CAGGBd_p0yAVoB35WEvfnJKPgGcEiopm4J_yoPELrs6r4jQ8ykQ@mail.gmail.com>
	<20120717195352.5206.863976121.divmod.xquotient.19@localhost6.localdomain6>
	<CAGGBd_qyEJOkuoaTvoL1s4Ns_JdTa=gaqRcCicAR9YTDDVUkVw@mail.gmail.com>
	<20120718103254.5206.459941612.divmod.xquotient.25@localhost6.localdomain6>
	<CAGGBd_qkQjAs-UsFYMuRCcF8axhxJuNCOfoJBZiZVn=GD3pRYQ@mail.gmail.com>
Message-ID: <20120718235119.GI6331@fuchsia.puzzling.org>

Dan Stromberg wrote:
> On Wed, Jul 18, 2012 at 3:32 AM, <exarkun at twistedmatrix.com> wrote:
> >
> > I don't think anything in the thread suggested that this approach will
> > circumvent a time.sleep(10) call.
> 
> I'm not sure where you're getting this circumvention issue from.

At this point I'm not sure what the problem you're trying to solve is.

To look at this from another direction… here's the built-in facilities in
Twisted for debugging what's happening with Deferreds:

 - Deferred's __str__ and __repr__ summarises the key state (i.e. has this been
   fired, is this waiting on another Deferred).
 - unhandled errors of GC'd Deferreds triggers an “Unhandled error” log
   message, to let you know that your code is probably missing something it
   should act on.  Due to the nature of GC this is a best effort feature,
   there's no guarantee it will fire reliably or at all.
 - you can setDebugging(True) to have Twisted capture more information to
   include in the above log message: the traceback for what created the
   Deferred, and the traceback that initially called it.  This is very helpful
   for helping you pinpoint which parts of your code are failing to add an
   errback.
 - as a bonus, because this is Python, you can abuse the private variables used
   to implement the previous points for your own ad hoc debugging, if you are ok
   with the fact that they are undocumented and unsupported APIs.

And that's basically it.  (If I've forgotten something I'm sure someone will
reply to remind me.)

It sounds like you're looking for something else, but I'm not sure quite what.
Something roughly along the lines of “what are all the live Deferreds in my
process?” maybe?

-Andrew.




From itamar at itamarst.org  Wed Jul 18 19:19:12 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Jul 2012 21:19:12 -0400
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <50076090.1080406@itamarst.org>

On 07/18/2012 07:43 PM, Tobias Oberstein wrote:
> Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?
>
> The docs say: "size of the listen queue".
>
> Is that a tunable within Twisted?
>
> I mean, there are kernel parameters for queue sizes of not yet completely TCP handshaked connections and so on. But those are kernel tunables.
>
> What does the "backlog" parameter?
>
> The reason I am asking: I am stress testing a Twisted server and I see client connections denied upon high connection rates .. does the parameter help?
>
It's the parameter passed to the listen(2) system call - from the man page:

        The backlog argument defines the maximum length to which the 
queue of pending connections for sockfd may grow.  If a connection 
request arrives  when  the
        queue  is full, the client may receive an error with an 
indication of ECONNREFUSED or, if the underlying protocol supports 
retransmission, the request may
        be ignored so that a later reattempt at connection succeeds.

So, yes, higher values will prevent connection refused.




From screwtape at froup.com  Wed Jul 18 19:26:26 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Jul 2012 11:26:26 +1000
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120719012626.GA26606@boombah.thristian.org>

On Wed, Jul 18, 2012 at 04:43:01PM -0700, Tobias Oberstein wrote:
> Could someone shortly elaborate on the semantics / effect of the parameter "backlog" with listenTCP?

It exactly corresponds to the "backlog" parameter of the BSD socket API
function "listen(int sockfd, int backlog)". On my Debian Testing
machine, the listen(2) manpage says:

    The backlog argument defines the maximum length to which the queue
    of pending connections for sockfd may grow. If a connection request
    arrives when the queue is full, the client may receive an error with
    an indication of ECONNREFUSED or, if the underlying protocol
    supports retransmission, the request may be ignored so that a later
    reattempt at connection succeeds.

..and later:

    The behavior of the backlog argument on TCP sockets changed with
    Linux 2.2. Now it specifies the queue length for completely
    established sockets waiting to be accepted, instead of the number of
    incomplete connection requests.  The maximum length of the queue for
    incomplete sockets can be set using
    /proc/sys/net/ipv4/tcp_max_syn_backlog.  When syncookies are enabled
    there is no logical maximum length and this setting is ignored. See
    tcp(7) for more information.

    If the backlog argument is greater than the value in
    /proc/sys/net/core/somaxconn, then it is silently truncated to that
    value; the default value in this file is 128. In kernels before
    2.4.25, this limit was a hard coded value, SOMAXCONN, with the value
    128.

Obviously the Twisted documentation can't go into all this detail
because Twisted runs on more operating systems than just Linux. Every OS
that supports the BSD socket API should have documentation explaining
the precise definition and meaning of the backlog parameter on that
platform. For example, here's the MSDN docs for the listen() function in
WinSock:

http://msdn.microsoft.com/en-us/library/windows/desktop/ms739168%28v=vs.85%29.aspx




From tom.prince at ualberta.net  Wed Jul 18 21:04:13 2012
From: tom.prince at ualberta.net (Tom Prince)
Date: Wed, 18 Jul 2012 21:04:13 -0600
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
	<CAGGBd_qc9RUjEmMNscf_1vg0JCU8yiNbGaodtUhgnaW6Ack2AA@mail.gmail.com>
	<20120716215402.GE6331@fuchsia.puzzling.org>
	<CAGGBd_pPqrx0_46t-DpMQ+Dv2JThym6jNrZ41A7nEbBR3d1Jmw@mail.gmail.com>
	<20120716232023.GF6331@fuchsia.puzzling.org>
	<CAGGBd_pNjZxtZLN4NgX5QiHQyd_CnPQQLM82EnRMFNbNJ6L2BA@mail.gmail.com>
Message-ID: <87k3y0zc2a.fsf@hermes.hocat.ca>

Dan Stromberg <drsalists at gmail.com> writes:
> Strangely, this doesn't give the report until after the sleep finishes...

That is because the code you included doesn't actually print the
returned traceback. The reason that it gets printed at the end is
because it gets garbage collected then.

The following code prints out the traceback twice, with the first before
the first sleep and the second (prefixed with "Unhandled error in
Deferred:") before the second sleep.

  Tom

#!/usr/bin/python

import time
from twisted.internet import defer

defer.setDebugging(True)

def functionReturningDeferred():
    return defer.succeed('Some value')

d = functionReturningDeferred()
def printValue(value):
    print 'Yay, I got %r' % value
    return value
def second_callback(value):
    print 'still %r' % value
    return gen_error()
def third_callback(value):
    print 'and still %r' % value
    return value

def gen_error():
    return defer.fail(AssertionError)

def got_error(value):
    print 'bad thing: %r' % value

d.addCallback(printValue)
d.addCallback(second_callback)
d.addCallback(third_callback)
print d._debugInfo._getDebugTracebacks()
time.sleep(2)
del d
time.sleep(2)



From tobias.oberstein at tavendo.de  Thu Jul 19 03:48:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 19 Jul 2012 02:48:48 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <20120719012626.GA26606@boombah.thristian.org>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
Message-ID: <634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>

Hello Tim, Itamar,

thanks for clarifying and reproducing the relevant man pages!

It would be great if the Twisted docstring for "backlog" on listenTCP/listenSSL stated something like:

"Size of the listen queue. The value is passed directly to the listen system call and it's precise semantics is defined by the platform Twisted runs on."

Anyway, thanks!

Tobias




Mit freundlichen Grüßen,

Tobias Oberstein
Geschäftsführer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
Skype: toberstein
Twitter: @oberstet
Xing: Tobias Oberstein



Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
+49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer Tobias Oberstein


> -----Ursprüngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von Tim Allen
> Gesendet: Donnerstag, 19. Juli 2012 03:26
> An: Twisted general discussion
> Betreff: Re: [Twisted-Python] Effects of backlog parameter on listenTCP
> 
> On Wed, Jul 18, 2012 at 04:43:01PM -0700, Tobias Oberstein wrote:
> > Could someone shortly elaborate on the semantics / effect of the parameter
> "backlog" with listenTCP?
> 
> It exactly corresponds to the "backlog" parameter of the BSD socket API
> function "listen(int sockfd, int backlog)". On my Debian Testing machine, the
> listen(2) manpage says:
> 
>     The backlog argument defines the maximum length to which the queue
>     of pending connections for sockfd may grow. If a connection request
>     arrives when the queue is full, the client may receive an error with
>     an indication of ECONNREFUSED or, if the underlying protocol
>     supports retransmission, the request may be ignored so that a later
>     reattempt at connection succeeds.
> 
> ..and later:
> 
>     The behavior of the backlog argument on TCP sockets changed with
>     Linux 2.2. Now it specifies the queue length for completely
>     established sockets waiting to be accepted, instead of the number of
>     incomplete connection requests.  The maximum length of the queue for
>     incomplete sockets can be set using
>     /proc/sys/net/ipv4/tcp_max_syn_backlog.  When syncookies are enabled
>     there is no logical maximum length and this setting is ignored. See
>     tcp(7) for more information.
> 
>     If the backlog argument is greater than the value in
>     /proc/sys/net/core/somaxconn, then it is silently truncated to that
>     value; the default value in this file is 128. In kernels before
>     2.4.25, this limit was a hard coded value, SOMAXCONN, with the value
>     128.
> 
> Obviously the Twisted documentation can't go into all this detail because
> Twisted runs on more operating systems than just Linux. Every OS that supports
> the BSD socket API should have documentation explaining the precise definition
> and meaning of the backlog parameter on that platform. For example, here's
> the MSDN docs for the listen() function in
> WinSock:
> 
> http://msdn.microsoft.com/en-
> us/library/windows/desktop/ms739168%28v=vs.85%29.aspx
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From kevin.horn at gmail.com  Thu Jul 19 07:04:24 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 19 Jul 2012 08:04:24 -0500
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
	<634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>

On Thu, Jul 19, 2012 at 4:48 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Hello Tim, Itamar,
>
> thanks for clarifying and reproducing the relevant man pages!
>
> It would be great if the Twisted docstring for "backlog" on
> listenTCP/listenSSL stated something like:
>
> "Size of the listen queue. The value is passed directly to the listen
> system call and it's precise semantics is defined by the platform Twisted
> runs on."
>
> Anyway, thanks!
>
> Tobias
>
>
Tobias,

Can you please create a ticket for this documentation change so that it
doesn't get lost?

Thanks,

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120719/875624a0/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jul 19 07:34:22 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 19 Jul 2012 06:34:22 -0700
Subject: [Twisted-Python] Effects of backlog parameter on listenTCP
In-Reply-To: <CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D43379642D0E@EXVMBX020-12.exch020.serverdata.net>
	<20120719012626.GA26606@boombah.thristian.org>
	<634914A010D0B943A035D226786325D43379642D48@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK1TKFRYVUHD4vrXJmmFbiViC61piFqsCUn_iqrpkQOSDQ@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D43379642DE8@EXVMBX020-12.exch020.serverdata.net>

> Can you please create a ticket for this documentation change so that it doesn't get lost? 

Done: http://twistedmatrix.com/trac/ticket/5793

Cheers,
Tobias



From luka.rahne at gmail.com  Fri Jul 20 01:01:42 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 09:01:42 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as servers
Message-ID: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>

I have like 1000 devices that need update that takes like 1 minute each. I
want them to update as quick as possible, sending lines from sx file, using
UDP and for each line i got reponse "OK".

Here is code that works for up to 500 servers, but not so well when i go
more (it just does not finish)

my current  simplified client and server_emulator code is here:
https://gist.github.com/3144857


currently i have only one server for simulation, but in real world it will
be 1000 different IP-s.

I was trying to stop and run reactor but did not work (reactor is not
rerunnable exception or somthing like that).
 I want to run lets say 100 updates at time and once some update
is finished i want to remove this protocol out of job and schedule new one.

Can somebody give some pointers?

I am running this on windows if that is an issue.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120720/85c60639/attachment.html>

From _ at lvh.cc  Fri Jul 20 01:51:05 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 20 Jul 2012 09:51:05 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
Message-ID: <5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>

What version of twisted are you using and which reactor is it using? (You can tell from the logs)

Note that your process for getting data from the datasource is blocking. What sort of data source is it, and why are you stripping stuff off of it? You might want to consider something more cooperative, such as for example a file producer:

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.FileSender.html

I'm assuming you are aware of all of the issues involving UDP (specifically, that in the real world your file is probably not going to make it to the other side)

The basic pattern will probably be something like:
1) create 100 deferreds that will fire when you're done transferring
2) gatherResults/DeferredList to wait on all of them
3) do (1) again in a callback to that deferred list until you run out of clients

Twisted might have some standard tool somewhere to implement this, but I don't know about it.

cheers
lvh


On 20 Jul 2012, at 09:01, Luka Rahne wrote:

> I have like 1000 devices that need update that takes like 1 minute each. I want them to update as quick as possible, sending lines from sx file, using UDP and for each line i got reponse "OK".
> 
> Here is code that works for up to 500 servers, but not so well when i go more (it just does not finish)
> 
> my current  simplified client and server_emulator code is here:
> https://gist.github.com/3144857
> 
> 
> currently i have only one server for simulation, but in real world it will be 1000 different IP-s.
> 
> I was trying to stop and run reactor but did not work (reactor is not rerunnable exception or somthing like that).
>  I want to run lets say 100 updates at time and once some update is finished i want to remove this protocol out of job and schedule new one.
> 
> Can somebody give some pointers?
> 
> I am running this on windows if that is an issue.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From _ at lvh.cc  Fri Jul 20 02:11:17 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 20 Jul 2012 10:11:17 +0200
Subject: [Twisted-Python] AMPBox as an Argument?
Message-ID: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>

Hi,


Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).

Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)

cheers
lvh






From luka.rahne at gmail.com  Fri Jul 20 02:26:32 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 10:26:32 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
Message-ID: <CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>

Due to historical reasons there is UDP only protocol whith response
ack for each packet.
In reality there are also some delays because received device can not
handle data after it sends ack (some ancient and buggy eth chip).

Also there are not just lines from sx file, but are enveloped in other
packet that is transfered.

In general protocol goes like:


for each line in sx:
    encode line whit extra data in packet (packet is like len + encrypted_)
    Send packet over UDP (tcp not supported)
    wait for ACK ("OK" packet in my example)
    wait for 0.05 s (not in included example)


I done some code that should support this and i have tried to stop
protocol but calling self.doStop()  function
(twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
assert self.numPorts > 0

I was hoping that this function will remove protocol instance from reactor.






2012/7/20 Laurens Van Houtven <_ at lvh.cc>
>
> What version of twisted are you using and which reactor is it using? (You can tell from the logs)
>
> Note that your process for getting data from the datasource is blocking. What sort of data source is it, and why are you stripping stuff off of it? You might want to consider something more cooperative, such as for example a file producer:
>
> http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.FileSender.html
>
> I'm assuming you are aware of all of the issues involving UDP (specifically, that in the real world your file is probably not going to make it to the other side)
>
> The basic pattern will probably be something like:
> 1) create 100 deferreds that will fire when you're done transferring
> 2) gatherResults/DeferredList to wait on all of them
> 3) do (1) again in a callback to that deferred list until you run out of clients
>
> Twisted might have some standard tool somewhere to implement this, but I don't know about it.
>
> cheers
> lvh
>
>
> On 20 Jul 2012, at 09:01, Luka Rahne wrote:
>
> > I have like 1000 devices that need update that takes like 1 minute each. I want them to update as quick as possible, sending lines from sx file, using UDP and for each line i got reponse "OK".
> >
> > Here is code that works for up to 500 servers, but not so well when i go more (it just does not finish)
> >
> > my current  simplified client and server_emulator code is here:
> > https://gist.github.com/3144857
> >
> >
> > currently i have only one server for simulation, but in real world it will be 1000 different IP-s.
> >
> > I was trying to stop and run reactor but did not work (reactor is not rerunnable exception or somthing like that).
> >  I want to run lets say 100 updates at time and once some update is finished i want to remove this protocol out of job and schedule new one.
> >
> > Can somebody give some pointers?
> >
> > I am running this on windows if that is an issue.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Fri Jul 20 02:35:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Jul 2012 01:35:38 -0700
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
Message-ID: <5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>


On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi,
> 
> 
> Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).
> 
> Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)
> 
> cheers
> lvh

Seems like an easy enough thing to write.  Given that AMPList doesn't use a length prefix (it uses null-key box-termination, just like the rest of the protocol) the representation would be exactly the same.  Just add a trivial wrapper that uses AMPList, unpacks its argument, and assert that there's only one of them?

-glyph




From exarkun at twistedmatrix.com  Fri Jul 20 06:12:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 20 Jul 2012 12:12:28 -0000
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
Message-ID: <20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>

On 07:01 am, luka.rahne at gmail.com wrote:
>I have like 1000 devices that need update that takes like 1 minute 
>each. I
>want them to update as quick as possible, sending lines from sx file, 
>using
>UDP and for each line i got reponse "OK".
>
>Here is code that works for up to 500 servers, but not so well when i 
>go
>more (it just does not finish)

One problem you need to consider is that all platforms limit the number 
of simultaneous file descriptors (sockets) you may use at once.  On 
Windows, this limit is around 500 by default.  You can raise it to a 
much larger number (but I forget what) by using Twisted's IOCP reactor 
instead of the default select reactor.

See the reactor selection howto on the website for details.
>my current  simplified client and server_emulator code is here:
>https://gist.github.com/3144857

Another problem with this code is the while loop inside sendDatagram. 
Twisted is a cooperative multitasking system.  You cannot execute large 
loops like that and have everything work properly or well.

Programs based on Twisted do a little bit of work, give up execution 
control, then do a little bit more work when they regain execution 
control.  The work is event-driven, so (for example) perhaps you want to 
replace the while loop with code that sends the next datagram when the 
previous datagram is acknowledged.
>
>currently i have only one server for simulation, but in real world it 
>will
>be 1000 different IP-s.
>
>I was trying to stop and run reactor but did not work (reactor is not
>rerunnable exception or somthing like that).

Yes.  You can only call reactor.run() once.  That shouldn't be a very 
important limitation.  You can do as much networking as you want while 
only running the reactor once.
>I want to run lets say 100 updates at time and once some update
>is finished i want to remove this protocol out of job and schedule new 
>one.

Take a look at twisted.internet.task.cooperate.  Here's an example 
demonstrating its use to do a limited amount of work concurrently:

http://as.ynchrono.us/2006/05/limiting-parallelism_22.html
>Can somebody give some pointers?
>
>I am running this on windows if that is an issue.

Jean-Paul



From itamar at itamarst.org  Fri Jul 20 08:26:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 20 Jul 2012 10:26:51 -0400
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
	<CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
Message-ID: <50096AAB.60102@itamarst.org>


On 07/20/2012 04:26 AM, Luka Rahne wrote:
> for each line in sx:
>      encode line whit extra data in packet (packet is like len + encrypted_)
>      Send packet over UDP (tcp not supported)
>      wait for ACK ("OK" packet in my example)
>      wait for 0.05 s (not in included example)
>
>
> I done some code that should support this and i have tried to stop
> protocol but calling self.doStop()  function
> (twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
> assert self.numPorts > 0
>
> I was hoping that this function will remove protocol instance from reactor.
>

You can do:

port = reactor.listenUDP(....)
port.stopListening() # disconnect port



From luka.rahne at gmail.com  Fri Jul 20 08:29:01 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 16:29:01 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<20120720121228.3254.1519052966.divmod.xquotient.269@localhost6.localdomain6>
Message-ID: <CAOHwv54mzMgUn4AAXFNJ+7FRXETGGLHQ2qfydp=1gjweZPgddg@mail.gmail.com>

My current problem is, that i do not know how to stop protocol and
quit listening.

What should i call to stop protocol and told reactor to remove from
schedule at StopIteration exception?


About while 1: loop- that loop is there just to find first non empty
line in sx file, in most case it break just in fist condition, since
sx file, does not have empty lines.


2012/7/20  <exarkun at twistedmatrix.com>:
> On 07:01 am, luka.rahne at gmail.com wrote:
>>I have like 1000 devices that need update that takes like 1 minute
>>each. I
>>want them to update as quick as possible, sending lines from sx file,
>>using
>>UDP and for each line i got reponse "OK".
>>
>>Here is code that works for up to 500 servers, but not so well when i
>>go
>>more (it just does not finish)
>
> One problem you need to consider is that all platforms limit the number
> of simultaneous file descriptors (sockets) you may use at once.  On
> Windows, this limit is around 500 by default.  You can raise it to a
> much larger number (but I forget what) by using Twisted's IOCP reactor
> instead of the default select reactor.
>
> See the reactor selection howto on the website for details.
>>my current  simplified client and server_emulator code is here:
>>https://gist.github.com/3144857
>
> Another problem with this code is the while loop inside sendDatagram.
> Twisted is a cooperative multitasking system.  You cannot execute large
> loops like that and have everything work properly or well.
>
> Programs based on Twisted do a little bit of work, give up execution
> control, then do a little bit more work when they regain execution
> control.  The work is event-driven, so (for example) perhaps you want to
> replace the while loop with code that sends the next datagram when the
> previous datagram is acknowledged.
>>
>>currently i have only one server for simulation, but in real world it
>>will
>>be 1000 different IP-s.
>>
>>I was trying to stop and run reactor but did not work (reactor is not
>>rerunnable exception or somthing like that).
>
> Yes.  You can only call reactor.run() once.  That shouldn't be a very
> important limitation.  You can do as much networking as you want while
> only running the reactor once.
>>I want to run lets say 100 updates at time and once some update
>>is finished i want to remove this protocol out of job and schedule new
>>one.
>
> Take a look at twisted.internet.task.cooperate.  Here's an example
> demonstrating its use to do a limited amount of work concurrently:
>
> http://as.ynchrono.us/2006/05/limiting-parallelism_22.html
>>Can somebody give some pointers?
>>
>>I am running this on windows if that is an issue.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From luka.rahne at gmail.com  Fri Jul 20 08:55:59 2012
From: luka.rahne at gmail.com (Luka Rahne)
Date: Fri, 20 Jul 2012 16:55:59 +0200
Subject: [Twisted-Python] i want to update 1000 devices running as
	servers
In-Reply-To: <50096AAB.60102@itamarst.org>
References: <CAOHwv5624yPBGQyJGr9cNjf8pWvz=-7xdcY8ouJ2ke=wHO86Sg@mail.gmail.com>
	<5622842B-DC7A-46B0-965B-843EA5814B50@lvh.cc>
	<CAOHwv57-wvF5mVowxYOMDiwpjy98vRk0jwtVCa_+aSY10WsYAw@mail.gmail.com>
	<50096AAB.60102@itamarst.org>
Message-ID: <CAOHwv54ycrp0PEQPMAr+mqC-_paX=YRvB5zfAJ6pgnBt7cVh2Q@mail.gmail.com>

Thank you
It was needed to call self.transport.stopListening() and i updated new
client whit working code and now it works much better.

https://gist.github.com/3144857/d0446f8654326c93a5e9def0b6c9172351494219

and old code i was referencing to is here (just for reference)

https://gist.github.com/3144857/5a38e287dec7c480ad34e5073ae1773b95a86662



2012/7/20 Itamar Turner-Trauring <itamar at itamarst.org>:
>
> On 07/20/2012 04:26 AM, Luka Rahne wrote:
>> for each line in sx:
>>      encode line whit extra data in packet (packet is like len + encrypted_)
>>      Send packet over UDP (tcp not supported)
>>      wait for ACK ("OK" packet in my example)
>>      wait for 0.05 s (not in included example)
>>
>>
>> I done some code that should support this and i have tried to stop
>> protocol but calling self.doStop()  function
>> (twisted.internet.protocol.AbstractDatagramProtocol)    raises assert
>> assert self.numPorts > 0
>>
>> I was hoping that this function will remove protocol instance from reactor.
>>
>
> You can do:
>
> port = reactor.listenUDP(....)
> port.stopListening() # disconnect port
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Sat Jul 21 22:05:37 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Jul 2012 04:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1342929937.75.1772561348@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120722/d259f52c/attachment-0001.html>

From teratorn at gmail.com  Sun Jul 22 10:55:26 2012
From: teratorn at gmail.com (Eric Mangold)
Date: Sun, 22 Jul 2012 11:55:26 -0500
Subject: [Twisted-Python] deferred graph?
In-Reply-To: <CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
References: <CAGGBd_ofqH3T6T=8i8i5JzpWatXJmWpY82PcDKrW0pS-KQG8fQ@mail.gmail.com>
	<CAGGBd_qKQHJt+nTTivxeA2hbdPuvnwHrOwzOOnaTJeUS9r03ag@mail.gmail.com>
Message-ID: <op.whuxaogx4oppi6@obsidianwin7.hq.teratorn.org>

On Mon, 02 Jul 2012 19:31:14 -0500, Dan Stromberg <drsalists at gmail.com>  
wrote:

>
> On Thu, Jun 28, 2012 at 9:40 PM, Dan Stromberg <drsalists at gmail.com>  
> wrote:
>>
>> Hi.
>>
>> I'm a Twisted neophyte, but I've been using Python a long time.
>>
>> My question:
>> Is there a way of producing a deferred graph in a Python program at a  
>> given point in time?  Perhaps something based on graphviz and  
>> >>objgraph.py?  We're able to detect when we're having the problem, we  
>> just don't (yet) know its cause.
>>
>>
>> Background:
>> I'm looking at some code with a bit over 200  
>> addCallback/addErrback/addCallbacks in it.
>>
>> It's got a problem where sometimes the deferreds seem to just stop  
>> executing.  I see in the doc it says that this can happen if you've  
>> >>neglected to add an errback to the end of one or more of your  
>> deferred chains.
>>
>> One of the people who's been here longer than me, indicated that he's  
>> gone through the code looking for such issues, and didn't find >>any.   
>> This suggests to me that either there's some other cause, or that it  
>> really is a deferred without a final errback, but it's hidden in a  
>> >>dark corner of the code somewhere.
>>
>>
>> Thanks!
>>
> I put together something to do a single-point-in-time graph (as  
> distorted/delayed by the time it takes to go through all the objects in  
> the python >interpreter) of deferreds.  Please find it below as a shar  
> archive (wow, someone still does those?   Yeah, sometimes)

Cool stuff - but could you use an ordinary archive format? Asking the  
whole mailing list to run gobs of shell code is.... I dunno. not something  
I'm going to bother with even if I would like to.

-E


>  Anyway, given a tree of deferreds, this will produce a whatever.dot  
> file, which can be fed to graphviz' "dot -Tpdf whatever.dot >  
> whatever.pdf", >and the pdf has a rather nice-looking graph of the  
> deferreds.
>
> #!/bin/sh
> # This is a shell archive (produced by GNU sharutils 4.11.1).
> # To extract the files from this archive, save it to some FILE, remove
> # everything before the `#!/bin/sh' line above, then type `sh FILE'.
> #
> lock_dir=_sh32156
> # Made on 2012-07-02 21:48 UTC by <stromberg at aw50>.
> # Source directory was `/home/stromberg/src/twisted-experiments'.
> #
> # Existing files will *not* be overwritten, unless `-c' is specified.
> #
> # This shar contains:
> # length mode       name
> # ------ ---------- ------------------------------------------
> #   2181 -rwxr-xr-x deferreddump.py
> #   3174 -rwxr-xr-x wedgedump
> #
> MD5SUM=${MD5SUM-md5sum}
> f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
> test -n "${f}" && md5check=true || md5check=false
> ${md5check} || \
>  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
> if test "X$1" = "X-c"
> then keep_file=''
> else keep_file=true
> fi
> echo=echo
> save_IFS="${IFS}"
> IFS="${IFS}:"
> gettext_dir=
> locale_dir=
> set_echo=false
>
> for dir in $PATH
> do
>  if test -f $dir/gettext \
>     && ($dir/gettext --version >/dev/null 2>&1)
>  then
>    case `$dir/gettext --version 2>&1 | sed 1q` in
>      *GNU*) gettext_dir=$dir
>      set_echo=true
>      break ;;
>    esac
>  fi
> done
>
> if ${set_echo}
> then
>  set_echo=false
>  for dir in $PATH
>  do
>    if test -f $dir/shar \
>       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
>    then
>      locale_dir=`$dir/shar --print-text-domain-dir`
>      set_echo=true
>      break
>    fi
>  done
>
>  if ${set_echo}
>  then
>    TEXTDOMAINDIR=$locale_dir
>    export TEXTDOMAINDIR
>    TEXTDOMAIN=sharutils
>    export TEXTDOMAIN
>    echo="$gettext_dir/gettext -s"
>  fi
> fi
> IFS="$save_IFS"
> if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
> then if (echo -n test; echo 1,2,3) | grep n >/dev/null
>     then shar_n= shar_c='
> '
>     else shar_n=-n shar_c= ; fi
> else shar_n= shar_c='\c' ; fi
> f=shar-touch.$$
> st1=200112312359.59
> st2=123123592001.59
> st2tr=123123592001.5 # old SysV 14-char limit
> st3=1231235901
>
> if touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st1} && test -f ${f}; then
>  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
>
> elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
>  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
>
> elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
>   test ! -f ${st3} && test -f ${f}; then
>  shar_touch='touch -am $3$4$5$6$2 "$8"'
>
> else
>  shar_touch=:
>  echo
>  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
> installing GNU `touch'\'', distributed in GNU coreutils...'
>  echo
> fi
> rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
> #
> if test ! -d ${lock_dir} ; then :
> else ${echo} "lock directory ${lock_dir} exists"
>     exit 1
> fi
> if mkdir ${lock_dir}
> then ${echo} "x - created lock directory ${lock_dir}."
> else ${echo} "x - failed to create lock directory ${lock_dir}."
>     exit 1
> fi
> # ============= deferreddump.py ==============
> if test -n "${keep_file}" && test -f 'deferreddump.py'
> then
> ${echo} "x - SKIPPING deferreddump.py (file already exists)"
> else
> ${echo} "x - extracting deferreddump.py (text)"
>  sed 's/^X//' << 'SHAR_EOF' > 'deferreddump.py' &&
> #!/usr/bin/python
> X
> # See also: http://twistedmatrix.com/trac/ticket/3858
> # and:      http://twistedmatrix.com/trac/ticket/1402
> # and:
> #   twisted.internet.defer also exposes a setDebugging(bool) function to
> #   store call stacks from creation and invocation in deferred objects,
> #   it's what I was using to try and figure out what was going on, but
> #   it's not nearly as at-a-glance as a graph is.
> X
> import gc
> import sys
> X
> import twisted.internet.defer
> X
> def escape(callback_type, obj):
> X    dummy = callback_type
> X    return '%s' % (str(obj).replace(' ', '_').replace(':',  
> '').replace('<', '').replace('>', ''), )
> X
> def dump(outfile = sys.stdout):
> X    outfile.write('digraph deferred_digraph {\n')
> X    for obj in gc.get_objects():
> X        if isinstance(obj, twisted.internet.defer.Deferred):
> X            len_callbacks = len(obj.callbacks)
> X            if obj.callbacks:
> X                outfile.write('\t%s -> %s\n' % (escape('', obj),  
> escape('', obj.callbacks[0][0][0])))
> X                outfile.write('\t%s -> %s\n' % (escape('', obj),  
> escape('', obj.callbacks[0][1][0])))
> X            for callbackpairno in range(len_callbacks - 1):
> X                current_callback = obj.callbacks[callbackpairno][0]
> X                current_errback = obj.callbacks[callbackpairno][1]
> X                current_callback_desc = current_callback[0]
> X                current_errback_desc = current_errback[0]
> X
> X                next_callback = obj.callbacks[callbackpairno + 1][0]
> X                next_errback = obj.callbacks[callbackpairno + 1][1]
> X                next_callback_desc = next_callback[0]
> X                next_errback_desc = next_errback[0]
> X
> X                outfile.write('\t%s -> %s;\n' % (escape('callback',  
> current_callback_desc), escape('callback', next_callback_desc)))
> X                outfile.write('\t%s -> %s;\n' % (escape('errback',  
> current_errback_desc), escape('errback', next_errback_desc)))
> X
> X                outfile.write('\t%s -> %s;\n' % (escape('callback',  
> current_callback_desc), escape('errback', next_errback_desc)))
> X                outfile.write('\t%s -> %s;\n' % (escape('errback',  
> current_errback_desc), escape('callback', next_callback_desc)))
> X
> X    outfile.write('}\n')
> X
> X
> SHAR_EOF
>  (set 20 12 06 29 18 02 00 'deferreddump.py'
>   eval "${shar_touch}") && \
>  chmod 0755 'deferreddump.py'
> if test $? -ne 0
> then ${echo} "restore of deferreddump.py failed"
> fi
>  if ${md5check}
>  then (
>       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'deferreddump.py': 'MD5  
> check failed'
>       ) << \SHAR_EOF
> 45b2aed37cc2e57bc58f46a42eb2a2d4  deferreddump.py
> SHAR_EOF
>  else
> test `LC_ALL=C wc -c < 'deferreddump.py'` -ne 2181 && \
>  ${echo} "restoration warning:  size of 'deferreddump.py' is not 2181"
>  fi
> fi
> # ============= wedgedump ==============
> if test -n "${keep_file}" && test -f 'wedgedump'
> then
> ${echo} "x - SKIPPING wedgedump (file already exists)"
> else
> ${echo} "x - extracting wedgedump (text)"
>  sed 's/^X//' << 'SHAR_EOF' > 'wedgedump' &&
> #!/usr/bin/python
> X
> # Unhandled Errors
> X
> # From http://twistedmatrix.com/documents/current/core/howto/defer.html :
> X
> #   If a Deferred is garbage-collected with an unhandled error (i.e. it
> #   would call the next errback if there was one), then Twisted will  
> write
> #   the error's traceback to the log file. This means that you can
> #   typically get away with not adding errbacks and still get errors
> #   logged. Be careful though; if you keep a reference to the Deferred
> #   around, preventing it from being garbage-collected, then you may  
> never
> #   see the error (and your callbacks will mysteriously seem to have  
> never
> #   been called). If unsure, you should explicitly add an errback after
> #   your callbacks, even if all you do is:
> X
> #       # Make sure errors get logged
> #       from twisted.python import log
> #       d.addErrback(log.err)
> X
> import sys
> #mport time
> X
> import twisted.internet.defer
> import twisted.python
> X
> import deferreddump
> X
> def get_deferred():
> X    return twisted.internet.defer.succeed(1)
> X
> def cb1(value):
> X    print value
> X    return value * 2
> X
> def cb2(value):
> X    #raise ValueError
> X    print value
> X    return value * 2
> X
> def cb3(value):
> X    print value
> X    return value * 2
> X
> def cb4(value):
> X    print value
> X    return value * 2
> X
> def cb5(value):
> X    print value
> X    return value * 2
> X
> def cb6(value):
> X    print value
> X    return value * 2
> X
> def cb7(value):
> X    print value
> X    return value * 2
> X
> def cb8(value):
> X    print value
> X    return value * 2
> X
> def eb1(value):
> X    twisted.python.log.err()
> X
> def eb2(value):
> X    twisted.python.log.err()
> X
> def eb3(value):
> X    twisted.python.log.err()
> X
> def eb4(value):
> X    twisted.python.log.err()
> X
> def eb5(value):
> X    twisted.python.log.err()
> X
> def eb6(value):
> X    twisted.python.log.err()
> X
> def eb7(value):
> X    twisted.python.log.err()
> X
> def eb8(value):
> X    twisted.python.log.err()
> X
> def arbitrary_function(add_final_log):
> X    deferred = get_deferred()
> X
> X    # apparently we can use the same callback multiple times in the  
> same deferred
> X    first_deferred = deferred.addCallback(cb1)
> X    first_deferred.pause()
> X    deferred.addCallbacks(cb1, eb1)
> X    deferred.addCallbacks(cb2, eb2)
> X    deferred.addCallbacks(cb3, eb3)
> X    deferred.addCallbacks(cb4, eb4)
> X    deferred.addCallbacks(cb5, eb5)
> X    deferred.addCallbacks(cb6, eb6)
> X    deferred.addCallbacks(cb7, eb7)
> X
> X    with open('t.dot', 'w') as file_:
> X        deferreddump.dump(file_)
> X
> X    first_deferred.unpause()
> X    if add_final_log:
> X        deferred.addCallbacks(cb4, twisted.python.log.err)
> X    else:
> X        deferred.addCallback(cb4)
> X
> X    return deferred
> X
> def usage(retval):
> X    sys.stderr.write('Usage: %s --add-final-log\n' % sys.argv[0])
> X    sys.exit(retval)
> X
> def main():
> X    add_final_log = False
> X    while sys.argv[1:]:
> X        if sys.argv[1] == '--add-final-log':
> X            add_final_log = True
> X        elif sys.argv[1] in [ '-h', '--help' ]:
> X            usage(0)
> X        else:
> X            sys.stderr.write('%s: Unrecognized option: %s\n' %  
> (sys.argv[0], sys.argv[1]))
> X            usage(1)
> X        del sys.argv[1]
> X
> X    deferred = arbitrary_function(add_final_log)
> X    with open('/dev/null', 'w') as file_:
> X        file_.write(str(deferred))
> X
> X    sys.exit(0)
> X
> main()
> X
> SHAR_EOF
>  (set 20 12 07 02 21 46 02 'wedgedump'
>   eval "${shar_touch}") && \
>  chmod 0755 'wedgedump'
> if test $? -ne 0
> then ${echo} "restore of wedgedump failed"
> fi
>  if ${md5check}
>  then (
>       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'wedgedump': 'MD5 check  
> failed'
>       ) << \SHAR_EOF
> d526664fcf63762f768303af91a74a5f  wedgedump
> SHAR_EOF
>  else
> test `LC_ALL=C wc -c < 'wedgedump'` -ne 3174 && \
>  ${echo} "restoration warning:  size of 'wedgedump' is not 3174"
>  fi
> fi
> if rm -fr ${lock_dir}
> then ${echo} "x - removed lock directory ${lock_dir}."
> else ${echo} "x - failed to remove lock directory ${lock_dir}."
>     exit 1
> fi
> exit 0
>



-- 
Using Opera's revolutionary email client: http://www.opera.com/mail/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120722/7032f6ac/attachment.html>

From tobias.oberstein at tavendo.de  Mon Jul 23 06:11:51 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 23 Jul 2012 05:11:51 -0700
Subject: [Twisted-Python] Autobahn 0.5.5 released
Message-ID: <634914A010D0B943A035D226786325D433796CD04E@EXVMBX020-12.exch020.serverdata.net>

Hello,

AutobahnPython 0.5.5 has been released adding new WebSocket and WAMP features.

1)
WebSocket/WAMP servers now not only can run standalone, but also take part as a Twisted Web Resource in a Site.

This allows to run multiple Web services on one port under differents paths: i.e. mix plain File serving, with WebSocket
and WAMP - this was a requested feature.

Also, notably, all of RFC6455, Hybi-10+ and Hixie-76 protocol versions are supported. The latter still being needed for
Safari (desktop/mobile) i.e.

Here is an example:
https://github.com/tavendo/AutobahnPython/tree/master/examples/websocket/echo_site

2)
For WAMP, you now can register custom RPC handlers. Please see the docs for details.

3)
WAMP-CRA, the challange-response authentication now fully workes Deferred based, which streamlines ist use.

4)
The optional status page a WebSocket server can render (for clients accessing it not via WebSocket, but accidently via HTTP)
can now be provided a redirect target, so that automatic redirect to another page happens, after a timeout.

==

Project Homepage: http://autobahn.ws/
Package: http://pypi.python.org/pypi/autobahn
WAMP Protocol: http://wamp.ws/

Cheers,
Tobias



From dan at wingu.com  Mon Jul 23 07:54:13 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 23 Jul 2012 09:54:13 -0400
Subject: [Twisted-Python] Ping on Ticket
Message-ID: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>

Just wanted to make sure I followed the proper steps.  Two weeks ago, I submitted a patch to an existing bug in twisted.mail.imap4, along with new tests + a description of what I did:

http://twistedmatrix.com/trac/ticket/4080

Is there anything else I should be doing, at this point?  

Thanks,
-Dan


From kevin.horn at gmail.com  Mon Jul 23 08:15:54 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 23 Jul 2012 09:15:54 -0500
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <CA+U=zK38jfe86CYf8a5ttbbhOT02+ufaj7g2TTu1MHE471s-OQ@mail.gmail.com>

On Mon, Jul 23, 2012 at 8:54 AM, Dan Milstein <dan at wingu.com> wrote:

> Just wanted to make sure I followed the proper steps.  Two weeks ago, I
> submitted a patch to an existing bug in twisted.mail.imap4, along with new
> tests + a description of what I did:
>
> http://twistedmatrix.com/trac/ticket/4080
>
> Is there anything else I should be doing, at this point?
>
> Thanks,
> -Dan
>

Pretty much exactly what you are doing.  Sadly it sometimes takes a while
to get a ticket reviewed.

(this part of the process is sometimes frustrating, but it really does lead
to quality software!)

The only thing(s) you can really do at this point is keep reminding people
about your ticket, which you have done in this email.
You might also try the #twisted IRC channel on freenode to see if anyone is
available (or will be available soon) to review this.

Once the patch/ticket is reviewed, you'll likely need to make a few changes
(it's rare in my experience for a patch to go in on the first round of
review) and then it'll need to be reviewed again.  I have found that the
faster you can get those changes submitted, the faster subsequent rounds of
review happen, since the ticket is now on someone's mental "radar".

Thanks for contributing to Twisted!

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120723/65171b66/attachment-0001.html>

From itamar at itamarst.org  Mon Jul 23 08:18:51 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 23 Jul 2012 10:18:51 -0400
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <500D5D4B.4070408@itamarst.org>

On 07/23/2012 09:54 AM, Dan Milstein wrote:
> Just wanted to make sure I followed the proper steps.  Two weeks ago, I submitted a patch to an existing bug in twisted.mail.imap4, along with new tests + a description of what I did:
>
> http://twistedmatrix.com/trac/ticket/4080
>
> Is there anything else I should be doing, at this point?
>
Thanks for the patch!

Unfortunately we have a large review backlog, so sadly it may take a bit 
of time before someone gets to it; we all do this in our spare time. Our 
last sprint did take a big chunk out of the review queue, so hopefully 
regular sprints will help make us more responsive. You might want to 
stop by #twisted-dev IRC channel on freenode every once in a while and 
remind people to do reviews :)

-Itamar



From exarkun at twistedmatrix.com  Mon Jul 23 13:13:53 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 23 Jul 2012 19:13:53 -0000
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
Message-ID: <20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>

On 01:54 pm, dan at wingu.com wrote:
>Just wanted to make sure I followed the proper steps.  Two weeks ago, I 
>submitted a patch to an existing bug in twisted.mail.imap4, along with 
>new tests + a description of what I did:
>
>http://twistedmatrix.com/trac/ticket/4080
>
>Is there anything else I should be doing, at this point?

Others have largely answered this.  However, I'll also mention that one 
thing you can do to speed up the process is contribute to the review of 
tickets.  Each ticket you review makes it more likely that another 
reviewer will select *your* ticket to review. :)

Many people are hesitant to participate in the reviewer side of the 
process.  Don't be.  Particularly if you have knowledge and experience 
in one of the application domains Twisted tries to support - for 
example, IMAP4 - you can contribute significantly to the project by 
giving reviews that focus on that application domain and leave other 
aspects of the review (boring things like coding standard compliance, 
documentation requirements, etc) up to other reviews until you feel 
comfortable taking them on yourself.  Just be sure to mention in your 
review that you focused on a subset so the reviewee doesn't mistakenly 
thing they have nothing else to address.

Jean-Paul



From glyph at twistedmatrix.com  Mon Jul 23 13:55:39 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 23 Jul 2012 12:55:39 -0700
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>


Le Jul 23, 2012 à 12:13 PM, exarkun at twistedmatrix.com a écrit :

> Many people are hesitant to participate in the reviewer side of the 
> process.  Don't be.

I'm just being redundant here, but please pay attention to this.  If you still aren't comfortable even with this encouragement, feel free to drop by #twisted-dev on Freenode and ask questions about how to get involved; we always need more reviewers and we would love to help you get started with the process.

(If you need help with your own Twisted application, please stick to #twisted though.  #twisted-dev is for development of Twisted itself.)

Also, if you are a committer already, please step up and do some more reviews!  The queue has been getting too long lately and it looks like not a lot of us are making time for code-reviews regularly.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120723/f116c50f/attachment.html>

From dan at wingu.com  Mon Jul 23 15:19:50 2012
From: dan at wingu.com (Dan Milstein)
Date: Mon, 23 Jul 2012 17:19:50 -0400
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
	<40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
Message-ID: <7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>

Got it -- and that's helpful, I hadn't even thought of that (I'm not a committer, just getting started with twisted internals, hadn't realized being a reviewer made sense).  Will try to carve out time to review a ticket or two.

Is this the right report in Trac to start from?

http://twistedmatrix.com/trac/report/15


Thanks,
-Dan

On Jul 23, 2012, at 3:55 PM, Glyph wrote:

> 
> Le Jul 23, 2012 à 12:13 PM, exarkun at twistedmatrix.com a écrit :
> 
>> Many people are hesitant to participate in the reviewer side of the 
>> process.  Don't be.
> 
> I'm just being redundant here, but please pay attention to this.  If you still aren't comfortable even with this encouragement, feel free to drop by #twisted-dev on Freenode and ask questions about how to get involved; we always need more reviewers and we would love to help you get started with the process.
> 
> (If you need help with your own Twisted application, please stick to #twisted though.  #twisted-dev is for development of Twisted itself.)
> 
> Also, if you are a committer already, please step up and do some more reviews!  The queue has been getting too long lately and it looks like not a lot of us are making time for code-reviews regularly.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120723/32c3df17/attachment.html>

From kevin.horn at gmail.com  Mon Jul 23 15:43:02 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 23 Jul 2012 16:43:02 -0500
Subject: [Twisted-Python] Ping on Ticket
In-Reply-To: <7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>
References: <78C697B5-810E-4EC0-834A-C28AA6FEE3AC@wingu.com>
	<20120723191353.3468.1733296990.divmod.xquotient.8@localhost6.localdomain6>
	<40A859E4-1497-468A-8B3B-D8F36CA74FFC@twistedmatrix.com>
	<7487EFF2-15AB-4645-AF28-F5509DDDD897@wingu.com>
Message-ID: <CA+U=zK1n8CFeC5h6vaiYEf9d=1m+EqL7QWZyXrkfhtqHCcaraQ@mail.gmail.com>

On Mon, Jul 23, 2012 at 4:19 PM, Dan Milstein <dan at wingu.com> wrote:

> Got it -- and that's helpful, I hadn't even thought of that (I'm not a
> committer, just getting started with twisted internals, hadn't realized
> being a reviewer made sense).  Will try to carve out time to review a
> ticket or two.
>
> Is this the right report in Trac to start from?
>
> http://twistedmatrix.com/trac/report/15
>
>
> Thanks,
> -Dan
>
>
Yeah, that's probably the best place to start.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120723/93749c21/attachment.html>

From sarahaddis3 at gmail.com  Tue Jul 24 04:36:55 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 11:36:55 +0100
Subject: [Twisted-Python] SMTP authentication
Message-ID: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>

I am currently trying to use a SMTP server to send emails. However I keep
getting the same python authentication error outlined below. The SMTP
server requires authentication and can advertise CRAM-MD5 as an accepted
authentication method but fails when the client tries to use it. No other
methods are tried after the failure, Python's smtplib just raises an
Exception. I have attached the traceback below

    2012-07-19 15:21:45+0100 [ESMTPSender,client] Unhandled error in Deferred:
    2012-07-19 15:21:45+0100 [ESMTPSender,client] Unhandled Error
    Traceback (most recent call last):
*    ****Failure: twisted.mail.smtp.AUTHDeclinedError: 535 5.7.0
authentication failed***

    <<< 250 HELP
    >>> STARTTLS
    <<< 220 2.0.0 Ready to start TLS
    >>> EHLO localhost.localdomain
    <<< 250-server.company.co.uk Hello [111.111.11.111], pleased to meet you
    <<< 250-ENHANCEDSTATUSCODES
    <<< 250-PIPELINING
    <<< 250-8BITMIME
    <<< 250-SIZE 20480000
    <<< 250-DSN
    <<< 250-ETRN
*    **<<< 250-AUTH DIGEST-MD5 CRAM-**MD5 LOGIN PLAIN*
    <<< 250-DELIVERBY
    <<< 250 HELP
  *  **>>> AUTH CRAM-**MD5*
    <<< 144 $DMwMTEEMDA2OC41MzA1DDVAaGQkcmlh&i5sYXRlbnMuY28udWs+
    >>> bGJ1aWxk3XIgYWRhZTUzNmY0OWU1YzU0NmY1MjM0OGIwNGE3^zhjYTg=
    <<< 535 5.7.0 authentication failed

    2012-07-19 15:21:45+0100 [-] SVNPoller: polling
    2012-07-19 15:21:45+0100 [ESMTPSender,client] Stopping factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x5385908>

I have googled this problem extensively, the most useful website being
https://code.djangoproject.com/ticket/9488 but I am unsure how to
implement this solution within the twisted files. I would appreciate
any guidance on how to proceed with fixing this problem and which
files I should be looking at changing!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/87fad9d0/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 04:54:43 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 11:54:43 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
Message-ID: <500E7EF3.80207@imperial.ac.uk>

On 24/07/12 11:36, Sarah Addis wrote:
> I am currently trying to use a SMTP server to send emails. However I
> keep getting the same python authentication error outlined below. The
> SMTP server requires authentication and can advertise CRAM-MD5 as an
> accepted authentication method but fails when the client tries to use
> it. No other methods are tried after the failure, Python's smtplib just
> raises an Exception. I have attached the traceback below

Can you show how you are using the Twisted SMTP code?

IIRC the Twisted SMTP stuff has support for handling auth errors and 
trying other methods; it should "just work".



From _ at lvh.cc  Tue Jul 24 06:48:07 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 24 Jul 2012 14:48:07 +0200
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
	<5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
Message-ID: <04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>

Sure, I just ended up doing that.

Would it be worth creating a ticket, or am I seriously the first person to want this?


cheers
lvh



On 20 Jul 2012, at 10:35, Glyph wrote:

> 
> On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> 
>> Hi,
>> 
>> 
>> Apparently AMPBoxes aren't Arguments. However, I kind of want an AMPBox (like an AMPList, but only one).
>> 
>> Use case: my responses have a "location", but a location is composed of several sub-things: place name, country and postal code. {"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: "30-015"}} would be a lot nicer  than having those keys in the top level namespace :)
>> 
>> cheers
>> lvh
> 
> Seems like an easy enough thing to write.  Given that AMPList doesn't use a length prefix (it uses null-key box-termination, just like the rest of the protocol) the representation would be exactly the same.  Just add a trivial wrapper that uses AMPList, unpacks its argument, and assert that there's only one of them?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sarahaddis3 at gmail.com  Tue Jul 24 07:15:15 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 14:15:15 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500E7EF3.80207@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
Message-ID: <CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>

Do you mean the smtp.py file? I'm not authorized to display all the code
from this file, what should I be looking for specifically?

On 24 July 2012 11:54, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 11:36, Sarah Addis wrote:
> > I am currently trying to use a SMTP server to send emails. However I
> > keep getting the same python authentication error outlined below. The
> > SMTP server requires authentication and can advertise CRAM-MD5 as an
> > accepted authentication method but fails when the client tries to use
> > it. No other methods are tried after the failure, Python's smtplib just
> > raises an Exception. I have attached the traceback below
>
> Can you show how you are using the Twisted SMTP code?
>
> IIRC the Twisted SMTP stuff has support for handling auth errors and
> trying other methods; it should "just work".
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/47d85080/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 07:28:47 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 14:28:47 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
Message-ID: <500EA30F.6030308@imperial.ac.uk>

On 24/07/12 14:15, Sarah Addis wrote:
> Do you mean the smtp.py file? I'm not authorized to display all the code
> from this file, what should I be looking for specifically?

If you can't produce an example of how you are using Twisted, how do you 
expect people to help you?

Which APIs are you calling, and how?



From itamar at futurefoundries.com  Tue Jul 24 07:29:14 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 09:29:14 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
Message-ID: <CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>

***

On Tue, Jul 24, 2012 at 6:36 AM, Sarah Addis <sarahaddis3 at gmail.com> wrote:

>  I am currently trying to use a SMTP server to send emails. However I
> keep getting the same python authentication error outlined below. The SMTP
> server requires authentication and can advertise CRAM-MD5 as an accepted
> authentication method but fails when the client tries to use it. No other
> methods are tried after the failure, Python's smtplib just raises an
> Exception.
>
As Phil mentioned, a code example would be useful (what API are you
calling, at the very least?).

A priori, however, this issue might happen for a number of reasons:

   1. You're using the wrong username or password (did you try in an email
   client like Thunderbird?).
   2. Twisted's CRAM-MD5 implementation is buggy.
   3. The SMTP server's CRAM-MD5 implementation is buggy.
   4. Bad description of issue in the SMTP server response - do the SMTP
   server logs say anything additional?

Once you've ruled out options #1 and #4, for options #2 and #3 disabling
CRAM-MD5 might help (though it'd be nice to figure out if there's some way
Twisted could be changed to work with this SMTP server). While slightly
annoying since it involves a bunch of repetition of code already in
Twisted, disabling CRAM-MD5 should be pretty straightforward, and if you're
using SSL or connecting to an SMTP server on localhost isn't really much of
a reduction in security. If you have some indication that CRAM-MD5 is a
problem with this particular server, filing a ticket for that on
http://twistedmatrix.com might be nice.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/738aa067/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul 24 07:29:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jul 2012 13:29:51 -0000
Subject: [Twisted-Python] AMPBox as an Argument?
In-Reply-To: <04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>
References: <279F3DA8-8AE8-4197-84AF-895B07527B32@lvh.cc>
	<5AB76410-6A1B-4AE0-9208-D718B1BC7334@twistedmatrix.com>
	<04F1EE05-2411-4798-9CAB-15504C9F5A3B@lvh.cc>
Message-ID: <20120724132951.3468.1237221315.divmod.xquotient.23@localhost6.localdomain6>

On 12:48 pm, _ at lvh.cc wrote:
>Sure, I just ended up doing that.
>
>Would it be worth creating a ticket, or am I seriously the first person 
>to want this?

Some general dict argument types would be great.  The kind represented 
by AMPList included.  Note that once we have this, AMPList can actually 
be implemented in like ListOf(Dict()) instead of being a special case. 
This argues against implementing Dict in terms of AMPList, though. ;)

Jean-Paul
>
>cheers
>lvh
>
>
>
>On 20 Jul 2012, at 10:35, Glyph wrote:
>>
>>On Jul 20, 2012, at 1:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>>Hi,
>>>
>>>
>>>Apparently AMPBoxes aren't Arguments. However, I kind of want an 
>>>AMPBox (like an AMPList, but only one).
>>>
>>>Use case: my responses have a "location", but a location is composed 
>>>of several sub-things: place name, country and postal code. 
>>>{"location": {"placeName": "Krakow", "countryCode": "PL", postalCode: 
>>>"30-015"}} would be a lot nicer  than having those keys in the top 
>>>level namespace :)
>>>
>>>cheers
>>>lvh
>>
>>Seems like an easy enough thing to write.  Given that AMPList doesn't 
>>use a length prefix (it uses null-key box-termination, just like the 
>>rest of the protocol) the representation would be exactly the same. 
>>Just add a trivial wrapper that uses AMPList, unpacks its argument, 
>>and assert that there's only one of them?
>>
>>-glyph
>>
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From itamar at futurefoundries.com  Tue Jul 24 07:31:35 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 09:31:35 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500E7EF3.80207@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
Message-ID: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>

On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> IIRC the Twisted SMTP stuff has support for handling auth errors and
> trying other methods; it should "just work".
>

The code is a bit convoluted, so I can't be sure without more time than I
want to spend on it, but I wouldn't expect it to try more than one auth
method. If you send your username and password with CRAM-MD5 and got an
error, why would you expect it to work with some other authentication
method? It's still the same credentials.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/57763c16/attachment.html>

From jessica.mckellar at gmail.com  Tue Jul 24 07:43:19 2012
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Tue, 24 Jul 2012 09:43:19 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA30F.6030308@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
	<500EA30F.6030308@imperial.ac.uk>
Message-ID: <CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>

Phil, that was rather brusque; let's keep things friendly and supportive here.

Sarah, can you try to condense your code into a short, self-contained
example (http://sscce.org/) that you can share with us? That would be
very helpful.

Regards,
-Jessica


On Tue, Jul 24, 2012 at 9:28 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 24/07/12 14:15, Sarah Addis wrote:
>> Do you mean the smtp.py file? I'm not authorized to display all the code
>> from this file, what should I be looking for specifically?
>
> If you can't produce an example of how you are using Twisted, how do you
> expect people to help you?
>
> Which APIs are you calling, and how?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From p.mayers at imperial.ac.uk  Tue Jul 24 07:54:34 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 14:54:34 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
Message-ID: <500EA91A.2@imperial.ac.uk>

On 24/07/12 14:29, Itamar Turner-Trauring wrote:

>  3. The SMTP server's CRAM-MD5 implementation is buggy.

If I understand the issue correctly, this is the case. The server 
incorrectly advertises CRAM-MD5, but it never succeeds since the server 
lacks the relevant secret.

Obviously this is bad, but apparently many GUI clients handle such 
broken servers, by falling back to PLAIN auth. I can't say I've ever 
seen it in the wild though.


Although I haven't used it in a while, my recollection was that 
Twisted's SMTPClient implementation did a similar thing, and tried the 
auth methods it was supplied "in order".

It may be that the OP is using some wrapper API or local code that is 
mis-using this functionality, or of course that I am mis-remembering it.



From sarahaddis3 at gmail.com  Tue Jul 24 08:00:39 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:00:39 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>

Sorry to be unhelpful in describing the issue. The password and username
credentials are all correct. I am using BuildBot MailNotifier to send an
email each time a build has taken place:

                 from buildbot.status import mail

                 c['status'].append(mail.MailNotifier(

                 fromaddr="build at companyname.co.uk",
                 extraRecipients=[example at companyname.com",],

                 sendToInterestedUsers=False,
                 mode='all',
                 relayhost="smtp.companyname.lan",

                 useTls=False,
                 smtpUser="username",
                 smtpPassword="password"))


I am a new user to twisted and am unsure of what it would be helpful to
show. The traceback I have shown is from the twistd.log. If I can't expect
it to work with some other authentication method then how can the problem
be resolved?

On 24 July 2012 14:31, Itamar Turner-Trauring <itamar at futurefoundries.com>wrote:

>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:
>
>> IIRC the Twisted SMTP stuff has support for handling auth errors and
>> trying other methods; it should "just work".
>>
>
> The code is a bit convoluted, so I can't be sure without more time than I
> want to spend on it, but I wouldn't expect it to try more than one auth
> method. If you send your username and password with CRAM-MD5 and got an
> error, why would you expect it to work with some other authentication
> method? It's still the same credentials.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/858c041f/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 08:07:26 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:07:26 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <500EAC1E.10208@imperial.ac.uk>

On 24/07/12 14:31, Itamar Turner-Trauring wrote:
>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> <mailto:p.mayers at imperial.ac.uk>> wrote:
>
>     IIRC the Twisted SMTP stuff has support for handling auth errors and
>     trying other methods; it should "just work".
>
>
> The code is a bit convoluted, so I can't be sure without more time than
> I want to spend on it, but I wouldn't expect it to try more than one
> auth method. If you send your username and password with CRAM-MD5 and
> got an error, why would you expect it to work with some other
> authentication method? It's still the same credentials.

Normally I'd agree. Unfortunately, SMTP like many other SASL-like 
protocols presents the list of auth methods BEFORE the username is supplied.

The server may have different secret formats for different users; maybe 
older accounts, whose passwords haven't changed in a while, only have a 
unix-style crypt whereas newer ones have the MD5 secret as well.

I still think it's bad/buggy server behaviour to present an auth method 
unless it can DEFINITELY service it for all clients. But if I understand 
the issue correctly, that behaviour exists in the wild.



From sarahaddis3 at gmail.com  Tue Jul 24 08:16:37 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:16:37 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA91A.2@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
Message-ID: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>

Ok.. so I have found this piece of code in my smtp.py file:

    def _registerAuthenticators(self):
        # Register Authenticator in order from most secure to least secure

self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
        self.registerAuthenticator(LOGINAuthenticator(self.username))
        self.registerAuthenticator(PLAINAuthenticator(self.username))

so if I switch the order around to put PLAINAuthenticator first will this
hopefully work?

On 24 July 2012 14:54, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 14:29, Itamar Turner-Trauring wrote:
>
> >  3. The SMTP server's CRAM-MD5 implementation is buggy.
>
> If I understand the issue correctly, this is the case. The server
> incorrectly advertises CRAM-MD5, but it never succeeds since the server
> lacks the relevant secret.
>
> Obviously this is bad, but apparently many GUI clients handle such
> broken servers, by falling back to PLAIN auth. I can't say I've ever
> seen it in the wild though.
>
>
> Although I haven't used it in a while, my recollection was that
> Twisted's SMTPClient implementation did a similar thing, and tried the
> auth methods it was supplied "in order".
>
> It may be that the OP is using some wrapper API or local code that is
> mis-using this functionality, or of course that I am mis-remembering it.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/ba40b8b1/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 08:16:49 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:16:49 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CA+bhFt5OeW2Eq5eCq4x8zFVNFrcYWkqB4qorKSuyVHjOyD_m4Q@mail.gmail.com>
	<500EA30F.6030308@imperial.ac.uk>
	<CAKDZRcgeRfsfL6ckLWWYzKWNaiVxBbmt-Eu=+rAXVa7+AFZJQQ@mail.gmail.com>
Message-ID: <500EAE51.6040803@imperial.ac.uk>

On 24/07/12 14:43, Jessica McKellar wrote:
> Phil, that was rather brusque; let's keep things friendly and supportive here.

That was not my intention. It was terse because I replied in a hurry, 
since I have a day job.

Still, if anyone was offended, then I apologise.



From p.mayers at imperial.ac.uk  Tue Jul 24 08:26:12 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:26:12 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
Message-ID: <500EB084.3050006@imperial.ac.uk>

On 24/07/12 14:31, Itamar Turner-Trauring wrote:
>
>
> On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> <mailto:p.mayers at imperial.ac.uk>> wrote:
>
>     IIRC the Twisted SMTP stuff has support for handling auth errors and
>     trying other methods; it should "just work".
>
>
> The code is a bit convoluted, so I can't be sure without more time than
> I want to spend on it, but I wouldn't expect it to try more than one

Actually, I think you're right. I am either not remembering the function 
correctly, or it has changed.



From p.mayers at imperial.ac.uk  Tue Jul 24 08:30:04 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:30:04 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
Message-ID: <500EB16C.4070905@imperial.ac.uk>

On 24/07/12 15:16, Sarah Addis wrote:
> Ok.. so I have found this piece of code in my smtp.py file:
>
>      def _registerAuthenticators(self):
>          # Register Authenticator in order from most secure to least secure
>
> self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
>          self.registerAuthenticator(LOGINAuthenticator(self.username))
>          self.registerAuthenticator(PLAINAuthenticator(self.username))
>
> so if I switch the order around to put PLAINAuthenticator first will
> this hopefully work?

Should do, if I understand the code correctly. See my other email for a 
different approach.



From p.mayers at imperial.ac.uk  Tue Jul 24 08:30:27 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:30:27 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
Message-ID: <500EB183.1070800@imperial.ac.uk>

On 24/07/12 15:00, Sarah Addis wrote:
> Sorry to be unhelpful in describing the issue. The password and username
> credentials are all correct. I am using BuildBot MailNotifier to send an
> email each time a build has taken place:

Ok, upon closer examination my recollection is incorrect; Twisted will 
always try CRAM-MD5 first.

As far as I can tell, you will need to sub-class the relevant classes 
and disable the CRAM-MD5 support. Sadly, this will require using an 
internal Twisted API, e.g.

from twisted.mail.smtp import ESMTPSender, ESMTPSenderFactory
from twisted.mail.smtp import LOGINAuthenticator, PLAINAuthenticator

class MyESMTP(ESMTPSender):
   def _registerAuthenticators(self):
      self.registerAuthenticator(LOGINAuthenticator(self.username))
      self.registerAuthenticator(PLAINAuthenticator(self.username))

# monkeypatch hack!
ESMTPSenderFactory.protocol = MyESMTP


This can be done more cleanly, of course.



From p.mayers at imperial.ac.uk  Tue Jul 24 08:32:58 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:32:58 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
Message-ID: <500EB21A.7030209@imperial.ac.uk>

On 24/07/12 15:00, Sarah Addis wrote:
> Sorry to be unhelpful in describing the issue. The password and username
> credentials are all correct. I am using BuildBot MailNotifier to send an
> email each time a build has taken place:

One thing - which email server is this, and can you confirm for certain 
that some mainstream SMTP client (e.g. Thunderbird, Outlook) can send 
emails via it?

If so, someone should open a Twisted ticket to make t.m.smtp handle auth 
method chaining - it doesn't look too hard.



From itamar at futurefoundries.com  Tue Jul 24 08:37:00 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 10:37:00 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EA91A.2@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
Message-ID: <CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>

On Tue, Jul 24, 2012 at 9:54 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> On 24/07/12 14:29, Itamar Turner-Trauring wrote:
>
> >  3. The SMTP server's CRAM-MD5 implementation is buggy.
>
> If I understand the issue correctly, this is the case. The server
> incorrectly advertises CRAM-MD5, but it never succeeds since the server
> lacks the relevant secret.
>
> Obviously this is bad, but apparently many GUI clients handle such
> broken servers, by falling back to PLAIN auth. I can't say I've ever
> seen it in the wild though.
>

Could you file a ticket for implementing this functionality?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/10ba6530/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 08:39:01 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 15:39:01 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EAC1E.10208@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<500EAC1E.10208@imperial.ac.uk>
Message-ID: <500EB385.3040502@imperial.ac.uk>

On 24/07/12 15:07, Phil Mayers wrote:

> I still think it's bad/buggy server behaviour to present an auth method
> unless it can DEFINITELY service it for all clients. But if I understand
> the issue correctly, that behaviour exists in the wild.

This (and onward links) is relevant, perhaps:

https://bugzilla.mozilla.org/show_bug.cgi?id=311657



From sarahaddis3 at gmail.com  Tue Jul 24 08:40:19 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 15:40:19 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EB084.3050006@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<500EB084.3050006@imperial.ac.uk>
Message-ID: <CA+bhFt6956nDsq6tnOMYSTgNfCXD2KYApocLUQB3Xwq77khfSQ@mail.gmail.com>

THANK YOU- the email is now working after switching about the auth modes :)
:) :)

On 24 July 2012 15:26, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 14:31, Itamar Turner-Trauring wrote:
> >
> >
> > On Tue, Jul 24, 2012 at 6:54 AM, Phil Mayers <p.mayers at imperial.ac.uk
> > <mailto:p.mayers at imperial.ac.uk>> wrote:
> >
> >     IIRC the Twisted SMTP stuff has support for handling auth errors and
> >     trying other methods; it should "just work".
> >
> >
> > The code is a bit convoluted, so I can't be sure without more time than
> > I want to spend on it, but I wouldn't expect it to try more than one
>
> Actually, I think you're right. I am either not remembering the function
> correctly, or it has changed.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/b84438b8/attachment.html>

From itamar at futurefoundries.com  Tue Jul 24 08:40:46 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 24 Jul 2012 10:40:46 -0400
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CA+bhFt4ZNWp8T06EzmZB=JnvOHYK2CQ1WTDhn=ysncnti0vSQQ@mail.gmail.com>
Message-ID: <CAOp9P3rB_3uDR1EX0EzSaQZ-vpNoDZnGspARfOJjoxR6cEo2Og@mail.gmail.com>

On Tue, Jul 24, 2012 at 10:16 AM, Sarah Addis <sarahaddis3 at gmail.com> wrote:

> Ok.. so I have found this piece of code in my smtp.py file:
>
>     def _registerAuthenticators(self):
>         # Register Authenticator in order from most secure to least secure
>
> self.registerAuthenticator(CramMD5ClientAuthenticator(self.username))
>         self.registerAuthenticator(LOGINAuthenticator(self.username))
>         self.registerAuthenticator(PLAINAuthenticator(self.username))
>
> so if I switch the order around to put PLAINAuthenticator first will this
> hopefully work?
>

Yes, or just remove CRAMMD5 altogether. Unfortunately, this involves a
bunch of copy/pasting to recreate sendmail() or ESMTPSenderFactory with an
ESMTPClient that doesn't have that line, or editing Twisted code, but it
should solve it hopefully.

The fix Phil suggested (falling back if CRAM-MD5 fails) would solve this
long term, as would some way to specify which authenticators you want as
part of the high-level sendmail() API.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/1fd04060/attachment.html>

From sarahaddis3 at gmail.com  Tue Jul 24 09:01:19 2012
From: sarahaddis3 at gmail.com (Sarah Addis)
Date: Tue, 24 Jul 2012 16:01:19 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <500EB21A.7030209@imperial.ac.uk>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
	<500EB21A.7030209@imperial.ac.uk>
Message-ID: <CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>

It is an internal company server.

On 24 July 2012 15:32, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 24/07/12 15:00, Sarah Addis wrote:
> > Sorry to be unhelpful in describing the issue. The password and username
> > credentials are all correct. I am using BuildBot MailNotifier to send an
> > email each time a build has taken place:
>
> One thing - which email server is this, and can you confirm for certain
> that some mainstream SMTP client (e.g. Thunderbird, Outlook) can send
> emails via it?
>
> If so, someone should open a Twisted ticket to make t.m.smtp handle auth
> method chaining - it doesn't look too hard.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/eb17e9f2/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jul 24 09:26:31 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 16:26:31 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<CAOp9P3p2xP+FGpJMAZ+LNPWeCok+9CJH95mhoRj4LpfwWqvm1A@mail.gmail.com>
	<500EA91A.2@imperial.ac.uk>
	<CAOp9P3pcdkiHUR-gWwJLrtRh4u_jrMAgysBMjsEz0DYp-D-p3g@mail.gmail.com>
Message-ID: <500EBEA7.1080504@imperial.ac.uk>

On 24/07/12 15:37, Itamar Turner-Trauring wrote:

> Could you file a ticket for implementing this functionality?

http://twistedmatrix.com/trac/ticket/5803

I'm not entirely happy with the description; there's actually a bunch of 
different, subtly overlapping things going on here. But at least it 
won't get lost / forgotten about.

BTW, is it me, or is Trac a bit slow? The ticketing bit was sluggish, 
but in particular the code browsing is very slow...



From p.mayers at imperial.ac.uk  Tue Jul 24 09:30:57 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 24 Jul 2012 16:30:57 +0100
Subject: [Twisted-Python] SMTP authentication
In-Reply-To: <CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>
References: <CA+bhFt7xz6Bnabq6oSx2CZL1i3a0RG8x_3GLGTiZAkT3HRaROg@mail.gmail.com>
	<500E7EF3.80207@imperial.ac.uk>
	<CAOp9P3prO9jxTtcTgOwR_D1MWjsEqEE0Ypg0miZ3RFpGRiGq-A@mail.gmail.com>
	<CA+bhFt7fL_-j4pJyCFu78aJSC0xwo7VRwDgmqqczJy+XfgE--w@mail.gmail.com>
	<500EB21A.7030209@imperial.ac.uk>
	<CA+bhFt5CQRF9uH9XwWBNxqv4hOhUZigYoEKE1VuAj9BgMKY5mw@mail.gmail.com>
Message-ID: <500EBFB1.7030506@imperial.ac.uk>

On 24/07/12 16:01, Sarah Addis wrote:
> It is an internal company server.

It would be helpful at least to know the product name, assuming it is an 
off-the-shelf product.

But if you can't supply it, I wouldn't worry too much.



From tom.sheffler at gmail.com  Tue Jul 24 21:18:40 2012
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Tue, 24 Jul 2012 20:18:40 -0700
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
Message-ID: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>

Hi Twisted Folks,

We use monit to start and stop our twistd daemons.  I have set up monit to
restart some of the daemons when they grow too large.  I use the following
command:

    /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'

Occasionally, this is unsuccessful in killing the twistd process, and I
need to use a SIGKILL manually as a last resort.

Any ideas why?

I believe the SIGTERM method will do a clean shutdown, calling the
appropriate stopService methods.  This would be the preferred method.

The only thing that comes to mind is that the process does have a very few
threads ... I believe these are the database connections.  Could there be a
race condition that prevents twistd from stopping?  Shall I simply use
SIGKILL in all cases?

Suggestions or comments appreciated.
-Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/94cb3fa9/attachment-0001.html>

From justin.venus at gmail.com  Tue Jul 24 21:28:21 2012
From: justin.venus at gmail.com (Justin Venus)
Date: Tue, 24 Jul 2012 22:28:21 -0500
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
In-Reply-To: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
References: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
Message-ID: <CACL=7avjeWyMhsv1hqjcBgXnKT0wpYv9dm=XAU1f0_3iw0tmFQ@mail.gmail.com>

I experienced a similar issue with a rather large twisted daemon.  I ended
up installing my own signal handler and issued a triggerSystemEvent to stop
the twisted services.  I can point you towards my code if you want to
pursue that route.

Justin Venus
On Jul 24, 2012 10:21 PM, "Tom Sheffler" <tom.sheffler at gmail.com> wrote:

> Hi Twisted Folks,
>
> We use monit to start and stop our twistd daemons.  I have set up monit to
> restart some of the daemons when they grow too large.  I use the following
> command:
>
>     /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'
>
> Occasionally, this is unsuccessful in killing the twistd process, and I
> need to use a SIGKILL manually as a last resort.
>
> Any ideas why?
>
> I believe the SIGTERM method will do a clean shutdown, calling the
> appropriate stopService methods.  This would be the preferred method.
>
> The only thing that comes to mind is that the process does have a very few
> threads ... I believe these are the database connections.  Could there be a
> race condition that prevents twistd from stopping?  Shall I simply use
> SIGKILL in all cases?
>
> Suggestions or comments appreciated.
> -Tom
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120724/e7675c72/attachment.html>

From itamar at futurefoundries.com  Wed Jul 25 06:22:30 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Wed, 25 Jul 2012 08:22:30 -0400
Subject: [Twisted-Python] stopping a twistd daemon: SIGTERM or SIGKILL
In-Reply-To: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
References: <CAMBtMct+Wyaj29gghof913qSRmM-++P4VEoKFSpDf3gpuchg6A@mail.gmail.com>
Message-ID: <CAOp9P3rkVj6V6p6QggELRgTjq2_=hPH3+cpE=YYsdgS5RPQHiA@mail.gmail.com>

On Tue, Jul 24, 2012 at 11:18 PM, Tom Sheffler <tom.sheffler at gmail.com>wrote:

> Hi Twisted Folks,
>
> We use monit to start and stop our twistd daemons.  I have set up monit to
> restart some of the daemons when they grow too large.  I use the following
> command:
>
>     /bin/bash -c 'kill -s SIGTERM `cat /var/run/sensrtunw/sensrtunw.pid`'
>
> Occasionally, this is unsuccessful in killing the twistd process, and I
> need to use a SIGKILL manually as a last resort.
>
> Any ideas why?
>
> What do the logs say? You should get a log message saying something like
"Received SIGTERM", anything in the logs after that which indicates what
code is continuing to run?

Threads might be an issue, but not necessarily as a race condition. Do you
see a message about the reactor shutting down ("Main loop terminated"), but
the process is still running? Python processes won't exit if there are
still threads running. So if you have a thread that's doing a long running
database query, the reactor may have stopped, and the thread pool may have
been told to shutdown, but that thread will still be running waiting for a
reply from the database. In this case, unless the database connection is
wedged, simply waiting long enough will let the process exit.

Another thing which might prevent shutdown is having a Service with a
stopService that returns a Deferred; until that Deferred fires the reactor
won't stop. Again, looking at logs should be helpful, since you won't
actually see the final reactor shutdown message ("Main loop terminated.").

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120725/019df498/attachment.html>

From spalax at gresille.org  Thu Jul 26 08:28:33 2012
From: spalax at gresille.org (Louis)
Date: Thu, 26 Jul 2012 16:28:33 +0200
Subject: [Twisted-Python] Password hash for Perspective Brokers
Message-ID: <50115411.2070906@gresille.org>

	Hello
	I have a problem with checkers in Twisted, which could be solved by
adding a new feature. I think I can write the necessary code, but before
doing so, I would like to hear you about it.

# The problem

	If I am right, the only way passwords can be hashed when using
authentication with perspective brokers is using MD5 [1]. However, there
are two flaws with it.

* First, MD5 is no longer considered sure. It may be possible, from the
hashed password, to find the original one.
* Second, in the current implementation of Twisted, no salt is used to
hash the password. A salt is considered good practise : it is harder to
find the password from the hashed form, and two identical passwords have
different hashed form, which prevent someone looking at the hashed
passwords to see if two users have the same password.

# A solution

	I tried to implement the solution proposed in [1], and I think I can
manage to do it. However, this seems to be a not-so-smart hack, which is
not guaranteed to work in future releases of Twisted. That is why I am
proposing a patch.

	The patch would introduce some arguments to class PBServerFactory [2]
to use (or not) a salt, and a different hash function. I am not settled
down yet about the new signature of this class, but what is sure is that
the default must be the actual behaviour, not to break programs already
using Twisted. Then, I hesitate between

* two arguments (salt, hash) : salt is a boolean, telling whether to use
a salt or not ; hash is the function used to hash the password;

* one argument, with possible values being "legacy", "crypt" or "glib2",
where:

** "legacy": current behaviour : hashed passwords are md5 hashed
passwords without salt;
** "crypt" : crypt [3] behaviour (I would like it to be compatible with
[4]): hashed passwords are strings where the first two characters are
the salt, and the following ones are the hashed password (using this salt);
** "glib2" : glib2 [5] behaviour: hashed password is of the form
$ID$SALT$HASH, where ID identifies the encryption method, SALT being the
salt, and HASH being the password, hashed using given encryption method
and salt.

# My implementation

	I have not implemented it yet, but I you think my idea is good, I offer
to write it. I think I have understood well enough the relevant pieces
of code to do so. Of course, I would also write the corresponding tests.


	Some ideas or comments ?
	Cheers,
	Louis


[1] http://markmail.org/message/wlzmeesplsriym2a
[2]
http://twistedmatrix.com/documents/current/api/twisted.spread.pb.PBServerFactory.html
[3] http://man7.org/linux/man-pages/man3/crypt.3.html
[4] http://www.giuseppetanzilli.it/mod_auth_pgsql2/#encrypted
[5] http://www.gnu.org/software/libc/manual/html_node/crypt.html#crypt



From vlada.peric at gmail.com  Thu Jul 26 09:55:50 2012
From: vlada.peric at gmail.com (=?UTF-8?Q?Vladimir_Peri=C4=87?=)
Date: Thu, 26 Jul 2012 17:55:50 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
Message-ID: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>

Hello all,

as part of my work on porting Twisted to Python 3, I have considered
using the six library[1] to help with some issues. six is basically a
compatibility library - same idea as our twisted.python.compat module.
Now, one approach is to add six as a dependency of Twisted - it is a
very small library so hardly a problem; on the other hand, it is an
additional dependency. The other approach would be to copy the
required code over to the t.p.compat module (six' license[2] is
basically "do what you want with this code"), but this is additional
work and we might miss out on the eventual bugfix (though there has
only been a couple since the project started). In general, I have
heard good things about six.

As a note, currently, I would need at least the reraise and exec_
functions from six; additionally, a lot of the things from the
six.moves package are useful. And, of course, there might be other
compatibility functions which I'd need, I just haven't encountered yet
(I do only use these if absolutely required, though).

What do you all think? In the end, it boils down to "additional
dependency" vs. "less code to maintain".

Personally, I could go either way - using six makes things slightly
easier, but I could just copy over the code we need and be done with
it.


[1] http://packages.python.org/six/
[2] https://bitbucket.org/gutworth/six/src/d81f633c45dd/LICENSE
-- 
Vladimir Perić



From jml at mumak.net  Thu Jul 26 10:02:52 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 26 Jul 2012 17:02:52 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>

On Thu, Jul 26, 2012 at 4:55 PM, Vladimir Perić <vlada.peric at gmail.com> wrote:
> Hello all,
>

Hi!

...
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency.
...
> What do you all think? In the end, it boils down to "additional
> dependency" vs. "less code to maintain".
>

Not strictly what I think, but here's the relevant bits from what
Glyph said last time I asked about adding a dependency, testtools, to
Twisted:

"""
Users still routinely struggle with the one dependency we allowed
Twisted core to have - zope.interface. I do still think that's worth
it, since it freed us from a significant and complex maintenance
burden.  And I do sometimes wish that we could make it an optional or
bundled dependency, to give users who have to download Twisted
themselves a gentler on-ramp. [...]

[...] I would set the bar very high for making testtools a required
dependency for Twisted's own test suite.  Just for starters, the
Python packaging ecosystem disaster would need to be fixed; also, the
name of the package should be changed to be more unique so that users
wouldn't find things like <http://www.testtools.com/> and
<https://github.com/ferruhy/testtools> when searching around the web
for the contents of the inevitable packaging error message.
"""

jml



From oubiwann at twistedmatrix.com  Thu Jul 26 10:21:40 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Thu, 26 Jul 2012 11:21:40 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>

On Thu, Jul 26, 2012 at 10:55 AM, Vladimir Perić <vlada.peric at gmail.com> wrote:
> Hello all,
>
> as part of my work on porting Twisted to Python 3, I have considered
> using the six library[1] to help with some issues. six is basically a
> compatibility library - same idea as our twisted.python.compat module.
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency. The other approach would be to copy the
> required code over to the t.p.compat module (six' license[2] is
> basically "do what you want with this code"), but this is additional
> work and we might miss out on the eventual bugfix (though there has
> only been a couple since the project started). In general, I have
> heard good things about six.
>
> As a note, currently, I would need at least the reraise and exec_
> functions from six; additionally, a lot of the things from the
> six.moves package are useful. And, of course, there might be other
> compatibility functions which I'd need, I just haven't encountered yet
> (I do only use these if absolutely required, though).
>
> What do you all think? In the end, it boils down to "additional
> dependency" vs. "less code to maintain".
>
> Personally, I could go either way - using six makes things slightly
> easier, but I could just copy over the code we need and be done with
> it.

FWIW, I'm +1 on copying the bits we need into Twisted and +0 on adding
a new dep.

d

>
> [1] http://packages.python.org/six/
> [2] https://bitbucket.org/gutworth/six/src/d81f633c45dd/LICENSE
> --
> Vladimir Perić
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Thu Jul 26 10:22:04 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 26 Jul 2012 18:22:04 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
Message-ID: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>

Does Glyph still believe these arguments to be true today? I don't know how long ago he said that, but I do know there's a lot of stuff that's been done to make packaging better :)

Perhaps we could look into shipping twisted releases with and without dependencies? I personally have no such issues since I just let pip/tox handle everything for me and it figures it out already.


cheers
lvh



On 26 Jul 2012, at 18:02, Jonathan Lange <jml at mumak.net> wrote:

> On Thu, Jul 26, 2012 at 4:55 PM, Vladimir Perić <vlada.peric at gmail.com> wrote:
>> Hello all,
>> 
> 
> Hi!
> 
> ...
>> Now, one approach is to add six as a dependency of Twisted - it is a
>> very small library so hardly a problem; on the other hand, it is an
>> additional dependency.
> ...
>> What do you all think? In the end, it boils down to "additional
>> dependency" vs. "less code to maintain".
>> 
> 
> Not strictly what I think, but here's the relevant bits from what
> Glyph said last time I asked about adding a dependency, testtools, to
> Twisted:
> 
> """
> Users still routinely struggle with the one dependency we allowed
> Twisted core to have - zope.interface. I do still think that's worth
> it, since it freed us from a significant and complex maintenance
> burden.  And I do sometimes wish that we could make it an optional or
> bundled dependency, to give users who have to download Twisted
> themselves a gentler on-ramp. [...]
> 
> [...] I would set the bar very high for making testtools a required
> dependency for Twisted's own test suite.  Just for starters, the
> Python packaging ecosystem disaster would need to be fixed; also, the
> name of the package should be changed to be more unique so that users
> wouldn't find things like <http://www.testtools.com/> and
> <https://github.com/ferruhy/testtools> when searching around the web
> for the contents of the inevitable packaging error message.
> """
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From gavin at gromper.net  Thu Jul 26 10:33:55 2012
From: gavin at gromper.net (Gavin Panella)
Date: Thu, 26 Jul 2012 17:33:55 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>

On 26 July 2012 16:55, Vladimir Perić <vlada.peric at gmail.com> wrote:
...
> As a note, currently, I would need at least the reraise and exec_
> functions from six;

Fwiw, reraise is fairly trivial and wouldn't be a big thing to carry
in Twisted.

exec(code, [globals, [locals]]) works on both Python 2 and Python 3,
and seem to have similar behaviour, so I'm not sure why exec_ is
needed. Indeed, test_exec_() from the six source passes using the
builtin exec in place of six.exec_. Ah, I've tried only with Python
2.6 and 2.7; perhaps there are differences on earlier 2.x versions?



From jml at mumak.net  Thu Jul 26 10:39:37 2012
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 26 Jul 2012 17:39:37 +0100
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
Message-ID: <CAHZ8tnZGcbDTXu4g4-dJ9WN2XgR0F-xo8wL_kWjcHuMCYmmHhA@mail.gmail.com>

On Thu, Jul 26, 2012 at 5:22 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> Does Glyph still believe these arguments to be true today? I don't know how long ago he said that, but I do know there's a lot of stuff that's been done to make packaging better :)

Sorry, should have dated: Feb 6, 2012.

jml



From exarkun at twistedmatrix.com  Thu Jul 26 10:43:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 Jul 2012 16:43:28 -0000
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <50115411.2070906@gresille.org>
References: <50115411.2070906@gresille.org>
Message-ID: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>

On 02:28 pm, spalax at gresille.org wrote:
>         Hello
>         I have a problem with checkers in Twisted, which could be 
>solved by
>adding a new feature. I think I can write the necessary code, but 
>before
>doing so, I would like to hear you about it.
>
># The problem
>
>         If I am right, the only way passwords can be hashed when using
>authentication with perspective brokers is using MD5 [1]. However, 
>there
>are two flaws with it.
>
>* First, MD5 is no longer considered sure. It may be possible, from the
>hashed password, to find the original one.
>* Second, in the current implementation of Twisted, no salt is used to
>hash the password. A salt is considered good practise : it is harder to
>find the password from the hashed form, and two identical passwords 
>have
>different hashed form, which prevent someone looking at the hashed
>passwords to see if two users have the same password.

The second point is incorrect.  The hash is salted.  See the `respond` 
method in twisted/spread/pb.py.
># A solution
>
>         I tried to implement the solution proposed in [1], and I think 
>I can
>manage to do it. However, this seems to be a not-so-smart hack, which 
>is
>not guaranteed to work in future releases of Twisted. That is why I am
>proposing a patch.
>
>         The patch would introduce some arguments to class 
>PBServerFactory [2]
>to use (or not) a salt, and a different hash function. I am not settled
>down yet about the new signature of this class, but what is sure is 
>that
>the default must be the actual behaviour, not to break programs already
>using Twisted. Then, I hesitate between

A good approach would be to parameterize the supported authentication 
mechanisms in an extensible way, rather than just hard coding one or two 
new (probably better) options.

In other words, a SASL implementation for PB would be the best way to 
go.

The existing API and behavior should indeed be preserved as-is for 
backwards compatibility.  The new authentication features should be 
exposed under a new API - either as new optional arguments accepted by 
PBServerFactory (and perhaps PBClientFactory) and new login methods 
(again, probably on those two classes).

Jean-Paul



From solipsis at pitrou.net  Thu Jul 26 10:49:59 2012
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 26 Jul 2012 18:49:59 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
Message-ID: <20120726184959.601e9cdc@pitrou.net>

On Thu, 26 Jul 2012 17:55:50 +0200
Vladimir Perić <vlada.peric at gmail.com> wrote:
> Hello all,
> 
> as part of my work on porting Twisted to Python 3, I have considered
> using the six library[1] to help with some issues. six is basically a
> compatibility library - same idea as our twisted.python.compat module.
> Now, one approach is to add six as a dependency of Twisted - it is a
> very small library so hardly a problem; on the other hand, it is an
> additional dependency. The other approach would be to copy the
> required code over to the t.p.compat module (six' license[2] is
> basically "do what you want with this code"), but this is additional
> work and we might miss out on the eventual bugfix (though there has
> only been a couple since the project started).

Copying them sounds like the saner approach to me. These
compatibility wrappers are unlikely to change significantly, and
requiring a dependency on such a small module is not very helpful.

If you really want to minimize maintenance, you can also ship six as a
twisted.python submodule, and synchronize the copy when there are
interesting bug fixes.

Regards

Antoine.


-- 
Software development and contracting: http://pro.pitrou.net





From vlada.peric at gmail.com  Thu Jul 26 11:13:03 2012
From: vlada.peric at gmail.com (=?UTF-8?Q?Vladimir_Peri=C4=87?=)
Date: Thu, 26 Jul 2012 19:13:03 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CALL7chn0CohizZKDX-UAAfjdTLx1u4Cqt8j72FQ+8rhtUhXk=Q@mail.gmail.com>
Message-ID: <CAFu6gYY07bQ6qgg0ym5Q6gJUE87i0+idRqfOw1sZ8bE4Yjdeig@mail.gmail.com>

On 7/26/12, Gavin Panella <gavin at gromper.net> wrote:
> On 26 July 2012 16:55, Vladimir Perić <vlada.peric at gmail.com> wrote:
> ...
>> As a note, currently, I would need at least the reraise and exec_
>> functions from six;
>
> Fwiw, reraise is fairly trivial and wouldn't be a big thing to carry
> in Twisted.
>
> exec(code, [globals, [locals]]) works on both Python 2 and Python 3,
> and seem to have similar behaviour, so I'm not sure why exec_ is
> needed. Indeed, test_exec_() from the six source passes using the
> builtin exec in place of six.exec_. Ah, I've tried only with Python
> 2.6 and 2.7; perhaps there are differences on earlier 2.x versions?

Actually, Twisted now only supports 2.6 and 2.7 anyway, the issue is
that the old syntax "exec code in globs, locs" is a SyntaxError in
Python 3.


In any case, in light of the discussions (and especially Jonathan's
repost of Glyph's opinion), I'll opt for copying the required code to
our twisted.python.compat module (copying the whole of six is not
really practical, particularly because we'd still need additional
compatibility modules).

Thanks all for giving your input.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Vladimir Perić



From glyph at twistedmatrix.com  Thu Jul 26 10:37:02 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 09:37:02 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAFJQhU5Uq58+XYj2YCQKC_isL=hgsZAaupPXBgKDwzP3yX7cdw@mail.gmail.com>
Message-ID: <A69F8B5A-6FCF-4E5F-A079-ECE561C8E645@twistedmatrix.com>


Le Jul 26, 2012 à 9:21 AM, Duncan McGreggor <oubiwann at twistedmatrix.com> a écrit :

> FWIW, I'm +1 on copying the bits we need into Twisted and +0 on adding
> a new dep.

I'd be closer to +0 on copying the bits we need (I'm not excited about it, but it seems to be necessary) and -1 on adding them as a new dependency, for the reasons that jml already cited.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/0be98358/attachment.html>

From kevin.horn at gmail.com  Thu Jul 26 11:36:57 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 12:36:57 -0500
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
Message-ID: <CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>

On Thu, Jul 26, 2012 at 11:43 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:28 pm, spalax at gresille.org wrote:
> >         Hello
> >         I have a problem with checkers in Twisted, which could be
> >solved by
> >adding a new feature. I think I can write the necessary code, but
> >before
> >doing so, I would like to hear you about it.
> >
> ># The problem
> >
> >         If I am right, the only way passwords can be hashed when using
> >authentication with perspective brokers is using MD5 [1]. However,
> >there
> >are two flaws with it.
> >
> >* First, MD5 is no longer considered sure. It may be possible, from the
> >hashed password, to find the original one.
> >* Second, in the current implementation of Twisted, no salt is used to
> >hash the password. A salt is considered good practise : it is harder to
> >find the password from the hashed form, and two identical passwords
> >have
> >different hashed form, which prevent someone looking at the hashed
> >passwords to see if two users have the same password.
>
> The second point is incorrect.  The hash is salted.  See the `respond`
> method in twisted/spread/pb.py.
> ># A solution
> >
> >         I tried to implement the solution proposed in [1], and I think
> >I can
> >manage to do it. However, this seems to be a not-so-smart hack, which
> >is
> >not guaranteed to work in future releases of Twisted. That is why I am
> >proposing a patch.
> >
> >         The patch would introduce some arguments to class
> >PBServerFactory [2]
> >to use (or not) a salt, and a different hash function. I am not settled
> >down yet about the new signature of this class, but what is sure is
> >that
> >the default must be the actual behaviour, not to break programs already
> >using Twisted. Then, I hesitate between
>
> A good approach would be to parameterize the supported authentication
> mechanisms in an extensible way, rather than just hard coding one or two
> new (probably better) options.
>
> In other words, a SASL implementation for PB would be the best way to
> go.
>
> The existing API and behavior should indeed be preserved as-is for
> backwards compatibility.  The new authentication features should be
> exposed under a new API - either as new optional arguments accepted by
> PBServerFactory (and perhaps PBClientFactory) and new login methods
> (again, probably on those two classes).
>
> Jean-Paul
>
>
It would probably also help if someone finished the "Generic SASL
implementation" ticket.

Lessee, who was working on that last?

Crap. It was me.

Sorry about that.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/191265a5/attachment.html>

From glyph at twistedmatrix.com  Thu Jul 26 11:48:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 10:48:38 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
Message-ID: <284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>

Le Jul 26, 2012 à 9:22 AM, Laurens Van Houtven <_ at lvh.cc> a écrit :

> Perhaps we could look into shipping twisted releases with and without dependencies? I personally have no such issues since I just let pip/tox handle everything for me and it figures it out already.

This is only accurate to within a first approximation, but... pip does not work for Windows users.  And easy_install there comes with its own set of warts.  So there's no good answer.

If you have a good proposal for how to ship a sumo Twisted which bundles all its dependencies in a way that would actually reach the users who encounter dependency management problems, that would be great.  I think it would be worthwhile to discuss it privately first though, since there are enough publicly-archived flamewars about Python packaging technology ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/91d34773/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jul 26 11:51:35 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 26 Jul 2012 10:51:35 -0700
Subject: [Twisted-Python] Deferreds and progress
Message-ID: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>

With Twisted, a Deferred can have it's callback only triggered once.

With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
until the final result arrives). Progress can be triggered more than once.

Is there anything comparable in Twisted?

Cheers,
Tobias

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/723222f6/attachment.html>

From itamar at futurefoundries.com  Thu Jul 26 12:32:34 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 14:32:34 -0400
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>

On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> With Twisted, a Deferred can have it's callback only triggered once.****
>
> ** **
>
> With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred,
> upcoming JS PromiseA proposal),****
>
> there is a "progress()" callback for receiving results incrementally (or
> merely reporting on progress****
>
> until the final result arrives). Progress can be triggered more than once.
> ****
>
> ** **
>
> Is there anything comparable in Twisted?
>

For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP
response bodies to a Protocol instance. More generally, Glyph is working on
this: http://twistedmatrix.com/trac/ticket/1956
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/35b17f4e/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jul 26 12:44:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 26 Jul 2012 11:44:48 -0700
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>

>>On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>With Twisted, a Deferred can have it's callback only triggered once.
>>
>>With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
>>there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
>>until the final result arrives). Progress can be triggered more than once.
>> 
>>Is there anything comparable in Twisted?

>For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP response bodies to a Protocol instance. More generally, Glyph is working on this: http://twistedmatrix.com/trac/ticket/1956

Thanks for pointing. So if something like this is added to Twisted, it will be within producer/consumer, and not added to Deferred?

The reason I am asking: Autobahn implements RPC over WebSocket, and people have been asking why RPC results
can't be delivered in parts, as progress. However, an Autobahn RPC returns a Deferred, not a producer.

From kevin.horn at gmail.com  Thu Jul 26 13:06:41 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 14:06:41 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
Message-ID: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>

On Thu, Jul 26, 2012 at 12:48 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Le Jul 26, 2012 à 9:22 AM, Laurens Van Houtven <_ at lvh.cc> a écrit :
>
> Perhaps we could look into shipping twisted releases with and without
> dependencies? I personally have no such issues since I just let pip/tox
> handle everything for me and it figures it out already.
>
>
> This is only accurate to within a first approximation, but... pip does not
> work for Windows users.
>

Um, howso?  I use it all the time, including for installing Twisted.
 Unless you mean it doesn't work fro installing twisted for those who don't
have a C compiler, which I guess could be true.  I always have one
installed, so I haven't tried without one.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/6dfba03a/attachment.html>

From itamar at futurefoundries.com  Thu Jul 26 13:15:40 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 15:15:40 -0400
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
	<634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAOp9P3pc_0Q77T-WxMbvJL9qhaUs7=yq70BKs1uLNK9YrGj_PQ@mail.gmail.com>

On Thu, Jul 26, 2012 at 2:44 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>
> Thanks for pointing. So if something like this is added to Twisted, it
> will be within producer/consumer, and not added to Deferred?
>
> The reason I am asking: Autobahn implements RPC over WebSocket, and people
> have been asking why RPC results
> can't be delivered in parts, as progress. However, an Autobahn RPC returns
> a Deferred, not a producer.
>

A replacement API for producer/consumer.

You might say, I just want streaming results... but then you really want to
pause upstream if you can't handle it, and you want to be able to chain
streams of data (which is where Protocols fail), and so you end up with a
more complex API than "call this function with data every time it
arrives".  And that's the goal of that ticket.

Of course, if you want something super simple, you can implement if you
want for your code only.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/9e6d7a95/attachment.html>

From itamar at futurefoundries.com  Thu Jul 26 13:20:15 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 26 Jul 2012 15:20:15 -0400
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
Message-ID: <CAOp9P3oi9cmqrJyAGCp5j+a4_g9E6b1wJQbHyuzXqE0azBsuSA@mail.gmail.com>

On Thu, Jul 26, 2012 at 3:06 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

>
> This is only accurate to within a first approximation, but... pip does not
>> work for Windows users.
>>
>
>
> Um, howso?  I use it all the time, including for installing Twisted.
>  Unless you mean it doesn't work fro installing twisted for those who don't
> have a C compiler, which I guess could be true.  I always have one
> installed, so I haven't tried without one.
>

My attempt to set things up on Windows did not go well, at all. Getting a
compiler going was IIRC non-trivial.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/fe9f11b0/attachment.html>

From glyph at twistedmatrix.com  Thu Jul 26 15:08:39 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 14:08:39 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
Message-ID: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>


Le Jul 26, 2012 à 12:06 PM, Kevin Horn <kevin.horn at gmail.com> a écrit :

> ... for those who don't have a C compiler ...

AKA "windows users".

Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org builds use and you don't have to go trawling through python-dev archives to figure it out...)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/9972649f/attachment.html>

From glyph at twistedmatrix.com  Thu Jul 26 15:12:01 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 26 Jul 2012 14:12:01 -0700
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
	<CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
Message-ID: <DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>

Le Jul 26, 2012 à 10:36 AM, Kevin Horn <kevin.horn at gmail.com> a écrit :

> 
> It would probably also help if someone finished the "Generic SASL implementation" ticket.
> 
> Lessee, who was working on that last?
> 
> Crap. It was me. 
> 
> Sorry about that.

If you're looking for some encouragement and help on that ticket, Ralph Meijer has been looking at doing some work in that area, and generalizing the SASL support in twisted.words (as well as doing more SASL/cred integration on the server side).  I spoke to him at the last sprint in San Francisco.

Hopefully you can get together and prompt each other to actually finish it ;-).

-glyph


From kevin.horn at gmail.com  Thu Jul 26 15:44:30 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 26 Jul 2012 16:44:30 -0500
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>
References: <50115411.2070906@gresille.org>
	<20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>
	<CA+U=zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A@mail.gmail.com>
	<DA795775-9F7F-43B6-BFDB-3C934DEC7C08@twistedmatrix.com>
Message-ID: <CA+U=zK089W+4FCi8Tsng79H6oMcmkR2WDmpNTXSu8EoZJw3PLA@mail.gmail.com>

On Thu, Jul 26, 2012 at 4:12 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Le Jul 26, 2012 à 10:36 AM, Kevin Horn <kevin.horn at gmail.com> a écrit :
>
> >
> > It would probably also help if someone finished the "Generic SASL
> implementation" ticket.
> >
> > Lessee, who was working on that last?
> >
> > Crap. It was me.
> >
> > Sorry about that.
>
> If you're looking for some encouragement and help on that ticket, Ralph
> Meijer has been looking at doing some work in that area, and generalizing
> the SASL support in twisted.words (as well as doing more SASL/cred
> integration on the server side).  I spoke to him at the last sprint in San
> Francisco.
>
> Hopefully you can get together and prompt each other to actually finish it
> ;-).
>
> -glyph
>
>
I am interested, though I've made some significant progress in the last few
days on what I'm thinking of as "lore2sphinx-ng", so I'm trying to keep
that momentum going.

So it may be a bit before I get back to it.

I saw that Ralph was looking at it during the sprint, though, and getting
in touch with him to discuss/cheerlead/whatever is on my todo-list.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120726/dfd0e90c/attachment.html>

From grindizer at gmail.com  Thu Jul 26 16:07:59 2012
From: grindizer at gmail.com (Flint)
Date: Fri, 27 Jul 2012 00:07:59 +0200
Subject: [Twisted-Python] Password hash for Perspective Brokers
Message-ID: <CALpq1pa4K1=TXtOaj-DTVbAcSmY-c3160VM1+knC_swc-xbgaQ@mail.gmail.com>

Hi, i've faced the same problem and submitted a patch a few month ago,
your can check it here http://twistedmatrix.com/trac/ticket/4398 you'll
find also a complet example attached.

My first problem was that, the way twisted pb authentication works we're
supposed to have a plan version of passwords at server side.
Or this is not always the case, most application store a hashed version of
the password, the hash method may be different from the one twisted pb use
to pass the credential over the network
and thus, we're not able to compare those values.

In my solution the user can define a custom hash method and tell twisted to
use it, so that the password given by twisted over the network will be
hashed the same way that the application does before storing it (in
database for example), which means we can check if the password is correct
without having a plain version of it.
Not that, If we don't "customize" the hash method, the original twisted
behaviour in used instead, and thus compatibility is preserved.

-- G

Message: 1

> Date: Thu, 26 Jul 2012 12:36:57 -0500
> From: Kevin Horn <kevin.horn at gmail.com>
> Subject: Re: [Twisted-Python] Password hash for Perspective Brokers
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>         <CA+U=
> zK3W21_BAg9fbLZzsAmRJXReHsvGmRYb0JLT4sgVV78R7A at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Thu, Jul 26, 2012 at 11:43 AM, <exarkun at twistedmatrix.com> wrote:
>
> > On 02:28 pm, spalax at gresille.org wrote:
> > >         Hello
> > >         I have a problem with checkers in Twisted, which could be
> > >solved by
> > >adding a new feature. I think I can write the necessary code, but
> > >before
> > >doing so, I would like to hear you about it.
> > >
> > ># The problem
> > >
> > >         If I am right, the only way passwords can be hashed when using
> > >authentication with perspective brokers is using MD5 [1]. However,
> > >there
> > >are two flaws with it.
> > >
> > >* First, MD5 is no longer considered sure. It may be possible, from the
> > >hashed password, to find the original one.
> > >* Second, in the current implementation of Twisted, no salt is used to
> > >hash the password. A salt is considered good practise : it is harder to
> > >find the password from the hashed form, and two identical passwords
> > >have
> > >different hashed form, which prevent someone looking at the hashed
> > >passwords to see if two users have the same password.
> >
> > The second point is incorrect.  The hash is salted.  See the `respond`
> > method in twisted/spread/pb.py.
> > ># A solution
> > >
> > >         I tried to implement the solution proposed in [1], and I think
> > >I can
> > >manage to do it. However, this seems to be a not-so-smart hack, which
> > >is
> > >not guaranteed to work in future releases of Twisted. That is why I am
> > >proposing a patch.
> > >
> > >         The patch would introduce some arguments to class
> > >PBServerFactory [2]
> > >to use (or not) a salt, and a different hash function. I am not settled
> > >down yet about the new signature of this class, but what is sure is
> > >that
> > >the default must be the actual behaviour, not to break programs already
> > >using Twisted. Then, I hesitate between
> >
> > A good approach would be to parameterize the supported authentication
> > mechanisms in an extensible way, rather than just hard coding one or two
> > new (probably better) options.
> >
> > In other words, a SASL implementation for PB would be the best way to
> > go.
> >
> > The existing API and behavior should indeed be preserved as-is for
> > backwards compatibility.  The new authentication features should be
> > exposed under a new API - either as new optional arguments accepted by
> > PBServerFactory (and perhaps PBClientFactory) and new login methods
> > (again, probably on those two classes).
> >
> > Jean-Paul
> >
> >
> It would probably also help if someone finished the "Generic SASL
> implementation" ticket.
>
> Lessee, who was working on that last?
>
> Crap. It was me.
>
> Sorry about that.
>
> Kevin Horn
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://twistedmatrix.com/pipermail/twisted-python/attachments/20120726/191265a5/attachment-0001.htm
>
> ------------------------------
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120727/c7c6ec2e/attachment.html>

From anis.mourad at gmail.com  Thu Jul 26 21:31:19 2012
From: anis.mourad at gmail.com (Mourad Anis)
Date: Fri, 27 Jul 2012 03:31:19 +0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
Message-ID: <CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>

>
> Even having full access to MSDN, it can be incredibly obscure to discover
> which Python version goes with which Visual Studio product.  (Someone,
> please prove me wrong and indicate that there's a web page that shows what
> the official python.org builds use and you don't have to go trawling
> through python-dev archives to figure it out...)
>

Hi,
the python source code comes with a directory containing MSVC project
files, named after the version of Visual Studio product:
http://docs.python.org/using/windows.html#compiling-python-on-windows
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120727/926f06c1/attachment.html>

From exarkun at twistedmatrix.com  Thu Jul 26 10:43:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 Jul 2012 16:43:28 -0000
Subject: [Twisted-Python] Password hash for Perspective Brokers
In-Reply-To: <50115411.2070906@gresille.org>
References: <50115411.2070906@gresille.org>
Message-ID: <20120726164328.2688.1891498547.divmod.xquotient.11@localhost6.localdomain6>

On 02:28 pm, spalax at gresille.org wrote:
>         Hello
>         I have a problem with checkers in Twisted, which could be 
>solved by
>adding a new feature. I think I can write the necessary code, but 
>before
>doing so, I would like to hear you about it.
>
># The problem
>
>         If I am right, the only way passwords can be hashed when using
>authentication with perspective brokers is using MD5 [1]. However, 
>there
>are two flaws with it.
>
>* First, MD5 is no longer considered sure. It may be possible, from the
>hashed password, to find the original one.
>* Second, in the current implementation of Twisted, no salt is used to
>hash the password. A salt is considered good practise : it is harder to
>find the password from the hashed form, and two identical passwords 
>have
>different hashed form, which prevent someone looking at the hashed
>passwords to see if two users have the same password.

The second point is incorrect.  The hash is salted.  See the `respond` 
method in twisted/spread/pb.py.
># A solution
>
>         I tried to implement the solution proposed in [1], and I think 
>I can
>manage to do it. However, this seems to be a not-so-smart hack, which 
>is
>not guaranteed to work in future releases of Twisted. That is why I am
>proposing a patch.
>
>         The patch would introduce some arguments to class 
>PBServerFactory [2]
>to use (or not) a salt, and a different hash function. I am not settled
>down yet about the new signature of this class, but what is sure is 
>that
>the default must be the actual behaviour, not to break programs already
>using Twisted. Then, I hesitate between

A good approach would be to parameterize the supported authentication 
mechanisms in an extensible way, rather than just hard coding one or two 
new (probably better) options.

In other words, a SASL implementation for PB would be the best way to 
go.

The existing API and behavior should indeed be preserved as-is for 
backwards compatibility.  The new authentication features should be 
exposed under a new API - either as new optional arguments accepted by 
PBServerFactory (and perhaps PBClientFactory) and new login methods 
(again, probably on those two classes).

Jean-Paul



From tobias.oberstein at tavendo.de  Fri Jul 27 04:32:12 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 27 Jul 2012 03:32:12 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>

>>Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)

It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.

- VS 2010 will NOT work
- the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)

To build Twisted working with official binary Python builds, the exact same compiler is needed: VS2008.




From jstpierre at mecheye.net  Fri Jul 27 04:39:01 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Fri, 27 Jul 2012 07:39:01 -0300
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAA0H+QQicStDGvX8aRzMptNwso02qtc6ZF9ZxXba7gObRn5h-w@mail.gmail.com>

Why are compilers and MSVC++ relevant to six as a new dependency? It
consists of one .py file.

On Fri, Jul 27, 2012 at 7:32 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>>>Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)
>
> It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.
>
> - VS 2010 will NOT work
> - the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)
>
> To build Twisted working with official binary Python builds, the exact same compiler is needed: VS2008.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From msc at contact.de  Fri Jul 27 04:44:06 2012
From: msc at contact.de (Michael Schlenker)
Date: Fri, 27 Jul 2012 12:44:06 +0200
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <501270F6.8060908@contact.de>

Am 27.07.2012 12:32, schrieb Tobias Oberstein:
>>> Even having full access to MSDN, it can be incredibly obscure to discover which Python version goes with which Visual Studio product.  (Someone, please prove me wrong and indicate that there's a web page that shows what the official python.org >> builds use and you don't have to go trawling through python-dev archives to figure it out...)
> 
> It is obscure. And I don't have a link, but the official Python on Windows builds are done using Microsoft Visual C++ 2008.
> 
> - VS 2010 will NOT work
> - the free VS 2008 Express works (for 32-bit builds .. it does not include a 64-bit compiler)
But you can add the cmdline 64-bit compiler by downloading the free
Windows SDK.

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Straße 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Geschäftsführer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215



From exarkun at twistedmatrix.com  Fri Jul 27 05:55:17 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 27 Jul 2012 11:55:17 -0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<CALWMwNESpTn-opkom_4igec1knZU5bJkN3PNCszAP3pMtwxvSg@mail.gmail.com>
Message-ID: <20120727115517.3532.960207652.divmod.xquotient.11@localhost6.localdomain6>

On 03:31 am, anis.mourad at gmail.com wrote:
>>
>>Even having full access to MSDN, it can be incredibly obscure to 
>>discover
>>which Python version goes with which Visual Studio product.  (Someone,
>>please prove me wrong and indicate that there's a web page that shows 
>>what
>>the official python.org builds use and you don't have to go trawling
>>through python-dev archives to figure it out...)
>
>Hi,
>the python source code comes with a directory containing MSVC project
>files, named after the version of Visual Studio product:
>http://docs.python.org/using/windows.html#compiling-python-on-windows

Which means if you want to use pip to install Twisted, all you need is 
the C compiler specified by the source for the version of Python you're 
building, inferred after making the logical leap that the newest version 
of MSVC with a corresponding entry in the PC directory of that Python 
source is probably the one that was used to build the official release.

And that's why the idea that pip is unusable on Windows has some 
traction.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Jul 27 05:59:32 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 27 Jul 2012 11:59:32 -0000
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>

On 10:32 am, tobias.oberstein at tavendo.de wrote:
>>>Even having full access to MSDN, it can be incredibly obscure to 
>>>discover which Python version goes with which Visual Studio product. 
>>>(Someone, please prove me wrong and indicate that there's a web page 
>>>that shows what the official python.org >> builds use and you don't 
>>>have to go trawling through python-dev archives to figure it out...)
>
>It is obscure. And I don't have a link, but the official Python on 
>Windows builds are done using Microsoft Visual C++ 2008.
>
>- VS 2010 will NOT work
>- the free VS 2008 Express works (for 32-bit builds .. it does not 
>include a 64-bit compiler)
>
>To build Twisted working with official binary Python builds, the exact 
>same compiler is needed: VS2008.

The question isn't "What compiler is needed to build Twisted?"  People 
on this list probably know that already (I certainly do, since I set up 
several of Twisted's Windows buildslaves).  The question is "How could a 
user ever hope to find out what compiler is needed to build Twisted?"

As long as the Python documentation fails to answer this question better 
than it does now (and VS2008 is not the correct answer: the correct 
answer _depends on the Python version_), Windows users will not have an 
easy time of it.

Jean-Paul



From tobias.oberstein at tavendo.de  Fri Jul 27 07:40:22 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 27 Jul 2012 06:40:22 -0700
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>

> >It is obscure. And I don't have a link, but the official Python on
> >Windows builds are done using Microsoft Visual C++ 2008.
> >
> >- VS 2010 will NOT work
> >- the free VS 2008 Express works (for 32-bit builds .. it does not
> >include a 64-bit compiler)
> >
> >To build Twisted working with official binary Python builds, the exact
> >same compiler is needed: VS2008.
> 
> The question isn't "What compiler is needed to build Twisted?"  People on this
> list probably know that already (I certainly do, since I set up several of Twisted's
> Windows buildslaves).  The question is "How could a user ever hope to find out
> what compiler is needed to build Twisted?"

IMO, the build should figure that out (pip/easy_install). Why should I take the burden
of searching through docs (however easy those may be or may not be to find),
when the build tool can detect and inform me about the compiler needed?

Of course that again underlines the deficiencies glyph pointed out with pip/easy_install.

Twisted might compensate those by including detection in it's build scripts .. but
that will be controversial for sure (compensating for stuff that would better be
fixed elsewhere ..)

> 
> As long as the Python documentation fails to answer this question better than it
> does now (and VS2008 is not the correct answer: the correct answer _depends
> on the Python version_), Windows users will not have an easy time of it.

Yeah, right;) I didn't want to say Python 1.5 builds with VS2008, but the current Py2 one.

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From rlotun at gmail.com  Fri Jul 27 09:15:29 2012
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 27 Jul 2012 08:15:29 -0700
Subject: [Twisted-Python] Deferreds and progress
In-Reply-To: <634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4337A659A4A@EXVMBX020-12.exch020.serverdata.net>
	<CAOp9P3pBqtSrWfcpc6qUfFW2c-SoFEFrhJOWZ4HQEkxWfUHM+g@mail.gmail.com>
	<634914A010D0B943A035D226786325D4337A659AA5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <-6327102376767638772@unknownmsgid>

On Jul 26, 2012, at 11:49 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:

>>> On Thu, Jul 26, 2012 at 1:51 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>>> With Twisted, a Deferred can have it's callback only triggered once.
>>>
>>> With Deferreds in popular JavaScript libraries (when.js, jQuery Deferred, upcoming JS PromiseA proposal),
>>> there is a "progress()" callback for receiving results incrementally (or merely reporting on progress
>>> until the final result arrives). Progress can be triggered more than once.
>>>
>>> Is there anything comparable in Twisted?
>
>> For chunks of data, Protocols; e.g. twisted.web.client.Agent delivers HTTP response bodies to a Protocol instance. More generally, Glyph is working on this: http://twistedmatrix.com/trac/ticket/1956
>
> Thanks for pointing. So if something like this is added to Twisted, it will be within producer/consumer, and not added to Deferred?
>
> The reason I am asking: Autobahn implements RPC over WebSocket, and people have been asking why RPC results
> can't be delivered in parts, as progress. However, an Autobahn RPC returns a Deferred, not a producer.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Probably the best way to achieve what you want is to modify your
interface to be more like the twisted.web Agent http client. In that
interface a deferred gets fired when you connect, at which point you
can optionally start consuming body data with a custom protocol
instance.

Reza



From dynamicgl at gmail.com  Fri Jul 27 11:07:59 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 28 Jul 2012 01:07:59 +0800
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D4337A82D689@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TX7oKOaObbtD2K7bH5LmrxuJ=xchQRSAyA4gP0V-dN_Q@mail.gmail.com>

On Fri, Jul 27, 2012 at 9:40 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > >It is obscure. And I don't have a link, but the official Python on
> > >Windows builds are done using Microsoft Visual C++ 2008.
> > >
> > >- VS 2010 will NOT work
> > >- the free VS 2008 Express works (for 32-bit builds .. it does not
> > >include a 64-bit compiler)
> > >
> > >To build Twisted working with official binary Python builds, the exact
> > >same compiler is needed: VS2008.
> >
> > The question isn't "What compiler is needed to build Twisted?"  People
> on this
> > list probably know that already (I certainly do, since I set up several
> of Twisted's
> > Windows buildslaves).  The question is "How could a user ever hope to
> find out
> > what compiler is needed to build Twisted?"
>
> IMO, the build should figure that out (pip/easy_install). Why should I
> take the burden
> of searching through docs (however easy those may be or may not be to
> find),
> when the build tool can detect and inform me about the compiler needed?
>
> Of course that again underlines the deficiencies glyph pointed out with
> pip/easy_install.
>
> Twisted might compensate those by including detection in it's build
> scripts .. but
> that will be controversial for sure (compensating for stuff that would
> better be
> fixed elsewhere ..)
>
> >
> > As long as the Python documentation fails to answer this question better
> than it
> > does now (and VS2008 is not the correct answer: the correct answer
> _depends
> > on the Python version_), Windows users will not have an easy time of it.
>
> Yeah, right;) I didn't want to say Python 1.5 builds with VS2008, but the
> current Py2 one.
>
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

  Actually, you can use VS 2010 with python but you need to modify sth.
deploying python app (not only with twisted) on windows is troublesome.
Sometimes, I have to manually download .msi files and execute it order by
order. I am sure that 99% of windows servers don't have a working compiler
no matter it is "free" or not.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120728/6d4651a5/attachment-0001.html>

From bob.novas at shinkuro.com  Sat Jul 28 10:09:04 2012
From: bob.novas at shinkuro.com (Bob Novas)
Date: Sat, 28 Jul 2012 12:09:04 -0400
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
Message-ID: <007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>

Hi - I'd like some guidance, please, on writing a TCPServer that can
efficiently receive and process (to a database) large files received from a
browser client form (multipart/form-data).  I'd like to be able to process
the command and headers without waiting for allContentReceived, if possible.
In other words, I'd like to actually handle the incoming stream rather than
buffer it to a file or a string and then handle the Request when all content
is received.  Note that the server is used only by a local browser by a
single user.  It is not used by a large user populace.

 

Is this possible? Are there any examples? Any guidance would be appreciated.
This was the best  I could find -
http://twistedmatrix.com/pipermail/twisted-python/2007-July/015738.html, but
it's pretty dated.

 

Thanks,

Bob

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120728/a2c764e3/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Jul 28 12:55:41 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Jul 2012 18:55:41 -0000
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
	<007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
Message-ID: <20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>

On 04:09 pm, bob.novas at shinkuro.com wrote:
>Hi - I'd like some guidance, please, on writing a TCPServer that can
>efficiently receive and process (to a database) large files received 
>from a
>browser client form (multipart/form-data).  I'd like to be able to 
>process
>the command and headers without waiting for allContentReceived, if 
>possible.
>In other words, I'd like to actually handle the incoming stream rather 
>than
>buffer it to a file or a string and then handle the Request when all 
>content
>is received.  Note that the server is used only by a local browser by a
>single user.  It is not used by a large user populace.
>
>Is this possible? Are there any examples? Any guidance would be 
>appreciated.
>This was the best  I could find -
>http://twistedmatrix.com/pipermail/twisted- 
>python/2007-July/015738.html, but
>it's pretty dated.

There are a few answers.

One is <http://twistedmatrix.com/trac/ticket/288>, an enhancement 
request for a nice, documented API for handling request bodies as they 
arrive.

Another is to override Request.handleContentChunk, which is called each 
time request body bytes are received (and decoded).

A third is to override Request.gotLength and initialize the `content` 
attribute differently somehow.  The default implementation of 
`handleContentChunk` just calls `self.content.write` with the content 
chunk.

Jean-Paul



From aclark at aclark.net  Sat Jul 28 17:40:25 2012
From: aclark at aclark.net (Alex Clark)
Date: Sat, 28 Jul 2012 19:40:25 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
Message-ID: <jv1t98$8qr$2@dough.gmane.org>

Hi Twisted folks,


I am reaching out to various Python-related programming communities in 
order to offer new help packaging your software.

If you have ever struggled with packaging and releasing Python software 
(e.g. to PyPI), please check out this service:


- http://pythonpackages.com


The basic idea is to automate packaging by checking out code, testing, 
and uploading (e.g. to PyPI) all through the web, as explained in this 
introduction:


- http://docs.pythonpackages.com/en/latest/introduction.html


Also, I will be available to answer your Python packaging questions most 
days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
with all of you soon.



Alex



-- 
Alex Clark · http://pythonpackages.com/ONE_CLICK




From exarkun at twistedmatrix.com  Sat Jul 28 22:05:48 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Jul 2012 04:05:48 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1343534748.87.604297810@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120729/a55a680c/attachment.html>

From eric at teratorn.org  Mon Jul 30 10:31:18 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 12:31:18 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv1t98$8qr$2@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
Message-ID: <20120730163118.GH10379@ragnarok.teratorn.org>

Alex,

I'm not sure if this is borderline off-topic, or not... but anyway..

I'm sure starting a discussion here IS offtopic.

But I have one question:

How do package authors verify the integrity of their packages built "through the web"?

--
-E

On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
> Hi Twisted folks,
> 
> 
> I am reaching out to various Python-related programming communities in 
> order to offer new help packaging your software.
> 
> If you have ever struggled with packaging and releasing Python software 
> (e.g. to PyPI), please check out this service:
> 
> 
> - http://pythonpackages.com
> 
> 
> The basic idea is to automate packaging by checking out code, testing, 
> and uploading (e.g. to PyPI) all through the web, as explained in this 
> introduction:
> 
> 
> - http://docs.pythonpackages.com/en/latest/introduction.html
> 
> 
> Also, I will be available to answer your Python packaging questions most 
> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
> with all of you soon.
> 
> 
> 
> Alex
> 
> 
> 
> -- 
> Alex Clark ? http://pythonpackages.com/ONE_CLICK
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From eric at teratorn.org  Mon Jul 30 10:43:42 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 12:43:42 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv1t98$8qr$2@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
Message-ID: <20120730164342.GI10379@ragnarok.teratorn.org>

Alex,

I'm not sure if this is borderline off-topic, or not... but anyway..

I'm sure starting a discussion here IS offtopic.

But I have one question:

How do package authors verify the integrity of their packages built "through the web"?

--
-E

On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
> Hi Twisted folks,
> 
> 
> I am reaching out to various Python-related programming communities in 
> order to offer new help packaging your software.
> 
> If you have ever struggled with packaging and releasing Python software 
> (e.g. to PyPI), please check out this service:
> 
> 
> - http://pythonpackages.com
> 
> 
> The basic idea is to automate packaging by checking out code, testing, 
> and uploading (e.g. to PyPI) all through the web, as explained in this 
> introduction:
> 
> 
> - http://docs.pythonpackages.com/en/latest/introduction.html
> 
> 
> Also, I will be available to answer your Python packaging questions most 
> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk 
> with all of you soon.
> 
> 
> 
> Alex
> 
> 
> 
> -- 
> Alex Clark ? http://pythonpackages.com/ONE_CLICK
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From aclark at aclark.net  Mon Jul 30 10:49:56 2012
From: aclark at aclark.net (Alex Clark)
Date: Mon, 30 Jul 2012 12:49:56 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120730163118.GH10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
Message-ID: <jv6dvl$2ih$1@dough.gmane.org>

Hi,


On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> Alex,
>
> I'm not sure if this is borderline off-topic, or not... but anyway..
>
> I'm sure starting a discussion here IS offtopic.
>
> But I have one question:
>
> How do package authors verify the integrity of their packages built "through the web"?


Good question, I just created:

- 
http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web

If you have any feature suggestions please open a ticket:

- https://bitbucket.org/pythonpackages/pythonpackages.com/issues/new


Alex





>
> --
> -E
>
> On Sat, Jul 28, 2012 at 07:40:25PM -0400, Alex Clark wrote:
>> Hi Twisted folks,
>>
>>
>> I am reaching out to various Python-related programming communities in
>> order to offer new help packaging your software.
>>
>> If you have ever struggled with packaging and releasing Python software
>> (e.g. to PyPI), please check out this service:
>>
>>
>> - http://pythonpackages.com
>>
>>
>> The basic idea is to automate packaging by checking out code, testing,
>> and uploading (e.g. to PyPI) all through the web, as explained in this
>> introduction:
>>
>>
>> - http://docs.pythonpackages.com/en/latest/introduction.html
>>
>>
>> Also, I will be available to answer your Python packaging questions most
>> days/nights in #pythonpackages on irc.freenode.net. Hope to meet/talk
>> with all of you soon.
>>
>>
>>
>> Alex
>>
>>
>>
>> --
>> Alex Clark ? http://pythonpackages.com/ONE_CLICK
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Alex Clark · http://pythonpackages.com/ONE_CLICK




From eric at teratorn.org  Mon Jul 30 14:49:04 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Mon, 30 Jul 2012 16:49:04 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv6dvl$2ih$1@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
Message-ID: <20120730204904.GJ10379@ragnarok.teratorn.org>

On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
> Hi,
> 
> 
> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> > Alex,
> >
> > I'm not sure if this is borderline off-topic, or not... but anyway..
> >
> > I'm sure starting a discussion here IS offtopic.
> >
> > But I have one question:
> >
> > How do package authors verify the integrity of their packages built "through the web"?
> 
> 
> Good question, I just created:
> 
> - 
> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web

Let me be clear:

Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?

Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
(Yes, I would ask Launchpad/Canonical, et. all the same question...)

(Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)

Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.

Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho. Administrators need to know who has final responsibility and *authority* over the software that they are consuming. If "the cloud" is the last link in that chain, then you have a big problem, I think.

Have a nice day,
-E

P.S. Im open to sugguestions for moving this thread (where?), as I don't believe it belongs on this list.



From aclark at aclark.net  Mon Jul 30 15:09:07 2012
From: aclark at aclark.net (Alex Clark)
Date: Mon, 30 Jul 2012 17:09:07 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120730204904.GJ10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
Message-ID: <jv6t5j$2vj$1@dough.gmane.org>

Hi Eric,

On 7/30/12 4:49 PM, Eric P. Mangold wrote:
> On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
>> Hi,
>>
>>
>> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
>>> Alex,
>>>
>>> I'm not sure if this is borderline off-topic, or not... but anyway..
>>>
>>> I'm sure starting a discussion here IS offtopic.
>>>
>>> But I have one question:
>>>
>>> How do package authors verify the integrity of their packages built "through the web"?
>>
>>
>> Good question, I just created:
>>
>> -
>> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web
>
> Let me be clear:
>
> Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?
>
> Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
> (Yes, I would ask Launchpad/Canonical, et. all the same question...)
>
> (Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)


The point about md5 is not to suggest using it for security or data 
authenticity, it's to clarify that whatever security is currently place 
with PyPI (not a lot, admittedly) still applies, for whatever that is 
worth (not much, apparently).


>
> Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.
>
> Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho.Administrators need to know who has final responsibility and *authority* 
over the software that they are consuming. If "the cloud" is the last 
link in that chain, then you have a big problem, I think.


The last link in the chain is PyPI (or a private index). The node before 
that is typically your laptop. I'm suggesting you make it 
pythonpackages.com instead.

Folks can either trust us or not, based on the "real world" risk 
perceived. Of course we will try to convince them it is safe by actually 
make it safe, in whatever way is necessary/possible.

As for all your security points above, they are clearly valid and 
currently addressed (to the best of our ability) in the FAQ:

- http://docs.pythonpackages.com/en/latest/faq.html

And here:

- http://docs.pythonpackages.com/en/latest/security.html


>
> Have a nice day,
> -E
>
> P.S. Im open to sugguestions for moving this thread (where?), as I don't believe it belongs on this list.


You can bring it up (or join an existing thread) on catalog-sig if you 
like. I'm also in #pythonpackages on freenode 24/7. Thanks for the interest!



Alex





>


-- 
Alex Clark · http://pythonpackages.com/ONE_CLICK




From msc at contact.de  Tue Jul 31 03:42:22 2012
From: msc at contact.de (Michael Schlenker)
Date: Tue, 31 Jul 2012 11:42:22 +0200
Subject: [Twisted-Python] FW: Large (GB) File Upload
In-Reply-To: <20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>
References: <004801cd6c4d$cae06e80$60a14b80$@shinkuro.com>
	<007c01cd6cdb$4f8f6e50$eeae4af0$@shinkuro.com>
	<20120728185541.19554.1891416950.divmod.xquotient.8@localhost6.localdomain6>
Message-ID: <5017A87E.3060605@contact.de>

Am 28.07.2012 20:55, schrieb exarkun at twistedmatrix.com:
> On 04:09 pm, bob.novas at shinkuro.com wrote:
>> Hi - I'd like some guidance, please, on writing a TCPServer that can
>> efficiently receive and process (to a database) large files received 
>>from a
>> browser client form (multipart/form-data).  I'd like to be able to 
>> process
>> the command and headers without waiting for allContentReceived, if 
>> possible.
>> In other words, I'd like to actually handle the incoming stream rather 
>> than
>> buffer it to a file or a string and then handle the Request when all 
>> content
>> is received.  Note that the server is used only by a local browser by a
>> single user.  It is not used by a large user populace.
>>
>> Is this possible? Are there any examples? Any guidance would be 
>> appreciated.
>> This was the best  I could find -
>> http://twistedmatrix.com/pipermail/twisted- 
>> python/2007-July/015738.html, but
>> it's pretty dated.
> 
> There are a few answers.
> 
> One is <http://twistedmatrix.com/trac/ticket/288>, an enhancement 
> request for a nice, documented API for handling request bodies as they 
> arrive.
> 
> Another is to override Request.handleContentChunk, which is called each 
> time request body bytes are received (and decoded).
> 
> A third is to override Request.gotLength and initialize the `content` 
> attribute differently somehow.  The default implementation of 
> `handleContentChunk` just calls `self.content.write` with the content 
> chunk.
This works fine, just needs some care when errors happen.
We use this in production for some years now, replacing the self.content
with a python object that wraps a file object.

Looks basically like this:
class Request(server.Request):
  def gotLength(self, length):
    if self.channel._command == 'POST':
       try:
	  # plug in our own writer
          self.content = fileStore.getWriter()
          self.total_length = length
       except Exception, e:
          reason = "Exception in fileStore.getWriter"
          log.err(e, reason)
          # plug in an error writer class
          self.content = ErrorWriter(http.INTERNAL_SERVER_ERROR, reason)

class ErrorWriter(object):
    """ Fake writer object that takes the request body in case of error
        in PUT or POST, and throws it away. Done in this way, because
        there is no way to signal the client it should stop sending data
        (expect: 100-continue header processing missing in Twisted, see
        http://twistedmatrix.com/trac/wiki/TwistedWebClient)
    """
    def __init__(self, code, reason):
        self.code = code
        self.reason = reason

    def write(self, data):
        pass

    def read(self):
        return ''

    def seek(self, offset, whence=0):
        pass

    def close(self):
        raise Exception(self.reason, self.code)

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Straße 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Geschäftsführer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215



From eric at teratorn.org  Tue Jul 31 08:24:02 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 31 Jul 2012 10:24:02 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <jv6t5j$2vj$1@dough.gmane.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
Message-ID: <20120731142402.GL10379@ragnarok.teratorn.org>

On Mon, Jul 30, 2012 at 05:09:07PM -0400, Alex Clark wrote:
> Hi Eric,
> 
> On 7/30/12 4:49 PM, Eric P. Mangold wrote:
> > On Mon, Jul 30, 2012 at 12:49:56PM -0400, Alex Clark wrote:
> >> Hi,
> >>
> >>
> >> On 7/30/12 12:31 PM, Eric P. Mangold wrote:
> >>> Alex,
> >>>
> >>> I'm not sure if this is borderline off-topic, or not... but anyway..
> >>>
> >>> I'm sure starting a discussion here IS offtopic.
> >>>
> >>> But I have one question:
> >>>
> >>> How do package authors verify the integrity of their packages built "through the web"?
> >>
> >>
> >> Good question, I just created:
> >>
> >> -
> >> http://docs.pythonpackages.com/en/latest/faq.html#how-do-package-authors-verify-the-integrity-of-packages-built-through-the-web
> >
> > Let me be clear:
> >
> > Is it possible to have any assurance that your system has faithfully built the package, and/or that your servers have not been compromised?
> >
> > Why would anyone trust your web service to build packages, when it is *their* pgp, reputation and users that are at stake?
> > (Yes, I would ask Launchpad/Canonical, et. all the same question...)
> >
> > (Also, if you're suggesting MD5 (following your link..) for anything related to security or data authenticity, then I *know* you're way off base.......)
> 
> 
> The point about md5 is not to suggest using it for security or data 
> authenticity,

Sorry, I think I have a problem with taking the exact text of my question,
on your wiki, and casting it to be a different question entirely. (through
no fault of your own, I'm sure)

I think I've clarified what my orignal question was meant to ask, namely how do
we trust YOU and YOUR build infrastructure, not "how do we verify that the data
you're give us hasn't been damaged in transit".

If you wouldn't mind editing your wiki to reflect my clarifications, I would
very much appreciate it :)

> it's to clarify that whatever security is currently place 
> with PyPI (not a lot, admittedly) still applies, for whatever that is 
> worth (not much, apparently).
> 
> 
> >
> > Sorry if this is harsh - but it's intended. Without any kind of verifiable guarantee (get to work on that! :)) I don't think I could ever possibly use such a thing, and would advise against it.
> >
> > Getting software to end-users is a tough challenge, and I applaude your efforts to try and make it easier. A system with a single point of failure and a single point of trust just isn't feasible or desirable, imho.Administrators need to know who has final responsibility and *authority* 
> over the software that they are consuming. If "the cloud" is the last 
> link in that chain, then you have a big problem, I think.
> 
> 
> The last link in the chain is PyPI (or a private index). The node before 
> that is typically your laptop. I'm suggesting you make it 
> pythonpackages.com instead.
 
Clearly PyPI is inadequate. Jumping on solutions, for HARD problems that always 
require some form of cryptography to solve, is no more palettable.

And PyPI is also just a publishing platform - the packages have already been
minted by that point.

So as you suggest, the last point is the developer/release-manager, as it should
be.

I think my point is that ideally you don't want to trust anyone except the
developer/package-maintainer/release-manager.

Debian et. all solve this with signed packages. I would be happy to download
Debian packages from http://pythonpackages.com all day long :)

Debian also rely upon trusted build machines. But they are a more-or-less open
organization with open review of what goes on.

That said, I don't have a problem with people placing their trust in you. I don't
know you, and don't have any opinion on it to be honest. You're probably a good guy ;)

I would suggest working toward BEING a better PyPI mirror. Build
the infrastructure necessary for people to publish python SOURCE packages,
as they are, to PyPI, to pythonpackages.com, etc. etc. There is a lot of value
to be added there.

Build tools to make python packaging easy. On your laptop. On the cloud. Wherever.
Open SOURCE is good like that.

Regards,
Eric Mangold



From exarkun at twistedmatrix.com  Tue Jul 31 08:39:48 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 31 Jul 2012 14:39:48 -0000
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731142402.GL10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
Message-ID: <20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>

Please discontinue this discussion on twisted-python.  Thanks.

Jean-Paul



From eric at teratorn.org  Tue Jul 31 08:54:45 2012
From: eric at teratorn.org (Eric P. Mangold)
Date: Tue, 31 Jul 2012 10:54:45 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
	<20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
Message-ID: <20120731145445.GM10379@ragnarok.teratorn.org>

On Tue, Jul 31, 2012 at 02:39:48PM -0000, exarkun at twistedmatrix.com wrote:
> Please discontinue this discussion on twisted-python.  Thanks.
> 
> Jean-Paul

Thanks. I meant to indicate that I had CC'ed catalog-sig.

-E



From aclark at aclark.net  Tue Jul 31 09:35:43 2012
From: aclark at aclark.net (Alex Clark)
Date: Tue, 31 Jul 2012 11:35:43 -0400
Subject: [Twisted-Python] ANN: pythonpackages.com beta
In-Reply-To: <20120731145445.GM10379@ragnarok.teratorn.org>
References: <jv1t98$8qr$2@dough.gmane.org>
	<20120730163118.GH10379@ragnarok.teratorn.org>
	<jv6dvl$2ih$1@dough.gmane.org>
	<20120730204904.GJ10379@ragnarok.teratorn.org>
	<jv6t5j$2vj$1@dough.gmane.org>
	<20120731142402.GL10379@ragnarok.teratorn.org>
	<20120731143948.22658.1720929363.divmod.xquotient.1@localhost6.localdomain6>
	<20120731145445.GM10379@ragnarok.teratorn.org>
Message-ID: <jv8u0f$142$1@dough.gmane.org>

On 7/31/12 10:54 AM, Eric P. Mangold wrote:
> On Tue, Jul 31, 2012 at 02:39:48PM -0000, exarkun at twistedmatrix.com wrote:
>> Please discontinue this discussion on twisted-python.  Thanks.
>>
>> Jean-Paul
>
> Thanks. I meant to indicate that I had CC'ed catalog-sig.


Indeed, thanks for your patience, all! Will pick up with Eric over on 
catalog-sig for anyone else interested.


>
> -E
>


-- 
Alex Clark · http://pythonpackages.com/ONE_CLICK




From kevin.horn at gmail.com  Tue Jul 31 13:09:58 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 31 Jul 2012 14:09:58 -0500
Subject: [Twisted-Python] [RFC] Introducing six as a dependency
In-Reply-To: <20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
References: <CAFu6gYaNLaG+vwRcbLDnUDLfRYTnUCjZ0Eh1GJE2Zw5KEhSjeQ@mail.gmail.com>
	<CAHZ8tnZeDhth5WU+VOFNp8LbMSoTQnuZ=pu879pepgJpqz=tfg@mail.gmail.com>
	<4535A48C-3681-4101-8020-FE0FAC771C51@lvh.cc>
	<284E200F-1B3A-48DF-B123-70F5470D03BE@twistedmatrix.com>
	<CA+U=zK2mMGcrktAUf77Sj0omPt+hk=6-NJcd38gCTWY-j7z4sg@mail.gmail.com>
	<9EBC2EAC-CCCD-4421-BDA5-F59DA18E404F@twistedmatrix.com>
	<634914A010D0B943A035D226786325D4337A659C62@EXVMBX020-12.exch020.serverdata.net>
	<20120727115932.3532.135871596.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <CA+U=zK1Nzjc=Gn5oLWG_qMx1YBMc4bbSzwhXcP5wgMMEp64-XA@mail.gmail.com>

On Fri, Jul 27, 2012 at 6:59 AM, <exarkun at twistedmatrix.com> wrote:

> On 10:32 am, tobias.oberstein at tavendo.de wrote:
> >>>Even having full access to MSDN, it can be incredibly obscure to
> >>>discover which Python version goes with which Visual Studio product.
> >>>(Someone, please prove me wrong and indicate that there's a web page
> >>>that shows what the official python.org >> builds use and you don't
> >>>have to go trawling through python-dev archives to figure it out...)
> >
> >It is obscure. And I don't have a link, but the official Python on
> >Windows builds are done using Microsoft Visual C++ 2008.
> >
> >- VS 2010 will NOT work
> >- the free VS 2008 Express works (for 32-bit builds .. it does not
> >include a 64-bit compiler)
> >
> >To build Twisted working with official binary Python builds, the exact
> >same compiler is needed: VS2008.
>
> The question isn't "What compiler is needed to build Twisted?"  People
> on this list probably know that already (I certainly do, since I set up
> several of Twisted's Windows buildslaves).  The question is "How could a
> user ever hope to find out what compiler is needed to build Twisted?"
>
> As long as the Python documentation fails to answer this question better
> than it does now (and VS2008 is not the correct answer: the correct
> answer _depends on the Python version_), Windows users will not have an
> easy time of it.
>
>
For the benefit of those who may come across this thread in the future,
I've been using MinGW to build Twisted (on WinXP and Win7) for several
years, with no problems at all.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120731/712df752/attachment-0001.html>

