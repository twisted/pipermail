From carmstro at twistedmatrix.com  Sat Jun  1 01:42:32 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 01 Jun 2002 01:42:32 -0400 (EDT)
Subject: [Twisted-Python] Twisted 0.18.0rc2
Message-ID: <20020601.014232.294711839.radix@twistedmatrix.com>

There were a few bugs found in Twisted 0.18.0rc1 -- problems with redirection
in static (--path) webservers, some XML-dependancies, and missing
plugins for the TCP port forwarder. If there are no more bugs
found for a bit, then 0.18.0rc2 will be released as 0.18.0.

Thanks for the help, Twisted 0.18.0 is shaping up to be a *solid* release.
It feels good to put out stable software. ;-)

--
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/



From abo at minkirri.apana.org.au  Sat Jun  1 07:27:30 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Sat, 1 Jun 2002 21:27:30 +1000
Subject: [Twisted-Python] Regarding customer support...
In-Reply-To: <38D042BA-7416-11D6-B53D-000393753460@asbahr.com>
References: <38D042BA-7416-11D6-B53D-000393753460@asbahr.com>
Message-ID: <20020601112730.GF8485@minkirri.apana.org.au>

On Thu, May 30, 2002 at 04:43:04PM -0500, Jason Asbahr wrote:
[...]
> Looking at the numerous examples of partial implementations of these 
> various systems out there, it seems that it is easy to start one of 
> these projects, but hard to get it to the point where it is actually 
> useful (and I'm specifically looking at project management here).

Hmmm, I wonder what that says about people that are into project
management... very good at planning, not so good at actually doing :-)

Seriously though... good PM tools would be nice...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Sun Jun  2 03:14:37 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 02 Jun 2002 09:14:37 +0200
Subject: [Twisted-Python] ANN: Twisted 0.18.0
Message-ID: <3CF9C5DD.7080506@itamarst.org>

Twisted is an event-based framework for internet applications, written
in Python and licensed under the LGPL. For more information, visit:

        http://www.twistedmatrix.com

or join the list at:

        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


What's New since 0.17.4
=======================

0.18.0 is a major release, cleaning up many of the main APIs in
twisted.internet and moving us much closer to a 0.99.x series leading up
to Twisted 1.0.

- The networking core of Twisted - twisted.internet - was totally
refactored, cleaned up, documented and improved, using explicit
interfaces. The API is now much improved, and mostly stable. The main
change was to create an explicit reactor object, using which you can
schedule events, connect or listen on TCP/UDP/SSL ports, run methods in
a thread pool, and so on. The tools that come with Twisted have been
extended to allow choosing the reactor at runtime. Currently supported
are select(), poll(), GTK+, Qt, Win32 event API, and Java thread based
reactors, with wxPython and Tkinter support integrating with whichever
reactor is chosen.

- Perspective Broker, Twisted's remote object protocol, now supports
returning the equivalent of exceptions for failed remote method calls.
Additionally, resource limiting was added to the implementation.

- Applications can now be persisted to XML, using marmalade, a XML
pickle equivalent. This allows you to edit low level application
settings using a text editor.

- Added a sample IRC bot - it listens on a channel and logs it to a file.

- Improvements to twisted.mail - the SMTP server now has basic support
for bouncing.

- Improvements to t-im, Twisted's instant messaging client.

- LDAP was moved out into a separate package:
     http://twistedmatrix.com/users/tv/ldaptor/

- Many bug fixes, feature enhancements and additional documentatiom.


What is Twisted?
================

Twisted is an event-based framework for internet applications.  It
includes a web server, a telnet server, a chat server, a news server, a
generic client and server for remote object access, and APIs for
creating new protocols and services. Twisted supports integration of the
Tk, GTK+, Qt or wxPython event loop with its main event loop. The Win32
event loop is also supported, as is basic support for running servers on
top of Jython.

Twisted currently supports the following protocols, all implemented in
pure python, most of them as both servers and clients:

         - NNTP
         - FTP
         - HTTP
         - SOCKSv4
         - SMTP
         - IRC
         - telnet
         - POP3
         - AOL's instant messaging TOC
         - OSCAR, used by AOL-IM as well as ICQ (client only)
         - DNS
         - finger
         - Echo, discard, chargen and friends
         - Twisted Perspective Broker

For more information, visit http://www.twistedmatrix.com, or join the
list at http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python







From shae at ScannedInAvian.com  Sat Jun  1 11:08:20 2002
From: shae at ScannedInAvian.com (Shae Matijs Erisson)
Date: 01 Jun 2002 18:08:20 +0300
Subject: [Twisted-Python] Proposal: Make tax default, tap optional
In-Reply-To: <5934519A-74E2-11D6-8106-003065B25CAA@twistedmatrix.com>
References: <5934519A-74E2-11D6-8106-003065B25CAA@twistedmatrix.com>
Message-ID: <877kljghp7.fsf@webwitches.com>

Donovan Preston <dp at twistedmatrix.com> writes:

> Startup speed is fairly important to me (not terribly, but fairly...)
> Here's what I suggest: By default, create both. Then, each time a tap is to be loaded, check to see if the modification
> date on the tax is newer. If it is, load the tax, and save the tap.

Hey, I was going to suggest that......
Just like .py to .pyc and .el to .elc (but .elc isn't automatic)
I think it's the right solution.
-- 
Shae Matijs Erisson - http://www.webwitches.com/~shae/
<radix> shapr: I think you *are* a purist :)
<radix> shapr: it's just that you're morally against unstable software, instead
        of morally against MS, or non-free software, or whatnot.





From typo at soniq.net  Mon Jun  3 11:38:55 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 3 Jun 2002 17:38:55 +0200
Subject: [Twisted-Python] irc bug report reminders (Twisted-0.18.0)
Message-ID: <20020603153855.GC6631@soniq.net>

#1:
   File "/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 430, in run
     reactor.listenUDP(port, factory, interface, maxPacketSize)
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 120, in listenUDP
     return udp.Port(self, port, factory, interface, maxPacketSize)
 TypeError: __init__() takes at most 5 arguments (6 given)

#2:
16:08 < typo_> hmm, is app.listenSSL currently "temporarily unimplemented" because of the reactor transition ?
16:08 < itamar> apparently
16:08 < itamar> that's a bug though
16:08 < radix> eep
16:09 < itamar> or maybe glyph didn't feel like making a custom XML format for that
16:09 < itamar> god that sucks
16:09 < itamar> anyway, do reactor.listenSSL, it'll be sorted out by next release I hope





From grolgh at online.no  Tue Jun  4 09:43:01 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Tue, 4 Jun 2002 15:43:01 +0200
Subject: [Twisted-Python] FTPResource, again
Message-ID: <002b01c20bcd$beff5180$b52f76d9@delhi>

Hey,

Here are a draft for "Resources". This one follows Itamars suggestion (which I after some dispute with myself found necessary).
The path-stuff is awful, so ignore it. A combination of the module posixpath (undocumented) and os.path is a good replacement. Otherwise, there's some random routines, and the Interfaces aren't specified. Any ideas what must in and what must go? Request.render is silly :)
This is just a "proof of concept", but I fear I've done some fundemental errors. Especially the "resolving" of objects is idiotic and naive. Any suggestions for replacements?

Anyway, I think this is enough code to make the ftp-server resourceindependent once and for all. Oh, and last there's some unused code there too, but please don't mind.

\\ benjamin
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ftpresource.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020604/95cd9d6e/attachment.txt 

From twisted at itamarst.org  Tue Jun  4 11:44:43 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 04 Jun 2002 18:44:43 +0300
Subject: [Twisted-Python] irc bug report reminders (Twisted-0.18.0)
References: <20020603153855.GC6631@soniq.net>
Message-ID: <3CFCE06B.9020209@itamarst.org>

Paul Boehm wrote:

>    File "/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 430, in run
>      reactor.listenUDP(port, factory, interface, maxPacketSize)
>    File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 120, in listenUDP
>      return udp.Port(self, port, factory, interface, maxPacketSize)
>  TypeError: __init__() takes at most 5 arguments (6 given)


OK, this bug is fixed in CVS. Thanks for the bug reports!




From abo at minkirri.apana.org.au  Tue Jun  4 13:43:00 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 5 Jun 2002 03:43:00 +1000
Subject: [Twisted-Python] FTPResource, again
In-Reply-To: <002b01c20bcd$beff5180$b52f76d9@delhi>
References: <002b01c20bcd$beff5180$b52f76d9@delhi>
Message-ID: <20020604174300.GA21671@minkirri.apana.org.au>

On Tue, Jun 04, 2002 at 03:43:01PM +0200, Benjamin Bruheim wrote:
> Hey,
> 
> Here are a draft for "Resources". This one follows Itamars suggestion (which I after some dispute with myself found necessary).
> The path-stuff is awful, so ignore it. A combination of the module posixpath (undocumented) and os.path is a good replacement. Otherwise, there's some random routines, and the Interfaces aren't specified. Any ideas what must in and what must go? Request.render is silly :)
> This is just a "proof of concept", but I fear I've done some fundemental errors. Especially the "resolving" of objects is idiotic and naive. Any suggestions for replacements?

Maybe not related, but maybe it has something useful for you.

My osVFS stuff is 95% complete. It's a drop in replacement for os that
allows you to virtualise the underlying filesystem. Two basic VFS's are
fakeroot_filesystem and mountable_filesystem, though I also have an ftp
backend working too. These let you do things like the following;

import osVFS

f1=osVFS.fakeroot_filesystem(os,'/var')
f2=osVFS.fakeroot_filesystem(os,'/tmp')
os=osVFS.mountable_filesystem() #sets os to virtual filesystem os
open=os.file                    #sets open to file method of os
os.mount(f1,'/')
os.mount(f2,'/local')
print os.listdir('/') # will print list of files in /var
os.chdir('/local')
print os.listdir('.') # will print list of files in /tmp
f=open('/local/temp.txt','w') # will return open file /tmp/temp.txt


The last 5% left is finalising a caching mixin that does agressive caching
with smart expiry based on squid-type expiry methods.

I realise that twisted serves up "resources", but if you have a
posix-to-resource implementation, this would allow you to sit that ontop of
other VFS backends... ie with the ftpVFS backend you would be able to do an
ftp proxy. 


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Wed Jun  5 06:43:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 05 Jun 2002 13:43:27 +0300
Subject: [Twisted-Python] APIs changes for TCP and UDP
Message-ID: <3CFDEB4F.4030306@itamarst.org>

1) Client TCP connects should be allowed to bind to a specific interface and 
port, e.g.:

   reactor.clientTCP('example.com', 80, p, bindAddress=('1.2.3.4', 999))

2) UDP Ports's API should be formalized. Basically, the way UDP works from 
what I can see is that you create a Port, and for client connections you 
call the Port's createConnection(addr) method. Currently this returns a 
transport which is hooked up to a protocol, which is silly, it should return 
the protocol instance it contructs:

   port = reactor.listenUDP(8080, dnsFactory)
   clientProtocol = port.createConnection(("example.com", 53))
   clientProtocol.query("....")




From jon at totient.demon.co.uk  Thu Jun  6 17:30:37 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 6 Jun 2002 22:30:37 +0100 (BST)
Subject: [Twisted-Python] latest release & solaris
Message-ID: <15615.54397.329663.784640@erdos.totient.com>

Hi

just a couple of notes of about the latest release

1) the tarball (gz) for unix seems to have some funny
permissions/symlinks/umask? in it. This barfed using solaris tar, with
an error about not being able to create the file, so
I downloaded the windows version and unzipped that instead, and chmod
-R to something sensible. 

2) the C extension module cBanana.c actually has some C++ style
comments in it. I think this is fine for gcc, but solaris' cc
compiler is less forgiving. I just edited the file. 

other than those two gotchas, it seems to work.

thanks

Jon



From glyph at twistedmatrix.com  Thu Jun  6 19:36:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 06 Jun 2002 18:36:30 -0500 (CDT)
Subject: [Twisted-Python] latest release & solaris
In-Reply-To: <15615.54397.329663.784640@erdos.totient.com>
References: <15615.54397.329663.784640@erdos.totient.com>
Message-ID: <20020606.183630.123977511.glyph@twistedmatrix.com>

From: Jon Dyte <jon at totient.demon.co.uk>
Subject: [Twisted-Python] latest release & solaris
Date: Thu, 6 Jun 2002 22:30:37 +0100 (BST)

> Hi
> 
> just a couple of notes of about the latest release
> 
> 1) the tarball (gz) for unix seems to have some funny
> permissions/symlinks/umask? in it. This barfed using solaris tar, with
> an error about not being able to create the file, so
> I downloaded the windows version and unzipped that instead, and chmod
> -R to something sensible. 

The only permissions I see that are "funny" are that the directories are sgid.
This is a common convention on our development server, so it snuck in
there... We'll try not to do that next release.

However, please use GNU tar to unpack this archive; as I understand it, solaris
tar is buggy and uses an antiquated fileformat that can't handle long names,
among other things.

> 2) the C extension module cBanana.c actually has some C++ style
> comments in it. I think this is fine for gcc, but solaris' cc
> compiler is less forgiving. I just edited the file. 

Thanks for the bug report.

> other than those two gotchas, it seems to work.

Good to know!

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020606/3a374581/attachment.pgp 

From twisted at itamarst.org  Fri Jun  7 20:42:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 08 Jun 2002 02:42:38 +0200
Subject: [Twisted-Python] latest release & solaris
References: <15615.54397.329663.784640@erdos.totient.com>
Message-ID: <3D0152FE.8040700@itamarst.org>

Jon Dyte wrote:

> 2) the C extension module cBanana.c actually has some C++ style
> comments in it. I think this is fine for gcc, but solaris' cc
> compiler is less forgiving. I just edited the file. 

OK, this is fixed in CVS. Thanks for the bug report.

BTW, if you could run our test suite and see all tests pass that'd be 
cool - they should, but it can't hurt to get tested on more platforms:

Run in text mode:
$ admin/runtests -t

Run in text mode with poll() reactor:
$ admin/runtests -t poll




From z3p at twistedmatrix.com  Sun Jun  9 12:17:33 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 9 Jun 2002 12:17:33 -0400
Subject: [Twisted-Python] Arms Crisis
In-Reply-To: <20020507063118.GA10209@twistedmatrix.com>
Message-ID: <3D03475D.10361.753157@localhost>

On 7 May 2002 at 1:31, Glyph Lefkowitz wrote:
> I'd like some feedback on this, though.  Does anyone else think that
> callbacks sometimes happening and sometimes not when .addCallbacks() is
> called makes a difference?  Anyone feel strongly that .arm() is
> confusing and unnecessary?

I must have missed this message, or not cared before.  I think getting rid 
of .arm() is a great idea.  I've had a lot of problems where I forgot to arm 
a callback, which caused strange problems with my OSCAR code.
Is this still on the table (since it has been a month)?
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020609/07c6a938/attachment.htm 

From twisted at itamarst.org  Sun Jun  9 18:29:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 10 Jun 2002 00:29:32 +0200
Subject: [Twisted-Python] Arms Crisis
References: <3D03475D.10361.753157@localhost>
Message-ID: <3D03D6CC.9050107@itamarst.org>

Paul Swartz wrote:
> On 7 May 2002 at 1:31, Glyph Lefkowitz wrote:
>>  I'd like some feedback on this, though.  Does anyone else think that
>>  callbacks sometimes happening and sometimes not when .addCallbacks() is
>>  called makes a difference?  Anyone feel strongly that .arm() is
>>  confusing and unnecessary?

MM, wouldn't it changes the way thing work?

  d = Deferred().callback(1)
  d.addCallback(f)
  d.addCallback(g)
  d.arm()

is not the same as what the new version would do:

  d = Deferred().callback(1)
  d.arm() # for emulating behaviour in current system
  d.addCallback(f)
  d.addCallback(g)

No? In new system, would g() get result of f()?





From andrew-twisted at puzzling.org  Mon Jun 10 03:06:08 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 10 Jun 2002 17:06:08 +1000
Subject: [Twisted-Python] Arms Crisis
In-Reply-To: <3D03D6CC.9050107@itamarst.org>
References: <3D03475D.10361.753157@localhost> <3D03D6CC.9050107@itamarst.org>
Message-ID: <20020610070608.GB29675@ritsuko.xware.cx>

On Mon, Jun 10, 2002 at 12:29:32AM +0200, Itamar Shtull-Trauring wrote:
> MM, wouldn't it changes the way thing work?
> 
>  d = Deferred().callback(1)
>  d.addCallback(f)
>  d.addCallback(g)
>  d.arm()
> 
> is not the same as what the new version would do:
> 
>  d = Deferred().callback(1)
>  d.arm() # for emulating behaviour in current system
>  d.addCallback(f)

This breaks currently.  You can't add a callback to an already armed
deferred.

>  d.addCallback(g)
> 
> No? In new system, would g() get result of f()?

Yes, assuming what Glyph told me on IRC is true :)

-Andrew.




From typo at soniq.net  Mon Jun 10 10:32:56 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 10 Jun 2002 16:32:56 +0200
Subject: [Twisted-Python] idea for file transfers over PB
Message-ID: <20020610143256.GA21060@soniq.net>

suggestion:

transfer metainformation about file objects over PB,
and create wrapper instances on the receiving end.

so remotefile.read() executes on the remote perspective.

any arguments for/against this? feasible?

i'll struggle with the source a little, but i doubt my current
python/twisted skills suffice to make this work.

  paul



From typo at soniq.net  Mon Jun 10 11:11:14 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 10 Jun 2002 17:11:14 +0200
Subject: [Twisted-Python] idea for file transfers over PB
In-Reply-To: <20020610143256.GA21060@soniq.net>
References: <20020610143256.GA21060@soniq.net>
Message-ID: <20020610151114.GA1191@soniq.net>

On Mon, Jun 10, 2002 at 04:32:56PM +0200, Paul Boehm wrote:
> any arguments for/against this? feasible?

not really, as read can block. 

what about this ?

class WrapFile(flavors.Referenceable):
    def __init__(self, file):
        self._file = file
    def remote_read(self, *args, **kw):
        return self._file.read(*args, **kw)
...

...
fd.callRemote('read', 512).addCallbacks(data_received, failure)
...



From rc at ghostbitch.org  Tue Jun 11 01:16:19 2002
From: rc at ghostbitch.org (R. Church)
Date: Mon, 10 Jun 2002 22:16:19 -0700
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020601.014232.294711839.radix@twistedmatrix.com>
References: <20020601.014232.294711839.radix@twistedmatrix.com>
Message-ID: <20020611051619.GA31180@ghostbitch.org>

For gnus/gpg integration, you want Mailcrypt, from
http://mailcrypt.sourceforge.net.

Also, gnus seems to have some kind of built-in gpg support (>5.9).

I'm stealing all this data from here:

http://www.emacswiki.org/cgi-bin/wiki.pl?MailCrypt

Let me know when you get your gpg set up so we can talk about "dirty
bombs" and other things related to the MJ-12 conspiracy.



From carmstro at twistedmatrix.com  Tue Jun 11 08:26:33 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Jun 2002 08:26:33 -0400
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020611051619.GA31180@ghostbitch.org>
References: <20020601.014232.294711839.radix@twistedmatrix.com>
	<20020611051619.GA31180@ghostbitch.org>
Message-ID: <87d6uyvw5i.fsf@twistedmatrix.com>

>>>>> "rc" == R Church <rc at ghostbitch.org> writes:

    rc> Let me know when you get your gpg set up so we can talk about "dirty
    rc> bombs" and other things related to the MJ-12 conspiracy.

Oh great. Just great. Now you've likely set off Carnivore, and Twisted Labs is 
going to be labelled a Terrorist Organization and we'll all be forced to flee
to [censored] in the Galactic [censored].

I have to go pack my bags.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From liiwi at iki.fi  Tue Jun 11 14:53:09 2002
From: liiwi at iki.fi (Jaakko Niemi)
Date: Tue, 11 Jun 2002 21:53:09 +0300
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020611051619.GA31180@ghostbitch.org> ("R. Church"'s message
 of "Mon, 10 Jun 2002 22:16:19 -0700")
References: <20020601.014232.294711839.radix@twistedmatrix.com>
	<20020611051619.GA31180@ghostbitch.org>
Message-ID: <87y9dl4pgq.fsf@jumper.lonesom.pp.fi>

"R. Church" <rc at ghostbitch.org> writes:

> Let me know when you get your gpg set up so we can talk about "dirty
> bombs" and other things related to the MJ-12 conspiracy.

 Blah, all serious gnus weenies use Oort, and gpg.el. Packages
can be found from http://people.debian.org/%7Esrivasta/packages/binary-all/.

                  --j



From j.her at t-online.de  Tue Jun 11 14:01:21 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 11 Jun 2002 20:01:21 +0200
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <87d6uyvw5i.fsf@twistedmatrix.com>
Message-ID: <17HpxI-2BAubAC@fwd10.sul.t-online.com>

On 11 Jun 2002 08:26:33 -0400, Christopher Armstrong wrote:

>Oh great. Just great. Now you've likely set off Carnivore, and Twisted Labs is 
>going to be labelled a Terrorist Organization and we'll all be forced to flee
>to [censored] in the Galactic [censored].
>
>I have to go pack my bags.

Bomb, Assassin (sp? ;), President.

Ciao, J?rgen





From jon at totient.demon.co.uk  Wed Jun 12 16:54:42 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Wed, 12 Jun 2002 21:54:42 +0100 (BST)
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
Message-ID: <15623.46354.482223.481792@erdos.totient.com>


with mozilla build
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.8) Gecko/20020206,build 2002020615

sending a request to a quixote/twisted server (actually a modified
Andrew Kuchling Example), I get the following error

Installing SelectReactor, since unspecified.
__main__.QuixoteFactory starting on 8098
Traceback (most recent call last):
  File "/sw/release/python/lib/python2.2/site-packages/twisted/internet/default.py", line 347, in doSelect
    why = getattr(selectable, method)()
  File "/sw/release/python/lib/python2.2/site-packages/twisted/internet/tcp.py", line 93, in doRead
    return self.protocol.dataReceived(data)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/basic.py", line 161, in dataReceived
    self.lineReceived(line)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 684, in lineReceived
    self.allHeadersReceived()
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 733, in allHeadersReceived
    self.persistent = self.checkPersistence(req, self.__version)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 759, in checkPersistence
    request.setHeader('connection', 'close')
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 561, in setHeader
    self.headers[string.lower(k)] = v
exceptions.AttributeError: QuixoteTWRequest instance has no attribute
'headers'


The object QuixoteTWRequest is defined 

class QuixoteTWRequest (server.Request):
      ......

it looks to me like on some execution path thru http.py (dataReceived,
lineReceived) etc etc the headers slot of the server.Request object
doesnt get set. which would appear to mean requestReceived has not
been called as this sets self.headers to an empty dict at least.

The headers sent by the browser are :-
Host: localhost:9999

User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.8) Gecko/20020206

Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1

Accept-Language: en-us

Accept-Encoding: gzip, deflate, compress;q=0.9

Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66

Connection: close


localhost.localdomain - - [12/Jun/2002 21:40:50] "GET / HTTP/1.1" 200 -	       

I'm pretty new to Twisted, so I might be missing something here, but
the script works with lynx and netscape 4.76.


Jon

From uf069 at victoria.tc.ca  Wed Jun 12 17:27:08 2002
From: uf069 at victoria.tc.ca (Patrick B. Day)
Date: Wed, 12 Jun 2002 14:27:08 -0700 (PDT)
Subject: [Twisted-Python] Using Twisted for a clustering library.
Message-ID: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>

I've been working on a cluster library for MOSIX and I've noticed that
parts could possibly be replaced with some Twisted stuff. 

Briefly what I need to be able to do is the following:
o Have the server spawn off client processes and communicates with them
using IPC.
o The client process waits for a task to arrive from the server and
replies back to the server with the results of the complete task.
o The server sends tasks to available clients then waits for a client to
repond, sends the now idle client the next task and finally handles the
response.

After browsing through the Twisted source, I'm guessing that I'll need to
write my own Reactor, Protocol, Factory, Application classes and possibly
a new main module. Does this sound about right or am I over complicating
things?

Thanks for your help.

============================
 
Patrick Day
uf069 at freenet.victoria.bc.ca




From twisted at itamarst.org  Wed Jun 12 19:24:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:24:20 +0200
Subject: [Twisted-Python] Using Twisted for a clustering library.
References: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
Message-ID: <3D07D824.30400@itamarst.org>

Patrick B. Day wrote:

> After browsing through the Twisted source, I'm guessing that I'll need to
> write my own Reactor, Protocol, Factory, Application classes and possibly
> a new main module. Does this sound about right or am I over complicating
> things?

1) No need for new reactor class - let processes communicate via unix 
sockets (reactor.listenTCP).  Or TCP (reactor.listenTCP). Or use 
reactor.spawnProcess and communicate via stdin/stdout.

2) No need for new Application class - use the existing one. Or just use 
the reactor object directly.

3) You can write your own protocol, which means a new Protocol and 
Factory, yes. Or you can use twisted.spread.pb, a remote object 
protocol, which almost certainly has all functionality you need.

I recommend reading the writing servers tutorial:
http://twistedmatrix.com/documents/howto/servers

And look at simple example in tarball - doc/examples/simpleserv.py.

Then read the API docs for reactors in twisted.internet.interfaces.




From twisted at itamarst.org  Wed Jun 12 19:37:41 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:37:41 +0200
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
References: <15623.46354.482223.481792@erdos.totient.com>
Message-ID: <3D07DB45.2090200@itamarst.org>

This is a bug (due to that "Connection: close" header from Mozilla). I 
fixed it in CVS - 0.18.1 will include a fixed version. Until then you 
can get the updated version of twisted/protocols/http.py from CVS (see 
instructions on website.)

BTW - you don't need to use twisted.web.server.Request - since the 
refactor to HTTP you only need twisted.protocols.http.Request, no need 
to use twisted.web unless you are using it as a web framework.




From twisted at itamarst.org  Wed Jun 12 19:50:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:50:15 +0200
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
References: <15623.46354.482223.481792@erdos.totient.com> <3D07DB45.2090200@itamarst.org>
Message-ID: <3D07DE37.6090901@itamarst.org>

I also added a unit test. Let that be a lesson to you all - you need 
Real Users to find all those endcases you're certain you've written 
tests for - I'd written a test for the persistent connection algorithm 
but forgotten to simulate a real HTTP test request for that specific 
case. Bleh.

/me goes to sleep




From glyph at twistedmatrix.com  Wed Jun 12 18:52:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Jun 2002 17:52:30 -0500 (CDT)
Subject: [Twisted-Python] Using Twisted for a clustering library.
In-Reply-To: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
References: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
Message-ID: <20020612.175230.97549920.glyph@twistedmatrix.com>

From: "Patrick B. Day" <uf069 at victoria.tc.ca>
Subject: [Twisted-Python] Using Twisted for a clustering library.
Date: Wed, 12 Jun 2002 14:27:08 -0700 (PDT)

> I've been working on a cluster library for MOSIX and I've noticed that
> parts could possibly be replaced with some Twisted stuff. 

The twisted.sister package is the beginnings of a clustering library.  The
requirements being used to drive it are rather MMPORPG-specific at this point,
so the only code in it so far is a mechanism for "locking resources" so that a
game server can atomically determine who "owns" a particular game object.  The
requirements that you described sound like the as-yet-unwritten "spawn server"
component of twisted.sister.  So, if you'd like to contribute work in this
area, we'd love to have it!  Alternatively you can wait for months to see if
somebody will do it for you ;-)

Also, as Itamar said, depending on your requirements, you shouldn't have to
write anything aside from either a Protocol and Factory, or a PB client or
server object.

If you have a specific wire-protocol you need to speak, you'll need to write a
Protocol and probably a Factory.  Have you read Moshe Zadka's excellent HOWTO
on the subject?

If you just need to send some messages to a remote process, then Perspective
Broker is probably your best bet.  The documentation here is a little weaker
(since there is a lot more high-level functionality available), but it's
described at an overview level in the IPC10 paper, and there are several
examples in the doc/examples package, as well as twisted.web.distrib and the
"Reality" CVS module.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020612/c4c72a6b/attachment.pgp 

From glyph at twistedmatrix.com  Thu Jun 13 07:00:15 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Jun 2002 06:00:15 -0500 (CDT)
Subject: [Twisted-Python] no 'headers' in server.Request instance
 problem
In-Reply-To: <3D07DB45.2090200@itamarst.org>
References: <15623.46354.482223.481792@erdos.totient.com>
	<3D07DB45.2090200@itamarst.org>
Message-ID: <20020613.060015.77059905.glyph@twistedmatrix.com>

From: Itamar Shtull-Trauring <twisted at itamarst.org>
Subject: Re: [Twisted-Python] no 'headers' in server.Request instance problem
Date: Thu, 13 Jun 2002 01:37:41 +0200

> BTW - you don't need to use twisted.web.server.Request - since the 
> refactor to HTTP you only need twisted.protocols.http.Request, no need 
> to use twisted.web unless you are using it as a web framework.

Actually you don't need to use Request at all.  If you want this to work with
other twisted.web servers, it would be best to structure your work as additions
to Resource, not Request.

What functionality are you adding at the Request level?


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020613/78d931cf/attachment.pgp 

From jon at totient.demon.co.uk  Thu Jun 13 13:51:17 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 13 Jun 2002 18:51:17 +0100 (BST)
Subject: [Twisted-Python] no 'headers' in server.Request instance
 problem
In-Reply-To: glyph@twistedmatrix.com
References: <15623.46354.482223.481792@erdos.totient.com>
	<3D07DB45.2090200@itamarst.org>
	<20020613.060015.77059905.glyph@twistedmatrix.com>
Message-ID: <15624.56213.487457.472154@erdos.totient.com>

glyph at twistedmatrix.com wrote :-> From: Itamar Shtull-Trauring <twisted at itamarst.org>
> Subject: Re: [Twisted-Python] no 'headers' in server.Request instance problem
> Date: Thu, 13 Jun 2002 01:37:41 +0200
> 
> > BTW - you don't need to use twisted.web.server.Request - since the 
> > refactor to HTTP you only need twisted.protocols.http.Request, no need 
> > to use twisted.web unless you are using it as a web framework.
> 
> Actually you don't need to use Request at all.  If you want this to work with
> other twisted.web servers, it would be best to structure your work as additions
> to Resource, not Request.
> 
> What functionality are you adding at the Request level?
> 
> 
> -- 
>  |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
>  |   < _/ >   |  Lead Developer,  the Twisted project  |
>  |  < ___/ >  |      http://www.twistedmatrix.com      |


I'm not really adding any functionality. I was merely making a
previous Twisted/Quixote script work with Twisted-0.18.0, which is how
I found the reported problem. This script is so short I include it
here.

Jon


"""qserv

Demo of an HTTP server built on top of Twisted Python that serves a
Quixote application, and also supports an SMTP interface.

"""

# created 2002/03/19, AMK

__revision__ = "$Id$"

import string, cStringIO

from quixote.http_request import HTTPRequest
from quixote.publish import Publisher

from twisted.cred.service import Service
from twisted.internet.app import Application
from twisted.mail import mail
from twisted.protocols import protocol, http
from twisted.web import server

# Ports this server will listen on
HTTP_PORT = 8098
SMTP_PORT = 8099

import quixote
quixote.enable_ptl()

publisher = Publisher('quixote.demo')
publisher.read_config('quixote.conf')
publisher.setup_logs()

class QuixoteTWRequest (http.Request):
    def process(self):
        environ = self.create_environment()
        ## this seek is important
        self.content.seek(0,0)
        stdin = self.content
        request = HTTPRequest(stdin, environ)
        stdout = cStringIO.StringIO()
        stderr = cStringIO.StringIO()

        publisher.publish(stdin, stdout, stderr, environ)
        output = stdout.getvalue()
        #self.write(output)
        #self.setResponseCode(request.response.status_code)
        #for hdr, value in request.response.headers.items():
        #    self.setHeader(hdr, value)
        #self.finish()
	## as per message on quixote list
        self.startedWriting = 1
        self.write(output.replace("Status:", "HTTP/1.1"))
        self.finish()

    def create_environment (self):
        host = self.getHeader('host') or self.getHost()
        if ':' in host:
            serverName = string.split(host, ':')[0]
        else:
            serverName = host
        content_type = self.getHeader('content-type')
        typ, remote_addr, remote_port = self.transport.getPeer()

        env = {
               "PATH_INFO":         self.path,
               "SERVER_SOFTWARE":   server.version,
               "SERVER_NAME":       serverName,
               "GATEWAY_INTERFACE": "CGI/1.1",
               "REMOTE_ADDR":       remote_addr,
               "REMOTE_PORT":       str(remote_port),
               "SERVER_PROTOCOL":   self.clientproto,
               "SERVER_PORT":       str(HTTP_PORT),
               "REQUEST_METHOD":    self.method,
               "SCRIPT_NAME":       "",
               "SCRIPT_FILENAME":   "",
               "REQUEST_URI":       self.uri,
               "CONTENT_TYPE":      content_type,
               }
        return env


class QuixoteFactory (http.HTTPFactory):
    def buildProtocol (self, addr):
        h = http.HTTPChannel()
        h.requestFactory = QuixoteTWRequest
        h.factory = self
        return h


def run ():
    app = Application('Quixote')
    app.listenTCP(HTTP_PORT, QuixoteFactory())
    app.run(save=0)


if __name__ == '__main__':
    run()



From bruce at cubik.org  Sat Jun 15 02:26:35 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Sat, 15 Jun 2002 00:26:35 -0600
Subject: [Twisted-Python] small README changes
Message-ID: <3D0ADE1B.6040603@cubik.org>

Hey all,

I started to check out Twisted today by running some of the stuff out of 
the distribution rather than only reading docs.  I'd noted a few 
problems or unclear points in that process.  The attached patch 
addresses most of them.

Is the setup.py needed for anything if you aren't going to install 
Twisted into site-libs?

Also, does one of the FTP tests fail for everyone?  One of the marmalade 
tests failed on Python 2.2 (error about the NodeList type).

Cheers,

  - Bruce
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: README.diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020615/fa2506fc/attachment.txt 

From ivo at amaze.nl  Sat Jun 15 09:50:55 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 15 Jun 2002 15:50:55 +0200
Subject: [Twisted-Python] BUG: setting timeout on clientTCP() will invoke connectionFailed twice
Message-ID: <20020615155055.C8779@amaze.nl>

Hi,

The following code:

--

from twisted.protocols.http import HTTPClient
from twisted.internet import reactor

class foo(HTTPClient):
    def connectionFailed(self):
        print "Failed"

reactor.clientTCP("localhost", 8888, foo(), 2)
reactor.run()

--

Will print "Failed" twice. Without the timeout, only one "Failed" will be
printed (of course make sure you connect to something that fails immediately
when testing this :)

It's kind of silly to keep te timeout after the connection has already
failed - it should be cancelled, right?

Cheers

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Brouwersgracht 132                             Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From twisted at itamarst.org  Sat Jun 15 12:04:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 15 Jun 2002 18:04:29 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
Message-ID: <3D0B658D.5080404@itamarst.org>

Background:
Ivo pointed out there's no way to differentiate between "no such 
hostname" and "connection refused". For that matter, connectionFailed 
has nothing to do with the protocol - why are we doing a callback on the 
protocol at all? It shouldn't be created if no connection was made.

Proposal:
reactor.clientTCP accepts a protocol factory instead of a protocol, and 
only makes a protocol instance if connection was made. Additionally, it 
accepts an additional argument, failureCallback, which will get called 
with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
when the connection fails. Protocol.connectionFailed goes bye-bye.

Comments?




From sean at twistedmatrix.com  Sat Jun 15 14:24:59 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 15 Jun 2002 13:24:59 -0500
Subject: [Twisted-Python] pb.setFactoryForClass()
Message-ID: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>

proposal for new functionality in pb:

In addition to the existing pb.setCopierForClass() I'd like a
pb.setFactoryForClass() which would take a factory method instead of a class
as its argument.

This would allow serialized objects to be re-constructed on the other end of
network connections by a factory instead of just be creating a new class.

I have a use case where objects are created locally on both the client and
server and these objects need to be passed as arguments to remote method
calls. The best way to do it seems to be to send a unique ID over the wire
and have a factory method transform the ID into the correct object on the
other side.

A trivial example:

class Thing(pb.Copyable)
  allIDs = {}

  def __init__(self, id):
    self.id = id
    Thing.allIDs[id] = self

  def getStateToJellyFor(self, perspective):
    return {"id":self.id}

def thingFactory(state):
  return Thing.allIDs.get(state["id"],None)

pb.setFactoryToCopyFor("Thing", thingFactory)


Things could then be send over the network as very small objects (just IDs)
as long as both side have already loaded all the "Things" from local
storage.

----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From ivo at amaze.nl  Sat Jun 15 19:06:51 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sun, 16 Jun 2002 01:06:51 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <3D0B658D.5080404@itamarst.org>; from twisted@itamarst.org on Sat, Jun 15, 2002 at 06:04:29PM +0200
References: <3D0B658D.5080404@itamarst.org>
Message-ID: <20020616010651.D8779@amaze.nl>

On Sat, Jun 15, 2002 at 06:04:29PM +0200, Itamar Shtull-Trauring wrote:
> Background:
> Ivo pointed out there's no way to differentiate between "no such 
> hostname" and "connection refused". For that matter, connectionFailed 
> has nothing to do with the protocol - why are we doing a callback on the 
> protocol at all? It shouldn't be created if no connection was made.
> 
> Proposal:
> reactor.clientTCP accepts a protocol factory instead of a protocol, and 
> only makes a protocol instance if connection was made. Additionally, it 
> accepts an additional argument, failureCallback, which will get called 
> with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
> when the connection fails. Protocol.connectionFailed goes bye-bye.
> 
> Comments?

Some people don't see a point in providing these errors, so I'll illustrate
the issue with some more examples:

when binding to a local port, I'd like to know if it fails due to 
the port already being in use (EBUSY), permission denied (i.e. a port
< 1024 when not being root), or some system failure that may be 
difficult to track down without an appropriate error (i.e. running out
of fd's)

I agree with itamar that if these errors aren't handled in the protocol
implementation, failure to connect shouldn't be there either.

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Brouwersgracht 132                             Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From glyph at twistedmatrix.com  Sat Jun 15 20:10:42 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 15 Jun 2002 19:10:42 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020616010651.D8779@amaze.nl>
References: <3D0B658D.5080404@itamarst.org>
	<20020616010651.D8779@amaze.nl>
Message-ID: <20020615.191042.21918778.glyph@twistedmatrix.com>

From: Ivo van der Wijk <ivo at amaze.nl>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: Sun, 16 Jun 2002 01:06:51 +0200

> On Sat, Jun 15, 2002 at 06:04:29PM +0200, Itamar Shtull-Trauring wrote:
> > Background:
> > Ivo pointed out there's no way to differentiate between "no such 
> > hostname" and "connection refused". For that matter, connectionFailed 
> > has nothing to do with the protocol - why are we doing a callback on the 
> > protocol at all? It shouldn't be created if no connection was made.
> > 
> > Proposal:
> > reactor.clientTCP accepts a protocol factory instead of a protocol, and 
> > only makes a protocol instance if connection was made. Additionally, it 
> > accepts an additional argument, failureCallback, which will get called 
> > with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
> > when the connection fails. Protocol.connectionFailed goes bye-bye.

You know, I'm tempted to disagree with this because backwards-compatibility at
this point is a really major argument to me at this point ... however, you guys
make some really good arguments.  It may even be possible, given this
description, to make __init__, and not makeConnection, be the real
"initializer" of a Protocol at this point.

The inability to report these errors has also been an annoyance on the
client-interface end of things for some time.  There is an asymmetry between
client and server-side connecting in IReactorTCP.

In addition, Itamar's proposal would simultaneously eliminate the confusion
currently surrounding Connectors, too; having a wrapper protocol *factory*
would not pose the same efficiency concerns as a wrapper Protocol instance,
since indirection would only happen when opening and closing the connection.  

> > Comments?
> 
> Some people don't see a point in providing these errors, so I'll illustrate
> the issue with some more examples:

Also, being able to report these errors is important to judge at what level
networking is misconfigured for the end-user, when they can't connect.

> I agree with itamar that if these errors aren't handled in the protocol
> implementation, failure to connect shouldn't be there either.

After hearing this, so do I.  Thank you for the bug report.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020615/96515692/attachment.pgp 

From glyph at twistedmatrix.com  Sat Jun 15 23:30:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 15 Jun 2002 22:30:06 -0500 (CDT)
Subject: [Twisted-Python] pb.setFactoryForClass()
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>
Message-ID: <20020615.223006.32611862.glyph@twistedmatrix.com>


From: "Sean Riley" <sean at twistedmatrix.com>
Subject: [Twisted-Python] pb.setFactoryForClass()
Date: Sat, 15 Jun 2002 13:24:59 -0500

> proposal for new functionality in pb:
> 
> In addition to the existing pb.setCopierForClass() I'd like a
> pb.setFactoryForClass() which would take a factory method instead of a class
> as its argument.

Though this is its first mention on the mailing list, I've already accepted
this proposal and put it on my task list -- I just added it to CVS (it had been
sitting on my local drive for a little while).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020615/cee224a4/attachment.pgp 

From twisted at itamarst.org  Sun Jun 16 05:34:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 16 Jun 2002 11:34:33 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
References: <3D0B658D.5080404@itamarst.org>	<20020616010651.D8779@amaze.nl> <20020615.191042.21918778.glyph@twistedmatrix.com>
Message-ID: <3D0C5BA9.1030208@itamarst.org>

Glyph Lefkowitz wrote:

>>>with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
>>>when the connection fails. Protocol.connectionFailed goes bye-bye.

The error may be fine as a string instead of a status code - depends on 
the requirements.

> In addition, Itamar's proposal would simultaneously eliminate the confusion
> currently surrounding Connectors, too; having a wrapper protocol *factory*
> would not pose the same efficiency concerns as a wrapper Protocol instance,
> since indirection would only happen when opening and closing the connection.  

You still need to deal with connectionLost, which is in the Protocol 
still. But, if all Protocols have a factory, we could have them report 
to their factory that they are closed as part of their interface 
definition. But note that currently we do *not* require that protocols 
refer to a factory - it's merely a common implementation. Some protocols 
only refer to their service (e.g. in words, IIRC).

> Also, being able to report these errors is important to judge at what level
> networking is misconfigured for the end-user, when they can't connect.

Well, for servers, just logging errors when attempting to listen on a 
port it, as we do now is acceptable - most servers work this way, where 
errors are logged. It's connections that really need error reporting, 
for clients. Of course, some client applications (p2p, FTP) listen on 
ports as well...




From andrew-twisted at puzzling.org  Sun Jun 16 08:42:17 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 16 Jun 2002 22:42:17 +1000
Subject: [Twisted-Python] twisted.enterprise.row
Message-ID: <20020616124216.GA4921@frobozz.local>

Quick question:

Why doesn't twisted.enterprise.row use DB-API's Cursor.description feature,
instead of PostgreSQL specific gunk?

A cursory glance at what row needs and what Cursor.description provides
suggests that you could and should use that.

-Andrew.




From twisted at itamarst.org  Mon Jun 17 13:09:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Jun 2002 19:09:07 +0200
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
Message-ID: <3D0E17B3.5090301@itamarst.org>

<http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>




From twisted at itamarst.org  Mon Jun 17 13:28:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Jun 2002 19:28:52 +0200
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
References: <3D0E17B3.5090301@itamarst.org>
Message-ID: <3D0E1C54.8090001@itamarst.org>

Itamar Shtull-Trauring wrote:

> <http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>

They're also looking for software engineers.




From exarkun at meson.dyndns.org  Mon Jun 17 17:04:32 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Mon, 17 Jun 2002 17:04:32 -0400 (EDT)
Subject: [Twisted-Python] Generic hierarchy interface
Message-ID: <Pine.LNX.4.44.0206171620120.11460-100000@meson>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


  Its time has come.  The need is pretty clear, partially for
blog/news and a lot for Reality, and I'm sure for a lot of other
things I'm not aware of.  Basically, what seems to be needed is an
interface that allows for a protocol-defined hierarchy to
protocol-specific data, organised based on protocol-specific meta-data.

  For example, consider email.  The protocol-specific hierarchy describes
message threads (which you are all hopefully familiar with).  The
meta-data is a portion of the xheaders ("References" and "In-Reply-To" in
particular), and the data is the message body.

  The email implementation for this hierarchy interface would then need to
parse headers and xheaders to determine the relationship, and make the
appropriate messages available this available at the appropriate places.

  The appropriate places.  There seem to be three basic relationships that
are of interest: parent, child, and sibling.  Accessor methods for these
should be straightforward enough, and implementions would need to provide
the details for each protocol of extracting them from the meta-data
available.  The other type of access would be absolute and relative "path"
access.  For example, "news://a.server.name/a.group.name/a.message.id".
A Reality example: "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"
In this case, each level of depth would only need to implement a standard
accessor interface to allow whatever it may contain to be accessable.

I'm a little out of my element, so I hope this has been at least
somewhat coherent ;)   Anyone have comments, or notice and horrible flaws,
or just see a plain better way to go about it?

  Jp

- --
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
- --
 4:20pm up 27 days, 17:02, 5 users, load average: 0.00, 0.00, 0.00
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9Dk7kedcO2BJA+4YRAnL/AJ45iIwfmCQSU4DXCPXtXbRhBLFTfACfYLO6
9fhOCu7iEG8mbOeTrsOdJr4=
=zSD+
-----END PGP SIGNATURE-----




From liiwi at lonesom.pp.fi  Mon Jun 17 16:24:14 2002
From: liiwi at lonesom.pp.fi (Jaakko Niemi)
Date: Mon, 17 Jun 2002 23:24:14 +0300
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
In-Reply-To: <3D0E1C54.8090001@itamarst.org> (Itamar Shtull-Trauring's
 message of "Mon, 17 Jun 2002 19:28:52 +0200")
References: <3D0E17B3.5090301@itamarst.org> <3D0E1C54.8090001@itamarst.org>
Message-ID: <87ptypvekx.fsf@jumper.lonesom.pp.fi>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> Itamar Shtull-Trauring wrote:
>
>> <http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>
>
> They're also looking for software engineers.

 Uh, somehow I'm reminded of the book "Dice Man". Read it,
if you haven't already.

                --j



From glyph at twistedmatrix.com  Tue Jun 18 03:16:45 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 02:16:45 -0500 (CDT)
Subject: [Twisted-Python] Generic hierarchy interface
In-Reply-To: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
References: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
Message-ID: <20020618.021645.68134745.glyph@twistedmatrix.com>

From: Jp Calderone <exarkun at meson.dyndns.org>
Subject: [Twisted-Python] Generic hierarchy interface
Date: Mon, 17 Jun 2002 17:04:32 -0400 (EDT)

> Its time has come.

I have to agree, given that I recently deduced the need for, then spent some
time working on a similar concept.  It's also extremely hard to work on.

> The need is pretty clear, partially for blog/news and a lot for Reality, and
> I'm sure for a lot of other things I'm not aware of.  Basically, what seems
> to be needed is an interface that allows for a protocol-defined hierarchy to
> protocol-specific data, organised based on protocol-specific meta-data.

... and aggregation within a protocol-independent hierarchy too, I would say.

> For example, consider email.  The protocol-specific hierarchy describes
> message threads (which you are all hopefully familiar with).  The
> meta-data is a portion of the xheaders ("References" and "In-Reply-To" in
> particular), and the data is the message body.

Interesting example.  I always felt the obvious collection interface to e-mail
would be the server/domain/user/mailbox hierarchy; groups are organized
differently (and there would probably be different interfaces for organization
by thread and organization by sender, let's say)

> A Reality example: "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"

*snrk*

> I'm a little out of my element, so I hope this has been at least
> somewhat coherent ;)   Anyone have comments, or notice and horrible flaws,
> or just see a plain better way to go about it?

Well, this sort of design is right up my alley.  I've implemented similar
(though less general) systems on many occasions.  One might even say that the
essence of Twisted itself is to be an informal system of this type.  For that
reason, I'd really like to see a formal interface of what a "TwistedObject"
would be.

The problem with this particular, extremely general, application of an
"abstract hierarchy interface" is that it's not quite as abstract as we'd like
to think.  There are many problems that arise -- for example, you list the
relationship of "sibling", which most hierarchy interfaces do not support.
Python itself is a hierarchy interface, after all.  The __getitem__ and
__getattr__ interfaces implement identical hierarchies.

The key problems at this point, I think, are the notion of asynchronous access,
and ensuring homogeneity.  twisted.python.roots technically addresses one of
those problems, and could easily be modified to support the other, but it seems
horribly ugly to me for some reason that I don't quite understand.

Do you have any other ideas regarding a generic hierarchy interface?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020618/52056371/attachment.pgp 

From tv at twistedmatrix.com  Tue Jun 18 14:12:52 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 18 Jun 2002 21:12:52 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <3D0B658D.5080404@itamarst.org>
References: <3D0B658D.5080404@itamarst.org>
Message-ID: <87wuswv4kb.fsf@ki.yok.utu.fi>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> Proposal:
> reactor.clientTCP accepts a protocol factory instead of a protocol,
> and only makes a protocol instance if connection was
> made. Additionally, it accepts an additional argument,
> failureCallback, which will get called with a status code
> (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something when the
> connection fails. Protocol.connectionFailed goes bye-bye.

	Please do not clobber the information given by the
        kernel in errno. Translating errno to 2 different failures
        is not nice.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From glyph at twistedmatrix.com  Tue Jun 18 20:38:46 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 19:38:46 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <87wuswv4kb.fsf@ki.yok.utu.fi>
References: <3D0B658D.5080404@itamarst.org>
	<87wuswv4kb.fsf@ki.yok.utu.fi>
Message-ID: <20020618.193846.127653974.glyph@twistedmatrix.com>

From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 18 Jun 2002 21:12:52 +0300

> Itamar Shtull-Trauring <twisted at itamarst.org> writes:
> 
> > Proposal:
> > reactor.clientTCP accepts a protocol factory instead of a protocol,
> > and only makes a protocol instance if connection was
> > made. Additionally, it accepts an additional argument,
> > failureCallback, which will get called with a status code
> > (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something when the
> > connection fails. Protocol.connectionFailed goes bye-bye.
> 
> 	Please do not clobber the information given by the
>         kernel in errno. Translating errno to 2 different failures
>         is not nice.

It needs to be clobbered, at least in some sense, for portability.

Jython does not have errno and win32's support for it is very weak.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020618/beb4c756/attachment.pgp 

From glyph at twistedmatrix.com  Wed Jun 19 00:48:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 23:48:47 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020618.193846.127653974.glyph@twistedmatrix.com>
References: <3D0B658D.5080404@itamarst.org>
	<87wuswv4kb.fsf@ki.yok.utu.fi>
	<20020618.193846.127653974.glyph@twistedmatrix.com>
Message-ID: <20020618.234847.123286215.glyph@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: Tue, 18 Jun 2002 19:38:46 -0500 (CDT)

> From: Tommi Virtanen <tv at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
> Date: 18 Jun 2002 21:12:52 +0300

> > 	Please do not clobber the information given by the
> >         kernel in errno. Translating errno to 2 different failures
> >         is not nice.

> It needs to be clobbered, at least in some sense, for portability.
> 
> Jython does not have errno and win32's support for it is very weak.

Reading this a few hours later, I think my tone was wrong and I was altogether
too brief here. :-).  To rephrase in a more constructive manner:

I believe that it needs to be clobbered, and some information lost, because I
don't see any other way to retain portability.  Also, we're losing information
already, since errno is used to report things that aren't "errors" in the
Twisted worldview (or at least, not errors that the user can deal with
directly).  Jython and win32 both have error-reporting mechanisms; Jython's is
exceptions, win32 is a sort of wacked-out informal errno.  Can you think of a
few primitive errors that we should support, rather than just the 2 types?
(I'd rather use Failure than just integer error codes, personally.)

I think that if we're going to add a new error reporting mechanism we need to
do it carefully so that we don't miss the same kind of information that we did
the last time we architected this API.  (Protocol.connectionLost used to take
an integer error code which was one of these two errors; that was a bad idea,
too).

Thanks for your feedback.  Does anybody have a solution?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020618/12fe95f8/attachment.pgp 

From glyph at twistedmatrix.com  Wed Jun 19 04:34:57 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 19 Jun 2002 03:34:57 -0500 (CDT)
Subject: [Twisted-Python] A Farewell to Arms
Message-ID: <20020619.033457.41634720.glyph@twistedmatrix.com>


As detailed in my previous message, the .arm() method and patterns which
required its use with respect to Deferreds were problematic:

   http://twistedmatrix.com/pipermail/twisted-python/2002-May/001117.html

This is no longer the case.  Rejoice!  For the average application author, this
means that a confusing and obscure corner of the API has been swept out of
their view, where it never should have been in the first place.  For the
Twisted systems programmer, this means that you have more predictable and
consistent control over execution of a Deferred's processing chain regardless
of whether you "own" it or not.  It is all around a good thing.

As most good changes do, this resulted in a reduction of the total amount of
code in Twisted by a nontrivial number of lines.  It also fixed some previously
intractible bugs relating to AOT and Marmalade being unable to deal with
copy_reg registered types correctly.

Even better, the document in CVS (doc/howto/defer.html) has been updated to
describe this behavior, down to the subtle details of implementation.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020619/38e953f8/attachment.pgp 

From bruce at cubik.org  Wed Jun 19 10:24:06 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 19 Jun 2002 08:24:06 -0600
Subject: [Twisted-Python] Generic hierarchy interface
References: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
Message-ID: <3D109406.4070407@cubik.org>

Jp Calderone wrote:
 >   Its time has come.  The need is pretty clear, partially for
 > blog/news and a lot for Reality, and I'm sure for a lot of other
 > things I'm not aware of.  Basically, what seems to be needed is an
 > interface that allows for a protocol-defined hierarchy to
 > protocol-specific data, organised based on protocol-specific
 > meta-data.

Have you looked at the work done on URNs?

While this page is old, it contains some good pointers to work that had 
been done in that area:

   http://ana-annex.lcs.mit.edu/~edward/urn/single.html

 >   The appropriate places.  There seem to be three basic
 > relationships that are of interest: parent, child, and
 > sibling.  Accessor methods for these should be straightforward
 > enough, and implementions would need to provide the details
 > for each protocol of extracting them from the meta-data
 > available.  The other type of access would be absolute
 > and relative "path" access.  For example,
 > "news://a.server.name/a.group.name/a.message.id".
 > A Reality example:
 > "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"
 > In this case, each level of depth would only need to
 > implement a standard accessor interface to allow whatever
 > it may contain to be accessable.

One thing to think about there is the lifetime of a hierarchical 
identifier and the transient nature of some data (like spatial indexing).

  - Bruce




From dp at twistedmatrix.com  Wed Jun 19 23:02:33 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 19 Jun 2002 20:02:33 -0700
Subject: [Twisted-Python] DOMWidgets
In-Reply-To: <3D109406.4070407@cubik.org>
Message-ID: <2AE9F9C7-83FA-11D6-9367-003065B25CAA@twistedmatrix.com>

I just checked in DOMWidgets, a major part of my life for the last few 
weeks. (That and Twisted-Zope integration)

It's very late and I need to go home, but for the terminally curious, 
here's an example.

Put this rpy in a static web directory and for god's sake, use the 
latest CVS.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: new.rpy
Type: application/applefile
Size: 461 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020619/1b18f73f/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: new.rpy
Type: application/text
Size: 1657 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020619/1b18f73f/attachment-0001.bin 

From glyph at twistedmatrix.com  Thu Jun 20 20:20:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Jun 2002 19:20:10 -0500 (CDT)
Subject: [Twisted-Python] new doc generator, new doc
Message-ID: <20020620.192010.85698049.glyph@twistedmatrix.com>


I have just spent some time improving our documentation preprocessor as well as
writing a new document and fixing some old ones.  Everything's in CVS, though
using generate-domdocs may be a little bit confusing, so I've put the relevant
documents up on the web, too.

    http://zelda.twistedmatrix.com/doc/howto/plugin
    http://zelda.twistedmatrix.com/doc/howto/defer
    http://zelda.twistedmatrix.com/doc/howto/servers

Of course, if you're bitten by the documentation bug too, examples for the
source to all of these documents is in CVS in doc/howto/.  Feel free to
contribute one of your own.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020620/970c638f/attachment.pgp 

From steve.waterbury at gsfc.nasa.gov  Thu Jun 20 23:45:34 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 20 Jun 2002 23:45:34 -0400
Subject: [Twisted-Python] new doc generator, new doc
References: <20020620.192010.85698049.glyph@twistedmatrix.com>
Message-ID: <3D12A15E.DD1D5094@gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> I have just spent some time improving our documentation preprocessor as well as
> writing a new document and fixing some old ones.  Everything's in CVS, though
> using generate-domdocs may be a little bit confusing, so I've put the relevant
> documents up on the web, too.
> 
>     http://zelda.twistedmatrix.com/doc/howto/plugin
>     http://zelda.twistedmatrix.com/doc/howto/defer
>     http://zelda.twistedmatrix.com/doc/howto/servers

Thanks for the nice docs, Glyph!  I think there may be 
a typo in the doc on Deferreds:

-----------------------------------------------------
# Case 1
d = getDeferredFromSomewhere()
d.addCallback(callback1)
d.addErrback(errback1)
d.addCallback(callback2)
d.addErrback(errback1)
             ^^^^^^^^--> shouldn't this be errback2? 
 # Case 2
d = getDeferredFromSomewhere()
d.addCallbacks(callback1, errback1)
d.addCallbacks(callback2, errback2)

If an error occurs in callback1, then for Case 1 errback1 will be called with the 
failure. For Case 2, errback2 will be called. Be careful with your callbacks and 
errbacks.
-----------------------------------------------------

For Case 1, the only errback that *can* be called, as it's written, is 
errback1 ... but I think even if the second errback in Case 1 is 
errback2, errback1 is still called, right?

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
    "An idiot with a computer is a faster, better idiot." - Rick Julius



From ranty-bulk at ranty.ddts.net  Fri Jun 21 10:18:35 2002
From: ranty-bulk at ranty.ddts.net (Manuel Estrada Sainz)
Date: Fri, 21 Jun 2002 16:18:35 +0200
Subject: [Twisted-Python] [PATCH] to make twisted more "child process friendly"
Message-ID: <20020621141835.GA23753@ranty.ddts.net>

 Hello,

 Working on apt-proxy v2 I got stuck trying to get the status of a
 subprocess:

 internet/default.py:76
	signal.signal(signal.SIGCHLD, process.reapProcess)
	
	process.reapProcess will be called for every child that exists,
	which makes imposible to anyone to get the status. And actually
	makes useless calling 'reapProcess' from
	Process.maybeCallProcessEnded

 The patch allows objects to be registered to get the termination status
 of certain processes and changes process.Process to use it.

 I know that now the inline documentation gets outdated, I am willing to
 update it if you guys like the patch.
	
 
 Take care
 
 	ranty

-- 
--- Manuel Estrada Sainz <ranty at debian.org>
                         <ranty at bigfoot.com>
			 <ranty at users.sourceforge.net>
------------------------ <manuel.estrada at hispalinux.es> -------------------
God grant us the serenity to accept the things we cannot change, courage to
change the things we can, and wisdom to know the difference.
-------------- next part --------------
Index: process.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/process.py,v
retrieving revision 1.15
diff -u -r1.15 process.py
--- process.py	20 May 2002 21:09:35 -0000	1.15
+++ process.py	21 Jun 2002 13:58:23 -0000
@@ -39,6 +39,7 @@
 import abstract, main
 from main import CONNECTION_LOST, CONNECTION_DONE
 
+reapProcessHandlers = {}
 def reapProcess(*args):
     """Reap as many processes as possible (without blocking) via waitpid.
 
@@ -52,10 +53,24 @@
     go away w/o blocking.  I don't want to block.)
     """
     try:
-        os.waitpid(0,os.WNOHANG)
+        pid, status = os.waitpid(0,os.WNOHANG)
+        if reapProcessHandlers.has_key(pid):
+            reapProcessHandlers[pid].processEnded(status)
+            del reapProcessHandlers[pid]
     except:
         pass
 
+def registerReapProccessHandler(pid, process):
+    if reapProcessHandlers.has_key(pid):
+	raise RuntimeError
+    reapProcessHandlers[process.pid] = process
+
+def unregisterReapProccessHandler(pid, process):
+    if not (reapProcessHandlers.has_key(pid)
+            and reapProcessHandlers[pid] == process):
+	raise RuntimeError
+    del reapProcessHandlers[pid]
+
 class ProcessWriter(abstract.FileDescriptor, styles.Ephemeral):
     """(Internal) Helper class to write to Process's stdin.
 
@@ -165,8 +180,8 @@
         stdout_read, stdout_write = os.pipe()
         stderr_read, stderr_write = os.pipe()
         stdin_read,  stdin_write  = os.pipe()
-        pid = os.fork()
-        if pid == 0: # pid is 0 in the child process
+        self.pid = os.fork()
+        if self.pid == 0: # pid is 0 in the child process
             # stop debugging, if I am!  I don't care anymore!
             sys.settrace(None)
             # Destroy my stdin / stdout / stderr (in that order)
@@ -201,6 +216,7 @@
                     os.close(fd)
             os._exit(1)
         self.status = -1
+	registerReapProccessHandler(self.pid, self)
         for fd in stdout_write, stderr_write, stdin_read:
             os.close(fd)
         for fd in (stdout_read, stderr_read, stdin_write):
@@ -275,17 +291,23 @@
     lostErrorConnection = 0
     lostOutConnection = 0
     lostInConnection = 0
+    lostProcess = 0
 
     def maybeCallProcessEnded(self):
         if (self.lostErrorConnection and
             self.lostOutConnection and
-            self.lostInConnection):
+            self.lostInConnection and
+            self.lostProcess):
             try:
                 self.proto.processEnded()
             except:
                 log.deferr()
-            reapProcess()
     
+    def processEnded(self, status):
+        self.status = status
+        self.lostProcess = 1
+        self.maybeCallProcessEnded()
+        
     def inConnectionLost(self):
         del self.writer
         self.lostInConnection = 1

From grolgh at online.no  Fri Jun 21 12:59:27 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Fri, 21 Jun 2002 18:59:27 +0200
Subject: [Twisted-Python] Licence of examples
Message-ID: <000c01c21945$00fd8e10$b52f76d9@delhi>

Hello,

After some speculation I stumbled across a little nut, what happens if I use LGPLed examples. Are these a part of the library and thus define the code itself as a library, or will they give Glyph a pica-percentage copyright on huge works based on the code?

So, there's this file LICENSE that everyone must read through for fun. There's also an EULA coming up each time I install something on windows that I've never read through, except for fun. However, there are people believing in such inane matters, so I found this portion:

  5. A program that contains no derivative of any portion of the
Library, but is designed to work with the Library by being compiled or
linked with it, is called a "work that uses the Library".  Such a
work, in isolation, is not a derivative work of the Library, and
therefore falls outside the scope of this License.

That states: The examples are not a part of the library, thus they are just copyrighted by glyph. So, everyone who used the pb-echo-examples, Glyph owns that code (partly). I don't know what rights he inherently has, but he has the copyright.

What kind of licence should the example have? I would like to place it in Public Domain, because if stuff can be taken from there, then we should be able to place stuff there as well.

Benjamin Bruheim
benjamin at inout.no




From exarkun at meson.dyndns.org  Fri Jun 21 13:51:01 2002
From: exarkun at meson.dyndns.org (exarkun at meson.dyndns.org)
Date: Fri, 21 Jun 2002 13:51:01 -0400
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <000c01c21945$00fd8e10$b52f76d9@delhi>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
Message-ID: <20020621175101.GA19609@meson.dyndns.org>

On Fri, Jun 21, 2002 at 06:59:27PM +0200, Benjamin Bruheim wrote:
> Hello,
> 
> [snip license clause et al]
> 
> What kind of licence should the example have? I would like to place it in
> Public Domain, because if stuff can be taken from there, then we should be
> able to place stuff there as well.
> 
> Benjamin Bruheim
> benjamin at inout.no
> 

  Can't put anything in the public domain (US Law.  Lame, eh?)  An MIT-style
license for the examples might be a good idea.  They really *aren't* part of
the library so there's no real reason for them to be covered by the LGPL
(that I can see).

 Jp

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
 1:39pm up 31 days, 14:22, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 259 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020621/76aaab7e/attachment.pgp 

From glyph at twistedmatrix.com  Fri Jun 21 17:17:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 16:17:37 -0500 (CDT)
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <000c01c21945$00fd8e10$b52f76d9@delhi>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
Message-ID: <20020621.161737.116362434.glyph@twistedmatrix.com>

From: "Benjamin Bruheim" <grolgh at online.no>
Subject: [Twisted-Python] Licence of examples
Date: Fri, 21 Jun 2002 18:59:27 +0200

> That states: The examples are not a part of the library, thus they are just
> copyrighted by glyph. So, everyone who used the pb-echo-examples, Glyph owns
> that code (partly). I don't know what rights he inherently has, but he has
> the copyright.

I guess I've been looking for an excuse to talk about this for a while, so here
we go :)

There are two things to consider here:

    * What rights does Glyph have?
    * What is Glyph going to try to do?

Personally I couldn't care less whether anybody used the examples in their
code, not to mention the fact that they're supposed to be so trivial that
they're basically not copyrightable.  You can even cite this e-mail message in
court, if you want, since it's about as legally binding as a LICENSE file that
you don't have to sign... ;-) Even stealing small snippets of the Twisted code
is OK; it's probably fair use anyway, and even if it weren't, it's really not
worth my time (more importantly, it's not worth the non-trivial amounts of
money that my lawyer's time costs me) to track down and hassle people who have
used 3 lines from twistd's daemonization in their commercial application.

I take all these licensing issues with a grain of salt.  I would never use the
LGPL as a legal weapon except in defense.  The rules, as far as I'm concerned,
are:
 
    * you share your code, or
    * you pay me or somebody I know to work on the code

preferably both.

This is one reason that copyright is centralized.  Having it copyrighted by
tons of different people in different countries makes it difficult to construct
a credible threat in cases where a big corporation doesn't want to support the
development of something which is helpful to them, but instead swallow it
whole.  This is really bad business, too, but that's a different issue. (I
don't care whether their mistakes hurt *them*, just that they can hurt *us*
too.)  Being able to get "inside" the corporate mindset, though, and deal on
their terms, is useful for propogation of ideals about free software.  I'm
willing to compromise with them; this gives me an opportunity to show them that
my way of working is really better, so they're much more willing to compromise
with me.

Given that I get this privilege (allowing others to use Twisted code without
sharing) it comes with a responsibility.  The responsibility is to be the front
line of defense against liability claims that people want to make about the
Twisted software.  I know the license says there isn't any warranty (expressed
or implied, including but not limited to the implied warranty of
merchantibility or fitness for a particular purpose... ^_^) but that doesn't
stop people from being assholes about it and trying to sue anyway.  I *never*
want a Twisted hacker to be in a position where they have to deal with legal
nonsense regarding some code that they wrote.

> What kind of licence should the example have? I would like to place it in
> Public Domain, because if stuff can be taken from there, then we should be
> able to place stuff there as well.

I wish that this were possible, but BSD license is about as good as it gets.

    "... it is not possible to voluntarily place your software into the public
    domain under United States law." -- http://zooko.com/license_quick_ref.html

If anything, I think that we should probably use a different license for the
documentation, and then put examples under that license.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020621/6a646758/attachment.pgp 

From tv at twistedmatrix.com  Fri Jun 21 15:04:08 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 21 Jun 2002 22:04:08 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020618.234847.123286215.glyph@twistedmatrix.com>
References: <3D0B658D.5080404@itamarst.org> <87wuswv4kb.fsf@ki.yok.utu.fi>
	<20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
Message-ID: <871yb0v4gn.fsf@ki.yok.utu.fi>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> > > 	Please do not clobber the information given by the
> > >         kernel in errno. Translating errno to 2 different failures
> > >         is not nice.
> 
> > It needs to be clobbered, at least in some sense, for portability.
> > 
> > Jython does not have errno and win32's support for it is very weak.
> 
> Reading this a few hours later, I think my tone was wrong and I was altogether
> too brief here. :-).  To rephrase in a more constructive manner:
> 
> I believe that it needs to be clobbered, and some information lost, because I
> don't see any other way to retain portability.  Also, we're losing information
> already, since errno is used to report things that aren't "errors" in the
> Twisted worldview (or at least, not errors that the user can deal with
> directly).  Jython and win32 both have error-reporting mechanisms; Jython's is
> exceptions, win32 is a sort of wacked-out informal errno.  Can you think of a
> few primitive errors that we should support, rather than just the 2 types?
> (I'd rather use Failure than just integer error codes, personally.)
> 
> I think that if we're going to add a new error reporting mechanism we need to
> do it carefully so that we don't miss the same kind of information that we did
> the last time we architected this API.  (Protocol.connectionLost used to take
> an integer error code which was one of these two errors; that was a bad idea,
> too).
> 
> Thanks for your feedback.  Does anybody have a solution?

	Allow portable programs to get a "sanitized version", but
        allow my POSIX-only programs get errno. For what kind of
        sanitization one might want, you probably want to look at the
        man page for say connect(2) for all the possible error cases,
        and categorize them based on local/remote, temporary/permanent,
        etc., and create a "high-level error" for each class, with
        perhaps the string corresponding to the errno as extra info
        meant for users (and not if statements).

        But please do _not_ loose any information in the translation.
        Say people shouldn't look at the error objects errno attribute
        to decide what to do, as not all platforms provide it. But
        don't hide the actual error.

        Remember my background; I'm a kernel hacker, and I know the
        UNIX libc/kernel API. If I run a program that tries to
        e.g. connect with TCP, and it fails without giving me a good
        reason, I _will_ run it under strace -e trace=connect just to
        see whether connect failed, and with what errno. Operating
        systems without BSD sockets just aren't, and I write my
        programs to use fork anyway. My point -- don't decide for me,
        let me decide on my own.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From shae at ScannedInAvian.com  Fri Jun 21 17:28:15 2002
From: shae at ScannedInAvian.com (Shae Matijs Erisson)
Date: 22 Jun 2002 00:28:15 +0300
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <20020621.161737.116362434.glyph@twistedmatrix.com>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
	<20020621.161737.116362434.glyph@twistedmatrix.com>
Message-ID: <874rfwgw40.fsf@webwitches.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> This is one reason that copyright is centralized.  Having it copyrighted by
> tons of different people in different countries makes it difficult to construct
> a credible threat in cases where a big corporation doesn't want to support the
> development of something which is helpful to them, but instead swallow it
> whole.

I've been aching to ask this question somewhere this matters.
Does the Zope Public License cover this case in your, or your lawyers opinion?
There's a specialized joint copyright agreement in it that seems worth
considering to me.
-- 
Shae Matijs Erisson - http://www.webwitches.com/~shae/
<radix> shapr: I think you *are* a purist :)
<radix> shapr: it's just that you're morally against unstable software, instead
        of morally against MS, or non-free software, or whatnot.





From glyph at twistedmatrix.com  Fri Jun 21 19:32:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 18:32:48 -0500 (CDT)
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <874rfwgw40.fsf@webwitches.com>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
	<20020621.161737.116362434.glyph@twistedmatrix.com>
	<874rfwgw40.fsf@webwitches.com>
Message-ID: <20020621.183248.98865860.glyph@twistedmatrix.com>

From: Shae Matijs Erisson <shae at ScannedInAvian.com>
Subject: Re: [Twisted-Python] Licence of examples
Date: 22 Jun 2002 00:28:15 +0300

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> > This is one reason that copyright is centralized.  Having it copyrighted by
> > tons of different people in different countries makes it difficult to construct
> > a credible threat in cases where a big corporation doesn't want to support the
> > development of something which is helpful to them, but instead swallow it
> > whole.
> 
> I've been aching to ask this question somewhere this matters.
> Does the Zope Public License cover this case in your, or your lawyers opinion?

I assume you're referring to this:

    http://www.zope.org/Resources/ZPL

No.  It doesn't address any of my concerns.  Most importantly, it doesn't place
any value on redistribution.  Unlike "pure" GPL, I don't want to force
everybody in the world who modifies or adds to Twisted to contribute their
changes back.  However, I do believe that their changes have value, and if
they're not paying the community back in that way, they need to be putting
money into it (to keep some Twisted developers fed while they keep working on
the free stuff).  LGPL + single copyright holder gives us that restriction plus
an assigned negotiator (one for each module in Twisted CVS; it's not always me!
See TwistedJava (itamarst) or TwistedEmacs (washort)) for exceptions to it.
ZPL affords basically no protection.

Not to mention the fact that if I were going to use a license of this type I
would want to use Python/BSD/MIT/X11 license and call it "Python" or "BSD", and
not "ZPL".

> There's a specialized joint copyright agreement in it that seems worth
> considering to me.

    http://dev.zope.org/CVS/Contributor.pdf

*This*, on the other hand, looks very interesting to me.  This is more formal
than the ad-hoc "verbal" contract we have now, although the terms are very
similar; I like it.  Does anybody have objections to the terms outlined there?
(Are there any copyright concerns with the document itself? ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020621/975f7ab0/attachment.pgp 

From glyph at twistedmatrix.com  Fri Jun 21 19:59:23 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 18:59:23 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <871yb0v4gn.fsf@ki.yok.utu.fi>
References: <20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
	<871yb0v4gn.fsf@ki.yok.utu.fi>
Message-ID: <20020621.185923.75772697.glyph@twistedmatrix.com>


From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 21 Jun 2002 22:04:08 +0300

> Allow portable programs to get a "sanitized version", but allow my POSIX-only
> programs get errno. For what kind of sanitization one might want, you
> probably want to look at the man page for say connect(2) for all the possible
> error cases, and categorize them based on local/remote, temporary/permanent,
> etc., and create a "high-level error" for each class, with perhaps the string
> corresponding to the errno as extra info meant for users (and not if
> statements).

> But please do _not_ loose any information in the translation.  Say people
> shouldn't look at the error objects errno attribute to decide what to do, as
> not all platforms provide it. But don't hide the actual error.

Upon consideration I strongly agree that no information should be lost.

So, let's have such a high-level error, and a .platformError attribute on the
connection error object which is an object specific to the "OS" that you're
running under.  On POSIX this will be (or contain) an errno error code, but on
Jython and elsewhere it will be whatever's appropriate.  Does that work for
you?

> Remember my background; I'm a kernel hacker, and I know the UNIX libc/kernel
> API. If I run a program that tries to e.g. connect with TCP, and it fails
> without giving me a good reason, I _will_ run it under strace -e
> trace=connect just to see whether connect failed, and with what
> errno. Operating systems without BSD sockets just aren't, and I write my
> programs to use fork anyway. My point -- don't decide for me, let me decide
> on my own.

The reason I'm resistent to this is that I would like to encourage writing
portable programs with Twisted, especially in cases where platform specificity
doesn't add any functionality.  On the other hand, I don't want to be Java here
and try to _force_ programmers to write their programmers in a portable way
when they really know better than I do what they want.

Problem is, programmers rarely know what they want.  For example; if you're
using Twisted, why use fork?  You ought to be using reactor.spawnProcess for
non-portability-related reasons anyway; Python's refcounting doesn't work
reliably with COW memory.  Of course, there are reasons not to do this; of
course, there are times when you just _need_ to get down to the OS and do
something in a very, very platform specific way (sometimes even specific to
your particular OS vendor, not just POSIX).  This should not be the default.

Handling an errno error code specifically should also be considered a *very*
esoteric operation.  I personally can't come up with any need to use it except
debugging under a particular environment; I would far rather that people used
to the POSIX API learned how to use the Twisted APIs to do POSIX-y things, so
that their programs would be more portable.  

Balancing this with the need not to piss people off is difficult :-).  I can't
think of a way to say "DON'T USE .platformError UNLESS YOU REALLY NEED IT,
WHICH YOU DON'T" without making everybody read the documentation, which they
won't anyway.  I can imagine many programs made non-portable by someone looking
for the answer to the question "how do I find the errno of what happened"
rather than the correct question "how do I handle a connection error".

So I guess I'll provide the platform specific information and put my faith in
the worldview of applications programmers; please try to give them good
examples to look at :)


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020621/254e5b2f/attachment.pgp 

From andrew-twisted at puzzling.org  Sat Jun 22 00:00:39 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 22 Jun 2002 14:00:39 +1000
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020621.185923.75772697.glyph@twistedmatrix.com>
References: <20020618.193846.127653974.glyph@twistedmatrix.com> <20020618.234847.123286215.glyph@twistedmatrix.com> <871yb0v4gn.fsf@ki.yok.utu.fi> <20020621.185923.75772697.glyph@twistedmatrix.com>
Message-ID: <20020622040039.GB479@frobozz.local>

On Fri, Jun 21, 2002 at 06:59:23PM -0500, Glyph Lefkowitz wrote:
> 
> From: Tommi Virtanen <tv at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
> Date: 21 Jun 2002 22:04:08 +0300
> 
> > But please do _not_ loose any information in the translation.  Say people
> > shouldn't look at the error objects errno attribute to decide what to do, as
> > not all platforms provide it. But don't hide the actual error.
> 
> Upon consideration I strongly agree that no information should be lost.
> 
> So, let's have such a high-level error, and a .platformError attribute on the
> connection error object which is an object specific to the "OS" that you're
> running under.  On POSIX this will be (or contain) an errno error code, but on
> Jython and elsewhere it will be whatever's appropriate.  Does that work for
> you?

I don't care about the errno, but I do think that the corresponding error
string (e.g. 'No route to host') should be available, so that you have
something meaningful to display to the user, write in error logs, etc.  Is
it guaranteed that a socket.error's .args attribute will always be a 2-tuple
of (errno, description) on all platforms?  If so, I think that would make
sense as the .platformError.

-Andrew.




From tv at twistedmatrix.com  Sat Jun 22 17:57:31 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 23 Jun 2002 00:57:31 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020621.185923.75772697.glyph@twistedmatrix.com>
References: <20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
	<871yb0v4gn.fsf@ki.yok.utu.fi>
	<20020621.185923.75772697.glyph@twistedmatrix.com>
Message-ID: <87wusrt1ro.fsf@ki.yok.utu.fi>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> So, let's have such a high-level error, and a .platformError attribute on the
> connection error object which is an object specific to the "OS" that you're
> running under.  On POSIX this will be (or contain) an errno error code, but on
> Jython and elsewhere it will be whatever's appropriate.  Does that work for
> you?

	Yes.

> Balancing this with the need not to piss people off is difficult :-).  I can't
> think of a way to say "DON'T USE .platformError UNLESS YOU REALLY NEED IT,
> WHICH YOU DON'T" without making everybody read the documentation, which they
> won't anyway.  I can imagine many programs made non-portable by someone looking
> for the answer to the question "how do I find the errno of what happened"
> rather than the correct question "how do I handle a connection error".

	Don't document platformError outside the source code, and
        there point out that it should not be used, and point to the
        real solution. This is a social problem, and technical methods
        will not be able to solve it.

	And, if you want me to write code using the high-level API, the
        high-level API needs to be able to tell me atleast

        1) if the error is local or remote
        2) if the error is temporary or permanent
        3) how to report the error to the user without losing information

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From glyph at twistedmatrix.com  Sat Jun 22 21:35:59 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 22 Jun 2002 20:35:59 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <87wusrt1ro.fsf@ki.yok.utu.fi>
References: <871yb0v4gn.fsf@ki.yok.utu.fi>
	<20020621.185923.75772697.glyph@twistedmatrix.com>
	<87wusrt1ro.fsf@ki.yok.utu.fi>
Message-ID: <20020622.203559.120142003.glyph@twistedmatrix.com>


From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 23 Jun 2002 00:57:31 +0300

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> > ... Does that work for you?

> 	Yes.

Cool; sounds like a plan.

> > Balancing this with the need not to piss people off is difficult :-). ...

> Don't document platformError outside the source code, and there point out
> that it should not be used, and point to the real solution. This is a social
> problem, and technical methods will not be able to solve it.

I agree.  This is a good suggestion. 

> And, if you want me to write code using the high-level API, the high-level
> API needs to be able to tell me atleast

>         1) if the error is local or remote
>         2) if the error is temporary or permanent
>         3) how to report the error to the user without losing information

This is also a good list.  Does anyone else want to add to it?  From what I can
tell, this complete, so I think I'll do the refactoring with these things in
mind.

I'd like to get another release out before we start on this, though.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020622/a5b74f0a/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Jun 24 20:20:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 25 Jun 2002 10:20:55 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
In-Reply-To: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
References: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
Message-ID: <20020625002055.GA21644@ritsuko.xware.cx>

On Mon, Jun 24, 2002 at 12:30:04PM -0500, glyph CVS wrote:
> 
> Log message:
> Small Updates
> 
>  * Unit test fixes (--module option to runtests)

How does this differ from --file?  Is it just that you can do
--module=ftp instead of --file=twisted/tests/test_ftp.py?

-Andrew.




From glyph at twistedmatrix.com  Mon Jun 24 21:45:53 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 24 Jun 2002 20:45:53 -0500 (CDT)
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
In-Reply-To: <20020625002055.GA21644@ritsuko.xware.cx>
References: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
	<20020625002055.GA21644@ritsuko.xware.cx>
Message-ID: <20020624.204553.35027476.glyph@twistedmatrix.com>


From: Andrew Bennetts <andrew-twisted at puzzling.org>
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
Date: Tue, 25 Jun 2002 10:20:55 +1000

> How does this differ from --file?  Is it just that you can do
> --module=ftp instead of --file=twisted/tests/test_ftp.py?
> 
> -Andrew.

The difference subtle, but significant.

You can now do:

% runtests -t --module twisted.test.test_ftp \
              --module twisted.test.test_web \
              --module Reality.reality.test_reality

That last line is why I made the change ;-).  This was developed mainly in
support of twisted-dev.el.  I wanted to be able to have TwistedEmacs support
Twisted plugins with unit tests.  Also, to be able to run a subset of the tests
relevant to a certain task without running runtests multiple times.  (--file
currently can only be used with one file at a time)

Notice those -*- test-case-name: -*- lines starting to crop up at the top of
various Python files?  When you're using the TwistedEmacs development setup
(twisted-dev.el now in TwistedEmacs CVS), you can push F9 and get a
context-dependent unit test depending on which file you're editing, as well as
jumping to lines in tracebacks that occurr as if they were compiler errors.

(Any vimmers want to write something similar? ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020624/317ee22b/attachment.pgp 

From glyph at twistedmatrix.com  Tue Jun 25 09:26:16 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
Message-ID: <20020625.082616.59463726.glyph@twistedmatrix.com>


Due to a potentially major security hazard, ssh has been shut down on
twistedmatrix.com until further notice.  There has been a discovery of a remote
root exploit, but Theo de Raadt has mysteriously refrained from actually
providing evidence of this exploit or a patch to fix it.  There is currently a
half-solution to the exploit, but it requires breaking substantial amounts of
functionality, and creating other administrative problems.  Surprisingly
(Theo's great, ain't he?) the workaround only works correctly on OpenBSD.
Additionally, from what I understand, this does not prevent gaining access,
only escalating privileges to root level.

More information is here:

     http://lists.debian.org/debian-security-announce/debian-security-announce-2002/msg00046.html

Until some more information arrives about this, please use anonymous pserver
access for check-outs from CVS, and mail me patches if you have anything you
really want to get committed.  (PGP signed, please.)  I am currently working on
a shell client and server for Twisted that we can use to work around problems
with CVS. (Working title: TRASH, the Twisted Remote Access SHell).

If you require shell access to Zaibach, I have installed telnetd-ssl. (Debian
users: apt-get install telnet-ssl; this will replace your existing 'telnet'
binary).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020625/7da55ccd/attachment.pgp 

From acapnotic at twistedmatrix.com  Tue Jun 25 13:26:29 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 25 Jun 2002 10:26:29 -0700
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020625.082616.59463726.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
Message-ID: <1025025989.10652.37.camel@zardoz.janrain.com>

On Tue, 2002-06-25 at 06:26, Glyph Lefkowitz wrote:
> If you require shell access to Zaibach, I have installed telnetd-ssl. (Debian
> users: apt-get install telnet-ssl; this will replace your existing 'telnet'
> binary).

note that zaibach also allows cleartext telnet.  If you want to be sure
you're not accidently using cleartext when you don't want to, start
telnet with the "-z secure" flag.

"you-mean-I-didn't-already-have-telnet-ssl-installed"-ly yours,

  Kevin




From typo at soniq.net  Wed Jun 26 07:59:32 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 26 Jun 2002 13:59:32 +0200
Subject: [Twisted-Python] Twisted/doc/howto/listings/
Message-ID: <20020626115931.GA5982@soniq.net>

i can't find Twisted/doc/howto/listings/ , as referenced from some of the
howtos, in current cvs. are these unfinished or just not imported into cvs yet?

  paul



From typo at soniq.net  Wed Jun 26 08:04:15 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 26 Jun 2002 14:04:15 +0200
Subject: [Twisted-Python] Twisted/doc/howto/listings/
In-Reply-To: <20020626115931.GA5982@soniq.net>
References: <20020626115931.GA5982@soniq.net>
Message-ID: <20020626120415.GA24471@soniq.net>

On Wed, Jun 26, 2002 at 01:59:32PM +0200, Paul Boehm wrote:
> i can't find Twisted/doc/howto/listings/ , as referenced from some of the
> howtos, in current cvs. are these unfinished or just not imported into cvs yet?

14:02 < radix> yes it is :-) Are you using the -d option to update?

doh. thanks :)




From steve.waterbury at gsfc.nasa.gov  Tue Jun 25 14:29:56 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 25 Jun 2002 14:29:56 -0400
Subject: [Twisted-Python] Twisted Bugs ... help!
Message-ID: <3D18B6A4.34CECF73@gsfc.nasa.gov>

Yet another newbie question ... 

Trying to get Twisted Bugs to run, but no joy so far.
Tried both Bugs-0.2.0 and the latest CVS version.  Set up the 
twisted database and checked it to make sure the right tables are 
there and populated properly by schema.sql.  I've also replaced "main" 
by "app" in bugs.tac, so the server will start up (might 
be good to fix that in the distro!).
  
In both cases, trying http://localhost:8485 gives a traceback -- 
here are the log entries (nice logging, by the way! :^) ...  

---------------------------------------------------------------------
25/06/2002 14:10 [-] Log opened.
25/06/2002 14:10 [-] twistd 0.18.0-post (/usr/local/bin/python 2.2.1) starting up
25/06/2002 14:10 [-] license user: Nobody <>
25/06/2002 14:10 [-] organization: No Organization
25/06/2002 14:10 [-] reactor class: twisted.internet.default.SelectReactor
25/06/2002 14:10 [-] Loading /usr/local/src/python/Twisted/Bugs-0.2.0/bugs.tac...
25/06/2002 14:10 [-] Enabling Multithreading.
25/06/2002 14:10 [-] twisted.internet.threadtask is deprecated, use .threads instead.
25/06/2002 14:10 [-] Connecting to database: pyPgSQL.PgSQL () {'database': 'twisted'}
25/06/2002 14:10 [-] Loaded.
25/06/2002 14:10 [*Bugs*] twisted.web.server.Site starting on 8485
25/06/2002 14:10 [*Bugs*] Starting factory <twisted.web.server.Site instance at 0x83b40b4>
25/06/2002 14:10 [*Bugs*] Bugs.service.Service (twisted.bugs) starting
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] adbapi connecting: pyPgSQL.PgSQL {'database': 'twisted'}
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] Traceback (most recent call last):
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/server.py", line 152, in process
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     body = resrc.render(self)
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 902, in render
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     RenderSession(displayed, request)
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 713, in __init__
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     self.keepRendering()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 782, in keepRendering
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     deferred.unpause()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 161, in unpause
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     self._runCallbacks()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 179, in _runCallbacks
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     callback, args, kw = item[self.isError]
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] exceptions.AttributeError: Deferred instance has no attribute 'isError'
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] 128.183.52.185 - - [25/Jun/2002:18:11:38 +0000] "<GET / HTTP/1.1>" 500 11833 "-" "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020606"
---------------------------------------------------------------------

TIA for any help!

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Jun 26 12:06:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Jun 2002 11:06:21 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020625.082616.59463726.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
Message-ID: <20020626.110621.95498066.glyph@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: [Twisted-Python] Developer Security Notice
Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)

> Due to a potentially major security hazard, ssh has been shut down on
> twistedmatrix.com until further notice.  There has been a discovery of a remote
> root exploit, but Theo de Raadt has mysteriously refrained from actually
> providing evidence of this exploit or a patch to fix it.

More information has suddenly become available.  The supar s1kr3t debian
informant who contacted me with the information has informed me that (while not
official yet) the compile options that Debian uses to build openssh don't make
it vulnerable.

Ah well, didn't finish 'trash' before I found out about this, so I'll be
tabling that for a while (UNIX is hard, kids; don't try this at home.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020626/f8bb87da/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Jun 26 23:17:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 27 Jun 2002 13:17:06 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Updated and added tests for twisted.sister.  It may actually be usable for something now.
In-Reply-To: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
Message-ID: <20020627031706.GA2634@ritsuko.xware.cx>

On Wed, Jun 26, 2002 at 05:22:03PM -0500, glyph CVS wrote:
> 
> Note: With this checkin we (sean and I) discovered that the unit tests are
> starting to interfere with each other.  Currently a full run of the tests will
> not complete, and will in fact hang and be unresponsive to signals.  Running
> individual test cases by themselves work fine, but they're interfering with
> each other by doing reactor-y things ... we need each test case to
> instantiate/start/stop the reactor, etc.  I will buy chocolate for whoever does
> this first.

Maybe reactors need a .reset() method to completely clear their internal
state?  You could then modify runtests to do a reactor.reset() between
each testcase, or something similar.  That way test cases that forget to
unregister old callLater calls, etc, won't pollute later tests.

-Andrew.




From typo at soniq.net  Thu Jun 27 07:25:13 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 27 Jun 2002 13:25:13 +0200
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627031706.GA2634@ritsuko.xware.cx>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx>
Message-ID: <20020627112513.GA23431@soniq.net>

imho self._runCallbacks() in Deferred.unpause() needs to be removed,
because self.isError and self.results aren't neccesarily initialized at this
point, yet.

web.widgets can trigger this with its deferred widget rendering.

any comments ?

  paul



From exarkun at meson.dyndns.org  Thu Jun 27 09:12:51 2002
From: exarkun at meson.dyndns.org (exarkun at meson.dyndns.org)
Date: Thu, 27 Jun 2002 09:12:51 -0400
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020626.110621.95498066.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com> <20020626.110621.95498066.glyph@twistedmatrix.com>
Message-ID: <20020627131251.GA1175@meson.dyndns.org>

On Wed, Jun 26, 2002 at 11:06:21AM -0500, Glyph Lefkowitz wrote:
> From: Glyph Lefkowitz <glyph at twistedmatrix.com>
> Subject: [Twisted-Python] Developer Security Notice
> Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
> 
> > [snip]
> [snip]
> 
> Ah well, didn't finish 'trash' before I found out about this, so I'll be
> tabling that for a while (UNIX is hard, kids; don't try this at home.)
> 

  *cough*  Is 'trash' in CVS anywhere?  I'd kinda like to take a look :)

 Jp

-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
--
 9:11am up 37 days, 9:54, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020627/53f9e562/attachment.pgp 

From glyph at twistedmatrix.com  Thu Jun 27 19:26:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Jun 2002 18:26:37 -0500 (CDT)
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627112513.GA23431@soniq.net>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
	<20020627031706.GA2634@ritsuko.xware.cx>
	<20020627112513.GA23431@soniq.net>
Message-ID: <20020627.182637.112256714.glyph@twistedmatrix.com>

From: Paul Boehm <typo at soniq.net>
Subject: [Twisted-Python] unpause()
Date: Thu, 27 Jun 2002 13:25:13 +0200

> imho self._runCallbacks() in Deferred.unpause() needs to be removed,
> because self.isError and self.results aren't neccesarily initialized at this
> point, yet.

I think you're right; I ought to be checking self.called before
self._runCallbacks().

> web.widgets can trigger this with its deferred widget rendering.

> any comments ?

I've fixed it, I think.  Care to contribute a test case? ;)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020627/e5aa39bb/attachment.pgp 

From glyph at twistedmatrix.com  Thu Jun 27 19:31:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Jun 2002 18:31:21 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020627131251.GA1175@meson.dyndns.org>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
	<20020626.110621.95498066.glyph@twistedmatrix.com>
	<20020627131251.GA1175@meson.dyndns.org>
Message-ID: <20020627.183121.59649292.glyph@twistedmatrix.com>

From: exarkun at meson.dyndns.org
Subject: Re: [Twisted-Python] Developer Security Notice
Date: Thu, 27 Jun 2002 09:12:51 -0400

> On Wed, Jun 26, 2002 at 11:06:21AM -0500, Glyph Lefkowitz wrote:
> > From: Glyph Lefkowitz <glyph at twistedmatrix.com>
> > Subject: [Twisted-Python] Developer Security Notice
> > Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
> > 
> > > [snip]
> > [snip]
> > 
> > Ah well, didn't finish 'trash' before I found out about this, so I'll be
> > tabling that for a while (UNIX is hard, kids; don't try this at home.)

>   *cough*  Is 'trash' in CVS anywhere?  I'd kinda like to take a look :)

Nah.  And there's nothing interesting in it yet, so far -- most of the work I
did was trying to figure out how the hell setuid/setgid worked, and I checked
in those additions to twisted.internet.process.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020627/42351eae/attachment.pgp 

From steve.waterbury at gsfc.nasa.gov  Thu Jun 27 10:14:09 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 27 Jun 2002 10:14:09 -0400
Subject: [Twisted-Python] unpause()
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx> <20020627112513.GA23431@soniq.net>
Message-ID: <3D1B1DB1.E0EFC96F@gsfc.nasa.gov>

Paul Boehm wrote:
> 
> imho self._runCallbacks() in Deferred.unpause() needs to be removed,
> because self.isError and self.results aren't neccesarily initialized at this
> point, yet.
> 
> web.widgets can trigger this with its deferred widget rendering.
> 
> any comments ?

That might explain the traceback I'm getting in Bugs 
("exceptions.AttributeError: Deferred instance has no attribute 'isError'")
on the root URL (localhost:8485) when there are no bugs in the database.  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From dmarko at digi-trade.cz  Fri Jun 28 03:11:36 2002
From: dmarko at digi-trade.cz (David Marko)
Date: Fri, 28 Jun 2002 09:11:36 +0200
Subject: [Twisted-Python] Twisted on WIN32
Message-ID: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>

I have found your remark in Twisted mailing list on cl.exe. Can you 
provide me with binary version for this, otherwise I am not able to make 
"python setup.py install" on twisted environment. I have Win2000 and 
python 2.2


Thank you.
David Marko
--------------------------------------------------------------------------------------------------------
TCL-DigiTrade Ltd.
http://www.tcl-digitrade.com
http://www.lnscan.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020628/4ff0d891/attachment.htm 

From typo at soniq.net  Fri Jun 28 05:26:26 2002
From: typo at soniq.net (Paul Boehm)
Date: Fri, 28 Jun 2002 11:26:26 +0200
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627.182637.112256714.glyph@twistedmatrix.com>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx> <20020627112513.GA23431@soniq.net> <20020627.182637.112256714.glyph@twistedmatrix.com>
Message-ID: <20020628092626.GA8537@soniq.net>

On Thu, Jun 27, 2002 at 06:26:37PM -0500, Glyph Lefkowitz wrote:
> I've fixed it, I think.  Care to contribute a test case? ;)
sure:

    def testUnpauseBeforeCallback(self):
        d = defer.Deferred()
        d.pause()
        d.addCallback(self._callback)
        d.unpause()

(this is equivalent to the problems web.widgets had with unpause, I think ;)



From andrew-twisted at puzzling.org  Fri Jun 28 23:31:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 29 Jun 2002 13:31:30 +1000
Subject: [Twisted-Python] Twisted on WIN32
In-Reply-To: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>
References: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>
Message-ID: <20020629033130.GA493@frobozz.local>

On Fri, Jun 28, 2002 at 09:11:36AM +0200, David Marko wrote:
>    I have found your remark in Twisted mailing list on cl.exe. Can you
>    provide me with binary version for this, otherwise I am not able to make
>     "python setup.py install" on twisted environment. I have Win2000 and
>    python 2.2

CL.EXE is part of MS Visual C++; it would be illegal to distribute it, and
besides, you'd need most of the rest of MS Visual C++ as well.

We should probably provide a Windows installer for Python 2.2 as well as
Python 2.1.  Who is responsible for building these?

David: The error you are seeing is due to it trying to compile "cBanana.pyd",
which is an optimised C version of banana.py.  Twisted will run just fine
without it (although the twisted.spread stuff will be a bit slower).  You
should be able to comment out these lines right near the bottom of setup.py:
    setup_args['ext_modules'] = [
        Extension("twisted.spread.cBanana", ["twisted/spread/cBanana.c"],
                  define_macros=define_macros),
        ]
That should make it skip building that module.  It should then work fine.

Alternatively, you could try using cygwin's Python, but that's probably more
hassle than it's worth.  It's also possible that you could build it with lcc
(or whatever the port of gcc to win32 is called) rather than MSVC, but that
also would be lots of mucking around.

-Andrew.




From abo at minkirri.apana.org.au  Sat Jun  1 05:27:30 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Sat, 1 Jun 2002 21:27:30 +1000
Subject: [Twisted-Python] Regarding customer support...
In-Reply-To: <38D042BA-7416-11D6-B53D-000393753460@asbahr.com>
References: <38D042BA-7416-11D6-B53D-000393753460@asbahr.com>
Message-ID: <20020601112730.GF8485@minkirri.apana.org.au>

On Thu, May 30, 2002 at 04:43:04PM -0500, Jason Asbahr wrote:
[...]
> Looking at the numerous examples of partial implementations of these 
> various systems out there, it seems that it is easy to start one of 
> these projects, but hard to get it to the point where it is actually 
> useful (and I'm specifically looking at project management here).

Hmmm, I wonder what that says about people that are into project
management... very good at planning, not so good at actually doing :-)

Seriously though... good PM tools would be nice...

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Sun Jun  2 01:14:37 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 02 Jun 2002 09:14:37 +0200
Subject: [Twisted-Python] ANN: Twisted 0.18.0
Message-ID: <3CF9C5DD.7080506@itamarst.org>

Twisted is an event-based framework for internet applications, written
in Python and licensed under the LGPL. For more information, visit:

        http://www.twistedmatrix.com

or join the list at:

        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


What's New since 0.17.4
=======================

0.18.0 is a major release, cleaning up many of the main APIs in
twisted.internet and moving us much closer to a 0.99.x series leading up
to Twisted 1.0.

- The networking core of Twisted - twisted.internet - was totally
refactored, cleaned up, documented and improved, using explicit
interfaces. The API is now much improved, and mostly stable. The main
change was to create an explicit reactor object, using which you can
schedule events, connect or listen on TCP/UDP/SSL ports, run methods in
a thread pool, and so on. The tools that come with Twisted have been
extended to allow choosing the reactor at runtime. Currently supported
are select(), poll(), GTK+, Qt, Win32 event API, and Java thread based
reactors, with wxPython and Tkinter support integrating with whichever
reactor is chosen.

- Perspective Broker, Twisted's remote object protocol, now supports
returning the equivalent of exceptions for failed remote method calls.
Additionally, resource limiting was added to the implementation.

- Applications can now be persisted to XML, using marmalade, a XML
pickle equivalent. This allows you to edit low level application
settings using a text editor.

- Added a sample IRC bot - it listens on a channel and logs it to a file.

- Improvements to twisted.mail - the SMTP server now has basic support
for bouncing.

- Improvements to t-im, Twisted's instant messaging client.

- LDAP was moved out into a separate package:
     http://twistedmatrix.com/users/tv/ldaptor/

- Many bug fixes, feature enhancements and additional documentatiom.


What is Twisted?
================

Twisted is an event-based framework for internet applications.  It
includes a web server, a telnet server, a chat server, a news server, a
generic client and server for remote object access, and APIs for
creating new protocols and services. Twisted supports integration of the
Tk, GTK+, Qt or wxPython event loop with its main event loop. The Win32
event loop is also supported, as is basic support for running servers on
top of Jython.

Twisted currently supports the following protocols, all implemented in
pure python, most of them as both servers and clients:

         - NNTP
         - FTP
         - HTTP
         - SOCKSv4
         - SMTP
         - IRC
         - telnet
         - POP3
         - AOL's instant messaging TOC
         - OSCAR, used by AOL-IM as well as ICQ (client only)
         - DNS
         - finger
         - Echo, discard, chargen and friends
         - Twisted Perspective Broker

For more information, visit http://www.twistedmatrix.com, or join the
list at http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python







From shae at ScannedInAvian.com  Sat Jun  1 09:08:20 2002
From: shae at ScannedInAvian.com (Shae Matijs Erisson)
Date: 01 Jun 2002 18:08:20 +0300
Subject: [Twisted-Python] Proposal: Make tax default, tap optional
In-Reply-To: <5934519A-74E2-11D6-8106-003065B25CAA@twistedmatrix.com>
References: <5934519A-74E2-11D6-8106-003065B25CAA@twistedmatrix.com>
Message-ID: <877kljghp7.fsf@webwitches.com>

Donovan Preston <dp at twistedmatrix.com> writes:

> Startup speed is fairly important to me (not terribly, but fairly...)
> Here's what I suggest: By default, create both. Then, each time a tap is to be loaded, check to see if the modification
> date on the tax is newer. If it is, load the tax, and save the tap.

Hey, I was going to suggest that......
Just like .py to .pyc and .el to .elc (but .elc isn't automatic)
I think it's the right solution.
-- 
Shae Matijs Erisson - http://www.webwitches.com/~shae/
<radix> shapr: I think you *are* a purist :)
<radix> shapr: it's just that you're morally against unstable software, instead
        of morally against MS, or non-free software, or whatnot.





From typo at soniq.net  Mon Jun  3 09:38:55 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 3 Jun 2002 17:38:55 +0200
Subject: [Twisted-Python] irc bug report reminders (Twisted-0.18.0)
Message-ID: <20020603153855.GC6631@soniq.net>

#1:
   File "/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 430, in run
     reactor.listenUDP(port, factory, interface, maxPacketSize)
   File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 120, in listenUDP
     return udp.Port(self, port, factory, interface, maxPacketSize)
 TypeError: __init__() takes at most 5 arguments (6 given)

#2:
16:08 < typo_> hmm, is app.listenSSL currently "temporarily unimplemented" because of the reactor transition ?
16:08 < itamar> apparently
16:08 < itamar> that's a bug though
16:08 < radix> eep
16:09 < itamar> or maybe glyph didn't feel like making a custom XML format for that
16:09 < itamar> god that sucks
16:09 < itamar> anyway, do reactor.listenSSL, it'll be sorted out by next release I hope





From grolgh at online.no  Tue Jun  4 07:43:01 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Tue, 4 Jun 2002 15:43:01 +0200
Subject: [Twisted-Python] FTPResource, again
Message-ID: <002b01c20bcd$beff5180$b52f76d9@delhi>

Hey,

Here are a draft for "Resources". This one follows Itamars suggestion (which I after some dispute with myself found necessary).
The path-stuff is awful, so ignore it. A combination of the module posixpath (undocumented) and os.path is a good replacement. Otherwise, there's some random routines, and the Interfaces aren't specified. Any ideas what must in and what must go? Request.render is silly :)
This is just a "proof of concept", but I fear I've done some fundemental errors. Especially the "resolving" of objects is idiotic and naive. Any suggestions for replacements?

Anyway, I think this is enough code to make the ftp-server resourceindependent once and for all. Oh, and last there's some unused code there too, but please don't mind.

\\ benjamin
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ftpresource.py
URL: </pipermail/twisted-python/attachments/20020604/95cd9d6e/attachment.ksh>

From twisted at itamarst.org  Tue Jun  4 09:44:43 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 04 Jun 2002 18:44:43 +0300
Subject: [Twisted-Python] irc bug report reminders (Twisted-0.18.0)
References: <20020603153855.GC6631@soniq.net>
Message-ID: <3CFCE06B.9020209@itamarst.org>

Paul Boehm wrote:

>    File "/usr/lib/python2.2/site-packages/twisted/internet/app.py", line 430, in run
>      reactor.listenUDP(port, factory, interface, maxPacketSize)
>    File "/usr/lib/python2.2/site-packages/twisted/internet/default.py", line 120, in listenUDP
>      return udp.Port(self, port, factory, interface, maxPacketSize)
>  TypeError: __init__() takes at most 5 arguments (6 given)


OK, this bug is fixed in CVS. Thanks for the bug reports!




From abo at minkirri.apana.org.au  Tue Jun  4 11:43:00 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Wed, 5 Jun 2002 03:43:00 +1000
Subject: [Twisted-Python] FTPResource, again
In-Reply-To: <002b01c20bcd$beff5180$b52f76d9@delhi>
References: <002b01c20bcd$beff5180$b52f76d9@delhi>
Message-ID: <20020604174300.GA21671@minkirri.apana.org.au>

On Tue, Jun 04, 2002 at 03:43:01PM +0200, Benjamin Bruheim wrote:
> Hey,
> 
> Here are a draft for "Resources". This one follows Itamars suggestion (which I after some dispute with myself found necessary).
> The path-stuff is awful, so ignore it. A combination of the module posixpath (undocumented) and os.path is a good replacement. Otherwise, there's some random routines, and the Interfaces aren't specified. Any ideas what must in and what must go? Request.render is silly :)
> This is just a "proof of concept", but I fear I've done some fundemental errors. Especially the "resolving" of objects is idiotic and naive. Any suggestions for replacements?

Maybe not related, but maybe it has something useful for you.

My osVFS stuff is 95% complete. It's a drop in replacement for os that
allows you to virtualise the underlying filesystem. Two basic VFS's are
fakeroot_filesystem and mountable_filesystem, though I also have an ftp
backend working too. These let you do things like the following;

import osVFS

f1=osVFS.fakeroot_filesystem(os,'/var')
f2=osVFS.fakeroot_filesystem(os,'/tmp')
os=osVFS.mountable_filesystem() #sets os to virtual filesystem os
open=os.file                    #sets open to file method of os
os.mount(f1,'/')
os.mount(f2,'/local')
print os.listdir('/') # will print list of files in /var
os.chdir('/local')
print os.listdir('.') # will print list of files in /tmp
f=open('/local/temp.txt','w') # will return open file /tmp/temp.txt


The last 5% left is finalising a caching mixin that does agressive caching
with smart expiry based on squid-type expiry methods.

I realise that twisted serves up "resources", but if you have a
posix-to-resource implementation, this would allow you to sit that ontop of
other VFS backends... ie with the ftpVFS backend you would be able to do an
ftp proxy. 


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From twisted at itamarst.org  Wed Jun  5 04:43:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 05 Jun 2002 13:43:27 +0300
Subject: [Twisted-Python] APIs changes for TCP and UDP
Message-ID: <3CFDEB4F.4030306@itamarst.org>

1) Client TCP connects should be allowed to bind to a specific interface and 
port, e.g.:

   reactor.clientTCP('example.com', 80, p, bindAddress=('1.2.3.4', 999))

2) UDP Ports's API should be formalized. Basically, the way UDP works from 
what I can see is that you create a Port, and for client connections you 
call the Port's createConnection(addr) method. Currently this returns a 
transport which is hooked up to a protocol, which is silly, it should return 
the protocol instance it contructs:

   port = reactor.listenUDP(8080, dnsFactory)
   clientProtocol = port.createConnection(("example.com", 53))
   clientProtocol.query("....")




From jon at totient.demon.co.uk  Thu Jun  6 15:30:37 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 6 Jun 2002 22:30:37 +0100 (BST)
Subject: [Twisted-Python] latest release & solaris
Message-ID: <15615.54397.329663.784640@erdos.totient.com>

Hi

just a couple of notes of about the latest release

1) the tarball (gz) for unix seems to have some funny
permissions/symlinks/umask? in it. This barfed using solaris tar, with
an error about not being able to create the file, so
I downloaded the windows version and unzipped that instead, and chmod
-R to something sensible. 

2) the C extension module cBanana.c actually has some C++ style
comments in it. I think this is fine for gcc, but solaris' cc
compiler is less forgiving. I just edited the file. 

other than those two gotchas, it seems to work.

thanks

Jon



From glyph at twistedmatrix.com  Thu Jun  6 17:36:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 06 Jun 2002 18:36:30 -0500 (CDT)
Subject: [Twisted-Python] latest release & solaris
In-Reply-To: <15615.54397.329663.784640@erdos.totient.com>
References: <15615.54397.329663.784640@erdos.totient.com>
Message-ID: <20020606.183630.123977511.glyph@twistedmatrix.com>

From: Jon Dyte <jon at totient.demon.co.uk>
Subject: [Twisted-Python] latest release & solaris
Date: Thu, 6 Jun 2002 22:30:37 +0100 (BST)

> Hi
> 
> just a couple of notes of about the latest release
> 
> 1) the tarball (gz) for unix seems to have some funny
> permissions/symlinks/umask? in it. This barfed using solaris tar, with
> an error about not being able to create the file, so
> I downloaded the windows version and unzipped that instead, and chmod
> -R to something sensible. 

The only permissions I see that are "funny" are that the directories are sgid.
This is a common convention on our development server, so it snuck in
there... We'll try not to do that next release.

However, please use GNU tar to unpack this archive; as I understand it, solaris
tar is buggy and uses an antiquated fileformat that can't handle long names,
among other things.

> 2) the C extension module cBanana.c actually has some C++ style
> comments in it. I think this is fine for gcc, but solaris' cc
> compiler is less forgiving. I just edited the file. 

Thanks for the bug report.

> other than those two gotchas, it seems to work.

Good to know!

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020606/3a374581/attachment.sig>

From twisted at itamarst.org  Fri Jun  7 18:42:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 08 Jun 2002 02:42:38 +0200
Subject: [Twisted-Python] latest release & solaris
References: <15615.54397.329663.784640@erdos.totient.com>
Message-ID: <3D0152FE.8040700@itamarst.org>

Jon Dyte wrote:

> 2) the C extension module cBanana.c actually has some C++ style
> comments in it. I think this is fine for gcc, but solaris' cc
> compiler is less forgiving. I just edited the file. 

OK, this is fixed in CVS. Thanks for the bug report.

BTW, if you could run our test suite and see all tests pass that'd be 
cool - they should, but it can't hurt to get tested on more platforms:

Run in text mode:
$ admin/runtests -t

Run in text mode with poll() reactor:
$ admin/runtests -t poll




From z3p at twistedmatrix.com  Sun Jun  9 10:17:33 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 9 Jun 2002 12:17:33 -0400
Subject: [Twisted-Python] Arms Crisis
In-Reply-To: <20020507063118.GA10209@twistedmatrix.com>
Message-ID: <3D03475D.10361.753157@localhost>

On 7 May 2002 at 1:31, Glyph Lefkowitz wrote:
> I'd like some feedback on this, though.  Does anyone else think that
> callbacks sometimes happening and sometimes not when .addCallbacks() is
> called makes a difference?  Anyone feel strongly that .arm() is
> confusing and unnecessary?

I must have missed this message, or not cared before.  I think getting rid 
of .arm() is a great idea.  I've had a lot of problems where I forgot to arm 
a callback, which caused strange problems with my OSCAR code.
Is this still on the table (since it has been a month)?
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020609/07c6a938/attachment.html>

From twisted at itamarst.org  Sun Jun  9 16:29:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 10 Jun 2002 00:29:32 +0200
Subject: [Twisted-Python] Arms Crisis
References: <3D03475D.10361.753157@localhost>
Message-ID: <3D03D6CC.9050107@itamarst.org>

Paul Swartz wrote:
> On 7 May 2002 at 1:31, Glyph Lefkowitz wrote:
>>  I'd like some feedback on this, though.  Does anyone else think that
>>  callbacks sometimes happening and sometimes not when .addCallbacks() is
>>  called makes a difference?  Anyone feel strongly that .arm() is
>>  confusing and unnecessary?

MM, wouldn't it changes the way thing work?

  d = Deferred().callback(1)
  d.addCallback(f)
  d.addCallback(g)
  d.arm()

is not the same as what the new version would do:

  d = Deferred().callback(1)
  d.arm() # for emulating behaviour in current system
  d.addCallback(f)
  d.addCallback(g)

No? In new system, would g() get result of f()?





From andrew-twisted at puzzling.org  Mon Jun 10 01:06:08 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 10 Jun 2002 17:06:08 +1000
Subject: [Twisted-Python] Arms Crisis
In-Reply-To: <3D03D6CC.9050107@itamarst.org>
References: <3D03475D.10361.753157@localhost> <3D03D6CC.9050107@itamarst.org>
Message-ID: <20020610070608.GB29675@ritsuko.xware.cx>

On Mon, Jun 10, 2002 at 12:29:32AM +0200, Itamar Shtull-Trauring wrote:
> MM, wouldn't it changes the way thing work?
> 
>  d = Deferred().callback(1)
>  d.addCallback(f)
>  d.addCallback(g)
>  d.arm()
> 
> is not the same as what the new version would do:
> 
>  d = Deferred().callback(1)
>  d.arm() # for emulating behaviour in current system
>  d.addCallback(f)

This breaks currently.  You can't add a callback to an already armed
deferred.

>  d.addCallback(g)
> 
> No? In new system, would g() get result of f()?

Yes, assuming what Glyph told me on IRC is true :)

-Andrew.




From typo at soniq.net  Mon Jun 10 08:32:56 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 10 Jun 2002 16:32:56 +0200
Subject: [Twisted-Python] idea for file transfers over PB
Message-ID: <20020610143256.GA21060@soniq.net>

suggestion:

transfer metainformation about file objects over PB,
and create wrapper instances on the receiving end.

so remotefile.read() executes on the remote perspective.

any arguments for/against this? feasible?

i'll struggle with the source a little, but i doubt my current
python/twisted skills suffice to make this work.

  paul



From typo at soniq.net  Mon Jun 10 09:11:14 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 10 Jun 2002 17:11:14 +0200
Subject: [Twisted-Python] idea for file transfers over PB
In-Reply-To: <20020610143256.GA21060@soniq.net>
References: <20020610143256.GA21060@soniq.net>
Message-ID: <20020610151114.GA1191@soniq.net>

On Mon, Jun 10, 2002 at 04:32:56PM +0200, Paul Boehm wrote:
> any arguments for/against this? feasible?

not really, as read can block. 

what about this ?

class WrapFile(flavors.Referenceable):
    def __init__(self, file):
        self._file = file
    def remote_read(self, *args, **kw):
        return self._file.read(*args, **kw)
...

...
fd.callRemote('read', 512).addCallbacks(data_received, failure)
...



From rc at ghostbitch.org  Mon Jun 10 23:16:19 2002
From: rc at ghostbitch.org (R. Church)
Date: Mon, 10 Jun 2002 22:16:19 -0700
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020601.014232.294711839.radix@twistedmatrix.com>
References: <20020601.014232.294711839.radix@twistedmatrix.com>
Message-ID: <20020611051619.GA31180@ghostbitch.org>

For gnus/gpg integration, you want Mailcrypt, from
http://mailcrypt.sourceforge.net.

Also, gnus seems to have some kind of built-in gpg support (>5.9).

I'm stealing all this data from here:

http://www.emacswiki.org/cgi-bin/wiki.pl?MailCrypt

Let me know when you get your gpg set up so we can talk about "dirty
bombs" and other things related to the MJ-12 conspiracy.



From carmstro at twistedmatrix.com  Tue Jun 11 06:26:33 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Jun 2002 08:26:33 -0400
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020611051619.GA31180@ghostbitch.org>
References: <20020601.014232.294711839.radix@twistedmatrix.com>
	<20020611051619.GA31180@ghostbitch.org>
Message-ID: <87d6uyvw5i.fsf@twistedmatrix.com>

>>>>> "rc" == R Church <rc at ghostbitch.org> writes:

    rc> Let me know when you get your gpg set up so we can talk about "dirty
    rc> bombs" and other things related to the MJ-12 conspiracy.

Oh great. Just great. Now you've likely set off Carnivore, and Twisted Labs is 
going to be labelled a Terrorist Organization and we'll all be forced to flee
to [censored] in the Galactic [censored].

I have to go pack my bags.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From liiwi at iki.fi  Tue Jun 11 12:53:09 2002
From: liiwi at iki.fi (Jaakko Niemi)
Date: Tue, 11 Jun 2002 21:53:09 +0300
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <20020611051619.GA31180@ghostbitch.org> ("R. Church"'s message
 of "Mon, 10 Jun 2002 22:16:19 -0700")
References: <20020601.014232.294711839.radix@twistedmatrix.com>
	<20020611051619.GA31180@ghostbitch.org>
Message-ID: <87y9dl4pgq.fsf@jumper.lonesom.pp.fi>

"R. Church" <rc at ghostbitch.org> writes:

> Let me know when you get your gpg set up so we can talk about "dirty
> bombs" and other things related to the MJ-12 conspiracy.

 Blah, all serious gnus weenies use Oort, and gpg.el. Packages
can be found from http://people.debian.org/%7Esrivasta/packages/binary-all/.

                  --j



From j.her at t-online.de  Tue Jun 11 12:01:21 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 11 Jun 2002 20:01:21 +0200
Subject: [Twisted-Python] Twisted 0.18.0rc2
In-Reply-To: <87d6uyvw5i.fsf@twistedmatrix.com>
Message-ID: <17HpxI-2BAubAC@fwd10.sul.t-online.com>

On 11 Jun 2002 08:26:33 -0400, Christopher Armstrong wrote:

>Oh great. Just great. Now you've likely set off Carnivore, and Twisted Labs is 
>going to be labelled a Terrorist Organization and we'll all be forced to flee
>to [censored] in the Galactic [censored].
>
>I have to go pack my bags.

Bomb, Assassin (sp? ;), President.

Ciao, Jürgen





From jon at totient.demon.co.uk  Wed Jun 12 14:54:42 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Wed, 12 Jun 2002 21:54:42 +0100 (BST)
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
Message-ID: <15623.46354.482223.481792@erdos.totient.com>


with mozilla build
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.8) Gecko/20020206,build 2002020615

sending a request to a quixote/twisted server (actually a modified
Andrew Kuchling Example), I get the following error

Installing SelectReactor, since unspecified.
__main__.QuixoteFactory starting on 8098
Traceback (most recent call last):
  File "/sw/release/python/lib/python2.2/site-packages/twisted/internet/default.py", line 347, in doSelect
    why = getattr(selectable, method)()
  File "/sw/release/python/lib/python2.2/site-packages/twisted/internet/tcp.py", line 93, in doRead
    return self.protocol.dataReceived(data)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/basic.py", line 161, in dataReceived
    self.lineReceived(line)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 684, in lineReceived
    self.allHeadersReceived()
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 733, in allHeadersReceived
    self.persistent = self.checkPersistence(req, self.__version)
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 759, in checkPersistence
    request.setHeader('connection', 'close')
  File "/sw/release/python/lib/python2.2/site-packages/twisted/protocols/http.py", line 561, in setHeader
    self.headers[string.lower(k)] = v
exceptions.AttributeError: QuixoteTWRequest instance has no attribute
'headers'


The object QuixoteTWRequest is defined 

class QuixoteTWRequest (server.Request):
      ......

it looks to me like on some execution path thru http.py (dataReceived,
lineReceived) etc etc the headers slot of the server.Request object
doesnt get set. which would appear to mean requestReceived has not
been called as this sets self.headers to an empty dict at least.

The headers sent by the browser are :-
Host: localhost:9999

User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.8) Gecko/20020206

Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1

Accept-Language: en-us

Accept-Encoding: gzip, deflate, compress;q=0.9

Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66

Connection: close


localhost.localdomain - - [12/Jun/2002 21:40:50] "GET / HTTP/1.1" 200 -	       

I'm pretty new to Twisted, so I might be missing something here, but
the script works with lynx and netscape 4.76.


Jon

From uf069 at victoria.tc.ca  Wed Jun 12 15:27:08 2002
From: uf069 at victoria.tc.ca (Patrick B. Day)
Date: Wed, 12 Jun 2002 14:27:08 -0700 (PDT)
Subject: [Twisted-Python] Using Twisted for a clustering library.
Message-ID: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>

I've been working on a cluster library for MOSIX and I've noticed that
parts could possibly be replaced with some Twisted stuff. 

Briefly what I need to be able to do is the following:
o Have the server spawn off client processes and communicates with them
using IPC.
o The client process waits for a task to arrive from the server and
replies back to the server with the results of the complete task.
o The server sends tasks to available clients then waits for a client to
repond, sends the now idle client the next task and finally handles the
response.

After browsing through the Twisted source, I'm guessing that I'll need to
write my own Reactor, Protocol, Factory, Application classes and possibly
a new main module. Does this sound about right or am I over complicating
things?

Thanks for your help.

============================
 
Patrick Day
uf069 at freenet.victoria.bc.ca




From twisted at itamarst.org  Wed Jun 12 17:24:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:24:20 +0200
Subject: [Twisted-Python] Using Twisted for a clustering library.
References: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
Message-ID: <3D07D824.30400@itamarst.org>

Patrick B. Day wrote:

> After browsing through the Twisted source, I'm guessing that I'll need to
> write my own Reactor, Protocol, Factory, Application classes and possibly
> a new main module. Does this sound about right or am I over complicating
> things?

1) No need for new reactor class - let processes communicate via unix 
sockets (reactor.listenTCP).  Or TCP (reactor.listenTCP). Or use 
reactor.spawnProcess and communicate via stdin/stdout.

2) No need for new Application class - use the existing one. Or just use 
the reactor object directly.

3) You can write your own protocol, which means a new Protocol and 
Factory, yes. Or you can use twisted.spread.pb, a remote object 
protocol, which almost certainly has all functionality you need.

I recommend reading the writing servers tutorial:
http://twistedmatrix.com/documents/howto/servers

And look at simple example in tarball - doc/examples/simpleserv.py.

Then read the API docs for reactors in twisted.internet.interfaces.




From twisted at itamarst.org  Wed Jun 12 17:37:41 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:37:41 +0200
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
References: <15623.46354.482223.481792@erdos.totient.com>
Message-ID: <3D07DB45.2090200@itamarst.org>

This is a bug (due to that "Connection: close" header from Mozilla). I 
fixed it in CVS - 0.18.1 will include a fixed version. Until then you 
can get the updated version of twisted/protocols/http.py from CVS (see 
instructions on website.)

BTW - you don't need to use twisted.web.server.Request - since the 
refactor to HTTP you only need twisted.protocols.http.Request, no need 
to use twisted.web unless you are using it as a web framework.




From twisted at itamarst.org  Wed Jun 12 17:50:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 13 Jun 2002 01:50:15 +0200
Subject: [Twisted-Python] no 'headers' in server.Request instance problem
References: <15623.46354.482223.481792@erdos.totient.com> <3D07DB45.2090200@itamarst.org>
Message-ID: <3D07DE37.6090901@itamarst.org>

I also added a unit test. Let that be a lesson to you all - you need 
Real Users to find all those endcases you're certain you've written 
tests for - I'd written a test for the persistent connection algorithm 
but forgotten to simulate a real HTTP test request for that specific 
case. Bleh.

/me goes to sleep




From glyph at twistedmatrix.com  Wed Jun 12 16:52:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Jun 2002 17:52:30 -0500 (CDT)
Subject: [Twisted-Python] Using Twisted for a clustering library.
In-Reply-To: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
References: <Pine.GSO.3.95.iB1.0.1020612141245.16033A-100000@vtn1>
Message-ID: <20020612.175230.97549920.glyph@twistedmatrix.com>

From: "Patrick B. Day" <uf069 at victoria.tc.ca>
Subject: [Twisted-Python] Using Twisted for a clustering library.
Date: Wed, 12 Jun 2002 14:27:08 -0700 (PDT)

> I've been working on a cluster library for MOSIX and I've noticed that
> parts could possibly be replaced with some Twisted stuff. 

The twisted.sister package is the beginnings of a clustering library.  The
requirements being used to drive it are rather MMPORPG-specific at this point,
so the only code in it so far is a mechanism for "locking resources" so that a
game server can atomically determine who "owns" a particular game object.  The
requirements that you described sound like the as-yet-unwritten "spawn server"
component of twisted.sister.  So, if you'd like to contribute work in this
area, we'd love to have it!  Alternatively you can wait for months to see if
somebody will do it for you ;-)

Also, as Itamar said, depending on your requirements, you shouldn't have to
write anything aside from either a Protocol and Factory, or a PB client or
server object.

If you have a specific wire-protocol you need to speak, you'll need to write a
Protocol and probably a Factory.  Have you read Moshe Zadka's excellent HOWTO
on the subject?

If you just need to send some messages to a remote process, then Perspective
Broker is probably your best bet.  The documentation here is a little weaker
(since there is a lot more high-level functionality available), but it's
described at an overview level in the IPC10 paper, and there are several
examples in the doc/examples package, as well as twisted.web.distrib and the
"Reality" CVS module.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020612/c4c72a6b/attachment.sig>

From glyph at twistedmatrix.com  Thu Jun 13 05:00:15 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Jun 2002 06:00:15 -0500 (CDT)
Subject: [Twisted-Python] no 'headers' in server.Request instance
 problem
In-Reply-To: <3D07DB45.2090200@itamarst.org>
References: <15623.46354.482223.481792@erdos.totient.com>
	<3D07DB45.2090200@itamarst.org>
Message-ID: <20020613.060015.77059905.glyph@twistedmatrix.com>

From: Itamar Shtull-Trauring <twisted at itamarst.org>
Subject: Re: [Twisted-Python] no 'headers' in server.Request instance problem
Date: Thu, 13 Jun 2002 01:37:41 +0200

> BTW - you don't need to use twisted.web.server.Request - since the 
> refactor to HTTP you only need twisted.protocols.http.Request, no need 
> to use twisted.web unless you are using it as a web framework.

Actually you don't need to use Request at all.  If you want this to work with
other twisted.web servers, it would be best to structure your work as additions
to Resource, not Request.

What functionality are you adding at the Request level?


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020613/78d931cf/attachment.sig>

From jon at totient.demon.co.uk  Thu Jun 13 11:51:17 2002
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 13 Jun 2002 18:51:17 +0100 (BST)
Subject: [Twisted-Python] no 'headers' in server.Request instance
 problem
In-Reply-To: glyph@twistedmatrix.com
References: <15623.46354.482223.481792@erdos.totient.com>
	<3D07DB45.2090200@itamarst.org>
	<20020613.060015.77059905.glyph@twistedmatrix.com>
Message-ID: <15624.56213.487457.472154@erdos.totient.com>

glyph at twistedmatrix.com wrote :-> From: Itamar Shtull-Trauring <twisted at itamarst.org>
> Subject: Re: [Twisted-Python] no 'headers' in server.Request instance problem
> Date: Thu, 13 Jun 2002 01:37:41 +0200
> 
> > BTW - you don't need to use twisted.web.server.Request - since the 
> > refactor to HTTP you only need twisted.protocols.http.Request, no need 
> > to use twisted.web unless you are using it as a web framework.
> 
> Actually you don't need to use Request at all.  If you want this to work with
> other twisted.web servers, it would be best to structure your work as additions
> to Resource, not Request.
> 
> What functionality are you adding at the Request level?
> 
> 
> -- 
>  |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
>  |   < _/ >   |  Lead Developer,  the Twisted project  |
>  |  < ___/ >  |      http://www.twistedmatrix.com      |


I'm not really adding any functionality. I was merely making a
previous Twisted/Quixote script work with Twisted-0.18.0, which is how
I found the reported problem. This script is so short I include it
here.

Jon


"""qserv

Demo of an HTTP server built on top of Twisted Python that serves a
Quixote application, and also supports an SMTP interface.

"""

# created 2002/03/19, AMK

__revision__ = "$Id$"

import string, cStringIO

from quixote.http_request import HTTPRequest
from quixote.publish import Publisher

from twisted.cred.service import Service
from twisted.internet.app import Application
from twisted.mail import mail
from twisted.protocols import protocol, http
from twisted.web import server

# Ports this server will listen on
HTTP_PORT = 8098
SMTP_PORT = 8099

import quixote
quixote.enable_ptl()

publisher = Publisher('quixote.demo')
publisher.read_config('quixote.conf')
publisher.setup_logs()

class QuixoteTWRequest (http.Request):
    def process(self):
        environ = self.create_environment()
        ## this seek is important
        self.content.seek(0,0)
        stdin = self.content
        request = HTTPRequest(stdin, environ)
        stdout = cStringIO.StringIO()
        stderr = cStringIO.StringIO()

        publisher.publish(stdin, stdout, stderr, environ)
        output = stdout.getvalue()
        #self.write(output)
        #self.setResponseCode(request.response.status_code)
        #for hdr, value in request.response.headers.items():
        #    self.setHeader(hdr, value)
        #self.finish()
	## as per message on quixote list
        self.startedWriting = 1
        self.write(output.replace("Status:", "HTTP/1.1"))
        self.finish()

    def create_environment (self):
        host = self.getHeader('host') or self.getHost()
        if ':' in host:
            serverName = string.split(host, ':')[0]
        else:
            serverName = host
        content_type = self.getHeader('content-type')
        typ, remote_addr, remote_port = self.transport.getPeer()

        env = {
               "PATH_INFO":         self.path,
               "SERVER_SOFTWARE":   server.version,
               "SERVER_NAME":       serverName,
               "GATEWAY_INTERFACE": "CGI/1.1",
               "REMOTE_ADDR":       remote_addr,
               "REMOTE_PORT":       str(remote_port),
               "SERVER_PROTOCOL":   self.clientproto,
               "SERVER_PORT":       str(HTTP_PORT),
               "REQUEST_METHOD":    self.method,
               "SCRIPT_NAME":       "",
               "SCRIPT_FILENAME":   "",
               "REQUEST_URI":       self.uri,
               "CONTENT_TYPE":      content_type,
               }
        return env


class QuixoteFactory (http.HTTPFactory):
    def buildProtocol (self, addr):
        h = http.HTTPChannel()
        h.requestFactory = QuixoteTWRequest
        h.factory = self
        return h


def run ():
    app = Application('Quixote')
    app.listenTCP(HTTP_PORT, QuixoteFactory())
    app.run(save=0)


if __name__ == '__main__':
    run()



From bruce at cubik.org  Sat Jun 15 00:26:35 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Sat, 15 Jun 2002 00:26:35 -0600
Subject: [Twisted-Python] small README changes
Message-ID: <3D0ADE1B.6040603@cubik.org>

Hey all,

I started to check out Twisted today by running some of the stuff out of 
the distribution rather than only reading docs.  I'd noted a few 
problems or unclear points in that process.  The attached patch 
addresses most of them.

Is the setup.py needed for anything if you aren't going to install 
Twisted into site-libs?

Also, does one of the FTP tests fail for everyone?  One of the marmalade 
tests failed on Python 2.2 (error about the NodeList type).

Cheers,

  - Bruce
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: README.diff
URL: </pipermail/twisted-python/attachments/20020615/fa2506fc/attachment.ksh>

From ivo at amaze.nl  Sat Jun 15 07:50:55 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 15 Jun 2002 15:50:55 +0200
Subject: [Twisted-Python] BUG: setting timeout on clientTCP() will invoke connectionFailed twice
Message-ID: <20020615155055.C8779@amaze.nl>

Hi,

The following code:

--

from twisted.protocols.http import HTTPClient
from twisted.internet import reactor

class foo(HTTPClient):
    def connectionFailed(self):
        print "Failed"

reactor.clientTCP("localhost", 8888, foo(), 2)
reactor.run()

--

Will print "Failed" twice. Without the timeout, only one "Failed" will be
printed (of course make sure you connect to something that fails immediately
when testing this :)

It's kind of silly to keep te timeout after the connection has already
failed - it should be cancelled, right?

Cheers

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Brouwersgracht 132                             Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From twisted at itamarst.org  Sat Jun 15 10:04:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 15 Jun 2002 18:04:29 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
Message-ID: <3D0B658D.5080404@itamarst.org>

Background:
Ivo pointed out there's no way to differentiate between "no such 
hostname" and "connection refused". For that matter, connectionFailed 
has nothing to do with the protocol - why are we doing a callback on the 
protocol at all? It shouldn't be created if no connection was made.

Proposal:
reactor.clientTCP accepts a protocol factory instead of a protocol, and 
only makes a protocol instance if connection was made. Additionally, it 
accepts an additional argument, failureCallback, which will get called 
with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
when the connection fails. Protocol.connectionFailed goes bye-bye.

Comments?




From sean at twistedmatrix.com  Sat Jun 15 12:24:59 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 15 Jun 2002 13:24:59 -0500
Subject: [Twisted-Python] pb.setFactoryForClass()
Message-ID: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>

proposal for new functionality in pb:

In addition to the existing pb.setCopierForClass() I'd like a
pb.setFactoryForClass() which would take a factory method instead of a class
as its argument.

This would allow serialized objects to be re-constructed on the other end of
network connections by a factory instead of just be creating a new class.

I have a use case where objects are created locally on both the client and
server and these objects need to be passed as arguments to remote method
calls. The best way to do it seems to be to send a unique ID over the wire
and have a factory method transform the ID into the correct object on the
other side.

A trivial example:

class Thing(pb.Copyable)
  allIDs = {}

  def __init__(self, id):
    self.id = id
    Thing.allIDs[id] = self

  def getStateToJellyFor(self, perspective):
    return {"id":self.id}

def thingFactory(state):
  return Thing.allIDs.get(state["id"],None)

pb.setFactoryToCopyFor("Thing", thingFactory)


Things could then be send over the network as very small objects (just IDs)
as long as both side have already loaded all the "Things" from local
storage.

----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From ivo at amaze.nl  Sat Jun 15 17:06:51 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sun, 16 Jun 2002 01:06:51 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <3D0B658D.5080404@itamarst.org>; from twisted@itamarst.org on Sat, Jun 15, 2002 at 06:04:29PM +0200
References: <3D0B658D.5080404@itamarst.org>
Message-ID: <20020616010651.D8779@amaze.nl>

On Sat, Jun 15, 2002 at 06:04:29PM +0200, Itamar Shtull-Trauring wrote:
> Background:
> Ivo pointed out there's no way to differentiate between "no such 
> hostname" and "connection refused". For that matter, connectionFailed 
> has nothing to do with the protocol - why are we doing a callback on the 
> protocol at all? It shouldn't be created if no connection was made.
> 
> Proposal:
> reactor.clientTCP accepts a protocol factory instead of a protocol, and 
> only makes a protocol instance if connection was made. Additionally, it 
> accepts an additional argument, failureCallback, which will get called 
> with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
> when the connection fails. Protocol.connectionFailed goes bye-bye.
> 
> Comments?

Some people don't see a point in providing these errors, so I'll illustrate
the issue with some more examples:

when binding to a local port, I'd like to know if it fails due to 
the port already being in use (EBUSY), permission denied (i.e. a port
< 1024 when not being root), or some system failure that may be 
difficult to track down without an appropriate error (i.e. running out
of fd's)

I agree with itamar that if these errors aren't handled in the protocol
implementation, failure to connect shouldn't be there either.

	Ivo

-- 
Drs. I.R. van der Wijk                                      -=-              
Brouwersgracht 132                             Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                                       -=-              
T +31-20-4688336         F +31-20-4688337        Linux/Web/Zope/SQL/MMBase   
W http://www.amaze.nl    E info at amaze.nl             Network Solutions        
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy          
PGP http://vanderwijk.info/pgp                              -=-              



From glyph at twistedmatrix.com  Sat Jun 15 18:10:42 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 15 Jun 2002 19:10:42 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020616010651.D8779@amaze.nl>
References: <3D0B658D.5080404@itamarst.org>
	<20020616010651.D8779@amaze.nl>
Message-ID: <20020615.191042.21918778.glyph@twistedmatrix.com>

From: Ivo van der Wijk <ivo at amaze.nl>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: Sun, 16 Jun 2002 01:06:51 +0200

> On Sat, Jun 15, 2002 at 06:04:29PM +0200, Itamar Shtull-Trauring wrote:
> > Background:
> > Ivo pointed out there's no way to differentiate between "no such 
> > hostname" and "connection refused". For that matter, connectionFailed 
> > has nothing to do with the protocol - why are we doing a callback on the 
> > protocol at all? It shouldn't be created if no connection was made.
> > 
> > Proposal:
> > reactor.clientTCP accepts a protocol factory instead of a protocol, and 
> > only makes a protocol instance if connection was made. Additionally, it 
> > accepts an additional argument, failureCallback, which will get called 
> > with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
> > when the connection fails. Protocol.connectionFailed goes bye-bye.

You know, I'm tempted to disagree with this because backwards-compatibility at
this point is a really major argument to me at this point ... however, you guys
make some really good arguments.  It may even be possible, given this
description, to make __init__, and not makeConnection, be the real
"initializer" of a Protocol at this point.

The inability to report these errors has also been an annoyance on the
client-interface end of things for some time.  There is an asymmetry between
client and server-side connecting in IReactorTCP.

In addition, Itamar's proposal would simultaneously eliminate the confusion
currently surrounding Connectors, too; having a wrapper protocol *factory*
would not pose the same efficiency concerns as a wrapper Protocol instance,
since indirection would only happen when opening and closing the connection.  

> > Comments?
> 
> Some people don't see a point in providing these errors, so I'll illustrate
> the issue with some more examples:

Also, being able to report these errors is important to judge at what level
networking is misconfigured for the end-user, when they can't connect.

> I agree with itamar that if these errors aren't handled in the protocol
> implementation, failure to connect shouldn't be there either.

After hearing this, so do I.  Thank you for the bug report.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020615/96515692/attachment.sig>

From glyph at twistedmatrix.com  Sat Jun 15 21:30:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 15 Jun 2002 22:30:06 -0500 (CDT)
Subject: [Twisted-Python] pb.setFactoryForClass()
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGIENOCFAA.sean@twistedmatrix.com>
Message-ID: <20020615.223006.32611862.glyph@twistedmatrix.com>


From: "Sean Riley" <sean at twistedmatrix.com>
Subject: [Twisted-Python] pb.setFactoryForClass()
Date: Sat, 15 Jun 2002 13:24:59 -0500

> proposal for new functionality in pb:
> 
> In addition to the existing pb.setCopierForClass() I'd like a
> pb.setFactoryForClass() which would take a factory method instead of a class
> as its argument.

Though this is its first mention on the mailing list, I've already accepted
this proposal and put it on my task list -- I just added it to CVS (it had been
sitting on my local drive for a little while).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020615/cee224a4/attachment.sig>

From twisted at itamarst.org  Sun Jun 16 03:34:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 16 Jun 2002 11:34:33 +0200
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
References: <3D0B658D.5080404@itamarst.org>	<20020616010651.D8779@amaze.nl> <20020615.191042.21918778.glyph@twistedmatrix.com>
Message-ID: <3D0C5BA9.1030208@itamarst.org>

Glyph Lefkowitz wrote:

>>>with a status code (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something 
>>>when the connection fails. Protocol.connectionFailed goes bye-bye.

The error may be fine as a string instead of a status code - depends on 
the requirements.

> In addition, Itamar's proposal would simultaneously eliminate the confusion
> currently surrounding Connectors, too; having a wrapper protocol *factory*
> would not pose the same efficiency concerns as a wrapper Protocol instance,
> since indirection would only happen when opening and closing the connection.  

You still need to deal with connectionLost, which is in the Protocol 
still. But, if all Protocols have a factory, we could have them report 
to their factory that they are closed as part of their interface 
definition. But note that currently we do *not* require that protocols 
refer to a factory - it's merely a common implementation. Some protocols 
only refer to their service (e.g. in words, IIRC).

> Also, being able to report these errors is important to judge at what level
> networking is misconfigured for the end-user, when they can't connect.

Well, for servers, just logging errors when attempting to listen on a 
port it, as we do now is acceptable - most servers work this way, where 
errors are logged. It's connections that really need error reporting, 
for clients. Of course, some client applications (p2p, FTP) listen on 
ports as well...




From andrew-twisted at puzzling.org  Sun Jun 16 06:42:17 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 16 Jun 2002 22:42:17 +1000
Subject: [Twisted-Python] twisted.enterprise.row
Message-ID: <20020616124216.GA4921@frobozz.local>

Quick question:

Why doesn't twisted.enterprise.row use DB-API's Cursor.description feature,
instead of PostgreSQL specific gunk?

A cursory glance at what row needs and what Cursor.description provides
suggests that you could and should use that.

-Andrew.




From twisted at itamarst.org  Mon Jun 17 11:09:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Jun 2002 19:09:07 +0200
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
Message-ID: <3D0E17B3.5090301@itamarst.org>

<http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>




From twisted at itamarst.org  Mon Jun 17 11:28:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Jun 2002 19:28:52 +0200
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
References: <3D0E17B3.5090301@itamarst.org>
Message-ID: <3D0E1C54.8090001@itamarst.org>

Itamar Shtull-Trauring wrote:

> <http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>

They're also looking for software engineers.




From exarkun at meson.dyndns.org  Mon Jun 17 15:04:32 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Mon, 17 Jun 2002 17:04:32 -0400 (EDT)
Subject: [Twisted-Python] Generic hierarchy interface
Message-ID: <Pine.LNX.4.44.0206171620120.11460-100000@meson>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


  Its time has come.  The need is pretty clear, partially for
blog/news and a lot for Reality, and I'm sure for a lot of other
things I'm not aware of.  Basically, what seems to be needed is an
interface that allows for a protocol-defined hierarchy to
protocol-specific data, organised based on protocol-specific meta-data.

  For example, consider email.  The protocol-specific hierarchy describes
message threads (which you are all hopefully familiar with).  The
meta-data is a portion of the xheaders ("References" and "In-Reply-To" in
particular), and the data is the message body.

  The email implementation for this hierarchy interface would then need to
parse headers and xheaders to determine the relationship, and make the
appropriate messages available this available at the appropriate places.

  The appropriate places.  There seem to be three basic relationships that
are of interest: parent, child, and sibling.  Accessor methods for these
should be straightforward enough, and implementions would need to provide
the details for each protocol of extracting them from the meta-data
available.  The other type of access would be absolute and relative "path"
access.  For example, "news://a.server.name/a.group.name/a.message.id".
A Reality example: "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"
In this case, each level of depth would only need to implement a standard
accessor interface to allow whatever it may contain to be accessable.

I'm a little out of my element, so I hope this has been at least
somewhat coherent ;)   Anyone have comments, or notice and horrible flaws,
or just see a plain better way to go about it?

  Jp

- --
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
- --
 4:20pm up 27 days, 17:02, 5 users, load average: 0.00, 0.00, 0.00
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9Dk7kedcO2BJA+4YRAnL/AJ45iIwfmCQSU4DXCPXtXbRhBLFTfACfYLO6
9fhOCu7iEG8mbOeTrsOdJr4=
=zSD+
-----END PGP SIGNATURE-----




From liiwi at lonesom.pp.fi  Mon Jun 17 14:24:14 2002
From: liiwi at lonesom.pp.fi (Jaakko Niemi)
Date: Mon, 17 Jun 2002 23:24:14 +0300
Subject: [Twisted-Python] DICE Job - SENIOR GAME SYSTEMS DESIGNER
In-Reply-To: <3D0E1C54.8090001@itamarst.org> (Itamar Shtull-Trauring's
 message of "Mon, 17 Jun 2002 19:28:52 +0200")
References: <3D0E17B3.5090301@itamarst.org> <3D0E1C54.8090001@itamarst.org>
Message-ID: <87ptypvekx.fsf@jumper.lonesom.pp.fi>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> Itamar Shtull-Trauring wrote:
>
>> <http://www.dice.com/DandL/s/stuart.01T0SR_DEs.html>
>
> They're also looking for software engineers.

 Uh, somehow I'm reminded of the book "Dice Man". Read it,
if you haven't already.

                --j



From glyph at twistedmatrix.com  Tue Jun 18 01:16:45 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 02:16:45 -0500 (CDT)
Subject: [Twisted-Python] Generic hierarchy interface
In-Reply-To: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
References: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
Message-ID: <20020618.021645.68134745.glyph@twistedmatrix.com>

From: Jp Calderone <exarkun at meson.dyndns.org>
Subject: [Twisted-Python] Generic hierarchy interface
Date: Mon, 17 Jun 2002 17:04:32 -0400 (EDT)

> Its time has come.

I have to agree, given that I recently deduced the need for, then spent some
time working on a similar concept.  It's also extremely hard to work on.

> The need is pretty clear, partially for blog/news and a lot for Reality, and
> I'm sure for a lot of other things I'm not aware of.  Basically, what seems
> to be needed is an interface that allows for a protocol-defined hierarchy to
> protocol-specific data, organised based on protocol-specific meta-data.

... and aggregation within a protocol-independent hierarchy too, I would say.

> For example, consider email.  The protocol-specific hierarchy describes
> message threads (which you are all hopefully familiar with).  The
> meta-data is a portion of the xheaders ("References" and "In-Reply-To" in
> particular), and the data is the message body.

Interesting example.  I always felt the obvious collection interface to e-mail
would be the server/domain/user/mailbox hierarchy; groups are organized
differently (and there would probably be different interfaces for organization
by thread and organization by sender, let's say)

> A Reality example: "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"

*snrk*

> I'm a little out of my element, so I hope this has been at least
> somewhat coherent ;)   Anyone have comments, or notice and horrible flaws,
> or just see a plain better way to go about it?

Well, this sort of design is right up my alley.  I've implemented similar
(though less general) systems on many occasions.  One might even say that the
essence of Twisted itself is to be an informal system of this type.  For that
reason, I'd really like to see a formal interface of what a "TwistedObject"
would be.

The problem with this particular, extremely general, application of an
"abstract hierarchy interface" is that it's not quite as abstract as we'd like
to think.  There are many problems that arise -- for example, you list the
relationship of "sibling", which most hierarchy interfaces do not support.
Python itself is a hierarchy interface, after all.  The __getitem__ and
__getattr__ interfaces implement identical hierarchies.

The key problems at this point, I think, are the notion of asynchronous access,
and ensuring homogeneity.  twisted.python.roots technically addresses one of
those problems, and could easily be modified to support the other, but it seems
horribly ugly to me for some reason that I don't quite understand.

Do you have any other ideas regarding a generic hierarchy interface?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020618/52056371/attachment.sig>

From tv at twistedmatrix.com  Tue Jun 18 12:12:52 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 18 Jun 2002 21:12:52 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <3D0B658D.5080404@itamarst.org>
References: <3D0B658D.5080404@itamarst.org>
Message-ID: <87wuswv4kb.fsf@ki.yok.utu.fi>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> Proposal:
> reactor.clientTCP accepts a protocol factory instead of a protocol,
> and only makes a protocol instance if connection was
> made. Additionally, it accepts an additional argument,
> failureCallback, which will get called with a status code
> (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something when the
> connection fails. Protocol.connectionFailed goes bye-bye.

	Please do not clobber the information given by the
        kernel in errno. Translating errno to 2 different failures
        is not nice.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From glyph at twistedmatrix.com  Tue Jun 18 18:38:46 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 19:38:46 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <87wuswv4kb.fsf@ki.yok.utu.fi>
References: <3D0B658D.5080404@itamarst.org>
	<87wuswv4kb.fsf@ki.yok.utu.fi>
Message-ID: <20020618.193846.127653974.glyph@twistedmatrix.com>

From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 18 Jun 2002 21:12:52 +0300

> Itamar Shtull-Trauring <twisted at itamarst.org> writes:
> 
> > Proposal:
> > reactor.clientTCP accepts a protocol factory instead of a protocol,
> > and only makes a protocol instance if connection was
> > made. Additionally, it accepts an additional argument,
> > failureCallback, which will get called with a status code
> > (CONNECTION_REFUSED, NO_SUCH_HOSTNAME) or something when the
> > connection fails. Protocol.connectionFailed goes bye-bye.
> 
> 	Please do not clobber the information given by the
>         kernel in errno. Translating errno to 2 different failures
>         is not nice.

It needs to be clobbered, at least in some sense, for portability.

Jython does not have errno and win32's support for it is very weak.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020618/beb4c756/attachment.sig>

From glyph at twistedmatrix.com  Tue Jun 18 22:48:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Jun 2002 23:48:47 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020618.193846.127653974.glyph@twistedmatrix.com>
References: <3D0B658D.5080404@itamarst.org>
	<87wuswv4kb.fsf@ki.yok.utu.fi>
	<20020618.193846.127653974.glyph@twistedmatrix.com>
Message-ID: <20020618.234847.123286215.glyph@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: Tue, 18 Jun 2002 19:38:46 -0500 (CDT)

> From: Tommi Virtanen <tv at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
> Date: 18 Jun 2002 21:12:52 +0300

> > 	Please do not clobber the information given by the
> >         kernel in errno. Translating errno to 2 different failures
> >         is not nice.

> It needs to be clobbered, at least in some sense, for portability.
> 
> Jython does not have errno and win32's support for it is very weak.

Reading this a few hours later, I think my tone was wrong and I was altogether
too brief here. :-).  To rephrase in a more constructive manner:

I believe that it needs to be clobbered, and some information lost, because I
don't see any other way to retain portability.  Also, we're losing information
already, since errno is used to report things that aren't "errors" in the
Twisted worldview (or at least, not errors that the user can deal with
directly).  Jython and win32 both have error-reporting mechanisms; Jython's is
exceptions, win32 is a sort of wacked-out informal errno.  Can you think of a
few primitive errors that we should support, rather than just the 2 types?
(I'd rather use Failure than just integer error codes, personally.)

I think that if we're going to add a new error reporting mechanism we need to
do it carefully so that we don't miss the same kind of information that we did
the last time we architected this API.  (Protocol.connectionLost used to take
an integer error code which was one of these two errors; that was a bad idea,
too).

Thanks for your feedback.  Does anybody have a solution?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020618/12fe95f8/attachment.sig>

From glyph at twistedmatrix.com  Wed Jun 19 02:34:57 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 19 Jun 2002 03:34:57 -0500 (CDT)
Subject: [Twisted-Python] A Farewell to Arms
Message-ID: <20020619.033457.41634720.glyph@twistedmatrix.com>


As detailed in my previous message, the .arm() method and patterns which
required its use with respect to Deferreds were problematic:

   http://twistedmatrix.com/pipermail/twisted-python/2002-May/001117.html

This is no longer the case.  Rejoice!  For the average application author, this
means that a confusing and obscure corner of the API has been swept out of
their view, where it never should have been in the first place.  For the
Twisted systems programmer, this means that you have more predictable and
consistent control over execution of a Deferred's processing chain regardless
of whether you "own" it or not.  It is all around a good thing.

As most good changes do, this resulted in a reduction of the total amount of
code in Twisted by a nontrivial number of lines.  It also fixed some previously
intractible bugs relating to AOT and Marmalade being unable to deal with
copy_reg registered types correctly.

Even better, the document in CVS (doc/howto/defer.html) has been updated to
describe this behavior, down to the subtle details of implementation.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020619/38e953f8/attachment.sig>

From bruce at cubik.org  Wed Jun 19 08:24:06 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 19 Jun 2002 08:24:06 -0600
Subject: [Twisted-Python] Generic hierarchy interface
References: <Pine.LNX.4.44.0206171620120.11460-100000@meson>
Message-ID: <3D109406.4070407@cubik.org>

Jp Calderone wrote:
 >   Its time has come.  The need is pretty clear, partially for
 > blog/news and a lot for Reality, and I'm sure for a lot of other
 > things I'm not aware of.  Basically, what seems to be needed is an
 > interface that allows for a protocol-defined hierarchy to
 > protocol-specific data, organised based on protocol-specific
 > meta-data.

Have you looked at the work done on URNs?

While this page is old, it contains some good pointers to work that had 
been done in that area:

   http://ana-annex.lcs.mit.edu/~edward/urn/single.html

 >   The appropriate places.  There seem to be three basic
 > relationships that are of interest: parent, child, and
 > sibling.  Accessor methods for these should be straightforward
 > enough, and implementions would need to provide the details
 > for each protocol of extracting them from the meta-data
 > available.  The other type of access would be absolute
 > and relative "path" access.  For example,
 > "news://a.server.name/a.group.name/a.message.id".
 > A Reality example:
 > "reality://server/Sol/Earth/Kansas/Smallville/Clark_Kent"
 > In this case, each level of depth would only need to
 > implement a standard accessor interface to allow whatever
 > it may contain to be accessable.

One thing to think about there is the lifetime of a hierarchical 
identifier and the transient nature of some data (like spatial indexing).

  - Bruce




From dp at twistedmatrix.com  Wed Jun 19 21:02:33 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 19 Jun 2002 20:02:33 -0700
Subject: [Twisted-Python] DOMWidgets
In-Reply-To: <3D109406.4070407@cubik.org>
Message-ID: <2AE9F9C7-83FA-11D6-9367-003065B25CAA@twistedmatrix.com>

I just checked in DOMWidgets, a major part of my life for the last few 
weeks. (That and Twisted-Zope integration)

It's very late and I need to go home, but for the terminally curious, 
here's an example.

Put this rpy in a static web directory and for god's sake, use the 
latest CVS.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: new.rpy
Type: application/applefile
Size: 461 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020619/1b18f73f/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: new.rpy
Type: application/text
Size: 1657 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020619/1b18f73f/attachment-0005.bin>

From glyph at twistedmatrix.com  Thu Jun 20 18:20:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Jun 2002 19:20:10 -0500 (CDT)
Subject: [Twisted-Python] new doc generator, new doc
Message-ID: <20020620.192010.85698049.glyph@twistedmatrix.com>


I have just spent some time improving our documentation preprocessor as well as
writing a new document and fixing some old ones.  Everything's in CVS, though
using generate-domdocs may be a little bit confusing, so I've put the relevant
documents up on the web, too.

    http://zelda.twistedmatrix.com/doc/howto/plugin
    http://zelda.twistedmatrix.com/doc/howto/defer
    http://zelda.twistedmatrix.com/doc/howto/servers

Of course, if you're bitten by the documentation bug too, examples for the
source to all of these documents is in CVS in doc/howto/.  Feel free to
contribute one of your own.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020620/970c638f/attachment.sig>

From steve.waterbury at gsfc.nasa.gov  Thu Jun 20 21:45:34 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 20 Jun 2002 23:45:34 -0400
Subject: [Twisted-Python] new doc generator, new doc
References: <20020620.192010.85698049.glyph@twistedmatrix.com>
Message-ID: <3D12A15E.DD1D5094@gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> I have just spent some time improving our documentation preprocessor as well as
> writing a new document and fixing some old ones.  Everything's in CVS, though
> using generate-domdocs may be a little bit confusing, so I've put the relevant
> documents up on the web, too.
> 
>     http://zelda.twistedmatrix.com/doc/howto/plugin
>     http://zelda.twistedmatrix.com/doc/howto/defer
>     http://zelda.twistedmatrix.com/doc/howto/servers

Thanks for the nice docs, Glyph!  I think there may be 
a typo in the doc on Deferreds:

-----------------------------------------------------
# Case 1
d = getDeferredFromSomewhere()
d.addCallback(callback1)
d.addErrback(errback1)
d.addCallback(callback2)
d.addErrback(errback1)
             ^^^^^^^^--> shouldn't this be errback2? 
 # Case 2
d = getDeferredFromSomewhere()
d.addCallbacks(callback1, errback1)
d.addCallbacks(callback2, errback2)

If an error occurs in callback1, then for Case 1 errback1 will be called with the 
failure. For Case 2, errback2 will be called. Be careful with your callbacks and 
errbacks.
-----------------------------------------------------

For Case 1, the only errback that *can* be called, as it's written, is 
errback1 ... but I think even if the second errback in Case 1 is 
errback2, errback1 is still called, right?

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
    "An idiot with a computer is a faster, better idiot." - Rick Julius



From ranty-bulk at ranty.ddts.net  Fri Jun 21 08:18:35 2002
From: ranty-bulk at ranty.ddts.net (Manuel Estrada Sainz)
Date: Fri, 21 Jun 2002 16:18:35 +0200
Subject: [Twisted-Python] [PATCH] to make twisted more "child process friendly"
Message-ID: <20020621141835.GA23753@ranty.ddts.net>

 Hello,

 Working on apt-proxy v2 I got stuck trying to get the status of a
 subprocess:

 internet/default.py:76
	signal.signal(signal.SIGCHLD, process.reapProcess)
	
	process.reapProcess will be called for every child that exists,
	which makes imposible to anyone to get the status. And actually
	makes useless calling 'reapProcess' from
	Process.maybeCallProcessEnded

 The patch allows objects to be registered to get the termination status
 of certain processes and changes process.Process to use it.

 I know that now the inline documentation gets outdated, I am willing to
 update it if you guys like the patch.
	
 
 Take care
 
 	ranty

-- 
--- Manuel Estrada Sainz <ranty at debian.org>
                         <ranty at bigfoot.com>
			 <ranty at users.sourceforge.net>
------------------------ <manuel.estrada at hispalinux.es> -------------------
God grant us the serenity to accept the things we cannot change, courage to
change the things we can, and wisdom to know the difference.
-------------- next part --------------
Index: process.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/process.py,v
retrieving revision 1.15
diff -u -r1.15 process.py
--- process.py	20 May 2002 21:09:35 -0000	1.15
+++ process.py	21 Jun 2002 13:58:23 -0000
@@ -39,6 +39,7 @@
 import abstract, main
 from main import CONNECTION_LOST, CONNECTION_DONE
 
+reapProcessHandlers = {}
 def reapProcess(*args):
     """Reap as many processes as possible (without blocking) via waitpid.
 
@@ -52,10 +53,24 @@
     go away w/o blocking.  I don't want to block.)
     """
     try:
-        os.waitpid(0,os.WNOHANG)
+        pid, status = os.waitpid(0,os.WNOHANG)
+        if reapProcessHandlers.has_key(pid):
+            reapProcessHandlers[pid].processEnded(status)
+            del reapProcessHandlers[pid]
     except:
         pass
 
+def registerReapProccessHandler(pid, process):
+    if reapProcessHandlers.has_key(pid):
+	raise RuntimeError
+    reapProcessHandlers[process.pid] = process
+
+def unregisterReapProccessHandler(pid, process):
+    if not (reapProcessHandlers.has_key(pid)
+            and reapProcessHandlers[pid] == process):
+	raise RuntimeError
+    del reapProcessHandlers[pid]
+
 class ProcessWriter(abstract.FileDescriptor, styles.Ephemeral):
     """(Internal) Helper class to write to Process's stdin.
 
@@ -165,8 +180,8 @@
         stdout_read, stdout_write = os.pipe()
         stderr_read, stderr_write = os.pipe()
         stdin_read,  stdin_write  = os.pipe()
-        pid = os.fork()
-        if pid == 0: # pid is 0 in the child process
+        self.pid = os.fork()
+        if self.pid == 0: # pid is 0 in the child process
             # stop debugging, if I am!  I don't care anymore!
             sys.settrace(None)
             # Destroy my stdin / stdout / stderr (in that order)
@@ -201,6 +216,7 @@
                     os.close(fd)
             os._exit(1)
         self.status = -1
+	registerReapProccessHandler(self.pid, self)
         for fd in stdout_write, stderr_write, stdin_read:
             os.close(fd)
         for fd in (stdout_read, stderr_read, stdin_write):
@@ -275,17 +291,23 @@
     lostErrorConnection = 0
     lostOutConnection = 0
     lostInConnection = 0
+    lostProcess = 0
 
     def maybeCallProcessEnded(self):
         if (self.lostErrorConnection and
             self.lostOutConnection and
-            self.lostInConnection):
+            self.lostInConnection and
+            self.lostProcess):
             try:
                 self.proto.processEnded()
             except:
                 log.deferr()
-            reapProcess()
     
+    def processEnded(self, status):
+        self.status = status
+        self.lostProcess = 1
+        self.maybeCallProcessEnded()
+        
     def inConnectionLost(self):
         del self.writer
         self.lostInConnection = 1

From grolgh at online.no  Fri Jun 21 10:59:27 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Fri, 21 Jun 2002 18:59:27 +0200
Subject: [Twisted-Python] Licence of examples
Message-ID: <000c01c21945$00fd8e10$b52f76d9@delhi>

Hello,

After some speculation I stumbled across a little nut, what happens if I use LGPLed examples. Are these a part of the library and thus define the code itself as a library, or will they give Glyph a pica-percentage copyright on huge works based on the code?

So, there's this file LICENSE that everyone must read through for fun. There's also an EULA coming up each time I install something on windows that I've never read through, except for fun. However, there are people believing in such inane matters, so I found this portion:

  5. A program that contains no derivative of any portion of the
Library, but is designed to work with the Library by being compiled or
linked with it, is called a "work that uses the Library".  Such a
work, in isolation, is not a derivative work of the Library, and
therefore falls outside the scope of this License.

That states: The examples are not a part of the library, thus they are just copyrighted by glyph. So, everyone who used the pb-echo-examples, Glyph owns that code (partly). I don't know what rights he inherently has, but he has the copyright.

What kind of licence should the example have? I would like to place it in Public Domain, because if stuff can be taken from there, then we should be able to place stuff there as well.

Benjamin Bruheim
benjamin at inout.no




From exarkun at meson.dyndns.org  Fri Jun 21 11:51:01 2002
From: exarkun at meson.dyndns.org (exarkun at meson.dyndns.org)
Date: Fri, 21 Jun 2002 13:51:01 -0400
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <000c01c21945$00fd8e10$b52f76d9@delhi>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
Message-ID: <20020621175101.GA19609@meson.dyndns.org>

On Fri, Jun 21, 2002 at 06:59:27PM +0200, Benjamin Bruheim wrote:
> Hello,
> 
> [snip license clause et al]
> 
> What kind of licence should the example have? I would like to place it in
> Public Domain, because if stuff can be taken from there, then we should be
> able to place stuff there as well.
> 
> Benjamin Bruheim
> benjamin at inout.no
> 

  Can't put anything in the public domain (US Law.  Lame, eh?)  An MIT-style
license for the examples might be a good idea.  They really *aren't* part of
the library so there's no real reason for them to be covered by the LGPL
(that I can see).

 Jp

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
 1:39pm up 31 days, 14:22, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 259 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020621/76aaab7e/attachment.sig>

From glyph at twistedmatrix.com  Fri Jun 21 15:17:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 16:17:37 -0500 (CDT)
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <000c01c21945$00fd8e10$b52f76d9@delhi>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
Message-ID: <20020621.161737.116362434.glyph@twistedmatrix.com>

From: "Benjamin Bruheim" <grolgh at online.no>
Subject: [Twisted-Python] Licence of examples
Date: Fri, 21 Jun 2002 18:59:27 +0200

> That states: The examples are not a part of the library, thus they are just
> copyrighted by glyph. So, everyone who used the pb-echo-examples, Glyph owns
> that code (partly). I don't know what rights he inherently has, but he has
> the copyright.

I guess I've been looking for an excuse to talk about this for a while, so here
we go :)

There are two things to consider here:

    * What rights does Glyph have?
    * What is Glyph going to try to do?

Personally I couldn't care less whether anybody used the examples in their
code, not to mention the fact that they're supposed to be so trivial that
they're basically not copyrightable.  You can even cite this e-mail message in
court, if you want, since it's about as legally binding as a LICENSE file that
you don't have to sign... ;-) Even stealing small snippets of the Twisted code
is OK; it's probably fair use anyway, and even if it weren't, it's really not
worth my time (more importantly, it's not worth the non-trivial amounts of
money that my lawyer's time costs me) to track down and hassle people who have
used 3 lines from twistd's daemonization in their commercial application.

I take all these licensing issues with a grain of salt.  I would never use the
LGPL as a legal weapon except in defense.  The rules, as far as I'm concerned,
are:
 
    * you share your code, or
    * you pay me or somebody I know to work on the code

preferably both.

This is one reason that copyright is centralized.  Having it copyrighted by
tons of different people in different countries makes it difficult to construct
a credible threat in cases where a big corporation doesn't want to support the
development of something which is helpful to them, but instead swallow it
whole.  This is really bad business, too, but that's a different issue. (I
don't care whether their mistakes hurt *them*, just that they can hurt *us*
too.)  Being able to get "inside" the corporate mindset, though, and deal on
their terms, is useful for propogation of ideals about free software.  I'm
willing to compromise with them; this gives me an opportunity to show them that
my way of working is really better, so they're much more willing to compromise
with me.

Given that I get this privilege (allowing others to use Twisted code without
sharing) it comes with a responsibility.  The responsibility is to be the front
line of defense against liability claims that people want to make about the
Twisted software.  I know the license says there isn't any warranty (expressed
or implied, including but not limited to the implied warranty of
merchantibility or fitness for a particular purpose... ^_^) but that doesn't
stop people from being assholes about it and trying to sue anyway.  I *never*
want a Twisted hacker to be in a position where they have to deal with legal
nonsense regarding some code that they wrote.

> What kind of licence should the example have? I would like to place it in
> Public Domain, because if stuff can be taken from there, then we should be
> able to place stuff there as well.

I wish that this were possible, but BSD license is about as good as it gets.

    "... it is not possible to voluntarily place your software into the public
    domain under United States law." -- http://zooko.com/license_quick_ref.html

If anything, I think that we should probably use a different license for the
documentation, and then put examples under that license.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020621/6a646758/attachment.sig>

From tv at twistedmatrix.com  Fri Jun 21 13:04:08 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 21 Jun 2002 22:04:08 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020618.234847.123286215.glyph@twistedmatrix.com>
References: <3D0B658D.5080404@itamarst.org> <87wuswv4kb.fsf@ki.yok.utu.fi>
	<20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
Message-ID: <871yb0v4gn.fsf@ki.yok.utu.fi>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> > > 	Please do not clobber the information given by the
> > >         kernel in errno. Translating errno to 2 different failures
> > >         is not nice.
> 
> > It needs to be clobbered, at least in some sense, for portability.
> > 
> > Jython does not have errno and win32's support for it is very weak.
> 
> Reading this a few hours later, I think my tone was wrong and I was altogether
> too brief here. :-).  To rephrase in a more constructive manner:
> 
> I believe that it needs to be clobbered, and some information lost, because I
> don't see any other way to retain portability.  Also, we're losing information
> already, since errno is used to report things that aren't "errors" in the
> Twisted worldview (or at least, not errors that the user can deal with
> directly).  Jython and win32 both have error-reporting mechanisms; Jython's is
> exceptions, win32 is a sort of wacked-out informal errno.  Can you think of a
> few primitive errors that we should support, rather than just the 2 types?
> (I'd rather use Failure than just integer error codes, personally.)
> 
> I think that if we're going to add a new error reporting mechanism we need to
> do it carefully so that we don't miss the same kind of information that we did
> the last time we architected this API.  (Protocol.connectionLost used to take
> an integer error code which was one of these two errors; that was a bad idea,
> too).
> 
> Thanks for your feedback.  Does anybody have a solution?

	Allow portable programs to get a "sanitized version", but
        allow my POSIX-only programs get errno. For what kind of
        sanitization one might want, you probably want to look at the
        man page for say connect(2) for all the possible error cases,
        and categorize them based on local/remote, temporary/permanent,
        etc., and create a "high-level error" for each class, with
        perhaps the string corresponding to the errno as extra info
        meant for users (and not if statements).

        But please do _not_ loose any information in the translation.
        Say people shouldn't look at the error objects errno attribute
        to decide what to do, as not all platforms provide it. But
        don't hide the actual error.

        Remember my background; I'm a kernel hacker, and I know the
        UNIX libc/kernel API. If I run a program that tries to
        e.g. connect with TCP, and it fails without giving me a good
        reason, I _will_ run it under strace -e trace=connect just to
        see whether connect failed, and with what errno. Operating
        systems without BSD sockets just aren't, and I write my
        programs to use fork anyway. My point -- don't decide for me,
        let me decide on my own.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From shae at ScannedInAvian.com  Fri Jun 21 15:28:15 2002
From: shae at ScannedInAvian.com (Shae Matijs Erisson)
Date: 22 Jun 2002 00:28:15 +0300
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <20020621.161737.116362434.glyph@twistedmatrix.com>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
	<20020621.161737.116362434.glyph@twistedmatrix.com>
Message-ID: <874rfwgw40.fsf@webwitches.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> This is one reason that copyright is centralized.  Having it copyrighted by
> tons of different people in different countries makes it difficult to construct
> a credible threat in cases where a big corporation doesn't want to support the
> development of something which is helpful to them, but instead swallow it
> whole.

I've been aching to ask this question somewhere this matters.
Does the Zope Public License cover this case in your, or your lawyers opinion?
There's a specialized joint copyright agreement in it that seems worth
considering to me.
-- 
Shae Matijs Erisson - http://www.webwitches.com/~shae/
<radix> shapr: I think you *are* a purist :)
<radix> shapr: it's just that you're morally against unstable software, instead
        of morally against MS, or non-free software, or whatnot.





From glyph at twistedmatrix.com  Fri Jun 21 17:32:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 18:32:48 -0500 (CDT)
Subject: [Twisted-Python] Licence of examples
In-Reply-To: <874rfwgw40.fsf@webwitches.com>
References: <000c01c21945$00fd8e10$b52f76d9@delhi>
	<20020621.161737.116362434.glyph@twistedmatrix.com>
	<874rfwgw40.fsf@webwitches.com>
Message-ID: <20020621.183248.98865860.glyph@twistedmatrix.com>

From: Shae Matijs Erisson <shae at ScannedInAvian.com>
Subject: Re: [Twisted-Python] Licence of examples
Date: 22 Jun 2002 00:28:15 +0300

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> > This is one reason that copyright is centralized.  Having it copyrighted by
> > tons of different people in different countries makes it difficult to construct
> > a credible threat in cases where a big corporation doesn't want to support the
> > development of something which is helpful to them, but instead swallow it
> > whole.
> 
> I've been aching to ask this question somewhere this matters.
> Does the Zope Public License cover this case in your, or your lawyers opinion?

I assume you're referring to this:

    http://www.zope.org/Resources/ZPL

No.  It doesn't address any of my concerns.  Most importantly, it doesn't place
any value on redistribution.  Unlike "pure" GPL, I don't want to force
everybody in the world who modifies or adds to Twisted to contribute their
changes back.  However, I do believe that their changes have value, and if
they're not paying the community back in that way, they need to be putting
money into it (to keep some Twisted developers fed while they keep working on
the free stuff).  LGPL + single copyright holder gives us that restriction plus
an assigned negotiator (one for each module in Twisted CVS; it's not always me!
See TwistedJava (itamarst) or TwistedEmacs (washort)) for exceptions to it.
ZPL affords basically no protection.

Not to mention the fact that if I were going to use a license of this type I
would want to use Python/BSD/MIT/X11 license and call it "Python" or "BSD", and
not "ZPL".

> There's a specialized joint copyright agreement in it that seems worth
> considering to me.

    http://dev.zope.org/CVS/Contributor.pdf

*This*, on the other hand, looks very interesting to me.  This is more formal
than the ad-hoc "verbal" contract we have now, although the terms are very
similar; I like it.  Does anybody have objections to the terms outlined there?
(Are there any copyright concerns with the document itself? ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020621/975f7ab0/attachment.sig>

From glyph at twistedmatrix.com  Fri Jun 21 17:59:23 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Jun 2002 18:59:23 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <871yb0v4gn.fsf@ki.yok.utu.fi>
References: <20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
	<871yb0v4gn.fsf@ki.yok.utu.fi>
Message-ID: <20020621.185923.75772697.glyph@twistedmatrix.com>


From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 21 Jun 2002 22:04:08 +0300

> Allow portable programs to get a "sanitized version", but allow my POSIX-only
> programs get errno. For what kind of sanitization one might want, you
> probably want to look at the man page for say connect(2) for all the possible
> error cases, and categorize them based on local/remote, temporary/permanent,
> etc., and create a "high-level error" for each class, with perhaps the string
> corresponding to the errno as extra info meant for users (and not if
> statements).

> But please do _not_ loose any information in the translation.  Say people
> shouldn't look at the error objects errno attribute to decide what to do, as
> not all platforms provide it. But don't hide the actual error.

Upon consideration I strongly agree that no information should be lost.

So, let's have such a high-level error, and a .platformError attribute on the
connection error object which is an object specific to the "OS" that you're
running under.  On POSIX this will be (or contain) an errno error code, but on
Jython and elsewhere it will be whatever's appropriate.  Does that work for
you?

> Remember my background; I'm a kernel hacker, and I know the UNIX libc/kernel
> API. If I run a program that tries to e.g. connect with TCP, and it fails
> without giving me a good reason, I _will_ run it under strace -e
> trace=connect just to see whether connect failed, and with what
> errno. Operating systems without BSD sockets just aren't, and I write my
> programs to use fork anyway. My point -- don't decide for me, let me decide
> on my own.

The reason I'm resistent to this is that I would like to encourage writing
portable programs with Twisted, especially in cases where platform specificity
doesn't add any functionality.  On the other hand, I don't want to be Java here
and try to _force_ programmers to write their programmers in a portable way
when they really know better than I do what they want.

Problem is, programmers rarely know what they want.  For example; if you're
using Twisted, why use fork?  You ought to be using reactor.spawnProcess for
non-portability-related reasons anyway; Python's refcounting doesn't work
reliably with COW memory.  Of course, there are reasons not to do this; of
course, there are times when you just _need_ to get down to the OS and do
something in a very, very platform specific way (sometimes even specific to
your particular OS vendor, not just POSIX).  This should not be the default.

Handling an errno error code specifically should also be considered a *very*
esoteric operation.  I personally can't come up with any need to use it except
debugging under a particular environment; I would far rather that people used
to the POSIX API learned how to use the Twisted APIs to do POSIX-y things, so
that their programs would be more portable.  

Balancing this with the need not to piss people off is difficult :-).  I can't
think of a way to say "DON'T USE .platformError UNLESS YOU REALLY NEED IT,
WHICH YOU DON'T" without making everybody read the documentation, which they
won't anyway.  I can imagine many programs made non-portable by someone looking
for the answer to the question "how do I find the errno of what happened"
rather than the correct question "how do I handle a connection error".

So I guess I'll provide the platform specific information and put my faith in
the worldview of applications programmers; please try to give them good
examples to look at :)


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020621/254e5b2f/attachment.sig>

From andrew-twisted at puzzling.org  Fri Jun 21 22:00:39 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 22 Jun 2002 14:00:39 +1000
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020621.185923.75772697.glyph@twistedmatrix.com>
References: <20020618.193846.127653974.glyph@twistedmatrix.com> <20020618.234847.123286215.glyph@twistedmatrix.com> <871yb0v4gn.fsf@ki.yok.utu.fi> <20020621.185923.75772697.glyph@twistedmatrix.com>
Message-ID: <20020622040039.GB479@frobozz.local>

On Fri, Jun 21, 2002 at 06:59:23PM -0500, Glyph Lefkowitz wrote:
> 
> From: Tommi Virtanen <tv at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
> Date: 21 Jun 2002 22:04:08 +0300
> 
> > But please do _not_ loose any information in the translation.  Say people
> > shouldn't look at the error objects errno attribute to decide what to do, as
> > not all platforms provide it. But don't hide the actual error.
> 
> Upon consideration I strongly agree that no information should be lost.
> 
> So, let's have such a high-level error, and a .platformError attribute on the
> connection error object which is an object specific to the "OS" that you're
> running under.  On POSIX this will be (or contain) an errno error code, but on
> Jython and elsewhere it will be whatever's appropriate.  Does that work for
> you?

I don't care about the errno, but I do think that the corresponding error
string (e.g. 'No route to host') should be available, so that you have
something meaningful to display to the user, write in error logs, etc.  Is
it guaranteed that a socket.error's .args attribute will always be a 2-tuple
of (errno, description) on all platforms?  If so, I think that would make
sense as the .platformError.

-Andrew.




From tv at twistedmatrix.com  Sat Jun 22 15:57:31 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 23 Jun 2002 00:57:31 +0300
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <20020621.185923.75772697.glyph@twistedmatrix.com>
References: <20020618.193846.127653974.glyph@twistedmatrix.com>
	<20020618.234847.123286215.glyph@twistedmatrix.com>
	<871yb0v4gn.fsf@ki.yok.utu.fi>
	<20020621.185923.75772697.glyph@twistedmatrix.com>
Message-ID: <87wusrt1ro.fsf@ki.yok.utu.fi>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> So, let's have such a high-level error, and a .platformError attribute on the
> connection error object which is an object specific to the "OS" that you're
> running under.  On POSIX this will be (or contain) an errno error code, but on
> Jython and elsewhere it will be whatever's appropriate.  Does that work for
> you?

	Yes.

> Balancing this with the need not to piss people off is difficult :-).  I can't
> think of a way to say "DON'T USE .platformError UNLESS YOU REALLY NEED IT,
> WHICH YOU DON'T" without making everybody read the documentation, which they
> won't anyway.  I can imagine many programs made non-portable by someone looking
> for the answer to the question "how do I find the errno of what happened"
> rather than the correct question "how do I handle a connection error".

	Don't document platformError outside the source code, and
        there point out that it should not be used, and point to the
        real solution. This is a social problem, and technical methods
        will not be able to solve it.

	And, if you want me to write code using the high-level API, the
        high-level API needs to be able to tell me atleast

        1) if the error is local or remote
        2) if the error is temporary or permanent
        3) how to report the error to the user without losing information

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From glyph at twistedmatrix.com  Sat Jun 22 19:35:59 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 22 Jun 2002 20:35:59 -0500 (CDT)
Subject: [Twisted-Python] Proposal: changes to reactor.clientTCP
In-Reply-To: <87wusrt1ro.fsf@ki.yok.utu.fi>
References: <871yb0v4gn.fsf@ki.yok.utu.fi>
	<20020621.185923.75772697.glyph@twistedmatrix.com>
	<87wusrt1ro.fsf@ki.yok.utu.fi>
Message-ID: <20020622.203559.120142003.glyph@twistedmatrix.com>


From: Tommi Virtanen <tv at twistedmatrix.com>
Subject: Re: [Twisted-Python] Proposal: changes to reactor.clientTCP
Date: 23 Jun 2002 00:57:31 +0300

> Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> > ... Does that work for you?

> 	Yes.

Cool; sounds like a plan.

> > Balancing this with the need not to piss people off is difficult :-). ...

> Don't document platformError outside the source code, and there point out
> that it should not be used, and point to the real solution. This is a social
> problem, and technical methods will not be able to solve it.

I agree.  This is a good suggestion. 

> And, if you want me to write code using the high-level API, the high-level
> API needs to be able to tell me atleast

>         1) if the error is local or remote
>         2) if the error is temporary or permanent
>         3) how to report the error to the user without losing information

This is also a good list.  Does anyone else want to add to it?  From what I can
tell, this complete, so I think I'll do the refactoring with these things in
mind.

I'd like to get another release out before we start on this, though.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020622/a5b74f0a/attachment.sig>

From andrew-twisted at puzzling.org  Mon Jun 24 18:20:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 25 Jun 2002 10:20:55 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
In-Reply-To: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
References: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
Message-ID: <20020625002055.GA21644@ritsuko.xware.cx>

On Mon, Jun 24, 2002 at 12:30:04PM -0500, glyph CVS wrote:
> 
> Log message:
> Small Updates
> 
>  * Unit test fixes (--module option to runtests)

How does this differ from --file?  Is it just that you can do
--module=ftp instead of --file=twisted/tests/test_ftp.py?

-Andrew.




From glyph at twistedmatrix.com  Mon Jun 24 19:45:53 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 24 Jun 2002 20:45:53 -0500 (CDT)
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
In-Reply-To: <20020625002055.GA21644@ritsuko.xware.cx>
References: <E17MXfA-0001q8-00@zaibach.twistedmatrix.com>
	<20020625002055.GA21644@ritsuko.xware.cx>
Message-ID: <20020624.204553.35027476.glyph@twistedmatrix.com>


From: Andrew Bennetts <andrew-twisted at puzzling.org>
Subject: [Twisted-Python] Re: [Twisted-commits] Small Updates
Date: Tue, 25 Jun 2002 10:20:55 +1000

> How does this differ from --file?  Is it just that you can do
> --module=ftp instead of --file=twisted/tests/test_ftp.py?
> 
> -Andrew.

The difference subtle, but significant.

You can now do:

% runtests -t --module twisted.test.test_ftp \
              --module twisted.test.test_web \
              --module Reality.reality.test_reality

That last line is why I made the change ;-).  This was developed mainly in
support of twisted-dev.el.  I wanted to be able to have TwistedEmacs support
Twisted plugins with unit tests.  Also, to be able to run a subset of the tests
relevant to a certain task without running runtests multiple times.  (--file
currently can only be used with one file at a time)

Notice those -*- test-case-name: -*- lines starting to crop up at the top of
various Python files?  When you're using the TwistedEmacs development setup
(twisted-dev.el now in TwistedEmacs CVS), you can push F9 and get a
context-dependent unit test depending on which file you're editing, as well as
jumping to lines in tracebacks that occurr as if they were compiler errors.

(Any vimmers want to write something similar? ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020624/317ee22b/attachment.sig>

From glyph at twistedmatrix.com  Tue Jun 25 07:26:16 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
Message-ID: <20020625.082616.59463726.glyph@twistedmatrix.com>


Due to a potentially major security hazard, ssh has been shut down on
twistedmatrix.com until further notice.  There has been a discovery of a remote
root exploit, but Theo de Raadt has mysteriously refrained from actually
providing evidence of this exploit or a patch to fix it.  There is currently a
half-solution to the exploit, but it requires breaking substantial amounts of
functionality, and creating other administrative problems.  Surprisingly
(Theo's great, ain't he?) the workaround only works correctly on OpenBSD.
Additionally, from what I understand, this does not prevent gaining access,
only escalating privileges to root level.

More information is here:

     http://lists.debian.org/debian-security-announce/debian-security-announce-2002/msg00046.html

Until some more information arrives about this, please use anonymous pserver
access for check-outs from CVS, and mail me patches if you have anything you
really want to get committed.  (PGP signed, please.)  I am currently working on
a shell client and server for Twisted that we can use to work around problems
with CVS. (Working title: TRASH, the Twisted Remote Access SHell).

If you require shell access to Zaibach, I have installed telnetd-ssl. (Debian
users: apt-get install telnet-ssl; this will replace your existing 'telnet'
binary).

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020625/7da55ccd/attachment.sig>

From acapnotic at twistedmatrix.com  Tue Jun 25 11:26:29 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 25 Jun 2002 10:26:29 -0700
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020625.082616.59463726.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
Message-ID: <1025025989.10652.37.camel@zardoz.janrain.com>

On Tue, 2002-06-25 at 06:26, Glyph Lefkowitz wrote:
> If you require shell access to Zaibach, I have installed telnetd-ssl. (Debian
> users: apt-get install telnet-ssl; this will replace your existing 'telnet'
> binary).

note that zaibach also allows cleartext telnet.  If you want to be sure
you're not accidently using cleartext when you don't want to, start
telnet with the "-z secure" flag.

"you-mean-I-didn't-already-have-telnet-ssl-installed"-ly yours,

  Kevin




From typo at soniq.net  Wed Jun 26 05:59:32 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 26 Jun 2002 13:59:32 +0200
Subject: [Twisted-Python] Twisted/doc/howto/listings/
Message-ID: <20020626115931.GA5982@soniq.net>

i can't find Twisted/doc/howto/listings/ , as referenced from some of the
howtos, in current cvs. are these unfinished or just not imported into cvs yet?

  paul



From typo at soniq.net  Wed Jun 26 06:04:15 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 26 Jun 2002 14:04:15 +0200
Subject: [Twisted-Python] Twisted/doc/howto/listings/
In-Reply-To: <20020626115931.GA5982@soniq.net>
References: <20020626115931.GA5982@soniq.net>
Message-ID: <20020626120415.GA24471@soniq.net>

On Wed, Jun 26, 2002 at 01:59:32PM +0200, Paul Boehm wrote:
> i can't find Twisted/doc/howto/listings/ , as referenced from some of the
> howtos, in current cvs. are these unfinished or just not imported into cvs yet?

14:02 < radix> yes it is :-) Are you using the -d option to update?

doh. thanks :)




From steve.waterbury at gsfc.nasa.gov  Tue Jun 25 12:29:56 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 25 Jun 2002 14:29:56 -0400
Subject: [Twisted-Python] Twisted Bugs ... help!
Message-ID: <3D18B6A4.34CECF73@gsfc.nasa.gov>

Yet another newbie question ... 

Trying to get Twisted Bugs to run, but no joy so far.
Tried both Bugs-0.2.0 and the latest CVS version.  Set up the 
twisted database and checked it to make sure the right tables are 
there and populated properly by schema.sql.  I've also replaced "main" 
by "app" in bugs.tac, so the server will start up (might 
be good to fix that in the distro!).
  
In both cases, trying http://localhost:8485 gives a traceback -- 
here are the log entries (nice logging, by the way! :^) ...  

---------------------------------------------------------------------
25/06/2002 14:10 [-] Log opened.
25/06/2002 14:10 [-] twistd 0.18.0-post (/usr/local/bin/python 2.2.1) starting up
25/06/2002 14:10 [-] license user: Nobody <>
25/06/2002 14:10 [-] organization: No Organization
25/06/2002 14:10 [-] reactor class: twisted.internet.default.SelectReactor
25/06/2002 14:10 [-] Loading /usr/local/src/python/Twisted/Bugs-0.2.0/bugs.tac...
25/06/2002 14:10 [-] Enabling Multithreading.
25/06/2002 14:10 [-] twisted.internet.threadtask is deprecated, use .threads instead.
25/06/2002 14:10 [-] Connecting to database: pyPgSQL.PgSQL () {'database': 'twisted'}
25/06/2002 14:10 [-] Loaded.
25/06/2002 14:10 [*Bugs*] twisted.web.server.Site starting on 8485
25/06/2002 14:10 [*Bugs*] Starting factory <twisted.web.server.Site instance at 0x83b40b4>
25/06/2002 14:10 [*Bugs*] Bugs.service.Service (twisted.bugs) starting
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] adbapi connecting: pyPgSQL.PgSQL {'database': 'twisted'}
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] Traceback (most recent call last):
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/server.py", line 152, in process
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     body = resrc.render(self)
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 902, in render
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     RenderSession(displayed, request)
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 713, in __init__
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     self.keepRendering()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/web/widgets.py", line 782, in keepRendering
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     deferred.unpause()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 161, in unpause
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     self._runCallbacks()
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 179, in _runCallbacks
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185]     callback, args, kw = item[self.isError]
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] exceptions.AttributeError: Deferred instance has no attribute 'isError'
25/06/2002 14:11 [HTTPChannel,0,128.183.52.185] 128.183.52.185 - - [25/Jun/2002:18:11:38 +0000] "<GET / HTTP/1.1>" 500 11833 "-" "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020606"
---------------------------------------------------------------------

TIA for any help!

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Jun 26 10:06:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 26 Jun 2002 11:06:21 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020625.082616.59463726.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
Message-ID: <20020626.110621.95498066.glyph@twistedmatrix.com>

From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: [Twisted-Python] Developer Security Notice
Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)

> Due to a potentially major security hazard, ssh has been shut down on
> twistedmatrix.com until further notice.  There has been a discovery of a remote
> root exploit, but Theo de Raadt has mysteriously refrained from actually
> providing evidence of this exploit or a patch to fix it.

More information has suddenly become available.  The supar s1kr3t debian
informant who contacted me with the information has informed me that (while not
official yet) the compile options that Debian uses to build openssh don't make
it vulnerable.

Ah well, didn't finish 'trash' before I found out about this, so I'll be
tabling that for a while (UNIX is hard, kids; don't try this at home.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020626/f8bb87da/attachment.sig>

From andrew-twisted at puzzling.org  Wed Jun 26 21:17:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 27 Jun 2002 13:17:06 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Updated and added tests for twisted.sister.  It may actually be usable for something now.
In-Reply-To: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
Message-ID: <20020627031706.GA2634@ritsuko.xware.cx>

On Wed, Jun 26, 2002 at 05:22:03PM -0500, glyph CVS wrote:
> 
> Note: With this checkin we (sean and I) discovered that the unit tests are
> starting to interfere with each other.  Currently a full run of the tests will
> not complete, and will in fact hang and be unresponsive to signals.  Running
> individual test cases by themselves work fine, but they're interfering with
> each other by doing reactor-y things ... we need each test case to
> instantiate/start/stop the reactor, etc.  I will buy chocolate for whoever does
> this first.

Maybe reactors need a .reset() method to completely clear their internal
state?  You could then modify runtests to do a reactor.reset() between
each testcase, or something similar.  That way test cases that forget to
unregister old callLater calls, etc, won't pollute later tests.

-Andrew.




From typo at soniq.net  Thu Jun 27 05:25:13 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 27 Jun 2002 13:25:13 +0200
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627031706.GA2634@ritsuko.xware.cx>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx>
Message-ID: <20020627112513.GA23431@soniq.net>

imho self._runCallbacks() in Deferred.unpause() needs to be removed,
because self.isError and self.results aren't neccesarily initialized at this
point, yet.

web.widgets can trigger this with its deferred widget rendering.

any comments ?

  paul



From exarkun at meson.dyndns.org  Thu Jun 27 07:12:51 2002
From: exarkun at meson.dyndns.org (exarkun at meson.dyndns.org)
Date: Thu, 27 Jun 2002 09:12:51 -0400
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020626.110621.95498066.glyph@twistedmatrix.com>
References: <20020625.082616.59463726.glyph@twistedmatrix.com> <20020626.110621.95498066.glyph@twistedmatrix.com>
Message-ID: <20020627131251.GA1175@meson.dyndns.org>

On Wed, Jun 26, 2002 at 11:06:21AM -0500, Glyph Lefkowitz wrote:
> From: Glyph Lefkowitz <glyph at twistedmatrix.com>
> Subject: [Twisted-Python] Developer Security Notice
> Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
> 
> > [snip]
> [snip]
> 
> Ah well, didn't finish 'trash' before I found out about this, so I'll be
> tabling that for a while (UNIX is hard, kids; don't try this at home.)
> 

  *cough*  Is 'trash' in CVS anywhere?  I'd kinda like to take a look :)

 Jp

-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
--
 9:11am up 37 days, 9:54, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020627/53f9e562/attachment.sig>

From glyph at twistedmatrix.com  Thu Jun 27 17:26:37 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Jun 2002 18:26:37 -0500 (CDT)
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627112513.GA23431@soniq.net>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com>
	<20020627031706.GA2634@ritsuko.xware.cx>
	<20020627112513.GA23431@soniq.net>
Message-ID: <20020627.182637.112256714.glyph@twistedmatrix.com>

From: Paul Boehm <typo at soniq.net>
Subject: [Twisted-Python] unpause()
Date: Thu, 27 Jun 2002 13:25:13 +0200

> imho self._runCallbacks() in Deferred.unpause() needs to be removed,
> because self.isError and self.results aren't neccesarily initialized at this
> point, yet.

I think you're right; I ought to be checking self.called before
self._runCallbacks().

> web.widgets can trigger this with its deferred widget rendering.

> any comments ?

I've fixed it, I think.  Care to contribute a test case? ;)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020627/e5aa39bb/attachment.sig>

From glyph at twistedmatrix.com  Thu Jun 27 17:31:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Jun 2002 18:31:21 -0500 (CDT)
Subject: [Twisted-Python] Developer Security Notice
In-Reply-To: <20020627131251.GA1175@meson.dyndns.org>
References: <20020625.082616.59463726.glyph@twistedmatrix.com>
	<20020626.110621.95498066.glyph@twistedmatrix.com>
	<20020627131251.GA1175@meson.dyndns.org>
Message-ID: <20020627.183121.59649292.glyph@twistedmatrix.com>

From: exarkun at meson.dyndns.org
Subject: Re: [Twisted-Python] Developer Security Notice
Date: Thu, 27 Jun 2002 09:12:51 -0400

> On Wed, Jun 26, 2002 at 11:06:21AM -0500, Glyph Lefkowitz wrote:
> > From: Glyph Lefkowitz <glyph at twistedmatrix.com>
> > Subject: [Twisted-Python] Developer Security Notice
> > Date: Tue, 25 Jun 2002 08:26:16 -0500 (CDT)
> > 
> > > [snip]
> > [snip]
> > 
> > Ah well, didn't finish 'trash' before I found out about this, so I'll be
> > tabling that for a while (UNIX is hard, kids; don't try this at home.)

>   *cough*  Is 'trash' in CVS anywhere?  I'd kinda like to take a look :)

Nah.  And there's nothing interesting in it yet, so far -- most of the work I
did was trying to figure out how the hell setuid/setgid worked, and I checked
in those additions to twisted.internet.process.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020627/42351eae/attachment.sig>

From steve.waterbury at gsfc.nasa.gov  Thu Jun 27 08:14:09 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 27 Jun 2002 10:14:09 -0400
Subject: [Twisted-Python] unpause()
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx> <20020627112513.GA23431@soniq.net>
Message-ID: <3D1B1DB1.E0EFC96F@gsfc.nasa.gov>

Paul Boehm wrote:
> 
> imho self._runCallbacks() in Deferred.unpause() needs to be removed,
> because self.isError and self.results aren't neccesarily initialized at this
> point, yet.
> 
> web.widgets can trigger this with its deferred widget rendering.
> 
> any comments ?

That might explain the traceback I'm getting in Bugs 
("exceptions.AttributeError: Deferred instance has no attribute 'isError'")
on the root URL (localhost:8485) when there are no bugs in the database.  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From dmarko at digi-trade.cz  Fri Jun 28 01:11:36 2002
From: dmarko at digi-trade.cz (David Marko)
Date: Fri, 28 Jun 2002 09:11:36 +0200
Subject: [Twisted-Python] Twisted on WIN32
Message-ID: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>

I have found your remark in Twisted mailing list on cl.exe. Can you 
provide me with binary version for this, otherwise I am not able to make 
"python setup.py install" on twisted environment. I have Win2000 and 
python 2.2


Thank you.
David Marko
--------------------------------------------------------------------------------------------------------
TCL-DigiTrade Ltd.
http://www.tcl-digitrade.com
http://www.lnscan.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020628/4ff0d891/attachment.html>

From typo at soniq.net  Fri Jun 28 03:26:26 2002
From: typo at soniq.net (Paul Boehm)
Date: Fri, 28 Jun 2002 11:26:26 +0200
Subject: [Twisted-Python] unpause()
In-Reply-To: <20020627.182637.112256714.glyph@twistedmatrix.com>
References: <E17NLAp-00043O-00@zaibach.twistedmatrix.com> <20020627031706.GA2634@ritsuko.xware.cx> <20020627112513.GA23431@soniq.net> <20020627.182637.112256714.glyph@twistedmatrix.com>
Message-ID: <20020628092626.GA8537@soniq.net>

On Thu, Jun 27, 2002 at 06:26:37PM -0500, Glyph Lefkowitz wrote:
> I've fixed it, I think.  Care to contribute a test case? ;)
sure:

    def testUnpauseBeforeCallback(self):
        d = defer.Deferred()
        d.pause()
        d.addCallback(self._callback)
        d.unpause()

(this is equivalent to the problems web.widgets had with unpause, I think ;)



From andrew-twisted at puzzling.org  Fri Jun 28 21:31:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 29 Jun 2002 13:31:30 +1000
Subject: [Twisted-Python] Twisted on WIN32
In-Reply-To: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>
References: <OF9AA12BB3.864A0219-ONC1256BE6.00274EA1-C1256BE6.002783A4@LocalDomain>
Message-ID: <20020629033130.GA493@frobozz.local>

On Fri, Jun 28, 2002 at 09:11:36AM +0200, David Marko wrote:
>    I have found your remark in Twisted mailing list on cl.exe. Can you
>    provide me with binary version for this, otherwise I am not able to make
>     "python setup.py install" on twisted environment. I have Win2000 and
>    python 2.2

CL.EXE is part of MS Visual C++; it would be illegal to distribute it, and
besides, you'd need most of the rest of MS Visual C++ as well.

We should probably provide a Windows installer for Python 2.2 as well as
Python 2.1.  Who is responsible for building these?

David: The error you are seeing is due to it trying to compile "cBanana.pyd",
which is an optimised C version of banana.py.  Twisted will run just fine
without it (although the twisted.spread stuff will be a bit slower).  You
should be able to comment out these lines right near the bottom of setup.py:
    setup_args['ext_modules'] = [
        Extension("twisted.spread.cBanana", ["twisted/spread/cBanana.c"],
                  define_macros=define_macros),
        ]
That should make it skip building that module.  It should then work fine.

Alternatively, you could try using cygwin's Python, but that's probably more
hassle than it's worth.  It's also possible that you could build it with lcc
(or whatever the port of gcc to win32 is called) rather than MSVC, but that
also would be lots of mucking around.

-Andrew.




