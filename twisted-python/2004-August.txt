From seamonkeys at gmail.com  Sun Aug  1 15:40:07 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Sun, 1 Aug 2004 12:40:07 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
Message-ID: <305be8820408011240726f59ee@mail.gmail.com>

I'm wondering if there exists a beginners guide to using Twisted.
Something similar to the online tutorial for Python. I've browsed the
docs on the Twisted website, and haven't been able to find what I'm
looking for. Specifically, a lot of the examples are mostly just code
with brief commentary which doesn't really explain things.

Can someone help me out! :)

Many thanks,

Britt



From exarkun at divmod.com  Sun Aug  1 15:49:19 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 01 Aug 2004 15:49:19 -0400
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be8820408011240726f59ee@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
Message-ID: <410D493F.5030900@divmod.com>

Britt Green wrote:
> I'm wondering if there exists a beginners guide to using Twisted.
> Something similar to the online tutorial for Python. I've browsed the
> docs on the Twisted website, and haven't been able to find what I'm
> looking for. Specifically, a lot of the examples are mostly just code
> with brief commentary which doesn't really explain things.
> 
> Can someone help me out! :)

   You may be interested in the finger tutorial:

     http://twistedmatrix.com/documents/howto/tutorial/index

   Jp



From seamonkeys at gmail.com  Sun Aug  1 17:22:54 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Sun, 1 Aug 2004 14:22:54 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <410D493F.5030900@divmod.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
Message-ID: <305be882040801142276bbec82@mail.gmail.com>

You know, I've looked at the finger tutorial a few times. The problem
is that it doesn't really explain the code very well. Sure, I can look
at the first few examples and make an educated guess. For example,
lets look at the second step:

from twisted.internet import protocol, reactor
class FingerProtocol(protocol.Protocol):
    pass
class FingerFactory(protocol.ServerFactory):
    protocol = FingerProtocol
reactor.listenTCP(1079, FingerFactory())
reactor.run()

The accompanying explaination never really explains what
protocol.Protocol is. Same thing with protocol.ServerFactory. I've
been able to deduce what reactor.listenTCP() and reactor.run() do, but
as someone new to the language, its a bit frustrating to have to make
guesses about what the tutorial code does.

Britt

On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> 
> 
> Britt Green wrote:
> > I'm wondering if there exists a beginners guide to using Twisted.
> > Something similar to the online tutorial for Python. I've browsed the
> > docs on the Twisted website, and haven't been able to find what I'm
> > looking for. Specifically, a lot of the examples are mostly just code
> > with brief commentary which doesn't really explain things.
> >
> > Can someone help me out! :)
> 
>    You may be interested in the finger tutorial:
> 
>      http://twistedmatrix.com/documents/howto/tutorial/index
> 
>    Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From serj_trejo at hotmail.com  Sun Aug  1 17:35:37 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:35:37 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>

I saw Glyph's blog the other day about OSCON and a suggestion by someone 
attending OSCON to write a book about Twisted. I think it would be really 
sweet if there existed an O'Reilly book for Twisted. I think the great 
people who started and contributed to Twisted deserve a standalone book, and 
I think it would be great for bringing more people into the Twisted 
community. It was only a few months ago at the end of May that OSAF 
announced that they're using Twisted (and I think a lot of people have 
respect for OSAF and Mitch Kapor, the father of Lotus Notes): 
http://wiki.osafoundation.org/twiki/bin/view/Chandler/TwistedHome

What are the requirements for writing a book (besides time)?

For the front cover of of the Twisted O'Reilly book, I would like to propose 
that the animal chosen be the Black Ghost Knife fish which is found in the 
mysteryious depths of the Amazon region in South America. These fish are 
amazing creatures. They can be trained to take food from the hand of a human 
and the natives in South America treat these fish with respect. They also 
have an electrical sensory system which helps them find food at night and in 
murky waters. They also have a long undulating bottom find that they use to 
swim forward and backward very rapidly and with precision. Here are some 
photos and links:

http://www.fmnh.org/research_collections/ecp/ecp_sites/Parker_Gentry/images/blackghost_lg.jpg

How about it?

Serg

>From: Jp Calderone <exarkun at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>Date: Sun, 01 Aug 2004 15:49:19 -0400
>
>Britt Green wrote:
>>I'm wondering if there exists a beginners guide to using Twisted.
>>Something similar to the online tutorial for Python. I've browsed the
>>docs on the Twisted website, and haven't been able to find what I'm
>>looking for. Specifically, a lot of the examples are mostly just code
>>with brief commentary which doesn't really explain things.
>>
>>Can someone help me out! :)
>
>   You may be interested in the finger tutorial:
>
>     http://twistedmatrix.com/documents/howto/tutorial/index
>
>   Jp
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Sun Aug  1 17:40:44 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:40:44 -0400
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
Message-ID: <BAY12-F121VAWHTiOJF00040477@hotmail.com>

Britt,

Your sentiments are another reminder as to why a book would be welcome!

Serg

>From: Britt Green <seamonkeys at gmail.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>Date: Sun, 1 Aug 2004 14:22:54 -0700
>
>You know, I've looked at the finger tutorial a few times. The problem
>is that it doesn't really explain the code very well. Sure, I can look
>at the first few examples and make an educated guess. For example,
>lets look at the second step:
>
>from twisted.internet import protocol, reactor
>class FingerProtocol(protocol.Protocol):
>     pass
>class FingerFactory(protocol.ServerFactory):
>     protocol = FingerProtocol
>reactor.listenTCP(1079, FingerFactory())
>reactor.run()
>
>The accompanying explaination never really explains what
>protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>been able to deduce what reactor.listenTCP() and reactor.run() do, but
>as someone new to the language, its a bit frustrating to have to make
>guesses about what the tutorial code does.
>
>Britt
>
>On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> 
>wrote:
> >
> >
> > Britt Green wrote:
> > > I'm wondering if there exists a beginners guide to using Twisted.
> > > Something similar to the online tutorial for Python. I've browsed the
> > > docs on the Twisted website, and haven't been able to find what I'm
> > > looking for. Specifically, a lot of the examples are mostly just code
> > > with brief commentary which doesn't really explain things.
> > >
> > > Can someone help me out! :)
> >
> >    You may be interested in the finger tutorial:
> >
> >      http://twistedmatrix.com/documents/howto/tutorial/index
> >
> >    Jp
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Sun Aug  1 17:46:54 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:46:54 -0400
Subject: [Twisted-Python] Calling on Itamar
Message-ID: <BAY12-F8eu05dI1HTXK00040430@hotmail.com>

Itamar,

Your writing style is really good and easy to understand:

http://www.onlamp.com/pub/a/python/2004/01/15/twisted_intro.html

You and Glyph would make great co-authors for the forthcoming Twisted 
O'Reilly Book :-)

Serg

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From mary-twisted at puzzling.org  Sun Aug  1 19:47:09 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 09:47:09 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
Message-ID: <20040801234709.GA26455@titus.home.puzzling.org>

On Sun, Aug 01, 2004, Sergio Trejo wrote:
> What are the requirements for writing a book (besides time)?

You pitch to them as per:
http://www.oreilly.com/oreilly/author/intro.html

I suppose the main other requirements are "writing ability", "technical
ability" and last but not least, "money". I may be mistaken about this,
but I doubt income from writing tech books is sufficient to live on.

-Mary



From serj_trejo at hotmail.com  Sun Aug  1 20:11:16 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:11:16 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>


>I suppose the main other requirements are "writing ability", "technical
>ability" and last but not least, "money". I may be mistaken about this,
>but I doubt income from writing tech books is sufficient to live on.
>
>-Mary

If the book encourages growth in the Twisted community (users and 
developers), then the number of businesses whose IT managers may (as a 
result of reviewing the book) decide to use Twisted in the enterprise could 
increase, and this increase usage means that there would likely be more 
money flowing into the Twisted community and thus opportunities for those 
with Twisted expertise who would like to make a living in such a manner. 
Thus, a book should be looked at as an investment with future returns beyond 
merely what the publisher and authors earn on cash flows from the cash 
registers of Amazon, Borders, Barnes and Noble, et al. Come on, lets have 
some future vision. I already picked the animal for the Twisted O'Reilly 
book cover (the Ghost Knife Fish of the Amazon river basin :-)

Availability of books written by authors in the deep throes of knowledge on 
the subject (Glyph, Itamar, Radix, et al) also lend even more credibility to 
the framework. Just ask Zoteca (IMHO they were ahead of their time and had a 
big marketing challenge and on top of that in a down market in 2002 after 
the dot com crash).

Anyway, I'd love to see a book emerge on Twisted. Calling on Glyph. Calling 
on Itamar! Calling on Radix! You guys are awesome and that applause at OSCON 
is not a fluke, it is well deserved.

Best wishes,

Serg

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From mary-twisted at puzzling.org  Sun Aug  1 20:24:37 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 10:24:37 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>
References: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>
Message-ID: <20040802002437.GB26970@titus.home.puzzling.org>

On Sun, Aug 01, 2004, Sergio Trejo wrote:
> Thus, a book should be looked at as an investment with future returns
> beyond merely what the publisher and authors earn on cash flows from
> the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
> on, lets have some future vision.

All I intended to say was that anyone writing such a book would need to
be able to pay rent during its production. This is likely to be the case
even if they are gifted with future vision.

I can't speak for the people you named of course, it may be the case
that they are able to fund (or be funded) for the writing period,
assuming they wish to do so.

-Mary



From mailinglist at ltsai.com  Sun Aug  1 20:30:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 02 Aug 2004 08:30:36 +0800
Subject: [Twisted-Python] Re: Beginners Guide to Twisted Anywhere?
In-Reply-To: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
References: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
Message-ID: <cek1vc$78t$1@sea.gmane.org>

Serg,

That's totally right. I had the same problems when I started using 
Twisted a few days ago. Read and read the finger tutorial countless times.

Liming

Sergio Trejo wrote:
> Britt,
> 
> Your sentiments are another reminder as to why a book would be welcome!
> 
> Serg
> 
>> From: Britt Green <seamonkeys at gmail.com>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>> Date: Sun, 1 Aug 2004 14:22:54 -0700
>>
>> You know, I've looked at the finger tutorial a few times. The problem
>> is that it doesn't really explain the code very well. Sure, I can look
>> at the first few examples and make an educated guess. For example,
>> lets look at the second step:
>>
>> from twisted.internet import protocol, reactor
>> class FingerProtocol(protocol.Protocol):
>>     pass
>> class FingerFactory(protocol.ServerFactory):
>>     protocol = FingerProtocol
>> reactor.listenTCP(1079, FingerFactory())
>> reactor.run()
>>
>> The accompanying explaination never really explains what
>> protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>> been able to deduce what reactor.listenTCP() and reactor.run() do, but
>> as someone new to the language, its a bit frustrating to have to make
>> guesses about what the tutorial code does.
>>
>> Britt
>>
>> On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> 
>> wrote:
>> >
>> >
>> > Britt Green wrote:
>> > > I'm wondering if there exists a beginners guide to using Twisted.
>> > > Something similar to the online tutorial for Python. I've browsed the
>> > > docs on the Twisted website, and haven't been able to find what I'm
>> > > looking for. Specifically, a lot of the examples are mostly just code
>> > > with brief commentary which doesn't really explain things.
>> > >
>> > > Can someone help me out! :)
>> >
>> >    You may be interested in the finger tutorial:
>> >
>> >      http://twistedmatrix.com/documents/howto/tutorial/index
>> >
>> >    Jp
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _________________________________________________________________
> STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
> http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Sun Aug  1 20:35:03 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:35:03 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
Message-ID: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>

Has anyone (Bob ippolito?) successfully built the optional packages for 
Conch on Mac OS X? I run into Makefile problems when trying to build gmpy, 
PyPAM and pyshadow.

The MacPython package manager < http://undefined.org/python/pimp/ > which is 
referred to by Twisted for OS X doesn't include the optional packages.

The non-optional package (pycrypto) builds and installs just fine on OS X 
10.3.4

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From mary-twisted at puzzling.org  Sun Aug  1 20:42:22 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 10:42:22 +1000
Subject: [Twisted-Python] Re: Beginners Guide to Twisted Anywhere?
In-Reply-To: <cek1vc$78t$1@sea.gmane.org>
References: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
	<cek1vc$78t$1@sea.gmane.org>
Message-ID: <20040802004222.GC26970@titus.home.puzzling.org>

On Mon, Aug 02, 2004, Tsai Li Ming wrote:
> Serg,
> 
> That's totally right. I had the same problems when I started using 
> Twisted a few days ago. Read and read the finger tutorial countless times.

Do be sure to file docs bugs as per:
http://twistedmatrix.com/pipermail/twisted-python/2004-June/008071.html

-Mary



From serj_trejo at hotmail.com  Sun Aug  1 20:59:43 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:59:43 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>


>From: Mary Gardiner <mary-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 10:24:37 +1000
>
>On Sun, Aug 01, 2004, Sergio Trejo wrote:
> > Thus, a book should be looked at as an investment with future returns
> > beyond merely what the publisher and authors earn on cash flows from
> > the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
> > on, lets have some future vision.
>
>All I intended to say was that anyone writing such a book would need to
>be able to pay rent during its production. This is likely to be the case
>even if they are gifted with future vision.
>
>I can't speak for the people you named of course, it may be the case
>that they are able to fund (or be funded) for the writing period,
>assuming they wish to do so.
>
>-Mary

Mary, this an excellent question. I don't know the answer. I looked at 
Glyph's blog post again and he said that Alex Martelli was the person who 
nudged him about a book at OSCON a few days ago. Glyph says that Alex is an 
author of other O'Reilly books, so Alex knows the answers to these questions 
about funding the First Edition Twisted O'Reilly book (with Ghost Knife Fish 
as the animal on the front cover :) I found Alex's email address in the 
Twisted Matrix and cc'ed him because I think its a good time to rally around 
the genesis of the book. Really, the time has come.

The people at OSAF have made a decision to use Twisted for Chandler. I think 
this is HUGE. The father of Lotus Notes and his team doesn't make decisions 
haphazardly. I'll bet even they would love to see a book come out on Twisted 
by O'Reilly. Any comments Brian?

Thanks Britt and Liming for your comments today and sharing your experiences 
as a beginner. I just got started myself about a month ago. I'd also love to 
see animated diagrams using SVG and SMIL to show the *flow* of async aspects 
and abstracts associated with Twisted applications.

Glyph, you asked us to write you < 
http://www.livejournal.com/users/glyf/22637.html > , so I am doing as you 
requested!

Calling on Glyph, calling on Itamar, calling on Radix, calling on JP, et 
al!!!!

Serg

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From golux at comcast.net  Sun Aug  1 23:58:21 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 01 Aug 2004 23:58:21 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
References: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
Message-ID: <410DBBDD.2050100@comcast.net>

Sergio Trejo wrote:

> ... the First Edition Twisted O'Reilly book 
> (with Ghost Knife Fish as the animal on the front cover :) ...

+1 on Ghost Knife Fish as the animal on the front cover.  ;)
It looks great -- and appropriately exotic.  Great enthusiasm,
Sergio!  I'll be one of the first in line for the book, mostly
so I could lend it to other people ... but of course I'll make
them buy their own copy, too.  And I'll have to have one with
all the Twisted minions' autographs (which I won't lend out! ;).

Do we get a cool Twisted T-shirt with it?  OK, guess I'm getting
ahead of things ...

Cheers,
Steve



From jasper at peak.org  Mon Aug  2 00:38:51 2004
From: jasper at peak.org (Jasper Phillips)
Date: Sun, 1 Aug 2004 21:38:51 -0700 (PDT)
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040801234709.GA26455@titus.home.puzzling.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
Message-ID: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>


On Mon, 2 Aug 2004, Mary Gardiner wrote:

> On Sun, Aug 01, 2004, Sergio Trejo wrote:
> > What are the requirements for writing a book (besides time)?
> 
> You pitch to them as per:
> http://www.oreilly.com/oreilly/author/intro.html
> 
> I suppose the main other requirements are "writing ability", "technical
> ability" and last but not least, "money". I may be mistaken about this,
> but I doubt income from writing tech books is sufficient to live on.

For some people it is enough to live on, although you still need to survive
the initial starving artist stint.  There's also the potential for more
subtle compensation in the form of contacts, opened doors, and project
promotion -- which could easily be worth more than royalties.

It's true that there are alot of crappy technical books and many authors
make hardly anything.  However Twisted seems to me like it would buck that
trend -- I know I'd be interested in such a book if it were done well.

-Jasper




From glyph at divmod.com  Mon Aug  2 04:17:12 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 2 Aug 2004 04:17:12 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
Message-ID: <5B6D1122-E45C-11D8-87DB-000393C9700E@divmod.com>

On Aug 2, 2004, at 12:38 AM, Jasper Phillips wrote:

> For some people it is enough to live on, although you still need to 
> survive
> the initial starving artist stint.  There's also the potential for more
> subtle compensation in the form of contacts, opened doors, and project
> promotion -- which could easily be worth more than royalties.

The main difficulty that I'm aware of is that many of the principal 
Twisted contributors, myself included, are too busy to even spend much 
time on Twisted itself at the moment, let alone hacking on it, their 
other projects, and writing a book at the same time.

Thank you everyone, for all the enthusiasm, but I'm pretty sure there 
are a few projects in the works, at least one of which should result in 
a Twisted book.  I'd prefer to keep the discussion off-list in the 
future since I really don't know that I can say anything else about 
these projects except that at least some of them exist, somewhere.  
Feel free to drop me a line if you have the time and energy to 
contribute to a book, though.

Personally I'd like to see a Grue on the cover (as that is our official 
mascot) but the ghost knife fish sounds like an interesting animal if 
we have to stick to a real one.

By the way - please do not Cc: me on messages to this list - it's safe 
to assume I subscribe to it and read all the messages :).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/4e2eb3a2/attachment.pgp 

From tarlano at docomolab-euro.com  Mon Aug  2 04:24:43 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Mon, 02 Aug 2004 10:24:43 +0200
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be882040801142276bbec82@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
Message-ID: <410DFA4B.4000405@docomolab-euro.com>

If you can't figure out chapter 2, the (teaser) finger tutorial, then 
just skip it and go onto chapter 3 "Low-Level Twisted". And then chapter 
4 "High-Level Twisted", etc..

If you do, I pretty much guarantee that your opinion of the 
documentation will change. :)

Anthony


Britt Green wrote:

>You know, I've looked at the finger tutorial a few times. The problem
>is that it doesn't really explain the code very well. Sure, I can look
>at the first few examples and make an educated guess. For example,
>lets look at the second step:
>
>from twisted.internet import protocol, reactor
>class FingerProtocol(protocol.Protocol):
>    pass
>class FingerFactory(protocol.ServerFactory):
>    protocol = FingerProtocol
>reactor.listenTCP(1079, FingerFactory())
>reactor.run()
>
>The accompanying explaination never really explains what
>protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>been able to deduce what reactor.listenTCP() and reactor.run() do, but
>as someone new to the language, its a bit frustrating to have to make
>guesses about what the tutorial code does.
>
>Britt
>
>On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> wrote:
>  
>
>>Britt Green wrote:
>>    
>>
>>>I'm wondering if there exists a beginners guide to using Twisted.
>>>Something similar to the online tutorial for Python. I've browsed the
>>>docs on the Twisted website, and haven't been able to find what I'm
>>>looking for. Specifically, a lot of the examples are mostly just code
>>>with brief commentary which doesn't really explain things.
>>>
>>>Can someone help me out! :)
>>>      
>>>
>>   You may be interested in the finger tutorial:
>>
>>     http://twistedmatrix.com/documents/howto/tutorial/index
>>
>>   Jp
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>    
>>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>


-- 

____________________________________________________________
*Anthony Tarlano <mailto:tarlano at docomolab-euro.com>
*
*Senior Researcher - Future Networking Laboratory
DoCoMo Communications Laboratories Europe GmbH
Landsberger Strasse 308-312
80687 Munich, Germany
Tel: +49 89 56 824 212
Cell: +49 177 341 3758
*

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/9280578b/attachment.htm 

From eugen at leitl.org  Mon Aug  2 05:02:03 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Mon, 2 Aug 2004 11:02:03 +0200
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
Message-ID: <20040802090203.GO1400@leitl.org>

On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:

> It's true that there are alot of crappy technical books and many authors
> make hardly anything.  However Twisted seems to me like it would buck that
> trend -- I know I'd be interested in such a book if it were done well.

If chief developers don't have time to work on Twisted, could a donation fund
help? (Nevermind the book, just for development). I see there's no PayPal 
donate button on the main page nor in the documentation.

I understand Bittorrent only started attracting donations when that button got
enough eyeballage.

Just a thought,

-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/04cafcc1/attachment.pgp 

From radeex at gmail.com  Mon Aug  2 05:29:52 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 2 Aug 2004 05:29:52 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040802090203.GO1400@leitl.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
Message-ID: <60ed19d4040802022962a9721c@mail.gmail.com>

On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> If chief developers don't have time to work on Twisted, could a donation fund
> help? (Nevermind the book, just for development). I see there's no PayPal
> donate button on the main page nor in the documentation.
> 
> I understand Bittorrent only started attracting donations when that button got
> enough eyeballage.

Well, setting up a single paypal account that would distribute to all
the developers would be useless and/or too much of a hassle to set up,
but maybe we could have a page listing Twisted developers, what parts
they maintain, and their individual Paypal buttons?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From matt at pollenation.net  Mon Aug  2 06:37:41 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 02 Aug 2004 11:37:41 +0100
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <60ed19d4040802022962a9721c@mail.gmail.com>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
	<60ed19d4040802022962a9721c@mail.gmail.com>
Message-ID: <1091443060.28243.20.camel@harold>

On Mon, 2004-08-02 at 10:29, Christopher Armstrong wrote:
> On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> > If chief developers don't have time to work on Twisted, could a donation fund
> > help? (Nevermind the book, just for development). I see there's no PayPal
> > donate button on the main page nor in the documentation.
> > 
> > I understand Bittorrent only started attracting donations when that button got
> > enough eyeballage.
> 
> Well, setting up a single paypal account that would distribute to all
> the developers would be useless and/or too much of a hassle to set up,
> but maybe we could have a page listing Twisted developers, what parts
> they maintain, and their individual Paypal buttons?

Perhaps the time has come for the Twisted Software Foundation and
$40,000 grants. ;-)

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From kwhitesell at adelphia.net  Mon Aug  2 08:49:18 2004
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Mon, 02 Aug 2004 08:49:18 -0400
Subject: [Twisted-Python] Introduction to Twisted
In-Reply-To: <E1BrQj6-0001Cl-01@pyramid.twistedmatrix.com>
References: <E1BrQj6-0001Cl-01@pyramid.twistedmatrix.com>
Message-ID: <410E384E.10408@adelphia.net>

Britt,

	I too am new to Twisted, and am climbing the same learning curve.

	I may or may not be able to help you with your specific questions. 
(I've only been using Twisted for a month.) But I can share some 
thoughts on the subject.

	First, the most helpful thing to me was actually printing the book.pdf 
file in the howto directory. There _is_ something special about having a 
physical copy to flip through at odd times when I'm not sitting at the 
computer. I personally find that for something as new to me as Twisted 
was, I have to read _everything_ three times before _any_ of it begins 
to make sense.

	The second was to have a specific project in mind when getting started. 
I know where I'm headed, so everything I'm looking at is being 
approached from that direction. I know _what_ I'm trying to do, I just 
need to figure out _how_.

	Third, and finally, there are still a number of things I take on faith, 
or just consider it magic. In other words, I don't care about 
understanding how it works at this time. If I need to include certain 
lines of code in my program to make it work, then I include them, and 
don't worry about what they do. I only really get concerned if it 
doesn't do what I need it to, then I start figuring out what to change.

	What I have found, particularly with Python, is that when the 
documentation falls short, I go into the source code itself.

For example, you wrote:

> The accompanying explaination never really explains what
> protocol.Protocol is. Same thing with protocol.ServerFactory. I've
> been able to deduce what reactor.listenTCP() and reactor.run() do, but
> as someone new to the language, its a bit frustrating to have to make
> guesses about what the tutorial code does.

Now, what I can find in the documentation is found in sections 3.3 and 
3.4 of the book.pdf file, pages 99-105. But, if I wanted to go deeper...

The class Protocol is defined in the protocol.py file, as is 
ServerFactory. Following the inheritance chain through the various 
implementations can be confusing, but is ultimately the definitive 
source of information.

Ken




From linuxlist at roggeroetortia.it  Mon Aug  2 10:20:03 2004
From: linuxlist at roggeroetortia.it (Alessandro Barchi)
Date: Mon, 2 Aug 2004 16:20:03 +0200
Subject: [Twisted-Python] nevow Examples 2004 - example1 not work
Message-ID: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>


Hi,

I try to use (and above all) understanding
this framework.

I've a debian stable base installation,

this are the package installed:
ii  python2.3      2.3.4-5        An interactive high-level object-oriented
la
ii  python2.3-nevo 0.2.0-2        Web application templating system for
Python
ii  python2.3-twis 1.3.0-2        Event-based framework for internet
applicati
ii  python2.3-twis 1.3.0-2        Event-based framework for internet
applicati

I dowloaded NevowExamples_2004.zip
when try the example1 i have this error:

********************************************
mail:/home/alex/nevow_samples/Example1# twistd -noy sched.tac
2004/08/02 15:29 CEST [-] Log opened.
2004/08/02 15:29 CEST [-] twistd 1.3.0rc1 (/usr/bin/python2.3 2.3.4)
starting up
2004/08/02 15:29 CEST [-] reactor class:
twisted.internet.default.SelectReactor
2004/08/02 15:29 CEST [-] Loading sched.tac...
2004/08/02 15:29 CEST [-] Traceback (most recent call last):
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 118, in
getApplication
2004/08/02 15:29 CEST [-]     application =
service.loadApplication(filename, style, passphrase)
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/application/service.py", line 319,
in loadApplication
2004/08/02 15:29 CEST [-]     application = sob.loadValueFromFile(filename,
'application', passphrase)
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in
loadValueFromFile
2004/08/02 15:29 CEST [-]     exec data in d, d
2004/08/02 15:29 CEST [-]   File "<string>", line 3, in ?
2004/08/02 15:29 CEST [-] ImportError: No module named schedule
2004/08/02 15:29 CEST [-] Failed to load application: No module named
schedule
2004/08/02 15:29 CEST [-] Traceback (most recent call last):
          File "/usr/bin/twistd", line 36, in ?
            run()
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 184, in run
            app.run(runApp, ServerOptions)
          File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 205, in
run
            runApp(config)
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 174, in runApp
            application = app.getApplication(config, passphrase)
        --- <exception caught here> ---
          File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 118, in
getApplication
            application = service.loadApplication(filename, style,
passphrase)
          File
"/usr/lib/python2.3/site-packages/twisted/application/service.py", line 319,
in loadApplication
            application = sob.loadValueFromFile(filename, 'application',
passphrase)
          File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py",
line 213, in loadValueFromFile
            exec data in d, d
          File "<string>", line 3, in ?

        exceptions.ImportError: No module named schedule


Failed to load application: No module named schedule
2004/08/02 15:29 CEST [-]
********************************************

where I wrong??

Bye

A. Barchi

barchi at roggeroetortia.it

barchi at roggeroetortia.it

  Poligrafico_Roggero_&_Tortia S.p.A.
------------------------------------------
Via Frejus 5 - 10092 Beinasco TO Italy
Tel. +390113499222 - Fax +39 0113498866




From tv at twistedmatrix.com  Mon Aug  2 10:36:15 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 02 Aug 2004 17:36:15 +0300
Subject: [Twisted-Python] nevow Examples 2004 - example1 not work
In-Reply-To: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>
References: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>
Message-ID: <410E515F.4050900@twistedmatrix.com>

In the future, please use the twisted-web mailing list for things 
related to web programming.

Alessandro Barchi wrote:
> mail:/home/alex/nevow_samples/Example1# twistd -noy sched.tac
...
 >         exceptions.ImportError: No module named schedule

"#", eh? Don't be root, root doesn't get . in his PYTHONPATH.

Also, don't be root because that's stupid.



From foom at fuhm.net  Mon Aug  2 11:08:24 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 2 Aug 2004 11:08:24 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040802090203.GO1400@leitl.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
Message-ID: <CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>


On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:

> On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>
>> It's true that there are alot of crappy technical books and many 
>> authors
>> make hardly anything.  However Twisted seems to me like it would buck 
>> that
>> trend -- I know I'd be interested in such a book if it were done well.
>
> If chief developers don't have time to work on Twisted, could a 
> donation fund
> help? (Nevermind the book, just for development). I see there's no 
> PayPal
> donate button on the main page nor in the documentation.
>
> I understand Bittorrent only started attracting donations when that 
> button got
> enough eyeballage.
>
> Just a thought,

I doubt that would help much. Most twisted developers are employed 
[many by divmod. bad divmod, stealing all the twisted developers! ;)], 
and thus, spend most of the time writing code for their employer rather 
than twisted. Of course, both overlap sometimes, which is always good. 
A donations button seems like it would only make sense if people 
contributed a large enough amount of money to coerce someone who is 
employed to cease being, and work on twisted more, instead. That seems 
unlikely. Perhaps others feel differently about it, though.

James




From bob at redivi.com  Mon Aug  2 13:17:38 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 2 Aug 2004 13:17:38 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
In-Reply-To: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>
References: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>
Message-ID: <DAD877B6-E4A7-11D8-B47B-000A95686CD8@redivi.com>


On Aug 1, 2004, at 8:35 PM, Sergio Trejo wrote:

> Has anyone (Bob ippolito?) successfully built the optional packages 
> for Conch on Mac OS X? I run into Makefile problems when trying to 
> build gmpy, PyPAM and pyshadow.

I'm 95% sure that PyPAM and 100% sure that pyshadow aren't at all 
applicable to OS X.  Have not tried gmpy, but it looks like it's in 
DarwinPorts; http://py-gmpy.darwinports.com/

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/aa9e303c/attachment.bin 

From bob at redivi.com  Mon Aug  2 13:23:03 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 2 Aug 2004 13:23:03 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
	<CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <9CB87340-E4A8-11D8-B47B-000A95686CD8@redivi.com>


On Aug 2, 2004, at 11:08 AM, James Y Knight wrote:

>
> On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:
>
>> On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>>
>>> It's true that there are alot of crappy technical books and many 
>>> authors
>>> make hardly anything.  However Twisted seems to me like it would 
>>> buck that
>>> trend -- I know I'd be interested in such a book if it were done 
>>> well.
>>
>> If chief developers don't have time to work on Twisted, could a 
>> donation fund
>> help? (Nevermind the book, just for development). I see there's no 
>> PayPal
>> donate button on the main page nor in the documentation.
>>
>> I understand Bittorrent only started attracting donations when that 
>> button got
>> enough eyeballage.
>>
>> Just a thought,
>
> I doubt that would help much. Most twisted developers are employed 
> [many by divmod. bad divmod, stealing all the twisted developers! ;)], 
> and thus, spend most of the time writing code for their employer 
> rather than twisted. Of course, both overlap sometimes, which is 
> always good. A donations button seems like it would only make sense if 
> people contributed a large enough amount of money to coerce someone 
> who is employed to cease being, and work on twisted more, instead. 
> That seems unlikely. Perhaps others feel differently about it, though.

Well it could be used in the same way that other open source projects 
use their money.  Sponsoring hackathons, grants for specific 
development, etc.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/9095f597/attachment.bin 

From bkirsch at osafoundation.org  Mon Aug  2 13:34:34 2004
From: bkirsch at osafoundation.org (Brian Kirsch)
Date: Mon, 2 Aug 2004 10:34:34 -0700
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
References: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
Message-ID: <38141914-E4AA-11D8-9741-000A95CA1ECC@osafoundation.org>

Sergio,
I would love to see a book on Twisted that covers basic to advanced 
topics. When I first started working with Twisted, I found that initial 
period to be a bit difficult and having had a well written book would 
have made a difference.

I know Brian Warner (warner at lothar.com) was also talking about 
producing a Twisted book. You may wanna contact him as well.


Good luck!

Brian Kirsch - Email Framework Engineer
Open Source Applications Foundation
543 Howard St. 5th Floor?
San Francisco, CA 94105?
(415) 946-3056?

On Aug 1, 2004, at 5:59 PM, Sergio Trejo wrote:

>
>> From: Mary Gardiner <mary-twisted at puzzling.org>
>> Reply-To: Twisted general discussion 
>> <twisted-python at twistedmatrix.com>
>> To: twisted-python at twistedmatrix.com
>> Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>> Date: Mon, 2 Aug 2004 10:24:37 +1000
>>
>> On Sun, Aug 01, 2004, Sergio Trejo wrote:
>> > Thus, a book should be looked at as an investment with future 
>> returns
>> > beyond merely what the publisher and authors earn on cash flows from
>> > the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
>> > on, lets have some future vision.
>>
>> All I intended to say was that anyone writing such a book would need 
>> to
>> be able to pay rent during its production. This is likely to be the 
>> case
>> even if they are gifted with future vision.
>>
>> I can't speak for the people you named of course, it may be the case
>> that they are able to fund (or be funded) for the writing period,
>> assuming they wish to do so.
>>
>> -Mary
>
> Mary, this an excellent question. I don't know the answer. I looked at 
> Glyph's blog post again and he said that Alex Martelli was the person 
> who nudged him about a book at OSCON a few days ago. Glyph says that 
> Alex is an author of other O'Reilly books, so Alex knows the answers 
> to these questions about funding the First Edition Twisted O'Reilly 
> book (with Ghost Knife Fish as the animal on the front cover :) I 
> found Alex's email address in the Twisted Matrix and cc'ed him because 
> I think its a good time to rally around the genesis of the book. 
> Really, the time has come.
>
> The people at OSAF have made a decision to use Twisted for Chandler. I 
> think this is HUGE. The father of Lotus Notes and his team doesn't 
> make decisions haphazardly. I'll bet even they would love to see a 
> book come out on Twisted by O'Reilly. Any comments Brian?
>
> Thanks Britt and Liming for your comments today and sharing your 
> experiences as a beginner. I just got started myself about a month 
> ago. I'd also love to see animated diagrams using SVG and SMIL to show 
> the *flow* of async aspects and abstracts associated with Twisted 
> applications.
>
> Glyph, you asked us to write you < 
> http://www.livejournal.com/users/glyf/22637.html > , so I am doing as 
> you requested!
>
> Calling on Glyph, calling on Itamar, calling on Radix, calling on JP, 
> et al!!!!
>
> Serg
>
> _________________________________________________________________
> Tired of spam? Get advanced junk mail protection with MSN 8. 
> http://join.msn.com/?page=features/junkmail
>




From serj_trejo at hotmail.com  Mon Aug  2 13:41:40 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:41:40 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F26huAOyvuga700045d8d@hotmail.com>


>From: Stephen Waterbury <golux at comcast.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Sun, 01 Aug 2004 23:58:21 -0400
>
>Sergio Trejo wrote:
>
>>... the First Edition Twisted O'Reilly book (with Ghost Knife Fish as the 
>>animal on the front cover :) ...
>
>+1 on Ghost Knife Fish as the animal on the front cover.  ;)
>It looks great -- and appropriately exotic.  Great enthusiasm,
>Sergio!  I'll be one of the first in line for the book, mostly
>so I could lend it to other people ... but of course I'll make
>them buy their own copy, too.  And I'll have to have one with
>all the Twisted minions' autographs (which I won't lend out! ;).

Thanks Steve for the additional enthusiasm. I am biased because I used to 
have a Ghost Knife fish and it would eat from my hand, and the mystery of 
this special creature coming from the Amazon River Basin, plus its 
exoticness would really make for an excellent O'Reilly animal on the front 
cover of the forthcoming book!

Cheers,

Serg

>
>Do we get a cool Twisted T-shirt with it?  OK, guess I'm getting
>ahead of things ...
>
>Cheers,
>Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 13:45:42 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:45:42 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F10ohteCtGobe00045b69@hotmail.com>

A foundation is a great idea. If Apache can do it, Twisted can do it!

>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: radix at twistedmatrix.com,Twisted general discussion 
><twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 02 Aug 2004 11:37:41 +0100
>
>On Mon, 2004-08-02 at 10:29, Christopher Armstrong wrote:
> > On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> > > If chief developers don't have time to work on Twisted, could a 
>donation fund
> > > help? (Nevermind the book, just for development). I see there's no 
>PayPal
> > > donate button on the main page nor in the documentation.
> > >
> > > I understand Bittorrent only started attracting donations when that 
>button got
> > > enough eyeballage.
> >
> > Well, setting up a single paypal account that would distribute to all
> > the developers would be useless and/or too much of a hassle to set up,
> > but maybe we could have a page listing Twisted developers, what parts
> > they maintain, and their individual Paypal buttons?
>
>Perhaps the time has come for the Twisted Software Foundation and
>$40,000 grants. ;-)
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 13:49:52 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:49:52 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>


>From: James Y Knight <foom at fuhm.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 11:08:24 -0400
>
>
>On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:
>
>>On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>>
>>>It's true that there are alot of crappy technical books and many authors
>>>make hardly anything.  However Twisted seems to me like it would buck 
>>>that
>>>trend -- I know I'd be interested in such a book if it were done well.
>>
>>If chief developers don't have time to work on Twisted, could a donation 
>>fund
>>help? (Nevermind the book, just for development). I see there's no PayPal
>>donate button on the main page nor in the documentation.
>>
>>I understand Bittorrent only started attracting donations when that button 
>>got
>>enough eyeballage.
>>
>>Just a thought,
>
>I doubt that would help much. Most twisted developers are employed [many by 
>divmod. bad divmod, stealing all the twisted developers! ;)], and thus, 
>spend most of the time writing code for their employer rather than twisted. 
>Of course, both overlap sometimes, which is always good. A donations button 
>seems like it would only make sense if people contributed a large enough 
>amount of money to coerce someone who is employed to cease being, and work 
>on twisted more, instead. That seems unlikely. Perhaps others feel 
>differently about it, though.
>
>James

Well, perhaps Divmod and OSAF and other commercial entities could together 
start a Twisted Foundation? Let us not forget that the core element that we 
all want to share in is Twisted. As an example, Divmod might be a separate 
company with separate employees (and perhaps Divmod makes its money from 
consulting -- I don't know, I'm just guessing), but then there's also Mitch 
Kapor's group (OSAF) using Twisted Chandler. And there are others who want 
to share Twisted, so it is in everybody's best interest to keep improving 
Twisted.

Serg

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Mon Aug  2 13:53:17 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:53:17 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
Message-ID: <BAY12-F463RNpggkzpB00045d5e@hotmail.com>


>I'm 95% sure that PyPAM and 100% sure that pyshadow aren't at all 
>applicable to OS X.  Have not tried gmpy, but it looks like it's in 
>DarwinPorts; http://py-gmpy.darwinports.com/
>
>-bob

Thanks Bob for the heads up. I wasn't aware that the two aforementioned 
aren't applicable to OS X. I did try gmpy based on  gmp 4 that I had pulled 
down via Fink, but gmpy make files were not happy. I guess all three are not 
needed for conch on OS X so I'll give conch a whirl with just pycrypto.

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From tim.stebbing at nunatak.com.au  Tue Aug  3 05:29:19 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Tue, 03 Aug 2004 19:29:19 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
References: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
Message-ID: <410F5AEF.9010503@nunatak.com.au>

A Foundation is just that, a -foundation-, for building ontop of. Look 
at the Mozilla foundation; they provide a base framework, and support a 
multitude of applications built with it. Look at the apache foundation, 
they are an edge case, but there we see a group of apps that are built 
loosly around a theme, the apache web services.

I guess the point I'm trying to make is that a Twisted foundation would 
need the capacity to support this sort of community of related projects, 
with the twisted framework as the basic premise for all projects.

I personally think its a great idea, I have stuff I'd love to contribute 
once finished, which do not make sense in terms of being added to the 
twisted framework, in the same way divmod produce associated software, 
Im sure alot of you do too.

However I can't see any form of foundation framework (web based) or 
people to manage it just appearing as if by magic, as Glyph said noone 
has the time anymore.

I think what is being asked for are bounties? If you have something you 
would like to see implemented, rather than donate to a slush fund, offer 
a bounty to the first person to deliver. Perhaps there could be a bounty 
board? ie:

who | what?                                      | how much?
----+--------------------------------------------+-------------
tjs | I'd like to see xml-rpc basic auth support | $300 USD *

There is nothing stopping bounty and foundation ideas from going ahead, 
other than time and energy.

I imagine that reading this email, and the ones prior, there will be 
about 50+ people nodding their heads in agreement, and then thinking "It 
would be great, but I'm not going to take the time to set that all up, 
I'm to busy"

I also imagine, if someone was to take the time to think this through, 
write up some nevow frontend for a twisted foundation and get it all 
going, noone would object to having it hosted under the twisted banner.

so to those of you most vocal on this topic, I suggest you stop 
pontificating and get your hacking gloves on  :)

-tjs

* This is not an offer ;)

-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><



From mailinglist at ltsai.com  Mon Aug  2 20:40:22 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Tue, 03 Aug 2004 08:40:22 +0800
Subject: [Twisted-Python] internet.TCPServer interface
Message-ID: <cemmtr$lvi$1@sea.gmane.org>

Hi,

How do I bind the port number to a specific interface?

application = service.Application('Core')
sc = service.IServiceCollection(application)
internet.TCPServer('7001', myFactory()).setServiceParent(sc)

Liming




From glyph at divmod.com  Mon Aug  2 21:17:11 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 2 Aug 2004 21:17:11 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
References: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
Message-ID: <D8B1F83A-E4EA-11D8-87DB-000393C9700E@divmod.com>


On Aug 2, 2004, at 1:49 PM, Sergio Trejo wrote:

> Well, perhaps Divmod and OSAF and other commercial entities could 
> together start a Twisted Foundation?

Divmod is a for-profit company.  OSAF is a charity already.  They're 
not both commercial entities.

Divmod is already contributing hugely to Twisted's development by 
keeping everyone who works on it employed in a related role.  Pretty 
much all the IMAP support in Twisted was written on-the-clock for 
Divmod.

> Let us not forget that the core element that we all want to share in 
> is Twisted.

I'm not sure who "we" are here, or what "core" means :)

> As an example, Divmod might be a separate company with separate 
> employees

Separate from whom?

> (and perhaps Divmod makes its money from consulting -- I don't know, 
> I'm just guessing),

This would be just about my worst nightmare :).  Divmod makes its money 
by providing a service directly to consumers, as described at 
http://www.divmod.com.

> but then there's also Mitch Kapor's group (OSAF) using Twisted 
> Chandler. And there are others who want to share Twisted, so it is in 
> everybody's best interest to keep improving Twisted.

We're already doing that now.  What would a Twisted foundation offer 
that's better than the current situation?  There is a significant cost 
to set up a foundation in the first place, remember.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040802/eca6d098/attachment.pgp 

From serj_trejo at hotmail.com  Mon Aug  2 23:05:04 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 23:05:04 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>


>From: Glyph Lefkowitz <glyph at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 21:17:11 -0400
>
>
>On Aug 2, 2004, at 1:49 PM, Sergio Trejo wrote:
>
>>Well, perhaps Divmod and OSAF and other commercial entities could together 
>>start a Twisted Foundation?
>
>Divmod is a for-profit company.  OSAF is a charity already.  They're not 
>both commercial entities.

OSAF is a not-for-profit artificial person born in the U.S. sovereign 
territory as a 501c(3). However, let there by no illusion, as money will be 
streamed by other artificial persons (perhaps created by Kapor and/or 
colleagues and/or anyone and their mother who cares to for that matter) whom 
will make use of the produce birthed under the auspices of OSAF, very 
specifically:

-------------------------------------------------------------------------------------------
http://www.osafoundation.org/OSAF_history.htm

Why a non-profit? Mitch, the successful entrepreneur and venture capitalist, 
had not all of a sudden ceased to believe in the virtues of capitalism. 
Rather, he wanted to make a clear statement: the intent of this effort was 
not to use this as a vehicle to make more money for himself. However, he 
would be very happy for others to make money and intended to find a 
licensing scheme which would permit both non-commercial and commercial 
development on the code base.
-------------------------------------------------------------------------------------------

Thus, the foundations of Divmod and OSAF may be different, but capitalism 
prevails in both scenarios even though each artificial person is not a 
Foundation entity.

>Divmod is already contributing hugely to Twisted's development by keeping 
>everyone who works on it employed in a related role.

It is truly a great thing that Divmod's employees have continued to improve 
Twisted on the Divmod clock. But isn't that part of the deal of the LGPL?

And what about others who are not in the tight circles of the Divmod LLC? Is 
Radix an employee of Divmod? Didn't his blog state today that he's moving to 
Australia soon? Is Radix not a significant contributor to Twisted? What 
about the venerable Bob Ippolito? Who else has contributed significantly to 
Twisted who is not a Divmod employee?

>Pretty much all the IMAP support in Twisted was written on-the-clock for 
>Divmod.

That would be Jp?

>
>>Let us not forget that the core element that we all want to share in is 
>>Twisted.
>
>I'm not sure who "we" are here, or what "core" means :)

Class TwistedGlobalCommunity(HumansInAllTerritoriesOnEarthNotJustAmerica):
     def __init__(self):
        self.we = "The Twisted Community"
        self.core = "from twisted import *"

:-)

>
>>As an example, Divmod might be a separate company with separate employees
>
>Separate from whom?

Ummm, isn't it possible for Foundations as parent artificial persons to fill 
slots in the form of employment of humans? I coudl be wrong, but doesn't 
Mozilla and Apache Foundations employee people?

>
>>(and perhaps Divmod makes its money from consulting -- I don't know, I'm 
>>just guessing),
>
>This would be just about my worst nightmare :).  Divmod makes its money by 
>providing a service directly to consumers, as described at 
>http://www.divmod.com.

Cool. There would be zero conflict of interest between Divmod and a Twisted 
Foundation.

>
>>but then there's also Mitch Kapor's group (OSAF) using Twisted Chandler. 
>>And there are others who want to share Twisted, so it is in everybody's 
>>best interest to keep improving Twisted.
>
>We're already doing that now.  What would a Twisted foundation offer that's 
>better than the current situation?

A Declaration of Independence. The Apache Foundation does not prevent other 
companies that contribute to the Apache Foundation from making money and 
having a comfortable living. I don't see why a Twisted Foundation would be 
any different, if done correctly.

>There is a significant cost to set up a foundation in the first place, 
>remember.

How much dinero to python setup.py TwistedFoundation install?

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 23:45:26 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 23:45:26 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>

Tim,

Thanks for some well thought ideas and comments. I'm vocal and I'm 
interested. And my gloves on the keyboard are busy such that my brain can 
grok as much of Twisted as possible. If only I could just plug into the 
Matrix and grok it all in one fell swoop! :-)  I'm learning atop lately, and 
then its on to nevow.

Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you a Nevow 
maestro?) who is willing to collaborate such that we can get the Twisted 
Foundation into motion along the lines of what Tim has suggested? Tim, would 
you be up for helping out in some form or another? Hey, I bet we could get 
some ideas and suggestions from Mitch Kapor's group since they are going to 
be using Twisted and would probably like to see its Declaration of 
Independence. Or maybe someone from Mozilla or Apache can give us some ideas 
of what to do and what not to do since they've been through the trials and 
tribulations of Foundation genesis.

Oh yes, and another thought -- what about the company Zoteca in New York 
City? Surely they would be interested in a Twisted Foundation, no?

One of the great things about having a Foundation is that it doesn't have to 
keep secrets. It is truly open and there are no hidden cards in the deck. At 
the same time, anyone is free to birth artificial persons in any territory 
on Earth who then can utilize the Foundation but also contribute back to it. 
This is why Twisted needs a Declaration of Independence IMHO. I see no 
reason why *not* to create a Twisted Foundation for the benefit of 
humankind.

Imagine, a kid in Africa who has access to the 'Net who is learning computer 
science could participate in the Twisted Foundation and contribute something 
really cool, such as a new protocol, to the code base. Or some child in 
Thailand could use Twisted's Perspective Broker and Nevow to create some 
really neat 'net-based agriculture Web service for the farmers and hill 
tribe people in northeast agricultural Thailand (where Internet cafes 
continue to sprout up). And of course really cool apps and services could be 
created by the whiz gurus in the more modernized countries at the same time.

A Foundation is a self serving entity whose goal is to survive independent 
of any others who make use of it. A Foundation owes nothing to no one, and 
can not be held hostage by anyone. Foundations are good for humanity. 
Foundations have need not retain secrets. Foundations do not impose 
detriment on others. I can't imagine a world without Apache (yikes, we'd all 
be forced to using Microsoft's IIS Web Server).

Any further comments, ideas, brainstorms, suggestions?

Serg

>From: Tim Stebbing <tim.stebbing at nunatak.com.au>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Tue, 03 Aug 2004 19:29:19 +1000
>
>A Foundation is just that, a -foundation-, for building ontop of. Look at 
>the Mozilla foundation; they provide a base framework, and support a 
>multitude of applications built with it. Look at the apache foundation, 
>they are an edge case, but there we see a group of apps that are built 
>loosly around a theme, the apache web services.
>
>I guess the point I'm trying to make is that a Twisted foundation would 
>need the capacity to support this sort of community of related projects, 
>with the twisted framework as the basic premise for all projects.
>
>I personally think its a great idea, I have stuff I'd love to contribute 
>once finished, which do not make sense in terms of being added to the 
>twisted framework, in the same way divmod produce associated software, Im 
>sure alot of you do too.
>
>However I can't see any form of foundation framework (web based) or people 
>to manage it just appearing as if by magic, as Glyph said noone has the 
>time anymore.
>
>I think what is being asked for are bounties? If you have something you 
>would like to see implemented, rather than donate to a slush fund, offer a 
>bounty to the first person to deliver. Perhaps there could be a bounty 
>board? ie:
>
>who | what?                                      | how much?
>----+--------------------------------------------+-------------
>tjs | I'd like to see xml-rpc basic auth support | $300 USD *
>
>There is nothing stopping bounty and foundation ideas from going ahead, 
>other than time and energy.
>
>I imagine that reading this email, and the ones prior, there will be about 
>50+ people nodding their heads in agreement, and then thinking "It would be 
>great, but I'm not going to take the time to set that all up, I'm to busy"
>
>I also imagine, if someone was to take the time to think this through, 
>write up some nevow frontend for a twisted foundation and get it all going, 
>noone would object to having it hosted under the twisted banner.
>
>so to those of you most vocal on this topic, I suggest you stop 
>pontificating and get your hacking gloves on  :)
>
>-tjs
>
>* This is not an offer ;)
>
>--
>(o_   Timothy Stebbing, Pythonista, Nunatak Systems
>//\    03 6226 6259, tim.stebbing at nunatak.com.au
>V_/_  ><>--------------------------------------<><
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From seamonkeys at gmail.com  Tue Aug  3 00:07:22 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Mon, 2 Aug 2004 21:07:22 -0700
Subject: [Twisted-Python] To thread or not to thread...
Message-ID: <305be882040802210750f26fab@mail.gmail.com>

I've been reading some of the online documentation for Twisted, and
I'm slowly starting to grasp different things. However, I could use
some help with one point. Suppose I was coding up a chat server, or
perhaps a MUD. Would I need to use something threaded, as opposed to
just using reactor.run()? Or would the latter be sufficient?

Thanks!

Britt



From andrew-twisted at puzzling.org  Tue Aug  3 00:38:43 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 3 Aug 2004 14:38:43 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
References: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
Message-ID: <20040803043843.GA15943@frobozz>

On Mon, Aug 02, 2004 at 11:05:04PM -0400, Sergio Trejo wrote:
[...]
> And what about others who are not in the tight circles of the Divmod LLC? 
> Is Radix an employee of Divmod? Didn't his blog state today that he's 
> moving to Australia soon? Is Radix not a significant contributor to 
> Twisted? What about the venerable Bob Ippolito? Who else has contributed 
> significantly to Twisted who is not a Divmod employee?

The CREDITS file lists most of the significant contributors.

http://svn.twistedmatrix.com/cvs/tags/release-1.3.0/CREDITS?view=auto&rev=10716&root=Twisted

-Andrew.




From foom at fuhm.net  Tue Aug  3 00:43:24 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 3 Aug 2004 00:43:24 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
Message-ID: <A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>


On Aug 2, 2004, at 11:45 PM, Sergio Trejo wrote:
> Imagine, a kid in Africa who has access to the 'Net who is learning 
> computer science could participate in the Twisted Foundation and 
> contribute something really cool, such as a new protocol, to the code 
> base. Or some child in Thailand could use Twisted's Perspective Broker 
> and Nevow to create some really neat 'net-based agriculture Web 
> service for the farmers and hill tribe people in northeast 
> agricultural Thailand (where Internet cafes continue to sprout up). 
> And of course really cool apps and services could be created by the 
> whiz gurus in the more modernized countries at the same time.

Why can't that happen without a Twisted Foundation? Anyone can sign up 
to these here mailing lists, download the source code, improve it, and 
contribute their improvements back. Or make a Really Awesome 
Application(tm) using Twisted, and announce its awesomeness here.

James




From mary-twisted at puzzling.org  Tue Aug  3 00:48:27 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 3 Aug 2004 14:48:27 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040803043843.GA15943@frobozz>
References: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
	<20040803043843.GA15943@frobozz>
Message-ID: <20040803044827.GA12815@titus.home.puzzling.org>

On Tue, Aug 03, 2004, Andrew Bennetts wrote:
> The CREDITS file lists most of the significant contributors.

If I remember the CVS commit statistics right, cce is the most notable
contributor who isn't in that list. Are there SVN commit statistics now?

-Mary



From tim.stebbing at nunatak.com.au  Tue Aug  3 10:50:42 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Wed, 04 Aug 2004 00:50:42 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
Message-ID: <410FA642.3020406@nunatak.com.au>

Sergio Trejo wrote:
> Tim,
> 
> Thanks for some well thought ideas and comments. I'm vocal and I'm 
> interested. And my gloves on the keyboard are busy such that my brain 
> can grok as much of Twisted as possible. If only I could just plug into 
> the Matrix and grok it all in one fell swoop! :-)  I'm learning atop 
> lately, and then its on to nevow.
> 
> Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you a 
> Nevow maestro?) who is willing to collaborate such that we can get the 
> Twisted Foundation into motion along the lines of what Tim has 
> suggested? Tim, would you be up for helping out in some form or another? 
> Hey, I bet we could get some ideas and suggestions from Mitch Kapor's 
> group since they are going to be using Twisted and would probably like 
> to see its Declaration of Independence. Or maybe someone from Mozilla or 
> Apache can give us some ideas of what to do and what not to do since 
> they've been through the trials and tribulations of Foundation genesis.
> 
> Oh yes, and another thought -- what about the company Zoteca in New York 
> City? Surely they would be interested in a Twisted Foundation, no?
>

Mate, are you any of these people? are you Mary? or Tim? or a member of 
the Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or 
Zoteca, whoever they are?

You can't publically suggest our involvement in your dream, its just not 
very polite, to say the least. Or do you think to excite us into action?

My last email was possibly taken out of context, I was suggesting that I 
didn't oppose you going off and doing these things, some of which I 
didn't think where bad ideas, but you cant expect any help for free, 
Noone else is interested, or seems to see a need.


> One of the great things about having a Foundation is that it doesn't 
> have to keep secrets. It is truly open and there are no hidden cards in 
> the deck. At the same time, anyone is free to birth artificial persons 
> in any territory on Earth who then can utilize the Foundation but also 
> contribute back to it. This is why Twisted needs a Declaration of 
> Independence IMHO. I see no reason why *not* to create a Twisted 
> Foundation for the benefit of humankind.
> 
> Imagine, a kid in Africa who has access to the 'Net who is learning 
> computer science could participate in the Twisted Foundation and 
> contribute something really cool, such as a new protocol, to the code 
> base. Or some child in Thailand could use Twisted's Perspective Broker 
> and Nevow to create some really neat 'net-based agriculture Web service 
> for the farmers and hill tribe people in northeast agricultural Thailand 
> (where Internet cafes continue to sprout up). And of course really cool 
> apps and services could be created by the whiz gurus in the more 
> modernized countries at the same time.
> 
> A Foundation is a self serving entity whose goal is to survive 
> independent of any others who make use of it. A Foundation owes nothing 
> to no one, and can not be held hostage by anyone. Foundations are good 
> for humanity. Foundations have need not retain secrets. Foundations do 
> not impose detriment on others. I can't imagine a world without Apache 
> (yikes, we'd all be forced to using Microsoft's IIS Web Server).
> 

I seriously think you have missed the point. Nothing procludes anyones 
involvment in twisted, its LGPL, and the core developers, let alone the 
ancilliary ones are from all walks of life/regions of the globe.

> Any further comments, ideas, brainstorms, suggestions?
> 
Idea:
Chill out.

Brainstorm:
I think you're insulting people with your lack of understanding, and 
blind ranting.

Suggestion:
Get to know the community and the project before making wild 
assumptions. People will take your suggestions more seriously when your 
credible.



-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From mary-twisted at puzzling.org  Tue Aug  3 00:59:28 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 3 Aug 2004 14:59:28 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <20040803045928.GB12815@titus.home.puzzling.org>

On Tue, Aug 03, 2004, James Y Knight wrote:
> Why can't that happen without a Twisted Foundation? Anyone can sign up
> to these here mailing lists, download the source code, improve it, and
> contribute their improvements back. Or make a Really Awesome
> Application(tm) using Twisted, and announce its awesomeness here.

Or alternatively, what are the barriers to contributing to Twisted that
you think a foundation would help people overcome? If you have a list of
problems, then suggested solutions can be evaluated properly.

A few things have come up:

 1. many Twisted developers are employed full-time, not all on Twisted or
    Twisted-related projects (and some of them are happy with this of
    course) or have lots of projects and not enough hours

 2. developers of large monolithic projects like a "Twisted book" may
    need/want money to develop the project

 ...

Now as far as I can see, there's not a lot a foundation could do about
(1) or (2) until it had quite a lot of funding (and recall that
"someone"[1] must get it to that stage). It may be that there are other
more informal solutions to these and other issues.

-Mary

[1] The existance of "someone" is a common myth in volunteer projects.



From jml at divmod.com  Tue Aug  3 01:29:48 2004
From: jml at divmod.com (Jonathan Lange)
Date: Tue, 03 Aug 2004 15:29:48 +1000
Subject: [Twisted-Python] Re: To thread or not to thread...
In-Reply-To: <305be882040802210750f26fab@mail.gmail.com>
References: <305be882040802210750f26fab@mail.gmail.com>
Message-ID: <cen7sh$gf3$1@sea.gmane.org>

Britt Green wrote:
> I've been reading some of the online documentation for Twisted, and
> I'm slowly starting to grasp different things. However, I could use
> some help with one point. Suppose I was coding up a chat server, or
> perhaps a MUD. Would I need to use something threaded, as opposed to
> just using reactor.run()? Or would the latter be sufficient?
> 

This seems to be a common stumbling point for newcomers to Twisted.

With Twisted, you don't need threads. You don't want threads. Threads 
are actually harmful: http://www.kuro5hin.org/story/2002/11/18/22112/860

But this doesn't help you write a chat server. How can you do that 
without threads? The answer falls into two parts: how Twisted does it 
and how you use Twisted to do it.

1. How Twisted Does It
When you run a Twisted server, Twisted calls the socket functions 
asynchronously. So, rather than calling a listen function which sits 
there waiting until someone connects, it calls a listen function which 
returns immediately. Then, in the <b>reactor</b> loop, it polls things. 
When something connects _Twisted calls your code_ which it expects to 
_return immediately_. The entire process will wait for your code to return.

So, this leaves a bit of a problem: How do I do stuff that takes time?
The answer is too complicated to go into now. The important bit is that 
your function doesn't compute a value and return it. It returns a 
Deferred -- a promise to return later.


2. How You Get Twisted to do it.

---------------------------------------
port = 8007

class MyProtocol(Protocol):
   def connectionMade(self):
     """someone has connected. do something"""
   def dataReceived(self, data):
     """do stuff with data"""

factory = ServerFactory()
factory.protocol = MyProtocol

reactor.listenTCP(port, factory)
reactor.run()
---------------------------------------

Notice how you don't really call any of your own code?
The code is essentially preparing an object that can be registered with 
Twisted as a server factory.

Every time someone connects to port 8007 on that host, Twisted will 
instantiate an instance of MyProtocol and call connectionMade on it.

Every time someone sends data, Twisted will call dataReceived.

The reactor calls everything. If your connectionMade implementation 
takes ages to return, then the process is in _your_ code, not the 
reactor's. This means the reactor can't listen for data and can't call 
your dataReceived method. All this really means is that your methods 
should return quickly.

Really, that's all you need to know. Your methods should return quickly.
As long as they do that, you don't really need to worry about threads 
because Twisted will take care of concurrency for you.

Recommended Reading:
"Asynchronous Programming" - 
http://www.twistedmatrix.com/documents/howto/async

"Writing Servers" -
http://www.twistedmatrix.com/documents/howto/servers

"Using Deferreds" -
http://www.twistedmatrix.com/documents/howto/defer

"Writing Clients" -
http://www.twistedmatrix.com/documents/howto/clients

"Threads Considered Harmful"
http://www.kuro5hin.org/story/2002/11/18/22112/860


Recommended Actions:
* Try writing a _simple_ client/server app in Twisted. It might even be 
worth manually typing out the "quote of the day" examples in the howtos, 
to force your brain to only deal with each concept as it comes, rather 
than trying to grasp the whole in all it's detail.

* Remember that asynchronous programming is just another style of 
programming.

* Forget about threads. You almost never need them. Especially not in 
Twisted.

cheers,
jml




From glyph at divmod.com  Tue Aug  3 02:49:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 02:49:14 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
In-Reply-To: <410FA642.3020406@nunatak.com.au>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
Message-ID: <3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>

On Aug 3, 2004, at 10:50 AM, Tim Stebbing wrote:

> My last email was possibly taken out of context, I was suggesting that 
> I didn't oppose you going off and doing these things, some of which I 
> didn't think where bad ideas, but you cant expect any help for free, 
> Noone else is interested, or seems to see a need.

This is almost, but not entirely how I feel about the issue.

I do see a need for the Twisted foundation.  I am the progenitor of the 
project, but I am not the principal author any more.  I can barely keep 
up with the fantastic team, and larger community, that has grown up 
around the project.  To my great relief, I receive very few personal 
messages about the framework, which must mean that the world at large 
(correctly) identifies the community at large with the maintenance of 
the project and not me personally.

I have no interest in holding a large body of other peoples' work 
hostage, either on purpose or by accident.  I want the Twisted 
community to flourish and for the framework to become a standard in the 
software development industry.  After all, I wrote Twisted in the first 
place as just _one_ layer of infrastructure for a multi-decade-long 
project; the whole point is to offload the maintenance so that I can 
work my way up the tiers of abstraction to the singularity lurking just 
around the bend.

However, a foundation is a lot of work, and a lot of that work falls 
necessarily upon me as both the original author and principal copyright 
holder.  You can think of this overhead as a litmus test.

I promise you this: I am never going to take the first step to start a 
foundation.  I have lots of other things to do; even if I weren't 
monumentally busy with work, I have a beautiful woman who lives with me 
that I see far too little of.  I have thousands of hobby projects I 
could be working on.  I have lots of friends who could use my volunteer 
assistance, both on their companies and on their charitable projects.

I also have about ten years of sleep to catch up on.

So, if I am going to spend time on the Twisted project, I am going to 
do what I do best, which is to implement the huge laundry list of 
features that remain.  I am not going to file legal paperwork to fill 
some ambiguous, long-term goals that are never going to be personally 
important to me.

So here is the litmus test - a challenge, if you like - for the 
maturity of the Twisted community.  If you are interested in a Twisted 
foundation to hold the copyrights, finance development, accept 
donations, etc., take responsibility for organizing a group to do this, 
and come to me with a proposal.  Be organized enough so that I don't 
have to do a lot of the work, and be prepared to compensate my company 
for the time that I do have to spend.  Normally I don't do consulting, 
but I will persuade my co-workers and management to give me the time to 
do this, since I do think it is a worthy cause, if at least the 
proto-foundation will cover the nominal costs.

Until a sufficiently large group of people in the community and in 
funded organizations (for- or non-profit) see a real need for such a 
foundation, I don't think that the community is mature enough to get 
any benefit from one.  Furthermore I think that the organizational 
overhead that a foundation would impose would actually be a *detriment* 
to the community until the community itself is sufficiently organized 
to be able to muster the infrastructure which surrounds a successful 
foundation.

Such infrastructure includes both organized, knowledgeable, 
self-motivated volunteers who are aware of the legal and technical 
requirements to get started, and enough money to keep the foundation 
alive and functioning for a good long while.  A dead foundation holding 
the copyrights is almost as bad as a dead corporation.

Such an organization would find the initial expenditure for my services 
(and those of the other principal Twisted contributors, which I'm sure 
you'll need for one reason or another) to be a pittance.

Good luck on organizing one, but I don't think the community is quite 
there yet - I would estimate one more year before we reach critical 
mass.   If we make it by then, keep in mind that four years is doing 
VERY VERY well.  Most projects which don't immediately as foundations 
don't reach this point for about ten years.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040803/e2670e11/attachment.pgp 

From glyph at divmod.com  Tue Aug  3 02:50:47 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 02:50:47 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040803045928.GB12815@titus.home.puzzling.org>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
	<20040803045928.GB12815@titus.home.puzzling.org>
Message-ID: <72CD0141-E519-11D8-87DB-000393C9700E@divmod.com>


On Aug 3, 2004, at 12:59 AM, Mary Gardiner wrote:

> [1] The existance of "someone" is a common myth in volunteer projects.
                                     ^
I would say the existence of "someone" is *THE* common myth in 
volunteer projects ;-).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040803/00f5bf3c/attachment.pgp 

From glyph at divmod.com  Tue Aug  3 03:13:30 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 03:13:30 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
In-Reply-To: <3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
	<3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>
Message-ID: <9F9475EC-E51C-11D8-87DB-000393C9700E@divmod.com>


On Aug 3, 2004, at 2:49 AM, Glyph Lefkowitz wrote:
> Most projects which don't immediately as foundations don't reach this 
> point for about ten years.
                                       ^ start


Damnit.  My proofreaders go home at midnight.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040803/f73b217a/attachment.pgp 

From serj_trejo at hotmail.com  Tue Aug  3 03:29:48 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 03 Aug 2004 03:29:48 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F42gnju8Yp05c00049f4b@hotmail.com>


>>Oh yes, and another thought -- what about the company Zoteca in New York 
>>City? Surely they would be interested in a Twisted Foundation, no?
>>
>
>Mate, are you any of these people? are you Mary? or Tim? or a member of the 
>Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or Zoteca, 
>whoever they are?

As for Zoteca, you may have heard of one of the awesome geniuses who has 
contributed significantly to Twisted (along with all of the others who have 
made contributions, whom I feel IMHO are all geniuses):

---------------------------------------------------------------------------------------------
http://www.zoteca.com/company/management.htm

Itamar Shtull-Trauring - Chief Technology Architect
Itamar has worked professionally in software technology development since 
1994. He studied computer science and mathematics at Tel Aviv University and 
is the author of several patents. He most recently served as the chief 
programmer at an Internet startup. Itamar is actively involved in several 
open-source development projects.

---------------------------------------------------------------------------------------------

I am not any of the people I referred to. I'm just brainstorming out loud 
becuase I've just recently discovered Twisted and I think its the greatest 
thing since sliced bread and so I have a lot of enthusiasm which I do not 
think I am misplacing. If I have inadvertently offended anyone, well it 
certainly was not intentional. And please note that when I asked if you 
would be interested in helping, I never said or implied that I personally or 
the Foundation would be asking you for money or something for "free." I 
don't understand how you misinterpreted me but I'm sorry that you did. I'm 
certainly by no means looking for a handout.

>You can't publically suggest our involvement in your dream, its just not 
>very polite, to say the least. Or do you think to excite us into action?

What is so impolite about asking for your suggestions or feedback or input 
or whatever? By the way, who is "our" in the verbatim "our involvement"? I 
was asking you, but I don't know how you went from "me, Tim" to "our" 
whomever "our" is. Your reaction strikes me as defensive and I don't know 
why.

Anyway, a Foundation isn't about my dream. A Foundation would only work if 
there's enough interest to form one by a group of people in the community. 
If the community is not interested in a Foundation, then I surely won't 
waste my time.

>My last email was possibly taken out of context, I was suggesting that I 
>didn't oppose you going off and doing these things, some of which I didn't 
>think where bad ideas, but you cant expect any help for free, Noone else is 
>interested, or seems to see a need.

No worries. If no one is interested then indeed its all moot.

>>One of the great things about having a Foundation is that it doesn't have 
>>to keep secrets. It is truly open and there are no hidden cards in the 
>>deck. At the same time, anyone is free to birth artificial persons in any 
>>territory on Earth who then can utilize the Foundation but also contribute 
>>back to it. This is why Twisted needs a Declaration of Independence IMHO. 
>>I see no reason why *not* to create a Twisted Foundation for the benefit 
>>of humankind.
>>
>>Imagine, a kid in Africa who has access to the 'Net who is learning 
>>computer science could participate in the Twisted Foundation and 
>>contribute something really cool, such as a new protocol, to the code 
>>base. Or some child in Thailand could use Twisted's Perspective Broker and 
>>Nevow to create some really neat 'net-based agriculture Web service for 
>>the farmers and hill tribe people in northeast agricultural Thailand 
>>(where Internet cafes continue to sprout up). And of course really cool 
>>apps and services could be created by the whiz gurus in the more 
>>modernized countries at the same time.
>>
>>A Foundation is a self serving entity whose goal is to survive independent 
>>of any others who make use of it. A Foundation owes nothing to no one, and 
>>can not be held hostage by anyone. Foundations are good for humanity. 
>>Foundations have need not retain secrets. Foundations do not impose 
>>detriment on others. I can't imagine a world without Apache (yikes, we'd 
>>all be forced to using Microsoft's IIS Web Server).
>>
>
>I seriously think you have missed the point. Nothing procludes anyones 
>involvment in twisted, its LGPL, and the core developers, let alone the 
>ancilliary ones are from all walks of life/regions of the globe.
>
>>Any further comments, ideas, brainstorms, suggestions?
>>
>Idea:
>Chill out.

Idea published, but not accepted.

>
>Brainstorm:
>I think you're insulting people with your lack of understanding, and blind 
>ranting.

If others find me insulting, then let them speak up and if so then I'll shut 
up. If no one wants a Foundation then that's fine. If no one wants a book 
then that's cool, too. "Blind ranting" is not equal to posting some positive 
energy and throwing out the idea of a book and a Foundation. Why such a 
harsh come back from you? I don't understand your reaction. Its the harshest 
of anyone here who has posted in this thread. What is it that I lack 
understanding about? True, I am quite new and don't know a lot about the 
community, but is there anything wrong with being really excited about 
Twisted which I happen to think is really awesome, stellar and well done? 
Does not the community as it exists today want to grow and become larger in 
its expanse and have new people with new ideas coming into it to thus 
continue to evolve Twisted and make it known to more and more of the world? 
Or is the community going to chastise new entries such as me who may be 
green but who believe in Twisted and do find it to be "Networking For the 
Rest of Us"?


>Suggestion:
>Get to know the community and the project before making wild assumptions. 
>People will take your suggestions more seriously when your credible.

Please list to me what my assumptions are and what is wild about them. 
Thanks for the further feedback.

If you will kindly note that I got excited about the idea of a Twisted book 
as a *reaction* to the following post by Glyph to his blog (is this a wild 
assumption?):

------------------------------------------------------------------------------------
http://www.livejournal.com/users/glyf/22053.html

I spoke to Alex Martelli, author of Python in a Nutshell and editor of the 
Python Cookbook. He reminded me that the world does, in fact, need a Twisted 
book, a reminder for which I am very grateful. I think that as a result of 
this conversation a moribund book project may be restarted, and another 
might come into the works. Time will tell.

------------------------------------------------------------------------------------

Anybody who is the author of two O'Reilly Python books sounds pretty darned 
"credible" to me, so Alex Martelli's ideas which inspired Glyph sounded 
enthusiastic to me, so that's how this thread got going in the first place, 
and then the idea of a Foundation sprouted.

Cheers Mate,

Serg

>
>
>
>--
>(o_   Timothy Stebbing, Pythonista, Nunatak Systems
>//\    03 6226 6259, tim.stebbing at nunatak.com.au
>V_/_  ><>--------------------------------------<><
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Tue Aug  3 03:43:39 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 03 Aug 2004 03:43:39 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
Message-ID: <BAY12-F6zoUBUSz0jw600049bf1@hotmail.com>


Thank you Glyph for your time authoring this email which was quite 
professional, eloquent, and well reasoned. I may have been over zealous and 
got a little hyper, but I certainly didn't intend to offend anyone. Perhaps 
another year should pass and then the community can raise the question 
again.

Cheers,

Serg

P.S. (But let us not forget about the book ;-)

>From: Glyph Lefkowitz <glyph at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: [Twisted-Python] the Foundation Litmus Test
>Date: Tue, 3 Aug 2004 02:49:14 -0400
>
>On Aug 3, 2004, at 10:50 AM, Tim Stebbing wrote:
>
>>My last email was possibly taken out of context, I was suggesting that I 
>>didn't oppose you going off and doing these things, some of which I didn't 
>>think where bad ideas, but you cant expect any help for free, Noone else 
>>is interested, or seems to see a need.
>
>This is almost, but not entirely how I feel about the issue.
>
>I do see a need for the Twisted foundation.  I am the progenitor of the 
>project, but I am not the principal author any more.  I can barely keep up 
>with the fantastic team, and larger community, that has grown up around the 
>project.  To my great relief, I receive very few personal messages about 
>the framework, which must mean that the world at large (correctly) 
>identifies the community at large with the maintenance of the project and 
>not me personally.
>
>I have no interest in holding a large body of other peoples' work hostage, 
>either on purpose or by accident.  I want the Twisted community to flourish 
>and for the framework to become a standard in the software development 
>industry.  After all, I wrote Twisted in the first place as just _one_ 
>layer of infrastructure for a multi-decade-long project; the whole point is 
>to offload the maintenance so that I can work my way up the tiers of 
>abstraction to the singularity lurking just around the bend.
>
>However, a foundation is a lot of work, and a lot of that work falls 
>necessarily upon me as both the original author and principal copyright 
>holder.  You can think of this overhead as a litmus test.
>
>I promise you this: I am never going to take the first step to start a 
>foundation.  I have lots of other things to do; even if I weren't 
>monumentally busy with work, I have a beautiful woman who lives with me 
>that I see far too little of.  I have thousands of hobby projects I could 
>be working on.  I have lots of friends who could use my volunteer 
>assistance, both on their companies and on their charitable projects.
>
>I also have about ten years of sleep to catch up on.
>
>So, if I am going to spend time on the Twisted project, I am going to do 
>what I do best, which is to implement the huge laundry list of features 
>that remain.  I am not going to file legal paperwork to fill some 
>ambiguous, long-term goals that are never going to be personally important 
>to me.
>
>So here is the litmus test - a challenge, if you like - for the maturity of 
>the Twisted community.  If you are interested in a Twisted foundation to 
>hold the copyrights, finance development, accept donations, etc., take 
>responsibility for organizing a group to do this, and come to me with a 
>proposal.  Be organized enough so that I don't have to do a lot of the 
>work, and be prepared to compensate my company for the time that I do have 
>to spend.  Normally I don't do consulting, but I will persuade my 
>co-workers and management to give me the time to do this, since I do think 
>it is a worthy cause, if at least the proto-foundation will cover the 
>nominal costs.
>
>Until a sufficiently large group of people in the community and in funded 
>organizations (for- or non-profit) see a real need for such a foundation, I 
>don't think that the community is mature enough to get any benefit from 
>one.  Furthermore I think that the organizational overhead that a 
>foundation would impose would actually be a *detriment* to the community 
>until the community itself is sufficiently organized to be able to muster 
>the infrastructure which surrounds a successful foundation.
>
>Such infrastructure includes both organized, knowledgeable, self-motivated 
>volunteers who are aware of the legal and technical requirements to get 
>started, and enough money to keep the foundation alive and functioning for 
>a good long while.  A dead foundation holding the copyrights is almost as 
>bad as a dead corporation.
>
>Such an organization would find the initial expenditure for my services 
>(and those of the other principal Twisted contributors, which I'm sure 
>you'll need for one reason or another) to be a pittance.
>
>Good luck on organizing one, but I don't think the community is quite there 
>yet - I would estimate one more year before we reach critical mass.   If we 
>make it by then, keep in mind that four years is doing VERY VERY well.  
>Most projects which don't immediately as foundations don't reach this point 
>for about ten years.
><< PGP.sig >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From damon.fasching at sbcglobal.net  Tue Aug  3 04:18:22 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 01:18:22 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
Message-ID: <20040803081822.51107.qmail@web81008.mail.yahoo.com>

Hi,

I am attempting to use pb to distribute a home grown
database.  To test, I have the database split over two
machines and am using a third machine for a client
test application.  The two database machines are
Redhat; the client machine is Debian, for what it's
worth.

I thought the Redhat machines were identically
configured, but when I connect to them, one of them
works fine and the other gives the msg

"111: Connection refused"

As a simple test, I just ran a simple echo server on
each machine and an echo client on the third machine. 
The Redhat machine which worked as a database server
also works as an echo server.  The other machine fails
with the same msg.

I am able to ping, scp, etc to my hearts content among
the three machines.

I have looked at the twisted FAQ, mail archives and
much of what looks relevant under /etc on the Redhat
machines w/o much luck.  This is not a twisted
problem, but can someone give me a clue as to what
system config file I might need to modify and how?

Thanks!
  Damon




From tarlano at docomolab-euro.com  Tue Aug  3 04:52:37 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Tue, 03 Aug 2004 10:52:37 +0200
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <410FA642.3020406@nunatak.com.au>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
Message-ID: <410F5255.8030509@docomolab-euro.com>

It is interesting to step back and see how complicated this whole book 
epic has become..

Maybe the answer is not a foundation or a group hug via paypal, maybe 
the answer is just one guy who can read and write to just write a book.

I still think the current Twisted book is very good with one criticism. 
Chapter 2 has the title "Tutorial", so new people think they can just 
read that chapter and understand Twisted. The title should be "An 
Introduction Example" instead of "Tutorial", and maybe it should be an 
appendix which is where I personally think it belongs.

Anthony


Tim Stebbing wrote:

> Sergio Trejo wrote:
>
>> Tim,
>>
>> Thanks for some well thought ideas and comments. I'm vocal and I'm 
>> interested. And my gloves on the keyboard are busy such that my brain 
>> can grok as much of Twisted as possible. If only I could just plug 
>> into the Matrix and grok it all in one fell swoop! :-)  I'm learning 
>> atop lately, and then its on to nevow.
>>
>> Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you 
>> a Nevow maestro?) who is willing to collaborate such that we can get 
>> the Twisted Foundation into motion along the lines of what Tim has 
>> suggested? Tim, would you be up for helping out in some form or 
>> another? Hey, I bet we could get some ideas and suggestions from 
>> Mitch Kapor's group since they are going to be using Twisted and 
>> would probably like to see its Declaration of Independence. Or maybe 
>> someone from Mozilla or Apache can give us some ideas of what to do 
>> and what not to do since they've been through the trials and 
>> tribulations of Foundation genesis.
>>
>> Oh yes, and another thought -- what about the company Zoteca in New 
>> York City? Surely they would be interested in a Twisted Foundation, no?
>>
>
> Mate, are you any of these people? are you Mary? or Tim? or a member 
> of the Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or 
> Zoteca, whoever they are?
>
> You can't publically suggest our involvement in your dream, its just 
> not very polite, to say the least. Or do you think to excite us into 
> action?
>
> My last email was possibly taken out of context, I was suggesting that 
> I didn't oppose you going off and doing these things, some of which I 
> didn't think where bad ideas, but you cant expect any help for free, 
> Noone else is interested, or seems to see a need.
>
>
>> One of the great things about having a Foundation is that it doesn't 
>> have to keep secrets. It is truly open and there are no hidden cards 
>> in the deck. At the same time, anyone is free to birth artificial 
>> persons in any territory on Earth who then can utilize the Foundation 
>> but also contribute back to it. This is why Twisted needs a 
>> Declaration of Independence IMHO. I see no reason why *not* to create 
>> a Twisted Foundation for the benefit of humankind.
>>
>> Imagine, a kid in Africa who has access to the 'Net who is learning 
>> computer science could participate in the Twisted Foundation and 
>> contribute something really cool, such as a new protocol, to the code 
>> base. Or some child in Thailand could use Twisted's Perspective 
>> Broker and Nevow to create some really neat 'net-based agriculture 
>> Web service for the farmers and hill tribe people in northeast 
>> agricultural Thailand (where Internet cafes continue to sprout up). 
>> And of course really cool apps and services could be created by the 
>> whiz gurus in the more modernized countries at the same time.
>>
>> A Foundation is a self serving entity whose goal is to survive 
>> independent of any others who make use of it. A Foundation owes 
>> nothing to no one, and can not be held hostage by anyone. Foundations 
>> are good for humanity. Foundations have need not retain secrets. 
>> Foundations do not impose detriment on others. I can't imagine a 
>> world without Apache (yikes, we'd all be forced to using Microsoft's 
>> IIS Web Server).
>>
>
> I seriously think you have missed the point. Nothing procludes anyones 
> involvment in twisted, its LGPL, and the core developers, let alone 
> the ancilliary ones are from all walks of life/regions of the globe.
>
>> Any further comments, ideas, brainstorms, suggestions?
>>
> Idea:
> Chill out.
>
> Brainstorm:
> I think you're insulting people with your lack of understanding, and 
> blind ranting.
>
> Suggestion:
> Get to know the community and the project before making wild 
> assumptions. People will take your suggestions more seriously when 
> your credible.
>
>
>


-- 

____________________________________________________________
*Anthony Tarlano <mailto:tarlano at docomolab-euro.com>
*
*Senior Researcher - Future Networking Laboratory
DoCoMo Communications Laboratories Europe GmbH
Landsberger Strasse 308-312
80687 Munich, Germany
Tel: +49 89 56 824 212
Cell: +49 177 341 3758
*

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040803/a94456a0/attachment.htm 

From radeex at gmail.com  Tue Aug  3 06:10:13 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 3 Aug 2004 06:10:13 -0400
Subject: [Twisted-Python] Twisted Split FAQ
Message-ID: <60ed19d404080303107ff96616@mail.gmail.com>

For those of you who have been popping into IRC and mailing me
privately asking "What's up with this Twisted split I'm hearing
about?", I wrote a FAQ:

http://twistedmatrix.com/products/splitfaq

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From kwhitesell at adelphia.net  Tue Aug  3 08:10:54 2004
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Tue, 03 Aug 2004 08:10:54 -0400
Subject: [Twisted-Python] To thread or not to thread
In-Reply-To: <E1Brr9B-0001Ia-01@pyramid.twistedmatrix.com>
References: <E1Brr9B-0001Ia-01@pyramid.twistedmatrix.com>
Message-ID: <410F80CE.7090306@adelphia.net>

Britt,

 >I've been reading some of the online documentation for Twisted, and
 >I'm slowly starting to grasp different things. However, I could use
 >some help with one point. Suppose I was coding up a chat server, or
 >perhaps a MUD. Would I need to use something threaded, as opposed
 >to just using reactor.run()? Or would the latter be sufficient?

No need to thread! The foundation of a chat server is in the 
book.pdf file (and therefore in one of the howtos) starting back 
around pg 227.

Ken




From itamar at itamarst.org  Tue Aug  3 10:26:23 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Aug 2004 10:26:23 -0400
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803081822.51107.qmail@web81008.mail.yahoo.com>
References: <20040803081822.51107.qmail@web81008.mail.yahoo.com>
Message-ID: <1091543183.25806.1.camel@sheriffpony>

On Tue, 2004-08-03 at 04:18, Damon Fasching wrote:

> I thought the Redhat machines were identically
> configured, but when I connect to them, one of them
> works fine and the other gives the msg

1. What version Twisted?

2. Can you telnet to this port?

3. Please post the full traceback.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From alecu at vortech.com.ar  Tue Aug  3 11:19:43 2004
From: alecu at vortech.com.ar (Alejandro J. Cura)
Date: Tue, 03 Aug 2004 12:19:43 -0300
Subject: [Twisted-Python] internet.TCPServer interface
In-Reply-To: <cemmtr$lvi$1@sea.gmane.org>
References: <cemmtr$lvi$1@sea.gmane.org>
Message-ID: <1091546383.20774.88.camel@localhost>

You should use:

internet.TCPServer('7001', myFactory(), interface='127.0.0.1')

Acording to the documentation, TCPServer calls reactor.listenTCP with
the arguments given to the constructor, and listenTCP has a named
parameter called interface, which lets you choose which interface you
want to bind to.
--
alecu


On Mon, 2004-08-02 at 21:40, Tsai Li Ming wrote:
> Hi,
> 
> How do I bind the port number to a specific interface?
> 
> application = service.Application('Core')
> sc = service.IServiceCollection(application)
> internet.TCPServer('7001', myFactory()).setServiceParent(sc)
> 
> Liming
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From news at southportal.net  Tue Aug  3 11:25:32 2004
From: news at southportal.net (VanL)
Date: Tue, 03 Aug 2004 09:25:32 -0600
Subject: [Twisted-Python] os.walk - like example
Message-ID: <ceoasd$3gg$1@sea.gmane.org>

Hello,

I am trying to use twisted to produce an os.walk -like traversal of a 
remote ftp site, but I am just not getting my head around it.  Simple 
things I have figured out, like

     def listdir(self, result, fileListProtocol):
         return fileListProtocol.files

     def isdir(self, ftpfile):
         return ftpfile['filetype'] == 'd'

     def islink(self, ftpfile):
         return ftpfile.has_key('linktarget')

Similarly, I see the commands that I need to use.  I just can't seem to 
get it all together into a package that can do a walk of the remote 
directory.  Can anyone help?

Thanks,

VanL




From damon.fasching at sbcglobal.net  Tue Aug  3 15:23:48 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 12:23:48 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
Message-ID: <20040803192348.14438.qmail@web81003.mail.yahoo.com>

Hi,

Here is some additional info.  The problem is probably
not with my twisted installation or my use of twisted.
 Again, everything works fine if I run the server on
machine A; I get the "Connection refused" error if I
run the server on machine B.  I'm 99.9% certain the
twisted installation is the same on both machines.  I
installed at the same time on both.  I'm less certain
about the network configuration.

The requested information follows.

Thanks,
  Damon

>> 1. What version Twisted?

1.3.0

>> 2. Can you telnet to this port?

No, but I can't telnet into the machine on which
everything works either.  No daemon.

>> 3. Please post the full traceback.

Unhandled error in Deferred:
Traceback (most recent call last):
  File
"/usr/local/lib/python2.3/site-packages/twisted/spread/pb.py",
line 1539, in clientConnectionFailed
    self._failAll(reason)
  File
"/usr/local/lib/python2.3/site-packages/twisted/spread/pb.py",
line 1536, in _failAll
    d.errback(reason)
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 274, in errback
    self._startRunCallbacks(fail)
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 313, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 338, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File
"/usr/local/lib/python2.3/site-packages/in_house/dev/barrel/barrelProxy.py",
line 52, in _remoteCallFailed
    raise RuntimeError, "remote call %s failed because
%s" % (msg, reason.value)
exceptions.RuntimeError: remote call getRootObject
failed because Connection was refused by other side:
111: Connection refused.




From damon.fasching at sbcglobal.net  Tue Aug  3 16:16:21 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 13:16:21 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <1091562022.25811.11.camel@sheriffpony>
Message-ID: <20040803201621.20656.qmail@web81009.mail.yahoo.com>

Hi Itamar,

--- Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2004-08-03 at 15:23, Damon Fasching wrote:
> 
> > >> 2. Can you telnet to this port?
> > 
> > No, but I can't telnet into the machine on which
> > everything works either.  No daemon.
> 
> Telnet to the port where PB is running I mean. e.g.
> telnet host 9767.

I can't telnet into the PB port on either machine; the
machine where PB does accept connections or the one
where it doesn't.  Wouldn't I need telnetd running to
do this even if I specify the port?

> In any case, AFAICT this a configuration issue on
> your side, and not a
> Twisted bug.

Right.  I didn't post this as a bug and indicated that
I think the problem is with my network configuration. 
(That's why I was poking around in /etc)  However, not
being familiar with Redhat (I use Debian) I don't know
where to look.  The config files I compared look the
same on both machines, so I must not be looking in the
right place.  Because this mailing list is repleat
with networking experts, I thought it would be a good
place to ask.  Some of the other non-experts here may
benefit from a solution, too.

Can anyone tell me what I need to have
enabled/set/configured in order for my Redhat box to
accept connections on a PB server?

Thanks,
  Damon

> 
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org
> 
> 
> 




From george at omniti.com  Tue Aug  3 16:29:05 2004
From: george at omniti.com (George Schlossnagle)
Date: Tue, 3 Aug 2004 16:29:05 -0400
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
References: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
Message-ID: <C3E1ABDC-E58B-11D8-8E57-000D93359332@omniti.com>


On Aug 3, 2004, at 4:16 PM, Damon Fasching wrote:

> Hi Itamar,
>
> --- Itamar Shtull-Trauring <itamar at itamarst.org>
> wrote:
>
>> On Tue, 2004-08-03 at 15:23, Damon Fasching wrote:
>>
>>>>> 2. Can you telnet to this port?
>>>
>>> No, but I can't telnet into the machine on which
>>> everything works either.  No daemon.
>>
>> Telnet to the port where PB is running I mean. e.g.
>> telnet host 9767.
>
> I can't telnet into the PB port on either machine; the
> machine where PB does accept connections or the one
> where it doesn't.  Wouldn't I need telnetd running to
> do this even if I specify the port?

No.  telnet simply establishes a tcp connection on that port.  So for 
example, to 'manually' pull a page from a webserver you can do:

telnet www.example.com 80

and then when the prompt returns issue an HTTP request manually a la:

GET / HTTP/1.0


In this case, telnet'ing to the port that your server is supposedly 
binding to will establish whether or not anything is bound to the 
specified port.  You should also run 'netstat -an | grep LISTEN' on 
your server and look for the port number that you are trying to bind 
to.

> Can anyone tell me what I need to have
> enabled/set/configured in order for my Redhat box to
> accept connections on a PB server?

I think you need to figure out what the problem is first.  Is the 
server not binding?  Is it firewalled off, etc.


George




From andrew-twisted at puzzling.org  Tue Aug  3 16:48:10 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 4 Aug 2004 06:48:10 +1000
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
References: <1091562022.25811.11.camel@sheriffpony>
	<20040803201621.20656.qmail@web81009.mail.yahoo.com>
Message-ID: <20040803204810.GC15943@frobozz>

On Tue, Aug 03, 2004 at 01:16:21PM -0700, Damon Fasching wrote:
> Hi Itamar,
> 
> --- Itamar Shtull-Trauring <itamar at itamarst.org>
> wrote:
> 
> > Telnet to the port where PB is running I mean. e.g.
> > telnet host 9767.
> 
> I can't telnet into the PB port on either machine; the
> machine where PB does accept connections or the one
> where it doesn't.  Wouldn't I need telnetd running to
> do this even if I specify the port?

No, telnet just opens a socket.  You can telnet to any port, and it will
establish a connection if the port is open.  You can even send messages to
text-based protocols, such as HTTP, for instance (I've marked the lines I
typed, the rest is the reply from the server):

    $ telnet www.twistedmatrix.com 80
    Trying 198.49.126.190...
    Connected to twistedmatrix.com.
    Escape character is '^]'.
 -> HEAD / HTTP/1.0
 -> 
    HTTP/1.0 200 OK
    Last-Modified: Tue, 03 Aug 2004 09:13:39 GMT
    Content-Length: 6507
    Date: Tue, 03 Aug 2004 20:31:12 GMT
    Accept-Ranges: bytes
    Content-Type: text/html
    Server: TwistedWeb/SVN-trunk
    X-Cache: MISS from home.puzzling.org
    X-Cache-Lookup: MISS from home.puzzling.org:3128
    Connection: close
    
    Connection closed by foreign host.

But if you telnet to a port that isn't open, you'd get:

    $ telnet localhost 1234
    Trying 127.0.0.1...
    telnet: Unable to connect to remote host: Connection refused

Judging from the errors you're seeing, I'd expect that telnet to your PB
port on one machine would give the "Connected to foo." message, and the
other would give "Unable to connect to remote host: Connection refused".
Also, try doing these telnets from a different machine and also locally from
the machines running the PB server, you should get the same results, but if
you don't, that might hint at where the problem is.
    
[...]
> 
> Can anyone tell me what I need to have
> enabled/set/configured in order for my Redhat box to
> accept connections on a PB server?

Well, it depends on what the problem is, and we still don't know that.  It
also depends on what your PB server actually is; there's not really any such
thing as a plain "PB server"; that doesn't really tell us anything about
what it is or how it should run.  What application is this PB server?  Is it
run by twistd (and if so, from a tap or a tac)?  Or is it a script that
calls reactor.run() directly?  Etc.

Have you looked in the log files for the service on both machines?  Perhaps
the service is simply failing to start on one, in which case the reason
should be logged there.

You could also try "netstat -ntlp", and see if there is a process listening
on that port, and if so, is it listening on the right interface (probably
0.0.0.0), and is it the right process.

-Andrew.




From dave at krondo.com  Tue Aug  3 21:46:08 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 03 Aug 2004 18:46:08 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040730043706.GC3875@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz> <1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz> <1091161301.14497.0.camel@oneiros>
	<20040730043706.GC3875@frobozz>
Message-ID: <1091583968.1789.16.camel@oneiros>

On Thu, 2004-07-29 at 21:37, Andrew Bennetts wrote:
> On Thu, Jul 29, 2004 at 09:21:41PM -0700, Dave Peticolas wrote:
> > On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> > > On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> > > [...]
> > > > 
> > > > This is on a Redhat 7.2 system using python2.3 and a newish version
> > > > of twisted. I don't know why the process seems to get lost, but it
> > > > would be nice if Twisted would at least notice the ECHILD and signal
> > > > process termination (or lost, or something).
> > > 
> > > What version of Twisted, exactly?  There's been some changes to the reaping
> > > code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> > > relevant.
> > 
> > I believe it is 1.2.0.
> 
> Ok, then I think it's likely that 1.3.0 fixes your bug.  1.2.0 had a nasty
> hack in its child reaping that went away in 1.3.0.

Yes, I see the diff. That seems to have fixed it,
thanks for the info!

dave





From kndyer at gmail.com  Wed Aug  4 11:12:18 2004
From: kndyer at gmail.com (Kelly Dyer)
Date: Wed, 4 Aug 2004 16:12:18 +0100
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted. Is
	it worth it?
Message-ID: <eaf4bf96040804081278d514bb@mail.gmail.com>

Hi,

I have a number of cpu-heavy signal processing routines that I want to
make remotely available.

Is it worth the energy to use the twisted framework in order to build
an application like this?  I have a cluster available and was hoping
to use its thread-migration to even out the processing and provide
scalability.

If you feel this is a do-able application, any design suggestions for
an excited twisted neophyte would be welcome!

Thanks,
Kelly.



From seamonkeys at gmail.com  Wed Aug  4 13:11:23 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Wed, 4 Aug 2004 10:11:23 -0700
Subject: [Twisted-Python] Echo Server woes
Message-ID: <305be88204080410114439808f@mail.gmail.com>

So I've been playing with the examples on the Twisted website, mostly
the Echo server. When it runs, it immediately echos back whatever
character one types in. So the output looks like so:  aakkee33ccbb::oo

I wanted to rewrite it so that it would repeat things a line at a
time, as opposed to a chracter at  a time. After playing with the code
and getting nowhere, someone on IRC helped me out by telling me I
should use the LineReceiver class from twisted.protocols.basic. What
has me stuck is trying to figure out how to use LineReceiver's
dataReceived() method as opposed to the identically named one on the
example page. I can't really figure out what class the example's
dataReceived() method comes from.

Thanks! :)

Britt



From johnbabwell at mailcan.com  Wed Aug  4 13:57:21 2004
From: johnbabwell at mailcan.com (John Babwell)
Date: Wed, 4 Aug 2004 12:57:21 -0500
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <305be88204080410114439808f@mail.gmail.com>
References: <305be88204080410114439808f@mail.gmail.com>
Message-ID: <20040804125721.2935064c@prana-bindu>

You'd use lineReceived, check out how the finger protocol inherits from
LineReceiver here:
http://twistedmatrix.com/documents/current/howto/tutorial/intro

On Wed, 4 Aug 2004 10:11:23 -0700
Britt Green <seamonkeys at gmail.com> wrote:

> So I've been playing with the examples on the Twisted website, mostly
> the Echo server. When it runs, it immediately echos back whatever
> character one types in. So the output looks like so:  aakkee33ccbb::oo
> 
> I wanted to rewrite it so that it would repeat things a line at a
> time, as opposed to a chracter at  a time. After playing with the code
> and getting nowhere, someone on IRC helped me out by telling me I
> should use the LineReceiver class from twisted.protocols.basic. What
> has me stuck is trying to figure out how to use LineReceiver's
> dataReceived() method as opposed to the identically named one on the
> example page. I can't really figure out what class the example's
> dataReceived() method comes from.
> 
> Thanks! :)
> 
> Britt
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 



From seamonkeys at gmail.com  Wed Aug  4 14:02:41 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Wed, 4 Aug 2004 11:02:41 -0700
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <20040804125721.2935064c@prana-bindu>
References: <305be88204080410114439808f@mail.gmail.com>
	<20040804125721.2935064c@prana-bindu>
Message-ID: <305be882040804110254a2f4ab@mail.gmail.com>

That's perfect! Thanks! :)

On Wed, 4 Aug 2004 12:57:21 -0500, John Babwell <johnbabwell at mailcan.com> wrote:
> You'd use lineReceived, check out how the finger protocol inherits from
> LineReceiver here:
> http://twistedmatrix.com/documents/current/howto/tutorial/intro
> 
> On Wed, 4 Aug 2004 10:11:23 -0700
> 
> 
> Britt Green <seamonkeys at gmail.com> wrote:
> 
> > So I've been playing with the examples on the Twisted website, mostly
> > the Echo server. When it runs, it immediately echos back whatever
> > character one types in. So the output looks like so:  aakkee33ccbb::oo
> >
> > I wanted to rewrite it so that it would repeat things a line at a
> > time, as opposed to a chracter at  a time. After playing with the code
> > and getting nowhere, someone on IRC helped me out by telling me I
> > should use the LineReceiver class from twisted.protocols.basic. What
> > has me stuck is trying to figure out how to use LineReceiver's
> > dataReceived() method as opposed to the identically named one on the
> > example page. I can't really figure out what class the example's
> > dataReceived() method comes from.
> >
> > Thanks! :)
> >
> > Britt
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> --
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From projects at reedflute.com  Wed Aug  4 14:16:35 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 04 Aug 2004 20:16:35 +0200
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <305be88204080410114439808f@mail.gmail.com>
References: <305be88204080410114439808f@mail.gmail.com>
Message-ID: <41112803.7040303@reedflute.com>

Britt Green wrote:

>I wanted to rewrite it so that it would repeat things a line at a
>time, as opposed to a chracter at  a time. After playing with the code
>and getting nowhere, someone on IRC helped me out by telling me I
>should use the LineReceiver class from twisted.protocols.basic. What
>has me stuck is trying to figure out how to use LineReceiver's
>dataReceived() method as opposed to the identically named one on the
>example page. I can't really figure out what class the example's
>dataReceived() method comes from.
>
>  
>
LineReceiver inherits from Protocol. See : 

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.Protocol.html


Both defines a method dataReceived().

You can also play around with LineReceiver's LineMode() and RawMode(). Try placing a print statement in your ||rawDataReceived| <http://www.twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html#rawDataReceived>|() method (but remember to call superclass method LineReceiver.rawDataReceived() first) 

regards,

Eugene

===============================================
Reedflute Software Solutions

Web                 -> www.reedflute.com
=============================================== 





From jt at parspro.com  Wed Aug  4 15:05:59 2004
From: jt at parspro.com (John Toohey)
Date: Wed, 4 Aug 2004 15:05:59 -0400
Subject: [Twisted-Python] Starting a Twisted client
In-Reply-To: <41112803.7040303@reedflute.com>
References: <305be88204080410114439808f@mail.gmail.com>
	<41112803.7040303@reedflute.com>
Message-ID: <52215262-E649-11D8-A80D-000A95AE562E@parspro.com>

Hi all,

I have two twisted servers that send data to each other. Both servers 
are implemented as plugins, and created with mktap and started with 
twistd -f server.tap. My problem is that I need to have the first 
server call the second server on startup. In my servertap.py I have the 
following :-

    application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService()

     serviceCollection = service.IServiceCollection(application)
     internet.TCPClient("localhost",pbport, 
f.getFactory()).setServiceParent(serviceCollection)
     f.start()

     return serviceCollection

When I run mktap, the f.start() method is called, but when I actually 
run the server with twistd -f server.tap, this method does not get 
called. I need someway to kickstart the server to begin sending data to 
the receiving server.

TIA

John


JT




From foom at fuhm.net  Thu Aug  5 03:06:49 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 5 Aug 2004 03:06:49 -0400
Subject: [Twisted-Python] module interface checking tool
Message-ID: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>

So, I was a bit irritated recently because there is no way to test for 
private name usage in a module's namespace. '__all__' is a good start, 
but it is somewhat poor for a few reasons:
1) it doesn't affect import modname; modname.someprivatename at all so 
you may be using private interfaces without having any way of knowing.
2) Because it doesn't actually affect code people write, it often 
doesn't get updated when new public interfaces get added.
3) until recently it didn't even affect help(module), so users don't 
even know they're using a private name.

So, I wrote a tool to do the access checking. My goal is to have it 
used for testing (solving problems 1&2 *within* twisted, at least), not 
as something that you'd run your production server under.

sandbox/foom/private.py. Currently, it just spits out warnings because 
that way I can actually run through all the twisted tests, but that's 
controllable as a flag. Ideally every module in twisted would define 
__all__ and we could run the entire testsuite with access control 
enabled without raising illegal access exceptions.

To run the twisted tests with this, I temporarily stuck the following 
in twisted/__init__.py:
import private
private.privatizeModulesWithPrefix('twisted')

Much of the output (attached at the end) is from the IMAP tests trying 
to access private bits in order to test them. I'm not sure exactly what 
to do about that -- tests _should_ sometimes be able to access private 
parts, but they should also be restricted, normally, because you want 
to test against the public interface as well. So I may have to create a 
way to annotate some tests as being able to access private attributes 
while disallowing it by default.

Also, rebuild accesses private classes, and it is supposed to, so 
should be given special dispensation.

Besides those, the other things that show up currently are:
twisted.internet.abstract.isIPAddress from 
twisted.internet.iocpreactor.tcp (?)
twisted.internet.protocol.ConsumerToProtocolAdapter from 
twisted.protocols.ftp (?)
twisted.internet.threads._putResultInDeferred from 
twisted.enterprise.adbapi (_deferToThread)

Some of those perhaps should be public (?), but _putResultInDeferred, 
probably should not. IMO these are bugs, either of omission in __all__ 
or access from an inappropriate place. I dunno which.

Also, only 35 out of 559 modules in twisted use __all__. That's sad, 
and should be fixed. I'm sure if that was done, more of these kinds of 
things would show up.

Here's the full list of accesses to private names (I took the output 
and sort|uniq'd it). '=> Yes' means access was granted based on the two 
modules living in the same package. '=> No' means it would have raised 
an exception if I had that enabled.

<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.iocpreactor.tcp (?): => No
<= private twisted.internet.protocol.BaseProtocol from 
twisted.python.rebuild (latestClass): => No
<= private twisted.internet.protocol.ConsumerToProtocolAdapter from 
twisted.protocols.ftp (?): => No
<= private twisted.internet.threads._putResultInDeferred from 
twisted.enterprise.adbapi (_deferToThread): => No
<= private twisted.mail.imap4.Command from twisted.mail.test.test_imap 
(append): => No
<= private twisted.mail.imap4.DontQuoteMe from 
twisted.mail.test.test_imap (testQuoteAvoider): => No
<= private twisted.mail.imap4.FileProducer from 
twisted.mail.test.test_imap (testFileProducer): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testMultipleMultiPart): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testSingleMultiPart): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testSinglePart): => No
<= private twisted.mail.imap4.MessageSet from 
twisted.mail.test.test_imap (?): => No
<= private twisted.mail.imap4.MessageSet from 
twisted.mail.test.test_imap (testSetFlags): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserBody): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserMacros): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserSimple): => No
<= private twisted.mail.imap4._formatHeaders from 
twisted.mail.test.test_imap (testFetchHeaders): => No
<= private twisted.mail.imap4._formatHeaders from 
twisted.mail.test.test_imap (testHeaderFormatter): => No
<= private twisted.mail.imap4.collapseNestedLists from 
twisted.mail.test.test_imap (testFiles): => No
<= private twisted.mail.imap4.collapseNestedLists from 
twisted.mail.test.test_imap (testQuoteAvoider): => No
<= private twisted.mail.imap4.collapseStrings from 
twisted.mail.test.test_imap (testStringCollapser): => No
<= private twisted.mail.imap4.decoder from twisted.mail.test.test_imap 
(testDecode): => No
<= private twisted.mail.imap4.parseIdList from 
twisted.mail.test.test_imap (testIdListParser): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (_searchWork): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (testLiterals): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (testParenParser): => No
<= private twisted.mail.imap4.splitQuoted from 
twisted.mail.test.test_imap (testQuotedSplitter): => No
<= private twisted.mail.imap4.wildcardToRegexp from 
twisted.mail.test.test_imap (testWildcard): => No
<= private twisted.mail.imap4.wildcardToRegexp from 
twisted.mail.test.test_imap (testWildcardNoDelim): => No
<= private twisted.persisted.dirdbm.ALLOW_TWISTED_REBUILD from 
twisted.python.rebuild (rebuild): => No
<= private twisted.web.xmlrpc.addIntrospection from 
twisted.web.test.test_xmlrpc (?): => No

<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.base (resolve): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.tcp (resolveAddress): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.udp (connect): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.udp (startListening): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.ssl (?): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.ssl (__init__): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.tcp (?): => Yes

James




From glyph at divmod.com  Thu Aug  5 04:02:07 2004
From: glyph at divmod.com (glyph)
Date: Thu, 05 Aug 2004 04:02:07 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <1091692927.2999.7.camel@localhost>

On Thu, 2004-08-05 at 03:06 -0400, James Y Knight wrote:
> So, I was a bit irritated recently because there is no way to test for 
> private name usage in a module's namespace. '__all__' is a good start, 
> but it is somewhat poor for a few reasons:

WOW.  THank you for doing this, james.  This is more useful than
PyChecker output, I think.  It's also a little depresing.  We really
need a better-documented public API!

I have created 2 new issues for this, one for adding __all__ to all
modules and one for testing that it's obeyed properly.  #658 and #659,
respectively.  They are tentatively assigned to you, but I expect you
can carve up Twisted and motivate others to actually do most of the
work :).




From foom at fuhm.net  Thu Aug  5 13:40:23 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 5 Aug 2004 13:40:23 -0400
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted.
	Is it worth it?
In-Reply-To: <eaf4bf96040804081278d514bb@mail.gmail.com>
References: <eaf4bf96040804081278d514bb@mail.gmail.com>
Message-ID: <87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>

On Aug 4, 2004, at 11:12 AM, Kelly Dyer wrote:
> Hi,
>
> I have a number of cpu-heavy signal processing routines that I want to
> make remotely available.
>
> Is it worth the energy to use the twisted framework in order to build
> an application like this?  I have a cluster available and was hoping
> to use its thread-migration to even out the processing and provide
> scalability.
>
> If you feel this is a do-able application, any design suggestions for
> an excited twisted neophyte would be welcome!

Are you going to be writing your routines in python? If so, you cannot 
use threads, as python only allows one thread at a time to run python 
bytecode, thus making any CPUs above one useless. Also, what clustering 
software are you using? The ones I've seen used in the past only allow 
migration of unthreaded programs, as shared memory consistency across a 
network is hard (and/or slow).

What you can do, though, (and something I would generally recommend, 
although I don't know the specifics of your problem), is to spawn off 
multiple *processes* to handle the long running routines, and use 
Twisted to coordinate the network and process IO.

If you are not writing your routines in python and your cluster 
software actually does support migration of threads, you can probably 
get away with running threads in twisted.

James




From eugen at leitl.org  Thu Aug  5 14:23:10 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Thu, 5 Aug 2004 20:23:10 +0200
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted.
	Is it worth it?
In-Reply-To: <87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>
References: <eaf4bf96040804081278d514bb@mail.gmail.com>
	<87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <20040805182310.GB1400@leitl.org>

On Thu, Aug 05, 2004 at 01:40:23PM -0400, James Y Knight wrote:

> If you are not writing your routines in python and your cluster 
> software actually does support migration of threads, you can probably 
> get away with running threads in twisted.

I presume everybody here is familiar with SPaSM
http://www.python.org/workshops/1997-10/proceedings/beazley.html
and MMTK http://starship.python.net/crew/hinsen/MMTK/ , PyMOL
http://pymol.sourceforge.net/ , Python-MPI
http://packages.debian.org/unstable/math/python-mpi
etc.?

-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040805/2d579938/attachment.pgp 

From general at eepatents.com  Thu Aug  5 14:48:20 2004
From: general at eepatents.com (Ed Suominen)
Date: Thu, 5 Aug 2004 11:48:20 -0700
Subject: [Twisted-Python] hosting cpu intensive algorithms
	=?iso-8859-1?q?with=0Atwisted=2E=09Is_it_worth?= it?
In-Reply-To: <E1BsmX7-0006ZL-02@pyramid.twistedmatrix.com>
References: <E1BsmX7-0006ZL-02@pyramid.twistedmatrix.com>
Message-ID: <200408051148.21079.general@eepatents.com>

Now that's an interesting idea...

twisted.cluster:

Cluster:
"""
Maintains multiple process nodes of a LAN cluster

Vaporware donated to the public domain by Ed Suominen

"""
	def __init__(self, listenPort)
		"""
		Listens on listenPort for requests by individual nodes to join the cluster
		"""

	def generator(self, callable, sequence, **kw):
		"""
		Yields result of callable(sequenceItem, **kw) over items of sequence,
		which are distributed among cluster nodes for processing. Each run of
		callable() cannot assume anything about the order of the item it is given
		in the sequence.
		"""


> From: James Y Knight <foom at fuhm.net>
> Subject: Re: [Twisted-Python] hosting cpu intensive algorithms with
> 	twisted.	Is it worth it?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <87AAEEC1-E706-11D8-8D12-000A95A50FB2 at fuhm.net>
> Content-Type: text/plain; charset=US-ASCII; format=flowed
>
> On Aug 4, 2004, at 11:12 AM, Kelly Dyer wrote:
> > Hi,
> >
> > I have a number of cpu-heavy signal processing routines that I want to
> > make remotely available.
> >
> > Is it worth the energy to use the twisted framework in order to build
> > an application like this?  I have a cluster available and was hoping
> > to use its thread-migration to even out the processing and provide
> > scalability.
> >
> > If you feel this is a do-able application, any design suggestions for
> > an excited twisted neophyte would be welcome!
>
> Are you going to be writing your routines in python? If so, you cannot
> use threads, as python only allows one thread at a time to run python
> bytecode, thus making any CPUs above one useless. Also, what clustering
> software are you using? The ones I've seen used in the past only allow
> migration of unthreaded programs, as shared memory consistency across a
> network is hard (and/or slow).
>
> What you can do, though, (and something I would generally recommend,
> although I don't know the specifics of your problem), is to spawn off
> multiple *processes* to handle the long running routines, and use
> Twisted to coordinate the network and process IO.
>
> If you are not writing your routines in python and your cluster
> software actually does support migration of threads, you can probably
> get away with running threads in twisted.
>
> James



From mso at oz.net  Thu Aug  5 16:12:59 2004
From: mso at oz.net (Mike Orr)
Date: Thu, 5 Aug 2004 13:12:59 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be882040801142276bbec82@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
Message-ID: <20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>

On Sun, Aug 01, 2004 at 02:22:54PM -0700, Britt Green wrote:
> You know, I've looked at the finger tutorial a few times. The problem
> is that it doesn't really explain the code very well. 

I wrote some notes to try to explain the Finger tutorial.
http://sluggo.kicks-ass.org/twisted_finger_gentle.txt

-- 
-Mike Orr (aka. Sluggo), mso at oz.net  (iron at sense-sea-MegaSub-1-465.oz.net)
   http://sluggo.kicks-ass.org/                  Cxu vi parolas Esperante?



From matt at dalchemy.com  Thu Aug  5 16:53:46 2004
From: matt at dalchemy.com (Matt Feifarek)
Date: Thu, 05 Aug 2004 16:53:46 -0400
Subject: [Twisted-Python] Question on using processes
Message-ID: <41129E5A.8070406@dalchemy.com>

I'm using twisted.internet.utils.getProcessOutput() to run commands from 
a reactor.

I've pretty much got this working okay (with a few false starts related 
to how args are put together... you can't send in a big long string; you 
literally have to make a list of argument words... what a PITA).

Now, I've got a command that needs to pipe something through another 
command, something like this:

/bin/cat foo.txt | /usr/bin/tail

If I set up my "process" like this:

CMD = "/bin/cat"
ARGS = [ "foo.txt", "|", "/usr/bin/tail" ]
d = utils.getProcessOutput( CMD, ARGS )

It doesn't work. Now, this is a stupidly-trivial example, but it seems 
to have trouble with thinking that the pipe symbol is a filename. My 
less trivial example merely hangs up the console and does nothing.

I figured that this had something to do with the pipe (obviously) so I 
tried going deeper and using reactor.spawnProcess...

This is a little over my head, but I tried using an instance of 
twisted.internet.protocol.ProcessProtocol as the protocol, and turning 
on usePTY. Still, no dice.

So, my next theory is that it has something to do with the way that the 
process is literally launched. This is extremely low level, and has 
resisted my attempts to figure it out even with a debugger and stepping 
through.

My question: what's the best way to go about this?

Options:
- write my own Process protocol somehow?
- figure out what child descriptors may be required to fix this?
- simply make a bash script that wraps up the pipe inside of a black box 
and make the reactor call that?

Thanks!



From screwtape at froup.com  Thu Aug  5 18:12:13 2004
From: screwtape at froup.com (Tim Allen)
Date: Fri, 6 Aug 2004 08:12:13 +1000
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41129E5A.8070406@dalchemy.com>
References: <41129E5A.8070406@dalchemy.com>
Message-ID: <80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>

On 6 Aug 2004, at 06:53, Matt Feifarek wrote:
> I'm using twisted.internet.utils.getProcessOutput() to run commands 
> from a reactor.
>
> I've pretty much got this working okay (with a few false starts 
> related to how args are put together... you can't send in a big long 
> string; you literally have to make a list of argument words... what a 
> PITA).

This is due to Python's (and C's) Unix heritage. The kernel call to 
spawn a new process takes the full path to the executable, and an array 
of null-terminated strings which are the arguments. This can be quite 
tedious to set up in C, but shouldn't be too painful under Python. 
Contrast this behaviour with MS-DOS and Win32, whose 'new process' API 
takes a single string of command-line parameters, and passes that 
single string directly to the new process.

When you type a command with some parameters at the command line, how 
does the program wind up with a sequence of command-line parameters?

Under Unix, the shell (usually /bin/sh or compatible) reads through the 
command-line and does all its special parsing - adding environment 
variables, constructing pipes, breaking up the string into 
space-delimited chunks, doing backslash-escaping and so forth, it 
searches the PATH environment variable for the location of the named 
program, and winds up with a full executable path and an array of 
string parameters which it hands off to the kernel, and your process is 
started. Because most shells have a well-designed meta-character set, 
you can spawn pretty much any program you like with pretty much any 
command-line you like (except for embedded nulls, of course) grouped in 
any way you like.

Under DOS/Win32, the shell (usually CMD.EXE) takes the command-line you 
give, searches $PATH for the executable, and hands the executable's 
path and the command-line string off to the kernel. The program that's 
started is responsible for parsing the given string into a list of 
parameters, and of course they all do it slightly differently. Some 
don't let you use filenames with spaces, some let you use filenames 
with spaces but don't let you use filenames with quotes, and so forth.

For example, under Unix, I can use 'python -c' to make instant Python 
scripts:

	python -c 'print "Hello, \"World\""'

Under Win32, I don't believe I can do the above step because CMD.EXE 
always treats double-quotes as delimiting a filename with spaces. I 
can't make a single commandline parameter that includes embedded 
quotes.

> Now, I've got a command that needs to pipe something through another 
> command, something like this:
>
> /bin/cat foo.txt | /usr/bin/tail

The reason for this is that piping is set up and executed by the shell, 
not the kernel. What you really need (to solve both these problems) is 
a way to get the shell to do all the dirty work for you - and luckily, 
such a feature exists. For the above example, instead of executing 
/bin/cat and handing it the other parameters try executing /bin/sh and 
giving it the parameters ['-c', '/bin/cat foo.txt | /usr/bin/tail']




From damon.fasching at sbcglobal.net  Thu Aug  5 18:59:09 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Thu, 5 Aug 2004 15:59:09 -0700 (PDT)
Subject: [Twisted-Python] Re: 111: Connection refused
Message-ID: <20040805225909.72780.qmail@web81006.mail.yahoo.com>


Hi,

I've made a few more checks regarding my connection
refused error.

> Well, it depends on what the problem is, and we
still
> don't know that.  It also depends on what your PB
> server actually is; there's not really any such
thing > as a plain "PB server"; that doesn't really
tell us
> anything about what it is or how it should run. 
What
> application is this PB server?  Is it run by twistd
> (and if so, from a tap or a tac)?  Or is it a script
> that calls reactor.run() directly?  Etc.

> You could also try "netstat -ntlp", and see if there

> is a process  listening on that port, and if so, is
> it listening on the right interface (probably
> 0.0.0.0), and is it the right process.

> -Andrew.

I've reproduced the problem with a very bare server
script, the following 4 lines:

from twisted.spread import pb
from twisted.internet import reactor
reactor.listenTCP(8789, pb.PBServerFactory(pb.Root()))
reactor.run()

I have two machines, shuttle-1 and shuttle-2.  I have
no problem on shuttle-1, I get the "Connection
refused" error on shuttle-2.

Before starting the server, "telnet localhost 8789",
"telnet shuttle-1 8789" and "telnet shuttle-2 8789"
all fail with the following messge, as expected, from
either machine.

Trying <ip add>...
telnet: connect to address <ip add>: Connection
refused

After starting the server on both machines,

~ telnet localhost 8789

works on both machines, and

~ telnet shuttle-1 8789

works from shuttle-2, but 

~ telnet shuttle-2 8789

from shuttle-1 fails with the Connection refused
error.

In addition, after starting the server, the following
line is added to the output of "netstat -ntlp" on both
machines

tcp        0      0 0.0.0.0:8789            0.0.0.0:* 
             LISTEN      4040/python

modulo the PID.

Is there somewhere else to look?

Also, perhaps someone can suggest a terse introduction
to Linux networking.

Thanks,
  Damon




From corydodt at twistedmatrix.com  Thu Aug  5 19:47:38 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 05 Aug 2004 16:47:38 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
References: <305be8820408011240726f59ee@mail.gmail.com>	<410D493F.5030900@divmod.com>	<305be882040801142276bbec82@mail.gmail.com>
	<20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
Message-ID: <4112C71A.4040204@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Great notes!  The extra detail on Deferred and Application should be
especially helpful.  Can we get edit this a bit and get it into the
official docs? (I know.. open a doc bug.)

Mike Orr wrote:
|
| I wrote some notes to try to explain the Finger tutorial.
| http://sluggo.kicks-ass.org/twisted_finger_gentle.txt
|

Just one nit, since you had a question mark anyway:

| Note that the word "service" is used here slightly differently than
| how NT defines it.  'twistd' is an NT service and can be managed by NT
| tools (true?), but child services are not visible to NT tools.
~         ^^^^^
Erm, false for the first clause of the last sentence.  twistd runs only
in the foreground on Windows.  Services on Windows are a little more
involved than daemons on Unix; think sysvinit and background execution
combined -- whereas daemons are just the background execution part.
There's a tool called tap2ntsvc in sandbox/moonfallen if you're curious
about how to make Twisted processes run as NT services.

You were correct in saying child services are not visible to NT tools,
when you do manage to service-ize a twisted process.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBEsca3A5SrXAiHQcRAnrdAJ9CGBD80SAw5z4kOCo4X/GBDJ+segCghoHJ
f4XqBeNcVH/H/3H5gmib18Q=
=AHRN
-----END PGP SIGNATURE-----



From matt.feifarek at gmail.com  Thu Aug  5 20:28:14 2004
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 5 Aug 2004 20:28:14 -0400
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>
References: <41129E5A.8070406@dalchemy.com>
	<80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>
Message-ID: <6fb6dbfe040805172820a6af46@mail.gmail.com>

Thank you for your very informative reply. I didn't realize that the
reactor was getting THAT low-level. Cool.

On Fri, 6 Aug 2004 08:12:13 +1000, Tim Allen <screwtape at froup.com> wrote:

> The reason for this is that piping is set up and executed by the shell,
> not the kernel. What you really need (to solve both these problems) is
> a way to get the shell to do all the dirty work for you - and luckily,
> such a feature exists. For the above example, instead of executing
> /bin/cat and handing it the other parameters try executing /bin/sh and
> giving it the parameters ['-c', '/bin/cat foo.txt | /usr/bin/tail']



From andrew-twisted at puzzling.org  Thu Aug  5 20:53:36 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 6 Aug 2004 10:53:36 +1000
Subject: [Twisted-Python] Re: 111: Connection refused
In-Reply-To: <20040805225909.72780.qmail@web81006.mail.yahoo.com>
References: <20040805225909.72780.qmail@web81006.mail.yahoo.com>
Message-ID: <20040806005336.GB30355@frobozz>

On Thu, Aug 05, 2004 at 03:59:09PM -0700, Damon Fasching wrote:
[...]
> 
> After starting the server on both machines,
> 
> ~ telnet localhost 8789
> 
> works on both machines, and
> 
> ~ telnet shuttle-1 8789
> 
> works from shuttle-2, but 
> 
> ~ telnet shuttle-2 8789
> 
> from shuttle-1 fails with the Connection refused
> error.
> 
> In addition, after starting the server, the following
> line is added to the output of "netstat -ntlp" on both
> machines
> 
> tcp        0      0 0.0.0.0:8789            0.0.0.0:* 
>              LISTEN      4040/python
> 
> modulo the PID.

Ok, then you almost certainly have a network configuration problem of some
kind.  While this isn't strictly speaking a Twisted problem, here's some
troubleshooting advice and further questions that might help...

Check that "host shuttle-2" from shuttle-1 resolves to the correct IP
address -- perhaps your DNS or /etc/hosts file is misconfigured.  Also, do
you have a firewall or router between those two machines?  -- if so, it may
be misconfigured to block connections from shuttle-1 to shuttle-2 on 8789.
Similarly, if you have a firewall/iptables rules on shuttle-1 and shuttle-2,
check them.  

Also, can you reach other services on shuttle-2 from shuttle-1, such as ssh
or http, or is every connection refused?

If you run "tcpdump host shuttle-1" on shuttle-2 while trying to connect to
shuttle-1, what traffic does it report, if any?  Similarly, can you ping
shuttle-2 from shuttle-1, and if so, does that tcpdump command report
traffic?

-Andrew.




From mary-twisted at puzzling.org  Thu Aug  5 23:27:42 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 6 Aug 2004 13:27:42 +1000
Subject: Next stop the world (Re: [Twisted-Python] Beginners Guide to Twisted
	Anywhere?)
In-Reply-To: <4112C71A.4040204@twistedmatrix.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
	<20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
	<4112C71A.4040204@twistedmatrix.com>
Message-ID: <20040806032742.GC4355@titus.home.puzzling.org>

On Thu, Aug 05, 2004, Cory Dodt wrote:
> Great notes!  The extra detail on Deferred and Application should be
> especially helpful.  Can we get edit this a bit and get it into the
> official docs? (I know.. open a doc bug.)

Yep :)

Mike, thanks very much for writing this. It would be great to be able to
incorporate it into the actual tutorial. I'm happy to do the work of
incorporating it (I'll even file the bug against myself), but you would
need to agree to this:

    ... all your contributions (including those initial patches you send
    to the mailing list) will have to be copyright consigned to the
    project leader, Glyph. The reason for this is flexibility in
    changing the license.

    http://twistedmatrix.com/developers/contributing

I'll likely contact you off-list if I don't hear from you.

I've been paying attention to complaints about the tutorial and do
intend to work on it. In fact, I'm unemployed (by choice) for at least
the next four months and hope to do extensive work on Twisted docs
(among other writing projects).

However, (once again), people could help out by understanding the
following:

 1. The Twisted docs are not perfect, complete, or, in fact, adequate.
 The project would like them to be better. We're not deliberately
 choosing the docs to be the way they are.
 
 Your criticisms are most likely valid. Your ideas for additions are
 most likely excellent.

 In particular, the tutorial as it stands was designed to be presented
 by a Twisted expert and listened to. It wasn't designed to be read. It
 *severely* needs additions to deal with the change in media.

 2. The best way to improve the Twisted docs is to do some writing
 yourself and contribute it to the project. Send it to me via email or
 via the bugtracker ( http://twistedmatrix.com/bugs/ , assign to
 "hypatia" ). I am willing to edit it, format it, extend it and add it
 to SVN. In fact, I'd be so pleased this would probably happen within a
 week.

 It would also be great to have more regular docs writers (since I don't
 qualify for this description) committing to SVN themselves :)

 3. In this case, we do have a "someone" who has some sense of
 responsibility towards the docs, and that someone is me. If you don't
 want to contribute yourself, help me improve the docs by filing bugs.

I'd like people to take note of #1 in particular because a lot of this
week's threads have focussed on solving the doc inadequacies by having
external documentation. Improving the existing docs is another
(complementary) path forward.

-Mary



From mary-twisted at puzzling.org  Fri Aug  6 00:25:11 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 6 Aug 2004 14:25:11 +1000
Subject: [Twisted-Python] Documentation author credits
Message-ID: <20040806042511.GA7863@titus.home.puzzling.org>

On IRC (just now) I suggested that people who've contributed to the docs
should probably have their names in them, if they like. It would be a
nice thing to do for people who took the trouble to write them, and show
potential contributors that we value their help. I'm thinking "by
So-and-so" and "thanks to So-and-so for their help" type things. As I
understand it the copyright assignment doesn't affect your ability to be
identified as an author in the slightest, so don't worry about that.

Anyway, if you've contributed to a Twisted doc, can you reply to this
mail off-list (don't tell me on IRC, I've got a brain like a sieve), and
let me know:

 - what the doc was

 - what your contribution was (sole author, main author, major
   contributor, minor contributor)

If you did a lot of work on a doc and specifically *do not* want credit
for it, you'll probably also want to tell me because after I process
replies to this mail I may ask "svn blame". Ditto if you checked it into
the repository but didn't write it.

-Mary



From serj_trejo at hotmail.com  Fri Aug  6 03:18:49 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Fri, 06 Aug 2004 03:18:49 -0400
Subject: [Twisted-Python] Twisted co from subversion repository won't install
Message-ID: <BAY12-F2trSByh133tY0001e240@hotmail.com>

I'm new to using subversion but I checked out today r4658 and after running 
"python setup.py build" (which seemed to work Ok) on Mac OS X, I then ran 
"python setup.py install" and received the following errors.

It may be something peculiar to my system as I've installed Python 2.3.4 via 
Fink for OS X 10.3.4.

Serg

# python setup.py install
running install
running build
running build_py
running build_ext
Checking if C extensions can be compiled, don't be alarmed if a few compile 
errors are printed.
gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd 
-DNDEBUG -g -O3 -Wall -Wstrict-prototypes -I/sw/include/python2.3 -c 
conftest.c -o conftest.o
gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd 
-DNDEBUG -g -O3 -Wall -Wstrict-prototypes -I/sw/include/python2.3 -c 
conftest.c -o conftest.o
running build_scripts
error: file 'bin/im' does not exist

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From kndyer at gmail.com  Fri Aug  6 06:03:06 2004
From: kndyer at gmail.com (Kelly Dyer)
Date: Fri, 6 Aug 2004 11:03:06 +0100
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted. Is it
	worth it?
Message-ID: <eaf4bf9604080603036c22de23@mail.gmail.com>

James,

After having done a bit more reading, I have to agree with everything
that you've said.  The only gains that I'm going to see will come from
spawning new processes and letting them propogate across the cluster.

Thanks for the informative response and kudos to everyone involved
with this project.  This appears to be a very well engineered
framework.   Almost _more_ important, I have found a wealth of
documentation and examples to help kick-start my work with it.

Cheers,
Kelly



From radeex at gmail.com  Fri Aug  6 07:30:00 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 6 Aug 2004 07:30:00 -0400
Subject: [Twisted-Python] ANN: SVN Twisted is not installable at the moment.
	(was Twisted co from subversion repository won't install)
In-Reply-To: <BAY12-F2trSByh133tY0001e240@hotmail.com>
References: <BAY12-F2trSByh133tY0001e240@hotmail.com>
Message-ID: <60ed19d40408060430618f4f55@mail.gmail.com>

On Fri, 06 Aug 2004 03:18:49 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:

[stuff about setup.py not working]

Twisted svn HEAD is in a state of change at the moment. Don't expect
setup.py to work right now. I'm probably going to be throwing out that
setup.py entirely. The reason for this is the split:

http://twistedmatrix.com/documents/

I'll try to rectify this shortly.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From radeex at gmail.com  Fri Aug  6 07:33:33 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 6 Aug 2004 07:33:33 -0400
Subject: [Twisted-Python] Re: ANN: SVN Twisted is not installable at the
	moment. (was Twisted co from subversion repository won't install)
In-Reply-To: <60ed19d40408060430618f4f55@mail.gmail.com>
References: <BAY12-F2trSByh133tY0001e240@hotmail.com>
	<60ed19d40408060430618f4f55@mail.gmail.com>
Message-ID: <60ed19d4040806043328e20d99@mail.gmail.com>

On Fri, 6 Aug 2004 07:30:00 -0400, Christopher Armstrong
<radeex at gmail.com> wrote:
> On Fri, 06 Aug 2004 03:18:49 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> http://twistedmatrix.com/documents/

Err, I got distracted while typing out that URL. I meant to say,

http://twistedmatrix.com/products/splitfaq


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From golux at comcast.net  Fri Aug  6 14:58:18 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 06 Aug 2004 14:58:18 -0400
Subject: [Twisted-Python] intermittent traceback using adbapi with pyPgSQL
Message-ID: <4113D4CA.6020603@comcast.net>

Twisted gurus,

I didn't want to create a bug report yet
because I'm not sure that it's a Twisted bug.  I
have only observed it while using pyPgSQL as the adaptor;
haven't seen it yet (and have run the exact same code
that produces it) with psycopg.

I see this traceback intermittently occur at the end of
chains of deferreds that include 2 or more adbapi
calls.  I can provide some example code, but I should
really develop a concise example (as opposed to my app code,
which is spread over 2 or 3 modules) that might be useful
as the basis for a unit test in case this is a Twisted
problem -- it's not clear to me where the problem is:
my code, Twisted, or pyPgSQL.  My natural assumption
would be the former, but the intermittency and the
adaptor-dependence makes me wonder.

I can run the exact same code several times without
incident and then suddenly get this traceback, which makes
me think it might be some allocated limit being exceeded
(threads in the thread pool?  sorry, clueless here).

Some observations:

* all database operations in the deferred chain complete
   successfully before the traceback occurs.

* it only occurs with pyPgSQL -- not with psycopg
   (at least I haven't yet seen it with psycopg, and
   believe me I've tried to make it happen! ... perhaps
   psycopg's thread management prevents it?)

* this always occurs at the end of a "test" in which there
   is a succeed(result) callback that prints the result and
   calls reactor.stop() -- I wonder if stopping the reactor
   (which wouldn't normally happen in an app, of course)
   breaks the pipe?

* I'm using
   - PostgreSQL 7.4.2
   - pyPgSQL 2.4
   - psycopg 1.1.15
   - Twisted 1.3.0
   - Python Python 2.3.3 (#1, Jul 22 2004, 15:58:51)
     [GCC 3.3.2 20031022 (Red Hat Linux 3.3.2-1)] on linux2
   - Fedora Core 1,  2.4.22-1.2197.nptl

Anyway, here's the traceback:
---------------------------------------------------------------------
Traceback (most recent call last):
   File "/usr/local/lib/python2.3/threading.py", line 436, in __bootstrap
     self.run()
   File "/usr/local/lib/python2.3/threading.py", line 416, in run
     self.__target(*self.__args, **self.__kwargs)
--- <exception caught here> ---
   File "/usr/local/lib/python2.3/site-packages/twisted/python/threadpool.py", 
line 157, in _worker
     context.call(ctx, function, *args, **kwargs)
   File "/usr/local/lib/python2.3/site-packages/twisted/python/context.py", line 
64, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File "/usr/local/lib/python2.3/site-packages/twisted/python/context.py", line 
43, in callWithContext
     return func(*args,**kw)
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/threads.py", 
line 42, in _putResultInDeferred
     reactor.callFromThread(deferred.callback, result)
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/base.py", line 
201, in callFromThread
     self.wakeUp()
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/base.py", line 
207, in wakeUp
     self.waker.wakeUp()
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/default.py", 
line 399, in wakeUp
     self.o.flush()
exceptions.IOError: [Errno 32] Broken pipe
---------------------------------------------------------------------

Has anyone else observed this?

Cheers,
Steve





From itamar at itamarst.org  Sat Aug  7 11:51:22 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 07 Aug 2004 11:51:22 -0400
Subject: [Twisted-Python] intermittent traceback using adbapi with pyPgSQL
In-Reply-To: <4113D4CA.6020603@comcast.net>
References: <4113D4CA.6020603@comcast.net>
Message-ID: <1091893881.30236.17.camel@sheriffpony>

It sounds like you have a database command running in the threadpool
after the reactor has already been shut down. Which suggests you just
want to make sure reactor.stop() is called after you're certain there
are no more database calls running (and you mustn't call reactor.stop()
in a thread of course - reactor.callFromThread(reactor.stop) if you want
to).




From eugen at leitl.org  Sat Aug  7 15:19:52 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Sat, 7 Aug 2004 21:19:52 +0200
Subject: [Twisted-Python] [p2p-hackers] source code (in python,
	using twisted) to my reliable udp rpc protocol
	(fwd from angryhicKclown@netscape.net)
Message-ID: <20040807191952.GO1400@leitl.org>

----- Forwarded message from angryhicKclown at netscape.net -----

From: angryhicKclown at netscape.net
Date: Sat, 07 Aug 2004 14:23:26 -0400
To: p2p-hackers at zgp.org
Subject: [p2p-hackers] source code (in python,
	using twisted) to my reliable udp rpc protocol
X-Mailer: Atlas Mailer 2.0
Reply-To: "Peer-to-peer development." <p2p-hackers at zgp.org>

I was paging thru the archives and realized I never posted it.

Works for me, but I've never done a large-scale test of it. Perhaps someone would like to and share the results?

It consists of several layers, a stack, if you will:
Reliable datagram - handles acks, etc
Datagram stream - allows one to send messages larger than the MTU
CBOB - binary format for storing structured data, similar to xml, except it doesn't suck
TinyRPC - RPC protocol build upon all of those layers

Enjoy. Requires www.twistedmatrix.com.

---- cut here ----
# TinyRPC protocol

# bsd license

from twisted.internet import reactor, protocol, interfaces, defer
from twisted.protocols import policies

import socket
import struct
import binascii
import cStringIO as StringIO
import time

CBOB_BOOL   = 0
CBOB_INT    = 1
CBOB_FLOAT  = 2
CBOB_STR    = 3
CBOB_USTR   = 4
CBOB_TUPLE  = 5
CBOB_LIST   = 6
CBOB_DICT   = 7
CBOB_OBJ    = 8
CBOB_NONE   = 9

def cbob_encode(obj, buf=StringIO.StringIO()):
    if isinstance(obj, bool):
        if obj:
            buf.write(struct.pack("! BB", CBOB_BOOL, 1))
        else:
            buf.write(struct.pack("! BB", CBOB_BOOL, 0))
    elif isinstance(obj, int):
        buf.write(struct.pack("! Bi", CBOB_INT, obj))
    elif isinstance(obj, float):
        buf.write(struct.pack("! Bf", CBOB_FLOAT, obj))
    elif isinstance(obj, str):
        buf.write(struct.pack("! BH", CBOB_STR, len(obj)) + obj)
    elif isinstance(obj, unicode):
        buf.write(struct.pack("! BH", CBOB_USTR, len(obj)) + obj)
    elif isinstance(obj, tuple):
        buf.write(struct.pack("! BB", CBOB_TUPLE, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
    elif isinstance(obj, list):
        buf.write(struct.pack("! BH", CBOB_LIST, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
    elif isinstance(obj, dict):
        buf.write(struct.pack("! BH", CBOB_DICT, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
            cbob_encode(obj[o], buf)
    elif isinstance(obj, object):
        members = obj.__dict__.items() #inspect.getmembers(obj)
        buf.write(struct.pack("! BHB", CBOB_OBJ, len(members), len(obj.__class__.__name__)))
        buf.write(obj.__class__.__name__)
        for member in members:
            cbob_encode(member[0], buf)
            cbob_encode(member[1], buf)
    elif isinstance(obj, NoneType):
        buf.write(struct.pack("! B", CBOB_NONE))
    else:
        raise "couldn't serialize "  + str(obj)
        
def cbob_decode(buf):
    d = buf.read(1)
    typ = struct.unpack("! B", d)[0]
    if typ == CBOB_BOOL:
        v = struct.unpack("! B", buf.read(1))[0]
        return v == 1
    elif typ == CBOB_INT:
        return struct.unpack("! i", buf.read(4))[0]
    elif typ == CBOB_FLOAT:
        return struct.unpack("! f", buf.read(4))[0]
    elif typ == CBOB_STR:
        l = struct.unpack("! H", buf.read(2))[0]
        return buf.read(l)
    elif typ == CBOB_USTR:
        l = struct.unpack("! H", buf.read(2))[0]
        return unicode(buf.read(l))
    elif typ == CBOB_TUPLE:
        l = struct.unpack("! B", buf.read(1))[0]
        v = ()
        for i in range(0, l):
            v = v + (cbob_decode(buf),)
        return v
    elif typ == CBOB_LIST:
        l = struct.unpack("! H", buf.read(2))[0]
        v = []
        for i in range(0, l):
            v.append(cbob_decode(buf))
        return v
    elif typ == CBOB_DICT:
        l = struct.unpack("! H", buf.read(2))[0]
        v = {}
        for i in range(0, l):
            key,value = cbob_decode(buf),cbob_decode(buf)
            v[key] = value
        return v
    elif typ == CBOB_OBJ:
        membercount,clsnamesize = struct.unpack("! HB", buf.read(3))
        clsname = buf.read(clsnamesize)
        v = globals()[clsname]()
        for i in range(0, membercount):
            name,value = cbob_decode(buf),cbob_decode(buf)
            setattr(v, name, value)
        return v
    elif typ == CBOB_NONE:
        return None
    else:
        raise "invalid typecode " + typ

class DispatcherTransport:
    __implements__ = interfaces.IUDPConnectedTransport
    def __init__(self, dispatcher, addr, proto):
        self.dispatcher = dispatcher
        self.addr = addr
        self.protocol = proto
    def getHost(self):
        return self.dispatcher.getHost()
    def getPeer(self):
        return ("INET",) + self.addr
    def write(self, packet):
        return self.dispatcher.transport.write(packet, self.addr)
    def loseConnection(self):
        self.protocol.stopProtocol()
        del self.protocol
            
class Dispatcher(protocol.DatagramProtocol):
    # TODO: call startFactory()?
    def __init__(self, factory):
        self.handlers = {}
        factory.dispatcher = self
        self.factory = factory
    def __getitem__(self, addr):
        if addr not in self.handlers:
            return self.open_new(addr)
        return self.handlers[addr]
    def datagramReceived(self, data, addr):
        self[addr].datagramReceived(data)
    def getHost(self):
        return self.transport.getHost()
    def open_new(self, addr):
        assert addr not in self.handlers, "Already connected"
        p = self.factory.buildProtocol(addr)
        p.transport = DispatcherTransport(self, addr, p)
        p.startProtocol()
        self.handlers[addr] = p
        return p
    def startProtocol(self):
        return self.factory.startFactory()
    def stopProtocol(self):
        return self.factory.stopFactory()

class ReliableDatagramProtocol(protocol.ConnectedDatagramProtocol):
    "acks and stuff"
    NUM_RETRANSMITS = 2 #10
    RETRANSMIT_INTERVAL = .200
    MAX_LAST_RECEIVED = 50
    OP_SEND = 0
    OP_ACK = 128 # msb set
    
    def startProtocol(self):
        self.retransmits = {} # crc->(data,num retransmits, bits, delayedcall for retransmit, Deferred when packet is acked)
        self.last_received = []
    def stopProtocol(self, reason):
        print "protocol stopped",reason
    def send(self, data, bits=0):
        crc = binascii.crc32(data)
        d = defer.Deferred()
        self.retransmits[crc] = (data, self.NUM_RETRANSMITS, bits, reactor.callLater(self.RETRANSMIT_INTERVAL, self.retransmit, crc), d)
        self.send_packet(self.OP_SEND, bits, data)
        return d
    def retransmit(self, crc):
        t = self.retransmits[crc]
        self.send_packet(self.OP_SEND, t[2], t[0])
        if t[1] > 0:
            self.retransmits[crc] = (t[0], t[1] - 1, t[2], reactor.callLater(self.RETRANSMIT_INTERVAL, self.retransmit, crc), t[4])
        else:
            self.packetLost(retransmits[crc][0])
            del self.retransmits[crc]
    def send_packet(self, op, bits, data):
        self.transport.write(struct.pack("! B", op | bits) + data)
    def send_ack(self, crc):
        if len(self.last_received) >= self.MAX_LAST_RECEIVED:
            del self.last_received[0]
        self.last_received.append(crc)
        self.transport.write(struct.pack("! Bi", self.OP_ACK, crc))
    def got_ack(self, crc):
        self.retransmits[crc][3].cancel()
        d = self.retransmits[crc][4]
        del self.retransmits[crc]
        d.callback(crc)
    def datagramReceived(self, data):
        opbyte, = struct.unpack("! B", data[0])
        op = opbyte & 128
        data = data[1:]
        if op == self.OP_SEND:
            crc = binascii.crc32(data)
            if crc not in self.last_received:
                self.dataReceived(data, opbyte)
            self.send_ack(crc)
        else:
            self.got_ack(struct.unpack("! i", data)[0])
    def dataReceived(self, data, bits):
        print "received",data,"from",self.transport.getPeer()
    def packetLost(self):
        self.transport.loseConnection()

class ReliableDatagramStreamMessageProtocol(ReliableDatagramProtocol):
    "Sends large messages (> mtu size) and sends them in a buffered block..."
    MTU = 512
    OP_BEGINMSG = 64 # 2nd msb set
    OP_DATA = 0

    def startProtocol(self):
        ReliableDatagramProtocol.startProtocol(self)
        self.outmessagequeue = [] # data len, stream, bits
        self.inmessage = None
        self.packetcount = 0
        self.numpackets = 0
    def sendMessage(self, data, bits=0):
        self.outmessagequeue.append((len(data), StringIO.StringIO(data), bits))
        if len(self.outmessagequeue) == 1:
            self.send_first_block()
    def send_first_block(self, dummy=""):
        length,stream,bits = self.outmessagequeue[0]
        length = length - self.MTU + 4
        if length < 0:
            length = 0
        length = length + 1
        self.send(struct.pack("! I", length / self.MTU + length % self.MTU) + stream.read(self.MTU - 4), self.OP_BEGINMSG | bits).addCallback(self.send_next_block)
    def send_next_block(self, dummy=""):
        length,stream,bits = self.outmessagequeue[0]
        d = stream.read(self.MTU)
        if len(d) > 0:
            self.send(d, self.OP_DATA | bits).addCallback(self.send_next_block)
        else:
            stream.close()
            del self.outmessagequeue[0]
            if len(self.outmessagequeue) > 0:
                self.send_next_block()
    def dataReceived(self, data, bits):
        if bits & 64 == self.OP_DATA:
            self.packetcount = self.packetcount + 1
            self.inmessage.write(data)
        else:
            self.inmessage = StringIO.StringIO()
            self.packetcount = 1
            mtu = len(data) # the entire packet size is the size of the mtu
            self.numpackets = struct.unpack("! I", data[:4])[0]
            self.inmessage.write(data[4:])
        if self.packetcount >= self.numpackets:
            self.messageReceived(self.inmessage.getvalue(), bits)
            self.inmessage = StringIO.StringIO()
    def messageReceived(self, message, bits):
        print "got message", message

class DatagramRPCProtocol(ReliableDatagramStreamMessageProtocol):
    OP_CALL = 32
    OP_RETURN = 0
    MAX_CALLID = 512
    
    def startProtocol(self):
        ReliableDatagramStreamMessageProtocol.startProtocol(self)
        if hasattr(self.factory, "buildRemote"):
            self.remotes = self.factory.buildRemote()
        self.calls = {}
        self.callid = 0
    def messageReceived(self, message, bits):
        message = StringIO.StringIO(message)
        if bits & 32 == self.OP_CALL:
            t, objname, methodname, args, kwargs = cbob_decode(message)
            r = getattr(self.remotes[objname], methodname)(*args,**kwargs)
            #print "calling " + objname + "." + methodname
            if isinstance(r, defer.Deferred):
                r.addCallback(lambda result: self.send_result(t, result))
            else:
                self.send_result(t, r)
        else:
            t,r = cbob_decode(message)
            self.calls[t].callback(r)
    def send_result(self, t, r):
        sio = StringIO.StringIO()
        cbob_encode((t, r), sio)
        self.sendMessage(sio.getvalue(), self.OP_RETURN)
    def callRemote(self, objname, methodname, *args, **kwargs):
        t = self.callid
        if self.callid == self.MAX_CALLID:
            self.callid = 0
        else:
            self.callid = self.callid + 1
        self.calls[t] = defer.Deferred()
        sio = StringIO.StringIO()
        cbob_encode((t, objname, methodname, args, kwargs), sio)
        self.sendMessage(sio.getvalue(), self.OP_CALL)
        return self.calls[t]

#class LazyRMIProtocol(DatagramRPCProtocol):
#    raise "Todo: implement"

class TestObject:
    def hello(self, name):
        return "Hello, " + name.first + " " + name.last

class Name:
    first = ""
    last = ""
    
def test():
    reactor.callLater(0, test2)
    reactor.run()
    
def test2():
    f = protocol.ServerFactory()
    #f.protocol = ReliableDatagramProtocol
    #f.protocol = ReliableDatagramStreamMessageProtocol
    f.protocol = DatagramRPCProtocol
    f.buildRemote = lambda: {"myObj" : TestObject()}
    d = Dispatcher(f)
    d2 = Dispatcher(f)
    p = d[socket.gethostbyname("localhost"), 8889]
    p2 = d[socket.gethostbyname("localhost"), 8888]
    reactor.listenUDP(8888, d)
    reactor.listenUDP(8889, d2)
    reactor.callLater(0, test3, p, p2)

def test3(p, p2):
    name = Name()
    name.first = "great"
    name.last = "world"
    p.callRemote("myObj", "hello", name).addCallback(test4)

def test4(r):
    print "result of call", r
    
if __name__ == "__main__":
    test()
    

__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp
_______________________________________________
p2p-hackers mailing list
p2p-hackers at zgp.org
http://zgp.org/mailman/listinfo/p2p-hackers
_______________________________________________
Here is a web page listing P2P Conferences:
http://www.neurogrid.net/twiki/bin/view/Main/PeerToPeerConferences

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040807/bc6025da/attachment.pgp 

From golux at comcast.net  Sun Aug  8 02:06:53 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 08 Aug 2004 02:06:53 -0400
Subject: [Twisted-Python] How to write to log in the context of a
	tap-builder?
Message-ID: <4115C2FD.4010508@comcast.net>

Seems that twistd controls the log while it runs the
stuff in the tap, so if I do a log.msg('blah')
in there it's ignored ... is there a way to "borrow"
the log from twistd and write something to it (like
have my service say something when it starts up)?

Steve



From Richard.Sharp at t-online.de  Mon Aug  9 09:16:46 2004
From: Richard.Sharp at t-online.de (Richard Sharp)
Date: Mon, 09 Aug 2004 15:16:46 +0200
Subject: [Twisted-Python] Problem with SYN_SENT's under SCO
Message-ID: <4117793E.4010201@gmx.de>

Hello,
I recently had a problem under SCO that I had to solve. The program was 
piling up open socket objects all hanging in the state of SYN_SENT. 
Eventually the maximum number of open files was exceeded and the 
application hung badly.

I eventually narrowed the problem down with a perfectly normal python 
program to trying to connect as a client to a server that is not 
listening. The first connect returns the error EINPROGRESS, the second 
connect then returns the error "Connection refused". Running a simple 
program that repeatedly tried to connect, I could use "netstat -a" to 
watch the SYN_SENT's increasing. This only appears to happen under SCO 
and even here I am not sure whether it is not version specific.

I discovered that closing the socket object after the "connection 
refused" seemed to release any open objects and removed the SYN_SENTS, 
so I changed failIfNotConnected to what you see below. There may be a 
better or more appropriate solution but this has at least got rid of my 
problem.

Version 1.3.0 internet/tcp.py from line 355:

def failIfNotConnected(self, err):
        if sys.platform[0:3] != 'sco':
            if (self.connected or
                self.disconnected or
                not (hasattr(self, "connector"))):
                return
        else:
            self.socket.close()
            if not (hasattr(self,"connector")):
                return
        self.connector.connectionFailed(failure.Failure(err))
        if hasattr(self, "reactor"):
            # this doesn't happens if we failed in __init__
            self.stopReading()
            self.stopWriting()
            del self.connector

greetings,

Richard Sharp




From general at eepatents.com  Mon Aug  9 16:44:11 2004
From: general at eepatents.com (Ed Suominen)
Date: Mon, 9 Aug 2004 13:44:11 -0700
Subject: [Twisted-Python] "Twisted Web" Book
Message-ID: <200408091344.11409.general@eepatents.com>

Glad to see there's a book, but why isn't it under the O'Reilly name? Hmmm...

http://tinyurl.com/4adsh

Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From radeex at gmail.com  Mon Aug  9 16:58:32 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 9 Aug 2004 16:58:32 -0400
Subject: [Twisted-Python] "Twisted Web" Book
In-Reply-To: <200408091344.11409.general@eepatents.com>
References: <200408091344.11409.general@eepatents.com>
Message-ID: <60ed19d4040809135840f6b809@mail.gmail.com>

On Mon, 9 Aug 2004 13:44:11 -0700, Ed Suominen <general at eepatents.com> wrote:
> Glad to see there's a book, but why isn't it under the O'Reilly name? Hmmm...
> 
> http://tinyurl.com/4adsh

Well, it's apropos that the book involves an unspeakable terror... :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dave at krondo.com  Mon Aug  9 22:48:22 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 19:48:22 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1091692927.2999.7.camel@localhost>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost>
Message-ID: <1092106102.1790.45.camel@oneiros>

On Thu, 2004-08-05 at 01:02, glyph wrote:
> On Thu, 2004-08-05 at 03:06 -0400, James Y Knight wrote:
> > So, I was a bit irritated recently because there is no way to test for 
> > private name usage in a module's namespace. '__all__' is a good start, 
> > but it is somewhat poor for a few reasons:
> 
> WOW.  THank you for doing this, james.  This is more useful than
> PyChecker output, I think.  It's also a little depresing.  We really
> need a better-documented public API!
> 
> I have created 2 new issues for this, one for adding __all__ to all
> modules and one for testing that it's obeyed properly.  #658 and #659,
> respectively.  They are tentatively assigned to you, but I expect you
> can carve up Twisted and motivate others to actually do most of the
> work :).

On the subject of adbapi using t.i.threads._putResultInDeferred,
the latter function is useful for anyone managing their own threads.
Anyone object if it is renamed to putResultInDeferred and made
public?

dave





From glyph at divmod.com  Tue Aug 10 00:23:29 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 00:23:29 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092106102.1790.45.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
Message-ID: <1092111809.26823.13.camel@kazekage>

On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:

> On the subject of adbapi using t.i.threads._putResultInDeferred,
> the latter function is useful for anyone managing their own threads.
> Anyone object if it is renamed to putResultInDeferred and made
> public?

Actually, yes, I would object.

It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
one of the major issues with doing a proper reactor shut-down.  It
should be doing reactor.callInThread, not its own thread management.  I
will note that the API which uses it is simply a deferToThread clone.

All the thread-management logic in adbapi can easily be ported to use
t.i.threads.deferToThread and use logical task queue identifiers instead
of physical thread IDs.  If you agree, please create an issue in the
tracker for this.

Chandler might have a legitimate use-case for putResultInDeferred, but
I'd still like to try to talk them out of doing their own thread
management first :).




From dave at krondo.com  Tue Aug 10 01:03:40 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 22:03:40 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092111809.26823.13.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
Message-ID: <1092114220.25013.53.camel@oneiros>

On Mon, 2004-08-09 at 21:23, Glyph Lefkowitz wrote:
> On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:
> 
> > On the subject of adbapi using t.i.threads._putResultInDeferred,
> > the latter function is useful for anyone managing their own threads.
> > Anyone object if it is renamed to putResultInDeferred and made
> > public?
> 
> Actually, yes, I would object.
> 
> It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
> one of the major issues with doing a proper reactor shut-down.  It
> should be doing reactor.callInThread, not its own thread management.  I
> will note that the API which uses it is simply a deferToThread clone.
> 
> All the thread-management logic in adbapi can easily be ported to use
> t.i.threads.deferToThread and use logical task queue identifiers instead
> of physical thread IDs.  If you agree, please create an issue in the
> tracker for this.

I agree, with the caveat that the reactor threadpool size
adjustment api will need to be enhanced so that adbapi can
request more threads if the max connections is high, without
reducing threads if the max is low. suggestThreadPoolSize
is too crude to do that. Min threads probably needs to be
adjustable as well. Agreed?

dave





From dave at krondo.com  Tue Aug 10 01:16:50 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 22:16:50 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092114220.25013.53.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
Message-ID: <1092115010.1787.60.camel@oneiros>

On Mon, 2004-08-09 at 22:03, Dave Peticolas wrote:
> On Mon, 2004-08-09 at 21:23, Glyph Lefkowitz wrote:
> > On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:
> > 
> > > On the subject of adbapi using t.i.threads._putResultInDeferred,
> > > the latter function is useful for anyone managing their own threads.
> > > Anyone object if it is renamed to putResultInDeferred and made
> > > public?
> > 
> > Actually, yes, I would object.
> > 
> > It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
> > one of the major issues with doing a proper reactor shut-down.  It
> > should be doing reactor.callInThread, not its own thread management.  I
> > will note that the API which uses it is simply a deferToThread clone.
> > 
> > All the thread-management logic in adbapi can easily be ported to use
> > t.i.threads.deferToThread and use logical task queue identifiers instead
> > of physical thread IDs.  If you agree, please create an issue in the
> > tracker for this.
> 
> I agree, with the caveat that the reactor threadpool size
> adjustment api will need to be enhanced so that adbapi can
> request more threads if the max connections is high, without
> reducing threads if the max is low. suggestThreadPoolSize
> is too crude to do that. Min threads probably needs to be
> adjustable as well. Agreed?

On further thought, I'm not so sure about this. I have a real
application that is managing multiple connection pools. If
every connection pool is sharing the same threadpool, how
can I prevent one connection pool from starving the others,
as well as non-adbapi tasks?

dave





From glyph at divmod.com  Tue Aug 10 01:21:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 01:21:14 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092114220.25013.53.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
Message-ID: <1092115274.12422.12.camel@localhost>

On Tue, 2004-08-10 at 01:03, Dave Peticolas wrote:

> I agree, with the caveat that the reactor threadpool size
> adjustment api will need to be enhanced so that adbapi can
> request more threads if the max connections is high, without
> reducing threads if the max is low. suggestThreadPoolSize
> is too crude to do that. Min threads probably needs to be
> adjustable as well. Agreed?

Mostly - I disagree in that I think this can be decently well
implemented without actually delving into physical thread counts,
again... but then, I remember the various insane ways that Oracle prices
its client licenses, and other things like that...

At any rate, I see no reason why the threadpool interface couldn't be
improved as well, even if it's not perfectly necessary.  Do you think
the tasks could be separated?




From tim.stebbing at nunatak.com.au  Tue Aug 10 13:05:13 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Wed, 11 Aug 2004 03:05:13 +1000
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41129E5A.8070406@dalchemy.com>
References: <41129E5A.8070406@dalchemy.com>
Message-ID: <41190049.7050708@nunatak.com.au>

Matt Feifarek wrote:

> I've pretty much got this working okay (with a few false starts related 
> to how args are put together... you can't send in a big long string; you 
> literally have to make a list of argument words... what a PITA).

not that this is what your asking, but I just thought you might like to 
know:

args = ['a', 'long', 'list', 'of', 'annoying', 'PITA', 'args']

is less of a pita as:

args = 'a long list of annoying PITA args'.split()

-tjs

-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From Bosnjak at iskratel.si  Tue Aug 10 04:02:55 2004
From: Bosnjak at iskratel.si (Bosnjak Zoran    ITWEP)
Date: Tue, 10 Aug 2004 10:02:55 +0200
Subject: [Twisted-Python] stopTrying, cancel connection in progress
Message-ID: <57D0409C9DC47A4B936406AC1788FA0001679CD4@ntmailkr.iskratel.si>

I have a subclass of ReconnectingClientFactory.

If I do
- reactor.connectTCP(ip, port, myFactory)
and
- myFactory.stopTrying()
- del myFactory

... it seems like stopTrying does nothing.
When the connection is finally made (for the first time), myFactory.buildProtocol is called and new protocol instance is created...

So, how do I cancel connection in progress, so that myProtocol is never created?

Thanks!
Zoran Bosnjak




From guy at r-e-d.co.nz  Tue Aug 10 07:14:26 2004
From: guy at r-e-d.co.nz (Guy Robinson)
Date: Tue, 10 Aug 2004 23:14:26 +1200
Subject: [Twisted-Python] xml-rpc with cred authentication
Message-ID: <4118AE12.8030702@r-e-d.co.nz>

Hello,

I'm trying to write an application framework around Twisted xmlrpc but with 
authentication. Cred seems to be what I need but I have the following (newbie) 
questions:

Is my understanding correct? I need to write the following:

My understanding is the portal is used in defining the protocol? So if xmlrpc is 
a 'protocol' on top of http does http or xmlrpc already have a portal 
implemented for it? Or is my understanding all wrong?

The CredentialChecker as I want to store the username/password/credentials in 
zodb or atop

The Realm as this is what xmlrpc will use to get a user's credentials.

TIA,

Guy

ps: If anyone can point me to a twisted xmlrpc implementation with 
authentication it would be appreciated. (no point reinventing the wheel)





From glyph at divmod.com  Tue Aug 10 09:32:38 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 09:32:38 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092115010.1787.60.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros>
Message-ID: <1092144757.26823.22.camel@kazekage>

On Tue, 2004-08-10 at 01:16, Dave Peticolas wrote:

> On further thought, I'm not so sure about this. I have a real
> application that is managing multiple connection pools. If
> every connection pool is sharing the same threadpool, how
> can I prevent one connection pool from starving the others,
> as well as non-adbapi tasks?

You can easily limit how many outstanding operations can be pending from
any given pool.  Like I said in a previous email, virtual task !=
physical thread.  I'll write some example code later today.




From itamar at itamarst.org  Tue Aug 10 09:41:32 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Aug 2004 09:41:32 -0400
Subject: [Twisted-Python] xml-rpc with cred authentication
In-Reply-To: <4118AE12.8030702@r-e-d.co.nz>
References: <4118AE12.8030702@r-e-d.co.nz>
Message-ID: <1092145292.8259.1.camel@sheriffpony>

On Tue, 2004-08-10 at 07:14, Guy Robinson wrote:

> ps: If anyone can point me to a twisted xmlrpc implementation with 
> authentication it would be appreciated. (no point reinventing the wheel)

I'm pretty sure I posted an example of basic http auth to the list. This
was a generic wrapper for any resource, so it could wrap an xml-rpc
resource as well.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From dave at krondo.com  Tue Aug 10 10:48:14 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 10 Aug 2004 07:48:14 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092144757.26823.22.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros> <1092144757.26823.22.camel@kazekage>
Message-ID: <1092149294.25013.73.camel@oneiros>

On Tue, 2004-08-10 at 06:32, Glyph Lefkowitz wrote:
> On Tue, 2004-08-10 at 01:16, Dave Peticolas wrote:
> 
> > On further thought, I'm not so sure about this. I have a real
> > application that is managing multiple connection pools. If
> > every connection pool is sharing the same threadpool, how
> > can I prevent one connection pool from starving the others,
> > as well as non-adbapi tasks?
> 
> You can easily limit how many outstanding operations can be pending from
> any given pool.  Like I said in a previous email, virtual task !=
> physical thread.  I'll write some example code later today.

I'm not worried about limiting a connection pool to it's
max threads, which is still necessary to do, of course,
and I would be curious to see how your implementation
differs from my own ideas.

I want to ensure that a connection pool can actually
make use of all of its connections simultaneously if
it needs to (the performance half of why a connection
pool is used in the first place). If adbapi were to
ignore the reactor thread counts altogether, for example,
it would be pointless to specify a max connections greater
than 10 since the reactor won't let you use more than that
anyway, the default max thread count being 10 atm.

dave





From glyph at divmod.com  Tue Aug 10 12:28:52 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 12:28:52 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092149294.25013.73.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros> <1092144757.26823.22.camel@kazekage>
	<1092149294.25013.73.camel@oneiros>
Message-ID: <1092155332.26823.28.camel@kazekage>

On Tue, 2004-08-10 at 10:48, Dave Peticolas wrote:

> I want to ensure that a connection pool can actually
> make use of all of its connections simultaneously if
> it needs to (the performance half of why a connection
> pool is used in the first place). If adbapi were to
> ignore the reactor thread counts altogether, for example,
> it would be pointless to specify a max connections greater
> than 10 since the reactor won't let you use more than that
> anyway, the default max thread count being 10 atm.

Aah.  So what you're saying is you want an API which multiple
thread-pools can communicate via to establish a suggested minimum value
for the maximum thread count?

I'm not opposed to such a thing, but shouldn't this be a deployment /
tuning option particular to a configuration?  The suggested value would
have to be a fairly subtle hint...

Maybe something like
'IReactorThreads.suggestAdditionalThreads(suggestingObject,
addtlThreadCount)'?  The reactor could track the suggesting object with
a weakref to decrease the total thread count when it goes away.

-- 
  _  \ Glyph Lefkowitz   |"Along the shore the cloud waves break,
 / \  \ glyph at divmod.com | The twin suns sink behind the lake,
 ` _o_ \-----------------+ The shadows lengthen, In Carcosa"
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From seamonkeys at gmail.com  Tue Aug 10 13:48:46 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Tue, 10 Aug 2004 10:48:46 -0700
Subject: [Twisted-Python] Telnet server example?
Message-ID: <305be88204081010486864b6e7@mail.gmail.com>

So I got my Echo server working...kind of. There were some issues with
Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
Anyways, rather than re-invent the wheel I'd like to take advantage of
Twisted's Telnet classes. Unfortunately I've not been able to find any
examples of a server that uses Twisted's Telnet. I've tried writing my
own code but I've not had any luck getting it to work.

Therefore...would anyone mind showing me a minimal example of a server
that uses the Telnet library?

Many thanks,

Britt



From dave at krondo.com  Tue Aug 10 15:38:26 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 10 Aug 2004 12:38:26 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092155332.26823.28.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost>
	<1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros>
	<1092144757.26823.22.camel@kazekage>
	<1092149294.25013.73.camel@oneiros>
	<1092155332.26823.28.camel@kazekage>
Message-ID: <20040810193826.GA27011@krondo.net>

On Tue, Aug 10, 2004 at 12:28:52PM -0400, Glyph Lefkowitz wrote:
> On Tue, 2004-08-10 at 10:48, Dave Peticolas wrote:
> 
> > I want to ensure that a connection pool can actually
> > make use of all of its connections simultaneously if
> > it needs to (the performance half of why a connection
> > pool is used in the first place). If adbapi were to
> > ignore the reactor thread counts altogether, for example,
> > it would be pointless to specify a max connections greater
> > than 10 since the reactor won't let you use more than that
> > anyway, the default max thread count being 10 atm.
> 
> Aah.  So what you're saying is you want an API which multiple
> thread-pools can communicate via to establish a suggested minimum value
> for the maximum thread count?
 
Yes, precisely.


> I'm not opposed to such a thing, but shouldn't this be a deployment /
> tuning option particular to a configuration?  The suggested value would
> have to be a fairly subtle hint...
> 
> Maybe something like
> 'IReactorThreads.suggestAdditionalThreads(suggestingObject,
> addtlThreadCount)'?  The reactor could track the suggesting object with
> a weakref to decrease the total thread count when it goes away.

That sounds just fine. I'll add a tracker request for that.

dave




From projects at reedflute.com  Tue Aug 10 14:17:39 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 10 Aug 2004 20:17:39 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be88204081010486864b6e7@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>
Message-ID: <41191143.4020008@reedflute.com>

Britt Green wrote:

>So I got my Echo server working...kind of. There were some issues with
>Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
>Anyways, rather than re-invent the wheel I'd like to take advantage of
>Twisted's Telnet classes. Unfortunately I've not been able to find any
>examples of a server that uses Twisted's Telnet. I've tried writing my
>own code but I've not had any luck getting it to work.
>
>Therefore...would anyone mind showing me a minimal example of a server
>that uses the Telnet library?
>
>Many thanks,
>
>Britt
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>
Excuse the mess:

from twisted.protocols.telnet import *
from twisted.application import service,internet
from twisted.internet import protocol,defer

class TelnetProtocol(Telnet):
def connectionMade(self):
print "TelnetProtocol.connectionMade"
Telnet.connectionMade(self)

def telnet_Password(self, paswd):
"""I accept a password as an argument, and check it with the
checkUserAndPass method. If the login is successful, I call
loggedIn()."""
self.write(IAC+WONT+ECHO+"*****\r\n")
#try:
# checked = self.checkUserAndPass(self.username, paswd)
#except:
# return "Done"
#if not checked:
# return "Done"
self.loggedIn()
return "Command"


def dataReceived(self,data):
print "TelnetProtocol.dataReceived"
print data
Telnet.dataReceived(self,data)

class TelnetFactory(protocol.ServerFactory):
protocol = TelnetProtocol
def __init__(self, **kwargs): self.users = kwargs
def getUser(self, user):
print "TelnetFactory.getUser"
print user
return defer.succeed(self.users.get(user, "No such user"))

application=service.Application('serial',uid=1000,gid=100)

factory = TelnetFactory()
internet.TCPServer(1021, factory).setServiceParent(
service.IServiceCollection(application))


Do not trust this code - it will open a telnet session without any user 
authentication - you have to play around a little with the class as 
documented at :

http://www.twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html

regards,

Eugene






From guy at r-e-d.co.nz  Tue Aug 10 17:18:14 2004
From: guy at r-e-d.co.nz (Guy Robinson)
Date: Wed, 11 Aug 2004 09:18:14 +1200
Subject: [Twisted-Python] xml-rpc with cred authentication
In-Reply-To: <1092145292.8259.1.camel@sheriffpony>
References: <4118AE12.8030702@r-e-d.co.nz>
	<1092145292.8259.1.camel@sheriffpony>
Message-ID: <41193B96.4050008@r-e-d.co.nz>

Itamar Shtull-Trauring wrote:

> On Tue, 2004-08-10 at 07:14, Guy Robinson wrote:
> 
> 
>>ps: If anyone can point me to a twisted xmlrpc implementation with 
>>authentication it would be appreciated. (no point reinventing the wheel)
> 
> 
> I'm pretty sure I posted an example of basic http auth to the list. This
> was a generic wrapper for any resource, so it could wrap an xml-rpc
> resource as well.
> 

Cheers Itamar, googling with the wrong keywords.

Guy





From corydodt at twistedmatrix.com  Tue Aug 10 17:40:27 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 10 Aug 2004 14:40:27 -0700
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41190049.7050708@nunatak.com.au>
References: <41129E5A.8070406@dalchemy.com> <41190049.7050708@nunatak.com.au>
Message-ID: <411940CB.9050103@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Or shlex.split, if you want it to be parsed more like a command line really
would be parsed.

|>> shlex.split('a huge argument "list of things"')
['a', 'huge', 'argument', 'list of things']

Tim Stebbing wrote:
| Matt Feifarek wrote:
|
|> I've pretty much got this working okay (with a few false starts
|> related to how args are put together... you can't send in a big long
|> string; you literally have to make a list of argument words... what a
|> PITA).
|
|
| not that this is what your asking, but I just thought you might like to
| know:
|
| args = ['a', 'long', 'list', 'of', 'annoying', 'PITA', 'args']
|
| is less of a pita as:
|
| args = 'a long list of annoying PITA args'.split()
|
| -tjs
|

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBGUDL3A5SrXAiHQcRAnI5AJ9ziX2LdUK22hrIq482lghaJaua6gCginq8
lFBOHYSMj5tGVZrVmLmQdII=
=0rxp
-----END PGP SIGNATURE-----



From seamonkeys at gmail.com  Wed Aug 11 02:55:08 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Tue, 10 Aug 2004 23:55:08 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <41191143.4020008@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>
	<41191143.4020008@reedflute.com>
Message-ID: <305be882040810235518677e9e@mail.gmail.com>

Hi Eugene,

Thanks for the example. Just a couple of quick questions if you don't mind.

1) Does this create a telnetd daemon? The checkUserAndPass() method
seems like it checks with the /etc/passwd file to enable a user to
logon. Since I don't have access to my Unix box tonite I can't check
this myself. Please correct me if I'm mistaken.

2) What does defer do exactly?

3) Say I'm writing a program that takes connections via Telnet, like a
chat server. Would using Twisted's Telnet class be the best way to
accomplish this? Or should I just write my own via the more low-level
Twisted classes?

Thanks!

Britt

On Tue, 10 Aug 2004 20:17:39 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:
> 
> 
> Britt Green wrote:
> 
> >So I got my Echo server working...kind of. There were some issues with
> >Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
> >Anyways, rather than re-invent the wheel I'd like to take advantage of
> >Twisted's Telnet classes. Unfortunately I've not been able to find any
> >examples of a server that uses Twisted's Telnet. I've tried writing my
> >own code but I've not had any luck getting it to work.
> >
> >Therefore...would anyone mind showing me a minimal example of a server
> >that uses the Telnet library?
> >
> >Many thanks,
> >
> >Britt
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
> >
> Excuse the mess:
> 
> from twisted.protocols.telnet import *
> from twisted.application import service,internet
> from twisted.internet import protocol,defer
> 
> class TelnetProtocol(Telnet):
> def connectionMade(self):
> print "TelnetProtocol.connectionMade"
> Telnet.connectionMade(self)
> 
> def telnet_Password(self, paswd):
> """I accept a password as an argument, and check it with the
> checkUserAndPass method. If the login is successful, I call
> loggedIn()."""
> self.write(IAC+WONT+ECHO+"*****\r\n")
> #try:
> # checked = self.checkUserAndPass(self.username, paswd)
> #except:
> # return "Done"
> #if not checked:
> # return "Done"
> self.loggedIn()
> return "Command"
> 
> def dataReceived(self,data):
> print "TelnetProtocol.dataReceived"
> print data
> Telnet.dataReceived(self,data)
> 
> class TelnetFactory(protocol.ServerFactory):
> protocol = TelnetProtocol
> def __init__(self, **kwargs): self.users = kwargs
> def getUser(self, user):
> print "TelnetFactory.getUser"
> print user
> return defer.succeed(self.users.get(user, "No such user"))
> 
> application=service.Application('serial',uid=1000,gid=100)
> 
> factory = TelnetFactory()
> internet.TCPServer(1021, factory).setServiceParent(
> service.IServiceCollection(application))
> 
> Do not trust this code - it will open a telnet session without any user
> authentication - you have to play around a little with the class as
> documented at :
> 
> http://www.twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html
> 
> regards,
> 
> Eugene
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From dominic.fox at gmail.com  Wed Aug 11 09:04:14 2004
From: dominic.fox at gmail.com (Dominic Fox)
Date: Wed, 11 Aug 2004 14:04:14 +0100
Subject: [Twisted-Python] .htc behaviors
Message-ID: <f278b21304081106045e254e1c@mail.gmail.com>

Hi,

As you may know, the current version of MSIE doesn't support the css
:hover selector properly for elements other that <a>. There is a hack
to fix this, which involves attaching an IE "behavior" to the document
via CSS, as follows:

body { behavior: url(csshover.htc); }

and serving the csshover.htc file (which defines the behaviour using
jscript) along with the .css and .htm files as static content. The
hack is documented here:

http://www.xs4all.nl/~peterned/csshover.html

In order to get this to work with servers other than IIS, you need to
set the MIME type for files with the .htc extension to be
'text/x-component', otherwise the behavior won't be loaded properly.

This doesn't work using Twisted (specifically, using
twisted.web.static.File to serve the page, stylesheet and behavior).
You can serve the file, and you can set the MIME type by adding it to
mimetypes.types_map, but the behavior still isn't loaded.

One fix is to change the extension to something else, e.g. .htcHACK,
and set the MIME type for that extension instead. That works OK. But
why does it work, and why is it necessary? Is something else in
Twisted deciding that all files with .htc extensions are Twisted
documentation pages, and forcing the content type header back to
text/html?

curious,
Dominic

-- 
// Dream in black and white -
// model cities, shooting up in the air



From glyph at divmod.com  Wed Aug 11 14:05:22 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 11 Aug 2004 14:05:22 -0400
Subject: [Twisted-Python] .htc behaviors
In-Reply-To: <f278b21304081106045e254e1c@mail.gmail.com>
References: <f278b21304081106045e254e1c@mail.gmail.com>
Message-ID: <1092247522.3441.0.camel@localhost>

On Wed, 2004-08-11 at 14:04 +0100, Dominic Fox wrote:
> Hi,
> 
> As you may know, the current version of MSIE doesn't support the css

Please direct web-related discussion to the twisted-web mailing list.

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web





From mjohnston at skyweb.ca  Wed Aug 11 14:39:38 2004
From: mjohnston at skyweb.ca (Mark Johnston)
Date: Wed, 11 Aug 2004 13:39:38 -0500
Subject: [Twisted-Python] Architecture question for multiple client
	connections (longish)
Message-ID: <200408111339.38919.mjohnston@skyweb.ca>

I'm working on a small Twisted program to take care of conditional access for 
a digital cable system.  All that really involves is receiving high-level 
update packets with a TCP server, storing the info into a database, and 
building and transmitting low-level update packets to the cable converters.  
Because of the way the tuners work, the update packets have to be sent (via 
TCP) to 10-15 different IPs, each one belonging to a different encoder.

I'm not really sure what the proper way to build a system like this is.  I've 
got the two Protocols written and working OK, and now I'm looking at how to 
propagate information from one to the other.  When I get an update packet on 
the high-level interface, I update the database, but I then want to have the 
low-level connections send an update to the encoders.

What I don't understand is how Factories come into the situation.  It looks, 
from the examples, that factories generally are instantiated for each 
connection [reactor.connectTCP(host, port, Factory())].  Supposing I 
instantiate the factories and save them:

for h in hosts:
    cf = MyClientFactory()
    reactor.connectTCP(h, 12345, cf)
    client_factories.append(cf)

Now, I get a high-level update on my server connection, which, after parsing, 
ends up running:

class ServerProtocol(Protocol):
    # . . .
    def activate_converter(self, converter):
        self.dbpool.runOperation("SQL etc.")
        # now send an update to each encoder for the converter

That's where I'm stuck.  The best I can do is:
        for f in self.factory.factories:
            f.last_proto.send(the_update)

This requires a special server factory that stores a list of the client 
protocol factories, and a special client factory that stores the last 
protocol instance it returned.  It seems like there must be a better way to 
accomplish this - perhaps without making a factory for each client protocol, 
which seems inelegant.

Thanks for any suggestions,
Mark



From projects at reedflute.com  Wed Aug 11 15:04:57 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 11 Aug 2004 21:04:57 +0200
Subject: [Twisted-Python] Architecture question for multiple
	client	connections (longish)
In-Reply-To: <200408111339.38919.mjohnston@skyweb.ca>
References: <200408111339.38919.mjohnston@skyweb.ca>
Message-ID: <411A6DD9.3070308@reedflute.com>


>This requires a special server factory that stores a list of the client 
>protocol factories, and a special client factory that stores the last 
>protocol instance it returned.  It seems like there must be a better way to 
>accomplish this - perhaps without making a factory for each client protocol, 
>which seems inelegant.
>
>  
>
As far as I understand the Twisted framework this is what 
twisted.application.internet is for - each protocol is then added to an 
application as a service.

see the example at :

http://www.twistedmatrix.com/documents/current/howto/tutorial/factory : 
"Note that one factory (in this case, a site) can listen on multiple 
ports with multiple protocols."

regards,

Eugene




From projects at reedflute.com  Wed Aug 11 15:17:19 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 11 Aug 2004 21:17:19 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040810235518677e9e@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>
	<305be882040810235518677e9e@mail.gmail.com>
Message-ID: <411A70BF.7060005@reedflute.com>

Britt Green wrote:

>Hi Eugene,
>
>Thanks for the example. Just a couple of quick questions if you don't mind.
>
>1) Does this create a telnetd daemon? The checkUserAndPass() method
>seems like it checks with the /etc/passwd file to enable a user to
>logon. Since I don't have access to my Unix box tonite I can't check
>this myself. Please correct me if I'm mistaken.
>  
>
To be technicallly correct - it creates a twistd listening on a TCP port 
and understands the Telnet protocol. I'm not sure about what 
checkUserAndPass() does.

>2) What does defer do exactly?
>
Defer is a neat way to wrap callback functions to avoid blocking IO 
calls - see http://www.twistedmatrix.com/documents/current/howto/defer

>
>3) Say I'm writing a program that takes connections via Telnet, like a
>chat server. Would using Twisted's Telnet class be the best way to
>accomplish this? Or should I just write my own via the more low-level
>Twisted classes?
>
>  
>
Why don't you look at 
http://www.twistedmatrix.com/documents/current/examples/chatserver.py

regards,

Eugene




From heikki at osafoundation.org  Wed Aug 11 15:49:24 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Wed, 11 Aug 2004 12:49:24 -0700
Subject: [Twisted-Python] Twisted+M2Crypto patch
Message-ID: <411A7844.3060103@osafoundation.org>

I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
Python wrapper for OpenSSL.

Twisted already integrates with PyOpenSSL, which is another Python 
wrapper for OpenSSL. However, PyOpenSSL has been dormant for a couple of 
years (although I have heard there might be a a rewrite in the making). 
M2Crypto has been under continuous development, and wraps more of 
OpenSSL. Additional point why I have been working on this is that 
Chandler project started using M2Crypto before choosing to use Twisted, 
and we are/will be relying on more and more M2Crypto functionality and 
it does not make sense to have two OpenSSL wrappers in one application.

So, now I have a patch that let's you choose which of these OpenSSL 
wrappers you want to use with Twisted.

By default PyOpenSSL will be selected. If you set 'useM2' attribute to 
true on the SSL context factory (for example 
twisted.internet.ssl.ClientContextFactory(useM2=True)), then M2Crypto 
will be used.

I have tested using Twisted's echoclient_ssl.py/echoserv_ssl.py example 
files (http://twistedmatrix.com/documents/current/examples/), as well as 
imap and smtp using samples from here: 
http://wiki.osafoundation.org/twiki/bin/view/Chandler/TwistedHome. I've 
also read imap email using Chandler 
(http://wiki.osafoundation.org/twiki/bin/view/Chandler/WebHome) with 
this code. They rely on the patch that was submitted by OSAF's Brian 
Kirsch earlier. I have tested on systems that have both M2Crypto and 
PyOpenSSL installed, or only one but not the other. Test OSes have been 
Windows XP and Debian (unstable).

There is one nasty hack in the patch which I have not yet ironed out: 
the changes in abstract.py. If I take those out, I cannot connect to an 
smtp server, and connection to a newly started server won't work the 
first time. Any help in figuring this out would be appreciated.

Any review comments appreciated. And if you have any question, please 
let me know.

-- 
   Heikki Toivonen

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: m2-patches
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040811/a0963b81/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040811/a0963b81/attachment.pgp 

From foom at fuhm.net  Wed Aug 11 17:40:00 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 11 Aug 2004 17:40:00 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <411A7844.3060103@osafoundation.org>
References: <411A7844.3060103@osafoundation.org>
Message-ID: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 11, 2004, at 3:49 PM, Heikki Toivonen wrote:
> I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
> Python wrapper for OpenSSL.

IMO, this patch is messy and should not be accepted. It makes the 
twisted SSL implementation even more baroque than it already is by 
interleaving m2crypto and pyopenssl support code together into one big 
blob of insanity.

A switch to an alternative SSL implementation is only worthwhile if it 
lets us get *rid* of all the SSL turds all over the generic tcp code. 
SSL should be implementable as just another protocol. I believe that it 
is currently the fault of PyOpenSSL not exposing the right OpenSSL APIs 
for feeding data to it manually that Twisted's SSL is implemented the 
way it is.

With a good SSL library API, the Twisted SSL implementation can be done 
without any of the sorts of crazy hacks we currently have. See also 
<http://trevp.net/tlslite/>, a pure python SSL impl which I believe 
someone plugged into twisted in this fashion. I have not looked at it 
myself, however.

Someone ought to figure out how to clean up the twisted API to use 
TLSLite or M2Crypto or an improved PyOpenSSL, or all of the above, and 
get rid of all the ugly code we currently have. (well -- of course some 
of it will likely have to stay for backwards compatibility).

James




From glyph at divmod.com  Wed Aug 11 17:50:13 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 11 Aug 2004 17:50:13 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <1092261013.4055.43.camel@localhost>

On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
> On Aug 11, 2004, at 3:49 PM, Heikki Toivonen wrote:
> > I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
> > Python wrapper for OpenSSL.
> 
> IMO, this patch is messy and should not be accepted.

I agree, for your stated reasons.

> A switch to an alternative SSL implementation is only worthwhile if it 
> lets us get *rid* of all the SSL turds all over the generic tcp code. 
> SSL should be implementable as just another protocol. I believe that it 
> is currently the fault of PyOpenSSL not exposing the right OpenSSL APIs 
> for feeding data to it manually that Twisted's SSL is implemented the 
> way it is.

In a sense, this is true, but there is also a fault of Twisted's API:
there needs to be a standard, robust, well-documented way to plug a new
transport type into the reactor.  (With one caveat: the current TLS
hacks are totally insane and are likely to remain that way; there's not
much to be done about that.)

So, PyOpenSSL should plug into the reactor as a transport, but all other
(saner) Python SSL implementations ought to plug in as a protocol.

-- 
  _  \ Glyph Lefkowitz   |"Strange is the night where black stars rise,
 / \  \ glyph at divmod.com | And strange moons circle through the skies,
 ` _o_ \-----------------+ But stranger still is, Lost Carcosa"
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From itamar at itamarst.org  Wed Aug 11 17:52:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 11 Aug 2004 17:52:56 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <1092261176.9722.0.camel@sheriffpony>

To focus attention on James' main point:

> SSL should be implementable as just another protocol.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From claw at kanga.nu  Wed Aug 11 18:21:08 2004
From: claw at kanga.nu (J C Lawrence)
Date: Wed, 11 Aug 2004 18:21:08 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: Message from Glyph Lefkowitz <glyph@divmod.com> of "Wed,
	11 Aug 2004 17:50:13 EDT." <1092261013.4055.43.camel@localhost> 
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> 
Message-ID: <6708.1092262868@kanga.nu>

On Wed, 11 Aug 2004 17:50:13 -0400 
Glyph Lefkowitz <glyph at divmod.com> wrote:
> On Wed, 2004-08-11 at 17:40, James Y Knight wrote:

> So, PyOpenSSL should plug into the reactor as a transport, but all
> other (saner) Python SSL implementations ought to plug in as a
> protocol.

Ahem.  SSL in this parlance is just a TCP connection form with more
dependencies (keys) failure modes (negotiation failures).  The protocol
that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
SMTP, etc).

-- 
J C Lawrence
---------(*)                Satan, oscillate my metallic sonatas.
claw at kanga.nu               He lived as a devil, eh?
http://www.kanga.nu/~claw/  Evil is a name of a foeman, as I live.



From foom at fuhm.net  Wed Aug 11 18:50:30 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 11 Aug 2004 18:50:30 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> <6708.1092262868@kanga.nu>
Message-ID: <D8C68E87-EBE8-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 11, 2004, at 6:21 PM, J C Lawrence wrote:
> Ahem.  SSL in this parlance is just a TCP connection form with more
> dependencies (keys) failure modes (negotiation failures).  The protocol
> that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
> SMTP, etc).

Actually, SSL is both a protocol *and* a transport, at the same time. 
It is a protocol *on* TCP, and it is a transport *for* another higher 
level protocol. That is probably how it ought to be modeled in Twisted, 
but I don't know if the Twisted API is up for it.

James




From projects at reedflute.com  Wed Aug 11 19:04:14 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 01:04:14 +0200
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>	<1092261013.4055.43.camel@localhost>
	<6708.1092262868@kanga.nu>
Message-ID: <411AA5EE.5020402@reedflute.com>

J C Lawrence wrote:

>On Wed, 11 Aug 2004 17:50:13 -0400 
>Glyph Lefkowitz <glyph at divmod.com> wrote:
>  
>
>>On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
>>    
>>
>
>  
>
>>So, PyOpenSSL should plug into the reactor as a transport, but all
>>other (saner) Python SSL implementations ought to plug in as a
>>protocol.
>>    
>>
>
>Ahem.  SSL in this parlance is just a TCP connection form with more
>dependencies (keys) failure modes (negotiation failures).  The protocol
>that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
>SMTP, etc).
>
>  
>
I have to agree.

Conceptually Secure Socket Layer is a special kind of socket. You never 
open a SSL connection by itself - you open a FTP session over SSL.

Implementing SSL as a protocol means that inside Twisted you will 
probably have to somehow chain two protocols  together  i.e. ftp  -> 
ssl  before you transport.

===============================================
Web                 -> www.reedflute.com
=============================================== 





From claw at kanga.nu  Wed Aug 11 19:49:41 2004
From: claw at kanga.nu (J C Lawrence)
Date: Wed, 11 Aug 2004 19:49:41 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: Message from Eugene Coetzee <projects@reedflute.com> 
	of "Thu, 12 Aug 2004 01:04:14 +0200." <411AA5EE.5020402@reedflute.com> 
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> <6708.1092262868@kanga.nu>
	<411AA5EE.5020402@reedflute.com> 
Message-ID: <14023.1092268181@kanga.nu>

On Thu, 12 Aug 2004 01:04:14 +0200 
Eugene Coetzee <projects at reedflute.com> wrote:
> J C Lawrence wrote:
>> On Wed, 11 Aug 2004 17:50:13 -0400 Glyph Lefkowitz <glyph at divmod.com>
>> wrote:

> Conceptually Secure Socket Layer is a special kind of socket. You
> never open a SSL connection by itself - you open a FTP session over
> SSL.

Yup, at this level SSL is at layer 4, and in turn presents a layer 4
interface for higher level protocols to consume.

-- 
J C Lawrence
---------(*)                Satan, oscillate my metallic sonatas.
claw at kanga.nu               He lived as a devil, eh?
http://www.kanga.nu/~claw/  Evil is a name of a foeman, as I live.



From radeex at gmail.com  Wed Aug 11 20:01:19 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 11 Aug 2004 20:01:19 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost>  <6708.1092262868@kanga.nu>
Message-ID: <60ed19d404081117014f999847@mail.gmail.com>

On Wed, 11 Aug 2004 18:21:08 -0400, J C Lawrence <claw at kanga.nu> wrote:
> On Wed, 11 Aug 2004 17:50:13 -0400
> Glyph Lefkowitz <glyph at divmod.com> wrote:
> > On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
> 
> > So, PyOpenSSL should plug into the reactor as a transport, but all
> > other (saner) Python SSL implementations ought to plug in as a
> > protocol.
> 
> Ahem.  SSL in this parlance is just a TCP connection form with more
> dependencies (keys) failure modes (negotiation failures).  The protocol
> that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
> SMTP, etc).

Your tone indicates contradiction, but in fact, it's not: As far as
structuring SSL into Twisted goes, the logical way to do it is to
implement it as a Protocol (note the capital "P") and then use that
Protocol as a transport.  Glyph was referring to this, not any
abstract sense of where SSL fits into the 7-layer burrito^WOSI model
:-)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From projects at reedflute.com  Thu Aug 12 10:51:18 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 16:51:18 +0200
Subject: [Twisted-Python] lightweight persistence for twisted
Message-ID: <411B83E6.8010607@reedflute.com>

Hi,

I want to use a light weight (read flat file) persistence technique  
with twisted:

My criteria  for selecting the best technique are in order of relative 
importance:

1) Stability and reliability
2) Speed
3) Scalability - must be able to handle about 5 000 records max (simple 
text data fields )
4) Least external dependencies
5) Would be nice if it could  be accesses through Twisted's generic 
enterprise SQL API

The contenders that I think may be able to do the best job are in order 
of my current thinking:

1) enterprise.xmlreflector
2) persisted.sob
3) persisted.dirdbm
4) persisted.marmalade
5) twisted.xish.xpath

Can you give me some pointers - based perhaps on experience with the 
above modules - i.e bugs, pitfalls,recommendations, what you would do if 
you were me?

kind regards,

Eugene Coetzee


===============================================

Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Thu Aug 12 13:14:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 12 Aug 2004 13:14:22 -0400
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <411B83E6.8010607@reedflute.com>
References: <411B83E6.8010607@reedflute.com>
Message-ID: <0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
> 5) Would be nice if it could  be accesses through Twisted's generic 
> enterprise SQL API

Last I looked, twisted's reflector stuff needed a lot of work. I'd thus 
recommend against xmlreflector.

If you want SQL, you probably want SQLite. It is a C module, so it does 
introduce a dependancy, but it is otherwise fully self-contained. If 
you don't want SQL, you can get a lot simpler. With 5000 records, you 
can probably just store them all in a python datastructure in memory 
and either serialize it or write it to something like a ":" separated 
file.

James




From jt at parspro.com  Thu Aug 12 13:15:40 2004
From: jt at parspro.com (John Toohey)
Date: Thu, 12 Aug 2004 13:15:40 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411B83E6.8010607@reedflute.com>
References: <411B83E6.8010607@reedflute.com>
Message-ID: <3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>

Hi all,

I have a twisted server which can be started with the following code :-

if __name__=="__main__":

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     reactor.connectTCP('localhost',8002,f.getFactory())

     f.setServiceParent(service.IServiceCollection(application))
     f.startService()
     reactor.run()

The f.startService method makes a call to a database and using the PB 
layer, sends data to another twisted server every 5 minutes. However, 
when I try to create a .tap file and run it as a daemon with this code 
:-

def makeService(config):
     pbport = int(config["pbport"])

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     serviceCollection = service.IServiceCollection(application)
     internet.TCPClient("localhost",pbport, 
f.getFactory()).setServiceParent(serviceCollection)
     f.startService()

     return serviceCollection

The f.startService method is not called, and the data is not sent to 
the other server. What am I missing here?

TIA

John




From seamonkeys at gmail.com  Thu Aug 12 16:36:36 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 13:36:36 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <411A70BF.7060005@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>
	<305be882040810235518677e9e@mail.gmail.com>
	<411A70BF.7060005@reedflute.com>
Message-ID: <305be88204081213363033323f@mail.gmail.com>

Hey!

I've studied the chatserver example a few times. I suppose I probably
didn't initially define my question as well as I should have. If I'm
writing a program like a chatserver, or whatever that takes
connections over telnet, is it better to use the Telnet lib or just
use Protocol?

Cheers!

Britt

On Wed, 11 Aug 2004 21:17:19 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:
> Britt Green wrote:
> 
> >Hi Eugene,
> >
> >Thanks for the example. Just a couple of quick questions if you don't mind.
> >
> >1) Does this create a telnetd daemon? The checkUserAndPass() method
> >seems like it checks with the /etc/passwd file to enable a user to
> >logon. Since I don't have access to my Unix box tonite I can't check
> >this myself. Please correct me if I'm mistaken.
> >
> >
> To be technicallly correct - it creates a twistd listening on a TCP port
> and understands the Telnet protocol. I'm not sure about what
> checkUserAndPass() does.
> 
> >2) What does defer do exactly?
> >
> Defer is a neat way to wrap callback functions to avoid blocking IO
> calls - see http://www.twistedmatrix.com/documents/current/howto/defer
> 
> >
> >3) Say I'm writing a program that takes connections via Telnet, like a
> >chat server. Would using Twisted's Telnet class be the best way to
> >accomplish this? Or should I just write my own via the more low-level
> >Twisted classes?
> >
> >
> >
> Why don't you look at
> http://www.twistedmatrix.com/documents/current/examples/chatserver.py
> 
> 
> 
> regards,
> 
> Eugene
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From projects at reedflute.com  Thu Aug 12 16:46:59 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 22:46:59 +0200
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411B83E6.8010607@reedflute.com>
	<0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <411BD743.5050509@reedflute.com>

James Y Knight wrote:

> With 5000 records, you can probably just store them all in a python 
> datastructure in memory and either serialize it or write it to 
> something like a ":" separated file.
>
Thanx for the feedback. This is exactly what persisted.dirdbm does.

I would have liked something a bit more xmlish since nowdays that is all 
the rave :)

regards,

Eugene





From projects at reedflute.com  Thu Aug 12 17:02:55 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 23:02:55 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be88204081213363033323f@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>
	<305be88204081213363033323f@mail.gmail.com>
Message-ID: <411BDAFF.60007@reedflute.com>

Britt Green wrote:

>Hey!
>
>I've studied the chatserver example a few times. I suppose I probably
>didn't initially define my question as well as I should have. If I'm
>writing a program like a chatserver, or whatever that takes
>connections over telnet, is it better to use the Telnet lib or just
>use Protocol?
>
>  
>
Well - I suppose it depends on what you want to do.

Since all specialised protocols inherit basic functionality from Protocol - every specialised subclass brings something new to the party - as you can tell from the Telnet example.

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From seamonkeys at gmail.com  Thu Aug 12 17:33:51 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 14:33:51 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <411BDAFF.60007@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>
	<305be88204081213363033323f@mail.gmail.com>
	<411BDAFF.60007@reedflute.com>
Message-ID: <305be882040812143352619a1b@mail.gmail.com>

On Thu, 12 Aug 2004 23:02:55 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:

> Well - I suppose it depends on what you want to do.

I'd like to send and receive text over a telnet connection! :)

Britt



From projects at reedflute.com  Thu Aug 12 18:00:00 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 13 Aug 2004 00:00:00 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040812143352619a1b@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>	<305be88204081213363033323f@mail.gmail.com>	<411BDAFF.60007@reedflute.com>
	<305be882040812143352619a1b@mail.gmail.com>
Message-ID: <411BE860.9010708@reedflute.com>

Britt Green wrote:

>I'd like to send and receive text over a telnet connection! :)
>
>  
>
I would go with the Telnet class - it includes basic autentication and 
standard telnet response codes.




From seamonkeys at gmail.com  Thu Aug 12 18:27:55 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 15:27:55 -0700
Subject: [Twisted-Python] Closing a connection?
Message-ID: <305be88204081215273d228e05@mail.gmail.com>

I know this answer is obvious, but I can't seem to find it. How do I
close a connection? I have this bit of code:

class Echo(basic.LineReceiver):
    
    def lineReceived(self, data):
        "As soon as any data is received, write it back."

        if data == "quit":
            self.transport.write("Quit command received.\r\n")

How do I kill the client's connection? I've checked the docs and
Google, but couldn't find a thing on it. I know its something totally
obvious that I'm overlooking though...

Britt



From maoy at cis.upenn.edu  Thu Aug 12 18:34:10 2004
From: maoy at cis.upenn.edu (Yun Mao)
Date: Thu, 12 Aug 2004 18:34:10 -0400 (EDT)
Subject: [Twisted-Python] Closing a connection?
In-Reply-To: <305be88204081215273d228e05@mail.gmail.com>
References: <305be88204081215273d228e05@mail.gmail.com>
Message-ID: <Pine.LNX.4.56.0408121833220.5038@klondike.cis.upenn.edu>

self.transport.loseConnection()

Yun


On Thu, 12 Aug 2004, Britt Green wrote:

> I know this answer is obvious, but I can't seem to find it. How do I
> close a connection? I have this bit of code:
>
> class Echo(basic.LineReceiver):
>
>     def lineReceived(self, data):
>         "As soon as any data is received, write it back."
>
>         if data == "quit":
>             self.transport.write("Quit command received.\r\n")
>
> How do I kill the client's connection? I've checked the docs and
> Google, but couldn't find a thing on it. I know its something totally
> obvious that I'm overlooking though...
>
> Britt
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Thu Aug 12 19:49:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 12 Aug 2004 19:49:21 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <411C0201.8000003@divmod.com>

John Toohey wrote:
> Hi all,
> 
> I have a twisted server which can be started with the following code :-
> 
> if __name__=="__main__":
> 
>     application = service.Application('feedserver', uid=1, gid=1)
>     f = FeedService('feedserver')
>     reactor.connectTCP('localhost',8002,f.getFactory())
> 
>     f.setServiceParent(service.IServiceCollection(application))
>     f.startService()
>     reactor.run()

   There's little point in using service.Application, if it is used as 
above.  A better way to do this would be to put the above code into a 
.tac file (adding the appropriate imports), remove the last two lines, 
and run it with "twistd -y <filename.tac>".

> 
> The f.startService method makes a call to a database and using the PB 
> layer, sends data to another twisted server every 5 minutes. However, 
> when I try to create a .tap file and run it as a daemon with this code :-
> 
> def makeService(config):
>     pbport = int(config["pbport"])
> 
>     application = service.Application('feedserver', uid=1, gid=1)
>     f = FeedService('feedserver')
>     serviceCollection = service.IServiceCollection(application)
>     internet.TCPClient("localhost",pbport, 
> f.getFactory()).setServiceParent(serviceCollection)
>     f.startService()
> 
>     return serviceCollection
> 
> The f.startService method is not called, and the data is not sent to the 
> other server. What am I missing here?
> 

   makeService is run when the .tap file is written.  That means 
f.startService() is called when the .tap file is written.  Since the 
reactor isn't running at this point, the connection will never happen. 
When you later run this .tap file with "twistd -f <filename.tap>", I 
would expect the connection to occur.  Are you running the resulting tap 
file with "twistd -f"?

   Jp



From exarkun at divmod.com  Thu Aug 12 20:00:51 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 12 Aug 2004 20:00:51 -0400
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040812143352619a1b@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>	<305be88204081213363033323f@mail.gmail.com>	<411BDAFF.60007@reedflute.com>
	<305be882040812143352619a1b@mail.gmail.com>
Message-ID: <411C04B3.4000404@divmod.com>

Britt Green wrote:
> On Thu, 12 Aug 2004 23:02:55 +0200, Eugene Coetzee
> <projects at reedflute.com> wrote:
> 
> 
>>Well - I suppose it depends on what you want to do.
> 
> 
> I'd like to send and receive text over a telnet connection! :)
> 

   Connections established with the telnet program are often nothing 
more than "regular" bytes being read from and written to a socket. 
There are features of the telnet protocol, but using a program with 
"telnet" in its name does not obligate you to use them.  For example, I 
frequently debug HTTP, IMAP4, SMTP, and POP3 servers using telnet.  None 
of these protocols is related to the telnet protocol, but the "telnet" 
program works just fine for interacting with them.

   I hope this helps you decide,

   Jp



From horatio at computer.org  Thu Aug 12 21:19:21 2004
From: horatio at computer.org (Aguido Horatio Davis)
Date: Fri, 13 Aug 2004 11:19:21 +1000
Subject: [Twisted-Python] Minor patch to twisted.xish.domish
Message-ID: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>

G'day,

I was playing with ElementStreams yesterday and I discovered that 
ExpatElementStream throws an IndexError if well-formed but 
ill-namespaced XML (well, the multistatus return body from a WebDAV 
request looked well-namespaced to _me_, but...) is fed to it for 
parsing.

Here's a patch against this morning's SVN tree that makes this 
behaviour go away.

Index: twisted/xish/domish.py
===================================================================
--- twisted/xish/domish.py      (revision 11309)
+++ twisted/xish/domish.py      (working copy)
@@ -617,7 +617,12 @@
                  del attrs[k]

          # Construct the new element
-        e = Element(qname, self.defaultNsStack[-1], attrs)
+       # AHD: make it not explode if no namespace on stack
+       try:
+           nsuri = self.defaultNsStack[-1]
+       except IndexError:
+           nsuri = None
+        e = Element(qname, nsuri, attrs)

          # Document already started
          if self.documentStarted == 1:

Cheers,

Horatio
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2369 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040813/3e6dbcfe/attachment.bin 

From abe at fettig.net  Thu Aug 12 21:58:12 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 12 Aug 2004 21:58:12 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
Message-ID: <411C2034.7050202@fettig.net>

Hi folks,

I'm looking for help understanding how .tap files are meant to be used 
in production.  I know that a .tap, when generated, contains the 
configuration info for an application.  And there are tools like tap2deb 
and tap2ntsvc that take the information in a .tap and convert it into an 
installable packages.  But then what happens when the user who installs 
the package wants to change some aspect of the configuration?  Typically 
on UNIX they would edit a config file, but if I understand correctly 
using a config file for twisted apps is discouraged.

Could someone describe how this process is supposed to work:

1. User installs package built from tap file.
2. User runs application
3. User changes application config
4. User restarts application

Thanks!

Abe



From jt at parspro.com  Thu Aug 12 22:03:41 2004
From: jt at parspro.com (John Toohey)
Date: Thu, 12 Aug 2004 22:03:41 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411C0201.8000003@divmod.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
Message-ID: <FFC685FF-ECCC-11D8-B75D-000A95AE562E@parspro.com>

I do run it with twistd -f feedserver.tap. The factory starts up, but 
service.start is not called.

John
On Aug 12, 2004, at 7:49 PM, Jp Calderone wrote:

> John Toohey wrote:
>> Hi all,
>> I have a twisted server which can be started with the following code 
>> :-
>> if __name__=="__main__":
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     reactor.connectTCP('localhost',8002,f.getFactory())
>>     f.setServiceParent(service.IServiceCollection(application))
>>     f.startService()
>>     reactor.run()
>
>   There's little point in using service.Application, if it is used as 
> above.  A better way to do this would be to put the above code into a 
> .tac file (adding the appropriate imports), remove the last two lines, 
> and run it with "twistd -y <filename.tac>".
>
>> The f.startService method makes a call to a database and using the PB 
>> layer, sends data to another twisted server every 5 minutes. However, 
>> when I try to create a .tap file and run it as a daemon with this 
>> code :-
>> def makeService(config):
>>     pbport = int(config["pbport"])
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     serviceCollection = service.IServiceCollection(application)
>>     internet.TCPClient("localhost",pbport, 
>> f.getFactory()).setServiceParent(serviceCollection)
>>     f.startService()
>>     return serviceCollection
>> The f.startService method is not called, and the data is not sent to 
>> the other server. What am I missing here?
>
>   makeService is run when the .tap file is written.  That means 
> f.startService() is called when the .tap file is written.  Since the 
> reactor isn't running at this point, the connection will never happen. 
> When you later run this .tap file with "twistd -f <filename.tap>", I 
> would expect the connection to occur.  Are you running the resulting 
> tap file with "twistd -f"?
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


JT




From golux at comcast.net  Thu Aug 12 23:30:18 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 12 Aug 2004 23:30:18 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <411C35CA.7010704@comcast.net>

Abe Fettig wrote:
> Hi folks,
> 
> I'm looking for help understanding how .tap files are meant to be used 
> in production.  ...

Hi Abe,

I thought I'd respond even though I'm not a guru and my
method (which hasn't yet been used in *real* production,
but I plan to use it unless someone suggests something
better ;) may not be the orthodox way.

Real twisted gurus:  I trust you will set me straight if
necessary -- comments welcome!  ;)

For my app, I have created a shell script that generates
the tap every time the application is started up.  The
configuration options are given as arguments that are
passed thru to the tap builder ("pgertap.py", in my case).
I've included my shell script below.  It's intended to be
usable as an /etc/init.d script (I'll add the functions
and runlevels when I go production).

I'll send pgertap.py if you like, but it's modeled exactly
after the example in the howto:  "Writing a New Plug-In for
mktap", so if you read that you'll know all you need to know
about tap generators.

#! /bin/sh

usage='Usage:  pgerd [start|startsecure|restart|restartsecure|stop]'

if [[ -z $1 ]]; then
    echo $usage
    exit 1
fi
if [[ -z $PGERHOME ]]; then
    echo 'env var PGERHOME must be defined.'
    exit 1
fi

cd $PGERHOME/logs

case $1 in
    start)
        # start pgerd on http://[hostname]:8080
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    startsecure)
        # start pgerd on https://[hostname]:8080
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME \
                   --encrypted=1
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    restart)
        # restart pgerd on http://[hostname]:8080
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    restartsecure)
        # restart pgerd on https://[hostname]:8080
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME \
                   --encrypted=1
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    stop)
        # stop pgerd and archive its log
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        ;;
    *)
        # print help and exit
        echo "argument \"$1\" not recognized."
        echo $usage
        exit 1
        ;;
esac
exit 0



From seamonkeys at gmail.com  Fri Aug 13 01:31:01 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 22:31:01 -0700
Subject: [Twisted-Python] More Twisted questions
Message-ID: <305be882040812223124ad12a1@mail.gmail.com>

Hello All,

Thanks for everyone who's helped me out so far. Twisted is slooowly
starting to make sense to me! ;)

So I've been playing around with the Chat Server example, and I've
extended it to respond to different commands. But there's one thing
I'd like to know how to be able to do with it. When a user connects,
his connection is added to the list of clients that are connected to
the server. When a message is entered, the program goes through each
connection in the list and sends them the message.

What I want to know is this: suppose I want to slightly change the
message for one person. For example, when I type a line of text I
might like to see "You say: foobar" while everyone else just sees
"foobar". How would I pick out that particular connection from the
list?

Cheers!

Britt



From jt at parspro.com  Fri Aug 13 10:05:11 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 10:05:11 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411C0201.8000003@divmod.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
Message-ID: <CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>

The .tap file is now as follows :-
def makeService(config):
     pbport = int(config["pbport"])

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     reactor.connectTCP('localhost',8002,f.getFactory())

     f.setServiceParent(service.IServiceCollection(application))

The server starts fine with twistd -f feedserver.tap, but the 
startService method is not called, so the server just sits there. Is 
there any reason why twisted would not call the startService method?

John

On Aug 12, 2004, at 7:49 PM, Jp Calderone wrote:

> John Toohey wrote:
>> Hi all,
>> I have a twisted server which can be started with the following code 
>> :-
>> if __name__=="__main__":
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     reactor.connectTCP('localhost',8002,f.getFactory())
>>     f.setServiceParent(service.IServiceCollection(application))
>>     f.startService()
>>     reactor.run()
>
>   There's little point in using service.Application, if it is used as 
> above.  A better way to do this would be to put the above code into a 
> .tac file (adding the appropriate imports), remove the last two lines, 
> and run it with "twistd -y <filename.tac>".
>
>> The f.startService method makes a call to a database and using the PB 
>> layer, sends data to another twisted server every 5 minutes. However, 
>> when I try to create a .tap file and run it as a daemon with this 
>> code :-
>> def makeService(config):
>>     pbport = int(config["pbport"])
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     serviceCollection = service.IServiceCollection(application)
>>     internet.TCPClient("localhost",pbport, 
>> f.getFactory()).setServiceParent(serviceCollection)
>>     f.startService()
>>     return serviceCollection
>> The f.startService method is not called, and the data is not sent to 
>> the other server. What am I missing here?
>
>   makeService is run when the .tap file is written.  That means 
> f.startService() is called when the .tap file is written.  Since the 
> reactor isn't running at this point, the connection will never happen. 
> When you later run this .tap file with "twistd -f <filename.tap>", I 
> would expect the connection to occur.  Are you running the resulting 
> tap file with "twistd -f"?
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Fri Aug 13 10:32:14 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:32:14 -0400
Subject: [Twisted-Python] Minor patch to twisted.xish.domish
In-Reply-To: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>
References: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>
Message-ID: <1092407533.10527.0.camel@sheriffpony>

Thanks for the patch. Please add it to http://twistedmatrix.com/bugs/ so
it doesn't get lost, and assign it to dizzyd, the xish maintainer.




From itamar at itamarst.org  Fri Aug 13 10:33:44 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:33:44 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <1092407624.10523.3.camel@sheriffpony>

On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:

> I'm looking for help understanding how .tap files are meant to be used 
> in production.  I know that a .tap, when generated, contains the 
> configuration info for an application.  And there are tools like tap2deb 
> and tap2ntsvc that take the information in a .tap and convert it into an 
> installable packages.

tap2deb and friends also work on .tac files, which are Python files (see
the application howto for an example). .tac files allow you to give
users a Python file for config that they can edit. Or, your .tap or .tac
could load a config  file in the format of your choice and use that to
configure your app, and then users could edit that.




From itamar at itamarst.org  Fri Aug 13 10:35:26 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:35:26 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <1092407726.10528.6.camel@sheriffpony>

On Fri, 2004-08-13 at 10:05, John Toohey wrote:

> The .tap file is now as follows :-
> def makeService(config):
>      pbport = int(config["pbport"])
> 
>      application = service.Application('feedserver', uid=1, gid=1)
>      f = FeedService('feedserver')
>      reactor.connectTCP('localhost',8002,f.getFactory())
> 
>      f.setServiceParent(service.IServiceCollection(application))

If you're using taps you don't create the application yourself. Instead,
you *return* a service. So:

def makeService(config):
    f = FeedService('feedserver')
    reactor.connectTCP('localhost',8002,f.getFactory())
    return f

-- 
Itamar Shtull-Trauring    http://itamarst.org





From abe at fettig.net  Fri Aug 13 10:57:19 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 10:57:19 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <1092407624.10523.3.camel@sheriffpony>
References: <411C2034.7050202@fettig.net>
	<1092407624.10523.3.camel@sheriffpony>
Message-ID: <411CD6CF.1030507@fettig.net>

Thanks, Itamar.  That makes sense.

Itamar Shtull-Trauring wrote:

> tap2deb and friends also work on .tac files, which are Python files (see
> the application howto for an example). .tac files allow you to give
> users a Python file for config that they can edit. Or, your .tap or .tac
> could load a config  file in the format of your choice and use that to
> configure your app, and then users could edit that.




From abe at fettig.net  Fri Aug 13 11:02:06 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 11:02:06 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C35CA.7010704@comcast.net>
References: <411C2034.7050202@fettig.net> <411C35CA.7010704@comcast.net>
Message-ID: <411CD7EE.5080906@fettig.net>

Stephen Waterbury wrote:

> For my app, I have created a shell script that generates
> the tap every time the application is started up.  The
> configuration options are given as arguments that are
> passed thru to the tap builder ("pgertap.py", in my case).
> I've included my shell script below.  It's intended to be
> usable as an /etc/init.d script (I'll add the functions
> and runlevels when I go production).

That seems like an interesting approach.  I'll have to play with tap2deb 
and tap2ntsvc a bit to see how they work, and then figure out the best 
way to store my configuration.

Abe



From litnimax at fromru.com  Fri Aug 13 11:08:38 2004
From: litnimax at fromru.com (litnimax)
Date: Fri, 13 Aug 2004 18:08:38 +0300
Subject: [Twisted-Python] need explanation in tutorial
Message-ID: <opscoe0og6ghc261@navigator>

Hi all, sorry for silly question.
I started learning twisted, and have a question.
(from evolving finger part 2)



class FingerSetterProtocol(basic.LineReceiver):
      def connectionMade(self): self.lines = []
      def lineReceived(self, line): self.lines.append(line)
      def connectionLost(self, reason):
          self.factory.setUser(*self.lines[:2])
          # first line: user    second line: status

What is "*self.lines[:2]"?
Why is there asterisk?
If I remove * from parameters, I get functions take 2 arguments.
  From python I know that if parameter is coming with *, that means a tuple
of parameters, if with ** - dict of parameters.

>>> a
{1: '22'}
>>> a.__setitem__(*[1,'22222'])
>>> a
{1: '22222'}
>>> *[1,'22']
    File "<stdin>", line 1
      *[1,'22']
      ^
SyntaxError: invalid syntax

How this code is working!!??  :))
How can *[1,'22'] work??

Thanks much in advance :)






-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From jt at parspro.com  Fri Aug 13 11:36:11 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 11:36:11 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <1092407726.10528.6.camel@sheriffpony>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
	<1092407726.10528.6.camel@sheriffpony>
Message-ID: <8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>

Thanks for your help. I just tried this, but the startService method is 
still not called. Is there something else I need to do?

John

On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:

> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>
>> The .tap file is now as follows :-
>> def makeService(config):
>>      pbport = int(config["pbport"])
>>
>>      application = service.Application('feedserver', uid=1, gid=1)
>>      f = FeedService('feedserver')
>>      reactor.connectTCP('localhost',8002,f.getFactory())
>>
>>      f.setServiceParent(service.IServiceCollection(application))
>
> If you're using taps you don't create the application yourself. 
> Instead,
> you *return* a service. So:
>
> def makeService(config):
>     f = FeedService('feedserver')
>     reactor.connectTCP('localhost',8002,f.getFactory())
>     return f
>
> -- 
> Itamar Shtull-Trauring    http://itamarst.org
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From projects at reedflute.com  Fri Aug 13 12:52:12 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 13 Aug 2004 18:52:12 +0200
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>	<411C0201.8000003@divmod.com>	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>	<1092407726.10528.6.camel@sheriffpony>
	<8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <411CF1BC.5020008@reedflute.com>

Prehaps you are overriding startService() somewhere along.

Can you post the code for FeedService.


John Toohey wrote:

> Thanks for your help. I just tried this, but the startService method 
> is still not called. Is there something else I need to do?
>
> John
>
> On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:
>
>> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>>
>>> The .tap file is now as follows :-
>>> def makeService(config):
>>> pbport = int(config["pbport"])
>>>
>>> application = service.Application('feedserver', uid=1, gid=1)
>>> f = FeedService('feedserver')
>>> reactor.connectTCP('localhost',8002,f.getFactory())
>>>
>>> f.setServiceParent(service.IServiceCollection(application))
>>
>>

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> 018 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 





From jt at parspro.com  Fri Aug 13 13:03:58 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 13:03:58 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411CF1BC.5020008@reedflute.com>
References: <411B83E6.8010607@reedflute.com>	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>	<411C0201.8000003@divmod.com>	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>	<1092407726.10528.6.camel@sheriffpony>
	<8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
	<411CF1BC.5020008@reedflute.com>
Message-ID: <C42F925E-ED4A-11D8-B75D-000A95AE562E@parspro.com>

Here it is. Thanks for take the time to look at it.

class FeedService(service.Service):

     def __init__(self, *args):
         self.parent.__init__(self, *args)
         self.s = startup()
         self.s.start()

     def go(self):
         d = self.getData()
         d.addCallback(self.sendData)
         d.addErrback(self.getDataError)
         d.addCallback(self.dataSentOK)

     def dataSentOK(self, data):
         log.msg("dataSentOK", data)
         self.call = reactor.callLater(10, self.go)

     def getData(self):
         log.msg("getData")
         d = defer.Deferred()
         self.call = reactor.callLater(2, d.callback, 
self.s.data.getDataAsString())
         return d

     def sendData(self, data):
         log.msg("sendData", data)
         # Strip all whitespace
         xml = ""
         xml = xml.join(data.split())

         oddsObj  = SenderOdds("admiral","full", xml)
         self.sender = Sender(oddsObj)

         deferred = self.factory.getRootObject()
         deferred.addCallback(self.sender.got_obj)
         deferred.addErrback(self.getConnectionError)

         return xml

     def startService(self):
         log.msg("start Service")
         self.go()

         service.Service.startService(self)

     def stopService(self):
         log.msg("stop Service")

         service.Service.stopService(self)
         self.call.cancel()

     def getConnectionError(self,failure):
         log.msg("Error in getConnection", failure)

     def getDataError(self,failure):
         log.msg("Error in getData", failure)

     def getFactory(self):
         log.msg("getFactory")
         self.factory = ReconnectingPBClientFactory()
         return self.factory

JT
On Aug 13, 2004, at 12:52 PM, Eugene Coetzee wrote:

> Prehaps you are overriding startService() somewhere along.
>
> Can you post the code for FeedService.
>
>
> John Toohey wrote:
>
>> Thanks for your help. I just tried this, but the startService method 
>> is still not called. Is there something else I need to do?
>>
>> John
>>
>> On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:
>>
>>> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>>>
>>>> The .tap file is now as follows :-
>>>> def makeService(config):
>>>> pbport = int(config["pbport"])
>>>>
>>>> application = service.Application('feedserver', uid=1, gid=1)
>>>> f = FeedService('feedserver')
>>>> reactor.connectTCP('localhost',8002,f.getFactory())
>>>>
>>>> f.setServiceParent(service.IServiceCollection(application))
>>>
>>>
>
> -- 
> --
> ===============================================
> Reedflute Software Solutions
>
> Telephone           -> 018 293 3236
> General information -> info at reedflute.com
> Project information -> projects at reedflute.com
> Web                 -> www.reedflute.com
> ===============================================
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From glyph at divmod.com  Fri Aug 13 13:57:19 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 13 Aug 2004 13:57:19 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <1092419839.4055.490.camel@localhost>

On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:

> I'm looking for help understanding how .tap files are meant to be used 
> in production.

Abe,

Thanks for asking :).  This is an issue that there has been very little
conclusive discussion of, but lots of strong opinions on.  I will try to
give you a little background on how we got where we are now, and where
we hope to be eventually.  Unfortunately this probably won't answer your
question directly, but I hope it will help.

The idea behind tap files is that you have an object which represents
your application's configuration, and the storage format of that object
is back-end independent.  The most obvious application of this is "your
configuration can live in a database", but that's really just the tip of
the iceberg.

The difficulty with tap files is that there is a significant gap between
theory and practice, because it's very difficult to get the prospective
users (system administrators, particularly large-scale system
administrators) to provide comment on what would be the most useful
setup for themselves.  The system administration community is, almost by
definition, fond of the way in which they already know how to do
things.  There is a windows sysadmin culture, but since pretty much all
serious servers are run on UNIX these days, UNIX admins are the ones I
care about, and they like the nebulously-defined concept of "config
files".

In my experience, "config files" are really just extremely inconsistent,
limited, often buggy and slow programming languages with a huge implicit
import mechanism bizarre and arbitrary quoting rules.  Inevitably they
begin as a simple association of semantically significant keys with
values and eventually mutate into a tree-structured hierarchy with some
kind of limited control structures.  Depending on the nature of the
application domain for the particular server, the evolution can happen
slower or faster, but it seems inevitable for applications run on any
kind of scale.  The evolution tends to slow down as you reach about 80%
of the functionality of a real programming language, because sysadmins
don't want to be developers.  I'm certainly not saying they should be;
lawyers and novelists may speak the same language, but they hardly
participate in the same activities.

Obviously I'm not a big fan of config files.  The biggest problem I have
with config files is that knowledge does not migrate - if you have
learned the bizarre internals of Apache configuration, this will in no
way prepare you for the configuration of ANY mail system, let alone
sendmail.  There is also no way to hook apache up to any kind of mail
system by specifying it in the configuration language, because you need
a configuration directive to support "mail service".  Abruptly, you must
transition to a "real" programming language, compile and deploy
functionality, since the facility to do ad-hoc configuration is too
limited.

This makes the configuration and deployment of webmail systems a really
hairy problem... a problem which I have spent a good deal of time and
grief to solve :). [0]

It is probably an unstated goal of the Twisted project to never
officially support only one configuration mechanism.  In some
configurations, you really need the full power of Python; that's what
the twistd -y configuration option is for.

The 'mktap' utility distributed with Twisted is, unfortunately, not a
serious application deployment tool.  It was intended as a stopgap
measure because twisted.coil was taking too long to implement.

twisted.coil, briefly, was designed to emit tapfiles by creating a new,
"blank" server, adding servers, web resources, IRC bots and the like to
it in real time using a web-based management interface, and then saving
the result to a file.  Both the complexity and flexibility of the UI and
the stability of the persistence mechanism were problems that made it
very difficult to implement in a way which was actually usable in
production, but we have had a few usable prototypes developed.

mktap is only really useful if your application has an initial
configuration step to get the initial UI going and then several
subsequent configuration steps that involve changing the state of your
server and then saving it away, usually to a database or a more stable
storage that doesn't look anything like a config file (or a tap file) at
all.  This has not become a common idiom in Twisted code, so mktap
remains a good deal less useful than it could be.

Coil still hasn't been successfully implemented, so given mktap's
shortcomings, most serious applications end up providing some
specialized modules for configuration and then using a .tac file (really
a .py file with a few special rules about its namespace) to provide
configuration.  For example, quotient SVN trunk has abandoned mktap
entirely and is now using a module called 'quotient.deployment' so a
typical configuration ends up looking like this:

### 

from quotient.deployment import deploy

application = deploy(dataDirectory = 'data/db',
                     fileDirectory = 'data/files',
                     webLogFile = 'web.log',
                     domainNames = ['localhost', '127.0.0.1'],
                     pop3Port = 20110,
                     pop3sPort = 20995,
                     imap4Port = 20143,
                     imap4sPort = 20993,
                     httpPort = 20080,
                     httpsPort = 20443,
		     certificateFile = 'server.pem',
		     privateKeyFile = 'server.pem',
                     smtpPort = 20025,
                     smtpsPort = 20465,
                     sipPort = 25060,
		     pbPort = 8787,
                     manholeUser = 'admin',
                     manholePassword = 'admin',
                     manholePort = 'tcp:19293:interface=localhost')

###

So, that's how we're doing it at Divmod, and it works pretty well for
us, but I feel that it's a failure of Twisted as a framework that things
have to work this way.  In particular, I'd like to be able to separate
Quotient's application from the initialization of the web server, and
connect a web resource published by the quotient application to a web
publisher, which might live on an SSL-enabled socket, on a TCP port, or
on a UNIX socket, or even over some crazy UDP proxying thing.  Right now
we've glued the concrete TCP and SSL sockets to the web server straight
to the application, because anything else simply would have been too
complex and since our application speaks nearly every protocol Twisted
is capable of, we don't care too much about configuration integration
points with third-party software yet.  This *will* become a serious
problem when we want to integrate third-party plugins and configure
them, though, because that configuration will want to live in the same
area and there is no facility for that.  Currently the way to configure
a plugin is to make a *new* deployment module and write a derivative
function there for your configuration, which only allows one
sub-application to run at a time.

>From the experiences I've heard from other Twisted developers though,
it's far from clear how to make progress beyond this point without
making far more policy decisions than we're comfortable with.  Twisted
is a framework that tends to get called in only in the cases where you
have hard problems (after all, if you have easy problems, why not use an
eminently adequate and much more widely deployed solution like Apache or
Sendmail?) and hard problems have diverse requirements.  Many twisted
applications have very different ideas about how to, for example,
connect to a database, or even what a database *is*.  It's not clear to
me that we can say that any of these approaches is definitely
wrongheaded or invalid and needs to be set aside by the framework, but
with these differing ideas, there aren't a lot of opportunities for
integration that would inspire a general integration system.

For the moment, I am approaching this problem from the opposite end.  I
think that when we[1] refactor Quotient[2] into Mantissa[3], it will
evolve into a more generic application deployment platform with its own
plain-python configuration subsystem that is some simple icing on top of
.tac files, and when we have had some experience in the field with how
that works as a configuration system, we will backport some of that
knowledge into Twisted at a more general level.

Until then, deployment in Twisted can be a confusing question, but I
would suggest you follow this general strategy: avoid designing a
configuration language, and try to consider ways to simplify Python down
to the absolute bare essentials to say what your application needs to
say about its deployment environment, then use twistd -y or the
equivalent.

If you have some success figuring out how to do this well, please let us
know so we can try to develop some common patterns from our approaches
and put them into the framework.

My thinking right now runs along the lines of completely new and
different features for Twisted, such as the ability to locate singleton
services via the reactor which are connected to an event source
somehow... but I don't think those would help you very much at this
juncture.

-- Footnotes:
0: plug - check out my work so far: http://www.divmod.org/
1: e.g. my company, Divmod
2: our current application, a webmail system
3: our working title for the application server platform that encodes
our policy decisions as well as our implementation mechanisms, such as
our object database and web templating framework

-- 
  _  \ Glyph Lefkowitz   |"Songs that the Hyades shall sing,
 / \  \ glyph at divmod.com | Where flap the tatters of the King,
 ` _o_ \-----------------+ Must die unheard in, Dim Carcosa."
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From foom at fuhm.net  Fri Aug 13 14:13:04 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 13 Aug 2004 14:13:04 -0400
Subject: [Twisted-Python] need explanation in tutorial
In-Reply-To: <opscoe0og6ghc261@navigator>
References: <opscoe0og6ghc261@navigator>
Message-ID: <6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 13, 2004, at 11:08 AM, litnimax wrote:
> class FingerSetterProtocol(basic.LineReceiver):
>      def connectionMade(self): self.lines = []
>      def lineReceived(self, line): self.lines.append(line)
>      def connectionLost(self, reason):
>          self.factory.setUser(*self.lines[:2])
>          # first line: user    second line: status
>
> What is "*self.lines[:2]"?

This is a basic python question, not a twisted question. 
http://docs.python.org/tut/node6.html#SECTION006740000000000000000

James




From abe at fettig.net  Fri Aug 13 14:37:17 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 14:37:17 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <1092419839.4055.490.camel@localhost>
References: <411C2034.7050202@fettig.net> <1092419839.4055.490.camel@localhost>
Message-ID: <411D0A5D.90803@fettig.net>

Glyph,

Wow, awesome reply.  That's by far the best explanation of .taps I've 
come accross.  Thank you!

Based on what you said, I'll probably use a simple python file for 
configuration, like so:

file "hepconfig.py":
field1='rasberry sorbet'
field3='cherry garcia'

Then my application can do something like this:

defaultConfig = {'field1': 'chocolate',
                  'field2': 'vanilla',
                  'field3': 'strawberry'}

import hepconfig
userKeys = filter(lambda f: not f.startswith('_'), dir(hepconfig))
userVals = [getattr(hepconfig, key) for key in userKeys]
userConfig = dict(zip(userKeys, userVals))

for key, val in defaultConfig.items():
     userConfig.setdefault(key, val)

... which results in userConfig containing:
{'field1': 'rasberry sorbet',
  'field2': 'vanilla',
  'field3', 'cherry garcia'}

Then I can have a single mktap option, 
--configfile=/path/to/hepconfig.py (which could be hard-coded in .debs 
and .rpms).  I think that strikes a nice balance between avoiding a 
special configuration language, and still being easy for sysadmins to 
figure out.

Does that seem like a reasonable approach?

Abe



From litnimax at fromru.com  Fri Aug 13 16:04:17 2004
From: litnimax at fromru.com (litnimax)
Date: Fri, 13 Aug 2004 23:04:17 +0300
Subject: [Twisted-Python] need explanation in tutorial
In-Reply-To: <6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <opscoe0og6ghc261@navigator>
	<6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <opscospfn4ghc261@navigator>

Thanks much. I will try to ask only twisted related questions..

On Fri, 13 Aug 2004 14:13:04 -0400, James Y Knight <foom at fuhm.net> wrote:

> On Aug 13, 2004, at 11:08 AM, litnimax wrote:
>> class FingerSetterProtocol(basic.LineReceiver):
>>      def connectionMade(self): self.lines = []
>>      def lineReceived(self, line): self.lines.append(line)
>>      def connectionLost(self, reason):
>>          self.factory.setUser(*self.lines[:2])
>>          # first line: user    second line: status
>>
>> What is "*self.lines[:2]"?
>
> This is a basic python question, not a twisted question.  
> http://docs.python.org/tut/node6.html#SECTION006740000000000000000
>
> James
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From heikowu at ceosg.de  Sat Aug 14 07:16:22 2004
From: heikowu at ceosg.de (Heiko Wundram)
Date: Sat, 14 Aug 2004 13:16:22 +0200
Subject: [Twisted-Python] Nevow question
Message-ID: <200408141316.22590.heikowu@ceosg.de>

Hi all!

I'm currently working on a web-application with twisted and nevow, and I'm 
using the SessionWrapper of nevow to enable logins. Well, here comes the 
catch: When a login fails, nevow redirects to the original page, with a 
parameter "login-failed=<somestring>", and I'd like to catch this parameter 
(rather, check if it is there, if it is, output a different string from the 
template). For this I have created two sections in the HTML template, both 
using nevow:render="<somefunction>", and for one of these, I return "", and 
for the other just context.

But, the problem remains: how can I get the POST/GET parameters (without using 
something like Formless) that were posted to the page that is being 
displayed?

Heiko.



From itamar at itamarst.org  Sat Aug 14 11:43:47 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 14 Aug 2004 11:43:47 -0400
Subject: [Twisted-Python] Nevow question
In-Reply-To: <200408141316.22590.heikowu@ceosg.de>
References: <200408141316.22590.heikowu@ceosg.de>
Message-ID: <1092498227.15710.0.camel@sheriffpony>

Hi,

Please ask web questions on the twisted-web mailing list.




From radeex at gmail.com  Sat Aug 14 16:00:30 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 14 Aug 2004 16:00:30 -0400
Subject: [Twisted-Python] Things that Need to be Done for 2.0
Message-ID: <60ed19d40408141300723da7a9@mail.gmail.com>

glyph: Come up with a precise license and copyright policy. Do that,
and someone (probably me) can change trunk HEAD to use it.

Everyone: Get rid of all deprecation warnings when running current APIs.

Me: Finish converting our packaging to use zpkgtools, obsoleting half
of release-twisted. Then improve release-twisted (fix bugs in SVN
workflow, etc).

Me: Write documentation on release process and teach people how to do it.

Moshez: At least do the initial work for Debian packages for each of
our subprojects.

Web Sites, in order of importance:

Someone: Move existing Twisted-core-specific content to a new Core
project web site.

foom, fzZzy, dreid: Write a project web site for Web.

z3p: Write a project web site for Conch.

exarkun: Write project web sites for names, news, and mail.

spiv: Write a project web site for Lore and Runner.

glyph, z3p, exarkun, ???: Write a project web site for Words.

cce: Write a project web site for Flow.

Tv: Write a project web site for Pair.

Project web sites are to be placed at
http://twistedmatrix.com/projects/*/, where * is 'core', 'conch',
'web', etc. Put your content in the WebSite svn repository in
"twistedmatrix.com/projects/". If anybody needs access to this
repository shoot me a message.

Obviously, not all of these are terribly urgent. The urgent ones are
core, names, conch, lore, and web. If nobody gets around to creating
real web sites for the others, I'll put in place a basic stock web
page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From glyph at divmod.com  Sat Aug 14 21:58:27 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 14 Aug 2004 21:58:27 -0400
Subject: [Twisted-Python] Things that Need to be Done for 2.0
In-Reply-To: <60ed19d40408141300723da7a9@mail.gmail.com>
References: <60ed19d40408141300723da7a9@mail.gmail.com>
Message-ID: <1092535107.12769.0.camel@localhost>

On Sat, 2004-08-14 at 16:00 -0400, Christopher Armstrong wrote:
> [do some stuff]

Thanks, chris!  I'll write something up on copyright soon.

-- 
  _  \ Glyph Lefkowitz   |"Songs that the Hyades shall sing,
 / \  \ glyph at divmod.com | Where flap the tatters of the King,
 ` _o_ \-----------------+ Must die unheard in, Dim Carcosa."
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From serj_trejo at hotmail.com  Sun Aug 15 06:08:58 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 15 Aug 2004 06:08:58 -0400
Subject: [Twisted-Python] lightweight persistence for twisted
Message-ID: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>

Why not use divmod's atop. Just parse your flat files into simple objects 
that are persisted via atop's Store and PowerUps into a Sleepycat object 
database (assign each object containing your flat file a GID that is 
Indexed)?

Serg


>From: James Y Knight <foom at fuhm.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] lightweight persistence for twisted
>Date: Thu, 12 Aug 2004 13:14:22 -0400
>
>On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
>>5) Would be nice if it could  be accesses through Twisted's generic 
>>enterprise SQL API
>
>Last I looked, twisted's reflector stuff needed a lot of work. I'd thus 
>recommend against xmlreflector.
>
>If you want SQL, you probably want SQLite. It is a C module, so it does 
>introduce a dependancy, but it is otherwise fully self-contained. If you 
>don't want SQL, you can get a lot simpler. With 5000 records, you can 
>probably just store them all in a python datastructure in memory and either 
>serialize it or write it to something like a ":" separated file.
>
>James
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Sun Aug 15 06:18:01 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 15 Aug 2004 06:18:01 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
Message-ID: <BAY12-F20l51dpPIfsb00023850@hotmail.com>

Did someone mention recently on #twisted.web (or maybe a related IRC channel 
such as #divmod ) that .tac files are going to be deprecated in the next 
major rev of Twisted, or maybe I misunderstood (I thought I read this a few 
days ago an IRC conversation but can't recall).

Serg


>From: Itamar Shtull-Trauring <itamar at itamarst.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Understanding the role of .tap files
>Date: Fri, 13 Aug 2004 10:33:44 -0400
>
>On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:
>
> > I'm looking for help understanding how .tap files are meant to be used
> > in production.  I know that a .tap, when generated, contains the
> > configuration info for an application.  And there are tools like tap2deb
> > and tap2ntsvc that take the information in a .tap and convert it into an
> > installable packages.
>
>tap2deb and friends also work on .tac files, which are Python files (see
>the application howto for an example). .tac files allow you to give
>users a Python file for config that they can edit. Or, your .tap or .tac
>could load a config  file in the format of your choice and use that to
>configure your app, and then users could edit that.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sun Aug 15 10:59:02 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Aug 2004 10:59:02 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <BAY12-F20l51dpPIfsb00023850@hotmail.com>
References: <BAY12-F20l51dpPIfsb00023850@hotmail.com>
Message-ID: <1092581292.15709.28.camel@sheriffpony>

On Sun, 2004-08-15 at 06:18, Sergio Trejo wrote:
> Did someone mention recently on #twisted.web (or maybe a related IRC channel 
> such as #divmod ) that .tac files are going to be deprecated in the next 
> major rev of Twisted, or maybe I misunderstood

You probably misunderstood.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mailinglist at ltsai.com  Sun Aug 15 11:45:33 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sun, 15 Aug 2004 23:45:33 +0800
Subject: [Twisted-Python] adbapi.ConnectionPool
Message-ID: <cfo0fa$7oi$1@sea.gmane.org>

Is the connection pool global within reactor/twistd? In another words, 
if I import adbapi in various of my py files and uses it, will I be 
using a single global connection pool throughout my modules?

Liming




From mailinglist at ltsai.com  Sun Aug 15 12:01:57 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 00:01:57 +0800
Subject: [Twisted-Python] reactor.stop
Message-ID: <cfo1e3$9mf$1@sea.gmane.org>

Dear all,

I understand we are not supposed to call reactor.stop() within twistd as 
the reactor is already running, therefore it will shut down the entire 
application.

Why does calling reactor.stop within my module will cause the 
application to shutdown? Is it because even when I import the reactor in 
my own module, it is still somewhat linked to the twistd reactor through 
the system event trigger?

Regards,
Liming




From dave at krondo.com  Sun Aug 15 12:47:00 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 15 Aug 2004 09:47:00 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool
In-Reply-To: <cfo0fa$7oi$1@sea.gmane.org>
References: <cfo0fa$7oi$1@sea.gmane.org>
Message-ID: <1092588420.1787.104.camel@oneiros>

No, it is not global. If you want all your modules
to use the same pool, you will have to arrange for
them to access the same ConnectionPool object (e.g.,
by putting that object in your top-level service).

dave

On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> Is the connection pool global within reactor/twistd? In another words, 
> if I import adbapi in various of my py files and uses it, will I be 
> using a single global connection pool throughout my modules?
> 
> Liming
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lists at holsman.net  Sun Aug 15 19:51:48 2004
From: lists at holsman.net (Ian Holsman)
Date: Mon, 16 Aug 2004 09:51:48 +1000
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>
References: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>
Message-ID: <411FF714.5060408@holsman.net>

I'm new to this list, so apolagies if this has been discussed before.

has anyone tried DyBase with twisted ? 
http://www.garret.ru/~knizhnik/dybase.html

It provides a lite object database (single process only) which is 
reasonably fast.

Sergio Trejo wrote:
> Why not use divmod's atop. Just parse your flat files into simple 
> objects that are persisted via atop's Store and PowerUps into a 
> Sleepycat object database (assign each object containing your flat file 
> a GID that is Indexed)?
> 
> Serg
> 
> 
>> From: James Y Knight <foom at fuhm.net>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] lightweight persistence for twisted
>> Date: Thu, 12 Aug 2004 13:14:22 -0400
>>
>> On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
>>
>>> 5) Would be nice if it could  be accesses through Twisted's generic 
>>> enterprise SQL API
>>
>>
>> Last I looked, twisted's reflector stuff needed a lot of work. I'd 
>> thus recommend against xmlreflector.
>>
>> If you want SQL, you probably want SQLite. It is a C module, so it 
>> does introduce a dependancy, but it is otherwise fully self-contained. 
>> If you don't want SQL, you can get a lot simpler. With 5000 records, 
>> you can probably just store them all in a python datastructure in 
>> memory and either serialize it or write it to something like a ":" 
>> separated file.
>>
>> James
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _________________________________________________________________
> Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
> http://join.msn.com/?page=features/featuredemail
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From mailinglist at ltsai.com  Sun Aug 15 22:29:04 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 10:29:04 +0800
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <1092588420.1787.104.camel@oneiros>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
Message-ID: <cfp660$r4l$1@sea.gmane.org>

Dave Peticolas wrote:

> No, it is not global. If you want all your modules
> to use the same pool, you will have to arrange for
> them to access the same ConnectionPool object (e.g.,
> by putting that object in your top-level service).
> 
> dave
> 
> On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> 
>>Is the connection pool global within reactor/twistd? In another words, 
>>if I import adbapi in various of my py files and uses it, will I be 
>>using a single global connection pool throughout my modules?
>>
>>Liming
>>
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

About the start method in the API, what does it mean by "If you are 
using the reactor normally, this function does *not* need to be called."

Liming







From itamar at itamarst.org  Sun Aug 15 23:22:09 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Aug 2004 23:22:09 -0400
Subject: [Twisted-Python] reactor.stop
In-Reply-To: <cfo1e3$9mf$1@sea.gmane.org>
References: <cfo1e3$9mf$1@sea.gmane.org>
Message-ID: <1092626529.24291.0.camel@sheriffpony>

On Sun, 2004-08-15 at 12:01, Tsai Li Ming wrote:

> Why does calling reactor.stop within my module will cause the 
> application to shutdown? Is it because even when I import the reactor in 
> my own module, it is still somewhat linked to the twistd reactor through 
> the system event trigger?

There is only one reactor. Calling reactor.stop() means "stop the
reactor", and this stops the application since the reactor is what's
driving it.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mailinglist at ltsai.com  Sun Aug 15 23:39:11 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 11:39:11 +0800
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <1092626529.24291.0.camel@sheriffpony>
References: <cfo1e3$9mf$1@sea.gmane.org> <1092626529.24291.0.camel@sheriffpony>
Message-ID: <cfpa9f$17h$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:

> On Sun, 2004-08-15 at 12:01, Tsai Li Ming wrote:
> 
> 
>>Why does calling reactor.stop within my module will cause the 
>>application to shutdown? Is it because even when I import the reactor in 
>>my own module, it is still somewhat linked to the twistd reactor through 
>>the system event trigger?
> 
> 
> There is only one reactor. Calling reactor.stop() means "stop the
> reactor", and this stops the application since the reactor is what's
> driving it.
> 


The part that I don't understand is when I import the reactor in my own 
py files, why will it be the same single reactor that the application 
uses. Is it something special that twisted is handling or is just a 
simple python question?

Many thanks,
Liming




From dave at krondo.com  Mon Aug 16 01:53:50 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 15 Aug 2004 22:53:50 -0700
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <cfp660$r4l$1@sea.gmane.org>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
	<cfp660$r4l$1@sea.gmane.org>
Message-ID: <1092635629.6594.7.camel@oneiros>

On Sun, 2004-08-15 at 19:29, Tsai Li Ming wrote:
> Dave Peticolas wrote:
> 
> > No, it is not global. If you want all your modules
> > to use the same pool, you will have to arrange for
> > them to access the same ConnectionPool object (e.g.,
> > by putting that object in your top-level service).
> > 
> > dave
> > 
> > On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> > 
> >>Is the connection pool global within reactor/twistd? In another words, 
> >>if I import adbapi in various of my py files and uses it, will I be 
> >>using a single global connection pool throughout my modules?
> >>
> >>Liming
> >>
> About the start method in the API, what does it mean by "If you are 
> using the reactor normally, this function does *not* need to be called."

When the reactor is created it registers its own start
method with the reactor so that when the reactor starts,
or if it is already running, the method will be called
automatically. Calling start by hand is generally only
for unit tests.

dave





From radeex at gmail.com  Mon Aug 16 01:11:31 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 16 Aug 2004 01:11:31 -0400
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <cfpa9f$17h$1@sea.gmane.org>
References: <cfo1e3$9mf$1@sea.gmane.org> <1092626529.24291.0.camel@sheriffpony>
	<cfpa9f$17h$1@sea.gmane.org>
Message-ID: <60ed19d4040815221155b9b93c@mail.gmail.com>

On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> The part that I don't understand is when I import the reactor in my own
> py files, why will it be the same single reactor that the application
> uses. Is it something special that twisted is handling or is just a
> simple python question?

Well, the reactor module is pretty weird and magical, but in this
regard, it acts exactly like any python module. When you import any
module twice, you get the same module.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From db3l at fitlinxx.com  Mon Aug 16 10:40:36 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Aug 2004 10:40:36 -0400
Subject: [Twisted-Python] Supporting new types with PB
Message-ID: <uk6vz16zf.fsf@fitlinxx.com>

I've been trying to get Perspective Broker to cooperate for the
transmission of mx.DateTime values across a remote session (we use
them for some of our components which are referenceable objects) and
was hoping to solicit input on the simplest or most appropriate way to
handle things.

A while back we encountered a similar problem with mx.DateTime values
within objects that we were returning from components as copyables.
Back then we "punted" and ended up supporting the concept of pickling
specific fields for the remote copy, thus letting the mx.DateTime
values go through as pickles.  But I was hoping to support them more
fully now.

Originally I was hoping that I could just define mx.DateTime as an
acceptable (type, class, module) in the default security object, but
the problem seems to be that it needs support in the raw jelly layer,
since it's a type in an extension module.  I'm guessing that the same
problem would exist with Python's (2.3+) datetime type, since that is
also a new type and not a user class.

So I next figured I'd just augment the jelly layer to add the new
type, but that doesn't look all that clean to do.  I really only want
to change jelly, but the default broker uses the jelly module
functions directly.  I suppose I could reach in and change the jelly
reference in the broker module but that seems messy.

The one replaceable point appears to be the broker used by the PB
factory.  Presumably I could subclass the default broker with one that
overrode the appropriate stuff to use my replacement jelly and in that
replacement jelly handle the extra types prior to deferring to the
default implementation.  At least the client is quickly replaceable.
For the server I'd subclass PBServerFactory to override the direct
reference to Broker in buildProtocol, but would otherwise have to cut
'n paste the existing function to maintain behavior, which seems a
little fragile.

I suppose a separate alternative would be to wrap mx.DateTime in my
own classes that implemented Jellyable/Unjellyable, but then I've got
the overhead of running around with my own DateTime wrappers for no
other reason than remote transmission.

Of course, a final alternative is close to what we did previously for
the Copyable problem, and just augment our wrappers on either end to
transform mx.DateTime values into something jelly can handle across
the relevant method calls.

Am I missing something simple?  Is there an intended method by which
the existing jelly support in Twisted can be augmented to support
other built-in types rather than only new classes?

Thanks.

-- David




From abe at fettig.net  Mon Aug 16 10:55:55 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 10:55:55 -0400
Subject: [Twisted-Python] including plugins.tml in a package
Message-ID: <4120CAFB.1080608@fettig.net>

Hi folks,

It's come to my attention that my current Hep package for windows 
(packaged using bdist_win32) doesn't put the plugins.tml file where it 
should be (under site-packages/hep).  In googling around for a solution, 
I came across this post:

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html

Which describes using an "undocumented hack" in distutils to get the 
plugins.tml in the right place.  Is that the correct way to do this?

Thanks,
Abe



From dave at krondo.com  Mon Aug 16 11:06:22 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 16 Aug 2004 08:06:22 -0700
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <1092635629.6594.7.camel@oneiros>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
	<cfp660$r4l$1@sea.gmane.org>  <1092635629.6594.7.camel@oneiros>
Message-ID: <1092668782.6594.14.camel@oneiros>

On Sun, 2004-08-15 at 22:53, Dave Peticolas wrote:
> On Sun, 2004-08-15 at 19:29, Tsai Li Ming wrote:
> > Dave Peticolas wrote:
> > 
> > > No, it is not global. If you want all your modules
> > > to use the same pool, you will have to arrange for
> > > them to access the same ConnectionPool object (e.g.,
> > > by putting that object in your top-level service).
> > > 
> > > dave
> > > 
> > > On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> > > 
> > >>Is the connection pool global within reactor/twistd? In another words, 
> > >>if I import adbapi in various of my py files and uses it, will I be 
> > >>using a single global connection pool throughout my modules?
> > >>
> > >>Liming
> > >>
> > About the start method in the API, what does it mean by "If you are 
> > using the reactor normally, this function does *not* need to be called."
> 
> When the reactor is created it registers its own start
> method with the reactor so that when the reactor starts,
> or if it is already running, the method will be called
> automatically. Calling start by hand is generally only
> for unit tests.

That should be 'when the connection pool is created'.

dave





From projects at reedflute.com  Mon Aug 16 11:58:05 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 16 Aug 2004 17:58:05 +0200
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <60ed19d4040815221155b9b93c@mail.gmail.com>
References: <cfo1e3$9mf$1@sea.gmane.org>
	<1092626529.24291.0.camel@sheriffpony>	<cfpa9f$17h$1@sea.gmane.org>
	<60ed19d4040815221155b9b93c@mail.gmail.com>
Message-ID: <4120D98D.7020202@reedflute.com>

Christopher Armstrong wrote:

>On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
>  
>
>>The part that I don't understand is when I import the reactor in my own
>>py files, why will it be the same single reactor that the application
>>uses. Is it something special that twisted is handling or is just a
>>simple python question?
>>    
>>
>
>Well, the reactor module is pretty weird and magical, but in this
>regard, it acts exactly like any python module. When you import any
>module twice, you get the same module.
>
>  
>
In fact - reactor is not an package - but a global instance returned by 
class SelectReactor.

from twisted.internet.default.py

def install():
"""Configure the twisted mainloop to be run using the select() reactor.
"""
reactor = SelectReactor()
main.installReactor(reactor)


When the reactor is installed the following code in 
twisted.internet.main.py checks for existing instances of 'reactor'.

def installReactor(reactor):
global addReader, addWriter, removeReader, removeWriter
global iterate, addTimeout, wakeUp
# this stuff should be common to all reactors.
import twisted.internet
import sys
assert not sys.modules.has_key('twisted.internet.reactor'), \
"reactor already installed"
twisted.internet.reactor = reactor
sys.modules['twisted.internet.reactor'] = reactor

regards,

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From matt at pollenation.net  Mon Aug 16 12:05:12 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 16 Aug 2004 17:05:12 +0100
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120CAFB.1080608@fettig.net>
References: <4120CAFB.1080608@fettig.net>
Message-ID: <1092672312.31917.106.camel@harold>

On Mon, 2004-08-16 at 15:55, Abe Fettig wrote:
> Hi folks,
> 
> It's come to my attention that my current Hep package for windows 
> (packaged using bdist_win32) doesn't put the plugins.tml file where it 
> should be (under site-packages/hep).  In googling around for a solution, 
> I came across this post:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html
> 
> Which describes using an "undocumented hack" in distutils to get the 
> plugins.tml in the right place.  Is that the correct way to do this?
> 
> Thanks,
> Abe

Nevow tinkers with distutils to install a .css in amongst the Python
modules. Here's the config:

        from distutils.command import install
        from distutils.core import setup
        
        for scheme in install.INSTALL_SCHEMES.values():
            scheme['data'] = scheme['purelib']
        
        setup(
            author='Donavon Preston et al',
            author_email='dp at divmod.org',
            name='nevow',
            version='0.2pre',
            description='Web Application Framework',
            url='http://www.nevow.com/',
        #    download_url='http://www.nevow.com/',
            packages=['formless', 'nevow', 'nevow.flat', 'nevow.test'],
            data_files=[
                ['formless', ['formless/freeform-default.css']],
                ]
            )

I can't remember where that hack came from but all it does is change the
scheme(s) so that data files install to the same base directory as the
Python packages and modules. That's good enough for Nevow but you may
need something smarter.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From abe at fettig.net  Mon Aug 16 12:28:26 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 12:28:26 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <1092672312.31917.106.camel@harold>
References: <4120CAFB.1080608@fettig.net> <1092672312.31917.106.camel@harold>
Message-ID: <4120E0AA.1060603@fettig.net>

Matt Goodall wrote:

> Nevow tinkers with distutils to install a .css in amongst the Python
> modules. Here's the config:

[snip]

>         for scheme in install.INSTALL_SCHEMES.values():
>             scheme['data'] = scheme['purelib']

I've tried that approach, but as far as I can see it doesn't work for 
bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
bdist_wininst", and installed the package.  Rather than putting 
formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
it put it in C:\Python23\formless, which I'm pretty sure is wrong.

Abe



From matt at pollenation.net  Mon Aug 16 12:43:18 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 16 Aug 2004 17:43:18 +0100
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120E0AA.1060603@fettig.net>
References: <4120CAFB.1080608@fettig.net>
	<1092672312.31917.106.camel@harold>  <4120E0AA.1060603@fettig.net>
Message-ID: <1092674597.31921.126.camel@harold>

On Mon, 2004-08-16 at 17:28, Abe Fettig wrote:
> Matt Goodall wrote:
> 
> > Nevow tinkers with distutils to install a .css in amongst the Python
> > modules. Here's the config:
> 
> [snip]
> 
> >         for scheme in install.INSTALL_SCHEMES.values():
> >             scheme['data'] = scheme['purelib']
> 
> I've tried that approach, but as far as I can see it doesn't work for 
> bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
> bdist_wininst", and installed the package.  Rather than putting 
> formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
> it put it in C:\Python23\formless, which I'm pretty sure is wrong.

Oh ... erm ... damn ;-). Thanks for pointing the error out.

Cheers, Matt
-- 
Matt Goodall <matt at pollenation.net>




From abe at fettig.net  Mon Aug 16 14:00:17 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 14:00:17 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <1092674597.31921.126.camel@harold>
References: <4120CAFB.1080608@fettig.net>	<1092672312.31917.106.camel@harold>
	<4120E0AA.1060603@fettig.net> <1092674597.31921.126.camel@harold>
Message-ID: <4120F631.3050707@fettig.net>

OK, I've come up with a hack that seems to accomplish putting data files 
in with python files in bdist_wininst.  This is a hack, folks - I'm not 
a distutils expert, and I'm really hoping someone is going to chime in 
with a better way.

Basically, I'm checking to see if the build command is bdist_wininst, 
and if so, prepending /PURELIB/ to the path of data files.  This has the 
effect of putting these files in the installer zip under 
PURELIB/file/name, rather than DATA/file/name.  I can't offer a good 
explanation for why this works, though.

Here's my setup.py file:

from distutils.core import setup
from distutils.command import install
import os, sys

data_files = [['hep', ['hep/plugins.tml']],
               ['hep/web/static', ['hep/web/static/hep.css']],
               ]

# hack to put data files in same basedir as python code
for scheme in install.INSTALL_SCHEMES.values():
     scheme['data'] = scheme['purelib']

# another hack to accomplish the same thing for windows builds
if sys.argv[1] == 'bdist_wininst':
     for fileInfo in data_files:
         fileInfo[0] = '/PURELIB/%s' % fileInfo[0]

setup(name='hep',
       version='0.6.1',
       description='Hep, a multiprotocol message server.',
       author='Abe Fettig',
       author_email='xxx at xxxxx.xxx',
       url='http://www.fettig.net/projects/hep',
       packages=['hep', 'hep.services', 'hep.tests'],
       data_files=data_files,
       )

-- EOF --

I'm cross-posting this to distutils-sig in case someone there has a 
better solution.

Abe

Matt Goodall wrote:

> On Mon, 2004-08-16 at 17:28, Abe Fettig wrote:
> 
>>Matt Goodall wrote:
>>
>>
>>>Nevow tinkers with distutils to install a .css in amongst the Python
>>>modules. Here's the config:
>>
>>[snip]
>>
>>
>>>        for scheme in install.INSTALL_SCHEMES.values():
>>>            scheme['data'] = scheme['purelib']
>>
>>I've tried that approach, but as far as I can see it doesn't work for 
>>bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
>>bdist_wininst", and installed the package.  Rather than putting 
>>formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
>>it put it in C:\Python23\formless, which I'm pretty sure is wrong.
> 
> 
> Oh ... erm ... damn ;-). Thanks for pointing the error out.
> 
> Cheers, Matt




From fdrake at acm.org  Mon Aug 16 20:13:49 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Mon, 16 Aug 2004 20:13:49 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in a
	package
In-Reply-To: <4120F631.3050707@fettig.net>
References: <4120CAFB.1080608@fettig.net> <1092674597.31921.126.camel@harold>
	<4120F631.3050707@fettig.net>
Message-ID: <200408162013.49223.fdrake@acm.org>

On Monday 16 August 2004 02:00 pm, Abe Fettig wrote:
 > OK, I've come up with a hack that seems to accomplish putting data files
 > in with python files in bdist_wininst.  This is a hack, folks - I'm not
 > a distutils expert, and I'm really hoping someone is going to chime in
 > with a better way.

Things are better in Python 2.4.  ;-)  You'll be able to spell out a set of 
files that should be installed into your package directly in setup.py.  For 
instance, if you're distributing the pakcage "pkg" and it includes a file 
"plugins.html" that should be in the package directory, you can use:

setup(packages=["pkg"],
      package_data={"pkg": ["pkg/plugins.html"]},
      ...)

If you want to do this without waiting for Python 2.4, you can use Phillip 
Eby's setuptools package.  This can be found in the Python CVS tree at 
nondist/sandbox/setuptools/.  Very cool.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From abe at fettig.net  Mon Aug 16 21:21:10 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 21:21:10 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in
	a	package
In-Reply-To: <200408162013.49223.fdrake@acm.org>
References: <4120CAFB.1080608@fettig.net>
	<1092674597.31921.126.camel@harold>	<4120F631.3050707@fettig.net>
	<200408162013.49223.fdrake@acm.org>
Message-ID: <41215D86.7060001@fettig.net>

Thanks, Fred, that's good to know!

Fred L. Drake, Jr. wrote:

> Things are better in Python 2.4.  ;-)  You'll be able to spell out a set of 
> files that should be installed into your package directly in setup.py.  For 
> instance, if you're distributing the pakcage "pkg" and it includes a file 
> "plugins.html" that should be in the package directory, you can use:
> 
> setup(packages=["pkg"],
>       package_data={"pkg": ["pkg/plugins.html"]},
>       ...)
> 
> If you want to do this without waiting for Python 2.4, you can use Phillip 
> Eby's setuptools package.  This can be found in the Python CVS tree at 
> nondist/sandbox/setuptools/.  Very cool.
> 
> 
>   -Fred
> 




From fdrake at acm.org  Mon Aug 16 22:50:35 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Mon, 16 Aug 2004 22:50:35 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in
	=?iso-8859-1?q?a	package?=
In-Reply-To: <41215D86.7060001@fettig.net>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net>
Message-ID: <200408162250.35027.fdrake@acm.org>

On Monday 16 August 2004 09:21 pm, Abe Fettig wrote:
 > Thanks, Fred, that's good to know!

I'm glad to try and help.

It just struck me that you cross-posted from the Twisted list; Twisted is 
moving to use the "zpkg" tool I wrote for Zope 3 for packaging.  zpkg 
automatically makes data files from a package part of the installation of 
that package if you don't tell it to do something different with them.

Information about zpkg is available at:

    http://www.zope.org/Members/fdrake/zpkgtools/

I'll be glad to answer questions and generally try to improve the 
documentation to make zpkg easier to learn and use.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From radeex at gmail.com  Mon Aug 16 23:43:08 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 16 Aug 2004 23:43:08 -0400
Subject: [Twisted-Python] zpkg usage in Twisted (was: including plugins.tml
	in a package?)
In-Reply-To: <200408162250.35027.fdrake@acm.org>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net> <200408162250.35027.fdrake@acm.org>
Message-ID: <60ed19d40408162043456550f0@mail.gmail.com>

On Mon, 16 Aug 2004 22:50:35 -0400, Fred L. Drake, Jr. <fdrake at acm.org> wrote:
> It just struck me that you cross-posted from the Twisted list; Twisted is
> moving to use the "zpkg" tool I wrote for Zope 3 for packaging.  zpkg
> automatically makes data files from a package part of the installation of
> that package if you don't tell it to do something different with them.
> 
> Information about zpkg is available at:
> 
>     http://www.zope.org/Members/fdrake/zpkgtools/
> 
> I'll be glad to answer questions and generally try to improve the
> documentation to make zpkg easier to learn and use.

And here my cue to start asking questions. :-)

Fred, our setup.py is pretty scary. It's full of hacks specific to
various platforms, etc. I'll list all those which confuse me here and
hopefully you can tell me the best way to port this stuff to zpkg --
whether zpkg handles it already or if I need to extend the way it
calls distutils (and how I can do that).

(in order that they appear in our setup.py)
1) build_scripts_twisted
2) build_ext_twisted
3) OS-X gcc arguments hack
4) WIN32 macro

1) build_scripts_twisted

class build_scripts_twisted(build_scripts):
    """Renames scripts so they end with '.py' on Windows."""

    def run(self):
        build_scripts.run(self)
        if os.name == "nt":
            for f in os.listdir(self.build_dir):
                fpath=os.path.join(self.build_dir, f)
                if not fpath.endswith(".py"):
                    try:
                        os.unlink(fpath + ".py")
                    except EnvironmentError, e:
                        if e.args[1]=='No such file or directory':
                            pass
                    os.rename(fpath, fpath + ".py")

2) build_ext_twisted

This is a doozy. As the name implies, it's a subclass of build_ext. It
overrides build_extensions to call self._detect_modules before calling
the regular build_extensions; _detect_modules does a bunch of compiler
tests, conditionally adding things to self.extensions.

The tests generate .c file that uses CPP directives to test for the
existence of header files and names from those headers. Oh, and one
that checks for a struct member (yow). It uses self.compiler.compile
to run these through the compiler and checks for a CompileError.

3) OS-X GCC arguments hack

# Apple distributes a nasty version of Python 2.2 w/ all release builds of
# OS X 10.2 and OS X Server 10.2
BROKEN_CONFIG = '2.2 (#1, 07/14/02, 23:25:09) \n[GCC Apple cpp-precomp 6.14]'
if sys.platform == 'darwin' and sys.version == BROKEN_CONFIG:
    # change this to 1 if you have some need to compile
    # with -flat_namespace as opposed to -bundle_loader
    FLAT_NAMESPACE = 0
    BROKEN_ARCH = '-arch i386'
    BROKEN_NAMESPACE = '-flat_namespace -undefined_suppress'
    import distutils.sysconfig
    distutils.sysconfig.get_config_vars()
    x = distutils.sysconfig._config_vars['LDSHARED']
    y = x.replace(BROKEN_ARCH, '')
    if not FLAT_NAMESPACE:
        e = os.path.realpath(sys.executable)
        y = y.replace(BROKEN_NAMESPACE, '-bundle_loader ' + e)
    if y != x:
        print "Fixing some of Apple's compiler flag mistakes..."
        distutils.sysconfig._config_vars['LDSHARED'] = y


4) WIN32 macro

# always define WIN32 under Windows
if os.name == 'nt':
    define_macros = [("WIN32", 1)]
else:
    define_macros = []

I got no idea what this does.


Any idea how I should port these things to zpkg?

Thanks!

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Tue Aug 17 03:21:56 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 03:21:56 -0400
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <4120D98D.7020202@reedflute.com>
References: <cfo1e3$9mf$1@sea.gmane.org>	<1092626529.24291.0.camel@sheriffpony>	<cfpa9f$17h$1@sea.gmane.org>	<60ed19d4040815221155b9b93c@mail.gmail.com>
	<4120D98D.7020202@reedflute.com>
Message-ID: <4121B214.9080602@divmod.com>

Eugene Coetzee wrote:
> Christopher Armstrong wrote:
> 
>> On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming 
>> <mailinglist at ltsai.com> wrote:
>>  
>>
>>> The part that I don't understand is when I import the reactor in my own
>>> py files, why will it be the same single reactor that the application
>>> uses. Is it something special that twisted is handling or is just a
>>> simple python question?
>>>   
>>
>>
>> Well, the reactor module is pretty weird and magical, but in this
>> regard, it acts exactly like any python module. When you import any
>> module twice, you get the same module.
>>
>>  
>>
> In fact - reactor is not an package - but a global instance returned by 
> class SelectReactor.

   This is an implementation detail that should neither affect your 
programs nor be relied upon by them.  In the future, it may be a module 
or some other kind of object.

   Jp



From exarkun at divmod.com  Tue Aug 17 03:29:48 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 03:29:48 -0400
Subject: [Twisted-Python] Supporting new types with PB
In-Reply-To: <uk6vz16zf.fsf@fitlinxx.com>
References: <uk6vz16zf.fsf@fitlinxx.com>
Message-ID: <4121B3EC.3060009@divmod.com>

David Bolen wrote:
> I've been trying to get Perspective Broker to cooperate for the
> transmission of mx.DateTime values across a remote session (we use
> them for some of our components which are referenceable objects) and
> was hoping to solicit input on the simplest or most appropriate way to
> handle things.
> 

   A major shortcoming of the current version of jelly is the inability 
to register external serialization functions for new types.

   Brian Warner has been working on a new version for some time, and I 
believe he is quite close to completing it (but he has been quite close 
to completing it for some time).  It addresses this problem quite 
completely.

   Until it is ready, though, I don't know of any good solutions.  The 
approach I have taken in my software is to copy the definition of 
twisted.spread.jelly._Jellier.jelly, add support for external 
serialization function registration (via adapters in my case), and then 
replace the original function with a reference to this new function at 
runtime (generally immediately after startup).

   This works reasonably well, but has obvious significant drawbacks.  I 
can't think of much else to suggest, though, except perhaps to get in 
touch with Brian and ask him if there's anything you can do to help 
speed along the completion of the new version.

   Jp



From radeex at gmail.com  Tue Aug 17 15:10:29 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 15:10:29 -0400
Subject: [Twisted-Python] Re: zpkg usage in Twisted
In-Reply-To: <2m4qn1c443.fsf@starship.python.net>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net> <200408162250.35027.fdrake@acm.org>
	<60ed19d40408162043456550f0@mail.gmail.com>
	<2m4qn1c443.fsf@starship.python.net>
Message-ID: <60ed19d404081712106437be10@mail.gmail.com>

On Tue, 17 Aug 2004 13:59:24 +0100, Michael Hudson <mwh at python.net> wrote:
> Christopher Armstrong <radeex at gmail.com> writes:
> > On Mon, 16 Aug 2004 22:50:35 -0400, Fred L. Drake, Jr. <fdrake at acm.org> wrote:
> >> I'll be glad to answer questions and generally try to improve the
> >> documentation to make zpkg easier to learn and use.
> >
> > And here my cue to start asking questions. :-)
> 
> Uhh, I may be being daft, but I'm not sure Fred's gonna see
> it.. AFAICT it only went to the twisted list.


> From: Christopher Armstrong <radeex at gmail.com>
> Reply-To: radix at twistedmatrix.com
> To: Fred Drake <fred at zope.com>
> Cc: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Mon, 16 Aug 2004 23:43:08 -0400
> Subject: zpkg usage in Twisted (was: including plugins.tml in a package?)

That's what my headers say, anyway.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 16:09:35 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 16:09:35 -0400
Subject: [Twisted-Python] twisted.manhole
Message-ID: <20040817200935.GA16922@mit.edu>

There doesn't seem to be much documentation for twisted.manhole.  Yes,
I have seen http://www.twistedmatrix.com/documents/current/howto/telnet

So, I have been playing around with it trying to figure out the proper usage.
I have some of it figured out.  The following snippet works fine for my
needs...

	from twisted.manhole.telnet import ShellFactory

    [...]

	shell = ShellFactory()
	shell.setService(s)  // s here is my own service 
	shell.password = "test"
	internet.TCPServer(config['telnet_port'],shell).setServiceParent(serviceCollection)

But I was curious so starting looking at the other parts of it as well.

Frustratingly, I haven't yet figured out how to employ
twisted.manhole.ui twisted.manhole.service or twisted.manhole.explorer.
Can anyone point so some examples or provide a brief overview.

If get enough information I will pull it all together into a howto.

Thanks,
Steve Bauer





From matt at pollenation.net  Tue Aug 17 17:41:15 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue, 17 Aug 2004 22:41:15 +0100
Subject: [Twisted-Python] Nevow question
In-Reply-To: <200408141316.22590.heikowu@ceosg.de>
References: <200408141316.22590.heikowu@ceosg.de>
Message-ID: <1092778875.12427.15.camel@debian>

On Sat, 2004-08-14 at 13:16 +0200, Heiko Wundram wrote:
> Hi all!
> 
> I'm currently working on a web-application with twisted and nevow, and I'm 
> using the SessionWrapper of nevow to enable logins. Well, here comes the 
> catch: When a login fails, nevow redirects to the original page, with a 
> parameter "login-failed=<somestring>", and I'd like to catch this parameter 
> (rather, check if it is there, if it is, output a different string from the 
> template). For this I have created two sections in the HTML template, both 
> using nevow:render="<somefunction>", and for one of these, I return "", and 
> for the other just context.
> 
> But, the problem remains: how can I get the POST/GET parameters (without using 
> something like Formless) that were posted to the page that is being 
> displayed?

Use "msg = context.arg('login-failed')" in your render method to get the
error message or None.

Note: context.arg is a convenience method for getting parameters from
the request. The above is equivalent to "msg = context.locate
(IRequest).args.get('login-failed',[None])[0]".

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 20:34:44 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 20:34:44 -0400
Subject: [Twisted-Python] twisted and threading
Message-ID: <20040818003444.GA17564@mit.edu>

I wrapped a c library using swig and was hoping to make use of it in
a twisted server I am writing.  The issue is that the c library 
fundamentally blocks waiting for input that may never come.  Is
there a way from twisted to deal with this cleanly within the framework?

I.e. some combination of adding a reactor.addSystemEventTrigger event
and calling reactor.threadpool.stop seem like it should work but
I haven't had any luck yet.

(I saw all the previous posts on this topic, but the recommendations
don't seem applicable in my case since the blocking is occurring outside
my control in a c library and the blocking call may never return.)

Thanks,
Steve Bauer




From radeex at gmail.com  Tue Aug 17 20:49:25 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 20:49:25 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818003444.GA17564@mit.edu>
References: <20040818003444.GA17564@mit.edu>
Message-ID: <60ed19d40408171749dd84c36@mail.gmail.com>

On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
<twisted-10152003 at atlas.lcs.mit.edu> wrote:
> I wrapped a c library using swig and was hoping to make use of it in
> a twisted server I am writing.  The issue is that the c library
> fundamentally blocks waiting for input that may never come.  Is
> there a way from twisted to deal with this cleanly within the framework?
> 
> I.e. some combination of adding a reactor.addSystemEventTrigger event
> and calling reactor.threadpool.stop seem like it should work but
> I haven't had any luck yet.

Geeze, where'd you come up with that stuff? Accessing
reactor.threadpool directly is Really Bad. I hope there's no example
code or documentation that refers to that.

Try twisted.internet.threads.deferToThread(myBlockingCall) --> Deferred.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 22:18:51 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 22:18:51 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <60ed19d40408171749dd84c36@mail.gmail.com>
Message-ID: <20040818021851.GA18404@mit.edu>

Christopher Armstrong [radeex at gmail.com] wrote:
>On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
><twisted-10152003 at atlas.lcs.mit.edu> wrote:
>> I wrapped a c library using swig and was hoping to make use of it in
>> a twisted server I am writing.  The issue is that the c library
>> fundamentally blocks waiting for input that may never come.  Is
>> there a way from twisted to deal with this cleanly within the
>> framework?
>>
>> I.e. some combination of adding a reactor.addSystemEventTrigger event
>> and calling reactor.threadpool.stop seem like it should work but
>> I haven't had any luck yet.
>
>
>Try twisted.internet.threads.deferToThread(myBlockingCall) -->
>Deferred.

Ah, but that doesn't work.  As I stated the c library (not mine) calls
potentially block forever (or at least longer than I want to wait to
shutdown the twisted server).  The thread created by deferTothread may
never complete which makes shutting down the server gracefully
impossible (or so I thought?).

>Geeze, where'd you come up with that stuff? Accessing
>reactor.threadpool directly is Really Bad. I hope there's no example
>code or documentation that refers to that.

:) Ah the hazards of attempting to read documentation and mailing-lists
before posting...

The threadpool and a link to its interface are mentioned on the primary
threading howto.  No mention of "Really Bad" there. 

http://www.twistedmatrix.com/documents/current/howto/threading

And other posts about threading on this mailing list mentioned
looking at twisted.enterprise.adbapi which is where
reactor.addSystemEventTrigger ideas came from.  

Incidentally, I am happy to help update documentation if I can
figure out the right ways to do things. :)

Thanks for your rapid response.

Sincerely,
Steve Bauer





From radeex at gmail.com  Tue Aug 17 22:30:04 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 22:30:04 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818021851.GA18404@mit.edu>
References: <20040818021851.GA18404@mit.edu>
Message-ID: <60ed19d40408171930176d83cf@mail.gmail.com>

On Tue, 17 Aug 2004 22:18:51 -0400, twisted-10152003 at atlas.lcs.mit.edu
<twisted-10152003 at atlas.lcs.mit.edu> wrote:
> Christopher Armstrong [radeex at gmail.com] wrote:
> >On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
> ><twisted-10152003 at atlas.lcs.mit.edu> wrote:
> >> I.e. some combination of adding a reactor.addSystemEventTrigger event
> >> and calling reactor.threadpool.stop seem like it should work but
> >> I haven't had any luck yet.
> >
> >
> >Try twisted.internet.threads.deferToThread(myBlockingCall) -->
> >Deferred.
> 
> Ah, but that doesn't work.  As I stated the c library (not mine) calls
> potentially block forever (or at least longer than I want to wait to
> shutdown the twisted server).  The thread created by deferTothread may
> never complete which makes shutting down the server gracefully
> impossible (or so I thought?).

So you want to be able to murder that thread while you're shutting
down? I don't the solution to that, but I just want to be clear.
Indeed, maybe something involving a shutdown event.. I don't know.

> >Geeze, where'd you come up with that stuff? Accessing
> >reactor.threadpool directly is Really Bad. I hope there's no example
> >code or documentation that refers to that.
> 
> The threadpool and a link to its interface are mentioned on the primary
> threading howto.  No mention of "Really Bad" there.
> 
> http://www.twistedmatrix.com/documents/current/howto/threading

Ahh. That doesn't mention anything about reactor.threadpool, though,
which is the evil thing to touch.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Tue Aug 17 23:18:59 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 23:18:59 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818021851.GA18404@mit.edu>
References: <20040818021851.GA18404@mit.edu>
Message-ID: <4122CAA3.70704@divmod.com>

twisted-10152003 at atlas.lcs.mit.edu wrote:
> Christopher Armstrong [radeex at gmail.com] wrote:
> 
>>On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
>><twisted-10152003 at atlas.lcs.mit.edu> wrote:
>>
>>>I wrapped a c library using swig and was hoping to make use of it in
>>>a twisted server I am writing.  The issue is that the c library
>>>fundamentally blocks waiting for input that may never come.  Is
>>>there a way from twisted to deal with this cleanly within the
>>>framework?
>>>
>>>I.e. some combination of adding a reactor.addSystemEventTrigger event
>>>and calling reactor.threadpool.stop seem like it should work but
>>>I haven't had any luck yet.
>>
>>
>>Try twisted.internet.threads.deferToThread(myBlockingCall) -->
>>Deferred.
> 
> 
> Ah, but that doesn't work.  As I stated the c library (not mine) calls
> potentially block forever (or at least longer than I want to wait to
> shutdown the twisted server).  The thread created by deferTothread may
> never complete which makes shutting down the server gracefully
> impossible (or so I thought?).
> 

   There is no portable way to terminate a thread without its 
assistance.  Python supports no API for this - save one, the 
ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
this, nor call it internally, as it can lead to segfaults.

   Perhaps this should be parameterizable (defaulting to the current 
behavior, of course), so that poorly behaved libraries can be dealt with?

   Alternatively, since daemonized threads might lead to this anyway, 
perhaps you should just add a shutdown event os.kill(os.getpid(), 9) 
<wwinkink>.

   Jp



From exarkun at divmod.com  Tue Aug 17 23:26:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 23:26:22 -0400
Subject: [Twisted-Python] twisted.manhole
In-Reply-To: <20040817200935.GA16922@mit.edu>
References: <20040817200935.GA16922@mit.edu>
Message-ID: <4122CC5E.60206@divmod.com>

twisted-10152003 at atlas.lcs.mit.edu wrote:
> There doesn't seem to be much documentation for twisted.manhole.  Yes,
> I have seen http://www.twistedmatrix.com/documents/current/howto/telnet
> 
> So, I have been playing around with it trying to figure out the proper usage.
> I have some of it figured out.  The following snippet works fine for my
> needs...
> 
> 	from twisted.manhole.telnet import ShellFactory
> 
>     [...]
> 
> 	shell = ShellFactory()
> 	shell.setService(s)  // s here is my own service 
> 	shell.password = "test"
> 	internet.TCPServer(config['telnet_port'],shell).setServiceParent(serviceCollection)
> 
> But I was curious so starting looking at the other parts of it as well.
> 
> Frustratingly, I haven't yet figured out how to employ
> twisted.manhole.ui twisted.manhole.service or twisted.manhole.explorer.
> Can anyone point so some examples or provide a brief overview.

   Check out twisted.tap.manhole.makeService() and bin/manhole.  I don't 
believe twisted.manhole.explorer is directly useful from the outside. 
If it still works (I don't believe it has unit tests, either ;), it 
should work through the Gtk manhole client.

   Jp



From radeex at gmail.com  Wed Aug 18 00:02:03 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 18 Aug 2004 00:02:03 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <4122CAA3.70704@divmod.com>
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <60ed19d4040817210274528fcf@mail.gmail.com>

On Tue, 17 Aug 2004 23:18:59 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> twisted-10152003 at atlas.lcs.mit.edu wrote:
> > Ah, but that doesn't work.  As I stated the c library (not mine) calls
> > potentially block forever (or at least longer than I want to wait to
> > shutdown the twisted server).  The thread created by deferTothread may
> > never complete which makes shutting down the server gracefully
> > impossible (or so I thought?).
> >
> 
>    There is no portable way to terminate a thread without its
> assistance.  Python supports no API for this - save one, the
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose
> this, nor call it internally, as it can lead to segfaults.
> 
>    Perhaps this should be parameterizable (defaulting to the current
> behavior, of course), so that poorly behaved libraries can be dealt with?
> 
>    Alternatively, since daemonized threads might lead to this anyway,
> perhaps you should just add a shutdown event os.kill(os.getpid(), 9)
> <wwinkink>.

Well, since he only wants to murder the thread at shutdown, a regular
"thread killing" API isn't necessary, just a way to have the thread
not block shutting down, by dying. Your os.kill suggestion is along
the lines of what I was thinking of, except maybe there's a less
horrible option :)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From fdrake at acm.org  Wed Aug 18 02:36:48 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Wed, 18 Aug 2004 02:36:48 -0400
Subject: [Twisted-Python] Re: zpkg usage in Twisted
In-Reply-To: <60ed19d404081712106437be10@mail.gmail.com>
References: <4120CAFB.1080608@fettig.net> <2m4qn1c443.fsf@starship.python.net>
	<60ed19d404081712106437be10@mail.gmail.com>
Message-ID: <200408180236.48143.fdrake@acm.org>

On Tuesday 17 August 2004 03:10 pm, Christopher Armstrong wrote:
 > > Uhh, I may be being daft, but I'm not sure Fred's gonna see
 > > it.. AFAICT it only went to the twisted list.

I know it can take me a while to respond; sorry.  But I am still on the 
twisted list and try to be aware of what's going on.  ;-)


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From db3l at fitlinxx.com  Wed Aug 18 18:20:37 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 18 Aug 2004 18:20:37 -0400
Subject: [Twisted-Python] Re: twisted and threading
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <upt5o5bre.fsf@fitlinxx.com>

Jp Calderone <exarkun at divmod.com> writes:

>    There is no portable way to terminate a thread without its
> assistance.  Python supports no API for this - save one, the
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose
> this, nor call it internally, as it can lead to segfaults.

Well, all setDaemon does is prevent the threading module from joining
that thread during a shutdown - so the thread is left alone in peace
to be reclaimed by the operating system rather than by Python itself.

Do you have instances where this has actually provoked a segfault?  If
the thread is executing in Python code, the GIL should prevent it from
actually running during the Python portion of the shutdown, and the OS
will just clean up.  If the thread is truly blocked outside of Python
then nothing Python does will be a problem (unless the external entity
is writing directly to Python structures, but without grabbing the GIL
first which is a buggy extension), and the OS will again clean up.

Anyway, I've definitely used daemon threads before where it was
infeasible to guarantee the ability to signal the thread to shut
itself down before I wanted to exit and at least in my experience I've
never run into a problem.

-- David




From cce at clarkevans.com  Wed Aug 18 22:48:24 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 18 Aug 2004 22:48:24 -0400
Subject: [Twisted-Python] catching adbapi 'thread' failures
Message-ID: <20040819024823.GA30092@prometheusresearch.com>

Howdy.  I'm stumped.  I thought I knew how failures work, but I
can't seem to stop a traceback from appearing with the following:

    from twisted.internet import reactor
    from twisted.python.util import println
    from twisted.enterprise import adbapi 
    dbpool = adbapi.ConnectionPool('pyPgSQL.PgSQL', database='testing')
    def interaction(trans):
        trans.execute('sqlerror')
        return trans.fetchall()[0][0] 
    def catch(failure):
        return "***" + failure.getErrorMessage().strip() + "***"
    def use_pool():
        d = dbpool.runInteraction(interaction)
        d.addErrback(catch)
        d.addCallback(println)
        d.addCallback(lambda _: reactor.stop())
    reactor.callLater(0, use_pool)
    reactor.run() 

Any help would be wonderful,

Clark

-- 
Clark C. Evans                      Prometheus Research, LLC.
                                    http://www.prometheusresearch.com/
    o                               office: +1.203.777.2550 
  ~/ ,                              mobile: +1.203.444.0557 
 //
((   Prometheus Research: Turning Data Into Knowledge
 \\  ,
   \/    - Research Exchange Database
   /\    - Survey & Assessment Technologies
   ` \   - Software Tools for Researchers
    ~ *



From dave at krondo.com  Thu Aug 19 00:52:01 2004
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 18 Aug 2004 21:52:01 -0700
Subject: [Twisted-Python] catching adbapi 'thread' failures
In-Reply-To: <20040819024823.GA30092@prometheusresearch.com>
References: <20040819024823.GA30092@prometheusresearch.com>
Message-ID: <1092891121.6593.34.camel@oneiros>

adbapi used to log failures before throwing them back.
This may be what you are seeing.

dave

On Wed, 2004-08-18 at 19:48, Clark C. Evans wrote:
> Howdy.  I'm stumped.  I thought I knew how failures work, but I
> can't seem to stop a traceback from appearing with the following:
> 
>     from twisted.internet import reactor
>     from twisted.python.util import println
>     from twisted.enterprise import adbapi 
>     dbpool = adbapi.ConnectionPool('pyPgSQL.PgSQL', database='testing')
>     def interaction(trans):
>         trans.execute('sqlerror')
>         return trans.fetchall()[0][0] 
>     def catch(failure):
>         return "***" + failure.getErrorMessage().strip() + "***"
>     def use_pool():
>         d = dbpool.runInteraction(interaction)
>         d.addErrback(catch)
>         d.addCallback(println)
>         d.addCallback(lambda _: reactor.stop())
>     reactor.callLater(0, use_pool)
>     reactor.run() 
> 
> Any help would be wonderful,
> 
> Clark




From screwtape at froup.com  Thu Aug 19 02:48:10 2004
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 19 Aug 2004 16:48:10 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
Message-ID: <20040819064810.GA2522@ferd2.thristian.org>

A colleague of mine was working with a server written in Twisted
today, and he ran into a problem involving Twisted. He called me over
(since I'm supposed to be the Python Guru here, which just means I'm
slightly less ignorant than everybody else :) and we tracked the
behaviour in question all the way down to twisted.internet.tcp.

The situation is this: we have an upstream data provider who sends us
data intermittently, all day. We have downstream clients on less
reliable connections who want to recieve it. We have a sort of caching
proxy in the middle that keeps track of all the data sent so far
today, and every time a client connects we send them the total record
of the day's events, and then send them new updates as they arrive.

The problem occurred one day when we had a higher-than-usual amount of
data incoming. The symptom was that any client attempting to connect
would be immediately disconnected for No Obvious Reason. After some
ferretting about through the codebase, we discovered that the
'writeSomeData' method of twisted.internet.tcp.Connection was getting
an error it couldn't handle and dropping the connection.

The swift insertion of a debugging printf showed that the error
generated was ENOBUFS (Well, WSAENOBUFS, since it was running on
Windows 2000), which made the Connection drop the, uh, connection
immediately.

Now, it occurs to me that ENOBUFS does not necessarily mean that the
connection is irretrievably lost, it should be treated more like
EWOULDBLOCK, except that buffers over a certain size will never, ever
fit. I don't know whether special handling of ENOBUFS should happen in
Twisted (to match its already-existing special handling of
EWOULDBLOCK), or whether it should happen in the application (proper
buffer-size autodetection might be a little intricate for a class like
Connection that's supposed to be simple). But either way, just
dropping the connection immediately is probably a Bad Thing.

(for the record, the buffer we were trying to send was about 5MB, but
I assume people trying to send, say CD or DVD disk images via
twisted.web may well run into similar issues)

Is there some clever way to get around this with the current version
of Twisted? If I were to write a patch, how should I best attack the
problem? Are there any other questions I should be asking? :)

-- 
 ___________ ___________________________________
| Screwtape | http://livejournal.com/~thristian |______ _____ ___ __ _  _   _
|
| "It's a giant beetle! Of course it doesn't have a kitchen!" -- T&R, 2002-07-07
|



From tv at twistedmatrix.com  Thu Aug 19 02:56:00 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 19 Aug 2004 09:56:00 +0300
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120CAFB.1080608@fettig.net>
References: <4120CAFB.1080608@fettig.net>
Message-ID: <41244F00.8070608@twistedmatrix.com>

Abe Fettig wrote:
> It's come to my attention that my current Hep package for windows 
> (packaged using bdist_win32) doesn't put the plugins.tml file where it 
> should be (under site-packages/hep).  In googling around for a solution, 
> I came across this post:

I've done this:

     data_files=[(os.path.join(sysconfig.get_python_lib(),
                               'BuffaloBill'),
                 ["BuffaloBill/plugins.tml"])],



From mak at trisoft.com.pl  Thu Aug 19 03:31:31 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 09:31:31 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <41245753.6010008@trisoft.com.pl>

screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
> 

This is not a bug

select says "yes there is room inm the socket buffer"
however datagram protocols do not store anythign in the outgoing socket
buffer, but, instead hand the packets directly to the driver for the
NIC.

when the NIC fils up it returns ENOBUFS

use sleep(0.01) between calls to socket.send

mak



From andrew-twisted at puzzling.org  Thu Aug 19 05:10:07 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 10:10:07 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41245753.6010008@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl>
Message-ID: <20040819091007.GD23028@frobozz>

On Thu, Aug 19, 2004 at 09:31:31AM +0200, Grzegorz Makarewicz wrote:
> screwtape at froup.com wrote:
> >A colleague of mine was working with a server written in Twisted
> >today, and he ran into a problem involving Twisted. He called me over
> >(since I'm supposed to be the Python Guru here, which just means I'm
> >slightly less ignorant than everybody else :) and we tracked the
> >behaviour in question all the way down to twisted.internet.tcp.
> >
> 
> This is not a bug
> 
> select says "yes there is room inm the socket buffer"
> however datagram protocols do not store anythign in the outgoing socket
> buffer, but, instead hand the packets directly to the driver for the
> NIC.
> 
> when the NIC fils up it returns ENOBUFS
> 
> use sleep(0.01) between calls to socket.send

Using sleep in Twisted would be a bad idea -- if you have other sockets on
other network cards, you should just work on servicing them rather than
stopping everything.  It's possible there's other work to do other than
socket operations, too, e.g. servicing any pendingTimedCalls (created by
reactor.callLater).  In short, time.sleep should not be used in the Twisted
main thread, let alone the reactor itself.

If the only sane way to deal with this is to wait 100ms and try again, then
I'd try this:

    [ ... caught ENOBUFS ... ]
    reactor.removeReader(sock)
    reactor.callLater(0.1, reactor.addReader, sock)

This might interact badly with other systems that try to add/remove that
reader (consumers/producers maybe?), but is probably good enough for
screwtape's particular case.

I wonder if the win32reactor or iocpreactor get more useful information than
select and so can handle this better?
    
-Andrew.




From mak at trisoft.com.pl  Thu Aug 19 06:06:35 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 12:06:35 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819091007.GD23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz>
Message-ID: <41247BAB.5020107@trisoft.com.pl>

Andrew Bennetts wrote:
> On Thu, Aug 19, 2004 at 09:31:31AM +0200, Grzegorz Makarewicz wrote:
> 
>>screwtape at froup.com wrote:
>>
>>>A colleague of mine was working with a server written in Twisted
>>>today, and he ran into a problem involving Twisted. He called me over
>>>(since I'm supposed to be the Python Guru here, which just means I'm
>>>slightly less ignorant than everybody else :) and we tracked the
>>>behaviour in question all the way down to twisted.internet.tcp.
>>>
>>
>>This is not a bug
>>
>>select says "yes there is room inm the socket buffer"
>>however datagram protocols do not store anythign in the outgoing socket
>>buffer, but, instead hand the packets directly to the driver for the
>>NIC.
>>
>>when the NIC fils up it returns ENOBUFS
>>
>>use sleep(0.01) between calls to socket.send
> 
> 
> Using sleep in Twisted would be a bad idea -- if you have other sockets on
> other network cards, you should just work on servicing them rather than
> stopping everything.  It's possible there's other work to do other than
> socket operations, too, e.g. servicing any pendingTimedCalls (created by
> reactor.callLater).  In short, time.sleep should not be used in the Twisted
> main thread, let alone the reactor itself.
> 

On msw sleep(small number) has nice side effect - constext switch, on 
other systems perhaps too.

If I have tight loop with call to socket.send with large buffer (eg > 
2MB) and no other python-threads /no thread switch inside ceval loop/ 
then this error can be thrown after few calls.

> If the only sane way to deal with this is to wait 100ms and try again, then
1ms - can be sufficient to but I'm not sure.

In my opionion much safer is divide large block - 64 KB chunk works for 
me without performance degradation and without any socket errors.

mak



From radeex at gmail.com  Thu Aug 19 06:33:04 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 19 Aug 2004 06:33:04 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41247BAB.5020107@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz> <41247BAB.5020107@trisoft.com.pl>
Message-ID: <60ed19d40408190333adcb7c5@mail.gmail.com>

Yo,

On Thu, 19 Aug 2004 12:06:35 +0200, Grzegorz Makarewicz
<mak at trisoft.com.pl> wrote:
> On msw sleep(small number) has nice side effect - constext switch, on
> other systems perhaps too.

select() does a context switch as well.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From jon at totient.demon.co.uk  Thu Aug 19 06:50:36 2004
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 19 Aug 2004 11:50:36 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <200408191150.36823.jon@totient.demon.co.uk>

This problem looks similar to this that some CORBA folk are seeing with 
Windows and large requests
http://www.omniorb-support.com/pipermail/omniorb-list/2004-August/025775.html

There are some links and suggested fixes in there, I'm not sure how relevant, 
but I thought it worth posting.


Jon


On Thursday 19 August 2004 07:48, screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
>
> The situation is this: we have an upstream data provider who sends us
> data intermittently, all day. We have downstream clients on less
> reliable connections who want to recieve it. We have a sort of caching
> proxy in the middle that keeps track of all the data sent so far
> today, and every time a client connects we send them the total record
> of the day's events, and then send them new updates as they arrive.
>
> The problem occurred one day when we had a higher-than-usual amount of
> data incoming. The symptom was that any client attempting to connect
> would be immediately disconnected for No Obvious Reason. After some
> ferretting about through the codebase, we discovered that the
> 'writeSomeData' method of twisted.internet.tcp.Connection was getting
> an error it couldn't handle and dropping the connection.
>
> The swift insertion of a debugging printf showed that the error
> generated was ENOBUFS (Well, WSAENOBUFS, since it was running on
> Windows 2000), which made the Connection drop the, uh, connection
> immediately.
>
> Now, it occurs to me that ENOBUFS does not necessarily mean that the
> connection is irretrievably lost, it should be treated more like
> EWOULDBLOCK, except that buffers over a certain size will never, ever
> fit. I don't know whether special handling of ENOBUFS should happen in
> Twisted (to match its already-existing special handling of
> EWOULDBLOCK), or whether it should happen in the application (proper
> buffer-size autodetection might be a little intricate for a class like
> Connection that's supposed to be simple). But either way, just
> dropping the connection immediately is probably a Bad Thing.
>
> (for the record, the buffer we were trying to send was about 5MB, but
> I assume people trying to send, say CD or DVD disk images via
> twisted.web may well run into similar issues)
>
> Is there some clever way to get around this with the current version
> of Twisted? If I were to write a patch, how should I best attack the
> problem? Are there any other questions I should be asking? :)




From mak at trisoft.com.pl  Thu Aug 19 07:05:59 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 13:05:59 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <60ed19d40408190333adcb7c5@mail.gmail.com>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>	<20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
Message-ID: <41248997.6070406@trisoft.com.pl>

Christopher Armstrong wrote:
> Yo,
> 
> On Thu, 19 Aug 2004 12:06:35 +0200, Grzegorz Makarewicz
> <mak at trisoft.com.pl> wrote:
> 
>>On msw sleep(small number) has nice side effect - constext switch, on
>>other systems perhaps too.
> 
> 
> select() does a context switch as well.
> 

but not on msw

tlsgetvalue
wahreferencecontextbyhandle
call into kernel code
interlocakdecrement

[squid-users] Squid dies on Windows NT server after fetching10-15 urls
[omniORB] Problem with large requests (WinNT)

http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
When large blocks of data (for example, 3-4 MB) are sent over a blocking 
socket, send eventually fails with error 10055, WSAENOBUFS.

mak



From abe at fettig.net  Thu Aug 19 07:50:53 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 19 Aug 2004 07:50:53 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <41244F00.8070608@twistedmatrix.com>
References: <4120CAFB.1080608@fettig.net> <41244F00.8070608@twistedmatrix.com>
Message-ID: <4124941D.1060201@fettig.net>

That's exactly what I was doing, actually.  The problem is that when you 
do a bdist_win32, the call to sysconfig.get_python_lib() happens on the 
machine you're compiling the package on (which may not even be running 
windows!), not the machine the user will be installing the package on.

So you might end up installing your data files in 
c:\usr\lib\python2.3\site-packages\BuffaloBill. :-)

Abe

Tommi Virtanen wrote:

> 
> I've done this:
> 
>     data_files=[(os.path.join(sysconfig.get_python_lib(),
>                               'BuffaloBill'),
>                 ["BuffaloBill/plugins.tml"])],
 >



From screwtape at froup.com  Thu Aug 19 07:58:59 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 21:58:59 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41245753.6010008@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl>
Message-ID: <27DB6FF0-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 17:31, Grzegorz Makarewicz wrote:
> screwtape at froup.com wrote:
>> A colleague of mine was working with a server written in Twisted
>> today, and he ran into a problem involving Twisted. He called me over
>> (since I'm supposed to be the Python Guru here, which just means I'm
>> slightly less ignorant than everybody else :) and we tracked the
>> behaviour in question all the way down to twisted.internet.tcp.
>
> This is not a bug
>
> select says "yes there is room inm the socket buffer"
> however datagram protocols do not store anythign in the outgoing socket
> buffer, but, instead hand the packets directly to the driver for the
> NIC.

Surely TCP is not a datagram protocol.

Screwtape,
...puzzled.




From screwtape at froup.com  Thu Aug 19 08:01:59 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 22:01:59 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819091007.GD23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
Message-ID: <931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 19:10, Andrew Bennetts wrote:
>> screwtape at froup.com wrote:
>>> A colleague of mine was working with a server written in Twisted
>>> today, and he ran into a problem involving Twisted. He called me over
>>> (since I'm supposed to be the Python Guru here, which just means I'm
>>> slightly less ignorant than everybody else :) and we tracked the
>>> behaviour in question all the way down to twisted.internet.tcp.
> I wonder if the win32reactor or iocpreactor get more useful 
> information than
> select and so can handle this better?

It's not so much that the default select reactor makes information 
unavailable.. as far as I can tell, the Python socket object is 
correctly raising ENOBUFS, and t.i.tcp.Connection is very deliberately 
throwing that information away rather than handling properly.




From andrew-twisted at puzzling.org  Thu Aug 19 08:02:14 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 13:02:14 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41248997.6070406@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
	<41248997.6070406@trisoft.com.pl>
Message-ID: <20040819120214.GH23028@frobozz>

On Thu, Aug 19, 2004 at 01:05:59PM +0200, Grzegorz Makarewicz wrote:
[...]
> 
> http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
> When large blocks of data (for example, 3-4 MB) are sent over a blocking 
> socket, send eventually fails with error 10055, WSAENOBUFS.

This page would seem to be irrelevant, as Twisted does not use blocking
sockets.

-Andrew.




From screwtape at froup.com  Thu Aug 19 08:03:43 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 22:03:43 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41248997.6070406@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>	<20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
	<41248997.6070406@trisoft.com.pl>
Message-ID: <D0E3FEDD-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 21:05, Grzegorz Makarewicz wrote:
> http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
> When large blocks of data (for example, 3-4 MB) are sent over a 
> blocking socket, send eventually fails with error 10055, WSAENOBUFS.

Hmm.. I was under the impression that Twisted used non-blocking sockets.




From andrew-twisted at puzzling.org  Thu Aug 19 09:02:02 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 14:02:02 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
Message-ID: <20040819130202.GI23028@frobozz>

On Thu, Aug 19, 2004 at 10:01:59PM +1000, Tim Allen wrote:
> On 19 Aug 2004, at 19:10, Andrew Bennetts wrote:
> >>screwtape at froup.com wrote:
> >>>A colleague of mine was working with a server written in Twisted
> >>>today, and he ran into a problem involving Twisted. He called me over
> >>>(since I'm supposed to be the Python Guru here, which just means I'm
> >>>slightly less ignorant than everybody else :) and we tracked the
> >>>behaviour in question all the way down to twisted.internet.tcp.
> >I wonder if the win32reactor or iocpreactor get more useful 
> >information than
> >select and so can handle this better?
> 
> It's not so much that the default select reactor makes information 
> unavailable.. as far as I can tell, the Python socket object is 
> correctly raising ENOBUFS, and t.i.tcp.Connection is very deliberately 
> throwing that information away rather than handling properly.

Well, the problem is that currently the select reactor assumes that if
select says a socket is writeable, then it is writeable, i.e it is safe to
attempt to write any amount of data to it (with the understanding that being
non-blocking it might only be able to accept some of that data immediately).
Apparently this assumption is not quite accurate.

So far in this thread I've seen two theories about what the exact problem
is, and I think the correct fix depends on which is actually the cause.

Theory 1: Writing large (i.e. 5MB) chunks to sockets in a single send call
will always fail, and should.  The fix for this would be to make sure that
no more than 64kB (or whatever) is passed to send at a time, regardless of
what is passed to transport.write.

Theory 2: Writing lots and lots of data very fast can cause the network
hardware's/device driver's internal buffers to fill up, thus making it
impossible to write even though select claims it is.  If this is the case,
the socket needs to be ignored for a moment to give those buffers a chance
to flush.

A test case proving which is actually the case would be most welcome :)

-Andrew.




From andrew-twisted at puzzling.org  Thu Aug 19 09:07:38 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 14:07:38 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <20040819130738.GJ23028@frobozz>

Just a moment ago, I wrote:
[...]
> Theory 1: Writing large (i.e. 5MB) chunks to sockets in a single send call
> will always fail, and should.  The fix for this would be to make sure that
                  ^^^^^^^^^^^^
                  Ignore those two words, they're a left over from hasty
                  editing :)

-Andrew.




From cce at clarkevans.com  Thu Aug 19 09:20:42 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 19 Aug 2004 09:20:42 -0400
Subject: [Twisted-Python] catching adbapi 'thread' failures
In-Reply-To: <1092891121.6593.34.camel@oneiros>
References: <20040819024823.GA30092@prometheusresearch.com>
	<1092891121.6593.34.camel@oneiros>
Message-ID: <20040819132042.GA98805@prometheusresearch.com>

Ahh, right "log.deferr()".  Glad to see this is taken out, lots of
'SQL' errors which are not application errors.  Thanks.

Clark

On Wed, Aug 18, 2004 at 09:52:01PM -0700, Dave Peticolas wrote:
| adbapi used to log failures before throwing them back.
| This may be what you are seeing.
| 
| dave



From mailinglist at ltsai.com  Thu Aug 19 10:08:29 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Thu, 19 Aug 2004 22:08:29 +0800
Subject: [Twisted-Python] Re: catching adbapi 'thread' failures
In-Reply-To: <20040819132042.GA98805@prometheusresearch.com>
References: <20040819024823.GA30092@prometheusresearch.com>	<1092891121.6593.34.camel@oneiros>
	<20040819132042.GA98805@prometheusresearch.com>
Message-ID: <cg2c9n$6on$1@sea.gmane.org>

Clark C. Evans wrote:
> Ahh, right "log.deferr()".  Glad to see this is taken out, lots of
> 'SQL' errors which are not application errors.  Thanks.
> 
> Clark
> 
> On Wed, Aug 18, 2004 at 09:52:01PM -0700, Dave Peticolas wrote:
> | adbapi used to log failures before throwing them back.
> | This may be what you are seeing.
> | 
> | dave

Hi Clark,

What do you mean by taken out? I'm still seeing it in adapi.py:
def _runInteraction(self, interaction, *args, **kw):
	trans = Transaction(self, self.connect())
	try:
		result = interaction(trans, *args, **kw)
		trans.close()
		trans._connection.commit()
		return result
	except:
		log.msg('Exception in SQL interaction. Rolling back.')
		log.deferr()
		trans._connection.rollback()
		raise

I'm using twisted 1.3.0

Liming




From itamar at itamarst.org  Thu Aug 19 10:11:22 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Aug 2004 10:11:22 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <1092924682.29325.0.camel@sheriffpony>

On Thu, 2004-08-19 at 09:02, Andrew Bennetts wrote:

> A test case proving which is actually the case would be most welcome :)

Indeed - this would allow us to fix the bug for the next release.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From cce at clarkevans.com  Thu Aug 19 10:36:15 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 19 Aug 2004 10:36:15 -0400
Subject: [Twisted-Python] Re: catching adbapi 'thread' failures
In-Reply-To: <cg2c9n$6on$1@sea.gmane.org>
References: <20040819024823.GA30092@prometheusresearch.com>
	<1092891121.6593.34.camel@oneiros>
	<20040819132042.GA98805@prometheusresearch.com>
	<cg2c9n$6on$1@sea.gmane.org>
Message-ID: <20040819143615.GB37574@prometheusresearch.com>

On Thu, Aug 19, 2004 at 10:08:29PM +0800, Tsai Li Ming wrote:
| What do you mean by taken out?

The log lines are gone in the subversion repository.

Clark



From tv at twistedmatrix.com  Fri Aug 20 03:30:21 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 20 Aug 2004 10:30:21 +0300
Subject: select(2) is just a hint (Was: Re: [Twisted-Python] ENOBUF and
	Twisted)
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz>	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <4125A88D.5000909@twistedmatrix.com>

Andrew Bennetts wrote:
> Well, the problem is that currently the select reactor assumes that if
> select says a socket is writeable, then it is writeable, i.e it is safe to
> attempt to write any amount of data to it (with the understanding that being
> non-blocking it might only be able to accept some of that data immediately).
> Apparently this assumption is not quite accurate.

That's not a safe assumption under UNIX. select(2) is just a hint; writing
to the socket may still give you EAGAIN, even if select(2) said it's writable.
And the same goes for reading, too.

For the reason why this must be allowed, think about a non-blocking fd shared
between two processes:

	Process 1			Process 2
	select() says fd 4 writable
					select() says fd 4 writable
	write(4, ...) success
					write(4, ...) = -1, EAGAIN

But this isn't the only case when select is unable to predict the future;
as soon as your code _must_ support the above case in order to work, the
kernel can use that feature of the API to make some socket bookkeeping
things easier.



From michele.petrazzo at unipex.it  Fri Aug 20 05:07:20 2004
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Fri, 20 Aug 2004 11:07:20 +0200
Subject: [Twisted-Python] deferToThread question
Message-ID: <4125BF48.9000301@unipex.it>

I want to call a block function. I use deferToThread to call it, so 
something like this:

def block_func():
  os.popen3(my_soft) #my_soft is a blocking software
  print 1/0 # Simulate an error

If I use normal (not defer) call, so: block_func(), the exception is 
raised after my_soft is closed.

I i call block_func with defer, so:

def block_func_err(err):
  print err

t = threads.deferToThread(block_func)
t.addErrback(block_func_err)

the error is raised before my_soft is closed.

Why? Is it right?

S.O. win2k and mdk10, both with py 2.3.4, twisted 1.3.0, wxpy 2.4.2 and 
user of wxsupport, not wxreactor.

Thanks,
Michele Petrazzo



From andrew-twisted at puzzling.org  Fri Aug 20 05:25:46 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Aug 2004 10:25:46 +0100
Subject: select(2) is just a hint (Was: Re: [Twisted-Python] ENOBUF and
	Twisted)
In-Reply-To: <4125A88D.5000909@twistedmatrix.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
	<4125A88D.5000909@twistedmatrix.com>
Message-ID: <20040820092546.GN23028@frobozz>

On Fri, Aug 20, 2004 at 10:30:21AM +0300, Tommi Virtanen wrote:
> Andrew Bennetts wrote:
> >Well, the problem is that currently the select reactor assumes that if
> >select says a socket is writeable, then it is writeable, i.e it is safe
> >to attempt to write any amount of data to it (with the understanding that
> >being non-blocking it might only be able to accept some of that data
> >immediately).  Apparently this assumption is not quite accurate.
> 
> That's not a safe assumption under UNIX. select(2) is just a hint; writing
[...]
> 
> 	Process 1			Process 2
> 	select() says fd 4 writable
> 					select() says fd 4 writable
> 	write(4, ...) success
> 					write(4, ...) = -1, EAGAIN

In this case, at least, I believe the Twisted select reactor still does the
right thing, because accepting no data is just an extreme case of accepting
only some data ;)

-Andrew.




From matt at pollenation.net  Fri Aug 20 05:32:56 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 20 Aug 2004 10:32:56 +0100
Subject: [Twisted-Python] deferToThread question
In-Reply-To: <4125BF48.9000301@unipex.it>
References: <4125BF48.9000301@unipex.it>
Message-ID: <1092994375.8045.2.camel@harold>

On Fri, 2004-08-20 at 10:07, Michele Petrazzo wrote:
> I want to call a block function. I use deferToThread to call it, so 
> something like this:
> 
> def block_func():
>   os.popen3(my_soft) #my_soft is a blocking software
>   print 1/0 # Simulate an error

I can't answer your threading question but Twisted supports async
process execution so you probably don't actually need a thread. See the
HOWTO, http://twistedmatrix.com/documents/current/howto/process, for
more.

> 
> If I use normal (not defer) call, so: block_func(), the exception is 
> raised after my_soft is closed.
> 
> I i call block_func with defer, so:
> 
> def block_func_err(err):
>   print err
> 
> t = threads.deferToThread(block_func)
> t.addErrback(block_func_err)
> 
> the error is raised before my_soft is closed.
> 
> Why? Is it right?
> 
> S.O. win2k and mdk10, both with py 2.3.4, twisted 1.3.0, wxpy 2.4.2 and 
> user of wxsupport, not wxreactor.
> 
> Thanks,
> Michele Petrazzo

-- 
Matt Goodall <matt at pollenation.net>




From db3l at fitlinxx.com  Fri Aug 20 11:47:31 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 20 Aug 2004 11:47:31 -0400
Subject: [Twisted-Python] Re: select(2) is just a hint (Was: Re: ENOBUF
	and	Twisted)
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
	<4125A88D.5000909@twistedmatrix.com>
	<20040820092546.GN23028@frobozz>
Message-ID: <uu0ux24mk.fsf@fitlinxx.com>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> On Fri, Aug 20, 2004 at 10:30:21AM +0300, Tommi Virtanen wrote:
(...)
> > That's not a safe assumption under UNIX. select(2) is just a hint; writing
> [...]
> > 
> > 	Process 1			Process 2
> > 	select() says fd 4 writable
> > 					select() says fd 4 writable
> > 	write(4, ...) success
> > 					write(4, ...) = -1, EAGAIN
> 
> In this case, at least, I believe the Twisted select reactor still does the
> right thing, because accepting no data is just an extreme case of accepting
> only some data ;)

Which probably gets to the root of the question as to whether or not
the ENOBUFS should be considered as transient a problem as EAGAIN
under Windows (and your prior two points).  Prior to having a
reproduceable test case, I would tend to imagine that the ENOBUFS
would cause a subsequent select to fail to indicate readiness to write,
so treading it like EAGAIN would be a reasonable approach.

-- David




From exarkun at divmod.com  Sat Aug 21 03:50:39 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 21 Aug 2004 03:50:39 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <4126FECF.4090205@divmod.com>

screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
> 
> The situation is this: we have an upstream data provider who sends us
> data intermittently, all day. We have downstream clients on less
> reliable connections who want to recieve it. We have a sort of caching
> proxy in the middle that keeps track of all the data sent so far
> today, and every time a client connects we send them the total record
> of the day's events, and then send them new updates as they arrive.
> 
> The problem occurred one day when we had a higher-than-usual amount of
> data incoming. The symptom was that any client attempting to connect
> would be immediately disconnected for No Obvious Reason. After some
> ferretting about through the codebase, we discovered that the
> 'writeSomeData' method of twisted.internet.tcp.Connection was getting
> an error it couldn't handle and dropping the connection.

   How many clients are we talking about?  A bit of investigation leads 
me to believe this can be caused by reaching the maximum number of open 
sockets.  Having unreliable connections can exacerbate this, since 
TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 seems to 
leave sockets in this state for 4 minutes).

   Twisted should still probably handle it, but if this is the true 
cause, it should be handled in a fashion similar to errors from 
accept(), possibly (a better understanding of the problem is probably 
still required).

   Jp



From foom at fuhm.net  Sat Aug 21 15:56:11 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 21 Aug 2004 15:56:11 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <4126FECF.4090205@divmod.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
Message-ID: <26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>


On Aug 21, 2004, at 3:50 AM, Jp Calderone wrote:
>  How many clients are we talking about?  A bit of investigation leads 
> me to believe this can be caused by reaching the maximum number of 
> open sockets.  Having unreliable connections can exacerbate this, 
> since TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 
> seems to leave sockets in this state for 4 minutes).
>
>   Twisted should still probably handle it, but if this is the true 
> cause, it should be handled in a fashion similar to errors from 
> accept(), possibly (a better understanding of the problem is probably 
> still required).

I don't think that's the case, or rather, it is the case for accept() 
but not write().

 From my understanding, ENOBUF on send() could come about because there 
is a limit on the amount of kernel buffer space a process is allowed to 
consume and a previous send() call consumed it all, after select() said 
there was space remaining. Thus, there was no space for this write to 
proceed, and the kernel returned that error. I believe it should be 
treated as a transient error, and the send retried later. So, it should 
go in the same case as EWOULDBLOCK.

However, from the original description, it sounds like perhaps there 
may be some byte limit over which you cannot even attempt to write. 
This makes some amount of sense -- the kernel doesn't want to have to 
copy a gigantic buffer into kernel space just to discard most of it. 
So, how about: self.socket.send(buffer(data, 0, 65535)). I'm not sure 
if that's necessary or not.

Apparently accept() can also return ENOBUFS, for the same kinds of 
reasons, and should also be treated as a transient error. I suspect 
EMFILE and ENFILE should also be handled the same way. But that's a 
separate issue.

Screwtape (I guess that's probably not your real name, but you don't 
seem to have given a real name),
Can you try this patch and see if it fixes the problem? It assumes 
you'll always be able to send a 64K buffer *eventually*, which I hope 
is the case. If you could also try it with just the "or se.args[0] == 
ENOBUFS", and not the buffer(.., 0, 65535), that'd also be appreciated.


James

Index: twisted/internet/tcp.py
===================================================================
--- twisted/internet/tcp.py     (revision 11325)
+++ twisted/internet/tcp.py     (working copy)
@@ -58,6 +58,7 @@
      EISCONN     = 10056
      ENOTCONN    = 10057
      EINTR       = 10004
+    from errno import WSAENOBUFS as ENOBUFS
  elif os.name != 'java':
      from errno import EPERM
      from errno import EINVAL
@@ -68,6 +69,7 @@
      from errno import EISCONN
      from errno import ENOTCONN
      from errno import EINTR
+    from errno import ENOBUFS
  from errno import EAGAIN

  # Twisted Imports
@@ -262,11 +264,11 @@
          (which is negative)
          """
          try:
-            return self.socket.send(data)
+            return self.socket.send(buffer(data, 0, 65535))
          except socket.error, se:
              if se.args[0] == EINTR:
                  return self.writeSomeData(data)
-            elif se.args[0] == EWOULDBLOCK:
+            elif se.args[0] == EWOULDBLOCK or se.args[0] == ENOBUFS:
                  return 0
              else:
                  return main.CONNECTION_LOST




From exarkun at divmod.com  Sat Aug 21 17:59:12 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 21 Aug 2004 17:59:12 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
References: <20040819064810.GA2522@ferd2.thristian.org>	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <4127C5B0.6010409@divmod.com>

James Y Knight wrote:
> 
> On Aug 21, 2004, at 3:50 AM, Jp Calderone wrote:
> 
>>  How many clients are we talking about?  A bit of investigation leads 
>> me to believe this can be caused by reaching the maximum number of 
>> open sockets.  Having unreliable connections can exacerbate this, 
>> since TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 
>> seems to leave sockets in this state for 4 minutes).
>>
>>   Twisted should still probably handle it, but if this is the true 
>> cause, it should be handled in a fashion similar to errors from 
>> accept(), possibly (a better understanding of the problem is probably 
>> still required).
> 
> 
> I don't think that's the case, or rather, it is the case for accept() 
> but not write().
> 

   Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
the only documented behavior I can find for WSAENOBUFS.  And it is 
_Windows_, so it needn't make sense.  I just wanted to point out this 
possibility, since it seemed no one had considered it yet.

> 
> Screwtape (I guess that's probably not your real name, but you don't 
> seem to have given a real name),
> Can you try this patch and see if it fixes the problem? It assumes 
> you'll always be able to send a 64K buffer *eventually*, which I hope is 
> the case. If you could also try it with just the "or se.args[0] == 
> ENOBUFS", and not the buffer(.., 0, 65535), that'd also be appreciated.
> 
> 
> James
> 
> Index: twisted/internet/tcp.py
> ===================================================================
> --- twisted/internet/tcp.py     (revision 11325)
> +++ twisted/internet/tcp.py     (working copy)
> @@ -58,6 +58,7 @@
>      EISCONN     = 10056
>      ENOTCONN    = 10057
>      EINTR       = 10004
> +    from errno import WSAENOBUFS as ENOBUFS
>  elif os.name != 'java':
>      from errno import EPERM
>      from errno import EINVAL
> @@ -68,6 +69,7 @@
>      from errno import EISCONN
>      from errno import ENOTCONN
>      from errno import EINTR
> +    from errno import ENOBUFS
>  from errno import EAGAIN
> 
>  # Twisted Imports
> @@ -262,11 +264,11 @@
>          (which is negative)
>          """
>          try:
> -            return self.socket.send(data)
> +            return self.socket.send(buffer(data, 0, 65535))
>          except socket.error, se:
>              if se.args[0] == EINTR:
>                  return self.writeSomeData(data)
> -            elif se.args[0] == EWOULDBLOCK:
> +            elif se.args[0] == EWOULDBLOCK or se.args[0] == ENOBUFS:
>                  return 0
>              else:
>                  return main.CONNECTION_LOST
> 

   I'm not sure I like this :/  How about attempting a length-limited 
write only on ENOBUFS (assuming we can confirm the meaning of 
WSAENOBUFS)?  It'd be nice to leave the common code path alone, as it is 
a pretty darn common code path.

   Jp



From glyph at divmod.com  Sat Aug 21 18:34:28 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 21 Aug 2004 18:34:28 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <4127C5B0.6010409@divmod.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com>
Message-ID: <1093127668.16560.7.camel@localhost>

On Sat, 2004-08-21 at 17:59 -0400, Jp Calderone wrote:

>    Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
> the only documented behavior I can find for WSAENOBUFS.  And it is 
> _Windows_, so it needn't make sense.  I just wanted to point out this 
> possibility, since it seemed no one had considered it yet.

Based on both general UNIX community lore and various empirical
observations of my own, Windows uses the FreeBSD TCP stack, so if often
makes more sense than one would immediately think.

Given there is a manpage on my system which documents the behavior, but
says "Normally, this  does  not occur  in Linux.", are there any BSD
people out there who have a vintage that is contemporary with win2k who
can somehow reproduce this behavior?




From serj_trejo at hotmail.com  Sun Aug 22 10:51:12 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 22 Aug 2004 10:51:12 -0400
Subject: [Twisted-Python] Diagraming Twisted apps
Message-ID: <BAY12-F2jehzJ2hjUC000065a9b@hotmail.com>

I have truly enjoyed working with the Twisted Framework in recent weeks and 
have delved into Nevow, Atop, PB, and Twisted.web. I am creating an 
application with all of these components and am finding that my application 
is growing and becoming a bit complex.

In order to keep track of the complexity of asynchronicity (deferreds, 
etc.), I am wondering what, if any, diagramming tools twisted developers use 
for designing visual schematics to accompany their projects? Are there any 
such programs that can parse code based on twisted which automatically 
generates visual representations of flows and logic?

Has anyone tried using Dia?

Serg

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From foom at fuhm.net  Sun Aug 22 11:14:56 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 22 Aug 2004 11:14:56 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <1093127668.16560.7.camel@localhost>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
Message-ID: <06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>

On Aug 21, 2004, at 5:59 PM, Jp Calderone wrote:

>   I'm not sure I like this :/  How about attempting a length-limited  
> write only on ENOBUFS (assuming we can confirm the meaning of  
> WSAENOBUFS)?  It'd be nice to leave the common code path alone, as it  
> is a pretty darn common code path.
>
>   Jp

Assuming the construction of a buffer object is not high (from what I  
know it is not), this should not really be a problem. It would be very  
rare to be able to write more than 65K. On linux, at least, the buffer  
size is between 4K and 128K (if set by the application), and the  
default is either 16K or 64K.

It seems other people run into a very similar bug:
http://www.omniorb-support.com/pipermail/omniorb-list/2002-September/ 
021742.html
http://mail.ooc.nf.ca/pipermail/ob-users/1999-April/004989.html

Microsoft even has a KB article on something sounding quite similar:
http://support.microsoft.com/default.aspx?scid=http:// 
support.microsoft.com:80/support/kb/articles/q201/2/ 
13.asp&NoWebContent=1

Here's what they suggest. Do one of:
(a) Use the socket in nonblocking or asynchronous mode.
(b) Break large-size data blocks into small ones and specify a  
relatively small buffer in send for blocking sockets, preferably no  
larger than 64K.
(c) Set the SO_SNDBUF socket option to 0 (zero) to allow the stack to  
send from your application buffer directly.

Well, we've got (a) down... (c) is a bad idea, it will likely kill  
performance. That leaves (b). Sounds good, if it works.

James




From angryhicKclown at netscape.net  Sun Aug 22 15:28:29 2004
From: angryhicKclown at netscape.net (angryhicKclown at netscape.net)
Date: Sun, 22 Aug 2004 15:28:29 -0400
Subject: [Twisted-Python] Contributing?
Message-ID: <157FE2FA.75161D93.519F8DB3@netscape.net>

I was looking over the page on twistedmatrix.com on contributing, and it referred me to here. Over at the mono project, they have a todo-list sort of thing, that idle hackers such as myself can work on. I was wondering what the best way (besides monetary...I am a poor student) to contribute to the Twisted project is?

Thanks,

Peter Hunt

__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp



From exarkun at divmod.com  Sun Aug 22 17:02:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 22 Aug 2004 17:02:21 -0400
Subject: [Twisted-Python] Contributing?
In-Reply-To: <157FE2FA.75161D93.519F8DB3@netscape.net>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
Message-ID: <412909DD.2080907@divmod.com>

angryhicKclown at netscape.net wrote:
> I was looking over the page on twistedmatrix.com on contributing, and it referred me to here. Over at the mono project, they have a todo-list sort of thing, that idle hackers such as myself can work on. I was wondering what the best way (besides monetary...I am a poor student) to contribute to the Twisted project is?
> 
> Thanks,
> 

   In April, I gave a simple summary of the state of various 
protocol-level parts of Twisted:

http://twistedmatrix.com/pipermail/twisted-python/2004-April/007641.html

   One task might be to turn this into a real todo list :)  One could 
also look at the modules which scored particularly low and try to 
improve them.

   Jp



From erno-news at erno.iki.fi  Mon Aug 23 09:36:47 2004
From: erno-news at erno.iki.fi (Erno Kuusela)
Date: 23 Aug 2004 16:36:47 +0300
Subject: [Twisted-Python] Re: ENOBUF and Twisted
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
Message-ID: <gu4pt5ix9g0.fsf@ee.oulu.fi>

Glyph Lefkowitz <glyph at divmod.com> writes:

> On Sat, 2004-08-21 at 17:59 -0400, Jp Calderone wrote:
> 
> >    Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
> > the only documented behavior I can find for WSAENOBUFS.  And it is 
> > _Windows_, so it needn't make sense.  I just wanted to point out this 
> > possibility, since it seemed no one had considered it yet.
> 
> Based on both general UNIX community lore and various empirical
> observations of my own, Windows uses the FreeBSD TCP stack, so if often
> makes more sense than one would immediately think.

this is an urban legend,
see eg <http://www.kuro5hin.org/?op=displaystory;sid=2001/6/19/05641/7357>.
unless you're talking about pre-1994 NT ;)

  -- erno




From foom at fuhm.net  Tue Aug 24 13:46:30 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 24 Aug 2004 13:46:30 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
	<06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <87D6D68C-F5F5-11D8-9909-000A95A50FB2@fuhm.net>

Okay, I've done some testing on windows, and here is the problem:

With non-blocking sockets:
In Unix, socket.send(buf) will buffer as much of buf as it has space 
for, and then return how much it accepted. This could be 0 or up to 
something around 128K. If you send some data and then some more, it 
will append to the previous buffer.

In Windows, socket.send(buf) will either accept the entire buffer or 
raise ENOBUFS. Testing indicates that it will internally buffer any 
amount up to 50MB (this seems to be *TOTAL* for either the process or 
the OS, I'm not sure). However, it will not incrementally accept more 
data to append to a socket's buffer until the big buffer has been 
completely emptied (seemingly down to the SO_SNDBUF length, which is 
8192), but rather raises EWOULDBLOCK instead.

This makes me confident that the previous patch is the right thing to 
do and will fix the problem.

James




From radeex at gmail.com  Wed Aug 25 05:24:37 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 05:24:37 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <60ed19d404082502242f8ee9a9@mail.gmail.com>

I just switched everything in Subversion from LGPL to MIT, at glyph's command.

The policy that he outlined:

 1) All contributions or inclusions must be MIT licensed.
 1.a) If you want to include someone else's code in Twisted, it still
has to be MIT licensed, but keep their own copyright notice intact.
 2) Anybody who's a contributor and wants their name listed as a
copyright holder can have their name added to the LICENSE file (I
copied everyone from CREDITS into LICENSE initally).
 3) Put this preamble at the top of files:

# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
# See LICENSE for details.


Have fun.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From glyph at divmod.com  Wed Aug 25 06:36:39 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 25 Aug 2004 06:36:39 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082502242f8ee9a9@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
Message-ID: <1093430200.5441.10.camel@localhost>

On Wed, 2004-08-25 at 05:24 -0400, Christopher Armstrong wrote:
> I just switched everything in Subversion from LGPL to MIT, at glyph's command.

Thank you, Chris.  It's good to have this taken care of.




From mesozoic at polynode.com  Wed Aug 25 15:11:15 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 25 Aug 2004 15:11:15 -0400
Subject: [Twisted-Python] Re: Twisted is now under the MIT license.
In-Reply-To: <1093430200.5441.10.camel@localhost>
Message-ID: <E1C03Ax-0001Gv-00@perpetual.moxn.net>


On 8/25/2004, "Glyph Lefkowitz" <glyph at divmod.com> wrote:

>On Wed, 2004-08-25 at 05:24 -0400, Christopher Armstrong wrote:
>> I just switched everything in Subversion from LGPL to MIT, at glyph's command.
>
>Thank you, Chris.  It's good to have this taken care of.

Out of curiosity, what is the rationale behind switching licenses?
What's the difference for end users between LGPL- and MIT-licensed
Twisted?



From mary-twisted at puzzling.org  Wed Aug 25 15:18:37 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 25 Aug 2004 19:18:37 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082502242f8ee9a9@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
Message-ID: <20040825191837.GA16628@puzzling.org>

On Wed, Aug 25, 2004, Christopher Armstrong wrote:
>  1) All contributions or inclusions must be MIT licensed.
>  1.a) If you want to include someone else's code in Twisted, it still
> has to be MIT licensed, but keep their own copyright notice intact.
>  2) Anybody who's a contributor and wants their name listed as a
> copyright holder can have their name added to the LICENSE file (I
> copied everyone from CREDITS into LICENSE initally).

Can you clarify this a bit? If individual contributions are now
copyright their original author, surely 2 only applies to Twisted code
as it stood at the time of your last commits.

Copyright can't be blanket asserted in the LICENSE file over code that
is added after that point.  Or am I misunderstanding what the LICENSE
file is saying?

-Mary



From mary-twisted at puzzling.org  Wed Aug 25 15:24:23 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 25 Aug 2004 19:24:23 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040825191837.GA16628@puzzling.org>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
Message-ID: <20040825192423.GB16628@puzzling.org>

On Wed, Aug 25, 2004, Mary Gardiner wrote:
> Copyright can't be blanket asserted in the LICENSE file over code that
> is added after that point.  Or am I misunderstanding what the LICENSE
> file is saying?

OK, looking at it it's unclear whether the LICENSE file asserts that:

 - the people listed there jointly hold copyright over all of Twisted
   (which may be true now, but won't be as pieces get added[1])

   or

 - the people listed there individually hold copyright over pieces of
   Twisted

-Mary

[1] I assume joint copyright is fine under US law in theory, it's just
that individual pieces of Twisted are apparently going to retain their
copyright now.



From radeex at gmail.com  Wed Aug 25 19:10:05 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 19:10:05 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040825192423.GB16628@puzzling.org>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
Message-ID: <60ed19d404082516106001abc1@mail.gmail.com>

To Mary and Alex:

Ask a lawyer (or someone else who's silly enough to answer :).

This is how a lot of open source project's are run. ESR's Licensing
HOWTO may or may not be accurate, but if you assume it is correct, it
is enlightening.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From andrew-twisted at puzzling.org  Wed Aug 25 20:33:22 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Aug 2004 17:33:22 -0700
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082516106001abc1@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
Message-ID: <20040826003322.GC4629@frobozz>

On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> To Mary and Alex:
> 
> Ask a lawyer (or someone else who's silly enough to answer :).

I doubt a lawyer could answer Alex's question about the rationale for the
change :)

-Andrew.




From radeex at gmail.com  Wed Aug 25 20:43:57 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 20:43:57 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826003322.GC4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
Message-ID: <60ed19d404082517437dc803d3@mail.gmail.com>

On Wed, 25 Aug 2004 17:33:22 -0700, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:
> On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> > To Mary and Alex:
> >
> > Ask a lawyer (or someone else who's silly enough to answer :).
> 
> I doubt a lawyer could answer Alex's question about the rationale for the
> change :)

Well, I was focusing on his "what's the difference", which I can't
answer. I guess I'll risk it: The rationale is that MIT (presumably)
allows people to derive from the work without keeping derived works
open, and that's what glyph wanted now that Twisted has matured. Also,
the Twisted codebase is (presumably) not at the whim of glyph any
more, since all contributors (if they want) are listed as copyright
holders, not just glyph.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From andrew-twisted at puzzling.org  Wed Aug 25 21:42:17 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Aug 2004 18:42:17 -0700
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082517437dc803d3@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
Message-ID: <20040826014217.GD4629@frobozz>

On Wed, Aug 25, 2004 at 08:43:57PM -0400, Christopher Armstrong wrote:
> 
> Well, I was focusing on his "what's the difference", which I can't
> answer. I guess I'll risk it: The rationale is that MIT (presumably)
> allows people to derive from the work without keeping derived works
> open, and that's what glyph wanted now that Twisted has matured. Also,
> the Twisted codebase is (presumably) not at the whim of glyph any
> more, since all contributors (if they want) are listed as copyright
> holders, not just glyph.

To be clear on this: contributions are now *only* copyright their authors,
(rather than the previous joint copyright-assignment to glyph)?  And so when
you say "copyright holders", you're referring to everyone that has copyright
in any part of Twisted's source, rather than saying that everyone is now
joint holders of copyright?

Also, the new source file boilerplate says:

    # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
    # See LICENSE for details.

But as far as I know, Twisted Matrix Laboratories isn't a legally recognised
organisation (in any country), and regardless it isn't mentioned in the
LICENSE file, despite the boilerplate's promise that it would have details.
This is probably a minor issue, but it is confusing.

-Andrew.




From radeex at gmail.com  Wed Aug 25 22:41:29 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 22:41:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <60ed19d404082519413fcea99d@mail.gmail.com>

On Wed, 25 Aug 2004 18:42:17 -0700, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:

[A bunch of horrible scary questions about copyright and license]

This is getting too hairy for me. Glyph, you take it.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mary-twisted at puzzling.org  Wed Aug 25 22:50:01 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 26 Aug 2004 02:50:01 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <20040826025001.GA19518@puzzling.org>

On Wed, Aug 25, 2004, Andrew Bennetts wrote:
> To be clear on this: contributions are now *only* copyright their
> authors, (rather than the previous joint copyright-assignment to
> glyph)?  And so when you say "copyright holders", you're referring to
> everyone that has copyright in any part of Twisted's source, rather
> than saying that everyone is now joint holders of copyright?

This was more or less my question too. Given that I got "this is how
lots of open source projects do it!" as a response, I'm going to assume
the former, because the latter doesn't seem that common.

-Mary



From michaeltrosen at gmail.com  Wed Aug 25 23:06:29 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Wed, 25 Aug 2004 23:06:29 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
Message-ID: <4a0aa96304082520065d1dedf1@mail.gmail.com>

Hi Everyone,

I'm new to using the twisted framework, so excuse me if this is a
basic question..

When I run the sshsimpleclient.py example, to an external site,
everything works fine (I just change the code to use my username and
server information.)

However, if I try to ssh to my localhost, it prints out the host key
fingerprint, and then hangs.. never prompting for the password.

Is there something different about trying to connect to localhost (I
changed the code slightly, to take a command line parameter for the
username/host..:
if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
if I use:  python sshsimpleclient.py root at localhost    it hangs.

I am running Suse 9.1 Professional, and I can ssh to the host just
using the regular openssh ssh exe.

Thanks!  And awesome job on Twisted!

Mike Trosen



From serj_trejo at hotmail.com  Wed Aug 25 23:37:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:37:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>

I have yet to read the MIT license, but am wondering if it is unilateral in 
that it only is eforceable under U.S. law? Or does the United Nations 
recognize the MIT license for enforceability issues? Side note: Microsoft 
announced yesterday that they're withdrawing from the U.N. Cefact (this 
makes me nervous about U.S. laws and big corporations like Microsoft who try 
to wield influence on other countries as well as the U.N.)

_________________________________________________________________
Add photos to your messages with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Wed Aug 25 23:43:58 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:43:58 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>

Radix,

With all due respect, what if I am living in Mexico -- should I just waltz 
down to my local neighborhood attorney in Guadalajara and expect him/her to 
be able to give me advice about any U.S.-centric intellectual property 
related license? I'm not sure what the better answer is, but I don't know 
that it is fair to expect every person who wants to contrbute code to 
Twisted to have to consult with a lawyer in their non-U.S. country.

Serg

>From: Christopher Armstrong <radeex at gmail.com>
>Reply-To: radix at twistedmatrix.com,Twisted general discussion 
><twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Wed, 25 Aug 2004 19:10:05 -0400
>
>To Mary and Alex:
>
>Ask a lawyer (or someone else who's silly enough to answer :).
>
>This is how a lot of open source project's are run. ESR's Licensing
>HOWTO may or may not be accurate, but if you assume it is correct, it
>is enlightening.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+            http://radix.twistedmatrix.com
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Wed Aug 25 23:45:15 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:45:15 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F1CPx33E1ioWw000c9f76@hotmail.com>

Glyph - maybe we missed why the change. Can you point us to a URL that 
describes why the change? Thanks.

Serg

>From: Andrew Bennetts <andrew-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Wed, 25 Aug 2004 17:33:22 -0700
>
>On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> > To Mary and Alex:
> >
> > Ask a lawyer (or someone else who's silly enough to answer :).
>
>I doubt a lawyer could answer Alex's question about the rationale for the
>change :)
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From radeex at gmail.com  Wed Aug 25 23:50:23 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 23:50:23 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>
References: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>
Message-ID: <60ed19d40408252050ebd88d7@mail.gmail.com>

On Wed, 25 Aug 2004 23:43:58 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> Radix,
> 
> With all due respect, what if I am living in Mexico -- should I just waltz
> down to my local neighborhood attorney in Guadalajara and expect him/her to
> be able to give me advice about any U.S.-centric intellectual property
> related license? I'm not sure what the better answer is, but I don't know
> that it is fair to expect every person who wants to contrbute code to
> Twisted to have to consult with a lawyer in their non-U.S. country.

I didn't expect anybody to do that. _I_ don't have practical access to
a lawyer either. Probably almost all contribution to all open source
projects is done without consulting a lawyer. Deal with it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From serj_trejo at hotmail.com  Wed Aug 25 23:51:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:51:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F32oHhylKIi7F00105731@hotmail.com>

>Also, the new source file boilerplate says:
>
>     # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
>     # See LICENSE for details.
>
>But as far as I know, Twisted Matrix Laboratories isn't a legally 
>recognised
>organisation (in any country), and regardless it isn't mentioned in the
>LICENSE file, despite the boilerplate's promise that it would have details.
>This is probably a minor issue, but it is confusing.

If its true that Twisted Matrix Laboratories is neither a human or an 
artificial person in any territory, then I think its a major issue not a 
minor one. Copyright is not assignable to a ghost or a shadow.

>
>-Andrew.

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From serj_trejo at hotmail.com  Wed Aug 25 23:55:45 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:55:45 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>

Mary,

I am curious as to how Australians view U.S.-centric IPR issues such as 
licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
would need to confirm this yet) that Microsoft has filed some ungodly amount 
of U.S. patents (I think 5,000). The IPR patent issue is a sticky one lately 
in Europe and I'm curious about Australia / New Zealand viewpoints.

Cheers,

Serg

>From: Mary Gardiner <mary-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Thu, 26 Aug 2004 02:50:01 +0000
>
>On Wed, Aug 25, 2004, Andrew Bennetts wrote:
> > To be clear on this: contributions are now *only* copyright their
> > authors, (rather than the previous joint copyright-assignment to
> > glyph)?  And so when you say "copyright holders", you're referring to
> > everyone that has copyright in any part of Twisted's source, rather
> > than saying that everyone is now joint holders of copyright?
>
>This was more or less my question too. Given that I got "this is how
>lots of open source projects do it!" as a response, I'm going to assume
>the former, because the latter doesn't seem that common.
>
>-Mary
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From mary-twisted at puzzling.org  Thu Aug 26 00:18:52 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 26 Aug 2004 04:18:52 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
References: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
Message-ID: <20040826041852.GA20250@puzzling.org>

[this is quite off-topic, so I'll only reply the once. Please direct
future questions to Linux Australia's linux-aus list --
http://lists.linux.org.au/ -- rather than to me or twistedmatrix mailing
lists]

On Wed, Aug 25, 2004, Sergio Trejo wrote:
> Mary,
> 
> I am curious as to how Australians view U.S.-centric IPR issues such as 
> licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
> would need to confirm this yet) that Microsoft has filed some ungodly 
> amount of U.S. patents (I think 5,000). The IPR patent issue is a sticky 
> one lately in Europe and I'm curious about Australia / New Zealand 
> viewpoints.

Australia is a party to the Geneva convention, so copyright works
created in the United States are also copyright in Australia. The laws
are not *that* different. I don't think the validity of the Free
Software licences has ever been tested in Australian courts, but they
seem to be regarded as compatible with Australian copyright law.

Assuming that US Congress passes the recent amendments to the
US-Australia Free Trade Agreement, our software patenting and
anti-circumvention laws will also resemble those of the United States
although they are presently quite different and afford IP owners less
protection. (The amendments proposed by the Australian parliament at the
instigation of the Labor party in Opposition are designed to limit
certain uses of pharmaceutical patents, namely the practice known as
"evergreening". According to John Quiggin of http://www.johnquiggin.com/
the US does not like the proposed changes.  But I'm not following the
debate too closely, as I'm out of the country for three months. If it
does not pass soon it will be a election issue in the upcoming
Australian federal election.)

-Mary



From tim.stebbing at nunatak.com.au  Thu Aug 26 00:19:08 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Thu, 26 Aug 2004 14:19:08 +1000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
References: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
Message-ID: <412D64BC.4020406@nunatak.com.au>

Sergio Trejo wrote:
> Mary,
> 
> I am curious as to how Australians view U.S.-centric IPR issues such as 
> licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
> would need to confirm this yet) that Microsoft has filed some ungodly 
> amount of U.S. patents (I think 5,000). The IPR patent issue is a sticky 
> one lately in Europe and I'm curious about Australia / New Zealand 
> viewpoints.
> 
> Cheers,
> 
> Serg
> 

We just signed a free trade agreement with the US because we're scared 
that we cant defnd ourselves against indonesia should their army (which 
is bigger than our population) decide to annex us. So reguarding US 
patent law, It seems we're to bend over and take it.


-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From mcfletch at rogers.com  Thu Aug 26 00:33:45 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Thu, 26 Aug 2004 00:33:45 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>
References: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>
Message-ID: <412D6829.3030107@rogers.com>

Sergio Trejo wrote:

> I have yet to read the MIT license, 

Take 30 seconds and do so ;) .  I think you'll find it's not the most 
evil thing in the world...

    http://www.opensource.org/licenses/mit-license.php

If you are using *any* open source project (and many closed source ones 
too), then you are almost certainly using either MIT or BSD-licensed 
code, and if you are using Twisted, then you are certainly using code 
which has a far more complex and scary licensing history (i.e. Python 
itself) than something which is licensed solely and explicitly under 
MIT.  Basically MIT is one of the least restrictive licenses available, 
far less restrictive than LGPL, for instance.  It says (approximately) 
you can do whatever you like as long as you don't sue the creator, and 
you retain the license + copyright notice in the source.

As for the issue of how contributions work, Twisted has, as far as I 
know up until this date required assignment of copyright (to IIRC 
Glyph).  That allows Glyph to relicense the project anyway he feels at 
some point.  There is some legal murkiness in the US around the question 
of "joint" copyright, with most modern licenses tending to require that 
there be a single owner of the copyright who provides irrevocable 
sub-licenses back to the original author to avoid that murkiness.

There is no legal reason to stop assigning copyright to a single person 
or entity as far as I know, but as long as each contributor is 
contributing their work under MIT license, the results can be combined 
(though technically each licensor would then require that their license 
+ copyright statement be included, which can become rather ugly if there 
are a few hundred individual contributors).  Assignment with irrevocable 
back-licenses seems to be the path most "monied" open source projects 
(i.e. those who can afford intellectual property lawyers) are taking, 
btw.  However, most of these concerns tend to drop out when everything 
being considered is under MIT/BSD-style licenses, if the creator has the 
right to apply any license at all, applying MIT/BSD basically means that 
anyone can use the code for whatever purpose, so it doesn't particularly 
matter (other than for tracking copyright and license attributions) who 
owns the copyright.

As for whether the license would be enforceable solely under U.S. law; 
you are asking the wrong question (do you really care whether it's 
enforceable in Nairobi?), what you want to know is whether it is a valid 
license[1] under the laws of your own country.  The MIT license is an 
extremely simple license statement.  A clear statement that you can use 
the software for basically any purpose is far more likely to be valid in 
multiple countries than the kind of overwrought licenses created by 
practitioners focusing solely on a particular country's legal 
idiosyncrasies.  There may be jurisdictions under which the clauses 
disclaiming liability are not allowed.  Arguably that would either leave 
the contributors open to liability damages, or entirely nullify the 
license.  If you are really worried about that, then you'd have to talk 
to a lawyer (and I'm not one, of course)... and maybe a psychiatrist :) .

With respect,
Mike

[1] Keep in mind that a license *loosens* restrictions that would 
otherwise be present.  The enforceable restrictions on a license are 
simply trying to retain some of the already present restrictions and/or 
trade restraint of action in some form for the right to traverse the 
granted monopoly.  In the MIT license case, unless you're planning to 
sue the developers for liability, or for some reason feel the need to 
strip off the copyright statement and claim the product as your own 
creation, there's very little that the copyright holders can enforce 
against you.

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From sflist at ihonk.com  Thu Aug 26 00:34:49 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 25 Aug 2004 22:34:49 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <200408252234.49608.sflist@ihonk.com>

Hi all,

I've got an XML-RPC app that has to grab some data from a SQL database, then 
depending on the results, make some more SQL calls, make some more decisions, 
then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
idiom I've come up with, and I'm running into a limitation with it, namely 
that I can't seem to add callbacks to a Deferred after it has started 
running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
like to stick with, if possible:

class MyXmlRpcClass(xmlrpc.XMLRPC):
  def__init__(self):
    self.db = adbapi.ConnectionPool(blah)

  def xmlrpc_foo(self):
    return FooClass(self.db).step1() # This returns a deferred, see below

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        self.d = self.db.runQuery(blah)
        self.d.addCallback(self.step2)
        return self.d

    def step2(self, query):
 if query == 'yadda':
          return 'This bit works'
        else:
          self.d.chainDeferred(self.db.runOperation(blah))
          self.d.addCallback(self.step3)
            
    def step3(self, data):
        return "Never gets here!"

If I get to the part where it adds the callback for step3, it ends up giving 
an AlreadyCalled exception in Deferred. So, I expect there's a good way to 
add to a running Deferred, no?

Thanks!

Steve



From mcfletch at rogers.com  Thu Aug 26 01:15:13 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Thu, 26 Aug 2004 01:15:13 -0400
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <200408252234.49608.sflist@ihonk.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
Message-ID: <412D71E1.30502@rogers.com>

Steve Freitas wrote:

>Hi all,
>
>I've got an XML-RPC app that has to grab some data from a SQL database, then 
>depending on the results, make some more SQL calls, make some more decisions, 
>then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
>idiom I've come up with, and I'm running into a limitation with it, namely 
>that I can't seem to add callbacks to a Deferred after it has started 
>running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
>like to stick with, if possible:
>  
>
This wasn't spectacularly obvious to me the first time either, but I 
think it's covered somewhere in the deferred execution howto; in your 
callback/errback, return a new deferred and the processing of the 
deferred chain will pause until that new deferred fires.  Here's an 
example of code that does that...

            df = self.shouldRetrieve( urlRecord )
            def ifWeShould( judgement, urlRecord ):
                if judgement:
                    df = urlRecord.retrieve( self.timeout, self.userAgent )
                    df.addCallback( self.onSuccess, urlRecord = urlRecord )
                    df.addErrback( self.onFailure, urlRecord = urlRecord )
                    return df
                else:
                    return self.onFailure(
                        failure.Failure( RobotDenied(urlRecord)),
                        urlRecord = urlRecord
                    )
            df.addCallback( ifWeShould, urlRecord=urlRecord )

In the one branch, we return the result of a call, in the other, we 
return a new Deferred.  Note that the new deferred shows up between the 
current callback and any Deferred higher up in the chain, so the 
Deferred's higher up the chain will get the result of the new Deferred.  
If that's not desirable, you can define a handler for the new deferred 
that returns the original result.

Hope I understood the question properly and that this helped,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From sflist at ihonk.com  Thu Aug 26 03:12:51 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 01:12:51 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <412D71E1.30502@rogers.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<200408252234.49608.sflist@ihonk.com> <412D71E1.30502@rogers.com>
Message-ID: <200408260112.51433.sflist@ihonk.com>

> This wasn't spectacularly obvious to me the first time either, but I
> think it's covered somewhere in the deferred execution howto; in your
> callback/errback, return a new deferred and the processing of the
> deferred chain will pause until that new deferred fires. ?Here's an
> example of code that does that...

Thanks for your reply, Mike! I don't thoroughly understand your code yet, but 
I'm workin' on it. One of the things I don't like about the examples is that 
they don't demonstrate a conditional addition of a callback.

One of the things I did try was returning a new Deferred from step2(), but it 
didn't work, and I'm not sure why. I'm checking out defer.py now to try to 
figure out how it works...

Steve



From glyph at divmod.com  Thu Aug 26 09:30:26 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 26 Aug 2004 09:30:26 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F32oHhylKIi7F00105731@hotmail.com>
References: <BAY12-F32oHhylKIi7F00105731@hotmail.com>
Message-ID: <1093527026.5441.89.camel@localhost>

(Aside to TMLabs: I think there may have been a miscommunication.  You
*may* continue to consign copyright either to me or to another TML
member if you would like to.  The advantage would be to legally disclaim
any interest in conversations like this one :-) )

Sergio,

I am not a lawyer.  As far as I know, you are not a lawyer.  These
discussions only have real meaning between legal professionals in a
specific jurisdiction at a specific point in time.  Even then, there are
many subtle points open to debate.  Still, I'll state my intentions and
my understanding of the law for the record, in case someone wants to
refer back to this when they're suing us all.

I'm sorry I didn't post something before the change, but this change
really shouldn't affect anyone except those who need a more flexible
license for Twisted than the LGPL.  Since those people previously had to
contact me personally, I am pretty sure there are not many of them :).
I will try to answer as many possible objections in this email, even
those you have not raised, since I have seen some discussion on the list
and I anticipate more.  Unless I have overlooked something really
serious, though, this is the the last message I'll write on the subject;
after years of doing it, I really hate talking about licensing.

I have asked several intellectual property lawyers and paralegals
questions related to this, and have gotten at least two interpretations
per person.  US copyright law and the Berne convention, as they apply to
software and to jointly authored works by hobbyists, are very confusing.
One radical point of view is that in some contexts, copyright law cannot
apply to software at all.  I do not believe that there is a "correct"
solution that gives an air-tight legal protection, given the very nature
of international law.

However, I have attempted to follow a commonly accepted practice within
the open source community based on my layman's view of the common
interpretation of US copyright law and the Berne convention.

The motivation for the change is simple: some people who wanted to
contribute to Twisted were in a position where they weren't able to
contribute code because they are allowed to publish open-source code
under a license of their choice, but they are not allowed to consign
their copyrights.  Furthermore, my previous motivation for making
Twisted LGPL and centralizing the copyright is no longer valid.  I don't
work in the games industry any more, and "open source" has been endorsed
by IBM and other corporate giants.  (If this doesn't make sense, google
around for old mailing-list messages where I explained the motivation
for the previous policy in depth.)

The only legal protection we are currently seeking with the licensing
Twisted 2.0 codebase, the first public release this change will affect,
is not to get sued when things go wrong with Twisted: if it breaks, you
can keep both pieces.

The reason we have a license at all is that there seems to be widespread
agreement that putting software in the public domain can leave the
original authors open to arbitrarily large liability claims, if it's a
legally valid thing to do at all.  I don't believe there is any case
history about this *specifically*, but it is a common caution so I
assume there must be other precedents.

That is the ONLY thing the license is for.  The assurances that some
users may want - "will some disgruntled author on the Twisted team sue
me?" or "has the code been properly vetted for copyright violations of
others' work?" - cannot be granted by the license agreement.

I'd like to stress that.  There are no assurances.  There is no
warranty... ahem... THERE IS NO WARRANTY, EXPRESSED OR IMPLIED,
INCLUDING THE IMPLIED WARRANTIES OF MERCHANTIBILITY OR FITNESS FOR A
PARTICULAR PURPOSE.  If we lie to you about who wrote it, when it was
written, why it was written or even what it is, the liability, and the
responsibility for discovering this, is yours.  This is true of close to
99% of all free/open source software, so if you don't like it, you are
going to have to find someone to take the liability for you and pay them
to do it.

(Actually it's true of proprietary, commercial software too.  Read your
Microsoft, Apple, or Adobe license agreements, if you have any.)

That said, there are mechanisms in place to prevent this kind of
"tainting" from happening.  Professionally, it would certainly be a
problem for me if it did.  I have personally made sure that everyone
with commit access understands their responsibilities.  We try very hard
to keep our hands clean.  If we fail, SVN keeps a pretty complete
history of what's happened recently, we have backups of the repository
available if there are any hardware failures.  So, while it is possible
that we will make a mistake, but it is vanishingly unlikely that we will
not be able to correct it immediately.  It is also unrelated to the
license agreement.

I also, personally, don't plan to sue anybody for using Twisted, if they
don't sue me first - though I can't speak for anyone else involved.  (Of
course, they could have sued you under the previous policy.  And I might
sue you for something else.  So again - this changes nothing.)

On Wed, 2004-08-25 at 23:51 -0400, Sergio Trejo wrote:

> If its true that Twisted Matrix Laboratories is neither a human or an 
> artificial person in any territory, then I think its a major issue not a 
> minor one.

Major issue for whom?  I don't believe that this is a problem for me,
since as I understand it it's perfectly legal, and I don't see how it
could be a problem for you, since you are getting no warranty or
agreement from Twisted Matrix Labs - whether it is real or not - only
some rights and some code.

> Copyright is not assignable to a ghost or a shadow.

Why not?  The coder at http://www.hymn-project.org/ labels the code
simply "Copyright 2004." so it seems that some people think copyright is
assignable to nobody at all...

Copyright is, however, definitely assignable to "an abbreviation by
which the name can be recognized, or a generally known alternative
designation of the owner".  Given that we are moving Twisted to be a
joint-copyright work, rather than an individually assigned work, the
collective who owns the copyright is a loose collaboration of
individuals over the internet, and a "generally known alternative
designation" for that group (without listing everyone's name in every
file) is Twisted Matrix Labs.  It would be equally reasonable to say
"Copyright http://www.twistedmatrix.com/" but that seems a tad nerdy
even for source code.

Secondly, even if I'm completely wrong about the way joint copyright
works, the copyright is assigned by the act of creating and publishing a
work, NOT by placing a copyright notice on it.  This is one of the
clearest points of agreement in all interpretations of copyright law
that I'm aware of.  Copyright notices are a holdover from laws made in
the mid-70s; they are almost meaningless for new works today.

The "work" in question here is the Twisted distribution, not individual
source files.  If for some reason we need to audit an individual's
contributions, tracking them at the file level may not be meaningful,
and we can already do that without adding the gross level of clutter
previously present in every file.  'svn blame' will allow us to track
credit to individual lines, and individual versions.  Any more
granularity than that will probably require time in court - and hey, SCO
has taught us that if you get to that point, your opponent is probably
just perjuring themselves anyway.




From sflist at ihonk.com  Thu Aug 26 11:07:25 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 09:07:25 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <412D71E1.30502@rogers.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>  <412D71E1.30502@rogers.com>
Message-ID: <1093531734.10911.18.camel@ibook>

> This wasn't spectacularly obvious to me the first time either, but I 
> think it's covered somewhere in the deferred execution howto

Ah ha! I think I figured it out. If I do this, it seems to work...

class XMLRPCResponseClass():
    def step1(self):
        self.d = self.db.runQuery(blah)
        self.d.addCallback(self.step2)
        return self.d

    def step2(self, query): # Here's where the change is
        if query == 'yadda':
          return 'This bit works'
        else:
          self.d = self.db.runOperation(blah) # Rebinding self.d to new
                                              # Deferred()
          self.d.addCallback(self.step3) # add callbacks to new one
          return self.d # And return ref to the new one
            
    def step3(self, data):
        return 'Now it gets here!'

The trick is that I need to add any subsequent callbacks to a new
deferred which I return from the function. Strangely (to me), if I try
using chainDeferred() instead of returning the new deferred from step2,
it fails with AlreadyCalled, which I don't yet understand, but that's
fine, 'cause this seems to work well enough.

I really like this technique because I don't have to use a big state
machine at the root level of the xmlrpc calls, or preassign possibly
unnecessary callbacks, or toss around callables as variables until I'm
thoroughly confused. Instead, it allows me to place all the
(client||server) state information for a given method call inside a
class instance which persists only until the xmlrpc method returns. And
multiple calls to this method while it's being simultaneously Deferred()
for other clients don't require any extra coding to handle, as I've got
one class instance per connection. Very clean, very well separated,
which is hard to figure out how to do with this wonderful framework.
Alright, I'll stop ranting now. :-) I still have to give this thing a
workout to make sure it does all I want it to.

Thanks for the help!

Steve




From abe at fettig.net  Thu Aug 26 12:12:00 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 26 Aug 2004 12:12:00 -0400
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <1093531734.10911.18.camel@ibook>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
Message-ID: <412E0BD0.8020004@fettig.net>

Steve,

I'm all too familar with the situation you describe, and I've come up 
with a pattern that works well for me.  Here's how I would have written 
your example:

class XMLRPCResponseClass():
     def step1(self):
	finished = defer.Deferred()
	self.db.runQuery(blah).addCallback(
             self.step2, finished).addErrback(finished.errback)
         return finished

     def step2(self, result, finished):
         if result == 'yadda':
             finished.callback('This bit works')
         else:
             self.d.runOperation(blah).chainDeferred(finished)


It takes a while to really understand how Deferreds work, but I'll try 
to explain this example.  In step1, we create a new Deferred called 
'finished'.  This Deferred didn't come from a method we called; we 
created it from scratch.  This means that it won't be triggered 
automatically when some event finishes.  Instead, we have the freedom to 
call it whenever we want.

We then kick off the asyncronous operation self.db.runQuery.  We set up 
the callbacks as follows:

1. If runQuery completes successfully, call step2(), passing finished as 
an additional argument.
2. If runQuery fails, pass the error on to finished.

Then we return finished, our Deferred.  At this point finished.errback 
will get called if runQuery fails.  But what if runQuery succeeds?  That 
will be handled by step2.

In step2, we take the result of runQuery , as well as the 'finished' 
Deferred we created in step1.  Now we have the results of the first 
operation, as well as a reference to the deferred that was returned in 
step1.

If the result of runQuery was 'yadda', we callback finished with a 
successful value.  Otherwise, we kick of a second asyncronous operation, 
(self.d.runOperation) and chain the results to finished.  Remember that 
a.chainDeferred(b) doesn't do anything special, it's just shorthand for:

a.addCallback(b.callback)
a.addErrback(b.errback)

So the result is that finished ends up calling back or erring back with 
the results of self.d.runOperation, even though it wasn't bound to 
runOperation when it was first created.

The only thing to be careful of with this technique is that you have to 
make sure any operation that could possibly fail sends its error to 
finished.errback - otherwise finished will never be finished :-)

I hope that's helpful!  I'm happy to answer questions if you have any.

Abe

p.s. - It's possible there's a better way to do this sort of thing.  But 
I'm using the above technique extensively in Hep and Yarn without any 
problems.

Steve Freitas wrote:
>>This wasn't spectacularly obvious to me the first time either, but I 
>>think it's covered somewhere in the deferred execution howto
> 
> 
> Ah ha! I think I figured it out. If I do this, it seems to work...
> 
> class XMLRPCResponseClass():
>     def step1(self):
>         self.d = self.db.runQuery(blah)
>         self.d.addCallback(self.step2)
>         return self.d
> 
>     def step2(self, query): # Here's where the change is
>         if query == 'yadda':
>           return 'This bit works'
>         else:
>           self.d = self.db.runOperation(blah) # Rebinding self.d to new
>                                               # Deferred()
>           self.d.addCallback(self.step3) # add callbacks to new one
>           return self.d # And return ref to the new one
>             
>     def step3(self, data):
>         return 'Now it gets here!'
> 
> The trick is that I need to add any subsequent callbacks to a new
> deferred which I return from the function. Strangely (to me), if I try
> using chainDeferred() instead of returning the new deferred from step2,
> it fails with AlreadyCalled, which I don't yet understand, but that's
> fine, 'cause this seems to work well enough.
> 
> I really like this technique because I don't have to use a big state
> machine at the root level of the xmlrpc calls, or preassign possibly
> unnecessary callbacks, or toss around callables as variables until I'm
> thoroughly confused. Instead, it allows me to place all the
> (client||server) state information for a given method call inside a
> class instance which persists only until the xmlrpc method returns. And
> multiple calls to this method while it's being simultaneously Deferred()
> for other clients don't require any extra coding to handle, as I've got
> one class instance per connection. Very clean, very well separated,
> which is hard to figure out how to do with this wonderful framework.
> Alright, I'll stop ranting now. :-) I still have to give this thing a
> workout to make sure it does all I want it to.
> 
> Thanks for the help!
> 
> Steve
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From foom at fuhm.net  Thu Aug 26 12:35:48 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 26 Aug 2004 12:35:48 -0400
Subject: [Twisted-Python] Contributing?
In-Reply-To: <157FE2FA.75161D93.519F8DB3@netscape.net>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
Message-ID: <FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>

On Aug 22, 2004, at 3:28 PM, angryhicKclown at netscape.net wrote:
> I was looking over the page on twistedmatrix.com on contributing, and 
> it referred me to here. Over at the mono project, they have a 
> todo-list sort of thing, that idle hackers such as myself can work on. 
> I was wondering what the best way (besides monetary...I am a poor 
> student) to contribute to the Twisted project is?

Welllll, since you ask.. :)

Here's a relatively self-contained project that could use working on:

twisted.web.microdom and twisted.web.sux is supposed to implement an 
XML/XHTML and HTML parser. It is pretty useless as an XML parser, given 
its relative slowness and the existence of expat/python xml libraries 
which do already do a very good job of being an XML parser. Microdom is 
*almost* a useful HTML parser, but it's missing support for a lot of 
HTML peculiarities that really need to be handled 
("<tr><td>foo<tr><td>bar" for one, strange whitespace collapsing rules, 
for another, and I'm sure there's more). Perl has a very good HTML 
parser in HTML::TreeParser whose algorithms could be duplicated.

This project isn't even very twisted specific (sux/microdom only have 
very minor dependancies on the rest of twisted) so it could conceivably 
be made into a general purpose python module in its own right. There 
are a variety of other Python HTML parsers, but from what I can tell, 
they're even worse than microdom is. It'd be way cool to have a python 
HTML parser that actually works. Can't let perl win! Any 
victi...volunteers? ;0

James




From nico at tekNico.net  Thu Aug 26 14:15:30 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 26 Aug 2004 20:15:30 +0200
Subject: [Twisted-Python] Re: Contributing?
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
	<FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> There are a variety of other Python HTML parsers, but from what I can
> tell, they're even worse than microdom is. It'd be way cool to have a
> python HTML parser that actually works.

People say nice things about Beautiful Soup:

http://www.crummy.com/software/BeautifulSoup/


- -- 
Nicola Larosa - nico at tekNico.net

"...it's easier to add documentation and support to Linux than
security to Windows." -- Dan DeMaggio, CRYPTO-GRAM, June 2003


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFBLijFXv0hgDImBm4RAo98AJ0fW1mx9pZNsEWggOS8vfXyGw/qGgCfRNhK
3Q6K4QVMLuQQsUsb6u3GcwM=
=WCsn
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Thu Aug 26 14:26:13 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 14:26:13 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
	<412E0BD0.8020004@fettig.net>
Message-ID: <un00hiwmy.fsf@fitlinxx.com>

Abe Fettig <abe at fettig.net> writes:

> Steve,
> 
> I'm all too familar with the situation you describe, and I've come up
> with a pattern that works well for me.  Here's how I would have
> written your example:
> 
> class XMLRPCResponseClass():
>      def step1(self):
> 	finished = defer.Deferred()
> 	self.db.runQuery(blah).addCallback(
>              self.step2, finished).addErrback(finished.errback)
>          return finished
> 
>      def step2(self, result, finished):
>          if result == 'yadda':
>              finished.callback('This bit works')
>          else:
>              self.d.runOperation(blah).chainDeferred(finished)

I'm not sure I follow the need for the extra deferred.  I would think
that the following would work just as well:

    class XMLRPCResponseClass():

         def step1(self):
            return self.db.runQuery(blah).addCallback(self.step2)

         def step2(self, result):
             if result == 'yadda':
                 return 'This bit works'
             else:
                 return self.db.runOperation(blah)


In this case, the primary deferred is the original runQuery.  The
first callback on that forwards you to step 2.  A failure would flow
up the errback chain which you don't process locally but leave to the
caller to handle.

In the success case, if you need to additionally process the result
you just return the new value (the 'yadda' test), otherwise you spin
off another deferred operation, returning that deferred from your
callback.  Returning a deferred within a callback is an implicit
chaining operation as Twisted will wait for that new deferred to
finish before taking its result and propagating it up the callback or
errback chain appropriately.

Remember that when you add your callbacks/errbacks you are in control
of the sequence of execution as the callback/errback chain fires, and
thus you'll always get control in advance of any other
callback/errbacks that callers who you return the same deferred to
might be attaching.  That, plus the implicit chaining Twisted permits
by an individual function in the callback/errback chain itself
returning a deferred is pretty flexible.  It's certainly been rare for
me to need my own internally generated deferred unless I was the root
of the deferrable operation.

-- David






From foom at fuhm.net  Thu Aug 26 15:07:35 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 26 Aug 2004 15:07:35 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
	<FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>
	<E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>
Message-ID: <30CCEF18-F793-11D8-9909-000A95A50FB2@fuhm.net>


On Aug 26, 2004, at 2:15 PM, Nicola Larosa wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>> There are a variety of other Python HTML parsers, but from what I can
>> tell, they're even worse than microdom is. It'd be way cool to have a
>> python HTML parser that actually works.
>
> People say nice things about Beautiful Soup:
>
> http://www.crummy.com/software/BeautifulSoup/

Unfortunately, it's trying to solve a completely different problem. It 
is not to hoping to make a tree of the entire document, but rather, to 
do something like "give me all the hrefs on the page". As such, it 
doesn't even *try* to parse html properly, it just knows enough to be 
able to ignore the parts of the page you aren't asking for.

Its intro says:
> A well-formed HTML document will yield a well-formed data
> structure. An ill-formed HTML document will yield a correspondingly
> ill-formed data structure. If your document is only locally
> well-formed, you can use this to process the well-formed part of it.

However, that is not entirely accurate, unless "well formed" doesn't 
mean "follows the HTML4 standard". It doesn't parse 
"<table><tr><td>foo<tr><td>bar</table>" correctly -- a perfectly valid 
bit of HTML4. Microdom's goal is to yield a well-formed data structure 
from a well-formed HTML document, and most ill-formed HTML documents 
too.

James




From db3l at fitlinxx.com  Thu Aug 26 15:09:48 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:09:48 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
Message-ID: <uisb5iumb.fsf@fitlinxx.com>

Steve Freitas <sflist at ihonk.com> writes:

> Hi all,
> 
> I've got an XML-RPC app that has to grab some data from a SQL database, then 
> depending on the results, make some more SQL calls, make some more decisions, 
> then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
> idiom I've come up with, and I'm running into a limitation with it, namely 
> that I can't seem to add callbacks to a Deferred after it has started 
> running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
> like to stick with, if possible:

You can certainly add a callback to a Deferred that has already fired
(it will immediately run synchronously), but yes, you can't do it
during the callback/errback operation (e.g., adding to a Deferred from
within one of that Deferred's callbacks/errbacks as it is running).

> class MyXmlRpcClass(xmlrpc.XMLRPC):
>   def__init__(self):
>     self.db = adbapi.ConnectionPool(blah)
> 
>   def xmlrpc_foo(self):
>     return FooClass(self.db).step1() # This returns a deferred, see below
> 
> class FooClass(General):
>     def __init__(self, db):
>         self.db = db
> 
>     def step1(self):
>         self.d = self.db.runQuery(blah)
>         self.d.addCallback(self.step2)
>         return self.d
> 
>     def step2(self, query):
>  if query == 'yadda':
>           return 'This bit works'
>         else:
>           self.d.chainDeferred(self.db.runOperation(blah))
>           self.d.addCallback(self.step3)
>             
>     def step3(self, data):
>         return "Never gets here!"
> 
> If I get to the part where it adds the callback for step3, it ends up giving 
> an AlreadyCalled exception in Deferred. So, I expect there's a good way to 
> add to a running Deferred, no?

I don't think you actually want to "add to a running Deferred" here,
since even if your chainDeferred call worked, it would be chaining at
the _end_ of the Deferred's callback/errback chain, which might be
after a whole slew of other operations that your callers (who got the
deferred from step1) already added.  So it wouldn't occur in the
sequence you want anyway.

What you really want to do (I believe) is the opposite chain operation
- you want to take the Deferred from the runOperation(blah), and chain
it to your current Deferred, so that your current Deferred's
callback/errback chain waits on the runOperation result to continue
working.  The actual chaining is easy (just change your use of
chainDeferred), but the hard part is making the current callback chain
suspend itself until the new Deferred finishes.

Luckily, Twisted already provides explicit support for this behavior
(which is sort of crucial to permit deferrable operations to interact
properly anyway).  What I think you want (similar to what I showed in
an earlier message of mine in this thread) is simply to return the new
deferred from within your callback.  Twisted will automatically notice
that the callback itself is awaiting a response via the deferred, and
it establishes the necessary linkage. 

Once the new internal Deferred finishes, it is its result (whether
successful or a Failure object) that will gate whether the original
Deferreds chain continues up callback or errback.

You can peek at the _runCallbacks inside the Deferred class definition
if you want to see the mechanism.  Or check out the first paragraph in
the "Chaining Deferreds" section of the Using Deferreds HOWTO.
Interestingly enough, the HOWTO (next paragraph) makes mention of it
potentially being confusing but that the reader will probably
recognize the need when they run into it.  Clearly that doesn't always
happen :-)

There's two ways, I think you can do FooClass, depending on how you
want to conceptually insert step3 into the processing:

The first, fairly literal adjustment of your class would be:

[Case 1]

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        return self.db.runQuery(blah).addCallback(self.step2)

    def step2(self, query):
        if query == 'yadda':
            return 'This bit works'
        else:
            return self.db.runOperation(blah).addCallback(self.step3)

    def step3(self, data):
        # 'data' is result of self.db.runOperation(blah)

        # Note that the result of this method will become the callback
        # result of the self.db.runOperation(blah) Deferred, and thus
        # in turn the next result passed up the callback chain for the
        # first self.db.runQuery(blah) Deferred as the answer from step2
        # in the non-yadda case.

        return "I got here!'

or:

[Case 2]

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        d = self.db.runQuery(blah)
        return d.addCallback(self.step2).addCallback(self.step2)
        
    def step2(self, query):
        if query == 'yadda':
            return 'This bit works'
        else:
            return self.db.runOperation(blah)

    def step3(self, data):
        # 'data' is result of step2

        # Note that the result of this method will become the callback
        # in the main callback chain for the first self.db.runQuery(blah)
        # Deferred, and will thus replace that of step2
        return "I got here!'


(Actually, there's also a third way in which you manually pause and
unpause the main Deferred callback chain, and set up a callback on the
secondary Deferred chain to resume the main one, but that's precisely
what Twisted does for you when you just return the underlying Deferred
from your callback, so I don't see any benefit of doing it yourself).

In both of these cases there are two deferred chains running (arising
from the two discrete deferrable operations that themselves are
creating Deferreds), but that in the even of the non-yadda path in
step2, the first callback chain is suspended while awaiting completion
of the second.

In Case 1, the addCallback of step3 is to the secondary callback
chain, so it provides additional post-processing of the runOperation
result, but does not get involved in other paths/results from step2.

In Case 2, step3 is added to the main callback (runQuery) chain, so it
will see any results of step2 (both yadda and runOperation) and can
then post-process them, becoming in all cases the callback result for
the main callback chain.  Note a key point here - even though step3 is
next in the main callback chain after step2, in the event step2
returns the Deferred from runOperation, the main chain suspends (so
step3 doesn't run immediately) until that second Deferred finishes,
at which point it is the result that step3 sees.

So what you end up (in the non-yadda case) is something like (in poor
ASCII diagraming):

    Case 1:                           Case 2:

    runQuery                          runQuery
       |                                 |
    step2                             step2
       |                                 |
       |  no                             |  no
       +-yadda->-runOperation            +-yadda->-runOperation
       |              |                  |              |
    yadda             v               yadda             v
       |              |                  |              |
       +---<------ step3                 +---<----------+
       |                                 |
       v                              step3
                                         |
                                         v


Hope this helps clarify things somewhat.

-- David




From db3l at fitlinxx.com  Thu Aug 26 15:18:43 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:18:43 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
Message-ID: <uekltiu7g.fsf@fitlinxx.com>

Steve Freitas <sflist at ihonk.com> writes:

> The trick is that I need to add any subsequent callbacks to a new
> deferred which I return from the function. Strangely (to me), if I try
> using chainDeferred() instead of returning the new deferred from step2,
> it fails with AlreadyCalled, which I don't yet understand, but that's
> fine, 'cause this seems to work well enough.

(should have finished reading ahead since you figured out some of my
prior response :-))

The above may or may not be true though, since it depends on what the
subsequent callbacks are supposed to do.  For example, if step3 is
processing of step2 results (anything step2 can return) then you want
it added to your main callback chain for your first Deferred.  If
however, step3 is only supposed to post-process the results of the
conditional path through step2 that invokes another deferrable
routine, yes, the right place to hang it is on that Deferred and not
the main Deferred.

Oh, and not that I probably wouldn't suggest overwriting self.d with
the intermediate deferreds if you could avoid it, if only because it's
bound to be confusing down the road when maintaining the code.  Since
you should know everyone that is going to be involved in a callback
chain at the point when a particular chain is being created (either
your first one, or one that is created within a callback) you should
be able to add callbacks to each chain as it is created.





  If they
are generic processing in sequence that should work with any result
from



 - see Case 2 in my prior
response - depending on when you want the subsequent processing to
run.

-- David





From abe at fettig.net  Thu Aug 26 15:27:40 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 26 Aug 2004 15:27:40 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's	already
	running?
In-Reply-To: <un00hiwmy.fsf@fitlinxx.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>	<200408252234.49608.sflist@ihonk.com>	<412D71E1.30502@rogers.com>
	<1093531734.10911.18.camel@ibook>	<412E0BD0.8020004@fettig.net>
	<un00hiwmy.fsf@fitlinxx.com>
Message-ID: <412E39AC.3040706@fettig.net>

David Bolen wrote:

> I'm not sure I follow the need for the extra deferred.  I would think
> that the following would work just as well:
> 
>     class XMLRPCResponseClass():
> 
>          def step1(self):
>             return self.db.runQuery(blah).addCallback(self.step2)
> 
>          def step2(self, result):
>              if result == 'yadda':
>                  return 'This bit works'
>              else:
>                  return self.db.runOperation(blah)

Ah, thanks - I didn't realize that would work.  I might be able to 
refactor some code now :-).

Abe




From db3l at fitlinxx.com  Thu Aug 26 15:33:53 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:33:53 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred
	that's	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com> <uisb5iumb.fsf@fitlinxx.com>
Message-ID: <uacwhiti6.fsf@fitlinxx.com>

David Bolen <db3l at fitlinxx.com> writes:

(oops - minor correction to my last post)

> [Case 2]
> 
> class FooClass(General):
>     def __init__(self, db):
>         self.db = db
> 
>     def step1(self):
>         d = self.db.runQuery(blah)
>         return d.addCallback(self.step2).addCallback(self.step2)

this should be (step3 on the final callback):

          return d.addCallback(self.step2).addCallback(self.step3)

-- David




From sflist at ihonk.com  Thu Aug 26 17:23:26 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 15:23:26 -0600
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already running?
In-Reply-To: <uacwhiti6.fsf@fitlinxx.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com> <uisb5iumb.fsf@fitlinxx.com>
	<uacwhiti6.fsf@fitlinxx.com>
Message-ID: <1093555406.11995.13.camel@ibook>

Thanks to all of you for your very informative responses, Mike, Abe and
David! I've learned a lot, and gotten the information I need to continue
on with my work. Everything was explained thoroughly, so I think I'm all
set now. It's great to have such a helpful list to lean on.

Thanks!

Steve




From exarkun at divmod.com  Thu Aug 26 21:34:13 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 26 Aug 2004 21:34:13 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <4a0aa96304082520065d1dedf1@mail.gmail.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
Message-ID: <412E8F95.80008@divmod.com>

Michael Trosen wrote:
> Hi Everyone,
> 
> I'm new to using the twisted framework, so excuse me if this is a
> basic question..
> 
> When I run the sshsimpleclient.py example, to an external site,
> everything works fine (I just change the code to use my username and
> server information.)
> 
> However, if I try to ssh to my localhost, it prints out the host key
> fingerprint, and then hangs.. never prompting for the password.
> 
> Is there something different about trying to connect to localhost (I
> changed the code slightly, to take a command line parameter for the
> username/host..:
> if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
> if I use:  python sshsimpleclient.py root at localhost    it hangs.
> 
> I am running Suse 9.1 Professional, and I can ssh to the host just
> using the regular openssh ssh exe.
> 
> Thanks!  And awesome job on Twisted!

   The conch client in Twisted 1.3 had a problem connecting to servers 
without a key (or something like that).  This has been fixed in SVN 
HEAD.  Perhaps it is the cause of the problem?

   Jp



From michaeltrosen at gmail.com  Thu Aug 26 22:24:45 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Thu, 26 Aug 2004 22:24:45 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <412E8F95.80008@divmod.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com>
Message-ID: <4a0aa9630408261924352d1afc@mail.gmail.com>

Jp,
thanks for the info.  I  svn'd the latest stuff from the repository,
built it and installed it, but now get an error if I try my localhost.
 The only thing I changed in the example program sshsimpleclient.py is
I changed the USER var to be root, and the HOST variable to be
localhost..

Thanks for the help!
Michael

Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 31, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py",
line 526, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py",
line 244, in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/transport.py",
line 189, in dataReceived
    ord(packet[0]), packet[1:])
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
53, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
40, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 31, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/service.py",
line 42, in packetReceived
    f(packet)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/userauth.py",
line 287, in ssh_USERAUTH_PK_OK
    d = self.getGenericAnswers(name, instruction, prompts)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/userauth.py",
line 407, in getGenericAnswers
    raise NotImplementedError
exceptions.NotImplementedError: 

On Thu, 26 Aug 2004 21:34:13 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> 
> 
> Michael Trosen wrote:
> > Hi Everyone,
> >
> > I'm new to using the twisted framework, so excuse me if this is a
> > basic question..
> >
> > When I run the sshsimpleclient.py example, to an external site,
> > everything works fine (I just change the code to use my username and
> > server information.)
> >
> > However, if I try to ssh to my localhost, it prints out the host key
> > fingerprint, and then hangs.. never prompting for the password.
> >
> > Is there something different about trying to connect to localhost (I
> > changed the code slightly, to take a command line parameter for the
> > username/host..:
> > if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
> > if I use:  python sshsimpleclient.py root at localhost    it hangs.
> >
> > I am running Suse 9.1 Professional, and I can ssh to the host just
> > using the regular openssh ssh exe.
> >
> > Thanks!  And awesome job on Twisted!
> 
>    The conch client in Twisted 1.3 had a problem connecting to servers
> without a key (or something like that).  This has been fixed in SVN
> HEAD.  Perhaps it is the cause of the problem?
> 
>    Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mailinglist at ltsai.com  Fri Aug 27 04:34:55 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Fri, 27 Aug 2004 16:34:55 +0800
Subject: [Twisted-Python] Binary files in Twisted
Message-ID: <cgmrni$jan$1@sea.gmane.org>

Dear all,

What are the following libraries that is build when I install Twisted?

./protocols/_c_urlarg.so
./runner/portmap.so
./spread/cBanana.so

Liming




From foom at fuhm.net  Fri Aug 27 09:33:54 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 27 Aug 2004 09:33:54 -0400
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <cgmrni$jan$1@sea.gmane.org>
References: <cgmrni$jan$1@sea.gmane.org>
Message-ID: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>

On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> What are the following libraries that is build when I install Twisted?
>
> ./protocols/_c_urlarg.so

Optional url parsing speedup code -- this has a memory leak in 1.3.0 
and previous, so you probably don't want to use it in those versions. 
Removing will cause the slower python code to be used instead. (I don't 
know how much this helps, it might be a premature optimization anyhow).

> ./runner/portmap.so

Required to interface with the RPC portmap daemon to register new RPC 
programs. But you more than likely don't want or need this 
functionality.

> ./spread/cBanana.so

Also an optional C speedup module, this time for the banana protocol. 
Looks like the code that uses this module is commented out.

So basically, you can remove all the binaries without worrying. :)

James




From mailinglist at ltsai.com  Fri Aug 27 10:45:16 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Fri, 27 Aug 2004 22:45:16 +0800
Subject: [Twisted-Python] Re: Binary files in Twisted
In-Reply-To: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
Message-ID: <cgnhes$cpo$1@sea.gmane.org>

James Y Knight wrote:

> On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> 
>> What are the following libraries that is build when I install Twisted?
>>
>> ./protocols/_c_urlarg.so
> 
> 
> Optional url parsing speedup code -- this has a memory leak in 1.3.0 and 
> previous, so you probably don't want to use it in those versions. 
> Removing will cause the slower python code to be used instead. (I don't 
> know how much this helps, it might be a premature optimization anyhow).
> 
>> ./runner/portmap.so
> 
> 
> Required to interface with the RPC portmap daemon to register new RPC 
> programs. But you more than likely don't want or need this functionality.
> 
>> ./spread/cBanana.so
> 
> 
> Also an optional C speedup module, this time for the banana protocol. 
> Looks like the code that uses this module is commented out.
> 
> So basically, you can remove all the binaries without worrying. :)
> 
> James

So I'm guessing I can just remove all the binaries and Twisted will work 
  as normal?

Thanks,
Liming




From andrew-twisted at puzzling.org  Fri Aug 27 12:39:56 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 28 Aug 2004 02:39:56 +1000
Subject: [Twisted-Python] Re: Binary files in Twisted
In-Reply-To: <cgnhes$cpo$1@sea.gmane.org>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
	<cgnhes$cpo$1@sea.gmane.org>
Message-ID: <20040827163956.GA8408@frobozz>

On Fri, Aug 27, 2004 at 10:45:16PM +0800, Tsai Li Ming wrote:
[...]
> 
> So I'm guessing I can just remove all the binaries and Twisted will work 
>  as normal?

Yep.  Two of them are strictly optional (they only exist as optimisations),
and the other is only used by twisted.runner.inetd afaik, which almost
no-one uses.

-Andrew.




From z3p at twistedmatrix.com  Fri Aug 27 17:52:18 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Fri, 27 Aug 2004 17:52:18 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <4a0aa9630408261924352d1afc@mail.gmail.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com> <4a0aa9630408261924352d1afc@mail.gmail.com>
Message-ID: <1093643538.9365.0.camel@petra>

On Thu, 2004-08-26 at 22:24 -0400, Michael Trosen wrote:
> Jp,
> thanks for the info.  I  svn'd the latest stuff from the repository,
> built it and installed it, but now get an error if I try my localhost.
>  The only thing I changed in the example program sshsimpleclient.py is
> I changed the USER var to be root, and the HOST variable to be
> localhost..

That error was caused by the example not having support for keyboard-
interactive (usually attached to PAM) authentication.  The example in
r11475 has support for it.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040827/8e108a19/attachment.pgp 

From michaeltrosen at gmail.com  Fri Aug 27 21:21:33 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Fri, 27 Aug 2004 21:21:33 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <1093643538.9365.0.camel@petra>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com> <4a0aa9630408261924352d1afc@mail.gmail.com>
	<1093643538.9365.0.camel@petra>
Message-ID: <4a0aa96304082718211ab3075f@mail.gmail.com>

Paul,

awesome, I just checked out the latest version from svn, r11477, and
now the example works perfectly..

Thanks for all the help!

Michael

On Fri, 27 Aug 2004 17:52:18 -0400, Paul Swartz <z3p at twistedmatrix.com> wrote:
> On Thu, 2004-08-26 at 22:24 -0400, Michael Trosen wrote:
> > Jp,
> > thanks for the info.  I  svn'd the latest stuff from the repository,
> > built it and installed it, but now get an error if I try my localhost.
> >  The only thing I changed in the example program sshsimpleclient.py is
> > I changed the USER var to be root, and the HOST variable to be
> > localhost..
> 
> That error was caused by the example not having support for keyboard-
> interactive (usually attached to PAM) authentication.  The example in
> r11475 has support for it.
> 
> -p
> --
>        Paul Swartz
> (o_    http://z3p.livejournal.com/
> //\    z3p at twistedmatrix.com
> V_/_   AIM: z3penguin  GPG:5CF0B1C9
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
>



From glyph at divmod.com  Fri Aug 27 22:00:34 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 27 Aug 2004 22:00:34 -0400
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
Message-ID: <1093658434.3034.1.camel@localhost>

On Fri, 2004-08-27 at 09:33 -0400, James Y Knight wrote:
> On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> > What are the following libraries that is build when I install Twisted?
> >
> > ./protocols/_c_urlarg.so
> 
> Optional url parsing speedup code -- this has a memory leak in 1.3.0 
> and previous, so you probably don't want to use it in those versions. 
> Removing will cause the slower python code to be used instead. (I don't 
> know how much this helps, it might be a premature optimization anyhow).

I believe this was implemented after profiling of the HTTP parser
revealed that urlarg parsing was the slowest part.  So, for some it
might be "unnecessary" but I don't believe it's "premature" :)




From dave at krondo.com  Fri Aug 27 22:36:15 2004
From: dave at krondo.com (Dave Peticolas)
Date: Fri, 27 Aug 2004 19:36:15 -0700
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <1093658434.3034.1.camel@localhost>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
	<1093658434.3034.1.camel@localhost>
Message-ID: <1093660575.6593.86.camel@oneiros>

On Fri, 2004-08-27 at 19:00, Glyph Lefkowitz wrote:
> On Fri, 2004-08-27 at 09:33 -0400, James Y Knight wrote:
> > On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> > > What are the following libraries that is build when I install Twisted?
> > >
> > > ./protocols/_c_urlarg.so
> > 
> > Optional url parsing speedup code -- this has a memory leak in 1.3.0 
> > and previous, so you probably don't want to use it in those versions. 
> > Removing will cause the slower python code to be used instead. (I don't 
> > know how much this helps, it might be a premature optimization anyhow).
> 
> I believe this was implemented after profiling of the HTTP parser
> revealed that urlarg parsing was the slowest part.  So, for some it
> might be "unnecessary" but I don't believe it's "premature" :)

I'm using 1.3.0 and see the mem leak. I was planning
on applying the patch to _c_urlarg.c so I still get
the speedup.

dave





From general at eepatents.com  Mon Aug 30 12:05:05 2004
From: general at eepatents.com (Ed Suominen)
Date: Mon, 30 Aug 2004 09:05:05 -0700
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
Message-ID: <200408300905.05773.general@eepatents.com>

I think the single biggest contribution anyone could make to Twisted would be 
to help document it. It is a brilliantly written but really opaque bunch of 
code. I think someone who understands what's going on and knows how to write 
English (not necessarily a programmer) should be given SVN write access for 
the sole purpose of adding informative docstrings throughout the source.

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com


> From: angryhicKclown at netscape.net
> I was looking over the page on twistedmatrix.com on contributing, and it
> referred me to here. Over at the mono project, they have a todo-list sort
> of thing, that idle hackers such as myself can work on. I was wondering
> what the best way (besides monetary...I am a poor student) to contribute to
> the Twisted project is?
>
> Thanks,
>
> Peter Hunt



From exarkun at divmod.com  Mon Aug 30 12:54:44 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 30 Aug 2004 12:54:44 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <200408300905.05773.general@eepatents.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com>
Message-ID: <41335BD4.50609@divmod.com>

Ed Suominen wrote:
>
> [snip - give someone svn access to contribute documentation]
> 

   There is already such a person.  She does a great job.

   I think Twisted's documentation (which is not perfect, but is quite 
good, despite occassional comments to the contrary) would benefit 
greatly if the user community contributed improvements to the existing 
documentation.  I'm not talking about any huge task here.  If you find a 
paragraph that is confusingly worded, or a function that is 
undocumented, and you subsequently figure out how things work, rewrite 
that paragraph or come up with a doc string and send it to us:

     http://twistedmatrix.com/bugs/

   Jp



From glyph at divmod.com  Mon Aug 30 14:29:22 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 30 Aug 2004 14:29:22 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <41335BD4.50609@divmod.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com> <41335BD4.50609@divmod.com>
Message-ID: <1093890562.3236.18.camel@localhost>

On Mon, 2004-08-30 at 12:54 -0400, Jp Calderone wrote:

>    I think Twisted's documentation (which is not perfect, but is quite 
> good, despite occassional comments to the contrary) would benefit 
> greatly if the user community contributed improvements to the existing 
> documentation.  I'm not talking about any huge task here.  If you find a 
> paragraph that is confusingly worded, or a function that is 
> undocumented, and you subsequently figure out how things work, rewrite 
> that paragraph or come up with a doc string and send it to us:

It occurs to me that members of the community periodically write
snippets of documentation, then host them elsewhere.  Perhaps some of
you who have done that could talk to Mary and integrate these efforts
with the official documentation?




From james at delx.cjb.net  Mon Aug 30 17:45:30 2004
From: james at delx.cjb.net (James Bunton)
Date: Tue, 31 Aug 2004 07:45:30 +1000
Subject: [Twisted-Python] xmlstream, parser bug & utf16 support
Message-ID: <200408310745.30140.james@delx.cjb.net>

Hi all. I've started using the Jabber support in Twisted for building PyMSNt 
(a python MSN transport).

I seem to have found a bug in the XML parser. Firstly, it seems to raise an 
exception whenever an incoming packet has an attribute xml:lang="en"
For example..
<iq to="someaddr" type="get" xml:lang="en"/> will cause the parser to raise an 
exception.

Traceback (most recent call last):
   File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
526, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
   File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 65, in 
callWithLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 52, in 
callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "/usr/lib/python2.3/site-packages/twisted/python/context.py", line 43, 
in callWithContext
     return func(*args,**kw)
--- <exception caught here> ---
   File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
535, in _doReadOrWrite
     why = getattr(selectable, method)()
   File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line 255, 
in doRead
     return self.protocol.dataReceived(data)
   File 
"/usr/lib/python2.3/site-packages/twisted/protocols/xmlstream.py", line 158, 
in dataReceived
     self.stream.parse(buf)
   File "/usr/lib/python2.3/site-packages/twisted/xish/domish.py", line 593, 
in parse
     self.parser.Parse(buffer)
   File "/usr/lib/python2.3/site-packages/twisted/xish/domish.py", line 602, 
in _onStartElement
     attrs[k.split(" ")] = v


Any help on fixing this would be appreciated.


Also, does anybody have any clues on how to send utf16 characters in the 
xmlstream? I can't seem to work it out.

Thanks in advance..

---

James



From Phil.Hunt at tech.mrc.ac.uk  Tue Aug 31 05:18:44 2004
From: Phil.Hunt at tech.mrc.ac.uk (Phil Hunt)
Date: Tue, 31 Aug 2004 10:18:44 +0100
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <41335BD4.50609@divmod.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com>
	<41335BD4.50609@divmod.com>
Message-ID: <200408311018.45482.Phil.Hunt@tech.mrc.ac.uk>

On Monday 30 August 2004 17:54, Jp Calderone wrote:
> Ed Suominen wrote:
> > [snip - give someone svn access to contribute documentation]
>
>    There is already such a person.  She does a great job.
>
>    I think Twisted's documentation (which is not perfect, but is quite
> good, despite occassional comments to the contrary) would benefit
> greatly if the user community contributed improvements to the existing
> documentation.

Perhaps that would be facilitated if the documentation was on a Wiki.

-- 
Phil Hunt



From mailinglist at ltsai.com  Tue Aug 31 21:19:08 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 01 Sep 2004 09:19:08 +0800
Subject: [Twisted-Python] Resource Tree
Message-ID: <ch382f$52h$1@sea.gmane.org>

Hi

For example, as given in the howto to handle url path segment:
root = Hello()
root.putChild('fred', Hello())
root.putChild('bob', Hello())

Therefore, the following URLs are valid:
http://example.com/
http://example.com/fred
http://example.com/bob
http://example.com/fred/
http://example.com/bob/

How do I handle non-existent url like http://example.com/foo?

Liming




From jason.mobarak at gmail.com  Tue Aug 31 22:52:38 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Tue, 31 Aug 2004 20:52:38 -0600
Subject: [Twisted-Python] Resource Tree
In-Reply-To: <ch382f$52h$1@sea.gmane.org>
References: <ch382f$52h$1@sea.gmane.org>
Message-ID: <b194c919040831195219592f91@mail.gmail.com>

Afaik locateChild and getDynamicChild are intended for this.

Also:

class SomePage (Page):
  child_foo (self, context):
    return someFooResource
  child_bar (self, context):
    return someBarResource

On Wed, 01 Sep 2004 09:19:08 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Hi
> 
> For example, as given in the howto to handle url path segment:
> root = Hello()
> root.putChild('fred', Hello())
> root.putChild('bob', Hello())
> 
> Therefore, the following URLs are valid:
> http://example.com/
> http://example.com/fred
> http://example.com/bob
> http://example.com/fred/
> http://example.com/bob/
> 
> How do I handle non-existent url like http://example.com/foo?
> 
> Liming
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Jason



From mary-twisted at puzzling.org  Tue Aug 31 22:54:14 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 1 Sep 2004 02:54:14 +0000
Subject: [Twisted-Python] Resource Tree
In-Reply-To: <ch382f$52h$1@sea.gmane.org>
References: <ch382f$52h$1@sea.gmane.org>
Message-ID: <20040901025414.GI1442@fuchsia.puzzling.org>

On Wed, Sep 01, 2004, Tsai Li Ming wrote:
> How do I handle non-existent url like http://example.com/foo?

You want to ask web questions on
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-Mary



From seamonkeys at gmail.com  Sun Aug  1 13:40:07 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Sun, 1 Aug 2004 12:40:07 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
Message-ID: <305be8820408011240726f59ee@mail.gmail.com>

I'm wondering if there exists a beginners guide to using Twisted.
Something similar to the online tutorial for Python. I've browsed the
docs on the Twisted website, and haven't been able to find what I'm
looking for. Specifically, a lot of the examples are mostly just code
with brief commentary which doesn't really explain things.

Can someone help me out! :)

Many thanks,

Britt



From exarkun at divmod.com  Sun Aug  1 13:49:19 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 01 Aug 2004 15:49:19 -0400
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be8820408011240726f59ee@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
Message-ID: <410D493F.5030900@divmod.com>

Britt Green wrote:
> I'm wondering if there exists a beginners guide to using Twisted.
> Something similar to the online tutorial for Python. I've browsed the
> docs on the Twisted website, and haven't been able to find what I'm
> looking for. Specifically, a lot of the examples are mostly just code
> with brief commentary which doesn't really explain things.
> 
> Can someone help me out! :)

   You may be interested in the finger tutorial:

     http://twistedmatrix.com/documents/howto/tutorial/index

   Jp



From seamonkeys at gmail.com  Sun Aug  1 15:22:54 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Sun, 1 Aug 2004 14:22:54 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <410D493F.5030900@divmod.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
Message-ID: <305be882040801142276bbec82@mail.gmail.com>

You know, I've looked at the finger tutorial a few times. The problem
is that it doesn't really explain the code very well. Sure, I can look
at the first few examples and make an educated guess. For example,
lets look at the second step:

from twisted.internet import protocol, reactor
class FingerProtocol(protocol.Protocol):
    pass
class FingerFactory(protocol.ServerFactory):
    protocol = FingerProtocol
reactor.listenTCP(1079, FingerFactory())
reactor.run()

The accompanying explaination never really explains what
protocol.Protocol is. Same thing with protocol.ServerFactory. I've
been able to deduce what reactor.listenTCP() and reactor.run() do, but
as someone new to the language, its a bit frustrating to have to make
guesses about what the tutorial code does.

Britt

On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> 
> 
> Britt Green wrote:
> > I'm wondering if there exists a beginners guide to using Twisted.
> > Something similar to the online tutorial for Python. I've browsed the
> > docs on the Twisted website, and haven't been able to find what I'm
> > looking for. Specifically, a lot of the examples are mostly just code
> > with brief commentary which doesn't really explain things.
> >
> > Can someone help me out! :)
> 
>    You may be interested in the finger tutorial:
> 
>      http://twistedmatrix.com/documents/howto/tutorial/index
> 
>    Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From serj_trejo at hotmail.com  Sun Aug  1 15:35:37 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:35:37 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>

I saw Glyph's blog the other day about OSCON and a suggestion by someone 
attending OSCON to write a book about Twisted. I think it would be really 
sweet if there existed an O'Reilly book for Twisted. I think the great 
people who started and contributed to Twisted deserve a standalone book, and 
I think it would be great for bringing more people into the Twisted 
community. It was only a few months ago at the end of May that OSAF 
announced that they're using Twisted (and I think a lot of people have 
respect for OSAF and Mitch Kapor, the father of Lotus Notes): 
http://wiki.osafoundation.org/twiki/bin/view/Chandler/TwistedHome

What are the requirements for writing a book (besides time)?

For the front cover of of the Twisted O'Reilly book, I would like to propose 
that the animal chosen be the Black Ghost Knife fish which is found in the 
mysteryious depths of the Amazon region in South America. These fish are 
amazing creatures. They can be trained to take food from the hand of a human 
and the natives in South America treat these fish with respect. They also 
have an electrical sensory system which helps them find food at night and in 
murky waters. They also have a long undulating bottom find that they use to 
swim forward and backward very rapidly and with precision. Here are some 
photos and links:

http://www.fmnh.org/research_collections/ecp/ecp_sites/Parker_Gentry/images/blackghost_lg.jpg

How about it?

Serg

>From: Jp Calderone <exarkun at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>Date: Sun, 01 Aug 2004 15:49:19 -0400
>
>Britt Green wrote:
>>I'm wondering if there exists a beginners guide to using Twisted.
>>Something similar to the online tutorial for Python. I've browsed the
>>docs on the Twisted website, and haven't been able to find what I'm
>>looking for. Specifically, a lot of the examples are mostly just code
>>with brief commentary which doesn't really explain things.
>>
>>Can someone help me out! :)
>
>   You may be interested in the finger tutorial:
>
>     http://twistedmatrix.com/documents/howto/tutorial/index
>
>   Jp
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Sun Aug  1 15:40:44 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:40:44 -0400
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
Message-ID: <BAY12-F121VAWHTiOJF00040477@hotmail.com>

Britt,

Your sentiments are another reminder as to why a book would be welcome!

Serg

>From: Britt Green <seamonkeys at gmail.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>Date: Sun, 1 Aug 2004 14:22:54 -0700
>
>You know, I've looked at the finger tutorial a few times. The problem
>is that it doesn't really explain the code very well. Sure, I can look
>at the first few examples and make an educated guess. For example,
>lets look at the second step:
>
>from twisted.internet import protocol, reactor
>class FingerProtocol(protocol.Protocol):
>     pass
>class FingerFactory(protocol.ServerFactory):
>     protocol = FingerProtocol
>reactor.listenTCP(1079, FingerFactory())
>reactor.run()
>
>The accompanying explaination never really explains what
>protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>been able to deduce what reactor.listenTCP() and reactor.run() do, but
>as someone new to the language, its a bit frustrating to have to make
>guesses about what the tutorial code does.
>
>Britt
>
>On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> 
>wrote:
> >
> >
> > Britt Green wrote:
> > > I'm wondering if there exists a beginners guide to using Twisted.
> > > Something similar to the online tutorial for Python. I've browsed the
> > > docs on the Twisted website, and haven't been able to find what I'm
> > > looking for. Specifically, a lot of the examples are mostly just code
> > > with brief commentary which doesn't really explain things.
> > >
> > > Can someone help me out! :)
> >
> >    You may be interested in the finger tutorial:
> >
> >      http://twistedmatrix.com/documents/howto/tutorial/index
> >
> >    Jp
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Sun Aug  1 15:46:54 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 17:46:54 -0400
Subject: [Twisted-Python] Calling on Itamar
Message-ID: <BAY12-F8eu05dI1HTXK00040430@hotmail.com>

Itamar,

Your writing style is really good and easy to understand:

http://www.onlamp.com/pub/a/python/2004/01/15/twisted_intro.html

You and Glyph would make great co-authors for the forthcoming Twisted 
O'Reilly Book :-)

Serg

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963




From mary-twisted at puzzling.org  Sun Aug  1 17:47:09 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 09:47:09 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
Message-ID: <20040801234709.GA26455@titus.home.puzzling.org>

On Sun, Aug 01, 2004, Sergio Trejo wrote:
> What are the requirements for writing a book (besides time)?

You pitch to them as per:
http://www.oreilly.com/oreilly/author/intro.html

I suppose the main other requirements are "writing ability", "technical
ability" and last but not least, "money". I may be mistaken about this,
but I doubt income from writing tech books is sufficient to live on.

-Mary



From serj_trejo at hotmail.com  Sun Aug  1 18:11:16 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:11:16 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>


>I suppose the main other requirements are "writing ability", "technical
>ability" and last but not least, "money". I may be mistaken about this,
>but I doubt income from writing tech books is sufficient to live on.
>
>-Mary

If the book encourages growth in the Twisted community (users and 
developers), then the number of businesses whose IT managers may (as a 
result of reviewing the book) decide to use Twisted in the enterprise could 
increase, and this increase usage means that there would likely be more 
money flowing into the Twisted community and thus opportunities for those 
with Twisted expertise who would like to make a living in such a manner. 
Thus, a book should be looked at as an investment with future returns beyond 
merely what the publisher and authors earn on cash flows from the cash 
registers of Amazon, Borders, Barnes and Noble, et al. Come on, lets have 
some future vision. I already picked the animal for the Twisted O'Reilly 
book cover (the Ghost Knife Fish of the Amazon river basin :-)

Availability of books written by authors in the deep throes of knowledge on 
the subject (Glyph, Itamar, Radix, et al) also lend even more credibility to 
the framework. Just ask Zoteca (IMHO they were ahead of their time and had a 
big marketing challenge and on top of that in a down market in 2002 after 
the dot com crash).

Anyway, I'd love to see a book emerge on Twisted. Calling on Glyph. Calling 
on Itamar! Calling on Radix! You guys are awesome and that applause at OSCON 
is not a fluke, it is well deserved.

Best wishes,

Serg

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From mary-twisted at puzzling.org  Sun Aug  1 18:24:37 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 10:24:37 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>
References: <BAY12-F38SGFcWNffVp00040c07@hotmail.com>
Message-ID: <20040802002437.GB26970@titus.home.puzzling.org>

On Sun, Aug 01, 2004, Sergio Trejo wrote:
> Thus, a book should be looked at as an investment with future returns
> beyond merely what the publisher and authors earn on cash flows from
> the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
> on, lets have some future vision.

All I intended to say was that anyone writing such a book would need to
be able to pay rent during its production. This is likely to be the case
even if they are gifted with future vision.

I can't speak for the people you named of course, it may be the case
that they are able to fund (or be funded) for the writing period,
assuming they wish to do so.

-Mary



From mailinglist at ltsai.com  Sun Aug  1 18:30:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 02 Aug 2004 08:30:36 +0800
Subject: [Twisted-Python] Re: Beginners Guide to Twisted Anywhere?
In-Reply-To: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
References: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
Message-ID: <cek1vc$78t$1@sea.gmane.org>

Serg,

That's totally right. I had the same problems when I started using 
Twisted a few days ago. Read and read the finger tutorial countless times.

Liming

Sergio Trejo wrote:
> Britt,
> 
> Your sentiments are another reminder as to why a book would be welcome!
> 
> Serg
> 
>> From: Britt Green <seamonkeys at gmail.com>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Beginners Guide to Twisted Anywhere?
>> Date: Sun, 1 Aug 2004 14:22:54 -0700
>>
>> You know, I've looked at the finger tutorial a few times. The problem
>> is that it doesn't really explain the code very well. Sure, I can look
>> at the first few examples and make an educated guess. For example,
>> lets look at the second step:
>>
>> from twisted.internet import protocol, reactor
>> class FingerProtocol(protocol.Protocol):
>>     pass
>> class FingerFactory(protocol.ServerFactory):
>>     protocol = FingerProtocol
>> reactor.listenTCP(1079, FingerFactory())
>> reactor.run()
>>
>> The accompanying explaination never really explains what
>> protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>> been able to deduce what reactor.listenTCP() and reactor.run() do, but
>> as someone new to the language, its a bit frustrating to have to make
>> guesses about what the tutorial code does.
>>
>> Britt
>>
>> On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> 
>> wrote:
>> >
>> >
>> > Britt Green wrote:
>> > > I'm wondering if there exists a beginners guide to using Twisted.
>> > > Something similar to the online tutorial for Python. I've browsed the
>> > > docs on the Twisted website, and haven't been able to find what I'm
>> > > looking for. Specifically, a lot of the examples are mostly just code
>> > > with brief commentary which doesn't really explain things.
>> > >
>> > > Can someone help me out! :)
>> >
>> >    You may be interested in the finger tutorial:
>> >
>> >      http://twistedmatrix.com/documents/howto/tutorial/index
>> >
>> >    Jp
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _________________________________________________________________
> STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
> http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Sun Aug  1 18:35:03 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:35:03 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
Message-ID: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>

Has anyone (Bob ippolito?) successfully built the optional packages for 
Conch on Mac OS X? I run into Makefile problems when trying to build gmpy, 
PyPAM and pyshadow.

The MacPython package manager < http://undefined.org/python/pimp/ > which is 
referred to by Twisted for OS X doesn't include the optional packages.

The non-optional package (pycrypto) builds and installs just fine on OS X 
10.3.4

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From mary-twisted at puzzling.org  Sun Aug  1 18:42:22 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 2 Aug 2004 10:42:22 +1000
Subject: [Twisted-Python] Re: Beginners Guide to Twisted Anywhere?
In-Reply-To: <cek1vc$78t$1@sea.gmane.org>
References: <BAY12-F121VAWHTiOJF00040477@hotmail.com>
	<cek1vc$78t$1@sea.gmane.org>
Message-ID: <20040802004222.GC26970@titus.home.puzzling.org>

On Mon, Aug 02, 2004, Tsai Li Ming wrote:
> Serg,
> 
> That's totally right. I had the same problems when I started using 
> Twisted a few days ago. Read and read the finger tutorial countless times.

Do be sure to file docs bugs as per:
http://twistedmatrix.com/pipermail/twisted-python/2004-June/008071.html

-Mary



From serj_trejo at hotmail.com  Sun Aug  1 18:59:43 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 01 Aug 2004 20:59:43 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>


>From: Mary Gardiner <mary-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 10:24:37 +1000
>
>On Sun, Aug 01, 2004, Sergio Trejo wrote:
> > Thus, a book should be looked at as an investment with future returns
> > beyond merely what the publisher and authors earn on cash flows from
> > the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
> > on, lets have some future vision.
>
>All I intended to say was that anyone writing such a book would need to
>be able to pay rent during its production. This is likely to be the case
>even if they are gifted with future vision.
>
>I can't speak for the people you named of course, it may be the case
>that they are able to fund (or be funded) for the writing period,
>assuming they wish to do so.
>
>-Mary

Mary, this an excellent question. I don't know the answer. I looked at 
Glyph's blog post again and he said that Alex Martelli was the person who 
nudged him about a book at OSCON a few days ago. Glyph says that Alex is an 
author of other O'Reilly books, so Alex knows the answers to these questions 
about funding the First Edition Twisted O'Reilly book (with Ghost Knife Fish 
as the animal on the front cover :) I found Alex's email address in the 
Twisted Matrix and cc'ed him because I think its a good time to rally around 
the genesis of the book. Really, the time has come.

The people at OSAF have made a decision to use Twisted for Chandler. I think 
this is HUGE. The father of Lotus Notes and his team doesn't make decisions 
haphazardly. I'll bet even they would love to see a book come out on Twisted 
by O'Reilly. Any comments Brian?

Thanks Britt and Liming for your comments today and sharing your experiences 
as a beginner. I just got started myself about a month ago. I'd also love to 
see animated diagrams using SVG and SMIL to show the *flow* of async aspects 
and abstracts associated with Twisted applications.

Glyph, you asked us to write you < 
http://www.livejournal.com/users/glyf/22637.html > , so I am doing as you 
requested!

Calling on Glyph, calling on Itamar, calling on Radix, calling on JP, et 
al!!!!

Serg

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From golux at comcast.net  Sun Aug  1 21:58:21 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 01 Aug 2004 23:58:21 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
References: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
Message-ID: <410DBBDD.2050100@comcast.net>

Sergio Trejo wrote:

> ... the First Edition Twisted O'Reilly book 
> (with Ghost Knife Fish as the animal on the front cover :) ...

+1 on Ghost Knife Fish as the animal on the front cover.  ;)
It looks great -- and appropriately exotic.  Great enthusiasm,
Sergio!  I'll be one of the first in line for the book, mostly
so I could lend it to other people ... but of course I'll make
them buy their own copy, too.  And I'll have to have one with
all the Twisted minions' autographs (which I won't lend out! ;).

Do we get a cool Twisted T-shirt with it?  OK, guess I'm getting
ahead of things ...

Cheers,
Steve



From jasper at peak.org  Sun Aug  1 22:38:51 2004
From: jasper at peak.org (Jasper Phillips)
Date: Sun, 1 Aug 2004 21:38:51 -0700 (PDT)
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040801234709.GA26455@titus.home.puzzling.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
Message-ID: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>


On Mon, 2 Aug 2004, Mary Gardiner wrote:

> On Sun, Aug 01, 2004, Sergio Trejo wrote:
> > What are the requirements for writing a book (besides time)?
> 
> You pitch to them as per:
> http://www.oreilly.com/oreilly/author/intro.html
> 
> I suppose the main other requirements are "writing ability", "technical
> ability" and last but not least, "money". I may be mistaken about this,
> but I doubt income from writing tech books is sufficient to live on.

For some people it is enough to live on, although you still need to survive
the initial starving artist stint.  There's also the potential for more
subtle compensation in the form of contacts, opened doors, and project
promotion -- which could easily be worth more than royalties.

It's true that there are alot of crappy technical books and many authors
make hardly anything.  However Twisted seems to me like it would buck that
trend -- I know I'd be interested in such a book if it were done well.

-Jasper




From glyph at divmod.com  Mon Aug  2 02:17:12 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 2 Aug 2004 04:17:12 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
Message-ID: <5B6D1122-E45C-11D8-87DB-000393C9700E@divmod.com>

On Aug 2, 2004, at 12:38 AM, Jasper Phillips wrote:

> For some people it is enough to live on, although you still need to 
> survive
> the initial starving artist stint.  There's also the potential for more
> subtle compensation in the form of contacts, opened doors, and project
> promotion -- which could easily be worth more than royalties.

The main difficulty that I'm aware of is that many of the principal 
Twisted contributors, myself included, are too busy to even spend much 
time on Twisted itself at the moment, let alone hacking on it, their 
other projects, and writing a book at the same time.

Thank you everyone, for all the enthusiasm, but I'm pretty sure there 
are a few projects in the works, at least one of which should result in 
a Twisted book.  I'd prefer to keep the discussion off-list in the 
future since I really don't know that I can say anything else about 
these projects except that at least some of them exist, somewhere.  
Feel free to drop me a line if you have the time and energy to 
contribute to a book, though.

Personally I'd like to see a Grue on the cover (as that is our official 
mascot) but the ghost knife fish sounds like an interesting animal if 
we have to stick to a real one.

By the way - please do not Cc: me on messages to this list - it's safe 
to assume I subscribe to it and read all the messages :).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040802/4e2eb3a2/attachment.sig>

From tarlano at docomolab-euro.com  Mon Aug  2 02:24:43 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Mon, 02 Aug 2004 10:24:43 +0200
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be882040801142276bbec82@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
Message-ID: <410DFA4B.4000405@docomolab-euro.com>

If you can't figure out chapter 2, the (teaser) finger tutorial, then 
just skip it and go onto chapter 3 "Low-Level Twisted". And then chapter 
4 "High-Level Twisted", etc..

If you do, I pretty much guarantee that your opinion of the 
documentation will change. :)

Anthony


Britt Green wrote:

>You know, I've looked at the finger tutorial a few times. The problem
>is that it doesn't really explain the code very well. Sure, I can look
>at the first few examples and make an educated guess. For example,
>lets look at the second step:
>
>from twisted.internet import protocol, reactor
>class FingerProtocol(protocol.Protocol):
>    pass
>class FingerFactory(protocol.ServerFactory):
>    protocol = FingerProtocol
>reactor.listenTCP(1079, FingerFactory())
>reactor.run()
>
>The accompanying explaination never really explains what
>protocol.Protocol is. Same thing with protocol.ServerFactory. I've
>been able to deduce what reactor.listenTCP() and reactor.run() do, but
>as someone new to the language, its a bit frustrating to have to make
>guesses about what the tutorial code does.
>
>Britt
>
>On Sun, 01 Aug 2004 15:49:19 -0400, Jp Calderone <exarkun at divmod.com> wrote:
>  
>
>>Britt Green wrote:
>>    
>>
>>>I'm wondering if there exists a beginners guide to using Twisted.
>>>Something similar to the online tutorial for Python. I've browsed the
>>>docs on the Twisted website, and haven't been able to find what I'm
>>>looking for. Specifically, a lot of the examples are mostly just code
>>>with brief commentary which doesn't really explain things.
>>>
>>>Can someone help me out! :)
>>>      
>>>
>>   You may be interested in the finger tutorial:
>>
>>     http://twistedmatrix.com/documents/howto/tutorial/index
>>
>>   Jp
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>    
>>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>


-- 

____________________________________________________________
*Anthony Tarlano <mailto:tarlano at docomolab-euro.com>
*
*Senior Researcher - Future Networking Laboratory
DoCoMo Communications Laboratories Europe GmbH
Landsberger Strasse 308-312
80687 Munich, Germany
Tel: +49 89 56 824 212
Cell: +49 177 341 3758
*

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040802/9280578b/attachment.html>

From eugen at leitl.org  Mon Aug  2 03:02:03 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Mon, 2 Aug 2004 11:02:03 +0200
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
Message-ID: <20040802090203.GO1400@leitl.org>

On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:

> It's true that there are alot of crappy technical books and many authors
> make hardly anything.  However Twisted seems to me like it would buck that
> trend -- I know I'd be interested in such a book if it were done well.

If chief developers don't have time to work on Twisted, could a donation fund
help? (Nevermind the book, just for development). I see there's no PayPal 
donate button on the main page nor in the documentation.

I understand Bittorrent only started attracting donations when that button got
enough eyeballage.

Just a thought,

-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040802/04cafcc1/attachment.sig>

From radeex at gmail.com  Mon Aug  2 03:29:52 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 2 Aug 2004 05:29:52 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040802090203.GO1400@leitl.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
Message-ID: <60ed19d4040802022962a9721c@mail.gmail.com>

On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> If chief developers don't have time to work on Twisted, could a donation fund
> help? (Nevermind the book, just for development). I see there's no PayPal
> donate button on the main page nor in the documentation.
> 
> I understand Bittorrent only started attracting donations when that button got
> enough eyeballage.

Well, setting up a single paypal account that would distribute to all
the developers would be useless and/or too much of a hassle to set up,
but maybe we could have a page listing Twisted developers, what parts
they maintain, and their individual Paypal buttons?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From matt at pollenation.net  Mon Aug  2 04:37:41 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 02 Aug 2004 11:37:41 +0100
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <60ed19d4040802022962a9721c@mail.gmail.com>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
	<60ed19d4040802022962a9721c@mail.gmail.com>
Message-ID: <1091443060.28243.20.camel@harold>

On Mon, 2004-08-02 at 10:29, Christopher Armstrong wrote:
> On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> > If chief developers don't have time to work on Twisted, could a donation fund
> > help? (Nevermind the book, just for development). I see there's no PayPal
> > donate button on the main page nor in the documentation.
> > 
> > I understand Bittorrent only started attracting donations when that button got
> > enough eyeballage.
> 
> Well, setting up a single paypal account that would distribute to all
> the developers would be useless and/or too much of a hassle to set up,
> but maybe we could have a page listing Twisted developers, what parts
> they maintain, and their individual Paypal buttons?

Perhaps the time has come for the Twisted Software Foundation and
$40,000 grants. ;-)

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From kwhitesell at adelphia.net  Mon Aug  2 06:49:18 2004
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Mon, 02 Aug 2004 08:49:18 -0400
Subject: [Twisted-Python] Introduction to Twisted
In-Reply-To: <E1BrQj6-0001Cl-01@pyramid.twistedmatrix.com>
References: <E1BrQj6-0001Cl-01@pyramid.twistedmatrix.com>
Message-ID: <410E384E.10408@adelphia.net>

Britt,

	I too am new to Twisted, and am climbing the same learning curve.

	I may or may not be able to help you with your specific questions. 
(I've only been using Twisted for a month.) But I can share some 
thoughts on the subject.

	First, the most helpful thing to me was actually printing the book.pdf 
file in the howto directory. There _is_ something special about having a 
physical copy to flip through at odd times when I'm not sitting at the 
computer. I personally find that for something as new to me as Twisted 
was, I have to read _everything_ three times before _any_ of it begins 
to make sense.

	The second was to have a specific project in mind when getting started. 
I know where I'm headed, so everything I'm looking at is being 
approached from that direction. I know _what_ I'm trying to do, I just 
need to figure out _how_.

	Third, and finally, there are still a number of things I take on faith, 
or just consider it magic. In other words, I don't care about 
understanding how it works at this time. If I need to include certain 
lines of code in my program to make it work, then I include them, and 
don't worry about what they do. I only really get concerned if it 
doesn't do what I need it to, then I start figuring out what to change.

	What I have found, particularly with Python, is that when the 
documentation falls short, I go into the source code itself.

For example, you wrote:

> The accompanying explaination never really explains what
> protocol.Protocol is. Same thing with protocol.ServerFactory. I've
> been able to deduce what reactor.listenTCP() and reactor.run() do, but
> as someone new to the language, its a bit frustrating to have to make
> guesses about what the tutorial code does.

Now, what I can find in the documentation is found in sections 3.3 and 
3.4 of the book.pdf file, pages 99-105. But, if I wanted to go deeper...

The class Protocol is defined in the protocol.py file, as is 
ServerFactory. Following the inheritance chain through the various 
implementations can be confusing, but is ultimately the definitive 
source of information.

Ken




From linuxlist at roggeroetortia.it  Mon Aug  2 08:20:03 2004
From: linuxlist at roggeroetortia.it (Alessandro Barchi)
Date: Mon, 2 Aug 2004 16:20:03 +0200
Subject: [Twisted-Python] nevow Examples 2004 - example1 not work
Message-ID: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>


Hi,

I try to use (and above all) understanding
this framework.

I've a debian stable base installation,

this are the package installed:
ii  python2.3      2.3.4-5        An interactive high-level object-oriented
la
ii  python2.3-nevo 0.2.0-2        Web application templating system for
Python
ii  python2.3-twis 1.3.0-2        Event-based framework for internet
applicati
ii  python2.3-twis 1.3.0-2        Event-based framework for internet
applicati

I dowloaded NevowExamples_2004.zip
when try the example1 i have this error:

********************************************
mail:/home/alex/nevow_samples/Example1# twistd -noy sched.tac
2004/08/02 15:29 CEST [-] Log opened.
2004/08/02 15:29 CEST [-] twistd 1.3.0rc1 (/usr/bin/python2.3 2.3.4)
starting up
2004/08/02 15:29 CEST [-] reactor class:
twisted.internet.default.SelectReactor
2004/08/02 15:29 CEST [-] Loading sched.tac...
2004/08/02 15:29 CEST [-] Traceback (most recent call last):
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 118, in
getApplication
2004/08/02 15:29 CEST [-]     application =
service.loadApplication(filename, style, passphrase)
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/application/service.py", line 319,
in loadApplication
2004/08/02 15:29 CEST [-]     application = sob.loadValueFromFile(filename,
'application', passphrase)
2004/08/02 15:29 CEST [-]   File
"/usr/lib/python2.3/site-packages/twisted/persisted/sob.py", line 213, in
loadValueFromFile
2004/08/02 15:29 CEST [-]     exec data in d, d
2004/08/02 15:29 CEST [-]   File "<string>", line 3, in ?
2004/08/02 15:29 CEST [-] ImportError: No module named schedule
2004/08/02 15:29 CEST [-] Failed to load application: No module named
schedule
2004/08/02 15:29 CEST [-] Traceback (most recent call last):
          File "/usr/bin/twistd", line 36, in ?
            run()
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 184, in run
            app.run(runApp, ServerOptions)
          File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 205, in
run
            runApp(config)
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 174, in runApp
            application = app.getApplication(config, passphrase)
        --- <exception caught here> ---
          File
"/usr/lib/python2.3/site-packages/twisted/application/app.py", line 118, in
getApplication
            application = service.loadApplication(filename, style,
passphrase)
          File
"/usr/lib/python2.3/site-packages/twisted/application/service.py", line 319,
in loadApplication
            application = sob.loadValueFromFile(filename, 'application',
passphrase)
          File "/usr/lib/python2.3/site-packages/twisted/persisted/sob.py",
line 213, in loadValueFromFile
            exec data in d, d
          File "<string>", line 3, in ?

        exceptions.ImportError: No module named schedule


Failed to load application: No module named schedule
2004/08/02 15:29 CEST [-]
********************************************

where I wrong??

Bye

A. Barchi

barchi at roggeroetortia.it

barchi at roggeroetortia.it

  Poligrafico_Roggero_&_Tortia S.p.A.
------------------------------------------
Via Frejus 5 - 10092 Beinasco TO Italy
Tel. +390113499222 - Fax +39 0113498866




From tv at twistedmatrix.com  Mon Aug  2 08:36:15 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 02 Aug 2004 17:36:15 +0300
Subject: [Twisted-Python] nevow Examples 2004 - example1 not work
In-Reply-To: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>
References: <PJEMIFKADBNPJIOLANHBCEBPHIAA.linuxlist@roggeroetortia.it>
Message-ID: <410E515F.4050900@twistedmatrix.com>

In the future, please use the twisted-web mailing list for things 
related to web programming.

Alessandro Barchi wrote:
> mail:/home/alex/nevow_samples/Example1# twistd -noy sched.tac
...
 >         exceptions.ImportError: No module named schedule

"#", eh? Don't be root, root doesn't get . in his PYTHONPATH.

Also, don't be root because that's stupid.



From foom at fuhm.net  Mon Aug  2 09:08:24 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 2 Aug 2004 11:08:24 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040802090203.GO1400@leitl.org>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
Message-ID: <CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>


On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:

> On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>
>> It's true that there are alot of crappy technical books and many 
>> authors
>> make hardly anything.  However Twisted seems to me like it would buck 
>> that
>> trend -- I know I'd be interested in such a book if it were done well.
>
> If chief developers don't have time to work on Twisted, could a 
> donation fund
> help? (Nevermind the book, just for development). I see there's no 
> PayPal
> donate button on the main page nor in the documentation.
>
> I understand Bittorrent only started attracting donations when that 
> button got
> enough eyeballage.
>
> Just a thought,

I doubt that would help much. Most twisted developers are employed 
[many by divmod. bad divmod, stealing all the twisted developers! ;)], 
and thus, spend most of the time writing code for their employer rather 
than twisted. Of course, both overlap sometimes, which is always good. 
A donations button seems like it would only make sense if people 
contributed a large enough amount of money to coerce someone who is 
employed to cease being, and work on twisted more, instead. That seems 
unlikely. Perhaps others feel differently about it, though.

James




From bob at redivi.com  Mon Aug  2 11:17:38 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 2 Aug 2004 13:17:38 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
In-Reply-To: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>
References: <BAY12-F41Wq0GPlrwAn0001d753@hotmail.com>
Message-ID: <DAD877B6-E4A7-11D8-B47B-000A95686CD8@redivi.com>


On Aug 1, 2004, at 8:35 PM, Sergio Trejo wrote:

> Has anyone (Bob ippolito?) successfully built the optional packages 
> for Conch on Mac OS X? I run into Makefile problems when trying to 
> build gmpy, PyPAM and pyshadow.

I'm 95% sure that PyPAM and 100% sure that pyshadow aren't at all 
applicable to OS X.  Have not tried gmpy, but it looks like it's in 
DarwinPorts; http://py-gmpy.darwinports.com/

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040802/aa9e303c/attachment-0002.bin>

From bob at redivi.com  Mon Aug  2 11:23:03 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 2 Aug 2004 13:23:03 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>
References: <BAY12-F15s4KWiGtXsL0001d069@hotmail.com>
	<20040801234709.GA26455@titus.home.puzzling.org>
	<Pine.LNX.4.53.0408012133060.9729@a.shell.peak.org>
	<20040802090203.GO1400@leitl.org>
	<CCB0D4AD-E495-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <9CB87340-E4A8-11D8-B47B-000A95686CD8@redivi.com>


On Aug 2, 2004, at 11:08 AM, James Y Knight wrote:

>
> On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:
>
>> On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>>
>>> It's true that there are alot of crappy technical books and many 
>>> authors
>>> make hardly anything.  However Twisted seems to me like it would 
>>> buck that
>>> trend -- I know I'd be interested in such a book if it were done 
>>> well.
>>
>> If chief developers don't have time to work on Twisted, could a 
>> donation fund
>> help? (Nevermind the book, just for development). I see there's no 
>> PayPal
>> donate button on the main page nor in the documentation.
>>
>> I understand Bittorrent only started attracting donations when that 
>> button got
>> enough eyeballage.
>>
>> Just a thought,
>
> I doubt that would help much. Most twisted developers are employed 
> [many by divmod. bad divmod, stealing all the twisted developers! ;)], 
> and thus, spend most of the time writing code for their employer 
> rather than twisted. Of course, both overlap sometimes, which is 
> always good. A donations button seems like it would only make sense if 
> people contributed a large enough amount of money to coerce someone 
> who is employed to cease being, and work on twisted more, instead. 
> That seems unlikely. Perhaps others feel differently about it, though.

Well it could be used in the same way that other open source projects 
use their money.  Sponsoring hackathons, grants for specific 
development, etc.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040802/9095f597/attachment-0002.bin>

From bkirsch at osafoundation.org  Mon Aug  2 11:34:34 2004
From: bkirsch at osafoundation.org (Brian Kirsch)
Date: Mon, 2 Aug 2004 10:34:34 -0700
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
References: <BAY12-F304SOdLbaENF0001d8f8@hotmail.com>
Message-ID: <38141914-E4AA-11D8-9741-000A95CA1ECC@osafoundation.org>

Sergio,
I would love to see a book on Twisted that covers basic to advanced 
topics. When I first started working with Twisted, I found that initial 
period to be a bit difficult and having had a well written book would 
have made a difference.

I know Brian Warner (warner at lothar.com) was also talking about 
producing a Twisted book. You may wanna contact him as well.


Good luck!

Brian Kirsch - Email Framework Engineer
Open Source Applications Foundation
543 Howard St. 5th Floor 
San Francisco, CA 94105 
(415) 946-3056 

On Aug 1, 2004, at 5:59 PM, Sergio Trejo wrote:

>
>> From: Mary Gardiner <mary-twisted at puzzling.org>
>> Reply-To: Twisted general discussion 
>> <twisted-python at twistedmatrix.com>
>> To: twisted-python at twistedmatrix.com
>> Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>> Date: Mon, 2 Aug 2004 10:24:37 +1000
>>
>> On Sun, Aug 01, 2004, Sergio Trejo wrote:
>> > Thus, a book should be looked at as an investment with future 
>> returns
>> > beyond merely what the publisher and authors earn on cash flows from
>> > the cash registers of Amazon, Borders, Barnes and Noble, et al. Come
>> > on, lets have some future vision.
>>
>> All I intended to say was that anyone writing such a book would need 
>> to
>> be able to pay rent during its production. This is likely to be the 
>> case
>> even if they are gifted with future vision.
>>
>> I can't speak for the people you named of course, it may be the case
>> that they are able to fund (or be funded) for the writing period,
>> assuming they wish to do so.
>>
>> -Mary
>
> Mary, this an excellent question. I don't know the answer. I looked at 
> Glyph's blog post again and he said that Alex Martelli was the person 
> who nudged him about a book at OSCON a few days ago. Glyph says that 
> Alex is an author of other O'Reilly books, so Alex knows the answers 
> to these questions about funding the First Edition Twisted O'Reilly 
> book (with Ghost Knife Fish as the animal on the front cover :) I 
> found Alex's email address in the Twisted Matrix and cc'ed him because 
> I think its a good time to rally around the genesis of the book. 
> Really, the time has come.
>
> The people at OSAF have made a decision to use Twisted for Chandler. I 
> think this is HUGE. The father of Lotus Notes and his team doesn't 
> make decisions haphazardly. I'll bet even they would love to see a 
> book come out on Twisted by O'Reilly. Any comments Brian?
>
> Thanks Britt and Liming for your comments today and sharing your 
> experiences as a beginner. I just got started myself about a month 
> ago. I'd also love to see animated diagrams using SVG and SMIL to show 
> the *flow* of async aspects and abstracts associated with Twisted 
> applications.
>
> Glyph, you asked us to write you < 
> http://www.livejournal.com/users/glyf/22637.html > , so I am doing as 
> you requested!
>
> Calling on Glyph, calling on Itamar, calling on Radix, calling on JP, 
> et al!!!!
>
> Serg
>
> _________________________________________________________________
> Tired of spam? Get advanced junk mail protection with MSN 8. 
> http://join.msn.com/?page=features/junkmail
>




From serj_trejo at hotmail.com  Mon Aug  2 11:41:40 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:41:40 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F26huAOyvuga700045d8d@hotmail.com>


>From: Stephen Waterbury <golux at comcast.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Sun, 01 Aug 2004 23:58:21 -0400
>
>Sergio Trejo wrote:
>
>>... the First Edition Twisted O'Reilly book (with Ghost Knife Fish as the 
>>animal on the front cover :) ...
>
>+1 on Ghost Knife Fish as the animal on the front cover.  ;)
>It looks great -- and appropriately exotic.  Great enthusiasm,
>Sergio!  I'll be one of the first in line for the book, mostly
>so I could lend it to other people ... but of course I'll make
>them buy their own copy, too.  And I'll have to have one with
>all the Twisted minions' autographs (which I won't lend out! ;).

Thanks Steve for the additional enthusiasm. I am biased because I used to 
have a Ghost Knife fish and it would eat from my hand, and the mystery of 
this special creature coming from the Amazon River Basin, plus its 
exoticness would really make for an excellent O'Reilly animal on the front 
cover of the forthcoming book!

Cheers,

Serg

>
>Do we get a cool Twisted T-shirt with it?  OK, guess I'm getting
>ahead of things ...
>
>Cheers,
>Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 11:45:42 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:45:42 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F10ohteCtGobe00045b69@hotmail.com>

A foundation is a great idea. If Apache can do it, Twisted can do it!

>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: radix at twistedmatrix.com,Twisted general discussion 
><twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 02 Aug 2004 11:37:41 +0100
>
>On Mon, 2004-08-02 at 10:29, Christopher Armstrong wrote:
> > On Mon, 2 Aug 2004 11:02:03 +0200, Eugen Leitl <eugen at leitl.org> wrote:
> > > If chief developers don't have time to work on Twisted, could a 
>donation fund
> > > help? (Nevermind the book, just for development). I see there's no 
>PayPal
> > > donate button on the main page nor in the documentation.
> > >
> > > I understand Bittorrent only started attracting donations when that 
>button got
> > > enough eyeballage.
> >
> > Well, setting up a single paypal account that would distribute to all
> > the developers would be useless and/or too much of a hassle to set up,
> > but maybe we could have a page listing Twisted developers, what parts
> > they maintain, and their individual Paypal buttons?
>
>Perhaps the time has come for the Twisted Software Foundation and
>$40,000 grants. ;-)
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 11:49:52 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:49:52 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>


>From: James Y Knight <foom at fuhm.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 11:08:24 -0400
>
>
>On Aug 2, 2004, at 5:02 AM, Eugen Leitl wrote:
>
>>On Sun, Aug 01, 2004 at 09:38:51PM -0700, Jasper Phillips wrote:
>>
>>>It's true that there are alot of crappy technical books and many authors
>>>make hardly anything.  However Twisted seems to me like it would buck 
>>>that
>>>trend -- I know I'd be interested in such a book if it were done well.
>>
>>If chief developers don't have time to work on Twisted, could a donation 
>>fund
>>help? (Nevermind the book, just for development). I see there's no PayPal
>>donate button on the main page nor in the documentation.
>>
>>I understand Bittorrent only started attracting donations when that button 
>>got
>>enough eyeballage.
>>
>>Just a thought,
>
>I doubt that would help much. Most twisted developers are employed [many by 
>divmod. bad divmod, stealing all the twisted developers! ;)], and thus, 
>spend most of the time writing code for their employer rather than twisted. 
>Of course, both overlap sometimes, which is always good. A donations button 
>seems like it would only make sense if people contributed a large enough 
>amount of money to coerce someone who is employed to cease being, and work 
>on twisted more, instead. That seems unlikely. Perhaps others feel 
>differently about it, though.
>
>James

Well, perhaps Divmod and OSAF and other commercial entities could together 
start a Twisted Foundation? Let us not forget that the core element that we 
all want to share in is Twisted. As an example, Divmod might be a separate 
company with separate employees (and perhaps Divmod makes its money from 
consulting -- I don't know, I'm just guessing), but then there's also Mitch 
Kapor's group (OSAF) using Twisted Chandler. And there are others who want 
to share Twisted, so it is in everybody's best interest to keep improving 
Twisted.

Serg

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Mon Aug  2 11:53:17 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 13:53:17 -0400
Subject: [Twisted-Python] Optional packages for Conch (on OS X)
Message-ID: <BAY12-F463RNpggkzpB00045d5e@hotmail.com>


>I'm 95% sure that PyPAM and 100% sure that pyshadow aren't at all 
>applicable to OS X.  Have not tried gmpy, but it looks like it's in 
>DarwinPorts; http://py-gmpy.darwinports.com/
>
>-bob

Thanks Bob for the heads up. I wasn't aware that the two aforementioned 
aren't applicable to OS X. I did try gmpy based on  gmp 4 that I had pulled 
down via Fink, but gmpy make files were not happy. I guess all three are not 
needed for conch on OS X so I'll give conch a whirl with just pycrypto.

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From tim.stebbing at nunatak.com.au  Tue Aug  3 03:29:19 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Tue, 03 Aug 2004 19:29:19 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
References: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
Message-ID: <410F5AEF.9010503@nunatak.com.au>

A Foundation is just that, a -foundation-, for building ontop of. Look 
at the Mozilla foundation; they provide a base framework, and support a 
multitude of applications built with it. Look at the apache foundation, 
they are an edge case, but there we see a group of apps that are built 
loosly around a theme, the apache web services.

I guess the point I'm trying to make is that a Twisted foundation would 
need the capacity to support this sort of community of related projects, 
with the twisted framework as the basic premise for all projects.

I personally think its a great idea, I have stuff I'd love to contribute 
once finished, which do not make sense in terms of being added to the 
twisted framework, in the same way divmod produce associated software, 
Im sure alot of you do too.

However I can't see any form of foundation framework (web based) or 
people to manage it just appearing as if by magic, as Glyph said noone 
has the time anymore.

I think what is being asked for are bounties? If you have something you 
would like to see implemented, rather than donate to a slush fund, offer 
a bounty to the first person to deliver. Perhaps there could be a bounty 
board? ie:

who | what?                                      | how much?
----+--------------------------------------------+-------------
tjs | I'd like to see xml-rpc basic auth support | $300 USD *

There is nothing stopping bounty and foundation ideas from going ahead, 
other than time and energy.

I imagine that reading this email, and the ones prior, there will be 
about 50+ people nodding their heads in agreement, and then thinking "It 
would be great, but I'm not going to take the time to set that all up, 
I'm to busy"

I also imagine, if someone was to take the time to think this through, 
write up some nevow frontend for a twisted foundation and get it all 
going, noone would object to having it hosted under the twisted banner.

so to those of you most vocal on this topic, I suggest you stop 
pontificating and get your hacking gloves on  :)

-tjs

* This is not an offer ;)

-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><



From mailinglist at ltsai.com  Mon Aug  2 18:40:22 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Tue, 03 Aug 2004 08:40:22 +0800
Subject: [Twisted-Python] internet.TCPServer interface
Message-ID: <cemmtr$lvi$1@sea.gmane.org>

Hi,

How do I bind the port number to a specific interface?

application = service.Application('Core')
sc = service.IServiceCollection(application)
internet.TCPServer('7001', myFactory()).setServiceParent(sc)

Liming




From glyph at divmod.com  Mon Aug  2 19:17:11 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 2 Aug 2004 21:17:11 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
References: <BAY12-F19Ee4zadTMVw00022959@hotmail.com>
Message-ID: <D8B1F83A-E4EA-11D8-87DB-000393C9700E@divmod.com>


On Aug 2, 2004, at 1:49 PM, Sergio Trejo wrote:

> Well, perhaps Divmod and OSAF and other commercial entities could 
> together start a Twisted Foundation?

Divmod is a for-profit company.  OSAF is a charity already.  They're 
not both commercial entities.

Divmod is already contributing hugely to Twisted's development by 
keeping everyone who works on it employed in a related role.  Pretty 
much all the IMAP support in Twisted was written on-the-clock for 
Divmod.

> Let us not forget that the core element that we all want to share in 
> is Twisted.

I'm not sure who "we" are here, or what "core" means :)

> As an example, Divmod might be a separate company with separate 
> employees

Separate from whom?

> (and perhaps Divmod makes its money from consulting -- I don't know, 
> I'm just guessing),

This would be just about my worst nightmare :).  Divmod makes its money 
by providing a service directly to consumers, as described at 
http://www.divmod.com.

> but then there's also Mitch Kapor's group (OSAF) using Twisted 
> Chandler. And there are others who want to share Twisted, so it is in 
> everybody's best interest to keep improving Twisted.

We're already doing that now.  What would a Twisted foundation offer 
that's better than the current situation?  There is a significant cost 
to set up a foundation in the first place, remember.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040802/eca6d098/attachment.sig>

From serj_trejo at hotmail.com  Mon Aug  2 21:05:04 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 23:05:04 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>


>From: Glyph Lefkowitz <glyph at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Mon, 2 Aug 2004 21:17:11 -0400
>
>
>On Aug 2, 2004, at 1:49 PM, Sergio Trejo wrote:
>
>>Well, perhaps Divmod and OSAF and other commercial entities could together 
>>start a Twisted Foundation?
>
>Divmod is a for-profit company.  OSAF is a charity already.  They're not 
>both commercial entities.

OSAF is a not-for-profit artificial person born in the U.S. sovereign 
territory as a 501c(3). However, let there by no illusion, as money will be 
streamed by other artificial persons (perhaps created by Kapor and/or 
colleagues and/or anyone and their mother who cares to for that matter) whom 
will make use of the produce birthed under the auspices of OSAF, very 
specifically:

-------------------------------------------------------------------------------------------
http://www.osafoundation.org/OSAF_history.htm

Why a non-profit? Mitch, the successful entrepreneur and venture capitalist, 
had not all of a sudden ceased to believe in the virtues of capitalism. 
Rather, he wanted to make a clear statement: the intent of this effort was 
not to use this as a vehicle to make more money for himself. However, he 
would be very happy for others to make money and intended to find a 
licensing scheme which would permit both non-commercial and commercial 
development on the code base.
-------------------------------------------------------------------------------------------

Thus, the foundations of Divmod and OSAF may be different, but capitalism 
prevails in both scenarios even though each artificial person is not a 
Foundation entity.

>Divmod is already contributing hugely to Twisted's development by keeping 
>everyone who works on it employed in a related role.

It is truly a great thing that Divmod's employees have continued to improve 
Twisted on the Divmod clock. But isn't that part of the deal of the LGPL?

And what about others who are not in the tight circles of the Divmod LLC? Is 
Radix an employee of Divmod? Didn't his blog state today that he's moving to 
Australia soon? Is Radix not a significant contributor to Twisted? What 
about the venerable Bob Ippolito? Who else has contributed significantly to 
Twisted who is not a Divmod employee?

>Pretty much all the IMAP support in Twisted was written on-the-clock for 
>Divmod.

That would be Jp?

>
>>Let us not forget that the core element that we all want to share in is 
>>Twisted.
>
>I'm not sure who "we" are here, or what "core" means :)

Class TwistedGlobalCommunity(HumansInAllTerritoriesOnEarthNotJustAmerica):
     def __init__(self):
        self.we = "The Twisted Community"
        self.core = "from twisted import *"

:-)

>
>>As an example, Divmod might be a separate company with separate employees
>
>Separate from whom?

Ummm, isn't it possible for Foundations as parent artificial persons to fill 
slots in the form of employment of humans? I coudl be wrong, but doesn't 
Mozilla and Apache Foundations employee people?

>
>>(and perhaps Divmod makes its money from consulting -- I don't know, I'm 
>>just guessing),
>
>This would be just about my worst nightmare :).  Divmod makes its money by 
>providing a service directly to consumers, as described at 
>http://www.divmod.com.

Cool. There would be zero conflict of interest between Divmod and a Twisted 
Foundation.

>
>>but then there's also Mitch Kapor's group (OSAF) using Twisted Chandler. 
>>And there are others who want to share Twisted, so it is in everybody's 
>>best interest to keep improving Twisted.
>
>We're already doing that now.  What would a Twisted foundation offer that's 
>better than the current situation?

A Declaration of Independence. The Apache Foundation does not prevent other 
companies that contribute to the Apache Foundation from making money and 
having a comfortable living. I don't see why a Twisted Foundation would be 
any different, if done correctly.

>There is a significant cost to set up a foundation in the first place, 
>remember.

How much dinero to python setup.py TwistedFoundation install?

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Mon Aug  2 21:45:26 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 02 Aug 2004 23:45:26 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>

Tim,

Thanks for some well thought ideas and comments. I'm vocal and I'm 
interested. And my gloves on the keyboard are busy such that my brain can 
grok as much of Twisted as possible. If only I could just plug into the 
Matrix and grok it all in one fell swoop! :-)  I'm learning atop lately, and 
then its on to nevow.

Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you a Nevow 
maestro?) who is willing to collaborate such that we can get the Twisted 
Foundation into motion along the lines of what Tim has suggested? Tim, would 
you be up for helping out in some form or another? Hey, I bet we could get 
some ideas and suggestions from Mitch Kapor's group since they are going to 
be using Twisted and would probably like to see its Declaration of 
Independence. Or maybe someone from Mozilla or Apache can give us some ideas 
of what to do and what not to do since they've been through the trials and 
tribulations of Foundation genesis.

Oh yes, and another thought -- what about the company Zoteca in New York 
City? Surely they would be interested in a Twisted Foundation, no?

One of the great things about having a Foundation is that it doesn't have to 
keep secrets. It is truly open and there are no hidden cards in the deck. At 
the same time, anyone is free to birth artificial persons in any territory 
on Earth who then can utilize the Foundation but also contribute back to it. 
This is why Twisted needs a Declaration of Independence IMHO. I see no 
reason why *not* to create a Twisted Foundation for the benefit of 
humankind.

Imagine, a kid in Africa who has access to the 'Net who is learning computer 
science could participate in the Twisted Foundation and contribute something 
really cool, such as a new protocol, to the code base. Or some child in 
Thailand could use Twisted's Perspective Broker and Nevow to create some 
really neat 'net-based agriculture Web service for the farmers and hill 
tribe people in northeast agricultural Thailand (where Internet cafes 
continue to sprout up). And of course really cool apps and services could be 
created by the whiz gurus in the more modernized countries at the same time.

A Foundation is a self serving entity whose goal is to survive independent 
of any others who make use of it. A Foundation owes nothing to no one, and 
can not be held hostage by anyone. Foundations are good for humanity. 
Foundations have need not retain secrets. Foundations do not impose 
detriment on others. I can't imagine a world without Apache (yikes, we'd all 
be forced to using Microsoft's IIS Web Server).

Any further comments, ideas, brainstorms, suggestions?

Serg

>From: Tim Stebbing <tim.stebbing at nunatak.com.au>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted O'Reilly Book
>Date: Tue, 03 Aug 2004 19:29:19 +1000
>
>A Foundation is just that, a -foundation-, for building ontop of. Look at 
>the Mozilla foundation; they provide a base framework, and support a 
>multitude of applications built with it. Look at the apache foundation, 
>they are an edge case, but there we see a group of apps that are built 
>loosly around a theme, the apache web services.
>
>I guess the point I'm trying to make is that a Twisted foundation would 
>need the capacity to support this sort of community of related projects, 
>with the twisted framework as the basic premise for all projects.
>
>I personally think its a great idea, I have stuff I'd love to contribute 
>once finished, which do not make sense in terms of being added to the 
>twisted framework, in the same way divmod produce associated software, Im 
>sure alot of you do too.
>
>However I can't see any form of foundation framework (web based) or people 
>to manage it just appearing as if by magic, as Glyph said noone has the 
>time anymore.
>
>I think what is being asked for are bounties? If you have something you 
>would like to see implemented, rather than donate to a slush fund, offer a 
>bounty to the first person to deliver. Perhaps there could be a bounty 
>board? ie:
>
>who | what?                                      | how much?
>----+--------------------------------------------+-------------
>tjs | I'd like to see xml-rpc basic auth support | $300 USD *
>
>There is nothing stopping bounty and foundation ideas from going ahead, 
>other than time and energy.
>
>I imagine that reading this email, and the ones prior, there will be about 
>50+ people nodding their heads in agreement, and then thinking "It would be 
>great, but I'm not going to take the time to set that all up, I'm to busy"
>
>I also imagine, if someone was to take the time to think this through, 
>write up some nevow frontend for a twisted foundation and get it all going, 
>noone would object to having it hosted under the twisted banner.
>
>so to those of you most vocal on this topic, I suggest you stop 
>pontificating and get your hacking gloves on  :)
>
>-tjs
>
>* This is not an offer ;)
>
>--
>(o_   Timothy Stebbing, Pythonista, Nunatak Systems
>//\    03 6226 6259, tim.stebbing at nunatak.com.au
>V_/_  ><>--------------------------------------<><
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From seamonkeys at gmail.com  Mon Aug  2 22:07:22 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Mon, 2 Aug 2004 21:07:22 -0700
Subject: [Twisted-Python] To thread or not to thread...
Message-ID: <305be882040802210750f26fab@mail.gmail.com>

I've been reading some of the online documentation for Twisted, and
I'm slowly starting to grasp different things. However, I could use
some help with one point. Suppose I was coding up a chat server, or
perhaps a MUD. Would I need to use something threaded, as opposed to
just using reactor.run()? Or would the latter be sufficient?

Thanks!

Britt



From andrew-twisted at puzzling.org  Mon Aug  2 22:38:43 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 3 Aug 2004 14:38:43 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
References: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
Message-ID: <20040803043843.GA15943@frobozz>

On Mon, Aug 02, 2004 at 11:05:04PM -0400, Sergio Trejo wrote:
[...]
> And what about others who are not in the tight circles of the Divmod LLC? 
> Is Radix an employee of Divmod? Didn't his blog state today that he's 
> moving to Australia soon? Is Radix not a significant contributor to 
> Twisted? What about the venerable Bob Ippolito? Who else has contributed 
> significantly to Twisted who is not a Divmod employee?

The CREDITS file lists most of the significant contributors.

http://svn.twistedmatrix.com/cvs/tags/release-1.3.0/CREDITS?view=auto&rev=10716&root=Twisted

-Andrew.




From foom at fuhm.net  Mon Aug  2 22:43:24 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 3 Aug 2004 00:43:24 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
Message-ID: <A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>


On Aug 2, 2004, at 11:45 PM, Sergio Trejo wrote:
> Imagine, a kid in Africa who has access to the 'Net who is learning 
> computer science could participate in the Twisted Foundation and 
> contribute something really cool, such as a new protocol, to the code 
> base. Or some child in Thailand could use Twisted's Perspective Broker 
> and Nevow to create some really neat 'net-based agriculture Web 
> service for the farmers and hill tribe people in northeast 
> agricultural Thailand (where Internet cafes continue to sprout up). 
> And of course really cool apps and services could be created by the 
> whiz gurus in the more modernized countries at the same time.

Why can't that happen without a Twisted Foundation? Anyone can sign up 
to these here mailing lists, download the source code, improve it, and 
contribute their improvements back. Or make a Really Awesome 
Application(tm) using Twisted, and announce its awesomeness here.

James




From mary-twisted at puzzling.org  Mon Aug  2 22:48:27 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 3 Aug 2004 14:48:27 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040803043843.GA15943@frobozz>
References: <BAY12-F1SpgpZ5PM6LB00025bce@hotmail.com>
	<20040803043843.GA15943@frobozz>
Message-ID: <20040803044827.GA12815@titus.home.puzzling.org>

On Tue, Aug 03, 2004, Andrew Bennetts wrote:
> The CREDITS file lists most of the significant contributors.

If I remember the CVS commit statistics right, cce is the most notable
contributor who isn't in that list. Are there SVN commit statistics now?

-Mary



From tim.stebbing at nunatak.com.au  Tue Aug  3 08:50:42 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Wed, 04 Aug 2004 00:50:42 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
Message-ID: <410FA642.3020406@nunatak.com.au>

Sergio Trejo wrote:
> Tim,
> 
> Thanks for some well thought ideas and comments. I'm vocal and I'm 
> interested. And my gloves on the keyboard are busy such that my brain 
> can grok as much of Twisted as possible. If only I could just plug into 
> the Matrix and grok it all in one fell swoop! :-)  I'm learning atop 
> lately, and then its on to nevow.
> 
> Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you a 
> Nevow maestro?) who is willing to collaborate such that we can get the 
> Twisted Foundation into motion along the lines of what Tim has 
> suggested? Tim, would you be up for helping out in some form or another? 
> Hey, I bet we could get some ideas and suggestions from Mitch Kapor's 
> group since they are going to be using Twisted and would probably like 
> to see its Declaration of Independence. Or maybe someone from Mozilla or 
> Apache can give us some ideas of what to do and what not to do since 
> they've been through the trials and tribulations of Foundation genesis.
> 
> Oh yes, and another thought -- what about the company Zoteca in New York 
> City? Surely they would be interested in a Twisted Foundation, no?
>

Mate, are you any of these people? are you Mary? or Tim? or a member of 
the Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or 
Zoteca, whoever they are?

You can't publically suggest our involvement in your dream, its just not 
very polite, to say the least. Or do you think to excite us into action?

My last email was possibly taken out of context, I was suggesting that I 
didn't oppose you going off and doing these things, some of which I 
didn't think where bad ideas, but you cant expect any help for free, 
Noone else is interested, or seems to see a need.


> One of the great things about having a Foundation is that it doesn't 
> have to keep secrets. It is truly open and there are no hidden cards in 
> the deck. At the same time, anyone is free to birth artificial persons 
> in any territory on Earth who then can utilize the Foundation but also 
> contribute back to it. This is why Twisted needs a Declaration of 
> Independence IMHO. I see no reason why *not* to create a Twisted 
> Foundation for the benefit of humankind.
> 
> Imagine, a kid in Africa who has access to the 'Net who is learning 
> computer science could participate in the Twisted Foundation and 
> contribute something really cool, such as a new protocol, to the code 
> base. Or some child in Thailand could use Twisted's Perspective Broker 
> and Nevow to create some really neat 'net-based agriculture Web service 
> for the farmers and hill tribe people in northeast agricultural Thailand 
> (where Internet cafes continue to sprout up). And of course really cool 
> apps and services could be created by the whiz gurus in the more 
> modernized countries at the same time.
> 
> A Foundation is a self serving entity whose goal is to survive 
> independent of any others who make use of it. A Foundation owes nothing 
> to no one, and can not be held hostage by anyone. Foundations are good 
> for humanity. Foundations have need not retain secrets. Foundations do 
> not impose detriment on others. I can't imagine a world without Apache 
> (yikes, we'd all be forced to using Microsoft's IIS Web Server).
> 

I seriously think you have missed the point. Nothing procludes anyones 
involvment in twisted, its LGPL, and the core developers, let alone the 
ancilliary ones are from all walks of life/regions of the globe.

> Any further comments, ideas, brainstorms, suggestions?
> 
Idea:
Chill out.

Brainstorm:
I think you're insulting people with your lack of understanding, and 
blind ranting.

Suggestion:
Get to know the community and the project before making wild 
assumptions. People will take your suggestions more seriously when your 
credible.



-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From mary-twisted at puzzling.org  Mon Aug  2 22:59:28 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 3 Aug 2004 14:59:28 +1000
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <20040803045928.GB12815@titus.home.puzzling.org>

On Tue, Aug 03, 2004, James Y Knight wrote:
> Why can't that happen without a Twisted Foundation? Anyone can sign up
> to these here mailing lists, download the source code, improve it, and
> contribute their improvements back. Or make a Really Awesome
> Application(tm) using Twisted, and announce its awesomeness here.

Or alternatively, what are the barriers to contributing to Twisted that
you think a foundation would help people overcome? If you have a list of
problems, then suggested solutions can be evaluated properly.

A few things have come up:

 1. many Twisted developers are employed full-time, not all on Twisted or
    Twisted-related projects (and some of them are happy with this of
    course) or have lots of projects and not enough hours

 2. developers of large monolithic projects like a "Twisted book" may
    need/want money to develop the project

 ...

Now as far as I can see, there's not a lot a foundation could do about
(1) or (2) until it had quite a lot of funding (and recall that
"someone"[1] must get it to that stage). It may be that there are other
more informal solutions to these and other issues.

-Mary

[1] The existance of "someone" is a common myth in volunteer projects.



From jml at divmod.com  Mon Aug  2 23:29:48 2004
From: jml at divmod.com (Jonathan Lange)
Date: Tue, 03 Aug 2004 15:29:48 +1000
Subject: [Twisted-Python] Re: To thread or not to thread...
In-Reply-To: <305be882040802210750f26fab@mail.gmail.com>
References: <305be882040802210750f26fab@mail.gmail.com>
Message-ID: <cen7sh$gf3$1@sea.gmane.org>

Britt Green wrote:
> I've been reading some of the online documentation for Twisted, and
> I'm slowly starting to grasp different things. However, I could use
> some help with one point. Suppose I was coding up a chat server, or
> perhaps a MUD. Would I need to use something threaded, as opposed to
> just using reactor.run()? Or would the latter be sufficient?
> 

This seems to be a common stumbling point for newcomers to Twisted.

With Twisted, you don't need threads. You don't want threads. Threads 
are actually harmful: http://www.kuro5hin.org/story/2002/11/18/22112/860

But this doesn't help you write a chat server. How can you do that 
without threads? The answer falls into two parts: how Twisted does it 
and how you use Twisted to do it.

1. How Twisted Does It
When you run a Twisted server, Twisted calls the socket functions 
asynchronously. So, rather than calling a listen function which sits 
there waiting until someone connects, it calls a listen function which 
returns immediately. Then, in the <b>reactor</b> loop, it polls things. 
When something connects _Twisted calls your code_ which it expects to 
_return immediately_. The entire process will wait for your code to return.

So, this leaves a bit of a problem: How do I do stuff that takes time?
The answer is too complicated to go into now. The important bit is that 
your function doesn't compute a value and return it. It returns a 
Deferred -- a promise to return later.


2. How You Get Twisted to do it.

---------------------------------------
port = 8007

class MyProtocol(Protocol):
   def connectionMade(self):
     """someone has connected. do something"""
   def dataReceived(self, data):
     """do stuff with data"""

factory = ServerFactory()
factory.protocol = MyProtocol

reactor.listenTCP(port, factory)
reactor.run()
---------------------------------------

Notice how you don't really call any of your own code?
The code is essentially preparing an object that can be registered with 
Twisted as a server factory.

Every time someone connects to port 8007 on that host, Twisted will 
instantiate an instance of MyProtocol and call connectionMade on it.

Every time someone sends data, Twisted will call dataReceived.

The reactor calls everything. If your connectionMade implementation 
takes ages to return, then the process is in _your_ code, not the 
reactor's. This means the reactor can't listen for data and can't call 
your dataReceived method. All this really means is that your methods 
should return quickly.

Really, that's all you need to know. Your methods should return quickly.
As long as they do that, you don't really need to worry about threads 
because Twisted will take care of concurrency for you.

Recommended Reading:
"Asynchronous Programming" - 
http://www.twistedmatrix.com/documents/howto/async

"Writing Servers" -
http://www.twistedmatrix.com/documents/howto/servers

"Using Deferreds" -
http://www.twistedmatrix.com/documents/howto/defer

"Writing Clients" -
http://www.twistedmatrix.com/documents/howto/clients

"Threads Considered Harmful"
http://www.kuro5hin.org/story/2002/11/18/22112/860


Recommended Actions:
* Try writing a _simple_ client/server app in Twisted. It might even be 
worth manually typing out the "quote of the day" examples in the howtos, 
to force your brain to only deal with each concept as it comes, rather 
than trying to grasp the whole in all it's detail.

* Remember that asynchronous programming is just another style of 
programming.

* Forget about threads. You almost never need them. Especially not in 
Twisted.

cheers,
jml




From glyph at divmod.com  Tue Aug  3 00:49:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 02:49:14 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
In-Reply-To: <410FA642.3020406@nunatak.com.au>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
Message-ID: <3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>

On Aug 3, 2004, at 10:50 AM, Tim Stebbing wrote:

> My last email was possibly taken out of context, I was suggesting that 
> I didn't oppose you going off and doing these things, some of which I 
> didn't think where bad ideas, but you cant expect any help for free, 
> Noone else is interested, or seems to see a need.

This is almost, but not entirely how I feel about the issue.

I do see a need for the Twisted foundation.  I am the progenitor of the 
project, but I am not the principal author any more.  I can barely keep 
up with the fantastic team, and larger community, that has grown up 
around the project.  To my great relief, I receive very few personal 
messages about the framework, which must mean that the world at large 
(correctly) identifies the community at large with the maintenance of 
the project and not me personally.

I have no interest in holding a large body of other peoples' work 
hostage, either on purpose or by accident.  I want the Twisted 
community to flourish and for the framework to become a standard in the 
software development industry.  After all, I wrote Twisted in the first 
place as just _one_ layer of infrastructure for a multi-decade-long 
project; the whole point is to offload the maintenance so that I can 
work my way up the tiers of abstraction to the singularity lurking just 
around the bend.

However, a foundation is a lot of work, and a lot of that work falls 
necessarily upon me as both the original author and principal copyright 
holder.  You can think of this overhead as a litmus test.

I promise you this: I am never going to take the first step to start a 
foundation.  I have lots of other things to do; even if I weren't 
monumentally busy with work, I have a beautiful woman who lives with me 
that I see far too little of.  I have thousands of hobby projects I 
could be working on.  I have lots of friends who could use my volunteer 
assistance, both on their companies and on their charitable projects.

I also have about ten years of sleep to catch up on.

So, if I am going to spend time on the Twisted project, I am going to 
do what I do best, which is to implement the huge laundry list of 
features that remain.  I am not going to file legal paperwork to fill 
some ambiguous, long-term goals that are never going to be personally 
important to me.

So here is the litmus test - a challenge, if you like - for the 
maturity of the Twisted community.  If you are interested in a Twisted 
foundation to hold the copyrights, finance development, accept 
donations, etc., take responsibility for organizing a group to do this, 
and come to me with a proposal.  Be organized enough so that I don't 
have to do a lot of the work, and be prepared to compensate my company 
for the time that I do have to spend.  Normally I don't do consulting, 
but I will persuade my co-workers and management to give me the time to 
do this, since I do think it is a worthy cause, if at least the 
proto-foundation will cover the nominal costs.

Until a sufficiently large group of people in the community and in 
funded organizations (for- or non-profit) see a real need for such a 
foundation, I don't think that the community is mature enough to get 
any benefit from one.  Furthermore I think that the organizational 
overhead that a foundation would impose would actually be a *detriment* 
to the community until the community itself is sufficiently organized 
to be able to muster the infrastructure which surrounds a successful 
foundation.

Such infrastructure includes both organized, knowledgeable, 
self-motivated volunteers who are aware of the legal and technical 
requirements to get started, and enough money to keep the foundation 
alive and functioning for a good long while.  A dead foundation holding 
the copyrights is almost as bad as a dead corporation.

Such an organization would find the initial expenditure for my services 
(and those of the other principal Twisted contributors, which I'm sure 
you'll need for one reason or another) to be a pittance.

Good luck on organizing one, but I don't think the community is quite 
there yet - I would estimate one more year before we reach critical 
mass.   If we make it by then, keep in mind that four years is doing 
VERY VERY well.  Most projects which don't immediately as foundations 
don't reach this point for about ten years.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040803/e2670e11/attachment.sig>

From glyph at divmod.com  Tue Aug  3 00:50:47 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 02:50:47 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <20040803045928.GB12815@titus.home.puzzling.org>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<A73255F0-E507-11D8-8D12-000A95A50FB2@fuhm.net>
	<20040803045928.GB12815@titus.home.puzzling.org>
Message-ID: <72CD0141-E519-11D8-87DB-000393C9700E@divmod.com>


On Aug 3, 2004, at 12:59 AM, Mary Gardiner wrote:

> [1] The existance of "someone" is a common myth in volunteer projects.
                                     ^
I would say the existence of "someone" is *THE* common myth in 
volunteer projects ;-).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040803/00f5bf3c/attachment.sig>

From glyph at divmod.com  Tue Aug  3 01:13:30 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 3 Aug 2004 03:13:30 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
In-Reply-To: <3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
	<3B5B47FA-E519-11D8-87DB-000393C9700E@divmod.com>
Message-ID: <9F9475EC-E51C-11D8-87DB-000393C9700E@divmod.com>


On Aug 3, 2004, at 2:49 AM, Glyph Lefkowitz wrote:
> Most projects which don't immediately as foundations don't reach this 
> point for about ten years.
                                       ^ start


Damnit.  My proofreaders go home at midnight.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040803/f73b217a/attachment.sig>

From serj_trejo at hotmail.com  Tue Aug  3 01:29:48 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 03 Aug 2004 03:29:48 -0400
Subject: [Twisted-Python] Twisted O'Reilly Book
Message-ID: <BAY12-F42gnju8Yp05c00049f4b@hotmail.com>


>>Oh yes, and another thought -- what about the company Zoteca in New York 
>>City? Surely they would be interested in a Twisted Foundation, no?
>>
>
>Mate, are you any of these people? are you Mary? or Tim? or a member of the 
>Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or Zoteca, 
>whoever they are?

As for Zoteca, you may have heard of one of the awesome geniuses who has 
contributed significantly to Twisted (along with all of the others who have 
made contributions, whom I feel IMHO are all geniuses):

---------------------------------------------------------------------------------------------
http://www.zoteca.com/company/management.htm

Itamar Shtull-Trauring - Chief Technology Architect
Itamar has worked professionally in software technology development since 
1994. He studied computer science and mathematics at Tel Aviv University and 
is the author of several patents. He most recently served as the chief 
programmer at an Internet startup. Itamar is actively involved in several 
open-source development projects.

---------------------------------------------------------------------------------------------

I am not any of the people I referred to. I'm just brainstorming out loud 
becuase I've just recently discovered Twisted and I think its the greatest 
thing since sliced bread and so I have a lot of enthusiasm which I do not 
think I am misplacing. If I have inadvertently offended anyone, well it 
certainly was not intentional. And please note that when I asked if you 
would be interested in helping, I never said or implied that I personally or 
the Foundation would be asking you for money or something for "free." I 
don't understand how you misinterpreted me but I'm sorry that you did. I'm 
certainly by no means looking for a handout.

>You can't publically suggest our involvement in your dream, its just not 
>very polite, to say the least. Or do you think to excite us into action?

What is so impolite about asking for your suggestions or feedback or input 
or whatever? By the way, who is "our" in the verbatim "our involvement"? I 
was asking you, but I don't know how you went from "me, Tim" to "our" 
whomever "our" is. Your reaction strikes me as defensive and I don't know 
why.

Anyway, a Foundation isn't about my dream. A Foundation would only work if 
there's enough interest to form one by a group of people in the community. 
If the community is not interested in a Foundation, then I surely won't 
waste my time.

>My last email was possibly taken out of context, I was suggesting that I 
>didn't oppose you going off and doing these things, some of which I didn't 
>think where bad ideas, but you cant expect any help for free, Noone else is 
>interested, or seems to see a need.

No worries. If no one is interested then indeed its all moot.

>>One of the great things about having a Foundation is that it doesn't have 
>>to keep secrets. It is truly open and there are no hidden cards in the 
>>deck. At the same time, anyone is free to birth artificial persons in any 
>>territory on Earth who then can utilize the Foundation but also contribute 
>>back to it. This is why Twisted needs a Declaration of Independence IMHO. 
>>I see no reason why *not* to create a Twisted Foundation for the benefit 
>>of humankind.
>>
>>Imagine, a kid in Africa who has access to the 'Net who is learning 
>>computer science could participate in the Twisted Foundation and 
>>contribute something really cool, such as a new protocol, to the code 
>>base. Or some child in Thailand could use Twisted's Perspective Broker and 
>>Nevow to create some really neat 'net-based agriculture Web service for 
>>the farmers and hill tribe people in northeast agricultural Thailand 
>>(where Internet cafes continue to sprout up). And of course really cool 
>>apps and services could be created by the whiz gurus in the more 
>>modernized countries at the same time.
>>
>>A Foundation is a self serving entity whose goal is to survive independent 
>>of any others who make use of it. A Foundation owes nothing to no one, and 
>>can not be held hostage by anyone. Foundations are good for humanity. 
>>Foundations have need not retain secrets. Foundations do not impose 
>>detriment on others. I can't imagine a world without Apache (yikes, we'd 
>>all be forced to using Microsoft's IIS Web Server).
>>
>
>I seriously think you have missed the point. Nothing procludes anyones 
>involvment in twisted, its LGPL, and the core developers, let alone the 
>ancilliary ones are from all walks of life/regions of the globe.
>
>>Any further comments, ideas, brainstorms, suggestions?
>>
>Idea:
>Chill out.

Idea published, but not accepted.

>
>Brainstorm:
>I think you're insulting people with your lack of understanding, and blind 
>ranting.

If others find me insulting, then let them speak up and if so then I'll shut 
up. If no one wants a Foundation then that's fine. If no one wants a book 
then that's cool, too. "Blind ranting" is not equal to posting some positive 
energy and throwing out the idea of a book and a Foundation. Why such a 
harsh come back from you? I don't understand your reaction. Its the harshest 
of anyone here who has posted in this thread. What is it that I lack 
understanding about? True, I am quite new and don't know a lot about the 
community, but is there anything wrong with being really excited about 
Twisted which I happen to think is really awesome, stellar and well done? 
Does not the community as it exists today want to grow and become larger in 
its expanse and have new people with new ideas coming into it to thus 
continue to evolve Twisted and make it known to more and more of the world? 
Or is the community going to chastise new entries such as me who may be 
green but who believe in Twisted and do find it to be "Networking For the 
Rest of Us"?


>Suggestion:
>Get to know the community and the project before making wild assumptions. 
>People will take your suggestions more seriously when your credible.

Please list to me what my assumptions are and what is wild about them. 
Thanks for the further feedback.

If you will kindly note that I got excited about the idea of a Twisted book 
as a *reaction* to the following post by Glyph to his blog (is this a wild 
assumption?):

------------------------------------------------------------------------------------
http://www.livejournal.com/users/glyf/22053.html

I spoke to Alex Martelli, author of Python in a Nutshell and editor of the 
Python Cookbook. He reminded me that the world does, in fact, need a Twisted 
book, a reminder for which I am very grateful. I think that as a result of 
this conversation a moribund book project may be restarted, and another 
might come into the works. Time will tell.

------------------------------------------------------------------------------------

Anybody who is the author of two O'Reilly Python books sounds pretty darned 
"credible" to me, so Alex Martelli's ideas which inspired Glyph sounded 
enthusiastic to me, so that's how this thread got going in the first place, 
and then the idea of a Foundation sprouted.

Cheers Mate,

Serg

>
>
>
>--
>(o_   Timothy Stebbing, Pythonista, Nunatak Systems
>//\    03 6226 6259, tim.stebbing at nunatak.com.au
>V_/_  ><>--------------------------------------<><
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Tue Aug  3 01:43:39 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 03 Aug 2004 03:43:39 -0400
Subject: [Twisted-Python] the Foundation Litmus Test
Message-ID: <BAY12-F6zoUBUSz0jw600049bf1@hotmail.com>


Thank you Glyph for your time authoring this email which was quite 
professional, eloquent, and well reasoned. I may have been over zealous and 
got a little hyper, but I certainly didn't intend to offend anyone. Perhaps 
another year should pass and then the community can raise the question 
again.

Cheers,

Serg

P.S. (But let us not forget about the book ;-)

>From: Glyph Lefkowitz <glyph at divmod.com>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: [Twisted-Python] the Foundation Litmus Test
>Date: Tue, 3 Aug 2004 02:49:14 -0400
>
>On Aug 3, 2004, at 10:50 AM, Tim Stebbing wrote:
>
>>My last email was possibly taken out of context, I was suggesting that I 
>>didn't oppose you going off and doing these things, some of which I didn't 
>>think where bad ideas, but you cant expect any help for free, Noone else 
>>is interested, or seems to see a need.
>
>This is almost, but not entirely how I feel about the issue.
>
>I do see a need for the Twisted foundation.  I am the progenitor of the 
>project, but I am not the principal author any more.  I can barely keep up 
>with the fantastic team, and larger community, that has grown up around the 
>project.  To my great relief, I receive very few personal messages about 
>the framework, which must mean that the world at large (correctly) 
>identifies the community at large with the maintenance of the project and 
>not me personally.
>
>I have no interest in holding a large body of other peoples' work hostage, 
>either on purpose or by accident.  I want the Twisted community to flourish 
>and for the framework to become a standard in the software development 
>industry.  After all, I wrote Twisted in the first place as just _one_ 
>layer of infrastructure for a multi-decade-long project; the whole point is 
>to offload the maintenance so that I can work my way up the tiers of 
>abstraction to the singularity lurking just around the bend.
>
>However, a foundation is a lot of work, and a lot of that work falls 
>necessarily upon me as both the original author and principal copyright 
>holder.  You can think of this overhead as a litmus test.
>
>I promise you this: I am never going to take the first step to start a 
>foundation.  I have lots of other things to do; even if I weren't 
>monumentally busy with work, I have a beautiful woman who lives with me 
>that I see far too little of.  I have thousands of hobby projects I could 
>be working on.  I have lots of friends who could use my volunteer 
>assistance, both on their companies and on their charitable projects.
>
>I also have about ten years of sleep to catch up on.
>
>So, if I am going to spend time on the Twisted project, I am going to do 
>what I do best, which is to implement the huge laundry list of features 
>that remain.  I am not going to file legal paperwork to fill some 
>ambiguous, long-term goals that are never going to be personally important 
>to me.
>
>So here is the litmus test - a challenge, if you like - for the maturity of 
>the Twisted community.  If you are interested in a Twisted foundation to 
>hold the copyrights, finance development, accept donations, etc., take 
>responsibility for organizing a group to do this, and come to me with a 
>proposal.  Be organized enough so that I don't have to do a lot of the 
>work, and be prepared to compensate my company for the time that I do have 
>to spend.  Normally I don't do consulting, but I will persuade my 
>co-workers and management to give me the time to do this, since I do think 
>it is a worthy cause, if at least the proto-foundation will cover the 
>nominal costs.
>
>Until a sufficiently large group of people in the community and in funded 
>organizations (for- or non-profit) see a real need for such a foundation, I 
>don't think that the community is mature enough to get any benefit from 
>one.  Furthermore I think that the organizational overhead that a 
>foundation would impose would actually be a *detriment* to the community 
>until the community itself is sufficiently organized to be able to muster 
>the infrastructure which surrounds a successful foundation.
>
>Such infrastructure includes both organized, knowledgeable, self-motivated 
>volunteers who are aware of the legal and technical requirements to get 
>started, and enough money to keep the foundation alive and functioning for 
>a good long while.  A dead foundation holding the copyrights is almost as 
>bad as a dead corporation.
>
>Such an organization would find the initial expenditure for my services 
>(and those of the other principal Twisted contributors, which I'm sure 
>you'll need for one reason or another) to be a pittance.
>
>Good luck on organizing one, but I don't think the community is quite there 
>yet - I would estimate one more year before we reach critical mass.   If we 
>make it by then, keep in mind that four years is doing VERY VERY well.  
>Most projects which don't immediately as foundations don't reach this point 
>for about ten years.
><< PGP.sig >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From damon.fasching at sbcglobal.net  Tue Aug  3 02:18:22 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 01:18:22 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
Message-ID: <20040803081822.51107.qmail@web81008.mail.yahoo.com>

Hi,

I am attempting to use pb to distribute a home grown
database.  To test, I have the database split over two
machines and am using a third machine for a client
test application.  The two database machines are
Redhat; the client machine is Debian, for what it's
worth.

I thought the Redhat machines were identically
configured, but when I connect to them, one of them
works fine and the other gives the msg

"111: Connection refused"

As a simple test, I just ran a simple echo server on
each machine and an echo client on the third machine. 
The Redhat machine which worked as a database server
also works as an echo server.  The other machine fails
with the same msg.

I am able to ping, scp, etc to my hearts content among
the three machines.

I have looked at the twisted FAQ, mail archives and
much of what looks relevant under /etc on the Redhat
machines w/o much luck.  This is not a twisted
problem, but can someone give me a clue as to what
system config file I might need to modify and how?

Thanks!
  Damon




From tarlano at docomolab-euro.com  Tue Aug  3 02:52:37 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Tue, 03 Aug 2004 10:52:37 +0200
Subject: [Twisted-Python] Twisted O'Reilly Book
In-Reply-To: <410FA642.3020406@nunatak.com.au>
References: <BAY12-F231n8q0zDXc300038b4a@hotmail.com>
	<410FA642.3020406@nunatak.com.au>
Message-ID: <410F5255.8030509@docomolab-euro.com>

It is interesting to step back and see how complicated this whole book 
epic has become..

Maybe the answer is not a foundation or a group hug via paypal, maybe 
the answer is just one guy who can read and write to just write a book.

I still think the current Twisted book is very good with one criticism. 
Chapter 2 has the title "Tutorial", so new people think they can just 
read that chapter and understand Twisted. The title should be "An 
Introduction Example" instead of "Tutorial", and maybe it should be an 
appendix which is where I personally think it belongs.

Anthony


Tim Stebbing wrote:

> Sergio Trejo wrote:
>
>> Tim,
>>
>> Thanks for some well thought ideas and comments. I'm vocal and I'm 
>> interested. And my gloves on the keyboard are busy such that my brain 
>> can grok as much of Twisted as possible. If only I could just plug 
>> into the Matrix and grok it all in one fell swoop! :-)  I'm learning 
>> atop lately, and then its on to nevow.
>>
>> Maybe there's a nevow expert in the crowd (Mary Gardiner, aren't you 
>> a Nevow maestro?) who is willing to collaborate such that we can get 
>> the Twisted Foundation into motion along the lines of what Tim has 
>> suggested? Tim, would you be up for helping out in some form or 
>> another? Hey, I bet we could get some ideas and suggestions from 
>> Mitch Kapor's group since they are going to be using Twisted and 
>> would probably like to see its Declaration of Independence. Or maybe 
>> someone from Mozilla or Apache can give us some ideas of what to do 
>> and what not to do since they've been through the trials and 
>> tribulations of Foundation genesis.
>>
>> Oh yes, and another thought -- what about the company Zoteca in New 
>> York City? Surely they would be interested in a Twisted Foundation, no?
>>
>
> Mate, are you any of these people? are you Mary? or Tim? or a member 
> of the Apache or Mozilla Foundations? are you Perhaps Mitch Kapor, or 
> Zoteca, whoever they are?
>
> You can't publically suggest our involvement in your dream, its just 
> not very polite, to say the least. Or do you think to excite us into 
> action?
>
> My last email was possibly taken out of context, I was suggesting that 
> I didn't oppose you going off and doing these things, some of which I 
> didn't think where bad ideas, but you cant expect any help for free, 
> Noone else is interested, or seems to see a need.
>
>
>> One of the great things about having a Foundation is that it doesn't 
>> have to keep secrets. It is truly open and there are no hidden cards 
>> in the deck. At the same time, anyone is free to birth artificial 
>> persons in any territory on Earth who then can utilize the Foundation 
>> but also contribute back to it. This is why Twisted needs a 
>> Declaration of Independence IMHO. I see no reason why *not* to create 
>> a Twisted Foundation for the benefit of humankind.
>>
>> Imagine, a kid in Africa who has access to the 'Net who is learning 
>> computer science could participate in the Twisted Foundation and 
>> contribute something really cool, such as a new protocol, to the code 
>> base. Or some child in Thailand could use Twisted's Perspective 
>> Broker and Nevow to create some really neat 'net-based agriculture 
>> Web service for the farmers and hill tribe people in northeast 
>> agricultural Thailand (where Internet cafes continue to sprout up). 
>> And of course really cool apps and services could be created by the 
>> whiz gurus in the more modernized countries at the same time.
>>
>> A Foundation is a self serving entity whose goal is to survive 
>> independent of any others who make use of it. A Foundation owes 
>> nothing to no one, and can not be held hostage by anyone. Foundations 
>> are good for humanity. Foundations have need not retain secrets. 
>> Foundations do not impose detriment on others. I can't imagine a 
>> world without Apache (yikes, we'd all be forced to using Microsoft's 
>> IIS Web Server).
>>
>
> I seriously think you have missed the point. Nothing procludes anyones 
> involvment in twisted, its LGPL, and the core developers, let alone 
> the ancilliary ones are from all walks of life/regions of the globe.
>
>> Any further comments, ideas, brainstorms, suggestions?
>>
> Idea:
> Chill out.
>
> Brainstorm:
> I think you're insulting people with your lack of understanding, and 
> blind ranting.
>
> Suggestion:
> Get to know the community and the project before making wild 
> assumptions. People will take your suggestions more seriously when 
> your credible.
>
>
>


-- 

____________________________________________________________
*Anthony Tarlano <mailto:tarlano at docomolab-euro.com>
*
*Senior Researcher - Future Networking Laboratory
DoCoMo Communications Laboratories Europe GmbH
Landsberger Strasse 308-312
80687 Munich, Germany
Tel: +49 89 56 824 212
Cell: +49 177 341 3758
*

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040803/a94456a0/attachment.html>

From radeex at gmail.com  Tue Aug  3 04:10:13 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 3 Aug 2004 06:10:13 -0400
Subject: [Twisted-Python] Twisted Split FAQ
Message-ID: <60ed19d404080303107ff96616@mail.gmail.com>

For those of you who have been popping into IRC and mailing me
privately asking "What's up with this Twisted split I'm hearing
about?", I wrote a FAQ:

http://twistedmatrix.com/products/splitfaq

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From kwhitesell at adelphia.net  Tue Aug  3 06:10:54 2004
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Tue, 03 Aug 2004 08:10:54 -0400
Subject: [Twisted-Python] To thread or not to thread
In-Reply-To: <E1Brr9B-0001Ia-01@pyramid.twistedmatrix.com>
References: <E1Brr9B-0001Ia-01@pyramid.twistedmatrix.com>
Message-ID: <410F80CE.7090306@adelphia.net>

Britt,

 >I've been reading some of the online documentation for Twisted, and
 >I'm slowly starting to grasp different things. However, I could use
 >some help with one point. Suppose I was coding up a chat server, or
 >perhaps a MUD. Would I need to use something threaded, as opposed
 >to just using reactor.run()? Or would the latter be sufficient?

No need to thread! The foundation of a chat server is in the 
book.pdf file (and therefore in one of the howtos) starting back 
around pg 227.

Ken




From itamar at itamarst.org  Tue Aug  3 08:26:23 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Aug 2004 10:26:23 -0400
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803081822.51107.qmail@web81008.mail.yahoo.com>
References: <20040803081822.51107.qmail@web81008.mail.yahoo.com>
Message-ID: <1091543183.25806.1.camel@sheriffpony>

On Tue, 2004-08-03 at 04:18, Damon Fasching wrote:

> I thought the Redhat machines were identically
> configured, but when I connect to them, one of them
> works fine and the other gives the msg

1. What version Twisted?

2. Can you telnet to this port?

3. Please post the full traceback.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From alecu at vortech.com.ar  Tue Aug  3 09:19:43 2004
From: alecu at vortech.com.ar (Alejandro J. Cura)
Date: Tue, 03 Aug 2004 12:19:43 -0300
Subject: [Twisted-Python] internet.TCPServer interface
In-Reply-To: <cemmtr$lvi$1@sea.gmane.org>
References: <cemmtr$lvi$1@sea.gmane.org>
Message-ID: <1091546383.20774.88.camel@localhost>

You should use:

internet.TCPServer('7001', myFactory(), interface='127.0.0.1')

Acording to the documentation, TCPServer calls reactor.listenTCP with
the arguments given to the constructor, and listenTCP has a named
parameter called interface, which lets you choose which interface you
want to bind to.
--
alecu


On Mon, 2004-08-02 at 21:40, Tsai Li Ming wrote:
> Hi,
> 
> How do I bind the port number to a specific interface?
> 
> application = service.Application('Core')
> sc = service.IServiceCollection(application)
> internet.TCPServer('7001', myFactory()).setServiceParent(sc)
> 
> Liming
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From news at southportal.net  Tue Aug  3 09:25:32 2004
From: news at southportal.net (VanL)
Date: Tue, 03 Aug 2004 09:25:32 -0600
Subject: [Twisted-Python] os.walk - like example
Message-ID: <ceoasd$3gg$1@sea.gmane.org>

Hello,

I am trying to use twisted to produce an os.walk -like traversal of a 
remote ftp site, but I am just not getting my head around it.  Simple 
things I have figured out, like

     def listdir(self, result, fileListProtocol):
         return fileListProtocol.files

     def isdir(self, ftpfile):
         return ftpfile['filetype'] == 'd'

     def islink(self, ftpfile):
         return ftpfile.has_key('linktarget')

Similarly, I see the commands that I need to use.  I just can't seem to 
get it all together into a package that can do a walk of the remote 
directory.  Can anyone help?

Thanks,

VanL




From damon.fasching at sbcglobal.net  Tue Aug  3 13:23:48 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 12:23:48 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
Message-ID: <20040803192348.14438.qmail@web81003.mail.yahoo.com>

Hi,

Here is some additional info.  The problem is probably
not with my twisted installation or my use of twisted.
 Again, everything works fine if I run the server on
machine A; I get the "Connection refused" error if I
run the server on machine B.  I'm 99.9% certain the
twisted installation is the same on both machines.  I
installed at the same time on both.  I'm less certain
about the network configuration.

The requested information follows.

Thanks,
  Damon

>> 1. What version Twisted?

1.3.0

>> 2. Can you telnet to this port?

No, but I can't telnet into the machine on which
everything works either.  No daemon.

>> 3. Please post the full traceback.

Unhandled error in Deferred:
Traceback (most recent call last):
  File
"/usr/local/lib/python2.3/site-packages/twisted/spread/pb.py",
line 1539, in clientConnectionFailed
    self._failAll(reason)
  File
"/usr/local/lib/python2.3/site-packages/twisted/spread/pb.py",
line 1536, in _failAll
    d.errback(reason)
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 274, in errback
    self._startRunCallbacks(fail)
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 313, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File
"/usr/local/lib/python2.3/site-packages/twisted/internet/defer.py",
line 338, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File
"/usr/local/lib/python2.3/site-packages/in_house/dev/barrel/barrelProxy.py",
line 52, in _remoteCallFailed
    raise RuntimeError, "remote call %s failed because
%s" % (msg, reason.value)
exceptions.RuntimeError: remote call getRootObject
failed because Connection was refused by other side:
111: Connection refused.




From damon.fasching at sbcglobal.net  Tue Aug  3 14:16:21 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Tue, 3 Aug 2004 13:16:21 -0700 (PDT)
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <1091562022.25811.11.camel@sheriffpony>
Message-ID: <20040803201621.20656.qmail@web81009.mail.yahoo.com>

Hi Itamar,

--- Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2004-08-03 at 15:23, Damon Fasching wrote:
> 
> > >> 2. Can you telnet to this port?
> > 
> > No, but I can't telnet into the machine on which
> > everything works either.  No daemon.
> 
> Telnet to the port where PB is running I mean. e.g.
> telnet host 9767.

I can't telnet into the PB port on either machine; the
machine where PB does accept connections or the one
where it doesn't.  Wouldn't I need telnetd running to
do this even if I specify the port?

> In any case, AFAICT this a configuration issue on
> your side, and not a
> Twisted bug.

Right.  I didn't post this as a bug and indicated that
I think the problem is with my network configuration. 
(That's why I was poking around in /etc)  However, not
being familiar with Redhat (I use Debian) I don't know
where to look.  The config files I compared look the
same on both machines, so I must not be looking in the
right place.  Because this mailing list is repleat
with networking experts, I thought it would be a good
place to ask.  Some of the other non-experts here may
benefit from a solution, too.

Can anyone tell me what I need to have
enabled/set/configured in order for my Redhat box to
accept connections on a PB server?

Thanks,
  Damon

> 
> 
> -- 
> Itamar Shtull-Trauring    http://itamarst.org
> 
> 
> 




From george at omniti.com  Tue Aug  3 14:29:05 2004
From: george at omniti.com (George Schlossnagle)
Date: Tue, 3 Aug 2004 16:29:05 -0400
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
References: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
Message-ID: <C3E1ABDC-E58B-11D8-8E57-000D93359332@omniti.com>


On Aug 3, 2004, at 4:16 PM, Damon Fasching wrote:

> Hi Itamar,
>
> --- Itamar Shtull-Trauring <itamar at itamarst.org>
> wrote:
>
>> On Tue, 2004-08-03 at 15:23, Damon Fasching wrote:
>>
>>>>> 2. Can you telnet to this port?
>>>
>>> No, but I can't telnet into the machine on which
>>> everything works either.  No daemon.
>>
>> Telnet to the port where PB is running I mean. e.g.
>> telnet host 9767.
>
> I can't telnet into the PB port on either machine; the
> machine where PB does accept connections or the one
> where it doesn't.  Wouldn't I need telnetd running to
> do this even if I specify the port?

No.  telnet simply establishes a tcp connection on that port.  So for 
example, to 'manually' pull a page from a webserver you can do:

telnet www.example.com 80

and then when the prompt returns issue an HTTP request manually a la:

GET / HTTP/1.0


In this case, telnet'ing to the port that your server is supposedly 
binding to will establish whether or not anything is bound to the 
specified port.  You should also run 'netstat -an | grep LISTEN' on 
your server and look for the port number that you are trying to bind 
to.

> Can anyone tell me what I need to have
> enabled/set/configured in order for my Redhat box to
> accept connections on a PB server?

I think you need to figure out what the problem is first.  Is the 
server not binding?  Is it firewalled off, etc.


George




From andrew-twisted at puzzling.org  Tue Aug  3 14:48:10 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 4 Aug 2004 06:48:10 +1000
Subject: [Twisted-Python] 111: Connection refused
In-Reply-To: <20040803201621.20656.qmail@web81009.mail.yahoo.com>
References: <1091562022.25811.11.camel@sheriffpony>
	<20040803201621.20656.qmail@web81009.mail.yahoo.com>
Message-ID: <20040803204810.GC15943@frobozz>

On Tue, Aug 03, 2004 at 01:16:21PM -0700, Damon Fasching wrote:
> Hi Itamar,
> 
> --- Itamar Shtull-Trauring <itamar at itamarst.org>
> wrote:
> 
> > Telnet to the port where PB is running I mean. e.g.
> > telnet host 9767.
> 
> I can't telnet into the PB port on either machine; the
> machine where PB does accept connections or the one
> where it doesn't.  Wouldn't I need telnetd running to
> do this even if I specify the port?

No, telnet just opens a socket.  You can telnet to any port, and it will
establish a connection if the port is open.  You can even send messages to
text-based protocols, such as HTTP, for instance (I've marked the lines I
typed, the rest is the reply from the server):

    $ telnet www.twistedmatrix.com 80
    Trying 198.49.126.190...
    Connected to twistedmatrix.com.
    Escape character is '^]'.
 -> HEAD / HTTP/1.0
 -> 
    HTTP/1.0 200 OK
    Last-Modified: Tue, 03 Aug 2004 09:13:39 GMT
    Content-Length: 6507
    Date: Tue, 03 Aug 2004 20:31:12 GMT
    Accept-Ranges: bytes
    Content-Type: text/html
    Server: TwistedWeb/SVN-trunk
    X-Cache: MISS from home.puzzling.org
    X-Cache-Lookup: MISS from home.puzzling.org:3128
    Connection: close
    
    Connection closed by foreign host.

But if you telnet to a port that isn't open, you'd get:

    $ telnet localhost 1234
    Trying 127.0.0.1...
    telnet: Unable to connect to remote host: Connection refused

Judging from the errors you're seeing, I'd expect that telnet to your PB
port on one machine would give the "Connected to foo." message, and the
other would give "Unable to connect to remote host: Connection refused".
Also, try doing these telnets from a different machine and also locally from
the machines running the PB server, you should get the same results, but if
you don't, that might hint at where the problem is.
    
[...]
> 
> Can anyone tell me what I need to have
> enabled/set/configured in order for my Redhat box to
> accept connections on a PB server?

Well, it depends on what the problem is, and we still don't know that.  It
also depends on what your PB server actually is; there's not really any such
thing as a plain "PB server"; that doesn't really tell us anything about
what it is or how it should run.  What application is this PB server?  Is it
run by twistd (and if so, from a tap or a tac)?  Or is it a script that
calls reactor.run() directly?  Etc.

Have you looked in the log files for the service on both machines?  Perhaps
the service is simply failing to start on one, in which case the reason
should be logged there.

You could also try "netstat -ntlp", and see if there is a process listening
on that port, and if so, is it listening on the right interface (probably
0.0.0.0), and is it the right process.

-Andrew.




From dave at krondo.com  Tue Aug  3 19:46:08 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 03 Aug 2004 18:46:08 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040730043706.GC3875@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz> <1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz> <1091161301.14497.0.camel@oneiros>
	<20040730043706.GC3875@frobozz>
Message-ID: <1091583968.1789.16.camel@oneiros>

On Thu, 2004-07-29 at 21:37, Andrew Bennetts wrote:
> On Thu, Jul 29, 2004 at 09:21:41PM -0700, Dave Peticolas wrote:
> > On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> > > On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> > > [...]
> > > > 
> > > > This is on a Redhat 7.2 system using python2.3 and a newish version
> > > > of twisted. I don't know why the process seems to get lost, but it
> > > > would be nice if Twisted would at least notice the ECHILD and signal
> > > > process termination (or lost, or something).
> > > 
> > > What version of Twisted, exactly?  There's been some changes to the reaping
> > > code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> > > relevant.
> > 
> > I believe it is 1.2.0.
> 
> Ok, then I think it's likely that 1.3.0 fixes your bug.  1.2.0 had a nasty
> hack in its child reaping that went away in 1.3.0.

Yes, I see the diff. That seems to have fixed it,
thanks for the info!

dave





From kndyer at gmail.com  Wed Aug  4 09:12:18 2004
From: kndyer at gmail.com (Kelly Dyer)
Date: Wed, 4 Aug 2004 16:12:18 +0100
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted. Is
	it worth it?
Message-ID: <eaf4bf96040804081278d514bb@mail.gmail.com>

Hi,

I have a number of cpu-heavy signal processing routines that I want to
make remotely available.

Is it worth the energy to use the twisted framework in order to build
an application like this?  I have a cluster available and was hoping
to use its thread-migration to even out the processing and provide
scalability.

If you feel this is a do-able application, any design suggestions for
an excited twisted neophyte would be welcome!

Thanks,
Kelly.



From seamonkeys at gmail.com  Wed Aug  4 11:11:23 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Wed, 4 Aug 2004 10:11:23 -0700
Subject: [Twisted-Python] Echo Server woes
Message-ID: <305be88204080410114439808f@mail.gmail.com>

So I've been playing with the examples on the Twisted website, mostly
the Echo server. When it runs, it immediately echos back whatever
character one types in. So the output looks like so:  aakkee33ccbb::oo

I wanted to rewrite it so that it would repeat things a line at a
time, as opposed to a chracter at  a time. After playing with the code
and getting nowhere, someone on IRC helped me out by telling me I
should use the LineReceiver class from twisted.protocols.basic. What
has me stuck is trying to figure out how to use LineReceiver's
dataReceived() method as opposed to the identically named one on the
example page. I can't really figure out what class the example's
dataReceived() method comes from.

Thanks! :)

Britt



From johnbabwell at mailcan.com  Wed Aug  4 11:57:21 2004
From: johnbabwell at mailcan.com (John Babwell)
Date: Wed, 4 Aug 2004 12:57:21 -0500
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <305be88204080410114439808f@mail.gmail.com>
References: <305be88204080410114439808f@mail.gmail.com>
Message-ID: <20040804125721.2935064c@prana-bindu>

You'd use lineReceived, check out how the finger protocol inherits from
LineReceiver here:
http://twistedmatrix.com/documents/current/howto/tutorial/intro

On Wed, 4 Aug 2004 10:11:23 -0700
Britt Green <seamonkeys at gmail.com> wrote:

> So I've been playing with the examples on the Twisted website, mostly
> the Echo server. When it runs, it immediately echos back whatever
> character one types in. So the output looks like so:  aakkee33ccbb::oo
> 
> I wanted to rewrite it so that it would repeat things a line at a
> time, as opposed to a chracter at  a time. After playing with the code
> and getting nowhere, someone on IRC helped me out by telling me I
> should use the LineReceiver class from twisted.protocols.basic. What
> has me stuck is trying to figure out how to use LineReceiver's
> dataReceived() method as opposed to the identically named one on the
> example page. I can't really figure out what class the example's
> dataReceived() method comes from.
> 
> Thanks! :)
> 
> Britt
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 



From seamonkeys at gmail.com  Wed Aug  4 12:02:41 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Wed, 4 Aug 2004 11:02:41 -0700
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <20040804125721.2935064c@prana-bindu>
References: <305be88204080410114439808f@mail.gmail.com>
	<20040804125721.2935064c@prana-bindu>
Message-ID: <305be882040804110254a2f4ab@mail.gmail.com>

That's perfect! Thanks! :)

On Wed, 4 Aug 2004 12:57:21 -0500, John Babwell <johnbabwell at mailcan.com> wrote:
> You'd use lineReceived, check out how the finger protocol inherits from
> LineReceiver here:
> http://twistedmatrix.com/documents/current/howto/tutorial/intro
> 
> On Wed, 4 Aug 2004 10:11:23 -0700
> 
> 
> Britt Green <seamonkeys at gmail.com> wrote:
> 
> > So I've been playing with the examples on the Twisted website, mostly
> > the Echo server. When it runs, it immediately echos back whatever
> > character one types in. So the output looks like so:  aakkee33ccbb::oo
> >
> > I wanted to rewrite it so that it would repeat things a line at a
> > time, as opposed to a chracter at  a time. After playing with the code
> > and getting nowhere, someone on IRC helped me out by telling me I
> > should use the LineReceiver class from twisted.protocols.basic. What
> > has me stuck is trying to figure out how to use LineReceiver's
> > dataReceived() method as opposed to the identically named one on the
> > example page. I can't really figure out what class the example's
> > dataReceived() method comes from.
> >
> > Thanks! :)
> >
> > Britt
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> --
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From projects at reedflute.com  Wed Aug  4 12:16:35 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 04 Aug 2004 20:16:35 +0200
Subject: [Twisted-Python] Echo Server woes
In-Reply-To: <305be88204080410114439808f@mail.gmail.com>
References: <305be88204080410114439808f@mail.gmail.com>
Message-ID: <41112803.7040303@reedflute.com>

Britt Green wrote:

>I wanted to rewrite it so that it would repeat things a line at a
>time, as opposed to a chracter at  a time. After playing with the code
>and getting nowhere, someone on IRC helped me out by telling me I
>should use the LineReceiver class from twisted.protocols.basic. What
>has me stuck is trying to figure out how to use LineReceiver's
>dataReceived() method as opposed to the identically named one on the
>example page. I can't really figure out what class the example's
>dataReceived() method comes from.
>
>  
>
LineReceiver inherits from Protocol. See : 

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.Protocol.html


Both defines a method dataReceived().

You can also play around with LineReceiver's LineMode() and RawMode(). Try placing a print statement in your ||rawDataReceived| <http://www.twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html#rawDataReceived>|() method (but remember to call superclass method LineReceiver.rawDataReceived() first) 

regards,

Eugene

===============================================
Reedflute Software Solutions

Web                 -> www.reedflute.com
=============================================== 





From jt at parspro.com  Wed Aug  4 13:05:59 2004
From: jt at parspro.com (John Toohey)
Date: Wed, 4 Aug 2004 15:05:59 -0400
Subject: [Twisted-Python] Starting a Twisted client
In-Reply-To: <41112803.7040303@reedflute.com>
References: <305be88204080410114439808f@mail.gmail.com>
	<41112803.7040303@reedflute.com>
Message-ID: <52215262-E649-11D8-A80D-000A95AE562E@parspro.com>

Hi all,

I have two twisted servers that send data to each other. Both servers 
are implemented as plugins, and created with mktap and started with 
twistd -f server.tap. My problem is that I need to have the first 
server call the second server on startup. In my servertap.py I have the 
following :-

    application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService()

     serviceCollection = service.IServiceCollection(application)
     internet.TCPClient("localhost",pbport, 
f.getFactory()).setServiceParent(serviceCollection)
     f.start()

     return serviceCollection

When I run mktap, the f.start() method is called, but when I actually 
run the server with twistd -f server.tap, this method does not get 
called. I need someway to kickstart the server to begin sending data to 
the receiving server.

TIA

John


JT




From foom at fuhm.net  Thu Aug  5 01:06:49 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 5 Aug 2004 03:06:49 -0400
Subject: [Twisted-Python] module interface checking tool
Message-ID: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>

So, I was a bit irritated recently because there is no way to test for 
private name usage in a module's namespace. '__all__' is a good start, 
but it is somewhat poor for a few reasons:
1) it doesn't affect import modname; modname.someprivatename at all so 
you may be using private interfaces without having any way of knowing.
2) Because it doesn't actually affect code people write, it often 
doesn't get updated when new public interfaces get added.
3) until recently it didn't even affect help(module), so users don't 
even know they're using a private name.

So, I wrote a tool to do the access checking. My goal is to have it 
used for testing (solving problems 1&2 *within* twisted, at least), not 
as something that you'd run your production server under.

sandbox/foom/private.py. Currently, it just spits out warnings because 
that way I can actually run through all the twisted tests, but that's 
controllable as a flag. Ideally every module in twisted would define 
__all__ and we could run the entire testsuite with access control 
enabled without raising illegal access exceptions.

To run the twisted tests with this, I temporarily stuck the following 
in twisted/__init__.py:
import private
private.privatizeModulesWithPrefix('twisted')

Much of the output (attached at the end) is from the IMAP tests trying 
to access private bits in order to test them. I'm not sure exactly what 
to do about that -- tests _should_ sometimes be able to access private 
parts, but they should also be restricted, normally, because you want 
to test against the public interface as well. So I may have to create a 
way to annotate some tests as being able to access private attributes 
while disallowing it by default.

Also, rebuild accesses private classes, and it is supposed to, so 
should be given special dispensation.

Besides those, the other things that show up currently are:
twisted.internet.abstract.isIPAddress from 
twisted.internet.iocpreactor.tcp (?)
twisted.internet.protocol.ConsumerToProtocolAdapter from 
twisted.protocols.ftp (?)
twisted.internet.threads._putResultInDeferred from 
twisted.enterprise.adbapi (_deferToThread)

Some of those perhaps should be public (?), but _putResultInDeferred, 
probably should not. IMO these are bugs, either of omission in __all__ 
or access from an inappropriate place. I dunno which.

Also, only 35 out of 559 modules in twisted use __all__. That's sad, 
and should be fixed. I'm sure if that was done, more of these kinds of 
things would show up.

Here's the full list of accesses to private names (I took the output 
and sort|uniq'd it). '=> Yes' means access was granted based on the two 
modules living in the same package. '=> No' means it would have raised 
an exception if I had that enabled.

<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.iocpreactor.tcp (?): => No
<= private twisted.internet.protocol.BaseProtocol from 
twisted.python.rebuild (latestClass): => No
<= private twisted.internet.protocol.ConsumerToProtocolAdapter from 
twisted.protocols.ftp (?): => No
<= private twisted.internet.threads._putResultInDeferred from 
twisted.enterprise.adbapi (_deferToThread): => No
<= private twisted.mail.imap4.Command from twisted.mail.test.test_imap 
(append): => No
<= private twisted.mail.imap4.DontQuoteMe from 
twisted.mail.test.test_imap (testQuoteAvoider): => No
<= private twisted.mail.imap4.FileProducer from 
twisted.mail.test.test_imap (testFileProducer): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testMultipleMultiPart): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testSingleMultiPart): => No
<= private twisted.mail.imap4.MessageProducer from 
twisted.mail.test.test_imap (testSinglePart): => No
<= private twisted.mail.imap4.MessageSet from 
twisted.mail.test.test_imap (?): => No
<= private twisted.mail.imap4.MessageSet from 
twisted.mail.test.test_imap (testSetFlags): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserBody): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserMacros): => No
<= private twisted.mail.imap4._FetchParser from 
twisted.mail.test.test_imap (testFetchParserSimple): => No
<= private twisted.mail.imap4._formatHeaders from 
twisted.mail.test.test_imap (testFetchHeaders): => No
<= private twisted.mail.imap4._formatHeaders from 
twisted.mail.test.test_imap (testHeaderFormatter): => No
<= private twisted.mail.imap4.collapseNestedLists from 
twisted.mail.test.test_imap (testFiles): => No
<= private twisted.mail.imap4.collapseNestedLists from 
twisted.mail.test.test_imap (testQuoteAvoider): => No
<= private twisted.mail.imap4.collapseStrings from 
twisted.mail.test.test_imap (testStringCollapser): => No
<= private twisted.mail.imap4.decoder from twisted.mail.test.test_imap 
(testDecode): => No
<= private twisted.mail.imap4.parseIdList from 
twisted.mail.test.test_imap (testIdListParser): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (_searchWork): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (testLiterals): => No
<= private twisted.mail.imap4.parseNestedParens from 
twisted.mail.test.test_imap (testParenParser): => No
<= private twisted.mail.imap4.splitQuoted from 
twisted.mail.test.test_imap (testQuotedSplitter): => No
<= private twisted.mail.imap4.wildcardToRegexp from 
twisted.mail.test.test_imap (testWildcard): => No
<= private twisted.mail.imap4.wildcardToRegexp from 
twisted.mail.test.test_imap (testWildcardNoDelim): => No
<= private twisted.persisted.dirdbm.ALLOW_TWISTED_REBUILD from 
twisted.python.rebuild (rebuild): => No
<= private twisted.web.xmlrpc.addIntrospection from 
twisted.web.test.test_xmlrpc (?): => No

<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.base (resolve): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.tcp (resolveAddress): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.udp (connect): => Yes
<= private twisted.internet.abstract.isIPAddress from 
twisted.internet.udp (startListening): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.ssl (?): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.ssl (__init__): => Yes
<= private twisted.internet.base.BaseConnector from 
twisted.internet.tcp (?): => Yes

James




From glyph at divmod.com  Thu Aug  5 02:02:07 2004
From: glyph at divmod.com (glyph)
Date: Thu, 05 Aug 2004 04:02:07 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <1091692927.2999.7.camel@localhost>

On Thu, 2004-08-05 at 03:06 -0400, James Y Knight wrote:
> So, I was a bit irritated recently because there is no way to test for 
> private name usage in a module's namespace. '__all__' is a good start, 
> but it is somewhat poor for a few reasons:

WOW.  THank you for doing this, james.  This is more useful than
PyChecker output, I think.  It's also a little depresing.  We really
need a better-documented public API!

I have created 2 new issues for this, one for adding __all__ to all
modules and one for testing that it's obeyed properly.  #658 and #659,
respectively.  They are tentatively assigned to you, but I expect you
can carve up Twisted and motivate others to actually do most of the
work :).




From foom at fuhm.net  Thu Aug  5 11:40:23 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 5 Aug 2004 13:40:23 -0400
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted.
	Is it worth it?
In-Reply-To: <eaf4bf96040804081278d514bb@mail.gmail.com>
References: <eaf4bf96040804081278d514bb@mail.gmail.com>
Message-ID: <87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>

On Aug 4, 2004, at 11:12 AM, Kelly Dyer wrote:
> Hi,
>
> I have a number of cpu-heavy signal processing routines that I want to
> make remotely available.
>
> Is it worth the energy to use the twisted framework in order to build
> an application like this?  I have a cluster available and was hoping
> to use its thread-migration to even out the processing and provide
> scalability.
>
> If you feel this is a do-able application, any design suggestions for
> an excited twisted neophyte would be welcome!

Are you going to be writing your routines in python? If so, you cannot 
use threads, as python only allows one thread at a time to run python 
bytecode, thus making any CPUs above one useless. Also, what clustering 
software are you using? The ones I've seen used in the past only allow 
migration of unthreaded programs, as shared memory consistency across a 
network is hard (and/or slow).

What you can do, though, (and something I would generally recommend, 
although I don't know the specifics of your problem), is to spawn off 
multiple *processes* to handle the long running routines, and use 
Twisted to coordinate the network and process IO.

If you are not writing your routines in python and your cluster 
software actually does support migration of threads, you can probably 
get away with running threads in twisted.

James




From eugen at leitl.org  Thu Aug  5 12:23:10 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Thu, 5 Aug 2004 20:23:10 +0200
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted.
	Is it worth it?
In-Reply-To: <87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>
References: <eaf4bf96040804081278d514bb@mail.gmail.com>
	<87AAEEC1-E706-11D8-8D12-000A95A50FB2@fuhm.net>
Message-ID: <20040805182310.GB1400@leitl.org>

On Thu, Aug 05, 2004 at 01:40:23PM -0400, James Y Knight wrote:

> If you are not writing your routines in python and your cluster 
> software actually does support migration of threads, you can probably 
> get away with running threads in twisted.

I presume everybody here is familiar with SPaSM
http://www.python.org/workshops/1997-10/proceedings/beazley.html
and MMTK http://starship.python.net/crew/hinsen/MMTK/ , PyMOL
http://pymol.sourceforge.net/ , Python-MPI
http://packages.debian.org/unstable/math/python-mpi
etc.?

-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040805/2d579938/attachment.sig>

From general at eepatents.com  Thu Aug  5 12:48:20 2004
From: general at eepatents.com (Ed Suominen)
Date: Thu, 5 Aug 2004 11:48:20 -0700
Subject: [Twisted-Python] hosting cpu intensive algorithms
	=?iso-8859-1?q?with=0Atwisted=2E=09Is_it_worth?= it?
In-Reply-To: <E1BsmX7-0006ZL-02@pyramid.twistedmatrix.com>
References: <E1BsmX7-0006ZL-02@pyramid.twistedmatrix.com>
Message-ID: <200408051148.21079.general@eepatents.com>

Now that's an interesting idea...

twisted.cluster:

Cluster:
"""
Maintains multiple process nodes of a LAN cluster

Vaporware donated to the public domain by Ed Suominen

"""
	def __init__(self, listenPort)
		"""
		Listens on listenPort for requests by individual nodes to join the cluster
		"""

	def generator(self, callable, sequence, **kw):
		"""
		Yields result of callable(sequenceItem, **kw) over items of sequence,
		which are distributed among cluster nodes for processing. Each run of
		callable() cannot assume anything about the order of the item it is given
		in the sequence.
		"""


> From: James Y Knight <foom at fuhm.net>
> Subject: Re: [Twisted-Python] hosting cpu intensive algorithms with
> 	twisted.	Is it worth it?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <87AAEEC1-E706-11D8-8D12-000A95A50FB2 at fuhm.net>
> Content-Type: text/plain; charset=US-ASCII; format=flowed
>
> On Aug 4, 2004, at 11:12 AM, Kelly Dyer wrote:
> > Hi,
> >
> > I have a number of cpu-heavy signal processing routines that I want to
> > make remotely available.
> >
> > Is it worth the energy to use the twisted framework in order to build
> > an application like this?  I have a cluster available and was hoping
> > to use its thread-migration to even out the processing and provide
> > scalability.
> >
> > If you feel this is a do-able application, any design suggestions for
> > an excited twisted neophyte would be welcome!
>
> Are you going to be writing your routines in python? If so, you cannot
> use threads, as python only allows one thread at a time to run python
> bytecode, thus making any CPUs above one useless. Also, what clustering
> software are you using? The ones I've seen used in the past only allow
> migration of unthreaded programs, as shared memory consistency across a
> network is hard (and/or slow).
>
> What you can do, though, (and something I would generally recommend,
> although I don't know the specifics of your problem), is to spawn off
> multiple *processes* to handle the long running routines, and use
> Twisted to coordinate the network and process IO.
>
> If you are not writing your routines in python and your cluster
> software actually does support migration of threads, you can probably
> get away with running threads in twisted.
>
> James



From mso at oz.net  Thu Aug  5 14:12:59 2004
From: mso at oz.net (Mike Orr)
Date: Thu, 5 Aug 2004 13:12:59 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <305be882040801142276bbec82@mail.gmail.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
Message-ID: <20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>

On Sun, Aug 01, 2004 at 02:22:54PM -0700, Britt Green wrote:
> You know, I've looked at the finger tutorial a few times. The problem
> is that it doesn't really explain the code very well. 

I wrote some notes to try to explain the Finger tutorial.
http://sluggo.kicks-ass.org/twisted_finger_gentle.txt

-- 
-Mike Orr (aka. Sluggo), mso at oz.net  (iron at sense-sea-MegaSub-1-465.oz.net)
   http://sluggo.kicks-ass.org/                  Cxu vi parolas Esperante?



From matt at dalchemy.com  Thu Aug  5 14:53:46 2004
From: matt at dalchemy.com (Matt Feifarek)
Date: Thu, 05 Aug 2004 16:53:46 -0400
Subject: [Twisted-Python] Question on using processes
Message-ID: <41129E5A.8070406@dalchemy.com>

I'm using twisted.internet.utils.getProcessOutput() to run commands from 
a reactor.

I've pretty much got this working okay (with a few false starts related 
to how args are put together... you can't send in a big long string; you 
literally have to make a list of argument words... what a PITA).

Now, I've got a command that needs to pipe something through another 
command, something like this:

/bin/cat foo.txt | /usr/bin/tail

If I set up my "process" like this:

CMD = "/bin/cat"
ARGS = [ "foo.txt", "|", "/usr/bin/tail" ]
d = utils.getProcessOutput( CMD, ARGS )

It doesn't work. Now, this is a stupidly-trivial example, but it seems 
to have trouble with thinking that the pipe symbol is a filename. My 
less trivial example merely hangs up the console and does nothing.

I figured that this had something to do with the pipe (obviously) so I 
tried going deeper and using reactor.spawnProcess...

This is a little over my head, but I tried using an instance of 
twisted.internet.protocol.ProcessProtocol as the protocol, and turning 
on usePTY. Still, no dice.

So, my next theory is that it has something to do with the way that the 
process is literally launched. This is extremely low level, and has 
resisted my attempts to figure it out even with a debugger and stepping 
through.

My question: what's the best way to go about this?

Options:
- write my own Process protocol somehow?
- figure out what child descriptors may be required to fix this?
- simply make a bash script that wraps up the pipe inside of a black box 
and make the reactor call that?

Thanks!



From screwtape at froup.com  Thu Aug  5 16:12:13 2004
From: screwtape at froup.com (Tim Allen)
Date: Fri, 6 Aug 2004 08:12:13 +1000
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41129E5A.8070406@dalchemy.com>
References: <41129E5A.8070406@dalchemy.com>
Message-ID: <80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>

On 6 Aug 2004, at 06:53, Matt Feifarek wrote:
> I'm using twisted.internet.utils.getProcessOutput() to run commands 
> from a reactor.
>
> I've pretty much got this working okay (with a few false starts 
> related to how args are put together... you can't send in a big long 
> string; you literally have to make a list of argument words... what a 
> PITA).

This is due to Python's (and C's) Unix heritage. The kernel call to 
spawn a new process takes the full path to the executable, and an array 
of null-terminated strings which are the arguments. This can be quite 
tedious to set up in C, but shouldn't be too painful under Python. 
Contrast this behaviour with MS-DOS and Win32, whose 'new process' API 
takes a single string of command-line parameters, and passes that 
single string directly to the new process.

When you type a command with some parameters at the command line, how 
does the program wind up with a sequence of command-line parameters?

Under Unix, the shell (usually /bin/sh or compatible) reads through the 
command-line and does all its special parsing - adding environment 
variables, constructing pipes, breaking up the string into 
space-delimited chunks, doing backslash-escaping and so forth, it 
searches the PATH environment variable for the location of the named 
program, and winds up with a full executable path and an array of 
string parameters which it hands off to the kernel, and your process is 
started. Because most shells have a well-designed meta-character set, 
you can spawn pretty much any program you like with pretty much any 
command-line you like (except for embedded nulls, of course) grouped in 
any way you like.

Under DOS/Win32, the shell (usually CMD.EXE) takes the command-line you 
give, searches $PATH for the executable, and hands the executable's 
path and the command-line string off to the kernel. The program that's 
started is responsible for parsing the given string into a list of 
parameters, and of course they all do it slightly differently. Some 
don't let you use filenames with spaces, some let you use filenames 
with spaces but don't let you use filenames with quotes, and so forth.

For example, under Unix, I can use 'python -c' to make instant Python 
scripts:

	python -c 'print "Hello, \"World\""'

Under Win32, I don't believe I can do the above step because CMD.EXE 
always treats double-quotes as delimiting a filename with spaces. I 
can't make a single commandline parameter that includes embedded 
quotes.

> Now, I've got a command that needs to pipe something through another 
> command, something like this:
>
> /bin/cat foo.txt | /usr/bin/tail

The reason for this is that piping is set up and executed by the shell, 
not the kernel. What you really need (to solve both these problems) is 
a way to get the shell to do all the dirty work for you - and luckily, 
such a feature exists. For the above example, instead of executing 
/bin/cat and handing it the other parameters try executing /bin/sh and 
giving it the parameters ['-c', '/bin/cat foo.txt | /usr/bin/tail']




From damon.fasching at sbcglobal.net  Thu Aug  5 16:59:09 2004
From: damon.fasching at sbcglobal.net (Damon Fasching)
Date: Thu, 5 Aug 2004 15:59:09 -0700 (PDT)
Subject: [Twisted-Python] Re: 111: Connection refused
Message-ID: <20040805225909.72780.qmail@web81006.mail.yahoo.com>


Hi,

I've made a few more checks regarding my connection
refused error.

> Well, it depends on what the problem is, and we
still
> don't know that.  It also depends on what your PB
> server actually is; there's not really any such
thing > as a plain "PB server"; that doesn't really
tell us
> anything about what it is or how it should run. 
What
> application is this PB server?  Is it run by twistd
> (and if so, from a tap or a tac)?  Or is it a script
> that calls reactor.run() directly?  Etc.

> You could also try "netstat -ntlp", and see if there

> is a process  listening on that port, and if so, is
> it listening on the right interface (probably
> 0.0.0.0), and is it the right process.

> -Andrew.

I've reproduced the problem with a very bare server
script, the following 4 lines:

from twisted.spread import pb
from twisted.internet import reactor
reactor.listenTCP(8789, pb.PBServerFactory(pb.Root()))
reactor.run()

I have two machines, shuttle-1 and shuttle-2.  I have
no problem on shuttle-1, I get the "Connection
refused" error on shuttle-2.

Before starting the server, "telnet localhost 8789",
"telnet shuttle-1 8789" and "telnet shuttle-2 8789"
all fail with the following messge, as expected, from
either machine.

Trying <ip add>...
telnet: connect to address <ip add>: Connection
refused

After starting the server on both machines,

~ telnet localhost 8789

works on both machines, and

~ telnet shuttle-1 8789

works from shuttle-2, but 

~ telnet shuttle-2 8789

from shuttle-1 fails with the Connection refused
error.

In addition, after starting the server, the following
line is added to the output of "netstat -ntlp" on both
machines

tcp        0      0 0.0.0.0:8789            0.0.0.0:* 
             LISTEN      4040/python

modulo the PID.

Is there somewhere else to look?

Also, perhaps someone can suggest a terse introduction
to Linux networking.

Thanks,
  Damon




From corydodt at twistedmatrix.com  Thu Aug  5 17:47:38 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 05 Aug 2004 16:47:38 -0700
Subject: [Twisted-Python] Beginners Guide to Twisted Anywhere?
In-Reply-To: <20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
References: <305be8820408011240726f59ee@mail.gmail.com>	<410D493F.5030900@divmod.com>	<305be882040801142276bbec82@mail.gmail.com>
	<20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
Message-ID: <4112C71A.4040204@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Great notes!  The extra detail on Deferred and Application should be
especially helpful.  Can we get edit this a bit and get it into the
official docs? (I know.. open a doc bug.)

Mike Orr wrote:
|
| I wrote some notes to try to explain the Finger tutorial.
| http://sluggo.kicks-ass.org/twisted_finger_gentle.txt
|

Just one nit, since you had a question mark anyway:

| Note that the word "service" is used here slightly differently than
| how NT defines it.  'twistd' is an NT service and can be managed by NT
| tools (true?), but child services are not visible to NT tools.
~         ^^^^^
Erm, false for the first clause of the last sentence.  twistd runs only
in the foreground on Windows.  Services on Windows are a little more
involved than daemons on Unix; think sysvinit and background execution
combined -- whereas daemons are just the background execution part.
There's a tool called tap2ntsvc in sandbox/moonfallen if you're curious
about how to make Twisted processes run as NT services.

You were correct in saying child services are not visible to NT tools,
when you do manage to service-ize a twisted process.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBEsca3A5SrXAiHQcRAnrdAJ9CGBD80SAw5z4kOCo4X/GBDJ+segCghoHJ
f4XqBeNcVH/H/3H5gmib18Q=
=AHRN
-----END PGP SIGNATURE-----



From matt.feifarek at gmail.com  Thu Aug  5 18:28:14 2004
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 5 Aug 2004 20:28:14 -0400
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>
References: <41129E5A.8070406@dalchemy.com>
	<80DBD155-E72C-11D8-A3F1-000A95A61ED2@froup.com>
Message-ID: <6fb6dbfe040805172820a6af46@mail.gmail.com>

Thank you for your very informative reply. I didn't realize that the
reactor was getting THAT low-level. Cool.

On Fri, 6 Aug 2004 08:12:13 +1000, Tim Allen <screwtape at froup.com> wrote:

> The reason for this is that piping is set up and executed by the shell,
> not the kernel. What you really need (to solve both these problems) is
> a way to get the shell to do all the dirty work for you - and luckily,
> such a feature exists. For the above example, instead of executing
> /bin/cat and handing it the other parameters try executing /bin/sh and
> giving it the parameters ['-c', '/bin/cat foo.txt | /usr/bin/tail']



From andrew-twisted at puzzling.org  Thu Aug  5 18:53:36 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 6 Aug 2004 10:53:36 +1000
Subject: [Twisted-Python] Re: 111: Connection refused
In-Reply-To: <20040805225909.72780.qmail@web81006.mail.yahoo.com>
References: <20040805225909.72780.qmail@web81006.mail.yahoo.com>
Message-ID: <20040806005336.GB30355@frobozz>

On Thu, Aug 05, 2004 at 03:59:09PM -0700, Damon Fasching wrote:
[...]
> 
> After starting the server on both machines,
> 
> ~ telnet localhost 8789
> 
> works on both machines, and
> 
> ~ telnet shuttle-1 8789
> 
> works from shuttle-2, but 
> 
> ~ telnet shuttle-2 8789
> 
> from shuttle-1 fails with the Connection refused
> error.
> 
> In addition, after starting the server, the following
> line is added to the output of "netstat -ntlp" on both
> machines
> 
> tcp        0      0 0.0.0.0:8789            0.0.0.0:* 
>              LISTEN      4040/python
> 
> modulo the PID.

Ok, then you almost certainly have a network configuration problem of some
kind.  While this isn't strictly speaking a Twisted problem, here's some
troubleshooting advice and further questions that might help...

Check that "host shuttle-2" from shuttle-1 resolves to the correct IP
address -- perhaps your DNS or /etc/hosts file is misconfigured.  Also, do
you have a firewall or router between those two machines?  -- if so, it may
be misconfigured to block connections from shuttle-1 to shuttle-2 on 8789.
Similarly, if you have a firewall/iptables rules on shuttle-1 and shuttle-2,
check them.  

Also, can you reach other services on shuttle-2 from shuttle-1, such as ssh
or http, or is every connection refused?

If you run "tcpdump host shuttle-1" on shuttle-2 while trying to connect to
shuttle-1, what traffic does it report, if any?  Similarly, can you ping
shuttle-2 from shuttle-1, and if so, does that tcpdump command report
traffic?

-Andrew.




From mary-twisted at puzzling.org  Thu Aug  5 21:27:42 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 6 Aug 2004 13:27:42 +1000
Subject: Next stop the world (Re: [Twisted-Python] Beginners Guide to Twisted
	Anywhere?)
In-Reply-To: <4112C71A.4040204@twistedmatrix.com>
References: <305be8820408011240726f59ee@mail.gmail.com>
	<410D493F.5030900@divmod.com>
	<305be882040801142276bbec82@mail.gmail.com>
	<20040805201259.GA11049@sense-sea-MegaSub-1-465.oz.net>
	<4112C71A.4040204@twistedmatrix.com>
Message-ID: <20040806032742.GC4355@titus.home.puzzling.org>

On Thu, Aug 05, 2004, Cory Dodt wrote:
> Great notes!  The extra detail on Deferred and Application should be
> especially helpful.  Can we get edit this a bit and get it into the
> official docs? (I know.. open a doc bug.)

Yep :)

Mike, thanks very much for writing this. It would be great to be able to
incorporate it into the actual tutorial. I'm happy to do the work of
incorporating it (I'll even file the bug against myself), but you would
need to agree to this:

    ... all your contributions (including those initial patches you send
    to the mailing list) will have to be copyright consigned to the
    project leader, Glyph. The reason for this is flexibility in
    changing the license.

    http://twistedmatrix.com/developers/contributing

I'll likely contact you off-list if I don't hear from you.

I've been paying attention to complaints about the tutorial and do
intend to work on it. In fact, I'm unemployed (by choice) for at least
the next four months and hope to do extensive work on Twisted docs
(among other writing projects).

However, (once again), people could help out by understanding the
following:

 1. The Twisted docs are not perfect, complete, or, in fact, adequate.
 The project would like them to be better. We're not deliberately
 choosing the docs to be the way they are.
 
 Your criticisms are most likely valid. Your ideas for additions are
 most likely excellent.

 In particular, the tutorial as it stands was designed to be presented
 by a Twisted expert and listened to. It wasn't designed to be read. It
 *severely* needs additions to deal with the change in media.

 2. The best way to improve the Twisted docs is to do some writing
 yourself and contribute it to the project. Send it to me via email or
 via the bugtracker ( http://twistedmatrix.com/bugs/ , assign to
 "hypatia" ). I am willing to edit it, format it, extend it and add it
 to SVN. In fact, I'd be so pleased this would probably happen within a
 week.

 It would also be great to have more regular docs writers (since I don't
 qualify for this description) committing to SVN themselves :)

 3. In this case, we do have a "someone" who has some sense of
 responsibility towards the docs, and that someone is me. If you don't
 want to contribute yourself, help me improve the docs by filing bugs.

I'd like people to take note of #1 in particular because a lot of this
week's threads have focussed on solving the doc inadequacies by having
external documentation. Improving the existing docs is another
(complementary) path forward.

-Mary



From mary-twisted at puzzling.org  Thu Aug  5 22:25:11 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 6 Aug 2004 14:25:11 +1000
Subject: [Twisted-Python] Documentation author credits
Message-ID: <20040806042511.GA7863@titus.home.puzzling.org>

On IRC (just now) I suggested that people who've contributed to the docs
should probably have their names in them, if they like. It would be a
nice thing to do for people who took the trouble to write them, and show
potential contributors that we value their help. I'm thinking "by
So-and-so" and "thanks to So-and-so for their help" type things. As I
understand it the copyright assignment doesn't affect your ability to be
identified as an author in the slightest, so don't worry about that.

Anyway, if you've contributed to a Twisted doc, can you reply to this
mail off-list (don't tell me on IRC, I've got a brain like a sieve), and
let me know:

 - what the doc was

 - what your contribution was (sole author, main author, major
   contributor, minor contributor)

If you did a lot of work on a doc and specifically *do not* want credit
for it, you'll probably also want to tell me because after I process
replies to this mail I may ask "svn blame". Ditto if you checked it into
the repository but didn't write it.

-Mary



From serj_trejo at hotmail.com  Fri Aug  6 01:18:49 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Fri, 06 Aug 2004 03:18:49 -0400
Subject: [Twisted-Python] Twisted co from subversion repository won't install
Message-ID: <BAY12-F2trSByh133tY0001e240@hotmail.com>

I'm new to using subversion but I checked out today r4658 and after running 
"python setup.py build" (which seemed to work Ok) on Mac OS X, I then ran 
"python setup.py install" and received the following errors.

It may be something peculiar to my system as I've installed Python 2.3.4 via 
Fink for OS X 10.3.4.

Serg

# python setup.py install
running install
running build
running build_py
running build_ext
Checking if C extensions can be compiled, don't be alarmed if a few compile 
errors are printed.
gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd 
-DNDEBUG -g -O3 -Wall -Wstrict-prototypes -I/sw/include/python2.3 -c 
conftest.c -o conftest.o
gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd 
-DNDEBUG -g -O3 -Wall -Wstrict-prototypes -I/sw/include/python2.3 -c 
conftest.c -o conftest.o
running build_scripts
error: file 'bin/im' does not exist

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From kndyer at gmail.com  Fri Aug  6 04:03:06 2004
From: kndyer at gmail.com (Kelly Dyer)
Date: Fri, 6 Aug 2004 11:03:06 +0100
Subject: [Twisted-Python] hosting cpu intensive algorithms with twisted. Is it
	worth it?
Message-ID: <eaf4bf9604080603036c22de23@mail.gmail.com>

James,

After having done a bit more reading, I have to agree with everything
that you've said.  The only gains that I'm going to see will come from
spawning new processes and letting them propogate across the cluster.

Thanks for the informative response and kudos to everyone involved
with this project.  This appears to be a very well engineered
framework.   Almost _more_ important, I have found a wealth of
documentation and examples to help kick-start my work with it.

Cheers,
Kelly



From radeex at gmail.com  Fri Aug  6 05:30:00 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 6 Aug 2004 07:30:00 -0400
Subject: [Twisted-Python] ANN: SVN Twisted is not installable at the moment.
	(was Twisted co from subversion repository won't install)
In-Reply-To: <BAY12-F2trSByh133tY0001e240@hotmail.com>
References: <BAY12-F2trSByh133tY0001e240@hotmail.com>
Message-ID: <60ed19d40408060430618f4f55@mail.gmail.com>

On Fri, 06 Aug 2004 03:18:49 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:

[stuff about setup.py not working]

Twisted svn HEAD is in a state of change at the moment. Don't expect
setup.py to work right now. I'm probably going to be throwing out that
setup.py entirely. The reason for this is the split:

http://twistedmatrix.com/documents/

I'll try to rectify this shortly.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From radeex at gmail.com  Fri Aug  6 05:33:33 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 6 Aug 2004 07:33:33 -0400
Subject: [Twisted-Python] Re: ANN: SVN Twisted is not installable at the
	moment. (was Twisted co from subversion repository won't install)
In-Reply-To: <60ed19d40408060430618f4f55@mail.gmail.com>
References: <BAY12-F2trSByh133tY0001e240@hotmail.com>
	<60ed19d40408060430618f4f55@mail.gmail.com>
Message-ID: <60ed19d4040806043328e20d99@mail.gmail.com>

On Fri, 6 Aug 2004 07:30:00 -0400, Christopher Armstrong
<radeex at gmail.com> wrote:
> On Fri, 06 Aug 2004 03:18:49 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> http://twistedmatrix.com/documents/

Err, I got distracted while typing out that URL. I meant to say,

http://twistedmatrix.com/products/splitfaq


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From golux at comcast.net  Fri Aug  6 12:58:18 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 06 Aug 2004 14:58:18 -0400
Subject: [Twisted-Python] intermittent traceback using adbapi with pyPgSQL
Message-ID: <4113D4CA.6020603@comcast.net>

Twisted gurus,

I didn't want to create a bug report yet
because I'm not sure that it's a Twisted bug.  I
have only observed it while using pyPgSQL as the adaptor;
haven't seen it yet (and have run the exact same code
that produces it) with psycopg.

I see this traceback intermittently occur at the end of
chains of deferreds that include 2 or more adbapi
calls.  I can provide some example code, but I should
really develop a concise example (as opposed to my app code,
which is spread over 2 or 3 modules) that might be useful
as the basis for a unit test in case this is a Twisted
problem -- it's not clear to me where the problem is:
my code, Twisted, or pyPgSQL.  My natural assumption
would be the former, but the intermittency and the
adaptor-dependence makes me wonder.

I can run the exact same code several times without
incident and then suddenly get this traceback, which makes
me think it might be some allocated limit being exceeded
(threads in the thread pool?  sorry, clueless here).

Some observations:

* all database operations in the deferred chain complete
   successfully before the traceback occurs.

* it only occurs with pyPgSQL -- not with psycopg
   (at least I haven't yet seen it with psycopg, and
   believe me I've tried to make it happen! ... perhaps
   psycopg's thread management prevents it?)

* this always occurs at the end of a "test" in which there
   is a succeed(result) callback that prints the result and
   calls reactor.stop() -- I wonder if stopping the reactor
   (which wouldn't normally happen in an app, of course)
   breaks the pipe?

* I'm using
   - PostgreSQL 7.4.2
   - pyPgSQL 2.4
   - psycopg 1.1.15
   - Twisted 1.3.0
   - Python Python 2.3.3 (#1, Jul 22 2004, 15:58:51)
     [GCC 3.3.2 20031022 (Red Hat Linux 3.3.2-1)] on linux2
   - Fedora Core 1,  2.4.22-1.2197.nptl

Anyway, here's the traceback:
---------------------------------------------------------------------
Traceback (most recent call last):
   File "/usr/local/lib/python2.3/threading.py", line 436, in __bootstrap
     self.run()
   File "/usr/local/lib/python2.3/threading.py", line 416, in run
     self.__target(*self.__args, **self.__kwargs)
--- <exception caught here> ---
   File "/usr/local/lib/python2.3/site-packages/twisted/python/threadpool.py", 
line 157, in _worker
     context.call(ctx, function, *args, **kwargs)
   File "/usr/local/lib/python2.3/site-packages/twisted/python/context.py", line 
64, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File "/usr/local/lib/python2.3/site-packages/twisted/python/context.py", line 
43, in callWithContext
     return func(*args,**kw)
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/threads.py", 
line 42, in _putResultInDeferred
     reactor.callFromThread(deferred.callback, result)
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/base.py", line 
201, in callFromThread
     self.wakeUp()
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/base.py", line 
207, in wakeUp
     self.waker.wakeUp()
   File "/usr/local/lib/python2.3/site-packages/twisted/internet/default.py", 
line 399, in wakeUp
     self.o.flush()
exceptions.IOError: [Errno 32] Broken pipe
---------------------------------------------------------------------

Has anyone else observed this?

Cheers,
Steve





From itamar at itamarst.org  Sat Aug  7 09:51:22 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 07 Aug 2004 11:51:22 -0400
Subject: [Twisted-Python] intermittent traceback using adbapi with pyPgSQL
In-Reply-To: <4113D4CA.6020603@comcast.net>
References: <4113D4CA.6020603@comcast.net>
Message-ID: <1091893881.30236.17.camel@sheriffpony>

It sounds like you have a database command running in the threadpool
after the reactor has already been shut down. Which suggests you just
want to make sure reactor.stop() is called after you're certain there
are no more database calls running (and you mustn't call reactor.stop()
in a thread of course - reactor.callFromThread(reactor.stop) if you want
to).




From eugen at leitl.org  Sat Aug  7 13:19:52 2004
From: eugen at leitl.org (Eugen Leitl)
Date: Sat, 7 Aug 2004 21:19:52 +0200
Subject: [Twisted-Python] [p2p-hackers] source code (in python,
	using twisted) to my reliable udp rpc protocol
	(fwd from angryhicKclown@netscape.net)
Message-ID: <20040807191952.GO1400@leitl.org>

----- Forwarded message from angryhicKclown at netscape.net -----

From: angryhicKclown at netscape.net
Date: Sat, 07 Aug 2004 14:23:26 -0400
To: p2p-hackers at zgp.org
Subject: [p2p-hackers] source code (in python,
	using twisted) to my reliable udp rpc protocol
X-Mailer: Atlas Mailer 2.0
Reply-To: "Peer-to-peer development." <p2p-hackers at zgp.org>

I was paging thru the archives and realized I never posted it.

Works for me, but I've never done a large-scale test of it. Perhaps someone would like to and share the results?

It consists of several layers, a stack, if you will:
Reliable datagram - handles acks, etc
Datagram stream - allows one to send messages larger than the MTU
CBOB - binary format for storing structured data, similar to xml, except it doesn't suck
TinyRPC - RPC protocol build upon all of those layers

Enjoy. Requires www.twistedmatrix.com.

---- cut here ----
# TinyRPC protocol

# bsd license

from twisted.internet import reactor, protocol, interfaces, defer
from twisted.protocols import policies

import socket
import struct
import binascii
import cStringIO as StringIO
import time

CBOB_BOOL   = 0
CBOB_INT    = 1
CBOB_FLOAT  = 2
CBOB_STR    = 3
CBOB_USTR   = 4
CBOB_TUPLE  = 5
CBOB_LIST   = 6
CBOB_DICT   = 7
CBOB_OBJ    = 8
CBOB_NONE   = 9

def cbob_encode(obj, buf=StringIO.StringIO()):
    if isinstance(obj, bool):
        if obj:
            buf.write(struct.pack("! BB", CBOB_BOOL, 1))
        else:
            buf.write(struct.pack("! BB", CBOB_BOOL, 0))
    elif isinstance(obj, int):
        buf.write(struct.pack("! Bi", CBOB_INT, obj))
    elif isinstance(obj, float):
        buf.write(struct.pack("! Bf", CBOB_FLOAT, obj))
    elif isinstance(obj, str):
        buf.write(struct.pack("! BH", CBOB_STR, len(obj)) + obj)
    elif isinstance(obj, unicode):
        buf.write(struct.pack("! BH", CBOB_USTR, len(obj)) + obj)
    elif isinstance(obj, tuple):
        buf.write(struct.pack("! BB", CBOB_TUPLE, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
    elif isinstance(obj, list):
        buf.write(struct.pack("! BH", CBOB_LIST, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
    elif isinstance(obj, dict):
        buf.write(struct.pack("! BH", CBOB_DICT, len(obj)))
        for o in obj:
            cbob_encode(o, buf)
            cbob_encode(obj[o], buf)
    elif isinstance(obj, object):
        members = obj.__dict__.items() #inspect.getmembers(obj)
        buf.write(struct.pack("! BHB", CBOB_OBJ, len(members), len(obj.__class__.__name__)))
        buf.write(obj.__class__.__name__)
        for member in members:
            cbob_encode(member[0], buf)
            cbob_encode(member[1], buf)
    elif isinstance(obj, NoneType):
        buf.write(struct.pack("! B", CBOB_NONE))
    else:
        raise "couldn't serialize "  + str(obj)
        
def cbob_decode(buf):
    d = buf.read(1)
    typ = struct.unpack("! B", d)[0]
    if typ == CBOB_BOOL:
        v = struct.unpack("! B", buf.read(1))[0]
        return v == 1
    elif typ == CBOB_INT:
        return struct.unpack("! i", buf.read(4))[0]
    elif typ == CBOB_FLOAT:
        return struct.unpack("! f", buf.read(4))[0]
    elif typ == CBOB_STR:
        l = struct.unpack("! H", buf.read(2))[0]
        return buf.read(l)
    elif typ == CBOB_USTR:
        l = struct.unpack("! H", buf.read(2))[0]
        return unicode(buf.read(l))
    elif typ == CBOB_TUPLE:
        l = struct.unpack("! B", buf.read(1))[0]
        v = ()
        for i in range(0, l):
            v = v + (cbob_decode(buf),)
        return v
    elif typ == CBOB_LIST:
        l = struct.unpack("! H", buf.read(2))[0]
        v = []
        for i in range(0, l):
            v.append(cbob_decode(buf))
        return v
    elif typ == CBOB_DICT:
        l = struct.unpack("! H", buf.read(2))[0]
        v = {}
        for i in range(0, l):
            key,value = cbob_decode(buf),cbob_decode(buf)
            v[key] = value
        return v
    elif typ == CBOB_OBJ:
        membercount,clsnamesize = struct.unpack("! HB", buf.read(3))
        clsname = buf.read(clsnamesize)
        v = globals()[clsname]()
        for i in range(0, membercount):
            name,value = cbob_decode(buf),cbob_decode(buf)
            setattr(v, name, value)
        return v
    elif typ == CBOB_NONE:
        return None
    else:
        raise "invalid typecode " + typ

class DispatcherTransport:
    __implements__ = interfaces.IUDPConnectedTransport
    def __init__(self, dispatcher, addr, proto):
        self.dispatcher = dispatcher
        self.addr = addr
        self.protocol = proto
    def getHost(self):
        return self.dispatcher.getHost()
    def getPeer(self):
        return ("INET",) + self.addr
    def write(self, packet):
        return self.dispatcher.transport.write(packet, self.addr)
    def loseConnection(self):
        self.protocol.stopProtocol()
        del self.protocol
            
class Dispatcher(protocol.DatagramProtocol):
    # TODO: call startFactory()?
    def __init__(self, factory):
        self.handlers = {}
        factory.dispatcher = self
        self.factory = factory
    def __getitem__(self, addr):
        if addr not in self.handlers:
            return self.open_new(addr)
        return self.handlers[addr]
    def datagramReceived(self, data, addr):
        self[addr].datagramReceived(data)
    def getHost(self):
        return self.transport.getHost()
    def open_new(self, addr):
        assert addr not in self.handlers, "Already connected"
        p = self.factory.buildProtocol(addr)
        p.transport = DispatcherTransport(self, addr, p)
        p.startProtocol()
        self.handlers[addr] = p
        return p
    def startProtocol(self):
        return self.factory.startFactory()
    def stopProtocol(self):
        return self.factory.stopFactory()

class ReliableDatagramProtocol(protocol.ConnectedDatagramProtocol):
    "acks and stuff"
    NUM_RETRANSMITS = 2 #10
    RETRANSMIT_INTERVAL = .200
    MAX_LAST_RECEIVED = 50
    OP_SEND = 0
    OP_ACK = 128 # msb set
    
    def startProtocol(self):
        self.retransmits = {} # crc->(data,num retransmits, bits, delayedcall for retransmit, Deferred when packet is acked)
        self.last_received = []
    def stopProtocol(self, reason):
        print "protocol stopped",reason
    def send(self, data, bits=0):
        crc = binascii.crc32(data)
        d = defer.Deferred()
        self.retransmits[crc] = (data, self.NUM_RETRANSMITS, bits, reactor.callLater(self.RETRANSMIT_INTERVAL, self.retransmit, crc), d)
        self.send_packet(self.OP_SEND, bits, data)
        return d
    def retransmit(self, crc):
        t = self.retransmits[crc]
        self.send_packet(self.OP_SEND, t[2], t[0])
        if t[1] > 0:
            self.retransmits[crc] = (t[0], t[1] - 1, t[2], reactor.callLater(self.RETRANSMIT_INTERVAL, self.retransmit, crc), t[4])
        else:
            self.packetLost(retransmits[crc][0])
            del self.retransmits[crc]
    def send_packet(self, op, bits, data):
        self.transport.write(struct.pack("! B", op | bits) + data)
    def send_ack(self, crc):
        if len(self.last_received) >= self.MAX_LAST_RECEIVED:
            del self.last_received[0]
        self.last_received.append(crc)
        self.transport.write(struct.pack("! Bi", self.OP_ACK, crc))
    def got_ack(self, crc):
        self.retransmits[crc][3].cancel()
        d = self.retransmits[crc][4]
        del self.retransmits[crc]
        d.callback(crc)
    def datagramReceived(self, data):
        opbyte, = struct.unpack("! B", data[0])
        op = opbyte & 128
        data = data[1:]
        if op == self.OP_SEND:
            crc = binascii.crc32(data)
            if crc not in self.last_received:
                self.dataReceived(data, opbyte)
            self.send_ack(crc)
        else:
            self.got_ack(struct.unpack("! i", data)[0])
    def dataReceived(self, data, bits):
        print "received",data,"from",self.transport.getPeer()
    def packetLost(self):
        self.transport.loseConnection()

class ReliableDatagramStreamMessageProtocol(ReliableDatagramProtocol):
    "Sends large messages (> mtu size) and sends them in a buffered block..."
    MTU = 512
    OP_BEGINMSG = 64 # 2nd msb set
    OP_DATA = 0

    def startProtocol(self):
        ReliableDatagramProtocol.startProtocol(self)
        self.outmessagequeue = [] # data len, stream, bits
        self.inmessage = None
        self.packetcount = 0
        self.numpackets = 0
    def sendMessage(self, data, bits=0):
        self.outmessagequeue.append((len(data), StringIO.StringIO(data), bits))
        if len(self.outmessagequeue) == 1:
            self.send_first_block()
    def send_first_block(self, dummy=""):
        length,stream,bits = self.outmessagequeue[0]
        length = length - self.MTU + 4
        if length < 0:
            length = 0
        length = length + 1
        self.send(struct.pack("! I", length / self.MTU + length % self.MTU) + stream.read(self.MTU - 4), self.OP_BEGINMSG | bits).addCallback(self.send_next_block)
    def send_next_block(self, dummy=""):
        length,stream,bits = self.outmessagequeue[0]
        d = stream.read(self.MTU)
        if len(d) > 0:
            self.send(d, self.OP_DATA | bits).addCallback(self.send_next_block)
        else:
            stream.close()
            del self.outmessagequeue[0]
            if len(self.outmessagequeue) > 0:
                self.send_next_block()
    def dataReceived(self, data, bits):
        if bits & 64 == self.OP_DATA:
            self.packetcount = self.packetcount + 1
            self.inmessage.write(data)
        else:
            self.inmessage = StringIO.StringIO()
            self.packetcount = 1
            mtu = len(data) # the entire packet size is the size of the mtu
            self.numpackets = struct.unpack("! I", data[:4])[0]
            self.inmessage.write(data[4:])
        if self.packetcount >= self.numpackets:
            self.messageReceived(self.inmessage.getvalue(), bits)
            self.inmessage = StringIO.StringIO()
    def messageReceived(self, message, bits):
        print "got message", message

class DatagramRPCProtocol(ReliableDatagramStreamMessageProtocol):
    OP_CALL = 32
    OP_RETURN = 0
    MAX_CALLID = 512
    
    def startProtocol(self):
        ReliableDatagramStreamMessageProtocol.startProtocol(self)
        if hasattr(self.factory, "buildRemote"):
            self.remotes = self.factory.buildRemote()
        self.calls = {}
        self.callid = 0
    def messageReceived(self, message, bits):
        message = StringIO.StringIO(message)
        if bits & 32 == self.OP_CALL:
            t, objname, methodname, args, kwargs = cbob_decode(message)
            r = getattr(self.remotes[objname], methodname)(*args,**kwargs)
            #print "calling " + objname + "." + methodname
            if isinstance(r, defer.Deferred):
                r.addCallback(lambda result: self.send_result(t, result))
            else:
                self.send_result(t, r)
        else:
            t,r = cbob_decode(message)
            self.calls[t].callback(r)
    def send_result(self, t, r):
        sio = StringIO.StringIO()
        cbob_encode((t, r), sio)
        self.sendMessage(sio.getvalue(), self.OP_RETURN)
    def callRemote(self, objname, methodname, *args, **kwargs):
        t = self.callid
        if self.callid == self.MAX_CALLID:
            self.callid = 0
        else:
            self.callid = self.callid + 1
        self.calls[t] = defer.Deferred()
        sio = StringIO.StringIO()
        cbob_encode((t, objname, methodname, args, kwargs), sio)
        self.sendMessage(sio.getvalue(), self.OP_CALL)
        return self.calls[t]

#class LazyRMIProtocol(DatagramRPCProtocol):
#    raise "Todo: implement"

class TestObject:
    def hello(self, name):
        return "Hello, " + name.first + " " + name.last

class Name:
    first = ""
    last = ""
    
def test():
    reactor.callLater(0, test2)
    reactor.run()
    
def test2():
    f = protocol.ServerFactory()
    #f.protocol = ReliableDatagramProtocol
    #f.protocol = ReliableDatagramStreamMessageProtocol
    f.protocol = DatagramRPCProtocol
    f.buildRemote = lambda: {"myObj" : TestObject()}
    d = Dispatcher(f)
    d2 = Dispatcher(f)
    p = d[socket.gethostbyname("localhost"), 8889]
    p2 = d[socket.gethostbyname("localhost"), 8888]
    reactor.listenUDP(8888, d)
    reactor.listenUDP(8889, d2)
    reactor.callLater(0, test3, p, p2)

def test3(p, p2):
    name = Name()
    name.first = "great"
    name.last = "world"
    p.callRemote("myObj", "hello", name).addCallback(test4)

def test4(r):
    print "result of call", r
    
if __name__ == "__main__":
    test()
    

__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp
_______________________________________________
p2p-hackers mailing list
p2p-hackers at zgp.org
http://zgp.org/mailman/listinfo/p2p-hackers
_______________________________________________
Here is a web page listing P2P Conferences:
http://www.neurogrid.net/twiki/bin/view/Main/PeerToPeerConferences

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040807/bc6025da/attachment.sig>

From golux at comcast.net  Sun Aug  8 00:06:53 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 08 Aug 2004 02:06:53 -0400
Subject: [Twisted-Python] How to write to log in the context of a
	tap-builder?
Message-ID: <4115C2FD.4010508@comcast.net>

Seems that twistd controls the log while it runs the
stuff in the tap, so if I do a log.msg('blah')
in there it's ignored ... is there a way to "borrow"
the log from twistd and write something to it (like
have my service say something when it starts up)?

Steve



From Richard.Sharp at t-online.de  Mon Aug  9 07:16:46 2004
From: Richard.Sharp at t-online.de (Richard Sharp)
Date: Mon, 09 Aug 2004 15:16:46 +0200
Subject: [Twisted-Python] Problem with SYN_SENT's under SCO
Message-ID: <4117793E.4010201@gmx.de>

Hello,
I recently had a problem under SCO that I had to solve. The program was 
piling up open socket objects all hanging in the state of SYN_SENT. 
Eventually the maximum number of open files was exceeded and the 
application hung badly.

I eventually narrowed the problem down with a perfectly normal python 
program to trying to connect as a client to a server that is not 
listening. The first connect returns the error EINPROGRESS, the second 
connect then returns the error "Connection refused". Running a simple 
program that repeatedly tried to connect, I could use "netstat -a" to 
watch the SYN_SENT's increasing. This only appears to happen under SCO 
and even here I am not sure whether it is not version specific.

I discovered that closing the socket object after the "connection 
refused" seemed to release any open objects and removed the SYN_SENTS, 
so I changed failIfNotConnected to what you see below. There may be a 
better or more appropriate solution but this has at least got rid of my 
problem.

Version 1.3.0 internet/tcp.py from line 355:

def failIfNotConnected(self, err):
        if sys.platform[0:3] != 'sco':
            if (self.connected or
                self.disconnected or
                not (hasattr(self, "connector"))):
                return
        else:
            self.socket.close()
            if not (hasattr(self,"connector")):
                return
        self.connector.connectionFailed(failure.Failure(err))
        if hasattr(self, "reactor"):
            # this doesn't happens if we failed in __init__
            self.stopReading()
            self.stopWriting()
            del self.connector

greetings,

Richard Sharp




From general at eepatents.com  Mon Aug  9 14:44:11 2004
From: general at eepatents.com (Ed Suominen)
Date: Mon, 9 Aug 2004 13:44:11 -0700
Subject: [Twisted-Python] "Twisted Web" Book
Message-ID: <200408091344.11409.general@eepatents.com>

Glad to see there's a book, but why isn't it under the O'Reilly name? Hmmm...

http://tinyurl.com/4adsh

Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From radeex at gmail.com  Mon Aug  9 14:58:32 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 9 Aug 2004 16:58:32 -0400
Subject: [Twisted-Python] "Twisted Web" Book
In-Reply-To: <200408091344.11409.general@eepatents.com>
References: <200408091344.11409.general@eepatents.com>
Message-ID: <60ed19d4040809135840f6b809@mail.gmail.com>

On Mon, 9 Aug 2004 13:44:11 -0700, Ed Suominen <general at eepatents.com> wrote:
> Glad to see there's a book, but why isn't it under the O'Reilly name? Hmmm...
> 
> http://tinyurl.com/4adsh

Well, it's apropos that the book involves an unspeakable terror... :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dave at krondo.com  Mon Aug  9 20:48:22 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 19:48:22 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1091692927.2999.7.camel@localhost>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost>
Message-ID: <1092106102.1790.45.camel@oneiros>

On Thu, 2004-08-05 at 01:02, glyph wrote:
> On Thu, 2004-08-05 at 03:06 -0400, James Y Knight wrote:
> > So, I was a bit irritated recently because there is no way to test for 
> > private name usage in a module's namespace. '__all__' is a good start, 
> > but it is somewhat poor for a few reasons:
> 
> WOW.  THank you for doing this, james.  This is more useful than
> PyChecker output, I think.  It's also a little depresing.  We really
> need a better-documented public API!
> 
> I have created 2 new issues for this, one for adding __all__ to all
> modules and one for testing that it's obeyed properly.  #658 and #659,
> respectively.  They are tentatively assigned to you, but I expect you
> can carve up Twisted and motivate others to actually do most of the
> work :).

On the subject of adbapi using t.i.threads._putResultInDeferred,
the latter function is useful for anyone managing their own threads.
Anyone object if it is renamed to putResultInDeferred and made
public?

dave





From glyph at divmod.com  Mon Aug  9 22:23:29 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 00:23:29 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092106102.1790.45.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
Message-ID: <1092111809.26823.13.camel@kazekage>

On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:

> On the subject of adbapi using t.i.threads._putResultInDeferred,
> the latter function is useful for anyone managing their own threads.
> Anyone object if it is renamed to putResultInDeferred and made
> public?

Actually, yes, I would object.

It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
one of the major issues with doing a proper reactor shut-down.  It
should be doing reactor.callInThread, not its own thread management.  I
will note that the API which uses it is simply a deferToThread clone.

All the thread-management logic in adbapi can easily be ported to use
t.i.threads.deferToThread and use logical task queue identifiers instead
of physical thread IDs.  If you agree, please create an issue in the
tracker for this.

Chandler might have a legitimate use-case for putResultInDeferred, but
I'd still like to try to talk them out of doing their own thread
management first :).




From dave at krondo.com  Mon Aug  9 23:03:40 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 22:03:40 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092111809.26823.13.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
Message-ID: <1092114220.25013.53.camel@oneiros>

On Mon, 2004-08-09 at 21:23, Glyph Lefkowitz wrote:
> On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:
> 
> > On the subject of adbapi using t.i.threads._putResultInDeferred,
> > the latter function is useful for anyone managing their own threads.
> > Anyone object if it is renamed to putResultInDeferred and made
> > public?
> 
> Actually, yes, I would object.
> 
> It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
> one of the major issues with doing a proper reactor shut-down.  It
> should be doing reactor.callInThread, not its own thread management.  I
> will note that the API which uses it is simply a deferToThread clone.
> 
> All the thread-management logic in adbapi can easily be ported to use
> t.i.threads.deferToThread and use logical task queue identifiers instead
> of physical thread IDs.  If you agree, please create an issue in the
> tracker for this.

I agree, with the caveat that the reactor threadpool size
adjustment api will need to be enhanced so that adbapi can
request more threads if the max connections is high, without
reducing threads if the max is low. suggestThreadPoolSize
is too crude to do that. Min threads probably needs to be
adjustable as well. Agreed?

dave





From dave at krondo.com  Mon Aug  9 23:16:50 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 09 Aug 2004 22:16:50 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092114220.25013.53.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
Message-ID: <1092115010.1787.60.camel@oneiros>

On Mon, 2004-08-09 at 22:03, Dave Peticolas wrote:
> On Mon, 2004-08-09 at 21:23, Glyph Lefkowitz wrote:
> > On Mon, 2004-08-09 at 22:48, Dave Peticolas wrote:
> > 
> > > On the subject of adbapi using t.i.threads._putResultInDeferred,
> > > the latter function is useful for anyone managing their own threads.
> > > Anyone object if it is renamed to putResultInDeferred and made
> > > public?
> > 
> > Actually, yes, I would object.
> > 
> > It's a severe wart that adbapi uses t.p.threadpool directly; IIRC it's
> > one of the major issues with doing a proper reactor shut-down.  It
> > should be doing reactor.callInThread, not its own thread management.  I
> > will note that the API which uses it is simply a deferToThread clone.
> > 
> > All the thread-management logic in adbapi can easily be ported to use
> > t.i.threads.deferToThread and use logical task queue identifiers instead
> > of physical thread IDs.  If you agree, please create an issue in the
> > tracker for this.
> 
> I agree, with the caveat that the reactor threadpool size
> adjustment api will need to be enhanced so that adbapi can
> request more threads if the max connections is high, without
> reducing threads if the max is low. suggestThreadPoolSize
> is too crude to do that. Min threads probably needs to be
> adjustable as well. Agreed?

On further thought, I'm not so sure about this. I have a real
application that is managing multiple connection pools. If
every connection pool is sharing the same threadpool, how
can I prevent one connection pool from starving the others,
as well as non-adbapi tasks?

dave





From glyph at divmod.com  Mon Aug  9 23:21:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 01:21:14 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092114220.25013.53.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
Message-ID: <1092115274.12422.12.camel@localhost>

On Tue, 2004-08-10 at 01:03, Dave Peticolas wrote:

> I agree, with the caveat that the reactor threadpool size
> adjustment api will need to be enhanced so that adbapi can
> request more threads if the max connections is high, without
> reducing threads if the max is low. suggestThreadPoolSize
> is too crude to do that. Min threads probably needs to be
> adjustable as well. Agreed?

Mostly - I disagree in that I think this can be decently well
implemented without actually delving into physical thread counts,
again... but then, I remember the various insane ways that Oracle prices
its client licenses, and other things like that...

At any rate, I see no reason why the threadpool interface couldn't be
improved as well, even if it's not perfectly necessary.  Do you think
the tasks could be separated?




From tim.stebbing at nunatak.com.au  Tue Aug 10 11:05:13 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Wed, 11 Aug 2004 03:05:13 +1000
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41129E5A.8070406@dalchemy.com>
References: <41129E5A.8070406@dalchemy.com>
Message-ID: <41190049.7050708@nunatak.com.au>

Matt Feifarek wrote:

> I've pretty much got this working okay (with a few false starts related 
> to how args are put together... you can't send in a big long string; you 
> literally have to make a list of argument words... what a PITA).

not that this is what your asking, but I just thought you might like to 
know:

args = ['a', 'long', 'list', 'of', 'annoying', 'PITA', 'args']

is less of a pita as:

args = 'a long list of annoying PITA args'.split()

-tjs

-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From Bosnjak at iskratel.si  Tue Aug 10 02:02:55 2004
From: Bosnjak at iskratel.si (Bosnjak Zoran    ITWEP)
Date: Tue, 10 Aug 2004 10:02:55 +0200
Subject: [Twisted-Python] stopTrying, cancel connection in progress
Message-ID: <57D0409C9DC47A4B936406AC1788FA0001679CD4@ntmailkr.iskratel.si>

I have a subclass of ReconnectingClientFactory.

If I do
- reactor.connectTCP(ip, port, myFactory)
and
- myFactory.stopTrying()
- del myFactory

... it seems like stopTrying does nothing.
When the connection is finally made (for the first time), myFactory.buildProtocol is called and new protocol instance is created...

So, how do I cancel connection in progress, so that myProtocol is never created?

Thanks!
Zoran Bosnjak




From guy at r-e-d.co.nz  Tue Aug 10 05:14:26 2004
From: guy at r-e-d.co.nz (Guy Robinson)
Date: Tue, 10 Aug 2004 23:14:26 +1200
Subject: [Twisted-Python] xml-rpc with cred authentication
Message-ID: <4118AE12.8030702@r-e-d.co.nz>

Hello,

I'm trying to write an application framework around Twisted xmlrpc but with 
authentication. Cred seems to be what I need but I have the following (newbie) 
questions:

Is my understanding correct? I need to write the following:

My understanding is the portal is used in defining the protocol? So if xmlrpc is 
a 'protocol' on top of http does http or xmlrpc already have a portal 
implemented for it? Or is my understanding all wrong?

The CredentialChecker as I want to store the username/password/credentials in 
zodb or atop

The Realm as this is what xmlrpc will use to get a user's credentials.

TIA,

Guy

ps: If anyone can point me to a twisted xmlrpc implementation with 
authentication it would be appreciated. (no point reinventing the wheel)





From glyph at divmod.com  Tue Aug 10 07:32:38 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 09:32:38 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092115010.1787.60.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros>
Message-ID: <1092144757.26823.22.camel@kazekage>

On Tue, 2004-08-10 at 01:16, Dave Peticolas wrote:

> On further thought, I'm not so sure about this. I have a real
> application that is managing multiple connection pools. If
> every connection pool is sharing the same threadpool, how
> can I prevent one connection pool from starving the others,
> as well as non-adbapi tasks?

You can easily limit how many outstanding operations can be pending from
any given pool.  Like I said in a previous email, virtual task !=
physical thread.  I'll write some example code later today.




From itamar at itamarst.org  Tue Aug 10 07:41:32 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 10 Aug 2004 09:41:32 -0400
Subject: [Twisted-Python] xml-rpc with cred authentication
In-Reply-To: <4118AE12.8030702@r-e-d.co.nz>
References: <4118AE12.8030702@r-e-d.co.nz>
Message-ID: <1092145292.8259.1.camel@sheriffpony>

On Tue, 2004-08-10 at 07:14, Guy Robinson wrote:

> ps: If anyone can point me to a twisted xmlrpc implementation with 
> authentication it would be appreciated. (no point reinventing the wheel)

I'm pretty sure I posted an example of basic http auth to the list. This
was a generic wrapper for any resource, so it could wrap an xml-rpc
resource as well.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From dave at krondo.com  Tue Aug 10 08:48:14 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 10 Aug 2004 07:48:14 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092144757.26823.22.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros> <1092144757.26823.22.camel@kazekage>
Message-ID: <1092149294.25013.73.camel@oneiros>

On Tue, 2004-08-10 at 06:32, Glyph Lefkowitz wrote:
> On Tue, 2004-08-10 at 01:16, Dave Peticolas wrote:
> 
> > On further thought, I'm not so sure about this. I have a real
> > application that is managing multiple connection pools. If
> > every connection pool is sharing the same threadpool, how
> > can I prevent one connection pool from starving the others,
> > as well as non-adbapi tasks?
> 
> You can easily limit how many outstanding operations can be pending from
> any given pool.  Like I said in a previous email, virtual task !=
> physical thread.  I'll write some example code later today.

I'm not worried about limiting a connection pool to it's
max threads, which is still necessary to do, of course,
and I would be curious to see how your implementation
differs from my own ideas.

I want to ensure that a connection pool can actually
make use of all of its connections simultaneously if
it needs to (the performance half of why a connection
pool is used in the first place). If adbapi were to
ignore the reactor thread counts altogether, for example,
it would be pointless to specify a max connections greater
than 10 since the reactor won't let you use more than that
anyway, the default max thread count being 10 atm.

dave





From glyph at divmod.com  Tue Aug 10 10:28:52 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 10 Aug 2004 12:28:52 -0400
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092149294.25013.73.camel@oneiros>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost> <1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros> <1092144757.26823.22.camel@kazekage>
	<1092149294.25013.73.camel@oneiros>
Message-ID: <1092155332.26823.28.camel@kazekage>

On Tue, 2004-08-10 at 10:48, Dave Peticolas wrote:

> I want to ensure that a connection pool can actually
> make use of all of its connections simultaneously if
> it needs to (the performance half of why a connection
> pool is used in the first place). If adbapi were to
> ignore the reactor thread counts altogether, for example,
> it would be pointless to specify a max connections greater
> than 10 since the reactor won't let you use more than that
> anyway, the default max thread count being 10 atm.

Aah.  So what you're saying is you want an API which multiple
thread-pools can communicate via to establish a suggested minimum value
for the maximum thread count?

I'm not opposed to such a thing, but shouldn't this be a deployment /
tuning option particular to a configuration?  The suggested value would
have to be a fairly subtle hint...

Maybe something like
'IReactorThreads.suggestAdditionalThreads(suggestingObject,
addtlThreadCount)'?  The reactor could track the suggesting object with
a weakref to decrease the total thread count when it goes away.

-- 
  _  \ Glyph Lefkowitz   |"Along the shore the cloud waves break,
 / \  \ glyph at divmod.com | The twin suns sink behind the lake,
 ` _o_ \-----------------+ The shadows lengthen, In Carcosa"
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From seamonkeys at gmail.com  Tue Aug 10 11:48:46 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Tue, 10 Aug 2004 10:48:46 -0700
Subject: [Twisted-Python] Telnet server example?
Message-ID: <305be88204081010486864b6e7@mail.gmail.com>

So I got my Echo server working...kind of. There were some issues with
Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
Anyways, rather than re-invent the wheel I'd like to take advantage of
Twisted's Telnet classes. Unfortunately I've not been able to find any
examples of a server that uses Twisted's Telnet. I've tried writing my
own code but I've not had any luck getting it to work.

Therefore...would anyone mind showing me a minimal example of a server
that uses the Telnet library?

Many thanks,

Britt



From dave at krondo.com  Tue Aug 10 13:38:26 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 10 Aug 2004 12:38:26 -0700
Subject: [Twisted-Python] module interface checking tool
In-Reply-To: <1092155332.26823.28.camel@kazekage>
References: <054E4632-E6AE-11D8-8D12-000A95A50FB2@fuhm.net>
	<1091692927.2999.7.camel@localhost>
	<1092106102.1790.45.camel@oneiros>
	<1092111809.26823.13.camel@kazekage>
	<1092114220.25013.53.camel@oneiros>
	<1092115010.1787.60.camel@oneiros>
	<1092144757.26823.22.camel@kazekage>
	<1092149294.25013.73.camel@oneiros>
	<1092155332.26823.28.camel@kazekage>
Message-ID: <20040810193826.GA27011@krondo.net>

On Tue, Aug 10, 2004 at 12:28:52PM -0400, Glyph Lefkowitz wrote:
> On Tue, 2004-08-10 at 10:48, Dave Peticolas wrote:
> 
> > I want to ensure that a connection pool can actually
> > make use of all of its connections simultaneously if
> > it needs to (the performance half of why a connection
> > pool is used in the first place). If adbapi were to
> > ignore the reactor thread counts altogether, for example,
> > it would be pointless to specify a max connections greater
> > than 10 since the reactor won't let you use more than that
> > anyway, the default max thread count being 10 atm.
> 
> Aah.  So what you're saying is you want an API which multiple
> thread-pools can communicate via to establish a suggested minimum value
> for the maximum thread count?
 
Yes, precisely.


> I'm not opposed to such a thing, but shouldn't this be a deployment /
> tuning option particular to a configuration?  The suggested value would
> have to be a fairly subtle hint...
> 
> Maybe something like
> 'IReactorThreads.suggestAdditionalThreads(suggestingObject,
> addtlThreadCount)'?  The reactor could track the suggesting object with
> a weakref to decrease the total thread count when it goes away.

That sounds just fine. I'll add a tracker request for that.

dave




From projects at reedflute.com  Tue Aug 10 12:17:39 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 10 Aug 2004 20:17:39 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be88204081010486864b6e7@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>
Message-ID: <41191143.4020008@reedflute.com>

Britt Green wrote:

>So I got my Echo server working...kind of. There were some issues with
>Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
>Anyways, rather than re-invent the wheel I'd like to take advantage of
>Twisted's Telnet classes. Unfortunately I've not been able to find any
>examples of a server that uses Twisted's Telnet. I've tried writing my
>own code but I've not had any luck getting it to work.
>
>Therefore...would anyone mind showing me a minimal example of a server
>that uses the Telnet library?
>
>Many thanks,
>
>Britt
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  
>
Excuse the mess:

from twisted.protocols.telnet import *
from twisted.application import service,internet
from twisted.internet import protocol,defer

class TelnetProtocol(Telnet):
def connectionMade(self):
print "TelnetProtocol.connectionMade"
Telnet.connectionMade(self)

def telnet_Password(self, paswd):
"""I accept a password as an argument, and check it with the
checkUserAndPass method. If the login is successful, I call
loggedIn()."""
self.write(IAC+WONT+ECHO+"*****\r\n")
#try:
# checked = self.checkUserAndPass(self.username, paswd)
#except:
# return "Done"
#if not checked:
# return "Done"
self.loggedIn()
return "Command"


def dataReceived(self,data):
print "TelnetProtocol.dataReceived"
print data
Telnet.dataReceived(self,data)

class TelnetFactory(protocol.ServerFactory):
protocol = TelnetProtocol
def __init__(self, **kwargs): self.users = kwargs
def getUser(self, user):
print "TelnetFactory.getUser"
print user
return defer.succeed(self.users.get(user, "No such user"))

application=service.Application('serial',uid=1000,gid=100)

factory = TelnetFactory()
internet.TCPServer(1021, factory).setServiceParent(
service.IServiceCollection(application))


Do not trust this code - it will open a telnet session without any user 
authentication - you have to play around a little with the class as 
documented at :

http://www.twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html

regards,

Eugene






From guy at r-e-d.co.nz  Tue Aug 10 15:18:14 2004
From: guy at r-e-d.co.nz (Guy Robinson)
Date: Wed, 11 Aug 2004 09:18:14 +1200
Subject: [Twisted-Python] xml-rpc with cred authentication
In-Reply-To: <1092145292.8259.1.camel@sheriffpony>
References: <4118AE12.8030702@r-e-d.co.nz>
	<1092145292.8259.1.camel@sheriffpony>
Message-ID: <41193B96.4050008@r-e-d.co.nz>

Itamar Shtull-Trauring wrote:

> On Tue, 2004-08-10 at 07:14, Guy Robinson wrote:
> 
> 
>>ps: If anyone can point me to a twisted xmlrpc implementation with 
>>authentication it would be appreciated. (no point reinventing the wheel)
> 
> 
> I'm pretty sure I posted an example of basic http auth to the list. This
> was a generic wrapper for any resource, so it could wrap an xml-rpc
> resource as well.
> 

Cheers Itamar, googling with the wrong keywords.

Guy





From corydodt at twistedmatrix.com  Tue Aug 10 15:40:27 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 10 Aug 2004 14:40:27 -0700
Subject: [Twisted-Python] Question on using processes
In-Reply-To: <41190049.7050708@nunatak.com.au>
References: <41129E5A.8070406@dalchemy.com> <41190049.7050708@nunatak.com.au>
Message-ID: <411940CB.9050103@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Or shlex.split, if you want it to be parsed more like a command line really
would be parsed.

|>> shlex.split('a huge argument "list of things"')
['a', 'huge', 'argument', 'list of things']

Tim Stebbing wrote:
| Matt Feifarek wrote:
|
|> I've pretty much got this working okay (with a few false starts
|> related to how args are put together... you can't send in a big long
|> string; you literally have to make a list of argument words... what a
|> PITA).
|
|
| not that this is what your asking, but I just thought you might like to
| know:
|
| args = ['a', 'long', 'list', 'of', 'annoying', 'PITA', 'args']
|
| is less of a pita as:
|
| args = 'a long list of annoying PITA args'.split()
|
| -tjs
|

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBGUDL3A5SrXAiHQcRAnI5AJ9ziX2LdUK22hrIq482lghaJaua6gCginq8
lFBOHYSMj5tGVZrVmLmQdII=
=0rxp
-----END PGP SIGNATURE-----



From seamonkeys at gmail.com  Wed Aug 11 00:55:08 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Tue, 10 Aug 2004 23:55:08 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <41191143.4020008@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>
	<41191143.4020008@reedflute.com>
Message-ID: <305be882040810235518677e9e@mail.gmail.com>

Hi Eugene,

Thanks for the example. Just a couple of quick questions if you don't mind.

1) Does this create a telnetd daemon? The checkUserAndPass() method
seems like it checks with the /etc/passwd file to enable a user to
logon. Since I don't have access to my Unix box tonite I can't check
this myself. Please correct me if I'm mistaken.

2) What does defer do exactly?

3) Say I'm writing a program that takes connections via Telnet, like a
chat server. Would using Twisted's Telnet class be the best way to
accomplish this? Or should I just write my own via the more low-level
Twisted classes?

Thanks!

Britt

On Tue, 10 Aug 2004 20:17:39 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:
> 
> 
> Britt Green wrote:
> 
> >So I got my Echo server working...kind of. There were some issues with
> >Putty in Telnet versus Raw Mode, but that's a posting for elsewhere.
> >Anyways, rather than re-invent the wheel I'd like to take advantage of
> >Twisted's Telnet classes. Unfortunately I've not been able to find any
> >examples of a server that uses Twisted's Telnet. I've tried writing my
> >own code but I've not had any luck getting it to work.
> >
> >Therefore...would anyone mind showing me a minimal example of a server
> >that uses the Telnet library?
> >
> >Many thanks,
> >
> >Britt
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
> >
> Excuse the mess:
> 
> from twisted.protocols.telnet import *
> from twisted.application import service,internet
> from twisted.internet import protocol,defer
> 
> class TelnetProtocol(Telnet):
> def connectionMade(self):
> print "TelnetProtocol.connectionMade"
> Telnet.connectionMade(self)
> 
> def telnet_Password(self, paswd):
> """I accept a password as an argument, and check it with the
> checkUserAndPass method. If the login is successful, I call
> loggedIn()."""
> self.write(IAC+WONT+ECHO+"*****\r\n")
> #try:
> # checked = self.checkUserAndPass(self.username, paswd)
> #except:
> # return "Done"
> #if not checked:
> # return "Done"
> self.loggedIn()
> return "Command"
> 
> def dataReceived(self,data):
> print "TelnetProtocol.dataReceived"
> print data
> Telnet.dataReceived(self,data)
> 
> class TelnetFactory(protocol.ServerFactory):
> protocol = TelnetProtocol
> def __init__(self, **kwargs): self.users = kwargs
> def getUser(self, user):
> print "TelnetFactory.getUser"
> print user
> return defer.succeed(self.users.get(user, "No such user"))
> 
> application=service.Application('serial',uid=1000,gid=100)
> 
> factory = TelnetFactory()
> internet.TCPServer(1021, factory).setServiceParent(
> service.IServiceCollection(application))
> 
> Do not trust this code - it will open a telnet session without any user
> authentication - you have to play around a little with the class as
> documented at :
> 
> http://www.twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html
> 
> regards,
> 
> Eugene
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From dominic.fox at gmail.com  Wed Aug 11 07:04:14 2004
From: dominic.fox at gmail.com (Dominic Fox)
Date: Wed, 11 Aug 2004 14:04:14 +0100
Subject: [Twisted-Python] .htc behaviors
Message-ID: <f278b21304081106045e254e1c@mail.gmail.com>

Hi,

As you may know, the current version of MSIE doesn't support the css
:hover selector properly for elements other that <a>. There is a hack
to fix this, which involves attaching an IE "behavior" to the document
via CSS, as follows:

body { behavior: url(csshover.htc); }

and serving the csshover.htc file (which defines the behaviour using
jscript) along with the .css and .htm files as static content. The
hack is documented here:

http://www.xs4all.nl/~peterned/csshover.html

In order to get this to work with servers other than IIS, you need to
set the MIME type for files with the .htc extension to be
'text/x-component', otherwise the behavior won't be loaded properly.

This doesn't work using Twisted (specifically, using
twisted.web.static.File to serve the page, stylesheet and behavior).
You can serve the file, and you can set the MIME type by adding it to
mimetypes.types_map, but the behavior still isn't loaded.

One fix is to change the extension to something else, e.g. .htcHACK,
and set the MIME type for that extension instead. That works OK. But
why does it work, and why is it necessary? Is something else in
Twisted deciding that all files with .htc extensions are Twisted
documentation pages, and forcing the content type header back to
text/html?

curious,
Dominic

-- 
// Dream in black and white -
// model cities, shooting up in the air



From glyph at divmod.com  Wed Aug 11 12:05:22 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 11 Aug 2004 14:05:22 -0400
Subject: [Twisted-Python] .htc behaviors
In-Reply-To: <f278b21304081106045e254e1c@mail.gmail.com>
References: <f278b21304081106045e254e1c@mail.gmail.com>
Message-ID: <1092247522.3441.0.camel@localhost>

On Wed, 2004-08-11 at 14:04 +0100, Dominic Fox wrote:
> Hi,
> 
> As you may know, the current version of MSIE doesn't support the css

Please direct web-related discussion to the twisted-web mailing list.

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web





From mjohnston at skyweb.ca  Wed Aug 11 12:39:38 2004
From: mjohnston at skyweb.ca (Mark Johnston)
Date: Wed, 11 Aug 2004 13:39:38 -0500
Subject: [Twisted-Python] Architecture question for multiple client
	connections (longish)
Message-ID: <200408111339.38919.mjohnston@skyweb.ca>

I'm working on a small Twisted program to take care of conditional access for 
a digital cable system.  All that really involves is receiving high-level 
update packets with a TCP server, storing the info into a database, and 
building and transmitting low-level update packets to the cable converters.  
Because of the way the tuners work, the update packets have to be sent (via 
TCP) to 10-15 different IPs, each one belonging to a different encoder.

I'm not really sure what the proper way to build a system like this is.  I've 
got the two Protocols written and working OK, and now I'm looking at how to 
propagate information from one to the other.  When I get an update packet on 
the high-level interface, I update the database, but I then want to have the 
low-level connections send an update to the encoders.

What I don't understand is how Factories come into the situation.  It looks, 
from the examples, that factories generally are instantiated for each 
connection [reactor.connectTCP(host, port, Factory())].  Supposing I 
instantiate the factories and save them:

for h in hosts:
    cf = MyClientFactory()
    reactor.connectTCP(h, 12345, cf)
    client_factories.append(cf)

Now, I get a high-level update on my server connection, which, after parsing, 
ends up running:

class ServerProtocol(Protocol):
    # . . .
    def activate_converter(self, converter):
        self.dbpool.runOperation("SQL etc.")
        # now send an update to each encoder for the converter

That's where I'm stuck.  The best I can do is:
        for f in self.factory.factories:
            f.last_proto.send(the_update)

This requires a special server factory that stores a list of the client 
protocol factories, and a special client factory that stores the last 
protocol instance it returned.  It seems like there must be a better way to 
accomplish this - perhaps without making a factory for each client protocol, 
which seems inelegant.

Thanks for any suggestions,
Mark



From projects at reedflute.com  Wed Aug 11 13:04:57 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 11 Aug 2004 21:04:57 +0200
Subject: [Twisted-Python] Architecture question for multiple
	client	connections (longish)
In-Reply-To: <200408111339.38919.mjohnston@skyweb.ca>
References: <200408111339.38919.mjohnston@skyweb.ca>
Message-ID: <411A6DD9.3070308@reedflute.com>


>This requires a special server factory that stores a list of the client 
>protocol factories, and a special client factory that stores the last 
>protocol instance it returned.  It seems like there must be a better way to 
>accomplish this - perhaps without making a factory for each client protocol, 
>which seems inelegant.
>
>  
>
As far as I understand the Twisted framework this is what 
twisted.application.internet is for - each protocol is then added to an 
application as a service.

see the example at :

http://www.twistedmatrix.com/documents/current/howto/tutorial/factory : 
"Note that one factory (in this case, a site) can listen on multiple 
ports with multiple protocols."

regards,

Eugene




From projects at reedflute.com  Wed Aug 11 13:17:19 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 11 Aug 2004 21:17:19 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040810235518677e9e@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>
	<305be882040810235518677e9e@mail.gmail.com>
Message-ID: <411A70BF.7060005@reedflute.com>

Britt Green wrote:

>Hi Eugene,
>
>Thanks for the example. Just a couple of quick questions if you don't mind.
>
>1) Does this create a telnetd daemon? The checkUserAndPass() method
>seems like it checks with the /etc/passwd file to enable a user to
>logon. Since I don't have access to my Unix box tonite I can't check
>this myself. Please correct me if I'm mistaken.
>  
>
To be technicallly correct - it creates a twistd listening on a TCP port 
and understands the Telnet protocol. I'm not sure about what 
checkUserAndPass() does.

>2) What does defer do exactly?
>
Defer is a neat way to wrap callback functions to avoid blocking IO 
calls - see http://www.twistedmatrix.com/documents/current/howto/defer

>
>3) Say I'm writing a program that takes connections via Telnet, like a
>chat server. Would using Twisted's Telnet class be the best way to
>accomplish this? Or should I just write my own via the more low-level
>Twisted classes?
>
>  
>
Why don't you look at 
http://www.twistedmatrix.com/documents/current/examples/chatserver.py

regards,

Eugene




From heikki at osafoundation.org  Wed Aug 11 13:49:24 2004
From: heikki at osafoundation.org (Heikki Toivonen)
Date: Wed, 11 Aug 2004 12:49:24 -0700
Subject: [Twisted-Python] Twisted+M2Crypto patch
Message-ID: <411A7844.3060103@osafoundation.org>

I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
Python wrapper for OpenSSL.

Twisted already integrates with PyOpenSSL, which is another Python 
wrapper for OpenSSL. However, PyOpenSSL has been dormant for a couple of 
years (although I have heard there might be a a rewrite in the making). 
M2Crypto has been under continuous development, and wraps more of 
OpenSSL. Additional point why I have been working on this is that 
Chandler project started using M2Crypto before choosing to use Twisted, 
and we are/will be relying on more and more M2Crypto functionality and 
it does not make sense to have two OpenSSL wrappers in one application.

So, now I have a patch that let's you choose which of these OpenSSL 
wrappers you want to use with Twisted.

By default PyOpenSSL will be selected. If you set 'useM2' attribute to 
true on the SSL context factory (for example 
twisted.internet.ssl.ClientContextFactory(useM2=True)), then M2Crypto 
will be used.

I have tested using Twisted's echoclient_ssl.py/echoserv_ssl.py example 
files (http://twistedmatrix.com/documents/current/examples/), as well as 
imap and smtp using samples from here: 
http://wiki.osafoundation.org/twiki/bin/view/Chandler/TwistedHome. I've 
also read imap email using Chandler 
(http://wiki.osafoundation.org/twiki/bin/view/Chandler/WebHome) with 
this code. They rely on the patch that was submitted by OSAF's Brian 
Kirsch earlier. I have tested on systems that have both M2Crypto and 
PyOpenSSL installed, or only one but not the other. Test OSes have been 
Windows XP and Debian (unstable).

There is one nasty hack in the patch which I have not yet ironed out: 
the changes in abstract.py. If I take those out, I cannot connect to an 
smtp server, and connection to a newly started server won't work the 
first time. Any help in figuring this out would be appreciated.

Any review comments appreciated. And if you have any question, please 
let me know.

-- 
   Heikki Toivonen

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: m2-patches
URL: </pipermail/twisted-python/attachments/20040811/a0963b81/attachment.ksh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040811/a0963b81/attachment.sig>

From foom at fuhm.net  Wed Aug 11 15:40:00 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 11 Aug 2004 17:40:00 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <411A7844.3060103@osafoundation.org>
References: <411A7844.3060103@osafoundation.org>
Message-ID: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 11, 2004, at 3:49 PM, Heikki Toivonen wrote:
> I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
> Python wrapper for OpenSSL.

IMO, this patch is messy and should not be accepted. It makes the 
twisted SSL implementation even more baroque than it already is by 
interleaving m2crypto and pyopenssl support code together into one big 
blob of insanity.

A switch to an alternative SSL implementation is only worthwhile if it 
lets us get *rid* of all the SSL turds all over the generic tcp code. 
SSL should be implementable as just another protocol. I believe that it 
is currently the fault of PyOpenSSL not exposing the right OpenSSL APIs 
for feeding data to it manually that Twisted's SSL is implemented the 
way it is.

With a good SSL library API, the Twisted SSL implementation can be done 
without any of the sorts of crazy hacks we currently have. See also 
<http://trevp.net/tlslite/>, a pure python SSL impl which I believe 
someone plugged into twisted in this fashion. I have not looked at it 
myself, however.

Someone ought to figure out how to clean up the twisted API to use 
TLSLite or M2Crypto or an improved PyOpenSSL, or all of the above, and 
get rid of all the ugly code we currently have. (well -- of course some 
of it will likely have to stay for backwards compatibility).

James




From glyph at divmod.com  Wed Aug 11 15:50:13 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 11 Aug 2004 17:50:13 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <1092261013.4055.43.camel@localhost>

On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
> On Aug 11, 2004, at 3:49 PM, Heikki Toivonen wrote:
> > I've been working on integrating M2Crypto to Twisted. M2Crypto is a 
> > Python wrapper for OpenSSL.
> 
> IMO, this patch is messy and should not be accepted.

I agree, for your stated reasons.

> A switch to an alternative SSL implementation is only worthwhile if it 
> lets us get *rid* of all the SSL turds all over the generic tcp code. 
> SSL should be implementable as just another protocol. I believe that it 
> is currently the fault of PyOpenSSL not exposing the right OpenSSL APIs 
> for feeding data to it manually that Twisted's SSL is implemented the 
> way it is.

In a sense, this is true, but there is also a fault of Twisted's API:
there needs to be a standard, robust, well-documented way to plug a new
transport type into the reactor.  (With one caveat: the current TLS
hacks are totally insane and are likely to remain that way; there's not
much to be done about that.)

So, PyOpenSSL should plug into the reactor as a transport, but all other
(saner) Python SSL implementations ought to plug in as a protocol.

-- 
  _  \ Glyph Lefkowitz   |"Strange is the night where black stars rise,
 / \  \ glyph at divmod.com | And strange moons circle through the skies,
 ` _o_ \-----------------+ But stranger still is, Lost Carcosa"
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From itamar at itamarst.org  Wed Aug 11 15:52:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 11 Aug 2004 17:52:56 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <1092261176.9722.0.camel@sheriffpony>

To focus attention on James' main point:

> SSL should be implementable as just another protocol.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From claw at kanga.nu  Wed Aug 11 16:21:08 2004
From: claw at kanga.nu (J C Lawrence)
Date: Wed, 11 Aug 2004 18:21:08 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: Message from Glyph Lefkowitz <glyph@divmod.com> of "Wed,
	11 Aug 2004 17:50:13 EDT." <1092261013.4055.43.camel@localhost> 
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> 
Message-ID: <6708.1092262868@kanga.nu>

On Wed, 11 Aug 2004 17:50:13 -0400 
Glyph Lefkowitz <glyph at divmod.com> wrote:
> On Wed, 2004-08-11 at 17:40, James Y Knight wrote:

> So, PyOpenSSL should plug into the reactor as a transport, but all
> other (saner) Python SSL implementations ought to plug in as a
> protocol.

Ahem.  SSL in this parlance is just a TCP connection form with more
dependencies (keys) failure modes (negotiation failures).  The protocol
that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
SMTP, etc).

-- 
J C Lawrence
---------(*)                Satan, oscillate my metallic sonatas.
claw at kanga.nu               He lived as a devil, eh?
http://www.kanga.nu/~claw/  Evil is a name of a foeman, as I live.



From foom at fuhm.net  Wed Aug 11 16:50:30 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 11 Aug 2004 18:50:30 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> <6708.1092262868@kanga.nu>
Message-ID: <D8C68E87-EBE8-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 11, 2004, at 6:21 PM, J C Lawrence wrote:
> Ahem.  SSL in this parlance is just a TCP connection form with more
> dependencies (keys) failure modes (negotiation failures).  The protocol
> that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
> SMTP, etc).

Actually, SSL is both a protocol *and* a transport, at the same time. 
It is a protocol *on* TCP, and it is a transport *for* another higher 
level protocol. That is probably how it ought to be modeled in Twisted, 
but I don't know if the Twisted API is up for it.

James




From projects at reedflute.com  Wed Aug 11 17:04:14 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 01:04:14 +0200
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>	<1092261013.4055.43.camel@localhost>
	<6708.1092262868@kanga.nu>
Message-ID: <411AA5EE.5020402@reedflute.com>

J C Lawrence wrote:

>On Wed, 11 Aug 2004 17:50:13 -0400 
>Glyph Lefkowitz <glyph at divmod.com> wrote:
>  
>
>>On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
>>    
>>
>
>  
>
>>So, PyOpenSSL should plug into the reactor as a transport, but all
>>other (saner) Python SSL implementations ought to plug in as a
>>protocol.
>>    
>>
>
>Ahem.  SSL in this parlance is just a TCP connection form with more
>dependencies (keys) failure modes (negotiation failures).  The protocol
>that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
>SMTP, etc).
>
>  
>
I have to agree.

Conceptually Secure Socket Layer is a special kind of socket. You never 
open a SSL connection by itself - you open a FTP session over SSL.

Implementing SSL as a protocol means that inside Twisted you will 
probably have to somehow chain two protocols  together  i.e. ftp  -> 
ssl  before you transport.

===============================================
Web                 -> www.reedflute.com
=============================================== 





From claw at kanga.nu  Wed Aug 11 17:49:41 2004
From: claw at kanga.nu (J C Lawrence)
Date: Wed, 11 Aug 2004 19:49:41 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch 
In-Reply-To: Message from Eugene Coetzee <projects@reedflute.com> 
	of "Thu, 12 Aug 2004 01:04:14 +0200." <411AA5EE.5020402@reedflute.com> 
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost> <6708.1092262868@kanga.nu>
	<411AA5EE.5020402@reedflute.com> 
Message-ID: <14023.1092268181@kanga.nu>

On Thu, 12 Aug 2004 01:04:14 +0200 
Eugene Coetzee <projects at reedflute.com> wrote:
> J C Lawrence wrote:
>> On Wed, 11 Aug 2004 17:50:13 -0400 Glyph Lefkowitz <glyph at divmod.com>
>> wrote:

> Conceptually Secure Socket Layer is a special kind of socket. You
> never open a SSL connection by itself - you open a FTP session over
> SSL.

Yup, at this level SSL is at layer 4, and in turn presents a layer 4
interface for higher level protocols to consume.

-- 
J C Lawrence
---------(*)                Satan, oscillate my metallic sonatas.
claw at kanga.nu               He lived as a devil, eh?
http://www.kanga.nu/~claw/  Evil is a name of a foeman, as I live.



From radeex at gmail.com  Wed Aug 11 18:01:19 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 11 Aug 2004 20:01:19 -0400
Subject: [Twisted-Python] Twisted+M2Crypto patch
In-Reply-To: <6708.1092262868@kanga.nu>
References: <411A7844.3060103@osafoundation.org>
	<FF35CE66-EBDE-11D8-BF5E-000A95A50FB2@fuhm.net>
	<1092261013.4055.43.camel@localhost>  <6708.1092262868@kanga.nu>
Message-ID: <60ed19d404081117014f999847@mail.gmail.com>

On Wed, 11 Aug 2004 18:21:08 -0400, J C Lawrence <claw at kanga.nu> wrote:
> On Wed, 11 Aug 2004 17:50:13 -0400
> Glyph Lefkowitz <glyph at divmod.com> wrote:
> > On Wed, 2004-08-11 at 17:40, James Y Knight wrote:
> 
> > So, PyOpenSSL should plug into the reactor as a transport, but all
> > other (saner) Python SSL implementations ought to plug in as a
> > protocol.
> 
> Ahem.  SSL in this parlance is just a TCP connection form with more
> dependencies (keys) failure modes (negotiation failures).  The protocol
> that flows over the SSL/TCP connection is arbitrary (eg HTTP, telnet,
> SMTP, etc).

Your tone indicates contradiction, but in fact, it's not: As far as
structuring SSL into Twisted goes, the logical way to do it is to
implement it as a Protocol (note the capital "P") and then use that
Protocol as a transport.  Glyph was referring to this, not any
abstract sense of where SSL fits into the 7-layer burrito^WOSI model
:-)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From projects at reedflute.com  Thu Aug 12 08:51:18 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 16:51:18 +0200
Subject: [Twisted-Python] lightweight persistence for twisted
Message-ID: <411B83E6.8010607@reedflute.com>

Hi,

I want to use a light weight (read flat file) persistence technique  
with twisted:

My criteria  for selecting the best technique are in order of relative 
importance:

1) Stability and reliability
2) Speed
3) Scalability - must be able to handle about 5 000 records max (simple 
text data fields )
4) Least external dependencies
5) Would be nice if it could  be accesses through Twisted's generic 
enterprise SQL API

The contenders that I think may be able to do the best job are in order 
of my current thinking:

1) enterprise.xmlreflector
2) persisted.sob
3) persisted.dirdbm
4) persisted.marmalade
5) twisted.xish.xpath

Can you give me some pointers - based perhaps on experience with the 
above modules - i.e bugs, pitfalls,recommendations, what you would do if 
you were me?

kind regards,

Eugene Coetzee


===============================================

Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Thu Aug 12 11:14:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 12 Aug 2004 13:14:22 -0400
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <411B83E6.8010607@reedflute.com>
References: <411B83E6.8010607@reedflute.com>
Message-ID: <0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
> 5) Would be nice if it could  be accesses through Twisted's generic 
> enterprise SQL API

Last I looked, twisted's reflector stuff needed a lot of work. I'd thus 
recommend against xmlreflector.

If you want SQL, you probably want SQLite. It is a C module, so it does 
introduce a dependancy, but it is otherwise fully self-contained. If 
you don't want SQL, you can get a lot simpler. With 5000 records, you 
can probably just store them all in a python datastructure in memory 
and either serialize it or write it to something like a ":" separated 
file.

James




From jt at parspro.com  Thu Aug 12 11:15:40 2004
From: jt at parspro.com (John Toohey)
Date: Thu, 12 Aug 2004 13:15:40 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411B83E6.8010607@reedflute.com>
References: <411B83E6.8010607@reedflute.com>
Message-ID: <3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>

Hi all,

I have a twisted server which can be started with the following code :-

if __name__=="__main__":

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     reactor.connectTCP('localhost',8002,f.getFactory())

     f.setServiceParent(service.IServiceCollection(application))
     f.startService()
     reactor.run()

The f.startService method makes a call to a database and using the PB 
layer, sends data to another twisted server every 5 minutes. However, 
when I try to create a .tap file and run it as a daemon with this code 
:-

def makeService(config):
     pbport = int(config["pbport"])

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     serviceCollection = service.IServiceCollection(application)
     internet.TCPClient("localhost",pbport, 
f.getFactory()).setServiceParent(serviceCollection)
     f.startService()

     return serviceCollection

The f.startService method is not called, and the data is not sent to 
the other server. What am I missing here?

TIA

John




From seamonkeys at gmail.com  Thu Aug 12 14:36:36 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 13:36:36 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <411A70BF.7060005@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>
	<305be882040810235518677e9e@mail.gmail.com>
	<411A70BF.7060005@reedflute.com>
Message-ID: <305be88204081213363033323f@mail.gmail.com>

Hey!

I've studied the chatserver example a few times. I suppose I probably
didn't initially define my question as well as I should have. If I'm
writing a program like a chatserver, or whatever that takes
connections over telnet, is it better to use the Telnet lib or just
use Protocol?

Cheers!

Britt

On Wed, 11 Aug 2004 21:17:19 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:
> Britt Green wrote:
> 
> >Hi Eugene,
> >
> >Thanks for the example. Just a couple of quick questions if you don't mind.
> >
> >1) Does this create a telnetd daemon? The checkUserAndPass() method
> >seems like it checks with the /etc/passwd file to enable a user to
> >logon. Since I don't have access to my Unix box tonite I can't check
> >this myself. Please correct me if I'm mistaken.
> >
> >
> To be technicallly correct - it creates a twistd listening on a TCP port
> and understands the Telnet protocol. I'm not sure about what
> checkUserAndPass() does.
> 
> >2) What does defer do exactly?
> >
> Defer is a neat way to wrap callback functions to avoid blocking IO
> calls - see http://www.twistedmatrix.com/documents/current/howto/defer
> 
> >
> >3) Say I'm writing a program that takes connections via Telnet, like a
> >chat server. Would using Twisted's Telnet class be the best way to
> >accomplish this? Or should I just write my own via the more low-level
> >Twisted classes?
> >
> >
> >
> Why don't you look at
> http://www.twistedmatrix.com/documents/current/examples/chatserver.py
> 
> 
> 
> regards,
> 
> Eugene
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From projects at reedflute.com  Thu Aug 12 14:46:59 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 22:46:59 +0200
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <411B83E6.8010607@reedflute.com>
	<0DF1E960-EC83-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <411BD743.5050509@reedflute.com>

James Y Knight wrote:

> With 5000 records, you can probably just store them all in a python 
> datastructure in memory and either serialize it or write it to 
> something like a ":" separated file.
>
Thanx for the feedback. This is exactly what persisted.dirdbm does.

I would have liked something a bit more xmlish since nowdays that is all 
the rave :)

regards,

Eugene





From projects at reedflute.com  Thu Aug 12 15:02:55 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 12 Aug 2004 23:02:55 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be88204081213363033323f@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>
	<305be88204081213363033323f@mail.gmail.com>
Message-ID: <411BDAFF.60007@reedflute.com>

Britt Green wrote:

>Hey!
>
>I've studied the chatserver example a few times. I suppose I probably
>didn't initially define my question as well as I should have. If I'm
>writing a program like a chatserver, or whatever that takes
>connections over telnet, is it better to use the Telnet lib or just
>use Protocol?
>
>  
>
Well - I suppose it depends on what you want to do.

Since all specialised protocols inherit basic functionality from Protocol - every specialised subclass brings something new to the party - as you can tell from the Telnet example.

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From seamonkeys at gmail.com  Thu Aug 12 15:33:51 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 14:33:51 -0700
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <411BDAFF.60007@reedflute.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>
	<305be88204081213363033323f@mail.gmail.com>
	<411BDAFF.60007@reedflute.com>
Message-ID: <305be882040812143352619a1b@mail.gmail.com>

On Thu, 12 Aug 2004 23:02:55 +0200, Eugene Coetzee
<projects at reedflute.com> wrote:

> Well - I suppose it depends on what you want to do.

I'd like to send and receive text over a telnet connection! :)

Britt



From projects at reedflute.com  Thu Aug 12 16:00:00 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 13 Aug 2004 00:00:00 +0200
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040812143352619a1b@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>	<305be88204081213363033323f@mail.gmail.com>	<411BDAFF.60007@reedflute.com>
	<305be882040812143352619a1b@mail.gmail.com>
Message-ID: <411BE860.9010708@reedflute.com>

Britt Green wrote:

>I'd like to send and receive text over a telnet connection! :)
>
>  
>
I would go with the Telnet class - it includes basic autentication and 
standard telnet response codes.




From seamonkeys at gmail.com  Thu Aug 12 16:27:55 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 15:27:55 -0700
Subject: [Twisted-Python] Closing a connection?
Message-ID: <305be88204081215273d228e05@mail.gmail.com>

I know this answer is obvious, but I can't seem to find it. How do I
close a connection? I have this bit of code:

class Echo(basic.LineReceiver):
    
    def lineReceived(self, data):
        "As soon as any data is received, write it back."

        if data == "quit":
            self.transport.write("Quit command received.\r\n")

How do I kill the client's connection? I've checked the docs and
Google, but couldn't find a thing on it. I know its something totally
obvious that I'm overlooking though...

Britt



From maoy at cis.upenn.edu  Thu Aug 12 16:34:10 2004
From: maoy at cis.upenn.edu (Yun Mao)
Date: Thu, 12 Aug 2004 18:34:10 -0400 (EDT)
Subject: [Twisted-Python] Closing a connection?
In-Reply-To: <305be88204081215273d228e05@mail.gmail.com>
References: <305be88204081215273d228e05@mail.gmail.com>
Message-ID: <Pine.LNX.4.56.0408121833220.5038@klondike.cis.upenn.edu>

self.transport.loseConnection()

Yun


On Thu, 12 Aug 2004, Britt Green wrote:

> I know this answer is obvious, but I can't seem to find it. How do I
> close a connection? I have this bit of code:
>
> class Echo(basic.LineReceiver):
>
>     def lineReceived(self, data):
>         "As soon as any data is received, write it back."
>
>         if data == "quit":
>             self.transport.write("Quit command received.\r\n")
>
> How do I kill the client's connection? I've checked the docs and
> Google, but couldn't find a thing on it. I know its something totally
> obvious that I'm overlooking though...
>
> Britt
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Thu Aug 12 17:49:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 12 Aug 2004 19:49:21 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <411C0201.8000003@divmod.com>

John Toohey wrote:
> Hi all,
> 
> I have a twisted server which can be started with the following code :-
> 
> if __name__=="__main__":
> 
>     application = service.Application('feedserver', uid=1, gid=1)
>     f = FeedService('feedserver')
>     reactor.connectTCP('localhost',8002,f.getFactory())
> 
>     f.setServiceParent(service.IServiceCollection(application))
>     f.startService()
>     reactor.run()

   There's little point in using service.Application, if it is used as 
above.  A better way to do this would be to put the above code into a 
.tac file (adding the appropriate imports), remove the last two lines, 
and run it with "twistd -y <filename.tac>".

> 
> The f.startService method makes a call to a database and using the PB 
> layer, sends data to another twisted server every 5 minutes. However, 
> when I try to create a .tap file and run it as a daemon with this code :-
> 
> def makeService(config):
>     pbport = int(config["pbport"])
> 
>     application = service.Application('feedserver', uid=1, gid=1)
>     f = FeedService('feedserver')
>     serviceCollection = service.IServiceCollection(application)
>     internet.TCPClient("localhost",pbport, 
> f.getFactory()).setServiceParent(serviceCollection)
>     f.startService()
> 
>     return serviceCollection
> 
> The f.startService method is not called, and the data is not sent to the 
> other server. What am I missing here?
> 

   makeService is run when the .tap file is written.  That means 
f.startService() is called when the .tap file is written.  Since the 
reactor isn't running at this point, the connection will never happen. 
When you later run this .tap file with "twistd -f <filename.tap>", I 
would expect the connection to occur.  Are you running the resulting tap 
file with "twistd -f"?

   Jp



From exarkun at divmod.com  Thu Aug 12 18:00:51 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 12 Aug 2004 20:00:51 -0400
Subject: [Twisted-Python] Telnet server example?
In-Reply-To: <305be882040812143352619a1b@mail.gmail.com>
References: <305be88204081010486864b6e7@mail.gmail.com>	<41191143.4020008@reedflute.com>	<305be882040810235518677e9e@mail.gmail.com>	<411A70BF.7060005@reedflute.com>	<305be88204081213363033323f@mail.gmail.com>	<411BDAFF.60007@reedflute.com>
	<305be882040812143352619a1b@mail.gmail.com>
Message-ID: <411C04B3.4000404@divmod.com>

Britt Green wrote:
> On Thu, 12 Aug 2004 23:02:55 +0200, Eugene Coetzee
> <projects at reedflute.com> wrote:
> 
> 
>>Well - I suppose it depends on what you want to do.
> 
> 
> I'd like to send and receive text over a telnet connection! :)
> 

   Connections established with the telnet program are often nothing 
more than "regular" bytes being read from and written to a socket. 
There are features of the telnet protocol, but using a program with 
"telnet" in its name does not obligate you to use them.  For example, I 
frequently debug HTTP, IMAP4, SMTP, and POP3 servers using telnet.  None 
of these protocols is related to the telnet protocol, but the "telnet" 
program works just fine for interacting with them.

   I hope this helps you decide,

   Jp



From horatio at computer.org  Thu Aug 12 19:19:21 2004
From: horatio at computer.org (Aguido Horatio Davis)
Date: Fri, 13 Aug 2004 11:19:21 +1000
Subject: [Twisted-Python] Minor patch to twisted.xish.domish
Message-ID: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>

G'day,

I was playing with ElementStreams yesterday and I discovered that 
ExpatElementStream throws an IndexError if well-formed but 
ill-namespaced XML (well, the multistatus return body from a WebDAV 
request looked well-namespaced to _me_, but...) is fed to it for 
parsing.

Here's a patch against this morning's SVN tree that makes this 
behaviour go away.

Index: twisted/xish/domish.py
===================================================================
--- twisted/xish/domish.py      (revision 11309)
+++ twisted/xish/domish.py      (working copy)
@@ -617,7 +617,12 @@
                  del attrs[k]

          # Construct the new element
-        e = Element(qname, self.defaultNsStack[-1], attrs)
+       # AHD: make it not explode if no namespace on stack
+       try:
+           nsuri = self.defaultNsStack[-1]
+       except IndexError:
+           nsuri = None
+        e = Element(qname, nsuri, attrs)

          # Document already started
          if self.documentStarted == 1:

Cheers,

Horatio
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2369 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040813/3e6dbcfe/attachment-0002.bin>

From abe at fettig.net  Thu Aug 12 19:58:12 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 12 Aug 2004 21:58:12 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
Message-ID: <411C2034.7050202@fettig.net>

Hi folks,

I'm looking for help understanding how .tap files are meant to be used 
in production.  I know that a .tap, when generated, contains the 
configuration info for an application.  And there are tools like tap2deb 
and tap2ntsvc that take the information in a .tap and convert it into an 
installable packages.  But then what happens when the user who installs 
the package wants to change some aspect of the configuration?  Typically 
on UNIX they would edit a config file, but if I understand correctly 
using a config file for twisted apps is discouraged.

Could someone describe how this process is supposed to work:

1. User installs package built from tap file.
2. User runs application
3. User changes application config
4. User restarts application

Thanks!

Abe



From jt at parspro.com  Thu Aug 12 20:03:41 2004
From: jt at parspro.com (John Toohey)
Date: Thu, 12 Aug 2004 22:03:41 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411C0201.8000003@divmod.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
Message-ID: <FFC685FF-ECCC-11D8-B75D-000A95AE562E@parspro.com>

I do run it with twistd -f feedserver.tap. The factory starts up, but 
service.start is not called.

John
On Aug 12, 2004, at 7:49 PM, Jp Calderone wrote:

> John Toohey wrote:
>> Hi all,
>> I have a twisted server which can be started with the following code 
>> :-
>> if __name__=="__main__":
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     reactor.connectTCP('localhost',8002,f.getFactory())
>>     f.setServiceParent(service.IServiceCollection(application))
>>     f.startService()
>>     reactor.run()
>
>   There's little point in using service.Application, if it is used as 
> above.  A better way to do this would be to put the above code into a 
> .tac file (adding the appropriate imports), remove the last two lines, 
> and run it with "twistd -y <filename.tac>".
>
>> The f.startService method makes a call to a database and using the PB 
>> layer, sends data to another twisted server every 5 minutes. However, 
>> when I try to create a .tap file and run it as a daemon with this 
>> code :-
>> def makeService(config):
>>     pbport = int(config["pbport"])
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     serviceCollection = service.IServiceCollection(application)
>>     internet.TCPClient("localhost",pbport, 
>> f.getFactory()).setServiceParent(serviceCollection)
>>     f.startService()
>>     return serviceCollection
>> The f.startService method is not called, and the data is not sent to 
>> the other server. What am I missing here?
>
>   makeService is run when the .tap file is written.  That means 
> f.startService() is called when the .tap file is written.  Since the 
> reactor isn't running at this point, the connection will never happen. 
> When you later run this .tap file with "twistd -f <filename.tap>", I 
> would expect the connection to occur.  Are you running the resulting 
> tap file with "twistd -f"?
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


JT




From golux at comcast.net  Thu Aug 12 21:30:18 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 12 Aug 2004 23:30:18 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <411C35CA.7010704@comcast.net>

Abe Fettig wrote:
> Hi folks,
> 
> I'm looking for help understanding how .tap files are meant to be used 
> in production.  ...

Hi Abe,

I thought I'd respond even though I'm not a guru and my
method (which hasn't yet been used in *real* production,
but I plan to use it unless someone suggests something
better ;) may not be the orthodox way.

Real twisted gurus:  I trust you will set me straight if
necessary -- comments welcome!  ;)

For my app, I have created a shell script that generates
the tap every time the application is started up.  The
configuration options are given as arguments that are
passed thru to the tap builder ("pgertap.py", in my case).
I've included my shell script below.  It's intended to be
usable as an /etc/init.d script (I'll add the functions
and runlevels when I go production).

I'll send pgertap.py if you like, but it's modeled exactly
after the example in the howto:  "Writing a New Plug-In for
mktap", so if you read that you'll know all you need to know
about tap generators.

#! /bin/sh

usage='Usage:  pgerd [start|startsecure|restart|restartsecure|stop]'

if [[ -z $1 ]]; then
    echo $usage
    exit 1
fi
if [[ -z $PGERHOME ]]; then
    echo 'env var PGERHOME must be defined.'
    exit 1
fi

cd $PGERHOME/logs

case $1 in
    start)
        # start pgerd on http://[hostname]:8080
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    startsecure)
        # start pgerd on https://[hostname]:8080
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME \
                   --encrypted=1
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    restart)
        # restart pgerd on http://[hostname]:8080
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    restartsecure)
        # restart pgerd on https://[hostname]:8080
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        mktap --appname=pgerd \
              pger --domains=PanGalactic,NARS \
                   --home=$PGERHOME \
                   --encrypted=1
        twistd --no_save -l $PGERHOME/logs/pgerd.log \
                         -f $PGERHOME/logs/pger.tap
        ;;
    stop)
        # stop pgerd and archive its log
        kill `cat $PGERHOME/logs/twistd.pid`
        mv $PGERHOME/logs/pgerd.log \
           $PGERHOME/logs/archive/log.`date +%Y%m%d.%H.%M`
        sleep 1
        rm $PGERHOME/logs/*.tap
        ;;
    *)
        # print help and exit
        echo "argument \"$1\" not recognized."
        echo $usage
        exit 1
        ;;
esac
exit 0



From seamonkeys at gmail.com  Thu Aug 12 23:31:01 2004
From: seamonkeys at gmail.com (Britt Green)
Date: Thu, 12 Aug 2004 22:31:01 -0700
Subject: [Twisted-Python] More Twisted questions
Message-ID: <305be882040812223124ad12a1@mail.gmail.com>

Hello All,

Thanks for everyone who's helped me out so far. Twisted is slooowly
starting to make sense to me! ;)

So I've been playing around with the Chat Server example, and I've
extended it to respond to different commands. But there's one thing
I'd like to know how to be able to do with it. When a user connects,
his connection is added to the list of clients that are connected to
the server. When a message is entered, the program goes through each
connection in the list and sends them the message.

What I want to know is this: suppose I want to slightly change the
message for one person. For example, when I type a line of text I
might like to see "You say: foobar" while everyone else just sees
"foobar". How would I pick out that particular connection from the
list?

Cheers!

Britt



From jt at parspro.com  Fri Aug 13 08:05:11 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 10:05:11 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411C0201.8000003@divmod.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
Message-ID: <CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>

The .tap file is now as follows :-
def makeService(config):
     pbport = int(config["pbport"])

     application = service.Application('feedserver', uid=1, gid=1)
     f = FeedService('feedserver')
     reactor.connectTCP('localhost',8002,f.getFactory())

     f.setServiceParent(service.IServiceCollection(application))

The server starts fine with twistd -f feedserver.tap, but the 
startService method is not called, so the server just sits there. Is 
there any reason why twisted would not call the startService method?

John

On Aug 12, 2004, at 7:49 PM, Jp Calderone wrote:

> John Toohey wrote:
>> Hi all,
>> I have a twisted server which can be started with the following code 
>> :-
>> if __name__=="__main__":
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     reactor.connectTCP('localhost',8002,f.getFactory())
>>     f.setServiceParent(service.IServiceCollection(application))
>>     f.startService()
>>     reactor.run()
>
>   There's little point in using service.Application, if it is used as 
> above.  A better way to do this would be to put the above code into a 
> .tac file (adding the appropriate imports), remove the last two lines, 
> and run it with "twistd -y <filename.tac>".
>
>> The f.startService method makes a call to a database and using the PB 
>> layer, sends data to another twisted server every 5 minutes. However, 
>> when I try to create a .tap file and run it as a daemon with this 
>> code :-
>> def makeService(config):
>>     pbport = int(config["pbport"])
>>     application = service.Application('feedserver', uid=1, gid=1)
>>     f = FeedService('feedserver')
>>     serviceCollection = service.IServiceCollection(application)
>>     internet.TCPClient("localhost",pbport, 
>> f.getFactory()).setServiceParent(serviceCollection)
>>     f.startService()
>>     return serviceCollection
>> The f.startService method is not called, and the data is not sent to 
>> the other server. What am I missing here?
>
>   makeService is run when the .tap file is written.  That means 
> f.startService() is called when the .tap file is written.  Since the 
> reactor isn't running at this point, the connection will never happen. 
> When you later run this .tap file with "twistd -f <filename.tap>", I 
> would expect the connection to occur.  Are you running the resulting 
> tap file with "twistd -f"?
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Fri Aug 13 08:32:14 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:32:14 -0400
Subject: [Twisted-Python] Minor patch to twisted.xish.domish
In-Reply-To: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>
References: <CE1CDA6A-ECC6-11D8-890B-000393B3D34A@computer.org>
Message-ID: <1092407533.10527.0.camel@sheriffpony>

Thanks for the patch. Please add it to http://twistedmatrix.com/bugs/ so
it doesn't get lost, and assign it to dizzyd, the xish maintainer.




From itamar at itamarst.org  Fri Aug 13 08:33:44 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:33:44 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <1092407624.10523.3.camel@sheriffpony>

On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:

> I'm looking for help understanding how .tap files are meant to be used 
> in production.  I know that a .tap, when generated, contains the 
> configuration info for an application.  And there are tools like tap2deb 
> and tap2ntsvc that take the information in a .tap and convert it into an 
> installable packages.

tap2deb and friends also work on .tac files, which are Python files (see
the application howto for an example). .tac files allow you to give
users a Python file for config that they can edit. Or, your .tap or .tac
could load a config  file in the format of your choice and use that to
configure your app, and then users could edit that.




From itamar at itamarst.org  Fri Aug 13 08:35:26 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 13 Aug 2004 10:35:26 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <1092407726.10528.6.camel@sheriffpony>

On Fri, 2004-08-13 at 10:05, John Toohey wrote:

> The .tap file is now as follows :-
> def makeService(config):
>      pbport = int(config["pbport"])
> 
>      application = service.Application('feedserver', uid=1, gid=1)
>      f = FeedService('feedserver')
>      reactor.connectTCP('localhost',8002,f.getFactory())
> 
>      f.setServiceParent(service.IServiceCollection(application))

If you're using taps you don't create the application yourself. Instead,
you *return* a service. So:

def makeService(config):
    f = FeedService('feedserver')
    reactor.connectTCP('localhost',8002,f.getFactory())
    return f

-- 
Itamar Shtull-Trauring    http://itamarst.org





From abe at fettig.net  Fri Aug 13 08:57:19 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 10:57:19 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <1092407624.10523.3.camel@sheriffpony>
References: <411C2034.7050202@fettig.net>
	<1092407624.10523.3.camel@sheriffpony>
Message-ID: <411CD6CF.1030507@fettig.net>

Thanks, Itamar.  That makes sense.

Itamar Shtull-Trauring wrote:

> tap2deb and friends also work on .tac files, which are Python files (see
> the application howto for an example). .tac files allow you to give
> users a Python file for config that they can edit. Or, your .tap or .tac
> could load a config  file in the format of your choice and use that to
> configure your app, and then users could edit that.




From abe at fettig.net  Fri Aug 13 09:02:06 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 11:02:06 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C35CA.7010704@comcast.net>
References: <411C2034.7050202@fettig.net> <411C35CA.7010704@comcast.net>
Message-ID: <411CD7EE.5080906@fettig.net>

Stephen Waterbury wrote:

> For my app, I have created a shell script that generates
> the tap every time the application is started up.  The
> configuration options are given as arguments that are
> passed thru to the tap builder ("pgertap.py", in my case).
> I've included my shell script below.  It's intended to be
> usable as an /etc/init.d script (I'll add the functions
> and runlevels when I go production).

That seems like an interesting approach.  I'll have to play with tap2deb 
and tap2ntsvc a bit to see how they work, and then figure out the best 
way to store my configuration.

Abe



From litnimax at fromru.com  Fri Aug 13 09:08:38 2004
From: litnimax at fromru.com (litnimax)
Date: Fri, 13 Aug 2004 18:08:38 +0300
Subject: [Twisted-Python] need explanation in tutorial
Message-ID: <opscoe0og6ghc261@navigator>

Hi all, sorry for silly question.
I started learning twisted, and have a question.
(from evolving finger part 2)



class FingerSetterProtocol(basic.LineReceiver):
      def connectionMade(self): self.lines = []
      def lineReceived(self, line): self.lines.append(line)
      def connectionLost(self, reason):
          self.factory.setUser(*self.lines[:2])
          # first line: user    second line: status

What is "*self.lines[:2]"?
Why is there asterisk?
If I remove * from parameters, I get functions take 2 arguments.
  From python I know that if parameter is coming with *, that means a tuple
of parameters, if with ** - dict of parameters.

>>> a
{1: '22'}
>>> a.__setitem__(*[1,'22222'])
>>> a
{1: '22222'}
>>> *[1,'22']
    File "<stdin>", line 1
      *[1,'22']
      ^
SyntaxError: invalid syntax

How this code is working!!??  :))
How can *[1,'22'] work??

Thanks much in advance :)






-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From jt at parspro.com  Fri Aug 13 09:36:11 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 11:36:11 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <1092407726.10528.6.camel@sheriffpony>
References: <411B83E6.8010607@reedflute.com>
	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>
	<411C0201.8000003@divmod.com>
	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>
	<1092407726.10528.6.camel@sheriffpony>
Message-ID: <8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>

Thanks for your help. I just tried this, but the startService method is 
still not called. Is there something else I need to do?

John

On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:

> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>
>> The .tap file is now as follows :-
>> def makeService(config):
>>      pbport = int(config["pbport"])
>>
>>      application = service.Application('feedserver', uid=1, gid=1)
>>      f = FeedService('feedserver')
>>      reactor.connectTCP('localhost',8002,f.getFactory())
>>
>>      f.setServiceParent(service.IServiceCollection(application))
>
> If you're using taps you don't create the application yourself. 
> Instead,
> you *return* a service. So:
>
> def makeService(config):
>     f = FeedService('feedserver')
>     reactor.connectTCP('localhost',8002,f.getFactory())
>     return f
>
> -- 
> Itamar Shtull-Trauring    http://itamarst.org
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From projects at reedflute.com  Fri Aug 13 10:52:12 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 13 Aug 2004 18:52:12 +0200
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
References: <411B83E6.8010607@reedflute.com>	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>	<411C0201.8000003@divmod.com>	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>	<1092407726.10528.6.camel@sheriffpony>
	<8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
Message-ID: <411CF1BC.5020008@reedflute.com>

Prehaps you are overriding startService() somewhere along.

Can you post the code for FeedService.


John Toohey wrote:

> Thanks for your help. I just tried this, but the startService method 
> is still not called. Is there something else I need to do?
>
> John
>
> On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:
>
>> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>>
>>> The .tap file is now as follows :-
>>> def makeService(config):
>>> pbport = int(config["pbport"])
>>>
>>> application = service.Application('feedserver', uid=1, gid=1)
>>> f = FeedService('feedserver')
>>> reactor.connectTCP('localhost',8002,f.getFactory())
>>>
>>> f.setServiceParent(service.IServiceCollection(application))
>>
>>

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> 018 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 





From jt at parspro.com  Fri Aug 13 11:03:58 2004
From: jt at parspro.com (John Toohey)
Date: Fri, 13 Aug 2004 13:03:58 -0400
Subject: [Twisted-Python] Service as a daemon
In-Reply-To: <411CF1BC.5020008@reedflute.com>
References: <411B83E6.8010607@reedflute.com>	<3C132D6A-EC83-11D8-B75D-000A95AE562E@parspro.com>	<411C0201.8000003@divmod.com>	<CA7580A1-ED31-11D8-B75D-000A95AE562E@parspro.com>	<1092407726.10528.6.camel@sheriffpony>
	<8134857A-ED3E-11D8-B75D-000A95AE562E@parspro.com>
	<411CF1BC.5020008@reedflute.com>
Message-ID: <C42F925E-ED4A-11D8-B75D-000A95AE562E@parspro.com>

Here it is. Thanks for take the time to look at it.

class FeedService(service.Service):

     def __init__(self, *args):
         self.parent.__init__(self, *args)
         self.s = startup()
         self.s.start()

     def go(self):
         d = self.getData()
         d.addCallback(self.sendData)
         d.addErrback(self.getDataError)
         d.addCallback(self.dataSentOK)

     def dataSentOK(self, data):
         log.msg("dataSentOK", data)
         self.call = reactor.callLater(10, self.go)

     def getData(self):
         log.msg("getData")
         d = defer.Deferred()
         self.call = reactor.callLater(2, d.callback, 
self.s.data.getDataAsString())
         return d

     def sendData(self, data):
         log.msg("sendData", data)
         # Strip all whitespace
         xml = ""
         xml = xml.join(data.split())

         oddsObj  = SenderOdds("admiral","full", xml)
         self.sender = Sender(oddsObj)

         deferred = self.factory.getRootObject()
         deferred.addCallback(self.sender.got_obj)
         deferred.addErrback(self.getConnectionError)

         return xml

     def startService(self):
         log.msg("start Service")
         self.go()

         service.Service.startService(self)

     def stopService(self):
         log.msg("stop Service")

         service.Service.stopService(self)
         self.call.cancel()

     def getConnectionError(self,failure):
         log.msg("Error in getConnection", failure)

     def getDataError(self,failure):
         log.msg("Error in getData", failure)

     def getFactory(self):
         log.msg("getFactory")
         self.factory = ReconnectingPBClientFactory()
         return self.factory

JT
On Aug 13, 2004, at 12:52 PM, Eugene Coetzee wrote:

> Prehaps you are overriding startService() somewhere along.
>
> Can you post the code for FeedService.
>
>
> John Toohey wrote:
>
>> Thanks for your help. I just tried this, but the startService method 
>> is still not called. Is there something else I need to do?
>>
>> John
>>
>> On Aug 13, 2004, at 10:35 AM, Itamar Shtull-Trauring wrote:
>>
>>> On Fri, 2004-08-13 at 10:05, John Toohey wrote:
>>>
>>>> The .tap file is now as follows :-
>>>> def makeService(config):
>>>> pbport = int(config["pbport"])
>>>>
>>>> application = service.Application('feedserver', uid=1, gid=1)
>>>> f = FeedService('feedserver')
>>>> reactor.connectTCP('localhost',8002,f.getFactory())
>>>>
>>>> f.setServiceParent(service.IServiceCollection(application))
>>>
>>>
>
> -- 
> --
> ===============================================
> Reedflute Software Solutions
>
> Telephone           -> 018 293 3236
> General information -> info at reedflute.com
> Project information -> projects at reedflute.com
> Web                 -> www.reedflute.com
> ===============================================
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From glyph at divmod.com  Fri Aug 13 11:57:19 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 13 Aug 2004 13:57:19 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <411C2034.7050202@fettig.net>
References: <411C2034.7050202@fettig.net>
Message-ID: <1092419839.4055.490.camel@localhost>

On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:

> I'm looking for help understanding how .tap files are meant to be used 
> in production.

Abe,

Thanks for asking :).  This is an issue that there has been very little
conclusive discussion of, but lots of strong opinions on.  I will try to
give you a little background on how we got where we are now, and where
we hope to be eventually.  Unfortunately this probably won't answer your
question directly, but I hope it will help.

The idea behind tap files is that you have an object which represents
your application's configuration, and the storage format of that object
is back-end independent.  The most obvious application of this is "your
configuration can live in a database", but that's really just the tip of
the iceberg.

The difficulty with tap files is that there is a significant gap between
theory and practice, because it's very difficult to get the prospective
users (system administrators, particularly large-scale system
administrators) to provide comment on what would be the most useful
setup for themselves.  The system administration community is, almost by
definition, fond of the way in which they already know how to do
things.  There is a windows sysadmin culture, but since pretty much all
serious servers are run on UNIX these days, UNIX admins are the ones I
care about, and they like the nebulously-defined concept of "config
files".

In my experience, "config files" are really just extremely inconsistent,
limited, often buggy and slow programming languages with a huge implicit
import mechanism bizarre and arbitrary quoting rules.  Inevitably they
begin as a simple association of semantically significant keys with
values and eventually mutate into a tree-structured hierarchy with some
kind of limited control structures.  Depending on the nature of the
application domain for the particular server, the evolution can happen
slower or faster, but it seems inevitable for applications run on any
kind of scale.  The evolution tends to slow down as you reach about 80%
of the functionality of a real programming language, because sysadmins
don't want to be developers.  I'm certainly not saying they should be;
lawyers and novelists may speak the same language, but they hardly
participate in the same activities.

Obviously I'm not a big fan of config files.  The biggest problem I have
with config files is that knowledge does not migrate - if you have
learned the bizarre internals of Apache configuration, this will in no
way prepare you for the configuration of ANY mail system, let alone
sendmail.  There is also no way to hook apache up to any kind of mail
system by specifying it in the configuration language, because you need
a configuration directive to support "mail service".  Abruptly, you must
transition to a "real" programming language, compile and deploy
functionality, since the facility to do ad-hoc configuration is too
limited.

This makes the configuration and deployment of webmail systems a really
hairy problem... a problem which I have spent a good deal of time and
grief to solve :). [0]

It is probably an unstated goal of the Twisted project to never
officially support only one configuration mechanism.  In some
configurations, you really need the full power of Python; that's what
the twistd -y configuration option is for.

The 'mktap' utility distributed with Twisted is, unfortunately, not a
serious application deployment tool.  It was intended as a stopgap
measure because twisted.coil was taking too long to implement.

twisted.coil, briefly, was designed to emit tapfiles by creating a new,
"blank" server, adding servers, web resources, IRC bots and the like to
it in real time using a web-based management interface, and then saving
the result to a file.  Both the complexity and flexibility of the UI and
the stability of the persistence mechanism were problems that made it
very difficult to implement in a way which was actually usable in
production, but we have had a few usable prototypes developed.

mktap is only really useful if your application has an initial
configuration step to get the initial UI going and then several
subsequent configuration steps that involve changing the state of your
server and then saving it away, usually to a database or a more stable
storage that doesn't look anything like a config file (or a tap file) at
all.  This has not become a common idiom in Twisted code, so mktap
remains a good deal less useful than it could be.

Coil still hasn't been successfully implemented, so given mktap's
shortcomings, most serious applications end up providing some
specialized modules for configuration and then using a .tac file (really
a .py file with a few special rules about its namespace) to provide
configuration.  For example, quotient SVN trunk has abandoned mktap
entirely and is now using a module called 'quotient.deployment' so a
typical configuration ends up looking like this:

### 

from quotient.deployment import deploy

application = deploy(dataDirectory = 'data/db',
                     fileDirectory = 'data/files',
                     webLogFile = 'web.log',
                     domainNames = ['localhost', '127.0.0.1'],
                     pop3Port = 20110,
                     pop3sPort = 20995,
                     imap4Port = 20143,
                     imap4sPort = 20993,
                     httpPort = 20080,
                     httpsPort = 20443,
		     certificateFile = 'server.pem',
		     privateKeyFile = 'server.pem',
                     smtpPort = 20025,
                     smtpsPort = 20465,
                     sipPort = 25060,
		     pbPort = 8787,
                     manholeUser = 'admin',
                     manholePassword = 'admin',
                     manholePort = 'tcp:19293:interface=localhost')

###

So, that's how we're doing it at Divmod, and it works pretty well for
us, but I feel that it's a failure of Twisted as a framework that things
have to work this way.  In particular, I'd like to be able to separate
Quotient's application from the initialization of the web server, and
connect a web resource published by the quotient application to a web
publisher, which might live on an SSL-enabled socket, on a TCP port, or
on a UNIX socket, or even over some crazy UDP proxying thing.  Right now
we've glued the concrete TCP and SSL sockets to the web server straight
to the application, because anything else simply would have been too
complex and since our application speaks nearly every protocol Twisted
is capable of, we don't care too much about configuration integration
points with third-party software yet.  This *will* become a serious
problem when we want to integrate third-party plugins and configure
them, though, because that configuration will want to live in the same
area and there is no facility for that.  Currently the way to configure
a plugin is to make a *new* deployment module and write a derivative
function there for your configuration, which only allows one
sub-application to run at a time.

>From the experiences I've heard from other Twisted developers though,
it's far from clear how to make progress beyond this point without
making far more policy decisions than we're comfortable with.  Twisted
is a framework that tends to get called in only in the cases where you
have hard problems (after all, if you have easy problems, why not use an
eminently adequate and much more widely deployed solution like Apache or
Sendmail?) and hard problems have diverse requirements.  Many twisted
applications have very different ideas about how to, for example,
connect to a database, or even what a database *is*.  It's not clear to
me that we can say that any of these approaches is definitely
wrongheaded or invalid and needs to be set aside by the framework, but
with these differing ideas, there aren't a lot of opportunities for
integration that would inspire a general integration system.

For the moment, I am approaching this problem from the opposite end.  I
think that when we[1] refactor Quotient[2] into Mantissa[3], it will
evolve into a more generic application deployment platform with its own
plain-python configuration subsystem that is some simple icing on top of
.tac files, and when we have had some experience in the field with how
that works as a configuration system, we will backport some of that
knowledge into Twisted at a more general level.

Until then, deployment in Twisted can be a confusing question, but I
would suggest you follow this general strategy: avoid designing a
configuration language, and try to consider ways to simplify Python down
to the absolute bare essentials to say what your application needs to
say about its deployment environment, then use twistd -y or the
equivalent.

If you have some success figuring out how to do this well, please let us
know so we can try to develop some common patterns from our approaches
and put them into the framework.

My thinking right now runs along the lines of completely new and
different features for Twisted, such as the ability to locate singleton
services via the reactor which are connected to an event source
somehow... but I don't think those would help you very much at this
juncture.

-- Footnotes:
0: plug - check out my work so far: http://www.divmod.org/
1: e.g. my company, Divmod
2: our current application, a webmail system
3: our working title for the application server platform that encodes
our policy decisions as well as our implementation mechanisms, such as
our object database and web templating framework

-- 
  _  \ Glyph Lefkowitz   |"Songs that the Hyades shall sing,
 / \  \ glyph at divmod.com | Where flap the tatters of the King,
 ` _o_ \-----------------+ Must die unheard in, Dim Carcosa."
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From foom at fuhm.net  Fri Aug 13 12:13:04 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 13 Aug 2004 14:13:04 -0400
Subject: [Twisted-Python] need explanation in tutorial
In-Reply-To: <opscoe0og6ghc261@navigator>
References: <opscoe0og6ghc261@navigator>
Message-ID: <6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>

On Aug 13, 2004, at 11:08 AM, litnimax wrote:
> class FingerSetterProtocol(basic.LineReceiver):
>      def connectionMade(self): self.lines = []
>      def lineReceived(self, line): self.lines.append(line)
>      def connectionLost(self, reason):
>          self.factory.setUser(*self.lines[:2])
>          # first line: user    second line: status
>
> What is "*self.lines[:2]"?

This is a basic python question, not a twisted question. 
http://docs.python.org/tut/node6.html#SECTION006740000000000000000

James




From abe at fettig.net  Fri Aug 13 12:37:17 2004
From: abe at fettig.net (Abe Fettig)
Date: Fri, 13 Aug 2004 14:37:17 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <1092419839.4055.490.camel@localhost>
References: <411C2034.7050202@fettig.net> <1092419839.4055.490.camel@localhost>
Message-ID: <411D0A5D.90803@fettig.net>

Glyph,

Wow, awesome reply.  That's by far the best explanation of .taps I've 
come accross.  Thank you!

Based on what you said, I'll probably use a simple python file for 
configuration, like so:

file "hepconfig.py":
field1='rasberry sorbet'
field3='cherry garcia'

Then my application can do something like this:

defaultConfig = {'field1': 'chocolate',
                  'field2': 'vanilla',
                  'field3': 'strawberry'}

import hepconfig
userKeys = filter(lambda f: not f.startswith('_'), dir(hepconfig))
userVals = [getattr(hepconfig, key) for key in userKeys]
userConfig = dict(zip(userKeys, userVals))

for key, val in defaultConfig.items():
     userConfig.setdefault(key, val)

... which results in userConfig containing:
{'field1': 'rasberry sorbet',
  'field2': 'vanilla',
  'field3', 'cherry garcia'}

Then I can have a single mktap option, 
--configfile=/path/to/hepconfig.py (which could be hard-coded in .debs 
and .rpms).  I think that strikes a nice balance between avoiding a 
special configuration language, and still being easy for sysadmins to 
figure out.

Does that seem like a reasonable approach?

Abe



From litnimax at fromru.com  Fri Aug 13 14:04:17 2004
From: litnimax at fromru.com (litnimax)
Date: Fri, 13 Aug 2004 23:04:17 +0300
Subject: [Twisted-Python] need explanation in tutorial
In-Reply-To: <6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>
References: <opscoe0og6ghc261@navigator>
	<6BCF3109-ED54-11D8-BF5E-000A95A50FB2@fuhm.net>
Message-ID: <opscospfn4ghc261@navigator>

Thanks much. I will try to ask only twisted related questions..

On Fri, 13 Aug 2004 14:13:04 -0400, James Y Knight <foom at fuhm.net> wrote:

> On Aug 13, 2004, at 11:08 AM, litnimax wrote:
>> class FingerSetterProtocol(basic.LineReceiver):
>>      def connectionMade(self): self.lines = []
>>      def lineReceived(self, line): self.lines.append(line)
>>      def connectionLost(self, reason):
>>          self.factory.setUser(*self.lines[:2])
>>          # first line: user    second line: status
>>
>> What is "*self.lines[:2]"?
>
> This is a basic python question, not a twisted question.  
> http://docs.python.org/tut/node6.html#SECTION006740000000000000000
>
> James
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From heikowu at ceosg.de  Sat Aug 14 05:16:22 2004
From: heikowu at ceosg.de (Heiko Wundram)
Date: Sat, 14 Aug 2004 13:16:22 +0200
Subject: [Twisted-Python] Nevow question
Message-ID: <200408141316.22590.heikowu@ceosg.de>

Hi all!

I'm currently working on a web-application with twisted and nevow, and I'm 
using the SessionWrapper of nevow to enable logins. Well, here comes the 
catch: When a login fails, nevow redirects to the original page, with a 
parameter "login-failed=<somestring>", and I'd like to catch this parameter 
(rather, check if it is there, if it is, output a different string from the 
template). For this I have created two sections in the HTML template, both 
using nevow:render="<somefunction>", and for one of these, I return "", and 
for the other just context.

But, the problem remains: how can I get the POST/GET parameters (without using 
something like Formless) that were posted to the page that is being 
displayed?

Heiko.



From itamar at itamarst.org  Sat Aug 14 09:43:47 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 14 Aug 2004 11:43:47 -0400
Subject: [Twisted-Python] Nevow question
In-Reply-To: <200408141316.22590.heikowu@ceosg.de>
References: <200408141316.22590.heikowu@ceosg.de>
Message-ID: <1092498227.15710.0.camel@sheriffpony>

Hi,

Please ask web questions on the twisted-web mailing list.




From radeex at gmail.com  Sat Aug 14 14:00:30 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 14 Aug 2004 16:00:30 -0400
Subject: [Twisted-Python] Things that Need to be Done for 2.0
Message-ID: <60ed19d40408141300723da7a9@mail.gmail.com>

glyph: Come up with a precise license and copyright policy. Do that,
and someone (probably me) can change trunk HEAD to use it.

Everyone: Get rid of all deprecation warnings when running current APIs.

Me: Finish converting our packaging to use zpkgtools, obsoleting half
of release-twisted. Then improve release-twisted (fix bugs in SVN
workflow, etc).

Me: Write documentation on release process and teach people how to do it.

Moshez: At least do the initial work for Debian packages for each of
our subprojects.

Web Sites, in order of importance:

Someone: Move existing Twisted-core-specific content to a new Core
project web site.

foom, fzZzy, dreid: Write a project web site for Web.

z3p: Write a project web site for Conch.

exarkun: Write project web sites for names, news, and mail.

spiv: Write a project web site for Lore and Runner.

glyph, z3p, exarkun, ???: Write a project web site for Words.

cce: Write a project web site for Flow.

Tv: Write a project web site for Pair.

Project web sites are to be placed at
http://twistedmatrix.com/projects/*/, where * is 'core', 'conch',
'web', etc. Put your content in the WebSite svn repository in
"twistedmatrix.com/projects/". If anybody needs access to this
repository shoot me a message.

Obviously, not all of these are terribly urgent. The urgent ones are
core, names, conch, lore, and web. If nobody gets around to creating
real web sites for the others, I'll put in place a basic stock web
page.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From glyph at divmod.com  Sat Aug 14 19:58:27 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 14 Aug 2004 21:58:27 -0400
Subject: [Twisted-Python] Things that Need to be Done for 2.0
In-Reply-To: <60ed19d40408141300723da7a9@mail.gmail.com>
References: <60ed19d40408141300723da7a9@mail.gmail.com>
Message-ID: <1092535107.12769.0.camel@localhost>

On Sat, 2004-08-14 at 16:00 -0400, Christopher Armstrong wrote:
> [do some stuff]

Thanks, chris!  I'll write something up on copyright soon.

-- 
  _  \ Glyph Lefkowitz   |"Songs that the Hyades shall sing,
 / \  \ glyph at divmod.com | Where flap the tatters of the King,
 ` _o_ \-----------------+ Must die unheard in, Dim Carcosa."
  ( ._\ \ - Cassilda's Song, "The King in Yellow", Act 1, Scene 2




From serj_trejo at hotmail.com  Sun Aug 15 04:08:58 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 15 Aug 2004 06:08:58 -0400
Subject: [Twisted-Python] lightweight persistence for twisted
Message-ID: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>

Why not use divmod's atop. Just parse your flat files into simple objects 
that are persisted via atop's Store and PowerUps into a Sleepycat object 
database (assign each object containing your flat file a GID that is 
Indexed)?

Serg


>From: James Y Knight <foom at fuhm.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] lightweight persistence for twisted
>Date: Thu, 12 Aug 2004 13:14:22 -0400
>
>On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
>>5) Would be nice if it could  be accesses through Twisted's generic 
>>enterprise SQL API
>
>Last I looked, twisted's reflector stuff needed a lot of work. I'd thus 
>recommend against xmlreflector.
>
>If you want SQL, you probably want SQLite. It is a C module, so it does 
>introduce a dependancy, but it is otherwise fully self-contained. If you 
>don't want SQL, you can get a lot simpler. With 5000 records, you can 
>probably just store them all in a python datastructure in memory and either 
>serialize it or write it to something like a ":" separated file.
>
>James
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Sun Aug 15 04:18:01 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 15 Aug 2004 06:18:01 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
Message-ID: <BAY12-F20l51dpPIfsb00023850@hotmail.com>

Did someone mention recently on #twisted.web (or maybe a related IRC channel 
such as #divmod ) that .tac files are going to be deprecated in the next 
major rev of Twisted, or maybe I misunderstood (I thought I read this a few 
days ago an IRC conversation but can't recall).

Serg


>From: Itamar Shtull-Trauring <itamar at itamarst.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Understanding the role of .tap files
>Date: Fri, 13 Aug 2004 10:33:44 -0400
>
>On Thu, 2004-08-12 at 21:58, Abe Fettig wrote:
>
> > I'm looking for help understanding how .tap files are meant to be used
> > in production.  I know that a .tap, when generated, contains the
> > configuration info for an application.  And there are tools like tap2deb
> > and tap2ntsvc that take the information in a .tap and convert it into an
> > installable packages.
>
>tap2deb and friends also work on .tac files, which are Python files (see
>the application howto for an example). .tac files allow you to give
>users a Python file for config that they can edit. Or, your .tap or .tac
>could load a config  file in the format of your choice and use that to
>configure your app, and then users could edit that.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Help STOP SPAM with the new MSN 8 and get 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sun Aug 15 08:59:02 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Aug 2004 10:59:02 -0400
Subject: [Twisted-Python] Understanding the role of .tap files
In-Reply-To: <BAY12-F20l51dpPIfsb00023850@hotmail.com>
References: <BAY12-F20l51dpPIfsb00023850@hotmail.com>
Message-ID: <1092581292.15709.28.camel@sheriffpony>

On Sun, 2004-08-15 at 06:18, Sergio Trejo wrote:
> Did someone mention recently on #twisted.web (or maybe a related IRC channel 
> such as #divmod ) that .tac files are going to be deprecated in the next 
> major rev of Twisted, or maybe I misunderstood

You probably misunderstood.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mailinglist at ltsai.com  Sun Aug 15 09:45:33 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sun, 15 Aug 2004 23:45:33 +0800
Subject: [Twisted-Python] adbapi.ConnectionPool
Message-ID: <cfo0fa$7oi$1@sea.gmane.org>

Is the connection pool global within reactor/twistd? In another words, 
if I import adbapi in various of my py files and uses it, will I be 
using a single global connection pool throughout my modules?

Liming




From mailinglist at ltsai.com  Sun Aug 15 10:01:57 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 00:01:57 +0800
Subject: [Twisted-Python] reactor.stop
Message-ID: <cfo1e3$9mf$1@sea.gmane.org>

Dear all,

I understand we are not supposed to call reactor.stop() within twistd as 
the reactor is already running, therefore it will shut down the entire 
application.

Why does calling reactor.stop within my module will cause the 
application to shutdown? Is it because even when I import the reactor in 
my own module, it is still somewhat linked to the twistd reactor through 
the system event trigger?

Regards,
Liming




From dave at krondo.com  Sun Aug 15 10:47:00 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 15 Aug 2004 09:47:00 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool
In-Reply-To: <cfo0fa$7oi$1@sea.gmane.org>
References: <cfo0fa$7oi$1@sea.gmane.org>
Message-ID: <1092588420.1787.104.camel@oneiros>

No, it is not global. If you want all your modules
to use the same pool, you will have to arrange for
them to access the same ConnectionPool object (e.g.,
by putting that object in your top-level service).

dave

On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> Is the connection pool global within reactor/twistd? In another words, 
> if I import adbapi in various of my py files and uses it, will I be 
> using a single global connection pool throughout my modules?
> 
> Liming
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From lists at holsman.net  Sun Aug 15 17:51:48 2004
From: lists at holsman.net (Ian Holsman)
Date: Mon, 16 Aug 2004 09:51:48 +1000
Subject: [Twisted-Python] lightweight persistence for twisted
In-Reply-To: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>
References: <BAY12-F17c93w4qRVHK000568cc@hotmail.com>
Message-ID: <411FF714.5060408@holsman.net>

I'm new to this list, so apolagies if this has been discussed before.

has anyone tried DyBase with twisted ? 
http://www.garret.ru/~knizhnik/dybase.html

It provides a lite object database (single process only) which is 
reasonably fast.

Sergio Trejo wrote:
> Why not use divmod's atop. Just parse your flat files into simple 
> objects that are persisted via atop's Store and PowerUps into a 
> Sleepycat object database (assign each object containing your flat file 
> a GID that is Indexed)?
> 
> Serg
> 
> 
>> From: James Y Knight <foom at fuhm.net>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] lightweight persistence for twisted
>> Date: Thu, 12 Aug 2004 13:14:22 -0400
>>
>> On Aug 12, 2004, at 10:51 AM, Eugene Coetzee wrote:
>>
>>> 5) Would be nice if it could  be accesses through Twisted's generic 
>>> enterprise SQL API
>>
>>
>> Last I looked, twisted's reflector stuff needed a lot of work. I'd 
>> thus recommend against xmlreflector.
>>
>> If you want SQL, you probably want SQLite. It is a C module, so it 
>> does introduce a dependancy, but it is otherwise fully self-contained. 
>> If you don't want SQL, you can get a lot simpler. With 5000 records, 
>> you can probably just store them all in a python datastructure in 
>> memory and either serialize it or write it to something like a ":" 
>> separated file.
>>
>> James
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _________________________________________________________________
> Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
> http://join.msn.com/?page=features/featuredemail
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From mailinglist at ltsai.com  Sun Aug 15 20:29:04 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 10:29:04 +0800
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <1092588420.1787.104.camel@oneiros>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
Message-ID: <cfp660$r4l$1@sea.gmane.org>

Dave Peticolas wrote:

> No, it is not global. If you want all your modules
> to use the same pool, you will have to arrange for
> them to access the same ConnectionPool object (e.g.,
> by putting that object in your top-level service).
> 
> dave
> 
> On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> 
>>Is the connection pool global within reactor/twistd? In another words, 
>>if I import adbapi in various of my py files and uses it, will I be 
>>using a single global connection pool throughout my modules?
>>
>>Liming
>>
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

About the start method in the API, what does it mean by "If you are 
using the reactor normally, this function does *not* need to be called."

Liming







From itamar at itamarst.org  Sun Aug 15 21:22:09 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 15 Aug 2004 23:22:09 -0400
Subject: [Twisted-Python] reactor.stop
In-Reply-To: <cfo1e3$9mf$1@sea.gmane.org>
References: <cfo1e3$9mf$1@sea.gmane.org>
Message-ID: <1092626529.24291.0.camel@sheriffpony>

On Sun, 2004-08-15 at 12:01, Tsai Li Ming wrote:

> Why does calling reactor.stop within my module will cause the 
> application to shutdown? Is it because even when I import the reactor in 
> my own module, it is still somewhat linked to the twistd reactor through 
> the system event trigger?

There is only one reactor. Calling reactor.stop() means "stop the
reactor", and this stops the application since the reactor is what's
driving it.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mailinglist at ltsai.com  Sun Aug 15 21:39:11 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Mon, 16 Aug 2004 11:39:11 +0800
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <1092626529.24291.0.camel@sheriffpony>
References: <cfo1e3$9mf$1@sea.gmane.org> <1092626529.24291.0.camel@sheriffpony>
Message-ID: <cfpa9f$17h$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:

> On Sun, 2004-08-15 at 12:01, Tsai Li Ming wrote:
> 
> 
>>Why does calling reactor.stop within my module will cause the 
>>application to shutdown? Is it because even when I import the reactor in 
>>my own module, it is still somewhat linked to the twistd reactor through 
>>the system event trigger?
> 
> 
> There is only one reactor. Calling reactor.stop() means "stop the
> reactor", and this stops the application since the reactor is what's
> driving it.
> 


The part that I don't understand is when I import the reactor in my own 
py files, why will it be the same single reactor that the application 
uses. Is it something special that twisted is handling or is just a 
simple python question?

Many thanks,
Liming




From dave at krondo.com  Sun Aug 15 23:53:50 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 15 Aug 2004 22:53:50 -0700
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <cfp660$r4l$1@sea.gmane.org>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
	<cfp660$r4l$1@sea.gmane.org>
Message-ID: <1092635629.6594.7.camel@oneiros>

On Sun, 2004-08-15 at 19:29, Tsai Li Ming wrote:
> Dave Peticolas wrote:
> 
> > No, it is not global. If you want all your modules
> > to use the same pool, you will have to arrange for
> > them to access the same ConnectionPool object (e.g.,
> > by putting that object in your top-level service).
> > 
> > dave
> > 
> > On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> > 
> >>Is the connection pool global within reactor/twistd? In another words, 
> >>if I import adbapi in various of my py files and uses it, will I be 
> >>using a single global connection pool throughout my modules?
> >>
> >>Liming
> >>
> About the start method in the API, what does it mean by "If you are 
> using the reactor normally, this function does *not* need to be called."

When the reactor is created it registers its own start
method with the reactor so that when the reactor starts,
or if it is already running, the method will be called
automatically. Calling start by hand is generally only
for unit tests.

dave





From radeex at gmail.com  Sun Aug 15 23:11:31 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 16 Aug 2004 01:11:31 -0400
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <cfpa9f$17h$1@sea.gmane.org>
References: <cfo1e3$9mf$1@sea.gmane.org> <1092626529.24291.0.camel@sheriffpony>
	<cfpa9f$17h$1@sea.gmane.org>
Message-ID: <60ed19d4040815221155b9b93c@mail.gmail.com>

On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> The part that I don't understand is when I import the reactor in my own
> py files, why will it be the same single reactor that the application
> uses. Is it something special that twisted is handling or is just a
> simple python question?

Well, the reactor module is pretty weird and magical, but in this
regard, it acts exactly like any python module. When you import any
module twice, you get the same module.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From db3l at fitlinxx.com  Mon Aug 16 08:40:36 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Aug 2004 10:40:36 -0400
Subject: [Twisted-Python] Supporting new types with PB
Message-ID: <uk6vz16zf.fsf@fitlinxx.com>

I've been trying to get Perspective Broker to cooperate for the
transmission of mx.DateTime values across a remote session (we use
them for some of our components which are referenceable objects) and
was hoping to solicit input on the simplest or most appropriate way to
handle things.

A while back we encountered a similar problem with mx.DateTime values
within objects that we were returning from components as copyables.
Back then we "punted" and ended up supporting the concept of pickling
specific fields for the remote copy, thus letting the mx.DateTime
values go through as pickles.  But I was hoping to support them more
fully now.

Originally I was hoping that I could just define mx.DateTime as an
acceptable (type, class, module) in the default security object, but
the problem seems to be that it needs support in the raw jelly layer,
since it's a type in an extension module.  I'm guessing that the same
problem would exist with Python's (2.3+) datetime type, since that is
also a new type and not a user class.

So I next figured I'd just augment the jelly layer to add the new
type, but that doesn't look all that clean to do.  I really only want
to change jelly, but the default broker uses the jelly module
functions directly.  I suppose I could reach in and change the jelly
reference in the broker module but that seems messy.

The one replaceable point appears to be the broker used by the PB
factory.  Presumably I could subclass the default broker with one that
overrode the appropriate stuff to use my replacement jelly and in that
replacement jelly handle the extra types prior to deferring to the
default implementation.  At least the client is quickly replaceable.
For the server I'd subclass PBServerFactory to override the direct
reference to Broker in buildProtocol, but would otherwise have to cut
'n paste the existing function to maintain behavior, which seems a
little fragile.

I suppose a separate alternative would be to wrap mx.DateTime in my
own classes that implemented Jellyable/Unjellyable, but then I've got
the overhead of running around with my own DateTime wrappers for no
other reason than remote transmission.

Of course, a final alternative is close to what we did previously for
the Copyable problem, and just augment our wrappers on either end to
transform mx.DateTime values into something jelly can handle across
the relevant method calls.

Am I missing something simple?  Is there an intended method by which
the existing jelly support in Twisted can be augmented to support
other built-in types rather than only new classes?

Thanks.

-- David




From abe at fettig.net  Mon Aug 16 08:55:55 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 10:55:55 -0400
Subject: [Twisted-Python] including plugins.tml in a package
Message-ID: <4120CAFB.1080608@fettig.net>

Hi folks,

It's come to my attention that my current Hep package for windows 
(packaged using bdist_win32) doesn't put the plugins.tml file where it 
should be (under site-packages/hep).  In googling around for a solution, 
I came across this post:

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html

Which describes using an "undocumented hack" in distutils to get the 
plugins.tml in the right place.  Is that the correct way to do this?

Thanks,
Abe



From dave at krondo.com  Mon Aug 16 09:06:22 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 16 Aug 2004 08:06:22 -0700
Subject: [Twisted-Python] Re: adbapi.ConnectionPool
In-Reply-To: <1092635629.6594.7.camel@oneiros>
References: <cfo0fa$7oi$1@sea.gmane.org> <1092588420.1787.104.camel@oneiros>
	<cfp660$r4l$1@sea.gmane.org>  <1092635629.6594.7.camel@oneiros>
Message-ID: <1092668782.6594.14.camel@oneiros>

On Sun, 2004-08-15 at 22:53, Dave Peticolas wrote:
> On Sun, 2004-08-15 at 19:29, Tsai Li Ming wrote:
> > Dave Peticolas wrote:
> > 
> > > No, it is not global. If you want all your modules
> > > to use the same pool, you will have to arrange for
> > > them to access the same ConnectionPool object (e.g.,
> > > by putting that object in your top-level service).
> > > 
> > > dave
> > > 
> > > On Sun, 2004-08-15 at 08:45, Tsai Li Ming wrote:
> > > 
> > >>Is the connection pool global within reactor/twistd? In another words, 
> > >>if I import adbapi in various of my py files and uses it, will I be 
> > >>using a single global connection pool throughout my modules?
> > >>
> > >>Liming
> > >>
> > About the start method in the API, what does it mean by "If you are 
> > using the reactor normally, this function does *not* need to be called."
> 
> When the reactor is created it registers its own start
> method with the reactor so that when the reactor starts,
> or if it is already running, the method will be called
> automatically. Calling start by hand is generally only
> for unit tests.

That should be 'when the connection pool is created'.

dave





From projects at reedflute.com  Mon Aug 16 09:58:05 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 16 Aug 2004 17:58:05 +0200
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <60ed19d4040815221155b9b93c@mail.gmail.com>
References: <cfo1e3$9mf$1@sea.gmane.org>
	<1092626529.24291.0.camel@sheriffpony>	<cfpa9f$17h$1@sea.gmane.org>
	<60ed19d4040815221155b9b93c@mail.gmail.com>
Message-ID: <4120D98D.7020202@reedflute.com>

Christopher Armstrong wrote:

>On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
>  
>
>>The part that I don't understand is when I import the reactor in my own
>>py files, why will it be the same single reactor that the application
>>uses. Is it something special that twisted is handling or is just a
>>simple python question?
>>    
>>
>
>Well, the reactor module is pretty weird and magical, but in this
>regard, it acts exactly like any python module. When you import any
>module twice, you get the same module.
>
>  
>
In fact - reactor is not an package - but a global instance returned by 
class SelectReactor.

from twisted.internet.default.py

def install():
"""Configure the twisted mainloop to be run using the select() reactor.
"""
reactor = SelectReactor()
main.installReactor(reactor)


When the reactor is installed the following code in 
twisted.internet.main.py checks for existing instances of 'reactor'.

def installReactor(reactor):
global addReader, addWriter, removeReader, removeWriter
global iterate, addTimeout, wakeUp
# this stuff should be common to all reactors.
import twisted.internet
import sys
assert not sys.modules.has_key('twisted.internet.reactor'), \
"reactor already installed"
twisted.internet.reactor = reactor
sys.modules['twisted.internet.reactor'] = reactor

regards,

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From matt at pollenation.net  Mon Aug 16 10:05:12 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 16 Aug 2004 17:05:12 +0100
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120CAFB.1080608@fettig.net>
References: <4120CAFB.1080608@fettig.net>
Message-ID: <1092672312.31917.106.camel@harold>

On Mon, 2004-08-16 at 15:55, Abe Fettig wrote:
> Hi folks,
> 
> It's come to my attention that my current Hep package for windows 
> (packaged using bdist_win32) doesn't put the plugins.tml file where it 
> should be (under site-packages/hep).  In googling around for a solution, 
> I came across this post:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html
> 
> Which describes using an "undocumented hack" in distutils to get the 
> plugins.tml in the right place.  Is that the correct way to do this?
> 
> Thanks,
> Abe

Nevow tinkers with distutils to install a .css in amongst the Python
modules. Here's the config:

        from distutils.command import install
        from distutils.core import setup
        
        for scheme in install.INSTALL_SCHEMES.values():
            scheme['data'] = scheme['purelib']
        
        setup(
            author='Donavon Preston et al',
            author_email='dp at divmod.org',
            name='nevow',
            version='0.2pre',
            description='Web Application Framework',
            url='http://www.nevow.com/',
        #    download_url='http://www.nevow.com/',
            packages=['formless', 'nevow', 'nevow.flat', 'nevow.test'],
            data_files=[
                ['formless', ['formless/freeform-default.css']],
                ]
            )

I can't remember where that hack came from but all it does is change the
scheme(s) so that data files install to the same base directory as the
Python packages and modules. That's good enough for Nevow but you may
need something smarter.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From abe at fettig.net  Mon Aug 16 10:28:26 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 12:28:26 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <1092672312.31917.106.camel@harold>
References: <4120CAFB.1080608@fettig.net> <1092672312.31917.106.camel@harold>
Message-ID: <4120E0AA.1060603@fettig.net>

Matt Goodall wrote:

> Nevow tinkers with distutils to install a .css in amongst the Python
> modules. Here's the config:

[snip]

>         for scheme in install.INSTALL_SCHEMES.values():
>             scheme['data'] = scheme['purelib']

I've tried that approach, but as far as I can see it doesn't work for 
bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
bdist_wininst", and installed the package.  Rather than putting 
formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
it put it in C:\Python23\formless, which I'm pretty sure is wrong.

Abe



From matt at pollenation.net  Mon Aug 16 10:43:18 2004
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 16 Aug 2004 17:43:18 +0100
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120E0AA.1060603@fettig.net>
References: <4120CAFB.1080608@fettig.net>
	<1092672312.31917.106.camel@harold>  <4120E0AA.1060603@fettig.net>
Message-ID: <1092674597.31921.126.camel@harold>

On Mon, 2004-08-16 at 17:28, Abe Fettig wrote:
> Matt Goodall wrote:
> 
> > Nevow tinkers with distutils to install a .css in amongst the Python
> > modules. Here's the config:
> 
> [snip]
> 
> >         for scheme in install.INSTALL_SCHEMES.values():
> >             scheme['data'] = scheme['purelib']
> 
> I've tried that approach, but as far as I can see it doesn't work for 
> bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
> bdist_wininst", and installed the package.  Rather than putting 
> formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
> it put it in C:\Python23\formless, which I'm pretty sure is wrong.

Oh ... erm ... damn ;-). Thanks for pointing the error out.

Cheers, Matt
-- 
Matt Goodall <matt at pollenation.net>




From abe at fettig.net  Mon Aug 16 12:00:17 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 14:00:17 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <1092674597.31921.126.camel@harold>
References: <4120CAFB.1080608@fettig.net>	<1092672312.31917.106.camel@harold>
	<4120E0AA.1060603@fettig.net> <1092674597.31921.126.camel@harold>
Message-ID: <4120F631.3050707@fettig.net>

OK, I've come up with a hack that seems to accomplish putting data files 
in with python files in bdist_wininst.  This is a hack, folks - I'm not 
a distutils expert, and I'm really hoping someone is going to chime in 
with a better way.

Basically, I'm checking to see if the build command is bdist_wininst, 
and if so, prepending /PURELIB/ to the path of data files.  This has the 
effect of putting these files in the installer zip under 
PURELIB/file/name, rather than DATA/file/name.  I can't offer a good 
explanation for why this works, though.

Here's my setup.py file:

from distutils.core import setup
from distutils.command import install
import os, sys

data_files = [['hep', ['hep/plugins.tml']],
               ['hep/web/static', ['hep/web/static/hep.css']],
               ]

# hack to put data files in same basedir as python code
for scheme in install.INSTALL_SCHEMES.values():
     scheme['data'] = scheme['purelib']

# another hack to accomplish the same thing for windows builds
if sys.argv[1] == 'bdist_wininst':
     for fileInfo in data_files:
         fileInfo[0] = '/PURELIB/%s' % fileInfo[0]

setup(name='hep',
       version='0.6.1',
       description='Hep, a multiprotocol message server.',
       author='Abe Fettig',
       author_email='xxx at xxxxx.xxx',
       url='http://www.fettig.net/projects/hep',
       packages=['hep', 'hep.services', 'hep.tests'],
       data_files=data_files,
       )

-- EOF --

I'm cross-posting this to distutils-sig in case someone there has a 
better solution.

Abe

Matt Goodall wrote:

> On Mon, 2004-08-16 at 17:28, Abe Fettig wrote:
> 
>>Matt Goodall wrote:
>>
>>
>>>Nevow tinkers with distutils to install a .css in amongst the Python
>>>modules. Here's the config:
>>
>>[snip]
>>
>>
>>>        for scheme in install.INSTALL_SCHEMES.values():
>>>            scheme['data'] = scheme['purelib']
>>
>>I've tried that approach, but as far as I can see it doesn't work for 
>>bdist_wininst.  I just checked nevow out of cvs, ran "python setup.py 
>>bdist_wininst", and installed the package.  Rather than putting 
>>formless/freeform-default.css in c:\Python23\Lib\site-packages\formless, 
>>it put it in C:\Python23\formless, which I'm pretty sure is wrong.
> 
> 
> Oh ... erm ... damn ;-). Thanks for pointing the error out.
> 
> Cheers, Matt




From fdrake at acm.org  Mon Aug 16 18:13:49 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Mon, 16 Aug 2004 20:13:49 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in a
	package
In-Reply-To: <4120F631.3050707@fettig.net>
References: <4120CAFB.1080608@fettig.net> <1092674597.31921.126.camel@harold>
	<4120F631.3050707@fettig.net>
Message-ID: <200408162013.49223.fdrake@acm.org>

On Monday 16 August 2004 02:00 pm, Abe Fettig wrote:
 > OK, I've come up with a hack that seems to accomplish putting data files
 > in with python files in bdist_wininst.  This is a hack, folks - I'm not
 > a distutils expert, and I'm really hoping someone is going to chime in
 > with a better way.

Things are better in Python 2.4.  ;-)  You'll be able to spell out a set of 
files that should be installed into your package directly in setup.py.  For 
instance, if you're distributing the pakcage "pkg" and it includes a file 
"plugins.html" that should be in the package directory, you can use:

setup(packages=["pkg"],
      package_data={"pkg": ["pkg/plugins.html"]},
      ...)

If you want to do this without waiting for Python 2.4, you can use Phillip 
Eby's setuptools package.  This can be found in the Python CVS tree at 
nondist/sandbox/setuptools/.  Very cool.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From abe at fettig.net  Mon Aug 16 19:21:10 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 16 Aug 2004 21:21:10 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in
	a	package
In-Reply-To: <200408162013.49223.fdrake@acm.org>
References: <4120CAFB.1080608@fettig.net>
	<1092674597.31921.126.camel@harold>	<4120F631.3050707@fettig.net>
	<200408162013.49223.fdrake@acm.org>
Message-ID: <41215D86.7060001@fettig.net>

Thanks, Fred, that's good to know!

Fred L. Drake, Jr. wrote:

> Things are better in Python 2.4.  ;-)  You'll be able to spell out a set of 
> files that should be installed into your package directly in setup.py.  For 
> instance, if you're distributing the pakcage "pkg" and it includes a file 
> "plugins.html" that should be in the package directory, you can use:
> 
> setup(packages=["pkg"],
>       package_data={"pkg": ["pkg/plugins.html"]},
>       ...)
> 
> If you want to do this without waiting for Python 2.4, you can use Phillip 
> Eby's setuptools package.  This can be found in the Python CVS tree at 
> nondist/sandbox/setuptools/.  Very cool.
> 
> 
>   -Fred
> 




From fdrake at acm.org  Mon Aug 16 20:50:35 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Mon, 16 Aug 2004 22:50:35 -0400
Subject: [Distutils] Re: [Twisted-Python] including plugins.tml in
	=?iso-8859-1?q?a	package?=
In-Reply-To: <41215D86.7060001@fettig.net>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net>
Message-ID: <200408162250.35027.fdrake@acm.org>

On Monday 16 August 2004 09:21 pm, Abe Fettig wrote:
 > Thanks, Fred, that's good to know!

I'm glad to try and help.

It just struck me that you cross-posted from the Twisted list; Twisted is 
moving to use the "zpkg" tool I wrote for Zope 3 for packaging.  zpkg 
automatically makes data files from a package part of the installation of 
that package if you don't tell it to do something different with them.

Information about zpkg is available at:

    http://www.zope.org/Members/fdrake/zpkgtools/

I'll be glad to answer questions and generally try to improve the 
documentation to make zpkg easier to learn and use.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From radeex at gmail.com  Mon Aug 16 21:43:08 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 16 Aug 2004 23:43:08 -0400
Subject: [Twisted-Python] zpkg usage in Twisted (was: including plugins.tml
	in a package?)
In-Reply-To: <200408162250.35027.fdrake@acm.org>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net> <200408162250.35027.fdrake@acm.org>
Message-ID: <60ed19d40408162043456550f0@mail.gmail.com>

On Mon, 16 Aug 2004 22:50:35 -0400, Fred L. Drake, Jr. <fdrake at acm.org> wrote:
> It just struck me that you cross-posted from the Twisted list; Twisted is
> moving to use the "zpkg" tool I wrote for Zope 3 for packaging.  zpkg
> automatically makes data files from a package part of the installation of
> that package if you don't tell it to do something different with them.
> 
> Information about zpkg is available at:
> 
>     http://www.zope.org/Members/fdrake/zpkgtools/
> 
> I'll be glad to answer questions and generally try to improve the
> documentation to make zpkg easier to learn and use.

And here my cue to start asking questions. :-)

Fred, our setup.py is pretty scary. It's full of hacks specific to
various platforms, etc. I'll list all those which confuse me here and
hopefully you can tell me the best way to port this stuff to zpkg --
whether zpkg handles it already or if I need to extend the way it
calls distutils (and how I can do that).

(in order that they appear in our setup.py)
1) build_scripts_twisted
2) build_ext_twisted
3) OS-X gcc arguments hack
4) WIN32 macro

1) build_scripts_twisted

class build_scripts_twisted(build_scripts):
    """Renames scripts so they end with '.py' on Windows."""

    def run(self):
        build_scripts.run(self)
        if os.name == "nt":
            for f in os.listdir(self.build_dir):
                fpath=os.path.join(self.build_dir, f)
                if not fpath.endswith(".py"):
                    try:
                        os.unlink(fpath + ".py")
                    except EnvironmentError, e:
                        if e.args[1]=='No such file or directory':
                            pass
                    os.rename(fpath, fpath + ".py")

2) build_ext_twisted

This is a doozy. As the name implies, it's a subclass of build_ext. It
overrides build_extensions to call self._detect_modules before calling
the regular build_extensions; _detect_modules does a bunch of compiler
tests, conditionally adding things to self.extensions.

The tests generate .c file that uses CPP directives to test for the
existence of header files and names from those headers. Oh, and one
that checks for a struct member (yow). It uses self.compiler.compile
to run these through the compiler and checks for a CompileError.

3) OS-X GCC arguments hack

# Apple distributes a nasty version of Python 2.2 w/ all release builds of
# OS X 10.2 and OS X Server 10.2
BROKEN_CONFIG = '2.2 (#1, 07/14/02, 23:25:09) \n[GCC Apple cpp-precomp 6.14]'
if sys.platform == 'darwin' and sys.version == BROKEN_CONFIG:
    # change this to 1 if you have some need to compile
    # with -flat_namespace as opposed to -bundle_loader
    FLAT_NAMESPACE = 0
    BROKEN_ARCH = '-arch i386'
    BROKEN_NAMESPACE = '-flat_namespace -undefined_suppress'
    import distutils.sysconfig
    distutils.sysconfig.get_config_vars()
    x = distutils.sysconfig._config_vars['LDSHARED']
    y = x.replace(BROKEN_ARCH, '')
    if not FLAT_NAMESPACE:
        e = os.path.realpath(sys.executable)
        y = y.replace(BROKEN_NAMESPACE, '-bundle_loader ' + e)
    if y != x:
        print "Fixing some of Apple's compiler flag mistakes..."
        distutils.sysconfig._config_vars['LDSHARED'] = y


4) WIN32 macro

# always define WIN32 under Windows
if os.name == 'nt':
    define_macros = [("WIN32", 1)]
else:
    define_macros = []

I got no idea what this does.


Any idea how I should port these things to zpkg?

Thanks!

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Tue Aug 17 01:21:56 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 03:21:56 -0400
Subject: [Twisted-Python] Re: reactor.stop
In-Reply-To: <4120D98D.7020202@reedflute.com>
References: <cfo1e3$9mf$1@sea.gmane.org>	<1092626529.24291.0.camel@sheriffpony>	<cfpa9f$17h$1@sea.gmane.org>	<60ed19d4040815221155b9b93c@mail.gmail.com>
	<4120D98D.7020202@reedflute.com>
Message-ID: <4121B214.9080602@divmod.com>

Eugene Coetzee wrote:
> Christopher Armstrong wrote:
> 
>> On Mon, 16 Aug 2004 11:39:11 +0800, Tsai Li Ming 
>> <mailinglist at ltsai.com> wrote:
>>  
>>
>>> The part that I don't understand is when I import the reactor in my own
>>> py files, why will it be the same single reactor that the application
>>> uses. Is it something special that twisted is handling or is just a
>>> simple python question?
>>>   
>>
>>
>> Well, the reactor module is pretty weird and magical, but in this
>> regard, it acts exactly like any python module. When you import any
>> module twice, you get the same module.
>>
>>  
>>
> In fact - reactor is not an package - but a global instance returned by 
> class SelectReactor.

   This is an implementation detail that should neither affect your 
programs nor be relied upon by them.  In the future, it may be a module 
or some other kind of object.

   Jp



From exarkun at divmod.com  Tue Aug 17 01:29:48 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 03:29:48 -0400
Subject: [Twisted-Python] Supporting new types with PB
In-Reply-To: <uk6vz16zf.fsf@fitlinxx.com>
References: <uk6vz16zf.fsf@fitlinxx.com>
Message-ID: <4121B3EC.3060009@divmod.com>

David Bolen wrote:
> I've been trying to get Perspective Broker to cooperate for the
> transmission of mx.DateTime values across a remote session (we use
> them for some of our components which are referenceable objects) and
> was hoping to solicit input on the simplest or most appropriate way to
> handle things.
> 

   A major shortcoming of the current version of jelly is the inability 
to register external serialization functions for new types.

   Brian Warner has been working on a new version for some time, and I 
believe he is quite close to completing it (but he has been quite close 
to completing it for some time).  It addresses this problem quite 
completely.

   Until it is ready, though, I don't know of any good solutions.  The 
approach I have taken in my software is to copy the definition of 
twisted.spread.jelly._Jellier.jelly, add support for external 
serialization function registration (via adapters in my case), and then 
replace the original function with a reference to this new function at 
runtime (generally immediately after startup).

   This works reasonably well, but has obvious significant drawbacks.  I 
can't think of much else to suggest, though, except perhaps to get in 
touch with Brian and ask him if there's anything you can do to help 
speed along the completion of the new version.

   Jp



From radeex at gmail.com  Tue Aug 17 13:10:29 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 15:10:29 -0400
Subject: [Twisted-Python] Re: zpkg usage in Twisted
In-Reply-To: <2m4qn1c443.fsf@starship.python.net>
References: <4120CAFB.1080608@fettig.net> <200408162013.49223.fdrake@acm.org>
	<41215D86.7060001@fettig.net> <200408162250.35027.fdrake@acm.org>
	<60ed19d40408162043456550f0@mail.gmail.com>
	<2m4qn1c443.fsf@starship.python.net>
Message-ID: <60ed19d404081712106437be10@mail.gmail.com>

On Tue, 17 Aug 2004 13:59:24 +0100, Michael Hudson <mwh at python.net> wrote:
> Christopher Armstrong <radeex at gmail.com> writes:
> > On Mon, 16 Aug 2004 22:50:35 -0400, Fred L. Drake, Jr. <fdrake at acm.org> wrote:
> >> I'll be glad to answer questions and generally try to improve the
> >> documentation to make zpkg easier to learn and use.
> >
> > And here my cue to start asking questions. :-)
> 
> Uhh, I may be being daft, but I'm not sure Fred's gonna see
> it.. AFAICT it only went to the twisted list.


> From: Christopher Armstrong <radeex at gmail.com>
> Reply-To: radix at twistedmatrix.com
> To: Fred Drake <fred at zope.com>
> Cc: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Mon, 16 Aug 2004 23:43:08 -0400
> Subject: zpkg usage in Twisted (was: including plugins.tml in a package?)

That's what my headers say, anyway.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 14:09:35 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 16:09:35 -0400
Subject: [Twisted-Python] twisted.manhole
Message-ID: <20040817200935.GA16922@mit.edu>

There doesn't seem to be much documentation for twisted.manhole.  Yes,
I have seen http://www.twistedmatrix.com/documents/current/howto/telnet

So, I have been playing around with it trying to figure out the proper usage.
I have some of it figured out.  The following snippet works fine for my
needs...

	from twisted.manhole.telnet import ShellFactory

    [...]

	shell = ShellFactory()
	shell.setService(s)  // s here is my own service 
	shell.password = "test"
	internet.TCPServer(config['telnet_port'],shell).setServiceParent(serviceCollection)

But I was curious so starting looking at the other parts of it as well.

Frustratingly, I haven't yet figured out how to employ
twisted.manhole.ui twisted.manhole.service or twisted.manhole.explorer.
Can anyone point so some examples or provide a brief overview.

If get enough information I will pull it all together into a howto.

Thanks,
Steve Bauer





From matt at pollenation.net  Tue Aug 17 15:41:15 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue, 17 Aug 2004 22:41:15 +0100
Subject: [Twisted-Python] Nevow question
In-Reply-To: <200408141316.22590.heikowu@ceosg.de>
References: <200408141316.22590.heikowu@ceosg.de>
Message-ID: <1092778875.12427.15.camel@debian>

On Sat, 2004-08-14 at 13:16 +0200, Heiko Wundram wrote:
> Hi all!
> 
> I'm currently working on a web-application with twisted and nevow, and I'm 
> using the SessionWrapper of nevow to enable logins. Well, here comes the 
> catch: When a login fails, nevow redirects to the original page, with a 
> parameter "login-failed=<somestring>", and I'd like to catch this parameter 
> (rather, check if it is there, if it is, output a different string from the 
> template). For this I have created two sections in the HTML template, both 
> using nevow:render="<somefunction>", and for one of these, I return "", and 
> for the other just context.
> 
> But, the problem remains: how can I get the POST/GET parameters (without using 
> something like Formless) that were posted to the page that is being 
> displayed?

Use "msg = context.arg('login-failed')" in your render method to get the
error message or None.

Note: context.arg is a convenience method for getting parameters from
the request. The above is equivalent to "msg = context.locate
(IRequest).args.get('login-failed',[None])[0]".

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 18:34:44 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 20:34:44 -0400
Subject: [Twisted-Python] twisted and threading
Message-ID: <20040818003444.GA17564@mit.edu>

I wrapped a c library using swig and was hoping to make use of it in
a twisted server I am writing.  The issue is that the c library 
fundamentally blocks waiting for input that may never come.  Is
there a way from twisted to deal with this cleanly within the framework?

I.e. some combination of adding a reactor.addSystemEventTrigger event
and calling reactor.threadpool.stop seem like it should work but
I haven't had any luck yet.

(I saw all the previous posts on this topic, but the recommendations
don't seem applicable in my case since the blocking is occurring outside
my control in a c library and the blocking call may never return.)

Thanks,
Steve Bauer




From radeex at gmail.com  Tue Aug 17 18:49:25 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 20:49:25 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818003444.GA17564@mit.edu>
References: <20040818003444.GA17564@mit.edu>
Message-ID: <60ed19d40408171749dd84c36@mail.gmail.com>

On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
<twisted-10152003 at atlas.lcs.mit.edu> wrote:
> I wrapped a c library using swig and was hoping to make use of it in
> a twisted server I am writing.  The issue is that the c library
> fundamentally blocks waiting for input that may never come.  Is
> there a way from twisted to deal with this cleanly within the framework?
> 
> I.e. some combination of adding a reactor.addSystemEventTrigger event
> and calling reactor.threadpool.stop seem like it should work but
> I haven't had any luck yet.

Geeze, where'd you come up with that stuff? Accessing
reactor.threadpool directly is Really Bad. I hope there's no example
code or documentation that refers to that.

Try twisted.internet.threads.deferToThread(myBlockingCall) --> Deferred.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From twisted-10152003 at atlas.lcs.mit.edu  Tue Aug 17 20:18:51 2004
From: twisted-10152003 at atlas.lcs.mit.edu (twisted-10152003 at atlas.lcs.mit.edu)
Date: Tue, 17 Aug 2004 22:18:51 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <60ed19d40408171749dd84c36@mail.gmail.com>
Message-ID: <20040818021851.GA18404@mit.edu>

Christopher Armstrong [radeex at gmail.com] wrote:
>On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
><twisted-10152003 at atlas.lcs.mit.edu> wrote:
>> I wrapped a c library using swig and was hoping to make use of it in
>> a twisted server I am writing.  The issue is that the c library
>> fundamentally blocks waiting for input that may never come.  Is
>> there a way from twisted to deal with this cleanly within the
>> framework?
>>
>> I.e. some combination of adding a reactor.addSystemEventTrigger event
>> and calling reactor.threadpool.stop seem like it should work but
>> I haven't had any luck yet.
>
>
>Try twisted.internet.threads.deferToThread(myBlockingCall) -->
>Deferred.

Ah, but that doesn't work.  As I stated the c library (not mine) calls
potentially block forever (or at least longer than I want to wait to
shutdown the twisted server).  The thread created by deferTothread may
never complete which makes shutting down the server gracefully
impossible (or so I thought?).

>Geeze, where'd you come up with that stuff? Accessing
>reactor.threadpool directly is Really Bad. I hope there's no example
>code or documentation that refers to that.

:) Ah the hazards of attempting to read documentation and mailing-lists
before posting...

The threadpool and a link to its interface are mentioned on the primary
threading howto.  No mention of "Really Bad" there. 

http://www.twistedmatrix.com/documents/current/howto/threading

And other posts about threading on this mailing list mentioned
looking at twisted.enterprise.adbapi which is where
reactor.addSystemEventTrigger ideas came from.  

Incidentally, I am happy to help update documentation if I can
figure out the right ways to do things. :)

Thanks for your rapid response.

Sincerely,
Steve Bauer





From radeex at gmail.com  Tue Aug 17 20:30:04 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 17 Aug 2004 22:30:04 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818021851.GA18404@mit.edu>
References: <20040818021851.GA18404@mit.edu>
Message-ID: <60ed19d40408171930176d83cf@mail.gmail.com>

On Tue, 17 Aug 2004 22:18:51 -0400, twisted-10152003 at atlas.lcs.mit.edu
<twisted-10152003 at atlas.lcs.mit.edu> wrote:
> Christopher Armstrong [radeex at gmail.com] wrote:
> >On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
> ><twisted-10152003 at atlas.lcs.mit.edu> wrote:
> >> I.e. some combination of adding a reactor.addSystemEventTrigger event
> >> and calling reactor.threadpool.stop seem like it should work but
> >> I haven't had any luck yet.
> >
> >
> >Try twisted.internet.threads.deferToThread(myBlockingCall) -->
> >Deferred.
> 
> Ah, but that doesn't work.  As I stated the c library (not mine) calls
> potentially block forever (or at least longer than I want to wait to
> shutdown the twisted server).  The thread created by deferTothread may
> never complete which makes shutting down the server gracefully
> impossible (or so I thought?).

So you want to be able to murder that thread while you're shutting
down? I don't the solution to that, but I just want to be clear.
Indeed, maybe something involving a shutdown event.. I don't know.

> >Geeze, where'd you come up with that stuff? Accessing
> >reactor.threadpool directly is Really Bad. I hope there's no example
> >code or documentation that refers to that.
> 
> The threadpool and a link to its interface are mentioned on the primary
> threading howto.  No mention of "Really Bad" there.
> 
> http://www.twistedmatrix.com/documents/current/howto/threading

Ahh. That doesn't mention anything about reactor.threadpool, though,
which is the evil thing to touch.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Tue Aug 17 21:18:59 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 23:18:59 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <20040818021851.GA18404@mit.edu>
References: <20040818021851.GA18404@mit.edu>
Message-ID: <4122CAA3.70704@divmod.com>

twisted-10152003 at atlas.lcs.mit.edu wrote:
> Christopher Armstrong [radeex at gmail.com] wrote:
> 
>>On Tue, 17 Aug 2004 20:34:44 -0400, twisted-10152003 at atlas.lcs.mit.edu
>><twisted-10152003 at atlas.lcs.mit.edu> wrote:
>>
>>>I wrapped a c library using swig and was hoping to make use of it in
>>>a twisted server I am writing.  The issue is that the c library
>>>fundamentally blocks waiting for input that may never come.  Is
>>>there a way from twisted to deal with this cleanly within the
>>>framework?
>>>
>>>I.e. some combination of adding a reactor.addSystemEventTrigger event
>>>and calling reactor.threadpool.stop seem like it should work but
>>>I haven't had any luck yet.
>>
>>
>>Try twisted.internet.threads.deferToThread(myBlockingCall) -->
>>Deferred.
> 
> 
> Ah, but that doesn't work.  As I stated the c library (not mine) calls
> potentially block forever (or at least longer than I want to wait to
> shutdown the twisted server).  The thread created by deferTothread may
> never complete which makes shutting down the server gracefully
> impossible (or so I thought?).
> 

   There is no portable way to terminate a thread without its 
assistance.  Python supports no API for this - save one, the 
ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
this, nor call it internally, as it can lead to segfaults.

   Perhaps this should be parameterizable (defaulting to the current 
behavior, of course), so that poorly behaved libraries can be dealt with?

   Alternatively, since daemonized threads might lead to this anyway, 
perhaps you should just add a shutdown event os.kill(os.getpid(), 9) 
<wwinkink>.

   Jp



From exarkun at divmod.com  Tue Aug 17 21:26:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 17 Aug 2004 23:26:22 -0400
Subject: [Twisted-Python] twisted.manhole
In-Reply-To: <20040817200935.GA16922@mit.edu>
References: <20040817200935.GA16922@mit.edu>
Message-ID: <4122CC5E.60206@divmod.com>

twisted-10152003 at atlas.lcs.mit.edu wrote:
> There doesn't seem to be much documentation for twisted.manhole.  Yes,
> I have seen http://www.twistedmatrix.com/documents/current/howto/telnet
> 
> So, I have been playing around with it trying to figure out the proper usage.
> I have some of it figured out.  The following snippet works fine for my
> needs...
> 
> 	from twisted.manhole.telnet import ShellFactory
> 
>     [...]
> 
> 	shell = ShellFactory()
> 	shell.setService(s)  // s here is my own service 
> 	shell.password = "test"
> 	internet.TCPServer(config['telnet_port'],shell).setServiceParent(serviceCollection)
> 
> But I was curious so starting looking at the other parts of it as well.
> 
> Frustratingly, I haven't yet figured out how to employ
> twisted.manhole.ui twisted.manhole.service or twisted.manhole.explorer.
> Can anyone point so some examples or provide a brief overview.

   Check out twisted.tap.manhole.makeService() and bin/manhole.  I don't 
believe twisted.manhole.explorer is directly useful from the outside. 
If it still works (I don't believe it has unit tests, either ;), it 
should work through the Gtk manhole client.

   Jp



From radeex at gmail.com  Tue Aug 17 22:02:03 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 18 Aug 2004 00:02:03 -0400
Subject: [Twisted-Python] twisted and threading
In-Reply-To: <4122CAA3.70704@divmod.com>
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <60ed19d4040817210274528fcf@mail.gmail.com>

On Tue, 17 Aug 2004 23:18:59 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> twisted-10152003 at atlas.lcs.mit.edu wrote:
> > Ah, but that doesn't work.  As I stated the c library (not mine) calls
> > potentially block forever (or at least longer than I want to wait to
> > shutdown the twisted server).  The thread created by deferTothread may
> > never complete which makes shutting down the server gracefully
> > impossible (or so I thought?).
> >
> 
>    There is no portable way to terminate a thread without its
> assistance.  Python supports no API for this - save one, the
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose
> this, nor call it internally, as it can lead to segfaults.
> 
>    Perhaps this should be parameterizable (defaulting to the current
> behavior, of course), so that poorly behaved libraries can be dealt with?
> 
>    Alternatively, since daemonized threads might lead to this anyway,
> perhaps you should just add a shutdown event os.kill(os.getpid(), 9)
> <wwinkink>.

Well, since he only wants to murder the thread at shutdown, a regular
"thread killing" API isn't necessary, just a way to have the thread
not block shutting down, by dying. Your os.kill suggestion is along
the lines of what I was thinking of, except maybe there's a less
horrible option :)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From fdrake at acm.org  Wed Aug 18 00:36:48 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Wed, 18 Aug 2004 02:36:48 -0400
Subject: [Twisted-Python] Re: zpkg usage in Twisted
In-Reply-To: <60ed19d404081712106437be10@mail.gmail.com>
References: <4120CAFB.1080608@fettig.net> <2m4qn1c443.fsf@starship.python.net>
	<60ed19d404081712106437be10@mail.gmail.com>
Message-ID: <200408180236.48143.fdrake@acm.org>

On Tuesday 17 August 2004 03:10 pm, Christopher Armstrong wrote:
 > > Uhh, I may be being daft, but I'm not sure Fred's gonna see
 > > it.. AFAICT it only went to the twisted list.

I know it can take me a while to respond; sorry.  But I am still on the 
twisted list and try to be aware of what's going on.  ;-)


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>




From db3l at fitlinxx.com  Wed Aug 18 16:20:37 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 18 Aug 2004 18:20:37 -0400
Subject: [Twisted-Python] Re: twisted and threading
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <upt5o5bre.fsf@fitlinxx.com>

Jp Calderone <exarkun at divmod.com> writes:

>    There is no portable way to terminate a thread without its
> assistance.  Python supports no API for this - save one, the
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose
> this, nor call it internally, as it can lead to segfaults.

Well, all setDaemon does is prevent the threading module from joining
that thread during a shutdown - so the thread is left alone in peace
to be reclaimed by the operating system rather than by Python itself.

Do you have instances where this has actually provoked a segfault?  If
the thread is executing in Python code, the GIL should prevent it from
actually running during the Python portion of the shutdown, and the OS
will just clean up.  If the thread is truly blocked outside of Python
then nothing Python does will be a problem (unless the external entity
is writing directly to Python structures, but without grabbing the GIL
first which is a buggy extension), and the OS will again clean up.

Anyway, I've definitely used daemon threads before where it was
infeasible to guarantee the ability to signal the thread to shut
itself down before I wanted to exit and at least in my experience I've
never run into a problem.

-- David




From cce at clarkevans.com  Wed Aug 18 20:48:24 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 18 Aug 2004 22:48:24 -0400
Subject: [Twisted-Python] catching adbapi 'thread' failures
Message-ID: <20040819024823.GA30092@prometheusresearch.com>

Howdy.  I'm stumped.  I thought I knew how failures work, but I
can't seem to stop a traceback from appearing with the following:

    from twisted.internet import reactor
    from twisted.python.util import println
    from twisted.enterprise import adbapi 
    dbpool = adbapi.ConnectionPool('pyPgSQL.PgSQL', database='testing')
    def interaction(trans):
        trans.execute('sqlerror')
        return trans.fetchall()[0][0] 
    def catch(failure):
        return "***" + failure.getErrorMessage().strip() + "***"
    def use_pool():
        d = dbpool.runInteraction(interaction)
        d.addErrback(catch)
        d.addCallback(println)
        d.addCallback(lambda _: reactor.stop())
    reactor.callLater(0, use_pool)
    reactor.run() 

Any help would be wonderful,

Clark

-- 
Clark C. Evans                      Prometheus Research, LLC.
                                    http://www.prometheusresearch.com/
    o                               office: +1.203.777.2550 
  ~/ ,                              mobile: +1.203.444.0557 
 //
((   Prometheus Research: Turning Data Into Knowledge
 \\  ,
   \/    - Research Exchange Database
   /\    - Survey & Assessment Technologies
   ` \   - Software Tools for Researchers
    ~ *



From dave at krondo.com  Wed Aug 18 22:52:01 2004
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 18 Aug 2004 21:52:01 -0700
Subject: [Twisted-Python] catching adbapi 'thread' failures
In-Reply-To: <20040819024823.GA30092@prometheusresearch.com>
References: <20040819024823.GA30092@prometheusresearch.com>
Message-ID: <1092891121.6593.34.camel@oneiros>

adbapi used to log failures before throwing them back.
This may be what you are seeing.

dave

On Wed, 2004-08-18 at 19:48, Clark C. Evans wrote:
> Howdy.  I'm stumped.  I thought I knew how failures work, but I
> can't seem to stop a traceback from appearing with the following:
> 
>     from twisted.internet import reactor
>     from twisted.python.util import println
>     from twisted.enterprise import adbapi 
>     dbpool = adbapi.ConnectionPool('pyPgSQL.PgSQL', database='testing')
>     def interaction(trans):
>         trans.execute('sqlerror')
>         return trans.fetchall()[0][0] 
>     def catch(failure):
>         return "***" + failure.getErrorMessage().strip() + "***"
>     def use_pool():
>         d = dbpool.runInteraction(interaction)
>         d.addErrback(catch)
>         d.addCallback(println)
>         d.addCallback(lambda _: reactor.stop())
>     reactor.callLater(0, use_pool)
>     reactor.run() 
> 
> Any help would be wonderful,
> 
> Clark




From screwtape at froup.com  Thu Aug 19 00:48:10 2004
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 19 Aug 2004 16:48:10 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
Message-ID: <20040819064810.GA2522@ferd2.thristian.org>

A colleague of mine was working with a server written in Twisted
today, and he ran into a problem involving Twisted. He called me over
(since I'm supposed to be the Python Guru here, which just means I'm
slightly less ignorant than everybody else :) and we tracked the
behaviour in question all the way down to twisted.internet.tcp.

The situation is this: we have an upstream data provider who sends us
data intermittently, all day. We have downstream clients on less
reliable connections who want to recieve it. We have a sort of caching
proxy in the middle that keeps track of all the data sent so far
today, and every time a client connects we send them the total record
of the day's events, and then send them new updates as they arrive.

The problem occurred one day when we had a higher-than-usual amount of
data incoming. The symptom was that any client attempting to connect
would be immediately disconnected for No Obvious Reason. After some
ferretting about through the codebase, we discovered that the
'writeSomeData' method of twisted.internet.tcp.Connection was getting
an error it couldn't handle and dropping the connection.

The swift insertion of a debugging printf showed that the error
generated was ENOBUFS (Well, WSAENOBUFS, since it was running on
Windows 2000), which made the Connection drop the, uh, connection
immediately.

Now, it occurs to me that ENOBUFS does not necessarily mean that the
connection is irretrievably lost, it should be treated more like
EWOULDBLOCK, except that buffers over a certain size will never, ever
fit. I don't know whether special handling of ENOBUFS should happen in
Twisted (to match its already-existing special handling of
EWOULDBLOCK), or whether it should happen in the application (proper
buffer-size autodetection might be a little intricate for a class like
Connection that's supposed to be simple). But either way, just
dropping the connection immediately is probably a Bad Thing.

(for the record, the buffer we were trying to send was about 5MB, but
I assume people trying to send, say CD or DVD disk images via
twisted.web may well run into similar issues)

Is there some clever way to get around this with the current version
of Twisted? If I were to write a patch, how should I best attack the
problem? Are there any other questions I should be asking? :)

-- 
 ___________ ___________________________________
| Screwtape | http://livejournal.com/~thristian |______ _____ ___ __ _  _   _
|
| "It's a giant beetle! Of course it doesn't have a kitchen!" -- T&R, 2002-07-07
|



From tv at twistedmatrix.com  Thu Aug 19 00:56:00 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 19 Aug 2004 09:56:00 +0300
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <4120CAFB.1080608@fettig.net>
References: <4120CAFB.1080608@fettig.net>
Message-ID: <41244F00.8070608@twistedmatrix.com>

Abe Fettig wrote:
> It's come to my attention that my current Hep package for windows 
> (packaged using bdist_win32) doesn't put the plugins.tml file where it 
> should be (under site-packages/hep).  In googling around for a solution, 
> I came across this post:

I've done this:

     data_files=[(os.path.join(sysconfig.get_python_lib(),
                               'BuffaloBill'),
                 ["BuffaloBill/plugins.tml"])],



From mak at trisoft.com.pl  Thu Aug 19 01:31:31 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 09:31:31 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <41245753.6010008@trisoft.com.pl>

screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
> 

This is not a bug

select says "yes there is room inm the socket buffer"
however datagram protocols do not store anythign in the outgoing socket
buffer, but, instead hand the packets directly to the driver for the
NIC.

when the NIC fils up it returns ENOBUFS

use sleep(0.01) between calls to socket.send

mak



From andrew-twisted at puzzling.org  Thu Aug 19 03:10:07 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 10:10:07 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41245753.6010008@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl>
Message-ID: <20040819091007.GD23028@frobozz>

On Thu, Aug 19, 2004 at 09:31:31AM +0200, Grzegorz Makarewicz wrote:
> screwtape at froup.com wrote:
> >A colleague of mine was working with a server written in Twisted
> >today, and he ran into a problem involving Twisted. He called me over
> >(since I'm supposed to be the Python Guru here, which just means I'm
> >slightly less ignorant than everybody else :) and we tracked the
> >behaviour in question all the way down to twisted.internet.tcp.
> >
> 
> This is not a bug
> 
> select says "yes there is room inm the socket buffer"
> however datagram protocols do not store anythign in the outgoing socket
> buffer, but, instead hand the packets directly to the driver for the
> NIC.
> 
> when the NIC fils up it returns ENOBUFS
> 
> use sleep(0.01) between calls to socket.send

Using sleep in Twisted would be a bad idea -- if you have other sockets on
other network cards, you should just work on servicing them rather than
stopping everything.  It's possible there's other work to do other than
socket operations, too, e.g. servicing any pendingTimedCalls (created by
reactor.callLater).  In short, time.sleep should not be used in the Twisted
main thread, let alone the reactor itself.

If the only sane way to deal with this is to wait 100ms and try again, then
I'd try this:

    [ ... caught ENOBUFS ... ]
    reactor.removeReader(sock)
    reactor.callLater(0.1, reactor.addReader, sock)

This might interact badly with other systems that try to add/remove that
reader (consumers/producers maybe?), but is probably good enough for
screwtape's particular case.

I wonder if the win32reactor or iocpreactor get more useful information than
select and so can handle this better?
    
-Andrew.




From mak at trisoft.com.pl  Thu Aug 19 04:06:35 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 12:06:35 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819091007.GD23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz>
Message-ID: <41247BAB.5020107@trisoft.com.pl>

Andrew Bennetts wrote:
> On Thu, Aug 19, 2004 at 09:31:31AM +0200, Grzegorz Makarewicz wrote:
> 
>>screwtape at froup.com wrote:
>>
>>>A colleague of mine was working with a server written in Twisted
>>>today, and he ran into a problem involving Twisted. He called me over
>>>(since I'm supposed to be the Python Guru here, which just means I'm
>>>slightly less ignorant than everybody else :) and we tracked the
>>>behaviour in question all the way down to twisted.internet.tcp.
>>>
>>
>>This is not a bug
>>
>>select says "yes there is room inm the socket buffer"
>>however datagram protocols do not store anythign in the outgoing socket
>>buffer, but, instead hand the packets directly to the driver for the
>>NIC.
>>
>>when the NIC fils up it returns ENOBUFS
>>
>>use sleep(0.01) between calls to socket.send
> 
> 
> Using sleep in Twisted would be a bad idea -- if you have other sockets on
> other network cards, you should just work on servicing them rather than
> stopping everything.  It's possible there's other work to do other than
> socket operations, too, e.g. servicing any pendingTimedCalls (created by
> reactor.callLater).  In short, time.sleep should not be used in the Twisted
> main thread, let alone the reactor itself.
> 

On msw sleep(small number) has nice side effect - constext switch, on 
other systems perhaps too.

If I have tight loop with call to socket.send with large buffer (eg > 
2MB) and no other python-threads /no thread switch inside ceval loop/ 
then this error can be thrown after few calls.

> If the only sane way to deal with this is to wait 100ms and try again, then
1ms - can be sufficient to but I'm not sure.

In my opionion much safer is divide large block - 64 KB chunk works for 
me without performance degradation and without any socket errors.

mak



From radeex at gmail.com  Thu Aug 19 04:33:04 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 19 Aug 2004 06:33:04 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41247BAB.5020107@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz> <41247BAB.5020107@trisoft.com.pl>
Message-ID: <60ed19d40408190333adcb7c5@mail.gmail.com>

Yo,

On Thu, 19 Aug 2004 12:06:35 +0200, Grzegorz Makarewicz
<mak at trisoft.com.pl> wrote:
> On msw sleep(small number) has nice side effect - constext switch, on
> other systems perhaps too.

select() does a context switch as well.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From jon at totient.demon.co.uk  Thu Aug 19 04:50:36 2004
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Thu, 19 Aug 2004 11:50:36 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <200408191150.36823.jon@totient.demon.co.uk>

This problem looks similar to this that some CORBA folk are seeing with 
Windows and large requests
http://www.omniorb-support.com/pipermail/omniorb-list/2004-August/025775.html

There are some links and suggested fixes in there, I'm not sure how relevant, 
but I thought it worth posting.


Jon


On Thursday 19 August 2004 07:48, screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
>
> The situation is this: we have an upstream data provider who sends us
> data intermittently, all day. We have downstream clients on less
> reliable connections who want to recieve it. We have a sort of caching
> proxy in the middle that keeps track of all the data sent so far
> today, and every time a client connects we send them the total record
> of the day's events, and then send them new updates as they arrive.
>
> The problem occurred one day when we had a higher-than-usual amount of
> data incoming. The symptom was that any client attempting to connect
> would be immediately disconnected for No Obvious Reason. After some
> ferretting about through the codebase, we discovered that the
> 'writeSomeData' method of twisted.internet.tcp.Connection was getting
> an error it couldn't handle and dropping the connection.
>
> The swift insertion of a debugging printf showed that the error
> generated was ENOBUFS (Well, WSAENOBUFS, since it was running on
> Windows 2000), which made the Connection drop the, uh, connection
> immediately.
>
> Now, it occurs to me that ENOBUFS does not necessarily mean that the
> connection is irretrievably lost, it should be treated more like
> EWOULDBLOCK, except that buffers over a certain size will never, ever
> fit. I don't know whether special handling of ENOBUFS should happen in
> Twisted (to match its already-existing special handling of
> EWOULDBLOCK), or whether it should happen in the application (proper
> buffer-size autodetection might be a little intricate for a class like
> Connection that's supposed to be simple). But either way, just
> dropping the connection immediately is probably a Bad Thing.
>
> (for the record, the buffer we were trying to send was about 5MB, but
> I assume people trying to send, say CD or DVD disk images via
> twisted.web may well run into similar issues)
>
> Is there some clever way to get around this with the current version
> of Twisted? If I were to write a patch, how should I best attack the
> problem? Are there any other questions I should be asking? :)




From mak at trisoft.com.pl  Thu Aug 19 05:05:59 2004
From: mak at trisoft.com.pl (Grzegorz Makarewicz)
Date: Thu, 19 Aug 2004 13:05:59 +0200
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <60ed19d40408190333adcb7c5@mail.gmail.com>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>	<20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
Message-ID: <41248997.6070406@trisoft.com.pl>

Christopher Armstrong wrote:
> Yo,
> 
> On Thu, 19 Aug 2004 12:06:35 +0200, Grzegorz Makarewicz
> <mak at trisoft.com.pl> wrote:
> 
>>On msw sleep(small number) has nice side effect - constext switch, on
>>other systems perhaps too.
> 
> 
> select() does a context switch as well.
> 

but not on msw

tlsgetvalue
wahreferencecontextbyhandle
call into kernel code
interlocakdecrement

[squid-users] Squid dies on Windows NT server after fetching10-15 urls
[omniORB] Problem with large requests (WinNT)

http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
When large blocks of data (for example, 3-4 MB) are sent over a blocking 
socket, send eventually fails with error 10055, WSAENOBUFS.

mak



From abe at fettig.net  Thu Aug 19 05:50:53 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 19 Aug 2004 07:50:53 -0400
Subject: [Twisted-Python] including plugins.tml in a package
In-Reply-To: <41244F00.8070608@twistedmatrix.com>
References: <4120CAFB.1080608@fettig.net> <41244F00.8070608@twistedmatrix.com>
Message-ID: <4124941D.1060201@fettig.net>

That's exactly what I was doing, actually.  The problem is that when you 
do a bdist_win32, the call to sysconfig.get_python_lib() happens on the 
machine you're compiling the package on (which may not even be running 
windows!), not the machine the user will be installing the package on.

So you might end up installing your data files in 
c:\usr\lib\python2.3\site-packages\BuffaloBill. :-)

Abe

Tommi Virtanen wrote:

> 
> I've done this:
> 
>     data_files=[(os.path.join(sysconfig.get_python_lib(),
>                               'BuffaloBill'),
>                 ["BuffaloBill/plugins.tml"])],
 >



From screwtape at froup.com  Thu Aug 19 05:58:59 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 21:58:59 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41245753.6010008@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl>
Message-ID: <27DB6FF0-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 17:31, Grzegorz Makarewicz wrote:
> screwtape at froup.com wrote:
>> A colleague of mine was working with a server written in Twisted
>> today, and he ran into a problem involving Twisted. He called me over
>> (since I'm supposed to be the Python Guru here, which just means I'm
>> slightly less ignorant than everybody else :) and we tracked the
>> behaviour in question all the way down to twisted.internet.tcp.
>
> This is not a bug
>
> select says "yes there is room inm the socket buffer"
> however datagram protocols do not store anythign in the outgoing socket
> buffer, but, instead hand the packets directly to the driver for the
> NIC.

Surely TCP is not a datagram protocol.

Screwtape,
...puzzled.




From screwtape at froup.com  Thu Aug 19 06:01:59 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 22:01:59 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819091007.GD23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
Message-ID: <931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 19:10, Andrew Bennetts wrote:
>> screwtape at froup.com wrote:
>>> A colleague of mine was working with a server written in Twisted
>>> today, and he ran into a problem involving Twisted. He called me over
>>> (since I'm supposed to be the Python Guru here, which just means I'm
>>> slightly less ignorant than everybody else :) and we tracked the
>>> behaviour in question all the way down to twisted.internet.tcp.
> I wonder if the win32reactor or iocpreactor get more useful 
> information than
> select and so can handle this better?

It's not so much that the default select reactor makes information 
unavailable.. as far as I can tell, the Python socket object is 
correctly raising ENOBUFS, and t.i.tcp.Connection is very deliberately 
throwing that information away rather than handling properly.




From andrew-twisted at puzzling.org  Thu Aug 19 06:02:14 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 13:02:14 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41248997.6070406@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
	<41248997.6070406@trisoft.com.pl>
Message-ID: <20040819120214.GH23028@frobozz>

On Thu, Aug 19, 2004 at 01:05:59PM +0200, Grzegorz Makarewicz wrote:
[...]
> 
> http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
> When large blocks of data (for example, 3-4 MB) are sent over a blocking 
> socket, send eventually fails with error 10055, WSAENOBUFS.

This page would seem to be irrelevant, as Twisted does not use blocking
sockets.

-Andrew.




From screwtape at froup.com  Thu Aug 19 06:03:43 2004
From: screwtape at froup.com (Tim Allen)
Date: Thu, 19 Aug 2004 22:03:43 +1000
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <41248997.6070406@trisoft.com.pl>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>	<20040819091007.GD23028@frobozz>
	<41247BAB.5020107@trisoft.com.pl>
	<60ed19d40408190333adcb7c5@mail.gmail.com>
	<41248997.6070406@trisoft.com.pl>
Message-ID: <D0E3FEDD-F1D7-11D8-9E11-000A95A61ED2@froup.com>

On 19 Aug 2004, at 21:05, Grzegorz Makarewicz wrote:
> http://support.microsoft.com/default.aspx?scid=kb;en-us;201213
> When large blocks of data (for example, 3-4 MB) are sent over a 
> blocking socket, send eventually fails with error 10055, WSAENOBUFS.

Hmm.. I was under the impression that Twisted used non-blocking sockets.




From andrew-twisted at puzzling.org  Thu Aug 19 07:02:02 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 14:02:02 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
Message-ID: <20040819130202.GI23028@frobozz>

On Thu, Aug 19, 2004 at 10:01:59PM +1000, Tim Allen wrote:
> On 19 Aug 2004, at 19:10, Andrew Bennetts wrote:
> >>screwtape at froup.com wrote:
> >>>A colleague of mine was working with a server written in Twisted
> >>>today, and he ran into a problem involving Twisted. He called me over
> >>>(since I'm supposed to be the Python Guru here, which just means I'm
> >>>slightly less ignorant than everybody else :) and we tracked the
> >>>behaviour in question all the way down to twisted.internet.tcp.
> >I wonder if the win32reactor or iocpreactor get more useful 
> >information than
> >select and so can handle this better?
> 
> It's not so much that the default select reactor makes information 
> unavailable.. as far as I can tell, the Python socket object is 
> correctly raising ENOBUFS, and t.i.tcp.Connection is very deliberately 
> throwing that information away rather than handling properly.

Well, the problem is that currently the select reactor assumes that if
select says a socket is writeable, then it is writeable, i.e it is safe to
attempt to write any amount of data to it (with the understanding that being
non-blocking it might only be able to accept some of that data immediately).
Apparently this assumption is not quite accurate.

So far in this thread I've seen two theories about what the exact problem
is, and I think the correct fix depends on which is actually the cause.

Theory 1: Writing large (i.e. 5MB) chunks to sockets in a single send call
will always fail, and should.  The fix for this would be to make sure that
no more than 64kB (or whatever) is passed to send at a time, regardless of
what is passed to transport.write.

Theory 2: Writing lots and lots of data very fast can cause the network
hardware's/device driver's internal buffers to fill up, thus making it
impossible to write even though select claims it is.  If this is the case,
the socket needs to be ignored for a moment to give those buffers a chance
to flush.

A test case proving which is actually the case would be most welcome :)

-Andrew.




From andrew-twisted at puzzling.org  Thu Aug 19 07:07:38 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 19 Aug 2004 14:07:38 +0100
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <20040819130738.GJ23028@frobozz>

Just a moment ago, I wrote:
[...]
> Theory 1: Writing large (i.e. 5MB) chunks to sockets in a single send call
> will always fail, and should.  The fix for this would be to make sure that
                  ^^^^^^^^^^^^
                  Ignore those two words, they're a left over from hasty
                  editing :)

-Andrew.




From cce at clarkevans.com  Thu Aug 19 07:20:42 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 19 Aug 2004 09:20:42 -0400
Subject: [Twisted-Python] catching adbapi 'thread' failures
In-Reply-To: <1092891121.6593.34.camel@oneiros>
References: <20040819024823.GA30092@prometheusresearch.com>
	<1092891121.6593.34.camel@oneiros>
Message-ID: <20040819132042.GA98805@prometheusresearch.com>

Ahh, right "log.deferr()".  Glad to see this is taken out, lots of
'SQL' errors which are not application errors.  Thanks.

Clark

On Wed, Aug 18, 2004 at 09:52:01PM -0700, Dave Peticolas wrote:
| adbapi used to log failures before throwing them back.
| This may be what you are seeing.
| 
| dave



From mailinglist at ltsai.com  Thu Aug 19 08:08:29 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Thu, 19 Aug 2004 22:08:29 +0800
Subject: [Twisted-Python] Re: catching adbapi 'thread' failures
In-Reply-To: <20040819132042.GA98805@prometheusresearch.com>
References: <20040819024823.GA30092@prometheusresearch.com>	<1092891121.6593.34.camel@oneiros>
	<20040819132042.GA98805@prometheusresearch.com>
Message-ID: <cg2c9n$6on$1@sea.gmane.org>

Clark C. Evans wrote:
> Ahh, right "log.deferr()".  Glad to see this is taken out, lots of
> 'SQL' errors which are not application errors.  Thanks.
> 
> Clark
> 
> On Wed, Aug 18, 2004 at 09:52:01PM -0700, Dave Peticolas wrote:
> | adbapi used to log failures before throwing them back.
> | This may be what you are seeing.
> | 
> | dave

Hi Clark,

What do you mean by taken out? I'm still seeing it in adapi.py:
def _runInteraction(self, interaction, *args, **kw):
	trans = Transaction(self, self.connect())
	try:
		result = interaction(trans, *args, **kw)
		trans.close()
		trans._connection.commit()
		return result
	except:
		log.msg('Exception in SQL interaction. Rolling back.')
		log.deferr()
		trans._connection.rollback()
		raise

I'm using twisted 1.3.0

Liming




From itamar at itamarst.org  Thu Aug 19 08:11:22 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 19 Aug 2004 10:11:22 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <1092924682.29325.0.camel@sheriffpony>

On Thu, 2004-08-19 at 09:02, Andrew Bennetts wrote:

> A test case proving which is actually the case would be most welcome :)

Indeed - this would allow us to fix the bug for the next release.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From cce at clarkevans.com  Thu Aug 19 08:36:15 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 19 Aug 2004 10:36:15 -0400
Subject: [Twisted-Python] Re: catching adbapi 'thread' failures
In-Reply-To: <cg2c9n$6on$1@sea.gmane.org>
References: <20040819024823.GA30092@prometheusresearch.com>
	<1092891121.6593.34.camel@oneiros>
	<20040819132042.GA98805@prometheusresearch.com>
	<cg2c9n$6on$1@sea.gmane.org>
Message-ID: <20040819143615.GB37574@prometheusresearch.com>

On Thu, Aug 19, 2004 at 10:08:29PM +0800, Tsai Li Ming wrote:
| What do you mean by taken out?

The log lines are gone in the subversion repository.

Clark



From tv at twistedmatrix.com  Fri Aug 20 01:30:21 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 20 Aug 2004 10:30:21 +0300
Subject: select(2) is just a hint (Was: Re: [Twisted-Python] ENOBUF and
	Twisted)
In-Reply-To: <20040819130202.GI23028@frobozz>
References: <20040819064810.GA2522@ferd2.thristian.org>	<41245753.6010008@trisoft.com.pl>
	<20040819091007.GD23028@frobozz>	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
Message-ID: <4125A88D.5000909@twistedmatrix.com>

Andrew Bennetts wrote:
> Well, the problem is that currently the select reactor assumes that if
> select says a socket is writeable, then it is writeable, i.e it is safe to
> attempt to write any amount of data to it (with the understanding that being
> non-blocking it might only be able to accept some of that data immediately).
> Apparently this assumption is not quite accurate.

That's not a safe assumption under UNIX. select(2) is just a hint; writing
to the socket may still give you EAGAIN, even if select(2) said it's writable.
And the same goes for reading, too.

For the reason why this must be allowed, think about a non-blocking fd shared
between two processes:

	Process 1			Process 2
	select() says fd 4 writable
					select() says fd 4 writable
	write(4, ...) success
					write(4, ...) = -1, EAGAIN

But this isn't the only case when select is unable to predict the future;
as soon as your code _must_ support the above case in order to work, the
kernel can use that feature of the API to make some socket bookkeeping
things easier.



From michele.petrazzo at unipex.it  Fri Aug 20 03:07:20 2004
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Fri, 20 Aug 2004 11:07:20 +0200
Subject: [Twisted-Python] deferToThread question
Message-ID: <4125BF48.9000301@unipex.it>

I want to call a block function. I use deferToThread to call it, so 
something like this:

def block_func():
  os.popen3(my_soft) #my_soft is a blocking software
  print 1/0 # Simulate an error

If I use normal (not defer) call, so: block_func(), the exception is 
raised after my_soft is closed.

I i call block_func with defer, so:

def block_func_err(err):
  print err

t = threads.deferToThread(block_func)
t.addErrback(block_func_err)

the error is raised before my_soft is closed.

Why? Is it right?

S.O. win2k and mdk10, both with py 2.3.4, twisted 1.3.0, wxpy 2.4.2 and 
user of wxsupport, not wxreactor.

Thanks,
Michele Petrazzo



From andrew-twisted at puzzling.org  Fri Aug 20 03:25:46 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 20 Aug 2004 10:25:46 +0100
Subject: select(2) is just a hint (Was: Re: [Twisted-Python] ENOBUF and
	Twisted)
In-Reply-To: <4125A88D.5000909@twistedmatrix.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
	<4125A88D.5000909@twistedmatrix.com>
Message-ID: <20040820092546.GN23028@frobozz>

On Fri, Aug 20, 2004 at 10:30:21AM +0300, Tommi Virtanen wrote:
> Andrew Bennetts wrote:
> >Well, the problem is that currently the select reactor assumes that if
> >select says a socket is writeable, then it is writeable, i.e it is safe
> >to attempt to write any amount of data to it (with the understanding that
> >being non-blocking it might only be able to accept some of that data
> >immediately).  Apparently this assumption is not quite accurate.
> 
> That's not a safe assumption under UNIX. select(2) is just a hint; writing
[...]
> 
> 	Process 1			Process 2
> 	select() says fd 4 writable
> 					select() says fd 4 writable
> 	write(4, ...) success
> 					write(4, ...) = -1, EAGAIN

In this case, at least, I believe the Twisted select reactor still does the
right thing, because accepting no data is just an extreme case of accepting
only some data ;)

-Andrew.




From matt at pollenation.net  Fri Aug 20 03:32:56 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 20 Aug 2004 10:32:56 +0100
Subject: [Twisted-Python] deferToThread question
In-Reply-To: <4125BF48.9000301@unipex.it>
References: <4125BF48.9000301@unipex.it>
Message-ID: <1092994375.8045.2.camel@harold>

On Fri, 2004-08-20 at 10:07, Michele Petrazzo wrote:
> I want to call a block function. I use deferToThread to call it, so 
> something like this:
> 
> def block_func():
>   os.popen3(my_soft) #my_soft is a blocking software
>   print 1/0 # Simulate an error

I can't answer your threading question but Twisted supports async
process execution so you probably don't actually need a thread. See the
HOWTO, http://twistedmatrix.com/documents/current/howto/process, for
more.

> 
> If I use normal (not defer) call, so: block_func(), the exception is 
> raised after my_soft is closed.
> 
> I i call block_func with defer, so:
> 
> def block_func_err(err):
>   print err
> 
> t = threads.deferToThread(block_func)
> t.addErrback(block_func_err)
> 
> the error is raised before my_soft is closed.
> 
> Why? Is it right?
> 
> S.O. win2k and mdk10, both with py 2.3.4, twisted 1.3.0, wxpy 2.4.2 and 
> user of wxsupport, not wxreactor.
> 
> Thanks,
> Michele Petrazzo

-- 
Matt Goodall <matt at pollenation.net>




From db3l at fitlinxx.com  Fri Aug 20 09:47:31 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 20 Aug 2004 11:47:31 -0400
Subject: [Twisted-Python] Re: select(2) is just a hint (Was: Re: ENOBUF
	and	Twisted)
References: <20040819064810.GA2522@ferd2.thristian.org>
	<41245753.6010008@trisoft.com.pl> <20040819091007.GD23028@frobozz>
	<931C36FC-F1D7-11D8-9E11-000A95A61ED2@froup.com>
	<20040819130202.GI23028@frobozz>
	<4125A88D.5000909@twistedmatrix.com>
	<20040820092546.GN23028@frobozz>
Message-ID: <uu0ux24mk.fsf@fitlinxx.com>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> On Fri, Aug 20, 2004 at 10:30:21AM +0300, Tommi Virtanen wrote:
(...)
> > That's not a safe assumption under UNIX. select(2) is just a hint; writing
> [...]
> > 
> > 	Process 1			Process 2
> > 	select() says fd 4 writable
> > 					select() says fd 4 writable
> > 	write(4, ...) success
> > 					write(4, ...) = -1, EAGAIN
> 
> In this case, at least, I believe the Twisted select reactor still does the
> right thing, because accepting no data is just an extreme case of accepting
> only some data ;)

Which probably gets to the root of the question as to whether or not
the ENOBUFS should be considered as transient a problem as EAGAIN
under Windows (and your prior two points).  Prior to having a
reproduceable test case, I would tend to imagine that the ENOBUFS
would cause a subsequent select to fail to indicate readiness to write,
so treading it like EAGAIN would be a reasonable approach.

-- David




From exarkun at divmod.com  Sat Aug 21 01:50:39 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 21 Aug 2004 03:50:39 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <20040819064810.GA2522@ferd2.thristian.org>
References: <20040819064810.GA2522@ferd2.thristian.org>
Message-ID: <4126FECF.4090205@divmod.com>

screwtape at froup.com wrote:
> A colleague of mine was working with a server written in Twisted
> today, and he ran into a problem involving Twisted. He called me over
> (since I'm supposed to be the Python Guru here, which just means I'm
> slightly less ignorant than everybody else :) and we tracked the
> behaviour in question all the way down to twisted.internet.tcp.
> 
> The situation is this: we have an upstream data provider who sends us
> data intermittently, all day. We have downstream clients on less
> reliable connections who want to recieve it. We have a sort of caching
> proxy in the middle that keeps track of all the data sent so far
> today, and every time a client connects we send them the total record
> of the day's events, and then send them new updates as they arrive.
> 
> The problem occurred one day when we had a higher-than-usual amount of
> data incoming. The symptom was that any client attempting to connect
> would be immediately disconnected for No Obvious Reason. After some
> ferretting about through the codebase, we discovered that the
> 'writeSomeData' method of twisted.internet.tcp.Connection was getting
> an error it couldn't handle and dropping the connection.

   How many clients are we talking about?  A bit of investigation leads 
me to believe this can be caused by reaching the maximum number of open 
sockets.  Having unreliable connections can exacerbate this, since 
TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 seems to 
leave sockets in this state for 4 minutes).

   Twisted should still probably handle it, but if this is the true 
cause, it should be handled in a fashion similar to errors from 
accept(), possibly (a better understanding of the problem is probably 
still required).

   Jp



From foom at fuhm.net  Sat Aug 21 13:56:11 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 21 Aug 2004 15:56:11 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <4126FECF.4090205@divmod.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
Message-ID: <26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>


On Aug 21, 2004, at 3:50 AM, Jp Calderone wrote:
>  How many clients are we talking about?  A bit of investigation leads 
> me to believe this can be caused by reaching the maximum number of 
> open sockets.  Having unreliable connections can exacerbate this, 
> since TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 
> seems to leave sockets in this state for 4 minutes).
>
>   Twisted should still probably handle it, but if this is the true 
> cause, it should be handled in a fashion similar to errors from 
> accept(), possibly (a better understanding of the problem is probably 
> still required).

I don't think that's the case, or rather, it is the case for accept() 
but not write().

 From my understanding, ENOBUF on send() could come about because there 
is a limit on the amount of kernel buffer space a process is allowed to 
consume and a previous send() call consumed it all, after select() said 
there was space remaining. Thus, there was no space for this write to 
proceed, and the kernel returned that error. I believe it should be 
treated as a transient error, and the send retried later. So, it should 
go in the same case as EWOULDBLOCK.

However, from the original description, it sounds like perhaps there 
may be some byte limit over which you cannot even attempt to write. 
This makes some amount of sense -- the kernel doesn't want to have to 
copy a gigantic buffer into kernel space just to discard most of it. 
So, how about: self.socket.send(buffer(data, 0, 65535)). I'm not sure 
if that's necessary or not.

Apparently accept() can also return ENOBUFS, for the same kinds of 
reasons, and should also be treated as a transient error. I suspect 
EMFILE and ENFILE should also be handled the same way. But that's a 
separate issue.

Screwtape (I guess that's probably not your real name, but you don't 
seem to have given a real name),
Can you try this patch and see if it fixes the problem? It assumes 
you'll always be able to send a 64K buffer *eventually*, which I hope 
is the case. If you could also try it with just the "or se.args[0] == 
ENOBUFS", and not the buffer(.., 0, 65535), that'd also be appreciated.


James

Index: twisted/internet/tcp.py
===================================================================
--- twisted/internet/tcp.py     (revision 11325)
+++ twisted/internet/tcp.py     (working copy)
@@ -58,6 +58,7 @@
      EISCONN     = 10056
      ENOTCONN    = 10057
      EINTR       = 10004
+    from errno import WSAENOBUFS as ENOBUFS
  elif os.name != 'java':
      from errno import EPERM
      from errno import EINVAL
@@ -68,6 +69,7 @@
      from errno import EISCONN
      from errno import ENOTCONN
      from errno import EINTR
+    from errno import ENOBUFS
  from errno import EAGAIN

  # Twisted Imports
@@ -262,11 +264,11 @@
          (which is negative)
          """
          try:
-            return self.socket.send(data)
+            return self.socket.send(buffer(data, 0, 65535))
          except socket.error, se:
              if se.args[0] == EINTR:
                  return self.writeSomeData(data)
-            elif se.args[0] == EWOULDBLOCK:
+            elif se.args[0] == EWOULDBLOCK or se.args[0] == ENOBUFS:
                  return 0
              else:
                  return main.CONNECTION_LOST




From exarkun at divmod.com  Sat Aug 21 15:59:12 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 21 Aug 2004 17:59:12 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
References: <20040819064810.GA2522@ferd2.thristian.org>	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <4127C5B0.6010409@divmod.com>

James Y Knight wrote:
> 
> On Aug 21, 2004, at 3:50 AM, Jp Calderone wrote:
> 
>>  How many clients are we talking about?  A bit of investigation leads 
>> me to believe this can be caused by reaching the maximum number of 
>> open sockets.  Having unreliable connections can exacerbate this, 
>> since TIME_WAIT sockets are counted towards the limit (Windows NT 4.0 
>> seems to leave sockets in this state for 4 minutes).
>>
>>   Twisted should still probably handle it, but if this is the true 
>> cause, it should be handled in a fashion similar to errors from 
>> accept(), possibly (a better understanding of the problem is probably 
>> still required).
> 
> 
> I don't think that's the case, or rather, it is the case for accept() 
> but not write().
> 

   Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
the only documented behavior I can find for WSAENOBUFS.  And it is 
_Windows_, so it needn't make sense.  I just wanted to point out this 
possibility, since it seemed no one had considered it yet.

> 
> Screwtape (I guess that's probably not your real name, but you don't 
> seem to have given a real name),
> Can you try this patch and see if it fixes the problem? It assumes 
> you'll always be able to send a 64K buffer *eventually*, which I hope is 
> the case. If you could also try it with just the "or se.args[0] == 
> ENOBUFS", and not the buffer(.., 0, 65535), that'd also be appreciated.
> 
> 
> James
> 
> Index: twisted/internet/tcp.py
> ===================================================================
> --- twisted/internet/tcp.py     (revision 11325)
> +++ twisted/internet/tcp.py     (working copy)
> @@ -58,6 +58,7 @@
>      EISCONN     = 10056
>      ENOTCONN    = 10057
>      EINTR       = 10004
> +    from errno import WSAENOBUFS as ENOBUFS
>  elif os.name != 'java':
>      from errno import EPERM
>      from errno import EINVAL
> @@ -68,6 +69,7 @@
>      from errno import EISCONN
>      from errno import ENOTCONN
>      from errno import EINTR
> +    from errno import ENOBUFS
>  from errno import EAGAIN
> 
>  # Twisted Imports
> @@ -262,11 +264,11 @@
>          (which is negative)
>          """
>          try:
> -            return self.socket.send(data)
> +            return self.socket.send(buffer(data, 0, 65535))
>          except socket.error, se:
>              if se.args[0] == EINTR:
>                  return self.writeSomeData(data)
> -            elif se.args[0] == EWOULDBLOCK:
> +            elif se.args[0] == EWOULDBLOCK or se.args[0] == ENOBUFS:
>                  return 0
>              else:
>                  return main.CONNECTION_LOST
> 

   I'm not sure I like this :/  How about attempting a length-limited 
write only on ENOBUFS (assuming we can confirm the meaning of 
WSAENOBUFS)?  It'd be nice to leave the common code path alone, as it is 
a pretty darn common code path.

   Jp



From glyph at divmod.com  Sat Aug 21 16:34:28 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 21 Aug 2004 18:34:28 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <4127C5B0.6010409@divmod.com>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com>
Message-ID: <1093127668.16560.7.camel@localhost>

On Sat, 2004-08-21 at 17:59 -0400, Jp Calderone wrote:

>    Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
> the only documented behavior I can find for WSAENOBUFS.  And it is 
> _Windows_, so it needn't make sense.  I just wanted to point out this 
> possibility, since it seemed no one had considered it yet.

Based on both general UNIX community lore and various empirical
observations of my own, Windows uses the FreeBSD TCP stack, so if often
makes more sense than one would immediately think.

Given there is a manpage on my system which documents the behavior, but
says "Normally, this  does  not occur  in Linux.", are there any BSD
people out there who have a vintage that is contemporary with win2k who
can somehow reproduce this behavior?




From serj_trejo at hotmail.com  Sun Aug 22 08:51:12 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 22 Aug 2004 10:51:12 -0400
Subject: [Twisted-Python] Diagraming Twisted apps
Message-ID: <BAY12-F2jehzJ2hjUC000065a9b@hotmail.com>

I have truly enjoyed working with the Twisted Framework in recent weeks and 
have delved into Nevow, Atop, PB, and Twisted.web. I am creating an 
application with all of these components and am finding that my application 
is growing and becoming a bit complex.

In order to keep track of the complexity of asynchronicity (deferreds, 
etc.), I am wondering what, if any, diagramming tools twisted developers use 
for designing visual schematics to accompany their projects? Are there any 
such programs that can parse code based on twisted which automatically 
generates visual representations of flows and logic?

Has anyone tried using Dia?

Serg

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From foom at fuhm.net  Sun Aug 22 09:14:56 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 22 Aug 2004 11:14:56 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <1093127668.16560.7.camel@localhost>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
Message-ID: <06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>

On Aug 21, 2004, at 5:59 PM, Jp Calderone wrote:

>   I'm not sure I like this :/  How about attempting a length-limited  
> write only on ENOBUFS (assuming we can confirm the meaning of  
> WSAENOBUFS)?  It'd be nice to leave the common code path alone, as it  
> is a pretty darn common code path.
>
>   Jp

Assuming the construction of a buffer object is not high (from what I  
know it is not), this should not really be a problem. It would be very  
rare to be able to write more than 65K. On linux, at least, the buffer  
size is between 4K and 128K (if set by the application), and the  
default is either 16K or 64K.

It seems other people run into a very similar bug:
http://www.omniorb-support.com/pipermail/omniorb-list/2002-September/ 
021742.html
http://mail.ooc.nf.ca/pipermail/ob-users/1999-April/004989.html

Microsoft even has a KB article on something sounding quite similar:
http://support.microsoft.com/default.aspx?scid=http:// 
support.microsoft.com:80/support/kb/articles/q201/2/ 
13.asp&NoWebContent=1

Here's what they suggest. Do one of:
(a) Use the socket in nonblocking or asynchronous mode.
(b) Break large-size data blocks into small ones and specify a  
relatively small buffer in send for blocking sockets, preferably no  
larger than 64K.
(c) Set the SO_SNDBUF socket option to 0 (zero) to allow the stack to  
send from your application buffer directly.

Well, we've got (a) down... (c) is a bad idea, it will likely kill  
performance. That leaves (b). Sounds good, if it works.

James




From angryhicKclown at netscape.net  Sun Aug 22 13:28:29 2004
From: angryhicKclown at netscape.net (angryhicKclown at netscape.net)
Date: Sun, 22 Aug 2004 15:28:29 -0400
Subject: [Twisted-Python] Contributing?
Message-ID: <157FE2FA.75161D93.519F8DB3@netscape.net>

I was looking over the page on twistedmatrix.com on contributing, and it referred me to here. Over at the mono project, they have a todo-list sort of thing, that idle hackers such as myself can work on. I was wondering what the best way (besides monetary...I am a poor student) to contribute to the Twisted project is?

Thanks,

Peter Hunt

__________________________________________________________________
Switch to Netscape Internet Service.
As low as $9.95 a month -- Sign up today at http://isp.netscape.com/register

Netscape. Just the Net You Need.

New! Netscape Toolbar for Internet Explorer
Search from anywhere on the Web and block those annoying pop-ups.
Download now at http://channels.netscape.com/ns/search/install.jsp



From exarkun at divmod.com  Sun Aug 22 15:02:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 22 Aug 2004 17:02:21 -0400
Subject: [Twisted-Python] Contributing?
In-Reply-To: <157FE2FA.75161D93.519F8DB3@netscape.net>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
Message-ID: <412909DD.2080907@divmod.com>

angryhicKclown at netscape.net wrote:
> I was looking over the page on twistedmatrix.com on contributing, and it referred me to here. Over at the mono project, they have a todo-list sort of thing, that idle hackers such as myself can work on. I was wondering what the best way (besides monetary...I am a poor student) to contribute to the Twisted project is?
> 
> Thanks,
> 

   In April, I gave a simple summary of the state of various 
protocol-level parts of Twisted:

http://twistedmatrix.com/pipermail/twisted-python/2004-April/007641.html

   One task might be to turn this into a real todo list :)  One could 
also look at the modules which scored particularly low and try to 
improve them.

   Jp



From erno-news at erno.iki.fi  Mon Aug 23 07:36:47 2004
From: erno-news at erno.iki.fi (Erno Kuusela)
Date: 23 Aug 2004 16:36:47 +0300
Subject: [Twisted-Python] Re: ENOBUF and Twisted
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
Message-ID: <gu4pt5ix9g0.fsf@ee.oulu.fi>

Glyph Lefkowitz <glyph at divmod.com> writes:

> On Sat, 2004-08-21 at 17:59 -0400, Jp Calderone wrote:
> 
> >    Indeed, I had never heard of this ENOBUFS behavior before.  But it is 
> > the only documented behavior I can find for WSAENOBUFS.  And it is 
> > _Windows_, so it needn't make sense.  I just wanted to point out this 
> > possibility, since it seemed no one had considered it yet.
> 
> Based on both general UNIX community lore and various empirical
> observations of my own, Windows uses the FreeBSD TCP stack, so if often
> makes more sense than one would immediately think.

this is an urban legend,
see eg <http://www.kuro5hin.org/?op=displaystory;sid=2001/6/19/05641/7357>.
unless you're talking about pre-1994 NT ;)

  -- erno




From foom at fuhm.net  Tue Aug 24 11:46:30 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 24 Aug 2004 13:46:30 -0400
Subject: [Twisted-Python] ENOBUF and Twisted
In-Reply-To: <06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>
References: <20040819064810.GA2522@ferd2.thristian.org>
	<4126FECF.4090205@divmod.com>
	<26B8DD72-F3AC-11D8-9909-000A95A50FB2@fuhm.net>
	<4127C5B0.6010409@divmod.com> <1093127668.16560.7.camel@localhost>
	<06DA3876-F44E-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <87D6D68C-F5F5-11D8-9909-000A95A50FB2@fuhm.net>

Okay, I've done some testing on windows, and here is the problem:

With non-blocking sockets:
In Unix, socket.send(buf) will buffer as much of buf as it has space 
for, and then return how much it accepted. This could be 0 or up to 
something around 128K. If you send some data and then some more, it 
will append to the previous buffer.

In Windows, socket.send(buf) will either accept the entire buffer or 
raise ENOBUFS. Testing indicates that it will internally buffer any 
amount up to 50MB (this seems to be *TOTAL* for either the process or 
the OS, I'm not sure). However, it will not incrementally accept more 
data to append to a socket's buffer until the big buffer has been 
completely emptied (seemingly down to the SO_SNDBUF length, which is 
8192), but rather raises EWOULDBLOCK instead.

This makes me confident that the previous patch is the right thing to 
do and will fix the problem.

James




From radeex at gmail.com  Wed Aug 25 03:24:37 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 05:24:37 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <60ed19d404082502242f8ee9a9@mail.gmail.com>

I just switched everything in Subversion from LGPL to MIT, at glyph's command.

The policy that he outlined:

 1) All contributions or inclusions must be MIT licensed.
 1.a) If you want to include someone else's code in Twisted, it still
has to be MIT licensed, but keep their own copyright notice intact.
 2) Anybody who's a contributor and wants their name listed as a
copyright holder can have their name added to the LICENSE file (I
copied everyone from CREDITS into LICENSE initally).
 3) Put this preamble at the top of files:

# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
# See LICENSE for details.


Have fun.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From glyph at divmod.com  Wed Aug 25 04:36:39 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 25 Aug 2004 06:36:39 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082502242f8ee9a9@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
Message-ID: <1093430200.5441.10.camel@localhost>

On Wed, 2004-08-25 at 05:24 -0400, Christopher Armstrong wrote:
> I just switched everything in Subversion from LGPL to MIT, at glyph's command.

Thank you, Chris.  It's good to have this taken care of.




From mesozoic at polynode.com  Wed Aug 25 13:11:15 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 25 Aug 2004 15:11:15 -0400
Subject: [Twisted-Python] Re: Twisted is now under the MIT license.
In-Reply-To: <1093430200.5441.10.camel@localhost>
Message-ID: <E1C03Ax-0001Gv-00@perpetual.moxn.net>


On 8/25/2004, "Glyph Lefkowitz" <glyph at divmod.com> wrote:

>On Wed, 2004-08-25 at 05:24 -0400, Christopher Armstrong wrote:
>> I just switched everything in Subversion from LGPL to MIT, at glyph's command.
>
>Thank you, Chris.  It's good to have this taken care of.

Out of curiosity, what is the rationale behind switching licenses?
What's the difference for end users between LGPL- and MIT-licensed
Twisted?



From mary-twisted at puzzling.org  Wed Aug 25 13:18:37 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 25 Aug 2004 19:18:37 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082502242f8ee9a9@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
Message-ID: <20040825191837.GA16628@puzzling.org>

On Wed, Aug 25, 2004, Christopher Armstrong wrote:
>  1) All contributions or inclusions must be MIT licensed.
>  1.a) If you want to include someone else's code in Twisted, it still
> has to be MIT licensed, but keep their own copyright notice intact.
>  2) Anybody who's a contributor and wants their name listed as a
> copyright holder can have their name added to the LICENSE file (I
> copied everyone from CREDITS into LICENSE initally).

Can you clarify this a bit? If individual contributions are now
copyright their original author, surely 2 only applies to Twisted code
as it stood at the time of your last commits.

Copyright can't be blanket asserted in the LICENSE file over code that
is added after that point.  Or am I misunderstanding what the LICENSE
file is saying?

-Mary



From mary-twisted at puzzling.org  Wed Aug 25 13:24:23 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 25 Aug 2004 19:24:23 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040825191837.GA16628@puzzling.org>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
Message-ID: <20040825192423.GB16628@puzzling.org>

On Wed, Aug 25, 2004, Mary Gardiner wrote:
> Copyright can't be blanket asserted in the LICENSE file over code that
> is added after that point.  Or am I misunderstanding what the LICENSE
> file is saying?

OK, looking at it it's unclear whether the LICENSE file asserts that:

 - the people listed there jointly hold copyright over all of Twisted
   (which may be true now, but won't be as pieces get added[1])

   or

 - the people listed there individually hold copyright over pieces of
   Twisted

-Mary

[1] I assume joint copyright is fine under US law in theory, it's just
that individual pieces of Twisted are apparently going to retain their
copyright now.



From radeex at gmail.com  Wed Aug 25 17:10:05 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 19:10:05 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040825192423.GB16628@puzzling.org>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
Message-ID: <60ed19d404082516106001abc1@mail.gmail.com>

To Mary and Alex:

Ask a lawyer (or someone else who's silly enough to answer :).

This is how a lot of open source project's are run. ESR's Licensing
HOWTO may or may not be accurate, but if you assume it is correct, it
is enlightening.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From andrew-twisted at puzzling.org  Wed Aug 25 18:33:22 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Aug 2004 17:33:22 -0700
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082516106001abc1@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
Message-ID: <20040826003322.GC4629@frobozz>

On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> To Mary and Alex:
> 
> Ask a lawyer (or someone else who's silly enough to answer :).

I doubt a lawyer could answer Alex's question about the rationale for the
change :)

-Andrew.




From radeex at gmail.com  Wed Aug 25 18:43:57 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 20:43:57 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826003322.GC4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
Message-ID: <60ed19d404082517437dc803d3@mail.gmail.com>

On Wed, 25 Aug 2004 17:33:22 -0700, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:
> On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> > To Mary and Alex:
> >
> > Ask a lawyer (or someone else who's silly enough to answer :).
> 
> I doubt a lawyer could answer Alex's question about the rationale for the
> change :)

Well, I was focusing on his "what's the difference", which I can't
answer. I guess I'll risk it: The rationale is that MIT (presumably)
allows people to derive from the work without keeping derived works
open, and that's what glyph wanted now that Twisted has matured. Also,
the Twisted codebase is (presumably) not at the whim of glyph any
more, since all contributors (if they want) are listed as copyright
holders, not just glyph.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From andrew-twisted at puzzling.org  Wed Aug 25 19:42:17 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 25 Aug 2004 18:42:17 -0700
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <60ed19d404082517437dc803d3@mail.gmail.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
Message-ID: <20040826014217.GD4629@frobozz>

On Wed, Aug 25, 2004 at 08:43:57PM -0400, Christopher Armstrong wrote:
> 
> Well, I was focusing on his "what's the difference", which I can't
> answer. I guess I'll risk it: The rationale is that MIT (presumably)
> allows people to derive from the work without keeping derived works
> open, and that's what glyph wanted now that Twisted has matured. Also,
> the Twisted codebase is (presumably) not at the whim of glyph any
> more, since all contributors (if they want) are listed as copyright
> holders, not just glyph.

To be clear on this: contributions are now *only* copyright their authors,
(rather than the previous joint copyright-assignment to glyph)?  And so when
you say "copyright holders", you're referring to everyone that has copyright
in any part of Twisted's source, rather than saying that everyone is now
joint holders of copyright?

Also, the new source file boilerplate says:

    # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
    # See LICENSE for details.

But as far as I know, Twisted Matrix Laboratories isn't a legally recognised
organisation (in any country), and regardless it isn't mentioned in the
LICENSE file, despite the boilerplate's promise that it would have details.
This is probably a minor issue, but it is confusing.

-Andrew.




From radeex at gmail.com  Wed Aug 25 20:41:29 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 22:41:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <60ed19d404082519413fcea99d@mail.gmail.com>

On Wed, 25 Aug 2004 18:42:17 -0700, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:

[A bunch of horrible scary questions about copyright and license]

This is getting too hairy for me. Glyph, you take it.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mary-twisted at puzzling.org  Wed Aug 25 20:50:01 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 26 Aug 2004 02:50:01 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<20040825191837.GA16628@puzzling.org>
	<20040825192423.GB16628@puzzling.org>
	<60ed19d404082516106001abc1@mail.gmail.com>
	<20040826003322.GC4629@frobozz>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <20040826025001.GA19518@puzzling.org>

On Wed, Aug 25, 2004, Andrew Bennetts wrote:
> To be clear on this: contributions are now *only* copyright their
> authors, (rather than the previous joint copyright-assignment to
> glyph)?  And so when you say "copyright holders", you're referring to
> everyone that has copyright in any part of Twisted's source, rather
> than saying that everyone is now joint holders of copyright?

This was more or less my question too. Given that I got "this is how
lots of open source projects do it!" as a response, I'm going to assume
the former, because the latter doesn't seem that common.

-Mary



From michaeltrosen at gmail.com  Wed Aug 25 21:06:29 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Wed, 25 Aug 2004 23:06:29 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
Message-ID: <4a0aa96304082520065d1dedf1@mail.gmail.com>

Hi Everyone,

I'm new to using the twisted framework, so excuse me if this is a
basic question..

When I run the sshsimpleclient.py example, to an external site,
everything works fine (I just change the code to use my username and
server information.)

However, if I try to ssh to my localhost, it prints out the host key
fingerprint, and then hangs.. never prompting for the password.

Is there something different about trying to connect to localhost (I
changed the code slightly, to take a command line parameter for the
username/host..:
if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
if I use:  python sshsimpleclient.py root at localhost    it hangs.

I am running Suse 9.1 Professional, and I can ssh to the host just
using the regular openssh ssh exe.

Thanks!  And awesome job on Twisted!

Mike Trosen



From serj_trejo at hotmail.com  Wed Aug 25 21:37:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:37:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>

I have yet to read the MIT license, but am wondering if it is unilateral in 
that it only is eforceable under U.S. law? Or does the United Nations 
recognize the MIT license for enforceability issues? Side note: Microsoft 
announced yesterday that they're withdrawing from the U.N. Cefact (this 
makes me nervous about U.S. laws and big corporations like Microsoft who try 
to wield influence on other countries as well as the U.N.)

_________________________________________________________________
Add photos to your messages with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From serj_trejo at hotmail.com  Wed Aug 25 21:43:58 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:43:58 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>

Radix,

With all due respect, what if I am living in Mexico -- should I just waltz 
down to my local neighborhood attorney in Guadalajara and expect him/her to 
be able to give me advice about any U.S.-centric intellectual property 
related license? I'm not sure what the better answer is, but I don't know 
that it is fair to expect every person who wants to contrbute code to 
Twisted to have to consult with a lawyer in their non-U.S. country.

Serg

>From: Christopher Armstrong <radeex at gmail.com>
>Reply-To: radix at twistedmatrix.com,Twisted general discussion 
><twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Wed, 25 Aug 2004 19:10:05 -0400
>
>To Mary and Alex:
>
>Ask a lawyer (or someone else who's silly enough to answer :).
>
>This is how a lot of open source project's are run. ESR's Licensing
>HOWTO may or may not be accurate, but if you assume it is correct, it
>is enlightening.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+            http://radix.twistedmatrix.com
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Wed Aug 25 21:45:15 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:45:15 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F1CPx33E1ioWw000c9f76@hotmail.com>

Glyph - maybe we missed why the change. Can you point us to a URL that 
describes why the change? Thanks.

Serg

>From: Andrew Bennetts <andrew-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Wed, 25 Aug 2004 17:33:22 -0700
>
>On Wed, Aug 25, 2004 at 07:10:05PM -0400, Christopher Armstrong wrote:
> > To Mary and Alex:
> >
> > Ask a lawyer (or someone else who's silly enough to answer :).
>
>I doubt a lawyer could answer Alex's question about the rationale for the
>change :)
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From radeex at gmail.com  Wed Aug 25 21:50:23 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 25 Aug 2004 23:50:23 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>
References: <BAY12-F31ygFQaTtzFB0010a093@hotmail.com>
Message-ID: <60ed19d40408252050ebd88d7@mail.gmail.com>

On Wed, 25 Aug 2004 23:43:58 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> Radix,
> 
> With all due respect, what if I am living in Mexico -- should I just waltz
> down to my local neighborhood attorney in Guadalajara and expect him/her to
> be able to give me advice about any U.S.-centric intellectual property
> related license? I'm not sure what the better answer is, but I don't know
> that it is fair to expect every person who wants to contrbute code to
> Twisted to have to consult with a lawyer in their non-U.S. country.

I didn't expect anybody to do that. _I_ don't have practical access to
a lawyer either. Probably almost all contribution to all open source
projects is done without consulting a lawyer. Deal with it.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From serj_trejo at hotmail.com  Wed Aug 25 21:51:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:51:29 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F32oHhylKIi7F00105731@hotmail.com>

>Also, the new source file boilerplate says:
>
>     # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
>     # See LICENSE for details.
>
>But as far as I know, Twisted Matrix Laboratories isn't a legally 
>recognised
>organisation (in any country), and regardless it isn't mentioned in the
>LICENSE file, despite the boilerplate's promise that it would have details.
>This is probably a minor issue, but it is confusing.

If its true that Twisted Matrix Laboratories is neither a human or an 
artificial person in any territory, then I think its a major issue not a 
minor one. Copyright is not assignable to a ghost or a shadow.

>
>-Andrew.

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From serj_trejo at hotmail.com  Wed Aug 25 21:55:45 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 25 Aug 2004 23:55:45 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
Message-ID: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>

Mary,

I am curious as to how Australians view U.S.-centric IPR issues such as 
licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
would need to confirm this yet) that Microsoft has filed some ungodly amount 
of U.S. patents (I think 5,000). The IPR patent issue is a sticky one lately 
in Europe and I'm curious about Australia / New Zealand viewpoints.

Cheers,

Serg

>From: Mary Gardiner <mary-twisted at puzzling.org>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: twisted-python at twistedmatrix.com
>Subject: Re: [Twisted-Python] Twisted is now under the MIT license.
>Date: Thu, 26 Aug 2004 02:50:01 +0000
>
>On Wed, Aug 25, 2004, Andrew Bennetts wrote:
> > To be clear on this: contributions are now *only* copyright their
> > authors, (rather than the previous joint copyright-assignment to
> > glyph)?  And so when you say "copyright holders", you're referring to
> > everyone that has copyright in any part of Twisted's source, rather
> > than saying that everyone is now joint holders of copyright?
>
>This was more or less my question too. Given that I got "this is how
>lots of open source projects do it!" as a response, I'm going to assume
>the former, because the latter doesn't seem that common.
>
>-Mary
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From mary-twisted at puzzling.org  Wed Aug 25 22:18:52 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 26 Aug 2004 04:18:52 +0000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
References: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
Message-ID: <20040826041852.GA20250@puzzling.org>

[this is quite off-topic, so I'll only reply the once. Please direct
future questions to Linux Australia's linux-aus list --
http://lists.linux.org.au/ -- rather than to me or twistedmatrix mailing
lists]

On Wed, Aug 25, 2004, Sergio Trejo wrote:
> Mary,
> 
> I am curious as to how Australians view U.S.-centric IPR issues such as 
> licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
> would need to confirm this yet) that Microsoft has filed some ungodly 
> amount of U.S. patents (I think 5,000). The IPR patent issue is a sticky 
> one lately in Europe and I'm curious about Australia / New Zealand 
> viewpoints.

Australia is a party to the Geneva convention, so copyright works
created in the United States are also copyright in Australia. The laws
are not *that* different. I don't think the validity of the Free
Software licences has ever been tested in Australian courts, but they
seem to be regarded as compatible with Australian copyright law.

Assuming that US Congress passes the recent amendments to the
US-Australia Free Trade Agreement, our software patenting and
anti-circumvention laws will also resemble those of the United States
although they are presently quite different and afford IP owners less
protection. (The amendments proposed by the Australian parliament at the
instigation of the Labor party in Opposition are designed to limit
certain uses of pharmaceutical patents, namely the practice known as
"evergreening". According to John Quiggin of http://www.johnquiggin.com/
the US does not like the proposed changes.  But I'm not following the
debate too closely, as I'm out of the country for three months. If it
does not pass soon it will be a election issue in the upcoming
Australian federal election.)

-Mary



From tim.stebbing at nunatak.com.au  Wed Aug 25 22:19:08 2004
From: tim.stebbing at nunatak.com.au (Tim Stebbing)
Date: Thu, 26 Aug 2004 14:19:08 +1000
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
References: <BAY12-F4024KPuI5onq000f19e2@hotmail.com>
Message-ID: <412D64BC.4020406@nunatak.com.au>

Sergio Trejo wrote:
> Mary,
> 
> I am curious as to how Australians view U.S.-centric IPR issues such as 
> licenses (e.g., GPL/LGPL) and patents. I read yesterday on Slashdot (and 
> would need to confirm this yet) that Microsoft has filed some ungodly 
> amount of U.S. patents (I think 5,000). The IPR patent issue is a sticky 
> one lately in Europe and I'm curious about Australia / New Zealand 
> viewpoints.
> 
> Cheers,
> 
> Serg
> 

We just signed a free trade agreement with the US because we're scared 
that we cant defnd ourselves against indonesia should their army (which 
is bigger than our population) decide to annex us. So reguarding US 
patent law, It seems we're to bend over and take it.


-- 
(o_   Timothy Stebbing, Pythonista, Nunatak Systems
//\    03 6226 6259, tim.stebbing at nunatak.com.au
V_/_  ><>--------------------------------------<><





From mcfletch at rogers.com  Wed Aug 25 22:33:45 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Thu, 26 Aug 2004 00:33:45 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>
References: <BAY12-F20L3J8r8HhS7000319b9@hotmail.com>
Message-ID: <412D6829.3030107@rogers.com>

Sergio Trejo wrote:

> I have yet to read the MIT license, 

Take 30 seconds and do so ;) .  I think you'll find it's not the most 
evil thing in the world...

    http://www.opensource.org/licenses/mit-license.php

If you are using *any* open source project (and many closed source ones 
too), then you are almost certainly using either MIT or BSD-licensed 
code, and if you are using Twisted, then you are certainly using code 
which has a far more complex and scary licensing history (i.e. Python 
itself) than something which is licensed solely and explicitly under 
MIT.  Basically MIT is one of the least restrictive licenses available, 
far less restrictive than LGPL, for instance.  It says (approximately) 
you can do whatever you like as long as you don't sue the creator, and 
you retain the license + copyright notice in the source.

As for the issue of how contributions work, Twisted has, as far as I 
know up until this date required assignment of copyright (to IIRC 
Glyph).  That allows Glyph to relicense the project anyway he feels at 
some point.  There is some legal murkiness in the US around the question 
of "joint" copyright, with most modern licenses tending to require that 
there be a single owner of the copyright who provides irrevocable 
sub-licenses back to the original author to avoid that murkiness.

There is no legal reason to stop assigning copyright to a single person 
or entity as far as I know, but as long as each contributor is 
contributing their work under MIT license, the results can be combined 
(though technically each licensor would then require that their license 
+ copyright statement be included, which can become rather ugly if there 
are a few hundred individual contributors).  Assignment with irrevocable 
back-licenses seems to be the path most "monied" open source projects 
(i.e. those who can afford intellectual property lawyers) are taking, 
btw.  However, most of these concerns tend to drop out when everything 
being considered is under MIT/BSD-style licenses, if the creator has the 
right to apply any license at all, applying MIT/BSD basically means that 
anyone can use the code for whatever purpose, so it doesn't particularly 
matter (other than for tracking copyright and license attributions) who 
owns the copyright.

As for whether the license would be enforceable solely under U.S. law; 
you are asking the wrong question (do you really care whether it's 
enforceable in Nairobi?), what you want to know is whether it is a valid 
license[1] under the laws of your own country.  The MIT license is an 
extremely simple license statement.  A clear statement that you can use 
the software for basically any purpose is far more likely to be valid in 
multiple countries than the kind of overwrought licenses created by 
practitioners focusing solely on a particular country's legal 
idiosyncrasies.  There may be jurisdictions under which the clauses 
disclaiming liability are not allowed.  Arguably that would either leave 
the contributors open to liability damages, or entirely nullify the 
license.  If you are really worried about that, then you'd have to talk 
to a lawyer (and I'm not one, of course)... and maybe a psychiatrist :) .

With respect,
Mike

[1] Keep in mind that a license *loosens* restrictions that would 
otherwise be present.  The enforceable restrictions on a license are 
simply trying to retain some of the already present restrictions and/or 
trade restraint of action in some form for the right to traverse the 
granted monopoly.  In the MIT license case, unless you're planning to 
sue the developers for liability, or for some reason feel the need to 
strip off the copyright statement and claim the product as your own 
creation, there's very little that the copyright holders can enforce 
against you.

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From sflist at ihonk.com  Wed Aug 25 22:34:49 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Wed, 25 Aug 2004 22:34:49 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <20040826014217.GD4629@frobozz>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
Message-ID: <200408252234.49608.sflist@ihonk.com>

Hi all,

I've got an XML-RPC app that has to grab some data from a SQL database, then 
depending on the results, make some more SQL calls, make some more decisions, 
then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
idiom I've come up with, and I'm running into a limitation with it, namely 
that I can't seem to add callbacks to a Deferred after it has started 
running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
like to stick with, if possible:

class MyXmlRpcClass(xmlrpc.XMLRPC):
  def__init__(self):
    self.db = adbapi.ConnectionPool(blah)

  def xmlrpc_foo(self):
    return FooClass(self.db).step1() # This returns a deferred, see below

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        self.d = self.db.runQuery(blah)
        self.d.addCallback(self.step2)
        return self.d

    def step2(self, query):
 if query == 'yadda':
          return 'This bit works'
        else:
          self.d.chainDeferred(self.db.runOperation(blah))
          self.d.addCallback(self.step3)
            
    def step3(self, data):
        return "Never gets here!"

If I get to the part where it adds the callback for step3, it ends up giving 
an AlreadyCalled exception in Deferred. So, I expect there's a good way to 
add to a running Deferred, no?

Thanks!

Steve



From mcfletch at rogers.com  Wed Aug 25 23:15:13 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Thu, 26 Aug 2004 01:15:13 -0400
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <200408252234.49608.sflist@ihonk.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
Message-ID: <412D71E1.30502@rogers.com>

Steve Freitas wrote:

>Hi all,
>
>I've got an XML-RPC app that has to grab some data from a SQL database, then 
>depending on the results, make some more SQL calls, make some more decisions, 
>then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
>idiom I've come up with, and I'm running into a limitation with it, namely 
>that I can't seem to add callbacks to a Deferred after it has started 
>running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
>like to stick with, if possible:
>  
>
This wasn't spectacularly obvious to me the first time either, but I 
think it's covered somewhere in the deferred execution howto; in your 
callback/errback, return a new deferred and the processing of the 
deferred chain will pause until that new deferred fires.  Here's an 
example of code that does that...

            df = self.shouldRetrieve( urlRecord )
            def ifWeShould( judgement, urlRecord ):
                if judgement:
                    df = urlRecord.retrieve( self.timeout, self.userAgent )
                    df.addCallback( self.onSuccess, urlRecord = urlRecord )
                    df.addErrback( self.onFailure, urlRecord = urlRecord )
                    return df
                else:
                    return self.onFailure(
                        failure.Failure( RobotDenied(urlRecord)),
                        urlRecord = urlRecord
                    )
            df.addCallback( ifWeShould, urlRecord=urlRecord )

In the one branch, we return the result of a call, in the other, we 
return a new Deferred.  Note that the new deferred shows up between the 
current callback and any Deferred higher up in the chain, so the 
Deferred's higher up the chain will get the result of the new Deferred.  
If that's not desirable, you can define a handler for the new deferred 
that returns the original result.

Hope I understood the question properly and that this helped,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From sflist at ihonk.com  Thu Aug 26 01:12:51 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 01:12:51 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <412D71E1.30502@rogers.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<200408252234.49608.sflist@ihonk.com> <412D71E1.30502@rogers.com>
Message-ID: <200408260112.51433.sflist@ihonk.com>

> This wasn't spectacularly obvious to me the first time either, but I
> think it's covered somewhere in the deferred execution howto; in your
> callback/errback, return a new deferred and the processing of the
> deferred chain will pause until that new deferred fires.  Here's an
> example of code that does that...

Thanks for your reply, Mike! I don't thoroughly understand your code yet, but 
I'm workin' on it. One of the things I don't like about the examples is that 
they don't demonstrate a conditional addition of a callback.

One of the things I did try was returning a new Deferred from step2(), but it 
didn't work, and I'm not sure why. I'm checking out defer.py now to try to 
figure out how it works...

Steve



From glyph at divmod.com  Thu Aug 26 07:30:26 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 26 Aug 2004 09:30:26 -0400
Subject: [Twisted-Python] Twisted is now under the MIT license.
In-Reply-To: <BAY12-F32oHhylKIi7F00105731@hotmail.com>
References: <BAY12-F32oHhylKIi7F00105731@hotmail.com>
Message-ID: <1093527026.5441.89.camel@localhost>

(Aside to TMLabs: I think there may have been a miscommunication.  You
*may* continue to consign copyright either to me or to another TML
member if you would like to.  The advantage would be to legally disclaim
any interest in conversations like this one :-) )

Sergio,

I am not a lawyer.  As far as I know, you are not a lawyer.  These
discussions only have real meaning between legal professionals in a
specific jurisdiction at a specific point in time.  Even then, there are
many subtle points open to debate.  Still, I'll state my intentions and
my understanding of the law for the record, in case someone wants to
refer back to this when they're suing us all.

I'm sorry I didn't post something before the change, but this change
really shouldn't affect anyone except those who need a more flexible
license for Twisted than the LGPL.  Since those people previously had to
contact me personally, I am pretty sure there are not many of them :).
I will try to answer as many possible objections in this email, even
those you have not raised, since I have seen some discussion on the list
and I anticipate more.  Unless I have overlooked something really
serious, though, this is the the last message I'll write on the subject;
after years of doing it, I really hate talking about licensing.

I have asked several intellectual property lawyers and paralegals
questions related to this, and have gotten at least two interpretations
per person.  US copyright law and the Berne convention, as they apply to
software and to jointly authored works by hobbyists, are very confusing.
One radical point of view is that in some contexts, copyright law cannot
apply to software at all.  I do not believe that there is a "correct"
solution that gives an air-tight legal protection, given the very nature
of international law.

However, I have attempted to follow a commonly accepted practice within
the open source community based on my layman's view of the common
interpretation of US copyright law and the Berne convention.

The motivation for the change is simple: some people who wanted to
contribute to Twisted were in a position where they weren't able to
contribute code because they are allowed to publish open-source code
under a license of their choice, but they are not allowed to consign
their copyrights.  Furthermore, my previous motivation for making
Twisted LGPL and centralizing the copyright is no longer valid.  I don't
work in the games industry any more, and "open source" has been endorsed
by IBM and other corporate giants.  (If this doesn't make sense, google
around for old mailing-list messages where I explained the motivation
for the previous policy in depth.)

The only legal protection we are currently seeking with the licensing
Twisted 2.0 codebase, the first public release this change will affect,
is not to get sued when things go wrong with Twisted: if it breaks, you
can keep both pieces.

The reason we have a license at all is that there seems to be widespread
agreement that putting software in the public domain can leave the
original authors open to arbitrarily large liability claims, if it's a
legally valid thing to do at all.  I don't believe there is any case
history about this *specifically*, but it is a common caution so I
assume there must be other precedents.

That is the ONLY thing the license is for.  The assurances that some
users may want - "will some disgruntled author on the Twisted team sue
me?" or "has the code been properly vetted for copyright violations of
others' work?" - cannot be granted by the license agreement.

I'd like to stress that.  There are no assurances.  There is no
warranty... ahem... THERE IS NO WARRANTY, EXPRESSED OR IMPLIED,
INCLUDING THE IMPLIED WARRANTIES OF MERCHANTIBILITY OR FITNESS FOR A
PARTICULAR PURPOSE.  If we lie to you about who wrote it, when it was
written, why it was written or even what it is, the liability, and the
responsibility for discovering this, is yours.  This is true of close to
99% of all free/open source software, so if you don't like it, you are
going to have to find someone to take the liability for you and pay them
to do it.

(Actually it's true of proprietary, commercial software too.  Read your
Microsoft, Apple, or Adobe license agreements, if you have any.)

That said, there are mechanisms in place to prevent this kind of
"tainting" from happening.  Professionally, it would certainly be a
problem for me if it did.  I have personally made sure that everyone
with commit access understands their responsibilities.  We try very hard
to keep our hands clean.  If we fail, SVN keeps a pretty complete
history of what's happened recently, we have backups of the repository
available if there are any hardware failures.  So, while it is possible
that we will make a mistake, but it is vanishingly unlikely that we will
not be able to correct it immediately.  It is also unrelated to the
license agreement.

I also, personally, don't plan to sue anybody for using Twisted, if they
don't sue me first - though I can't speak for anyone else involved.  (Of
course, they could have sued you under the previous policy.  And I might
sue you for something else.  So again - this changes nothing.)

On Wed, 2004-08-25 at 23:51 -0400, Sergio Trejo wrote:

> If its true that Twisted Matrix Laboratories is neither a human or an 
> artificial person in any territory, then I think its a major issue not a 
> minor one.

Major issue for whom?  I don't believe that this is a problem for me,
since as I understand it it's perfectly legal, and I don't see how it
could be a problem for you, since you are getting no warranty or
agreement from Twisted Matrix Labs - whether it is real or not - only
some rights and some code.

> Copyright is not assignable to a ghost or a shadow.

Why not?  The coder at http://www.hymn-project.org/ labels the code
simply "Copyright 2004." so it seems that some people think copyright is
assignable to nobody at all...

Copyright is, however, definitely assignable to "an abbreviation by
which the name can be recognized, or a generally known alternative
designation of the owner".  Given that we are moving Twisted to be a
joint-copyright work, rather than an individually assigned work, the
collective who owns the copyright is a loose collaboration of
individuals over the internet, and a "generally known alternative
designation" for that group (without listing everyone's name in every
file) is Twisted Matrix Labs.  It would be equally reasonable to say
"Copyright http://www.twistedmatrix.com/" but that seems a tad nerdy
even for source code.

Secondly, even if I'm completely wrong about the way joint copyright
works, the copyright is assigned by the act of creating and publishing a
work, NOT by placing a copyright notice on it.  This is one of the
clearest points of agreement in all interpretations of copyright law
that I'm aware of.  Copyright notices are a holdover from laws made in
the mid-70s; they are almost meaningless for new works today.

The "work" in question here is the Twisted distribution, not individual
source files.  If for some reason we need to audit an individual's
contributions, tracking them at the file level may not be meaningful,
and we can already do that without adding the gross level of clutter
previously present in every file.  'svn blame' will allow us to track
credit to individual lines, and individual versions.  Any more
granularity than that will probably require time in court - and hey, SCO
has taught us that if you get to that point, your opponent is probably
just perjuring themselves anyway.




From sflist at ihonk.com  Thu Aug 26 09:07:25 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 09:07:25 -0600
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <412D71E1.30502@rogers.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>  <412D71E1.30502@rogers.com>
Message-ID: <1093531734.10911.18.camel@ibook>

> This wasn't spectacularly obvious to me the first time either, but I 
> think it's covered somewhere in the deferred execution howto

Ah ha! I think I figured it out. If I do this, it seems to work...

class XMLRPCResponseClass():
    def step1(self):
        self.d = self.db.runQuery(blah)
        self.d.addCallback(self.step2)
        return self.d

    def step2(self, query): # Here's where the change is
        if query == 'yadda':
          return 'This bit works'
        else:
          self.d = self.db.runOperation(blah) # Rebinding self.d to new
                                              # Deferred()
          self.d.addCallback(self.step3) # add callbacks to new one
          return self.d # And return ref to the new one
            
    def step3(self, data):
        return 'Now it gets here!'

The trick is that I need to add any subsequent callbacks to a new
deferred which I return from the function. Strangely (to me), if I try
using chainDeferred() instead of returning the new deferred from step2,
it fails with AlreadyCalled, which I don't yet understand, but that's
fine, 'cause this seems to work well enough.

I really like this technique because I don't have to use a big state
machine at the root level of the xmlrpc calls, or preassign possibly
unnecessary callbacks, or toss around callables as variables until I'm
thoroughly confused. Instead, it allows me to place all the
(client||server) state information for a given method call inside a
class instance which persists only until the xmlrpc method returns. And
multiple calls to this method while it's being simultaneously Deferred()
for other clients don't require any extra coding to handle, as I've got
one class instance per connection. Very clean, very well separated,
which is hard to figure out how to do with this wonderful framework.
Alright, I'll stop ranting now. :-) I still have to give this thing a
workout to make sure it does all I want it to.

Thanks for the help!

Steve




From abe at fettig.net  Thu Aug 26 10:12:00 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 26 Aug 2004 12:12:00 -0400
Subject: [Twisted-Python] Adding callback to a Deferred that's already
	running?
In-Reply-To: <1093531734.10911.18.camel@ibook>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
Message-ID: <412E0BD0.8020004@fettig.net>

Steve,

I'm all too familar with the situation you describe, and I've come up 
with a pattern that works well for me.  Here's how I would have written 
your example:

class XMLRPCResponseClass():
     def step1(self):
	finished = defer.Deferred()
	self.db.runQuery(blah).addCallback(
             self.step2, finished).addErrback(finished.errback)
         return finished

     def step2(self, result, finished):
         if result == 'yadda':
             finished.callback('This bit works')
         else:
             self.d.runOperation(blah).chainDeferred(finished)


It takes a while to really understand how Deferreds work, but I'll try 
to explain this example.  In step1, we create a new Deferred called 
'finished'.  This Deferred didn't come from a method we called; we 
created it from scratch.  This means that it won't be triggered 
automatically when some event finishes.  Instead, we have the freedom to 
call it whenever we want.

We then kick off the asyncronous operation self.db.runQuery.  We set up 
the callbacks as follows:

1. If runQuery completes successfully, call step2(), passing finished as 
an additional argument.
2. If runQuery fails, pass the error on to finished.

Then we return finished, our Deferred.  At this point finished.errback 
will get called if runQuery fails.  But what if runQuery succeeds?  That 
will be handled by step2.

In step2, we take the result of runQuery , as well as the 'finished' 
Deferred we created in step1.  Now we have the results of the first 
operation, as well as a reference to the deferred that was returned in 
step1.

If the result of runQuery was 'yadda', we callback finished with a 
successful value.  Otherwise, we kick of a second asyncronous operation, 
(self.d.runOperation) and chain the results to finished.  Remember that 
a.chainDeferred(b) doesn't do anything special, it's just shorthand for:

a.addCallback(b.callback)
a.addErrback(b.errback)

So the result is that finished ends up calling back or erring back with 
the results of self.d.runOperation, even though it wasn't bound to 
runOperation when it was first created.

The only thing to be careful of with this technique is that you have to 
make sure any operation that could possibly fail sends its error to 
finished.errback - otherwise finished will never be finished :-)

I hope that's helpful!  I'm happy to answer questions if you have any.

Abe

p.s. - It's possible there's a better way to do this sort of thing.  But 
I'm using the above technique extensively in Hep and Yarn without any 
problems.

Steve Freitas wrote:
>>This wasn't spectacularly obvious to me the first time either, but I 
>>think it's covered somewhere in the deferred execution howto
> 
> 
> Ah ha! I think I figured it out. If I do this, it seems to work...
> 
> class XMLRPCResponseClass():
>     def step1(self):
>         self.d = self.db.runQuery(blah)
>         self.d.addCallback(self.step2)
>         return self.d
> 
>     def step2(self, query): # Here's where the change is
>         if query == 'yadda':
>           return 'This bit works'
>         else:
>           self.d = self.db.runOperation(blah) # Rebinding self.d to new
>                                               # Deferred()
>           self.d.addCallback(self.step3) # add callbacks to new one
>           return self.d # And return ref to the new one
>             
>     def step3(self, data):
>         return 'Now it gets here!'
> 
> The trick is that I need to add any subsequent callbacks to a new
> deferred which I return from the function. Strangely (to me), if I try
> using chainDeferred() instead of returning the new deferred from step2,
> it fails with AlreadyCalled, which I don't yet understand, but that's
> fine, 'cause this seems to work well enough.
> 
> I really like this technique because I don't have to use a big state
> machine at the root level of the xmlrpc calls, or preassign possibly
> unnecessary callbacks, or toss around callables as variables until I'm
> thoroughly confused. Instead, it allows me to place all the
> (client||server) state information for a given method call inside a
> class instance which persists only until the xmlrpc method returns. And
> multiple calls to this method while it's being simultaneously Deferred()
> for other clients don't require any extra coding to handle, as I've got
> one class instance per connection. Very clean, very well separated,
> which is hard to figure out how to do with this wonderful framework.
> Alright, I'll stop ranting now. :-) I still have to give this thing a
> workout to make sure it does all I want it to.
> 
> Thanks for the help!
> 
> Steve
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From foom at fuhm.net  Thu Aug 26 10:35:48 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 26 Aug 2004 12:35:48 -0400
Subject: [Twisted-Python] Contributing?
In-Reply-To: <157FE2FA.75161D93.519F8DB3@netscape.net>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
Message-ID: <FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>

On Aug 22, 2004, at 3:28 PM, angryhicKclown at netscape.net wrote:
> I was looking over the page on twistedmatrix.com on contributing, and 
> it referred me to here. Over at the mono project, they have a 
> todo-list sort of thing, that idle hackers such as myself can work on. 
> I was wondering what the best way (besides monetary...I am a poor 
> student) to contribute to the Twisted project is?

Welllll, since you ask.. :)

Here's a relatively self-contained project that could use working on:

twisted.web.microdom and twisted.web.sux is supposed to implement an 
XML/XHTML and HTML parser. It is pretty useless as an XML parser, given 
its relative slowness and the existence of expat/python xml libraries 
which do already do a very good job of being an XML parser. Microdom is 
*almost* a useful HTML parser, but it's missing support for a lot of 
HTML peculiarities that really need to be handled 
("<tr><td>foo<tr><td>bar" for one, strange whitespace collapsing rules, 
for another, and I'm sure there's more). Perl has a very good HTML 
parser in HTML::TreeParser whose algorithms could be duplicated.

This project isn't even very twisted specific (sux/microdom only have 
very minor dependancies on the rest of twisted) so it could conceivably 
be made into a general purpose python module in its own right. There 
are a variety of other Python HTML parsers, but from what I can tell, 
they're even worse than microdom is. It'd be way cool to have a python 
HTML parser that actually works. Can't let perl win! Any 
victi...volunteers? ;0

James




From nico at tekNico.net  Thu Aug 26 12:15:30 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 26 Aug 2004 20:15:30 +0200
Subject: [Twisted-Python] Re: Contributing?
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
	<FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>
Message-ID: <E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> There are a variety of other Python HTML parsers, but from what I can
> tell, they're even worse than microdom is. It'd be way cool to have a
> python HTML parser that actually works.

People say nice things about Beautiful Soup:

http://www.crummy.com/software/BeautifulSoup/


- -- 
Nicola Larosa - nico at tekNico.net

"...it's easier to add documentation and support to Linux than
security to Windows." -- Dan DeMaggio, CRYPTO-GRAM, June 2003


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFBLijFXv0hgDImBm4RAo98AJ0fW1mx9pZNsEWggOS8vfXyGw/qGgCfRNhK
3Q6K4QVMLuQQsUsb6u3GcwM=
=WCsn
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Thu Aug 26 12:26:13 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 14:26:13 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
	<412E0BD0.8020004@fettig.net>
Message-ID: <un00hiwmy.fsf@fitlinxx.com>

Abe Fettig <abe at fettig.net> writes:

> Steve,
> 
> I'm all too familar with the situation you describe, and I've come up
> with a pattern that works well for me.  Here's how I would have
> written your example:
> 
> class XMLRPCResponseClass():
>      def step1(self):
> 	finished = defer.Deferred()
> 	self.db.runQuery(blah).addCallback(
>              self.step2, finished).addErrback(finished.errback)
>          return finished
> 
>      def step2(self, result, finished):
>          if result == 'yadda':
>              finished.callback('This bit works')
>          else:
>              self.d.runOperation(blah).chainDeferred(finished)

I'm not sure I follow the need for the extra deferred.  I would think
that the following would work just as well:

    class XMLRPCResponseClass():

         def step1(self):
            return self.db.runQuery(blah).addCallback(self.step2)

         def step2(self, result):
             if result == 'yadda':
                 return 'This bit works'
             else:
                 return self.db.runOperation(blah)


In this case, the primary deferred is the original runQuery.  The
first callback on that forwards you to step 2.  A failure would flow
up the errback chain which you don't process locally but leave to the
caller to handle.

In the success case, if you need to additionally process the result
you just return the new value (the 'yadda' test), otherwise you spin
off another deferred operation, returning that deferred from your
callback.  Returning a deferred within a callback is an implicit
chaining operation as Twisted will wait for that new deferred to
finish before taking its result and propagating it up the callback or
errback chain appropriately.

Remember that when you add your callbacks/errbacks you are in control
of the sequence of execution as the callback/errback chain fires, and
thus you'll always get control in advance of any other
callback/errbacks that callers who you return the same deferred to
might be attaching.  That, plus the implicit chaining Twisted permits
by an individual function in the callback/errback chain itself
returning a deferred is pretty flexible.  It's certainly been rare for
me to need my own internally generated deferred unless I was the root
of the deferrable operation.

-- David






From foom at fuhm.net  Thu Aug 26 13:07:35 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 26 Aug 2004 15:07:35 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>
References: <157FE2FA.75161D93.519F8DB3@netscape.net>
	<FC29C550-F77D-11D8-9909-000A95A50FB2@fuhm.net>
	<E1C0Ome-0000FB-00@pyramid.twistedmatrix.com>
Message-ID: <30CCEF18-F793-11D8-9909-000A95A50FB2@fuhm.net>


On Aug 26, 2004, at 2:15 PM, Nicola Larosa wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>> There are a variety of other Python HTML parsers, but from what I can
>> tell, they're even worse than microdom is. It'd be way cool to have a
>> python HTML parser that actually works.
>
> People say nice things about Beautiful Soup:
>
> http://www.crummy.com/software/BeautifulSoup/

Unfortunately, it's trying to solve a completely different problem. It 
is not to hoping to make a tree of the entire document, but rather, to 
do something like "give me all the hrefs on the page". As such, it 
doesn't even *try* to parse html properly, it just knows enough to be 
able to ignore the parts of the page you aren't asking for.

Its intro says:
> A well-formed HTML document will yield a well-formed data
> structure. An ill-formed HTML document will yield a correspondingly
> ill-formed data structure. If your document is only locally
> well-formed, you can use this to process the well-formed part of it.

However, that is not entirely accurate, unless "well formed" doesn't 
mean "follows the HTML4 standard". It doesn't parse 
"<table><tr><td>foo<tr><td>bar</table>" correctly -- a perfectly valid 
bit of HTML4. Microdom's goal is to yield a well-formed data structure 
from a well-formed HTML document, and most ill-formed HTML documents 
too.

James




From db3l at fitlinxx.com  Thu Aug 26 13:09:48 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:09:48 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
Message-ID: <uisb5iumb.fsf@fitlinxx.com>

Steve Freitas <sflist at ihonk.com> writes:

> Hi all,
> 
> I've got an XML-RPC app that has to grab some data from a SQL database, then 
> depending on the results, make some more SQL calls, make some more decisions, 
> then finally return a result. So, I'm hip-deep in Deferreds. So, here's the 
> idiom I've come up with, and I'm running into a limitation with it, namely 
> that I can't seem to add callbacks to a Deferred after it has started 
> running. Here's what I'm doing in abbreviated form, and it's an idiom I'd 
> like to stick with, if possible:

You can certainly add a callback to a Deferred that has already fired
(it will immediately run synchronously), but yes, you can't do it
during the callback/errback operation (e.g., adding to a Deferred from
within one of that Deferred's callbacks/errbacks as it is running).

> class MyXmlRpcClass(xmlrpc.XMLRPC):
>   def__init__(self):
>     self.db = adbapi.ConnectionPool(blah)
> 
>   def xmlrpc_foo(self):
>     return FooClass(self.db).step1() # This returns a deferred, see below
> 
> class FooClass(General):
>     def __init__(self, db):
>         self.db = db
> 
>     def step1(self):
>         self.d = self.db.runQuery(blah)
>         self.d.addCallback(self.step2)
>         return self.d
> 
>     def step2(self, query):
>  if query == 'yadda':
>           return 'This bit works'
>         else:
>           self.d.chainDeferred(self.db.runOperation(blah))
>           self.d.addCallback(self.step3)
>             
>     def step3(self, data):
>         return "Never gets here!"
> 
> If I get to the part where it adds the callback for step3, it ends up giving 
> an AlreadyCalled exception in Deferred. So, I expect there's a good way to 
> add to a running Deferred, no?

I don't think you actually want to "add to a running Deferred" here,
since even if your chainDeferred call worked, it would be chaining at
the _end_ of the Deferred's callback/errback chain, which might be
after a whole slew of other operations that your callers (who got the
deferred from step1) already added.  So it wouldn't occur in the
sequence you want anyway.

What you really want to do (I believe) is the opposite chain operation
- you want to take the Deferred from the runOperation(blah), and chain
it to your current Deferred, so that your current Deferred's
callback/errback chain waits on the runOperation result to continue
working.  The actual chaining is easy (just change your use of
chainDeferred), but the hard part is making the current callback chain
suspend itself until the new Deferred finishes.

Luckily, Twisted already provides explicit support for this behavior
(which is sort of crucial to permit deferrable operations to interact
properly anyway).  What I think you want (similar to what I showed in
an earlier message of mine in this thread) is simply to return the new
deferred from within your callback.  Twisted will automatically notice
that the callback itself is awaiting a response via the deferred, and
it establishes the necessary linkage. 

Once the new internal Deferred finishes, it is its result (whether
successful or a Failure object) that will gate whether the original
Deferreds chain continues up callback or errback.

You can peek at the _runCallbacks inside the Deferred class definition
if you want to see the mechanism.  Or check out the first paragraph in
the "Chaining Deferreds" section of the Using Deferreds HOWTO.
Interestingly enough, the HOWTO (next paragraph) makes mention of it
potentially being confusing but that the reader will probably
recognize the need when they run into it.  Clearly that doesn't always
happen :-)

There's two ways, I think you can do FooClass, depending on how you
want to conceptually insert step3 into the processing:

The first, fairly literal adjustment of your class would be:

[Case 1]

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        return self.db.runQuery(blah).addCallback(self.step2)

    def step2(self, query):
        if query == 'yadda':
            return 'This bit works'
        else:
            return self.db.runOperation(blah).addCallback(self.step3)

    def step3(self, data):
        # 'data' is result of self.db.runOperation(blah)

        # Note that the result of this method will become the callback
        # result of the self.db.runOperation(blah) Deferred, and thus
        # in turn the next result passed up the callback chain for the
        # first self.db.runQuery(blah) Deferred as the answer from step2
        # in the non-yadda case.

        return "I got here!'

or:

[Case 2]

class FooClass(General):
    def __init__(self, db):
        self.db = db

    def step1(self):
        d = self.db.runQuery(blah)
        return d.addCallback(self.step2).addCallback(self.step2)
        
    def step2(self, query):
        if query == 'yadda':
            return 'This bit works'
        else:
            return self.db.runOperation(blah)

    def step3(self, data):
        # 'data' is result of step2

        # Note that the result of this method will become the callback
        # in the main callback chain for the first self.db.runQuery(blah)
        # Deferred, and will thus replace that of step2
        return "I got here!'


(Actually, there's also a third way in which you manually pause and
unpause the main Deferred callback chain, and set up a callback on the
secondary Deferred chain to resume the main one, but that's precisely
what Twisted does for you when you just return the underlying Deferred
from your callback, so I don't see any benefit of doing it yourself).

In both of these cases there are two deferred chains running (arising
from the two discrete deferrable operations that themselves are
creating Deferreds), but that in the even of the non-yadda path in
step2, the first callback chain is suspended while awaiting completion
of the second.

In Case 1, the addCallback of step3 is to the secondary callback
chain, so it provides additional post-processing of the runOperation
result, but does not get involved in other paths/results from step2.

In Case 2, step3 is added to the main callback (runQuery) chain, so it
will see any results of step2 (both yadda and runOperation) and can
then post-process them, becoming in all cases the callback result for
the main callback chain.  Note a key point here - even though step3 is
next in the main callback chain after step2, in the event step2
returns the Deferred from runOperation, the main chain suspends (so
step3 doesn't run immediately) until that second Deferred finishes,
at which point it is the result that step3 sees.

So what you end up (in the non-yadda case) is something like (in poor
ASCII diagraming):

    Case 1:                           Case 2:

    runQuery                          runQuery
       |                                 |
    step2                             step2
       |                                 |
       |  no                             |  no
       +-yadda->-runOperation            +-yadda->-runOperation
       |              |                  |              |
    yadda             v               yadda             v
       |              |                  |              |
       +---<------ step3                 +---<----------+
       |                                 |
       v                              step3
                                         |
                                         v


Hope this helps clarify things somewhat.

-- David




From db3l at fitlinxx.com  Thu Aug 26 13:18:43 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:18:43 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com>
	<412D71E1.30502@rogers.com> <1093531734.10911.18.camel@ibook>
Message-ID: <uekltiu7g.fsf@fitlinxx.com>

Steve Freitas <sflist at ihonk.com> writes:

> The trick is that I need to add any subsequent callbacks to a new
> deferred which I return from the function. Strangely (to me), if I try
> using chainDeferred() instead of returning the new deferred from step2,
> it fails with AlreadyCalled, which I don't yet understand, but that's
> fine, 'cause this seems to work well enough.

(should have finished reading ahead since you figured out some of my
prior response :-))

The above may or may not be true though, since it depends on what the
subsequent callbacks are supposed to do.  For example, if step3 is
processing of step2 results (anything step2 can return) then you want
it added to your main callback chain for your first Deferred.  If
however, step3 is only supposed to post-process the results of the
conditional path through step2 that invokes another deferrable
routine, yes, the right place to hang it is on that Deferred and not
the main Deferred.

Oh, and not that I probably wouldn't suggest overwriting self.d with
the intermediate deferreds if you could avoid it, if only because it's
bound to be confusing down the road when maintaining the code.  Since
you should know everyone that is going to be involved in a callback
chain at the point when a particular chain is being created (either
your first one, or one that is created within a callback) you should
be able to add callbacks to each chain as it is created.





  If they
are generic processing in sequence that should work with any result
from



 - see Case 2 in my prior
response - depending on when you want the subsequent processing to
run.

-- David





From abe at fettig.net  Thu Aug 26 13:27:40 2004
From: abe at fettig.net (Abe Fettig)
Date: Thu, 26 Aug 2004 15:27:40 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's	already
	running?
In-Reply-To: <un00hiwmy.fsf@fitlinxx.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>	<60ed19d404082517437dc803d3@mail.gmail.com>	<20040826014217.GD4629@frobozz>	<200408252234.49608.sflist@ihonk.com>	<412D71E1.30502@rogers.com>
	<1093531734.10911.18.camel@ibook>	<412E0BD0.8020004@fettig.net>
	<un00hiwmy.fsf@fitlinxx.com>
Message-ID: <412E39AC.3040706@fettig.net>

David Bolen wrote:

> I'm not sure I follow the need for the extra deferred.  I would think
> that the following would work just as well:
> 
>     class XMLRPCResponseClass():
> 
>          def step1(self):
>             return self.db.runQuery(blah).addCallback(self.step2)
> 
>          def step2(self, result):
>              if result == 'yadda':
>                  return 'This bit works'
>              else:
>                  return self.db.runOperation(blah)

Ah, thanks - I didn't realize that would work.  I might be able to 
refactor some code now :-).

Abe




From db3l at fitlinxx.com  Thu Aug 26 13:33:53 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Aug 2004 15:33:53 -0400
Subject: [Twisted-Python] Re: Adding callback to a Deferred
	that's	already	running?
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com> <uisb5iumb.fsf@fitlinxx.com>
Message-ID: <uacwhiti6.fsf@fitlinxx.com>

David Bolen <db3l at fitlinxx.com> writes:

(oops - minor correction to my last post)

> [Case 2]
> 
> class FooClass(General):
>     def __init__(self, db):
>         self.db = db
> 
>     def step1(self):
>         d = self.db.runQuery(blah)
>         return d.addCallback(self.step2).addCallback(self.step2)

this should be (step3 on the final callback):

          return d.addCallback(self.step2).addCallback(self.step3)

-- David




From sflist at ihonk.com  Thu Aug 26 15:23:26 2004
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 26 Aug 2004 15:23:26 -0600
Subject: [Twisted-Python] Re: Adding callback to a Deferred that's
	already running?
In-Reply-To: <uacwhiti6.fsf@fitlinxx.com>
References: <60ed19d404082502242f8ee9a9@mail.gmail.com>
	<60ed19d404082517437dc803d3@mail.gmail.com>
	<20040826014217.GD4629@frobozz>
	<200408252234.49608.sflist@ihonk.com> <uisb5iumb.fsf@fitlinxx.com>
	<uacwhiti6.fsf@fitlinxx.com>
Message-ID: <1093555406.11995.13.camel@ibook>

Thanks to all of you for your very informative responses, Mike, Abe and
David! I've learned a lot, and gotten the information I need to continue
on with my work. Everything was explained thoroughly, so I think I'm all
set now. It's great to have such a helpful list to lean on.

Thanks!

Steve




From exarkun at divmod.com  Thu Aug 26 19:34:13 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 26 Aug 2004 21:34:13 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <4a0aa96304082520065d1dedf1@mail.gmail.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
Message-ID: <412E8F95.80008@divmod.com>

Michael Trosen wrote:
> Hi Everyone,
> 
> I'm new to using the twisted framework, so excuse me if this is a
> basic question..
> 
> When I run the sshsimpleclient.py example, to an external site,
> everything works fine (I just change the code to use my username and
> server information.)
> 
> However, if I try to ssh to my localhost, it prints out the host key
> fingerprint, and then hangs.. never prompting for the password.
> 
> Is there something different about trying to connect to localhost (I
> changed the code slightly, to take a command line parameter for the
> username/host..:
> if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
> if I use:  python sshsimpleclient.py root at localhost    it hangs.
> 
> I am running Suse 9.1 Professional, and I can ssh to the host just
> using the regular openssh ssh exe.
> 
> Thanks!  And awesome job on Twisted!

   The conch client in Twisted 1.3 had a problem connecting to servers 
without a key (or something like that).  This has been fixed in SVN 
HEAD.  Perhaps it is the cause of the problem?

   Jp



From michaeltrosen at gmail.com  Thu Aug 26 20:24:45 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Thu, 26 Aug 2004 22:24:45 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <412E8F95.80008@divmod.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com>
Message-ID: <4a0aa9630408261924352d1afc@mail.gmail.com>

Jp,
thanks for the info.  I  svn'd the latest stuff from the repository,
built it and installed it, but now get an error if I try my localhost.
 The only thing I changed in the example program sshsimpleclient.py is
I changed the USER var to be root, and the HOST variable to be
localhost..

Thanks for the help!
Michael

Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 31, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/default.py",
line 526, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py",
line 244, in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/transport.py",
line 189, in dataReceived
    ord(packet[0]), packet[1:])
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
53, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
40, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 31, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/service.py",
line 42, in packetReceived
    f(packet)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/userauth.py",
line 287, in ssh_USERAUTH_PK_OK
    d = self.getGenericAnswers(name, instruction, prompts)
  File "/usr/lib/python2.3/site-packages/twisted/conch/ssh/userauth.py",
line 407, in getGenericAnswers
    raise NotImplementedError
exceptions.NotImplementedError: 

On Thu, 26 Aug 2004 21:34:13 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> 
> 
> Michael Trosen wrote:
> > Hi Everyone,
> >
> > I'm new to using the twisted framework, so excuse me if this is a
> > basic question..
> >
> > When I run the sshsimpleclient.py example, to an external site,
> > everything works fine (I just change the code to use my username and
> > server information.)
> >
> > However, if I try to ssh to my localhost, it prints out the host key
> > fingerprint, and then hangs.. never prompting for the password.
> >
> > Is there something different about trying to connect to localhost (I
> > changed the code slightly, to take a command line parameter for the
> > username/host..:
> > if I use:  python sshsimpleclient.py myuser at echoes.dhs.org  it works perfectly
> > if I use:  python sshsimpleclient.py root at localhost    it hangs.
> >
> > I am running Suse 9.1 Professional, and I can ssh to the host just
> > using the regular openssh ssh exe.
> >
> > Thanks!  And awesome job on Twisted!
> 
>    The conch client in Twisted 1.3 had a problem connecting to servers
> without a key (or something like that).  This has been fixed in SVN
> HEAD.  Perhaps it is the cause of the problem?
> 
>    Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mailinglist at ltsai.com  Fri Aug 27 02:34:55 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Fri, 27 Aug 2004 16:34:55 +0800
Subject: [Twisted-Python] Binary files in Twisted
Message-ID: <cgmrni$jan$1@sea.gmane.org>

Dear all,

What are the following libraries that is build when I install Twisted?

./protocols/_c_urlarg.so
./runner/portmap.so
./spread/cBanana.so

Liming




From foom at fuhm.net  Fri Aug 27 07:33:54 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 27 Aug 2004 09:33:54 -0400
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <cgmrni$jan$1@sea.gmane.org>
References: <cgmrni$jan$1@sea.gmane.org>
Message-ID: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>

On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> What are the following libraries that is build when I install Twisted?
>
> ./protocols/_c_urlarg.so

Optional url parsing speedup code -- this has a memory leak in 1.3.0 
and previous, so you probably don't want to use it in those versions. 
Removing will cause the slower python code to be used instead. (I don't 
know how much this helps, it might be a premature optimization anyhow).

> ./runner/portmap.so

Required to interface with the RPC portmap daemon to register new RPC 
programs. But you more than likely don't want or need this 
functionality.

> ./spread/cBanana.so

Also an optional C speedup module, this time for the banana protocol. 
Looks like the code that uses this module is commented out.

So basically, you can remove all the binaries without worrying. :)

James




From mailinglist at ltsai.com  Fri Aug 27 08:45:16 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Fri, 27 Aug 2004 22:45:16 +0800
Subject: [Twisted-Python] Re: Binary files in Twisted
In-Reply-To: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
Message-ID: <cgnhes$cpo$1@sea.gmane.org>

James Y Knight wrote:

> On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> 
>> What are the following libraries that is build when I install Twisted?
>>
>> ./protocols/_c_urlarg.so
> 
> 
> Optional url parsing speedup code -- this has a memory leak in 1.3.0 and 
> previous, so you probably don't want to use it in those versions. 
> Removing will cause the slower python code to be used instead. (I don't 
> know how much this helps, it might be a premature optimization anyhow).
> 
>> ./runner/portmap.so
> 
> 
> Required to interface with the RPC portmap daemon to register new RPC 
> programs. But you more than likely don't want or need this functionality.
> 
>> ./spread/cBanana.so
> 
> 
> Also an optional C speedup module, this time for the banana protocol. 
> Looks like the code that uses this module is commented out.
> 
> So basically, you can remove all the binaries without worrying. :)
> 
> James

So I'm guessing I can just remove all the binaries and Twisted will work 
  as normal?

Thanks,
Liming




From andrew-twisted at puzzling.org  Fri Aug 27 10:39:56 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 28 Aug 2004 02:39:56 +1000
Subject: [Twisted-Python] Re: Binary files in Twisted
In-Reply-To: <cgnhes$cpo$1@sea.gmane.org>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
	<cgnhes$cpo$1@sea.gmane.org>
Message-ID: <20040827163956.GA8408@frobozz>

On Fri, Aug 27, 2004 at 10:45:16PM +0800, Tsai Li Ming wrote:
[...]
> 
> So I'm guessing I can just remove all the binaries and Twisted will work 
>  as normal?

Yep.  Two of them are strictly optional (they only exist as optimisations),
and the other is only used by twisted.runner.inetd afaik, which almost
no-one uses.

-Andrew.




From z3p at twistedmatrix.com  Fri Aug 27 15:52:18 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Fri, 27 Aug 2004 17:52:18 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <4a0aa9630408261924352d1afc@mail.gmail.com>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com> <4a0aa9630408261924352d1afc@mail.gmail.com>
Message-ID: <1093643538.9365.0.camel@petra>

On Thu, 2004-08-26 at 22:24 -0400, Michael Trosen wrote:
> Jp,
> thanks for the info.  I  svn'd the latest stuff from the repository,
> built it and installed it, but now get an error if I try my localhost.
>  The only thing I changed in the example program sshsimpleclient.py is
> I changed the USER var to be root, and the HOST variable to be
> localhost..

That error was caused by the example not having support for keyboard-
interactive (usually attached to PAM) authentication.  The example in
r11475 has support for it.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040827/8e108a19/attachment.sig>

From michaeltrosen at gmail.com  Fri Aug 27 19:21:33 2004
From: michaeltrosen at gmail.com (Michael Trosen)
Date: Fri, 27 Aug 2004 21:21:33 -0400
Subject: [Twisted-Python] sshsimpleclient.py example
In-Reply-To: <1093643538.9365.0.camel@petra>
References: <4a0aa96304082520065d1dedf1@mail.gmail.com>
	<412E8F95.80008@divmod.com> <4a0aa9630408261924352d1afc@mail.gmail.com>
	<1093643538.9365.0.camel@petra>
Message-ID: <4a0aa96304082718211ab3075f@mail.gmail.com>

Paul,

awesome, I just checked out the latest version from svn, r11477, and
now the example works perfectly..

Thanks for all the help!

Michael

On Fri, 27 Aug 2004 17:52:18 -0400, Paul Swartz <z3p at twistedmatrix.com> wrote:
> On Thu, 2004-08-26 at 22:24 -0400, Michael Trosen wrote:
> > Jp,
> > thanks for the info.  I  svn'd the latest stuff from the repository,
> > built it and installed it, but now get an error if I try my localhost.
> >  The only thing I changed in the example program sshsimpleclient.py is
> > I changed the USER var to be root, and the HOST variable to be
> > localhost..
> 
> That error was caused by the example not having support for keyboard-
> interactive (usually attached to PAM) authentication.  The example in
> r11475 has support for it.
> 
> -p
> --
>        Paul Swartz
> (o_    http://z3p.livejournal.com/
> //\    z3p at twistedmatrix.com
> V_/_   AIM: z3penguin  GPG:5CF0B1C9
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
>



From glyph at divmod.com  Fri Aug 27 20:00:34 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 27 Aug 2004 22:00:34 -0400
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
Message-ID: <1093658434.3034.1.camel@localhost>

On Fri, 2004-08-27 at 09:33 -0400, James Y Knight wrote:
> On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> > What are the following libraries that is build when I install Twisted?
> >
> > ./protocols/_c_urlarg.so
> 
> Optional url parsing speedup code -- this has a memory leak in 1.3.0 
> and previous, so you probably don't want to use it in those versions. 
> Removing will cause the slower python code to be used instead. (I don't 
> know how much this helps, it might be a premature optimization anyhow).

I believe this was implemented after profiling of the HTTP parser
revealed that urlarg parsing was the slowest part.  So, for some it
might be "unnecessary" but I don't believe it's "premature" :)




From dave at krondo.com  Fri Aug 27 20:36:15 2004
From: dave at krondo.com (Dave Peticolas)
Date: Fri, 27 Aug 2004 19:36:15 -0700
Subject: [Twisted-Python] Binary files in Twisted
In-Reply-To: <1093658434.3034.1.camel@localhost>
References: <cgmrni$jan$1@sea.gmane.org>
	<BD73DE05-F82D-11D8-994E-000A95A50FB2@fuhm.net>
	<1093658434.3034.1.camel@localhost>
Message-ID: <1093660575.6593.86.camel@oneiros>

On Fri, 2004-08-27 at 19:00, Glyph Lefkowitz wrote:
> On Fri, 2004-08-27 at 09:33 -0400, James Y Knight wrote:
> > On Aug 27, 2004, at 4:34 AM, Tsai Li Ming wrote:
> > > What are the following libraries that is build when I install Twisted?
> > >
> > > ./protocols/_c_urlarg.so
> > 
> > Optional url parsing speedup code -- this has a memory leak in 1.3.0 
> > and previous, so you probably don't want to use it in those versions. 
> > Removing will cause the slower python code to be used instead. (I don't 
> > know how much this helps, it might be a premature optimization anyhow).
> 
> I believe this was implemented after profiling of the HTTP parser
> revealed that urlarg parsing was the slowest part.  So, for some it
> might be "unnecessary" but I don't believe it's "premature" :)

I'm using 1.3.0 and see the mem leak. I was planning
on applying the patch to _c_urlarg.c so I still get
the speedup.

dave





From general at eepatents.com  Mon Aug 30 10:05:05 2004
From: general at eepatents.com (Ed Suominen)
Date: Mon, 30 Aug 2004 09:05:05 -0700
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
Message-ID: <200408300905.05773.general@eepatents.com>

I think the single biggest contribution anyone could make to Twisted would be 
to help document it. It is a brilliantly written but really opaque bunch of 
code. I think someone who understands what's going on and knows how to write 
English (not necessarily a programmer) should be given SVN write access for 
the sole purpose of adding informative docstrings throughout the source.

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com


> From: angryhicKclown at netscape.net
> I was looking over the page on twistedmatrix.com on contributing, and it
> referred me to here. Over at the mono project, they have a todo-list sort
> of thing, that idle hackers such as myself can work on. I was wondering
> what the best way (besides monetary...I am a poor student) to contribute to
> the Twisted project is?
>
> Thanks,
>
> Peter Hunt



From exarkun at divmod.com  Mon Aug 30 10:54:44 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 30 Aug 2004 12:54:44 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <200408300905.05773.general@eepatents.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com>
Message-ID: <41335BD4.50609@divmod.com>

Ed Suominen wrote:
>
> [snip - give someone svn access to contribute documentation]
> 

   There is already such a person.  She does a great job.

   I think Twisted's documentation (which is not perfect, but is quite 
good, despite occassional comments to the contrary) would benefit 
greatly if the user community contributed improvements to the existing 
documentation.  I'm not talking about any huge task here.  If you find a 
paragraph that is confusingly worded, or a function that is 
undocumented, and you subsequently figure out how things work, rewrite 
that paragraph or come up with a doc string and send it to us:

     http://twistedmatrix.com/bugs/

   Jp



From glyph at divmod.com  Mon Aug 30 12:29:22 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 30 Aug 2004 14:29:22 -0400
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <41335BD4.50609@divmod.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com> <41335BD4.50609@divmod.com>
Message-ID: <1093890562.3236.18.camel@localhost>

On Mon, 2004-08-30 at 12:54 -0400, Jp Calderone wrote:

>    I think Twisted's documentation (which is not perfect, but is quite 
> good, despite occassional comments to the contrary) would benefit 
> greatly if the user community contributed improvements to the existing 
> documentation.  I'm not talking about any huge task here.  If you find a 
> paragraph that is confusingly worded, or a function that is 
> undocumented, and you subsequently figure out how things work, rewrite 
> that paragraph or come up with a doc string and send it to us:

It occurs to me that members of the community periodically write
snippets of documentation, then host them elsewhere.  Perhaps some of
you who have done that could talk to Mary and integrate these efforts
with the official documentation?




From james at delx.cjb.net  Mon Aug 30 15:45:30 2004
From: james at delx.cjb.net (James Bunton)
Date: Tue, 31 Aug 2004 07:45:30 +1000
Subject: [Twisted-Python] xmlstream, parser bug & utf16 support
Message-ID: <200408310745.30140.james@delx.cjb.net>

Hi all. I've started using the Jabber support in Twisted for building PyMSNt 
(a python MSN transport).

I seem to have found a bug in the XML parser. Firstly, it seems to raise an 
exception whenever an incoming packet has an attribute xml:lang="en"
For example..
<iq to="someaddr" type="get" xml:lang="en"/> will cause the parser to raise an 
exception.

Traceback (most recent call last):
   File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
526, in doSelect
     _logrun(selectable, _drdw, selectable, method, dict)
   File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 65, in 
callWithLogger
     callWithContext({"system": lp}, func, *args, **kw)
   File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line 52, in 
callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File "/usr/lib/python2.3/site-packages/twisted/python/context.py", line 43, 
in callWithContext
     return func(*args,**kw)
--- <exception caught here> ---
   File "/usr/lib/python2.3/site-packages/twisted/internet/default.py", line 
535, in _doReadOrWrite
     why = getattr(selectable, method)()
   File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line 255, 
in doRead
     return self.protocol.dataReceived(data)
   File 
"/usr/lib/python2.3/site-packages/twisted/protocols/xmlstream.py", line 158, 
in dataReceived
     self.stream.parse(buf)
   File "/usr/lib/python2.3/site-packages/twisted/xish/domish.py", line 593, 
in parse
     self.parser.Parse(buffer)
   File "/usr/lib/python2.3/site-packages/twisted/xish/domish.py", line 602, 
in _onStartElement
     attrs[k.split(" ")] = v


Any help on fixing this would be appreciated.


Also, does anybody have any clues on how to send utf16 characters in the 
xmlstream? I can't seem to work it out.

Thanks in advance..

---

James



From Phil.Hunt at tech.mrc.ac.uk  Tue Aug 31 03:18:44 2004
From: Phil.Hunt at tech.mrc.ac.uk (Phil Hunt)
Date: Tue, 31 Aug 2004 10:18:44 +0100
Subject: [Twisted-Python] Re: Contributing?
In-Reply-To: <41335BD4.50609@divmod.com>
References: <E1BzJ6y-00069Y-02@pyramid.twistedmatrix.com>
	<200408300905.05773.general@eepatents.com>
	<41335BD4.50609@divmod.com>
Message-ID: <200408311018.45482.Phil.Hunt@tech.mrc.ac.uk>

On Monday 30 August 2004 17:54, Jp Calderone wrote:
> Ed Suominen wrote:
> > [snip - give someone svn access to contribute documentation]
>
>    There is already such a person.  She does a great job.
>
>    I think Twisted's documentation (which is not perfect, but is quite
> good, despite occassional comments to the contrary) would benefit
> greatly if the user community contributed improvements to the existing
> documentation.

Perhaps that would be facilitated if the documentation was on a Wiki.

-- 
Phil Hunt



From mailinglist at ltsai.com  Tue Aug 31 19:19:08 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 01 Sep 2004 09:19:08 +0800
Subject: [Twisted-Python] Resource Tree
Message-ID: <ch382f$52h$1@sea.gmane.org>

Hi

For example, as given in the howto to handle url path segment:
root = Hello()
root.putChild('fred', Hello())
root.putChild('bob', Hello())

Therefore, the following URLs are valid:
http://example.com/
http://example.com/fred
http://example.com/bob
http://example.com/fred/
http://example.com/bob/

How do I handle non-existent url like http://example.com/foo?

Liming




From jason.mobarak at gmail.com  Tue Aug 31 20:52:38 2004
From: jason.mobarak at gmail.com (Jason Mobarak)
Date: Tue, 31 Aug 2004 20:52:38 -0600
Subject: [Twisted-Python] Resource Tree
In-Reply-To: <ch382f$52h$1@sea.gmane.org>
References: <ch382f$52h$1@sea.gmane.org>
Message-ID: <b194c919040831195219592f91@mail.gmail.com>

Afaik locateChild and getDynamicChild are intended for this.

Also:

class SomePage (Page):
  child_foo (self, context):
    return someFooResource
  child_bar (self, context):
    return someBarResource

On Wed, 01 Sep 2004 09:19:08 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Hi
> 
> For example, as given in the howto to handle url path segment:
> root = Hello()
> root.putChild('fred', Hello())
> root.putChild('bob', Hello())
> 
> Therefore, the following URLs are valid:
> http://example.com/
> http://example.com/fred
> http://example.com/bob
> http://example.com/fred/
> http://example.com/bob/
> 
> How do I handle non-existent url like http://example.com/foo?
> 
> Liming
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Jason



From mary-twisted at puzzling.org  Tue Aug 31 20:54:14 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 1 Sep 2004 02:54:14 +0000
Subject: [Twisted-Python] Resource Tree
In-Reply-To: <ch382f$52h$1@sea.gmane.org>
References: <ch382f$52h$1@sea.gmane.org>
Message-ID: <20040901025414.GI1442@fuchsia.puzzling.org>

On Wed, Sep 01, 2004, Tsai Li Ming wrote:
> How do I handle non-existent url like http://example.com/foo?

You want to ask web questions on
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

-Mary



