From garyjefferson123 at gmail.com  Fri Feb  2 00:43:48 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Thu, 1 Feb 2007 22:43:48 -0700
Subject: [Twisted-Python] testing for error conditions
Message-ID: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>

I've got a little test program that checks to make sure my protocol
behaves correctly.  Each function returns a deferred, and sets the
next function as the callback, and some common function as errback.
This seems to work great -- the test runs through all the test funcs
when working properly, and halts at the problem point if not.

But now I want to verify that I get errors (errbacks) in all the
places I should.  I was hoping to do the same thing as before, only
now swap the function of the errbacks with that of the callbacks.

This doesn't seem to work.  Returning a deferred from an errback still
results in its parent errbacks getting called, terminating the test
program prematurely.

Whats the right way to test conditions that should trigger errbacks?
I couldn't see a tutorial or doc that covered this.

Thanks,
Gary



From jml at mumak.net  Fri Feb  2 01:01:31 2007
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 2 Feb 2007 17:01:31 +1100
Subject: [Twisted-Python] testing for error conditions
In-Reply-To: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>
References: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>
Message-ID: <d06a5cd30702012201ja5766c3w2a6fe3cff73975c3@mail.gmail.com>

On 2/2/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
> I've got a little test program that checks to make sure my protocol
> behaves correctly.  Each function returns a deferred, and sets the
> next function as the callback, and some common function as errback.
> This seems to work great -- the test runs through all the test funcs
> when working properly, and halts at the problem point if not.
>
<snip>
> Whats the right way to test conditions that should trigger errbacks?
> I couldn't see a tutorial or doc that covered this.
>

Hey Gary,

Twisted's unit testing framework, Trial, already has a bunch of
features to make this really easy.

Make a module that contains subclasses of
twisted.trial.unittest.TestCase. The code should look something like
this:

from twisted.trial import unittest

class YourTests(unittest.TestCase):
    def setUp(self):
        self.interestingProtocol = InterestingProtocol()

    def test_successPath(self):
        d = self.interestingProtocol.doSomethingSuccessfully()
        d.addCallback(lambda val: self.assertEqual(val, "expected"))
        return d

    def test_failurePath(self):
        d = self.interestingProtocol.causeErrback()
        return self.assertFailure(d, ExpectedError)


Notice that the two tests in this module both return Deferreds. Trial
will notice this and make sure that the tests are run in sequence.

To run the tests, simple go "trial
yourpackage.test.test_interestingprotocol" on the command line. Trial
accepts paths to files or fully-qualified Python names. If you specify
a package, it will recursively look for all modules under that package
that have names starting with 'test_'.

For more information, consult the API docs for twisted.trial.unittest
and the man page for 'trial'.

I'm sorry that there's not a better overview document for writing
tests for Twisted applications. As the Trial maintainer, it's been on
my radar for some time.

Hope this helps,
jml



From sflist at ihonk.com  Fri Feb  2 03:00:49 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 00:00:49 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
Message-ID: <1170403249.13420.16.camel@lothar>

Hi,

I'm doing a Twisted app on Windows. As part of its work it uses
spawnProcess to temporarily spawn a process to communicate with. When I
run the app from the command line in the usual fashion, spawnProcess()
goes on and does its thing quietly and nicely. I then turned the Twisted
app into a Windows Service, and now when it spawns the process, it opens
a terminal window. Any idea how to suppress that? I tried the usePTY
argument but of course that ain't supported on Windows.

Thanks!

Steve




From p.mayers at imperial.ac.uk  Fri Feb  2 04:52:36 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 02 Feb 2007 09:52:36 +0000
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <1170403249.13420.16.camel@lothar>
References: <1170403249.13420.16.camel@lothar>
Message-ID: <45C309E4.8050905@imperial.ac.uk>

Steve Freitas wrote:
> Hi,
> 
> I'm doing a Twisted app on Windows. As part of its work it uses
> spawnProcess to temporarily spawn a process to communicate with. When I
> run the app from the command line in the usual fashion, spawnProcess()
> goes on and does its thing quietly and nicely. I then turned the Twisted
> app into a Windows Service, and now when it spawns the process, it opens
> a terminal window. Any idea how to suppress that? I tried the usePTY
> argument but of course that ain't supported on Windows.

Is the sub-process another python? If so, use "pythonw.exe"



From teratorn at twistedmatrix.com  Fri Feb  2 05:38:44 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 04:38:44 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170403249.13420.16.camel@lothar>
References: <1170403249.13420.16.camel@lothar>
Message-ID: <op.tm4aiux8y3d107@office2>

On Fri, 02 Feb 2007 02:00:49 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Hi,
>
> I'm doing a Twisted app on Windows. As part of its work it uses
> spawnProcess to temporarily spawn a process to communicate with. When I
> run the app from the command line in the usual fashion, spawnProcess()
> goes on and does its thing quietly and nicely. I then turned the Twisted
> app into a Windows Service, and now when it spawns the process, it opens
> a terminal window. Any idea how to suppress that? I tried the usePTY
> argument but of course that ain't supported on Windows.
>
> Thanks!
>
> Steve

Unfortunately Twisted doesn't have any way to alter this behavior.

Processes on Windows will inherit the parent's console by default. So when  
you run from the command-line it doesn't need to create a new one.

But when run as a service I suspect that the parent process (Twisted) is  
created DETACHED, so it doesn't have a console. But when you spawn a new  
child it just uses the defaults which then gives you a console.

For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx

spawnProcess is currently slated for a redesign as per  
http://twistedmatrix.com/trac/ticket/2415

I will make sure this concern is address in some form or fashion, but in  
the mean time you will have to do some work yourself if you really need  
this feature. Let use know if you get stuck :)

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Fri Feb  2 06:25:58 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 05:25:58 -0600
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <45C309E4.8050905@imperial.ac.uk>
References: <1170403249.13420.16.camel@lothar>
	<45C309E4.8050905@imperial.ac.uk>
Message-ID: <op.tm4cpk0ky3d107@office2>

On Fri, 02 Feb 2007 03:52:36 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
wrote:

> Steve Freitas wrote:
>> Hi,
>>  I'm doing a Twisted app on Windows. As part of its work it uses
>> spawnProcess to temporarily spawn a process to communicate with. When I
>> run the app from the command line in the usual fashion, spawnProcess()
>> goes on and does its thing quietly and nicely. I then turned the Twisted
>> app into a Windows Service, and now when it spawns the process, it opens
>> a terminal window. Any idea how to suppress that? I tried the usePTY
>> argument but of course that ain't supported on Windows.
>
> Is the sub-process another python? If so, use "pythonw.exe"

If only! :)

Presumably the only reason he is using Twisted's process spawning API is  
because it connects stdin/out/err to the reactor. Otherwise you should  
just use one of Python's many options.

With pythonw, however, it doesn't create a console and this basically  
means that stdin/out/err are totally useless. Microsoft's C run-time  
connects stdout/err to buffers that go nowhere and as soon as you fill the  
buffers any further writes will fail with a Bad File Descriptor. You can't  
read from stdin at all. Great fun, huh? ;)

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Fri Feb  2 06:27:40 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 05:27:40 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4aiux8y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
Message-ID: <op.tm4cseu3y3d107@office2>

On Fri, 02 Feb 2007 04:38:44 -0600, Eric Mangold  
<teratorn at twistedmatrix.com> wrote:

> On Fri, 02 Feb 2007 02:00:49 -0600, Steve Freitas <sflist at ihonk.com>  
> wrote:
>
>> Hi,
>>
>> I'm doing a Twisted app on Windows. As part of its work it uses
>> spawnProcess to temporarily spawn a process to communicate with. When I
>> run the app from the command line in the usual fashion, spawnProcess()
>> goes on and does its thing quietly and nicely. I then turned the Twisted
>> app into a Windows Service, and now when it spawns the process, it opens
>> a terminal window. Any idea how to suppress that? I tried the usePTY
>> argument but of course that ain't supported on Windows.
>>
>> Thanks!
>>
>> Steve
>
> Unfortunately Twisted doesn't have any way to alter this behavior.
>
> Processes on Windows will inherit the parent's console by default. So  
> when you run from the command-line it doesn't need to create a new one.
>
> But when run as a service I suspect that the parent process (Twisted) is  
> created DETACHED, so it doesn't have a console. But when you spawn a new  
> child it just uses the defaults which then gives you a console.
>
> For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
> documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx
>
> spawnProcess is currently slated for a redesign as per  
> http://twistedmatrix.com/trac/ticket/2415
>
> I will make sure this concern is address in some form or fashion, but in  
> the mean time you will have to do some work yourself if you really need  
> this feature. Let use know if you get stuck :)

Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100% sure  
w/o running some tests.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Fri Feb  2 12:05:40 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 09:05:40 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4cseu3y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2>
Message-ID: <1170435940.13420.38.camel@lothar>

Thanks for the very informative replies, Eric.

On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
> > Processes on Windows will inherit the parent's console by default. So  
>> when you run from the command-line it doesn't need to create a new
>> one.

>Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100%
>sure w/o running some tests.

Okay... So I've got to somehow figure out how to launch the parent
Twisted instance with CREATE_NO_WINDOW (or DETACHED_PROCESS, or
whatever), then?

I'm using Hammond's pythonservice.exe, which was a side effect of using
this approach to installing and running the Windows service:

http://twistedmatrix.com/pipermail/twisted-python/2006-August/013790.html

Also, I have access to the source code of the process I'm launching --
if I can't figure out how to solve this from the Twisted side, might I
be able to resolve it by modifying the process I'm launching?

Steve




From sflist at ihonk.com  Fri Feb  2 12:09:38 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 09:09:38 -0800
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <op.tm4cpk0ky3d107@office2>
References: <1170403249.13420.16.camel@lothar>
	<45C309E4.8050905@imperial.ac.uk>  <op.tm4cpk0ky3d107@office2>
Message-ID: <1170436178.13420.45.camel@lothar>

On Fri, 2007-02-02 at 05:25 -0600, Eric Mangold wrote:
> On Fri, 02 Feb 2007 03:52:36 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
> wrote:
> > Is the sub-process another python? If so, use "pythonw.exe"
> 
> If only! :)
> 
> Presumably the only reason he is using Twisted's process spawning API is  
> because it connects stdin/out/err to the reactor. Otherwise you should  
> just use one of Python's many options.

Actually, Phil may be on to something here. :-) Though it would be nice
for logging purposes, I actually don't need access to to the process's
stdin/out/err. Since I'm communicating with it via sockets, I just need
to launch the process, and then later I need a way to forcibly kill it,
if need be.

Steve




From teratorn at twistedmatrix.com  Fri Feb  2 20:07:44 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 19:07:44 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170435940.13420.38.camel@lothar>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
Message-ID: <op.tm5eq6dly3d107@office2>

On Fri, 02 Feb 2007 11:05:40 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Thanks for the very informative replies, Eric.
>
> On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
>> > Processes on Windows will inherit the parent's console by default. So
>>> when you run from the command-line it doesn't need to create a new
>>> one.
>
>> Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100%
>> sure w/o running some tests.
>
> Okay... So I've got to somehow figure out how to launch the parent
> Twisted instance with CREATE_NO_WINDOW (or DETACHED_PROCESS, or
> whatever), then?

Well, no. Since you aren't seeing a console window I assume that  
pythonservice.exe is already doing that for you. Your challenge is to  
launch the child process in the same fashion.

> I'm using Hammond's pythonservice.exe, which was a side effect of using
> this approach to installing and running the Windows service:
>
> http://twistedmatrix.com/pipermail/twisted-python/2006-August/013790.html
>
> Also, I have access to the source code of the process I'm launching --
> if I can't figure out how to solve this from the Twisted side, might I
> be able to resolve it by modifying the process I'm launching?
>
> Steve

It's better to control the parent process. You can easily use  
CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
to kill it. All these functions are in pywin32 which you already have if  
you're using spawnProcess.

You *can*, however, close the console after it's created. Just call  
FreeConsole(). This will have the effect of flashing a console window on  
the screen for a split second. Depending on how you run your service it  
may not have access to the desktop, and I'm not sure if this will cause  
problems with launching processes that try to create console windows.

Alternatively, since this is python, and you don't care about I/O, you can  
use pythonw.exe instead.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Fri Feb  2 20:57:46 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 17:57:46 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm5eq6dly3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
	<op.tm5eq6dly3d107@office2>
Message-ID: <1170467866.15176.16.camel@lothar>

On Fri, 2007-02-02 at 19:07 -0600, Eric Mangold wrote:
> It's better to control the parent process. You can easily use  
> CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
> to kill it. All these functions are in pywin32 which you already have if  
> you're using spawnProcess.
> 
> You *can*, however, close the console after it's created. Just call  
> FreeConsole(). This will have the effect of flashing a console window on  
> the screen for a split second. Depending on how you run your service it  
> may not have access to the desktop, and I'm not sure if this will cause  
> problems with launching processes that try to create console windows.
> 
> Alternatively, since this is python, and you don't care about I/O, you can  
> use pythonw.exe instead.

Thanks! It did. I'm not launching a Python process, but I mistakenly
assumed that Python's built in process launching functions were
blocking, so I didn't bother looking any further when I had
spawnProcess() staring at me.

I decided to use subprocess.Popen(shell=False), and that did it.
However, I've just determined that I need access to stderr after all --
apparently I need to be apprised of errors from stderr during the
process's execution -- so I'm hoping I can figure out a way to do that
within what I'm using now. Time to get some experience creating
file-like objects, I suppose.

Steve




From teratorn at twistedmatrix.com  Fri Feb  2 21:08:36 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 20:08:36 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm5eq6dly3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
	<op.tm5eq6dly3d107@office2>
Message-ID: <op.tm5hkmk8y3d107@office2>

On Fri, 02 Feb 2007 19:07:44 -0600, Eric Mangold  
<teratorn at twistedmatrix.com> wrote:
[...]
> It's better to control the parent process. You can easily use  
> CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
> to kill it. All these functions are in pywin32 which you already have if  
> you're using spawnProcess.

Actually you don't need OpenProcess since CreateProcess returns the handle  
you need.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Sat Feb  3 00:13:36 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 21:13:36 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on Windows?
Message-ID: <1170479616.15176.27.camel@lothar>

I'm writing a Twisted client that uses PB. It seems to be getting stuck
intermittently -- failing to respond to the server's queries. Sometimes
it gets stuck immediately after login, sometimes after it's been running
fine for a while. I'm starting the Twisted client in a terminal window.
What unsticks it in these cases is always a single ^C. Now, sometimes
that spits up an unhandled exception from some place into the log
(stdout) and then it goes on its merry way -- other times it has no
error to report and moves on like nothing happened.

I'm frequently ctrl-C'ing this program as I try my new changes, and
sometimes it takes one to kill it, and sometimes it takes two. Hopefully
this is a clue.

I thought perhaps I had a deferred that was hanging, but in the entire
client, I'm calling addCallback() exactly once -- and it's followed by
an addErrback(), so I don't think the problem is there.

I first noticed this behavior when it was running as a Windows service,
and I thought it may have been related to the necessity of starting the
reactor with calling reactor.run(installSignalHandlers=0) (I didn't yet
see the tip about periodically passing child signals to the reactor),
but it still happens, albeit apparently less often, with a simple
reactor.run().

Any ideas would be appreciated.

Thanks,

Steve




From sflist at ihonk.com  Sat Feb  3 04:27:53 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 01:27:53 -0800
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
Message-ID: <1170494873.15176.37.camel@lothar>

>From an old thread[1]:

On Sat, 2005-06-11 at 11:35 -0400, Jp Calderone wrote:
> On Sat, 11 Jun 2005 11:08:12 -0400, Matt Feifarek <matt.feifarek at gmail.com> wrote:
> >On 6/10/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >> Register the same SIGCHLD handler twisted does in the main thread, that
> >> should work (they need to be reentrancy-safe anyway so the fact it's
> >> called from a different thread is fine). Possibly a more general
> >> solution could be devised for this, anyone have suggestions?
> >
> >Thanks.
> >
> >So this behavior is by design? Again, it DID work before; for the last
> >year or so, I've been using this code in production on a few servers.
> 
> Yep, and always has been.  If it ever worked, it was by accident (I really don't see how it could have, though, so I can't begin to guess what might have changed to stop it).
> 
> >
> >Perhaps a note could be made in the docs that ProcessProtocol doesn't
> >work in this case.
> >
> >This will make it pretty hard to integrate into other worlds. I'm not
> >sure that I can over-ride the signal handling in Webware and register
> >handlers. Other bits of python libraries might be the same way.
> >
> >I look forward to any "more general solution" that anyone can come up with!
> 
> Here's one:
> 
>   def reapChildren():
>       from twisted.internet import reactor, task
>       t = task.LoopingCall(reactor._handleSigchld, None, None)
>       return t.start(5)
> 
> Of course, it uses a non-public method of reactor (but installSignalHandlers is a non-public argument to reactor.run(), so you're already treading on thin ice :)

I'm trying to diagnose an intermittent pausing problem on Win32, and
t.i.process is unavailable on that platform, which reapChildren() relies
on. Is there no need for this approach when launching the reactor with
installSignalHandlers=0 on Windows?

Steve

[1]http://twistedmatrix.com/pipermail/twisted-python/2005-June/010692.html




From itamar at itamarst.org  Sat Feb  3 09:18:20 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 03 Feb 2007 09:18:20 -0500
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <1170494873.15176.37.camel@lothar>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
	<1170494873.15176.37.camel@lothar>
Message-ID: <1170512300.8589.41.camel@localhost.localdomain>

On Sat, 2007-02-03 at 01:27 -0800, Steve Freitas wrote:

> I'm trying to diagnose an intermittent pausing problem on Win32, and
> t.i.process is unavailable on that platform, which reapChildren() relies
> on. Is there no need for this approach when launching the reactor with
> installSignalHandlers=0 on Windows?

No, SIGCHLD is a Unix thing.




From teratorn at twistedmatrix.com  Sat Feb  3 10:10:14 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 03 Feb 2007 09:10:14 -0600
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170479616.15176.27.camel@lothar>
References: <1170479616.15176.27.camel@lothar>
Message-ID: <op.tm6hrctsy3d107@office2>

On Fri, 02 Feb 2007 23:13:36 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> I'm writing a Twisted client that uses PB. It seems to be getting stuck
> intermittently -- failing to respond to the server's queries. Sometimes
> it gets stuck immediately after login, sometimes after it's been running
> fine for a while. I'm starting the Twisted client in a terminal window.
> What unsticks it in these cases is always a single ^C. Now, sometimes
> that spits up an unhandled exception from some place into the log
> (stdout) and then it goes on its merry way -- other times it has no
> error to report and moves on like nothing happened.
>
> I'm frequently ctrl-C'ing this program as I try my new changes, and
> sometimes it takes one to kill it, and sometimes it takes two. Hopefully
> this is a clue.
>
> I thought perhaps I had a deferred that was hanging, but in the entire
> client, I'm calling addCallback() exactly once -- and it's followed by
> an addErrback(), so I don't think the problem is there.
>
> I first noticed this behavior when it was running as a Windows service,
> and I thought it may have been related to the necessity of starting the
> reactor with calling reactor.run(installSignalHandlers=0) (I didn't yet
> see the tip about periodically passing child signals to the reactor),
> but it still happens, albeit apparently less often, with a simple
> reactor.run().
>
> Any ideas would be appreciated.
>
> Thanks,
>
> Steve

Well I don't really know what your problem is, but here are some things  
you can think about and see if any little lights go off in your head :)

Are you running sub-processes? If a sub-process shares the same console  
some interesting things can happen.

There isn't any way to tell which process will receive console input. See  
this page for what Microsoft has to say about it:
http://msdn2.microsoft.com/en-us/library/ms682528.aspx

In particular:

"(By default, a console process inherits its parent's console, and there  
is no guarantee that input is received by the process for which it was  
intended.)"

Indeed, you can verify this by running a parent process and a child  
process that both read bytes from stdin. You will see that the bytes are  
sent to one process or the other. In my testing it alternated back and  
forth evenly.

Other forms of console input, such as ^C, seem to go to both processes at  
the same time. At least that is what happened in my simple test.

Maybe for you it's only delivering the ^C to one of the procsses, and  
sometimes it's the right one and sometimes not?

Or maybe it's much simpler than this and you just have a bare "except:"  
that is catching and hiding the first KeyboardInterrupt?

As for why your process is hanging in the first place, who is to say?  
Maybe try running under WingIDE (or something) and break in w/ the  
debugger when things hang up. The stack trace ought to give you some clues.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sat Feb  3 13:11:31 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 3 Feb 2007 13:11:31 -0500
Subject: [Twisted-Python] thread synchronization
Message-ID: <000f01c747be$bbeda320$0400a8c0@leelaptop>

While using Twisted, do I have to worry about locking objects to prevent
multiple threads from accessing the object?  From what I?ve read Twisted
doesn?t use a thread for each socket, so I would guess I don?t have to worry
about thread locking?

 

Thanks,

 

Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.21/665 - Release Date: 2/2/2007
11:39 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070203/673e9ff8/attachment.htm 

From radix at twistedmatrix.com  Sat Feb  3 13:16:03 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 3 Feb 2007 13:16:03 -0500
Subject: [Twisted-Python] thread synchronization
In-Reply-To: <000f01c747be$bbeda320$0400a8c0@leelaptop>
References: <000f01c747be$bbeda320$0400a8c0@leelaptop>
Message-ID: <60ed19d40702031016i56c39566hef92c5b6c4433102@mail.gmail.com>

On 2/3/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> While using Twisted, do I have to worry about locking objects to prevent
> multiple threads from accessing the object?  >From what I've read Twisted
> doesn't use a thread for each socket, so I would guess I don't have to worry
> about thread locking?

Indeed. Unless you are creating and using threads *yourself*, you
don't need to worry about this manner of locking.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Sat Feb  3 13:19:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 Feb 2007 13:19:22 -0500
Subject: [Twisted-Python] thread synchronization
In-Reply-To: <000f01c747be$bbeda320$0400a8c0@leelaptop>
Message-ID: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>

On Sat, 3 Feb 2007 13:11:31 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>While using Twisted, do I have to worry about locking objects to prevent
>multiple threads from accessing the object?  From what I?ve read Twisted
>doesn?t use a thread for each socket, so I would guess I don?t have to worry
>about thread locking?
>

Correct, Twisted does not use a thread for each socket.  In general, Twisted
will always only call code you have defined in a single thread, the reactor
thread.  So in general, no explicit locking is required.

Jean-Paul



From sflist at ihonk.com  Sat Feb  3 14:33:23 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 11:33:23 -0800
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <1170512300.8589.41.camel@localhost.localdomain>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
	<1170494873.15176.37.camel@lothar>
	<1170512300.8589.41.camel@localhost.localdomain>
Message-ID: <1170531203.15176.57.camel@lothar>

On Sat, 2007-02-03 at 09:18 -0500, Itamar Shtull-Trauring wrote:
> On Sat, 2007-02-03 at 01:27 -0800, Steve Freitas wrote:
> 
> > I'm trying to diagnose an intermittent pausing problem on Win32, and
> > t.i.process is unavailable on that platform, which reapChildren() relies
> > on. Is there no need for this approach when launching the reactor with
> > installSignalHandlers=0 on Windows?
> 
> No, SIGCHLD is a Unix thing.

Ok, thanks.

Steve




From sflist at ihonk.com  Sat Feb  3 14:46:11 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 11:46:11 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <op.tm6hrctsy3d107@office2>
References: <1170479616.15176.27.camel@lothar>  <op.tm6hrctsy3d107@office2>
Message-ID: <1170531972.15176.71.camel@lothar>

Thanks for your response, gives me a bunch to think about.

On Sat, 2007-02-03 at 09:10 -0600, Eric Mangold wrote:
> As for why your process is hanging in the first place, who is to say?  
> Maybe try running under WingIDE (or something) and break in w/ the  
> debugger when things hang up. The stack trace ought to give you some clues.

Great idea, I'll give it a go.

In related news, I've decided to go back to trying to make
spawnProcess() work for me. I didn't realize it at the time, but when I
do subProcess.Popen(shell=True), although it solved my open console
window problem, it spawned my desired process as a child to a CMD.EXE
process. I didn't think that was a big deal until I figured out how hard
it is under Windows without using either the Taskkill utility (and I
need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
a child process while being absolutely certain that's the process you
want to kill. I'm going to have multiple instances of this process, so I
can't kill by name, and I don't want to kill by PID, because it could
get reused. I'd love to be corrected here if I'm wrong, by the way.

So back it is to spawnProcess(), since it gives me a ProcessProtocol I
can call transport.loseConnection() on to kill exactly what I mean to
kill. To solve the console problem, I'm going to try Igor Kravtchenko's
modified spawnProcess[1], and pass in CREATE_NO_WINDOW or
DETACHED_PROCESS to see what happens.

Steve

[1]http://twistedmatrix.com/pipermail/twisted-python/2006-August/013814.html




From sflist at ihonk.com  Sat Feb  3 15:43:59 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 12:43:59 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170531972.15176.71.camel@lothar>
References: <1170479616.15176.27.camel@lothar>  <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>
Message-ID: <1170535439.15176.75.camel@lothar>

On Sat, 2007-02-03 at 11:46 -0800, Steve Freitas wrote:
> So back it is to spawnProcess(), since it gives me a ProcessProtocol I
> can call transport.loseConnection() on to kill

Thinko, should be transport.signalProcess('KILL')...




From teratorn at twistedmatrix.com  Sat Feb  3 20:02:38 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 03 Feb 2007 19:02:38 -0600
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170531972.15176.71.camel@lothar>
References: <1170479616.15176.27.camel@lothar> <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>
Message-ID: <op.tm686otry3d107@office2>

On Sat, 03 Feb 2007 13:46:11 -0600, Steve Freitas <sflist at ihonk.com> wrote:
[...]
> In related news, I've decided to go back to trying to make
> spawnProcess() work for me. I didn't realize it at the time, but when I
> do subProcess.Popen(shell=True), although it solved my open console
> window problem, it spawned my desired process as a child to a CMD.EXE
> process. I didn't think that was a big deal until I figured out how hard
> it is under Windows without using either the Taskkill utility (and I
> need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
> a child process while being absolutely certain that's the process you
> want to kill.
>
> I'm going to have multiple instances of this process, so I
> can't kill by name, and I don't want to kill by PID, because it could
> get reused. I'd love to be corrected here if I'm wrong, by the way.

There really isn't any room for error if you just save the handle that was  
returned when you spawned the process. Just use that in a call to  
TerminateProcess().

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Sat Feb  3 22:05:53 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 19:05:53 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <op.tm686otry3d107@office2>
References: <1170479616.15176.27.camel@lothar> <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>  <op.tm686otry3d107@office2>
Message-ID: <1170558353.15176.87.camel@lothar>

On Sat, 2007-02-03 at 19:02 -0600, Eric Mangold wrote:
> On Sat, 03 Feb 2007 13:46:11 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> [...]
> > In related news, I've decided to go back to trying to make
> > spawnProcess() work for me. I didn't realize it at the time, but when I
> > do subProcess.Popen(shell=True), although it solved my open console
> > window problem, it spawned my desired process as a child to a CMD.EXE
> > process. I didn't think that was a big deal until I figured out how hard
> > it is under Windows without using either the Taskkill utility (and I
> > need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
> > a child process while being absolutely certain that's the process you
> > want to kill.
> >
> > I'm going to have multiple instances of this process, so I
> > can't kill by name, and I don't want to kill by PID, because it could
> > get reused. I'd love to be corrected here if I'm wrong, by the way.
> 
> There really isn't any room for error if you just save the handle that was  
> returned when you spawned the process. Just use that in a call to  
> TerminateProcess().

Yeah, that's another thing that drove me back to spawnProcess(). With
subprocess.Popen, I have to use shell=True to keep the terminal window
hidden, and then I don't have the handle (or even the PID obtained
directly) of the process that gets launched as a child of CMD.EXE, so
I'm stuck with a little uncertainty when I try to kill the process.

Steve




From vince6 at offshore.ai  Sat Feb  3 23:09:10 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Sun, 04 Feb 2007 00:09:10 -0400
Subject: [Twisted-Python] BananaError "longer than 64 bytes worth of prefix"
In-Reply-To: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
References: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
Message-ID: <1170562151.10246.74.camel@vinceworkstation.offshore.ai>


If I Jelly/Banana a 384 bit RSA key, all is fine.  But if I do 1024 bit
key it complains with:

  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line
138, in dataReceived
    raise BananaError("Security precaution: longer than 64 bytes worth
of prefix")
twisted.spread.banana.BananaError: Security precaution: longer than 64
bytes worth of prefix

Code to show problem is below.   It seems like banana does not believe
anyone would want numbers taking up more than 64 bytes, but for RSA keys
such numbers are common.  Should I be doing something different?  

   -- Vince


#!/usr/bin/python

from Crypto.PublicKey import RSA
from os import urandom
from twisted.spread import banana,jelly

# works for 384 bit RSA keys but not 1024
def JellyKeyTest(size):
    print "KeyTest with size=",size
    RSAkey = RSA.generate(size, urandom)   
    mykeyserial=banana.encode(jelly.jelly(RSAkey))
    RSAkey=jelly.unjelly(banana.decode(mykeyserial))  

JellyKeyTest(384)
JellyKeyTest(1024)







From vince6 at offshore.ai  Sat Feb  3 23:27:08 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Sun, 04 Feb 2007 00:27:08 -0400
Subject: [Twisted-Python] Local Twisted programming contest
In-Reply-To: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
References: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
Message-ID: <1170563229.10246.92.camel@vinceworkstation.offshore.ai>


I am doing a series of programming contests for local high-school kids.
The first one was to make a "computer guesses your animal" game that any
number of users could play by telnet.  I gave them an echo program in
Twisted and an Animal program in Python, so they just had to figure out
how to merge these two.  I got 5 kids that showed up to at least one
meeting and one kid that wrote code that worked.  These guys had never
used Python or twisted before, and not really done that much
programming.  The first 2-3 weeks seemed to be just getting started with
Python/twisted and people only seemed to write code in the last week.
Even the ones that did not finished learned some and had fun.   In case
anyone else wants to do such a thing, this was the first assignment at
http://cate.com/apprentice 

I am thinking of a digital coin clearing client/server with a bit of GUI
for the next one.  If anyone has ideas for a programming contest for
high-school kids using Twisted, please let me know.

   -- Vince






From exarkun at twistedmatrix.com  Sun Feb  4 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1170565501.89.264966806@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-28 through 2007-02-04
Bugs opened: 12    Bugs closed: 13  Total open bugs: 825 (-1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  -3          |Conch:    +0           
|Enhancement:  -6  |Normal:   -1          |Core:     -1           
|Task:         +0  |Low:      +2          |Trial:    +1           
                   |Lowest:   +1          |Web:      +1           
                                          |Web2:     +2           
                                          |Website:  -5           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2425] t.i.tcp should not use os.strerror for Windows socket error codes (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/2425

[#2426] Delete the s*** at the end of failure.py (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2426

[#2428] TestCase.setUpClass and TestCase.flushLoggedErrors conflict (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2428

[#2429] domish.Element can't easy access elements named 'name' (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2429

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2431] _dumbwin32proc leaks process handle (opened by bwh)
    defect          core       http://twistedmatrix.com/trac/ticket/2431

[#2432] twisted.python.win32 uses unreliable method to find standard directories (opened by bwh)
    defect          core       http://twistedmatrix.com/trac/ticket/2432

                    ===== Low =====
[#2427] ADBAPI delay_connect error using Sybase (opened by hoadley) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2427

[#2433] twisted.web2.stream.PostTruncaterStream.read() leaves a dangling deferred which could cause unclean reactor errors (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2433

[#2434] twisted.web2.static.FileSaver.writeFile leaves doesn't do anything with the deferred returned by stream.readIntoFile (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2434

[#2436] Improve conch's cosmetics (opened by jml)
    task            conch      http://twistedmatrix.com/trac/ticket/2436

                    ===== Lowest =====
[#2435] RSS feed news and The Twisted Show (opened by rnc000)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2435



Closed Bugs
______________________
                    ===== Highest =====
[#2421] Make sure that closing events are handled sanely with filetransfer (opened by jml, closed by z3p, fixed)
    task            conch      http://twistedmatrix.com/trac/ticket/2421

[#2405] Various tests require stderr behavior CPython cannot and will not provide (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2405

[#2404] DST calculation problem in log.py/FileLogObserver.getTimezoneOffset (opened by thor, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2404

                    ===== Normal =====
[#1689] Move the Trac configuration files into the WebSite repository (opened by tekNico, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1689

[#1791] Update FAQ links to point to non-obsolete URLs (opened by exarkun, closed by oubiwann, fixed)
    task            website    http://twistedmatrix.com/trac/ticket/1791

[#2142] Make the FAQ a wiki page (opened by jml, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2142

[#2262] Fix Header Search CSS (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2262

[#2263] Fix "logged in as..." CSS (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2263

[#2264] Fix CSS on "Reply" buttons in issue tracker (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2264

[#1072] adbapi: retrying queries on a lost connection (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1072

[#1650] t.p.socks thinks getPeer() returns a tuple (opened by PenguinOfDoom, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1650

                    ===== Low =====
[#1104] seconde in log format. (opened by stilly, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1104

[#2427] ADBAPI delay_connect error using Sybase (opened by hoadley, closed by hoadley, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2427





From exarkun at divmod.com  Sun Feb  4 14:05:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 4 Feb 2007 14:05:43 -0500
Subject: [Twisted-Python] Debian Python 2.4 Buildslave
In-Reply-To: 0
Message-ID: <20070204190543.25807.2082267118.divmod.quotient.9764@ohm>

Saturday morning, halfway through the build for r19561, the PSU for the
machine running the Debian Python 2.4 buildslave fried itself and took
much of the rest of the machine with it.  Consequently, this slave will
be offline until I can replace the machine.  Since this also happens to
be my primary Twisted development machine, I probably won't be doing
much Twisted development either until it is replaced.  In particular,
if you have assigned a branch to me for review, if you'd rather not
wait a week or two, it would probably be best if you found another
reviewer.

Jean-Paul



From sflist at ihonk.com  Mon Feb  5 04:47:21 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 01:47:21 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4cseu3y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2>
Message-ID: <1170668841.16743.37.camel@lothar>

On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
> > But when run as a service I suspect that the parent process (Twisted) is  
> > created DETACHED, so it doesn't have a console. But when you spawn a new  
> > child it just uses the defaults which then gives you a console.
> >
> > For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
> > documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx
> >
> > spawnProcess is currently slated for a redesign as per  
> > http://twistedmatrix.com/trac/ticket/2415
> >
> > I will make sure this concern is address in some form or fashion, but in  
> > the mean time you will have to do some work yourself if you really need  
> > this feature. Let use know if you get stuck :)
> 
> Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100% sure  
> w/o running some tests.

Just to follow up for posterity, I ended up solving my problem.

First I overrode t.i.posixbase.PosixReactorBase.spawnProcess() with my
own function, the method for which now looks like:

def spawnProcess(self, processProtocol, executable, args=(),
	env={}, path=None, uid=None, gid=None, usePTY=0,
	childFDs=None, win32flags=0):

And inside spawnProcess(), when it goes to create a Process object, I
changed the line to read:

if win32process:
	return Process(self, processProtocol, executable, args,
		env, path, win32flags)

Then I overrode t.i._dumbwin32proc.Process' __init__ function, adding
win32flags to the end of the method's arguments as before, so it looks
like:

def __init__(self, reactor, protocol, command, args, environment,
	path, win32flags=0):

Then, I modded its nested doCreate() function's call to be:

def doCreate():
	self.hProcess, self.hThread, dwPid, dwTid = \
	win32process.CreateProcess(command, cmdline, None, None,
		1, win32flags, env, path, StartupInfo)

And now that I'm passing win32con.DETACHED_PROCESS into my new
spawnProcess(), it works perfectly. I've got stdin/out/err, a proper way
to kill the process I spawned, and no annoying shell window opening.
Just what I wanted for Christmas.

One question: I noticed that the posix reactor is what's running on
Windows -- under what condition does win32eventreactor.Win32Reactor
actually get installed?

Thanks again for your help with this,

Steve




From sflist at ihonk.com  Mon Feb  5 06:18:05 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 03:18:05 -0800
Subject: [Twisted-Python] Log falls over due to recursion
Message-ID: <1170674285.16743.57.camel@lothar>

Submitted as evidence that I'm not as good at thinking through the
consequences of my actions as I'd like. Embarrassingly so. Enjoy.

I'd like to send log events to a log server via xmlrpc. So I created an
object with write() and flush() functions, and passed it to
t.p.log.FileLogObserver. In write(), I intended to use
t.w.xmlrpc.Proxy.callRemote() to send the log entry someplace. However,
this creates some log messages of its own as the xmlrpc._QueryFactory
starts up and shuts down. These trigger my observer, of course, which
tries to send 'em out over Proxy.callRemote() again, and pretty soon I'm
leaping out of my chair trying to dodge melted drive screws and paper
coin roll wrappers on various ballistic trajectories. (Well, they were
sitting on my computer. Never mind.)

I tried using FileLogObserver.stop() right before the xmlrpc call and
using start() after the call completes. It didn't work, but even if it
did, it would be a poor solution, since it would miss any log events
occurring during that time.

So I guess I need to somehow divert the log output of the consequences
of my particular call (Proxy.callRemote()) to another sink, all the
while leaving the rest of the logging functioning normally. Any
semi-reasonable way to do that?

Steve




From glyph at divmod.com  Mon Feb  5 13:19:56 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 05 Feb 2007 18:19:56 -0000
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
Message-ID: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>

On 09:47 am, sflist at ihonk.com wrote:

>Just to follow up for posterity, I ended up solving my problem.

A diff might be more interesting for posterity than a narrative about how the code was changed :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070205/c673153e/attachment.htm 

From teratorn at twistedmatrix.com  Mon Feb  5 14:59:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 05 Feb 2007 13:59:24 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170668841.16743.37.camel@lothar>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170668841.16743.37.camel@lothar>
Message-ID: <op.tnakharfy3d107@office2>

On Mon, 05 Feb 2007 03:47:21 -0600, Steve Freitas <sflist at ihonk.com> wrote:
[...]
> One question: I noticed that the posix reactor is what's running on
> Windows -- under what condition does win32eventreactor.Win32Reactor
> actually get installed?
>
> Thanks again for your help with this,
>
> Steve

You must install the win32 event reactor yourself or use twistd -r win32.  
Note that the win32 reactor isn't as well supported as the default  
'select' reactor.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Mon Feb  5 20:21:15 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 17:21:15 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>
References: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>
Message-ID: <1170724875.16743.81.camel@lothar>

On Mon, 2007-02-05 at 18:19 +0000, glyph at divmod.com wrote:
> On 09:47 am, sflist at ihonk.com wrote:
> 
> >Just to follow up for posterity, I ended up solving my problem.
> 
> A diff might be more interesting for posterity than a narrative about
> how the code was changed :)

You didn't like the buildup? The character arc? The crescendo?!?!? And
then the gentle fall back to our earthly vulnerabilities at the end?

Pfft.

I didn't patch it because I didn't want the maintenance headaches, so I
threw together the attached file instead, copying and pasting from the
original places, all possibly gratuitous imports included. If anyone
wants to use it, import it and call upgradeSpawnProcess(). It worked
nicely when I wanted to use DETACHED_PROCESS and CREATE_NO_WINDOW. No
idea what happens with anything else.

Steve
-------------- next part --------------
A non-text attachment was scrubbed...
Name: newSpawnProcess.py
Type: text/x-python
Size: 8356 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070205/52271842/attachment.py 

From abierbaum at gmail.com  Tue Feb  6 12:03:49 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 11:03:49 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
Message-ID: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>

Has anyone tried/succeded at using twisted.trial with the nose unittest system?

The twisted.trial system works well for pure twisted testing but I
would like to get some of the advaned capabilities of nose in there as
well.  Any advice would be greatly appreciated.

Thanks,
Allen



From jml at mumak.net  Tue Feb  6 17:06:36 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 7 Feb 2007 09:06:36 +1100
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
Message-ID: <d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>

On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> Has anyone tried/succeded at using twisted.trial with the nose unittest system?
>
> The twisted.trial system works well for pure twisted testing but I
> would like to get some of the advaned capabilities of nose in there as
> well.  Any advice would be greatly appreciated.
>

Hey Allen,

I haven't used (or even heard of) nose before. What features from nose
do you want to use with Trial?

As for getting them to work together, Trial tries very hard to be
compatible with the standard library's unittest module, so if nose
understands that, it ought to understand Trial tests.[1]

cheers,
jml

[1] There are a couple of known instances where they won't work.
Hopefully they are listed on the bug tracker.



From abierbaum at gmail.com  Tue Feb  6 18:47:48 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 17:47:48 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
Message-ID: <bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>

On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > Has anyone tried/succeded at using twisted.trial with the nose unittest system?
> >
> > The twisted.trial system works well for pure twisted testing but I
> > would like to get some of the advaned capabilities of nose in there as
> > well.  Any advice would be greatly appreciated.
> >
>
> Hey Allen,
>
> I haven't used (or even heard of) nose before. What features from nose
> do you want to use with Trial?

Nose seems like of like the standard python unittesting framework on
steroids.  It has a great deal of nice features.  You can take a look
here: http://somethingaboutorange.com/mrl/projects/nose/

> As for getting them to work together, Trial tries very hard to be
> compatible with the standard library's unittest module, so if nose
> understands that, it ought to understand Trial tests.[1]

I spent some more time investigating this today and found that someone
has written a plugin for nose that allows it to test twisted code.  I
don't think it looks as nice as trial, but it should work for the
basics.    You can see it here:
http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py

If I run into some serious issues I will try my best to extend this
plugin to support additional capabilities from trial.

Thanks,
Allen

>
> cheers,
> jml
>
> [1] There are a couple of known instances where they won't work.
> Hopefully they are listed on the bug tracker.
>



From radix at twistedmatrix.com  Tue Feb  6 19:00:05 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Feb 2007 19:00:05 -0500
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
Message-ID: <60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>

On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> someone
> has written a plugin for nose that allows it to test twisted code.  I
> don't think it looks as nice as trial, but it should work for the
> basics.    You can see it here:
> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py

UGH

def threaded_reactor():

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From abierbaum at gmail.com  Tue Feb  6 19:05:36 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 18:05:36 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
Message-ID: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>

On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > someone
> > has written a plugin for nose that allows it to test twisted code.  I
> > don't think it looks as nice as trial, but it should work for the
> > basics.    You can see it here:
> > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>
> UGH
>
> def threaded_reactor():

Yep.  Not pretty by any means. :(

I am sure that any suggestions you have to make it better would be
well-recieved by the nose project and the plugin's author.   :)

-Allen
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jml at mumak.net  Tue Feb  6 19:38:26 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 7 Feb 2007 11:38:26 +1100
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
Message-ID: <d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>

On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > someone
> > > has written a plugin for nose that allows it to test twisted code.  I
> > > don't think it looks as nice as trial, but it should work for the
> > > basics.    You can see it here:
> > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> >
> > UGH
> >
> > def threaded_reactor():
>
> Yep.  Not pretty by any means. :(
>
> I am sure that any suggestions you have to make it better would be
> well-recieved by the nose project and the plugin's author.   :)
>

I still need to spend some more time looking at nose, but in this
particular case I think the plugin is unnecessary.

If your tests subclass twisted.trial.unittest.TestCase, then they
should take care of the reactor themselves.[1]

cheers,
jml

[1] For the moment. There are plans to change this, but they are many,
many months away from implementation.



From exarkun at divmod.com  Tue Feb  6 20:49:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Feb 2007 20:49:50 -0500
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
Message-ID: <20070207014950.25807.1089686106.divmod.quotient.12461@ohm>

On Tue, 6 Feb 2007 18:05:36 -0600, Allen Bierbaum <abierbaum at gmail.com> wrote:
>On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>>On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
>> > someone
>> > has written a plugin for nose that allows it to test twisted code.  I
>> > don't think it looks as nice as trial, but it should work for the
>> > basics.    You can see it here:
>> > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>>
>>UGH
>>
>>def threaded_reactor():
>
>Yep.  Not pretty by any means. :(
>
>I am sure that any suggestions you have to make it better would be
>well-recieved by the nose project and the plugin's author.   :)
>

You never mentioned why nose interested you.  What's the attraction?

Jean-Paul



From waterbug at pangalactic.us  Tue Feb  6 21:19:29 2007
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 06 Feb 2007 21:19:29 -0500
Subject: [Twisted-Python] db-based checker
Message-ID: <45C93731.5030400@pangalactic.us>

Here's my checker I mentioned on irc just now, 'UserDbCredChecker',
which I've added to the web2 auth example ... as you can see,
it's pretty trivial, and it works with my twisted.web-based app,
so I'm puzzled why it doesn't work with the web2 auth example I've
added it to.

Sorry this isn't a runnable example, but just wanted to see if
there was anything obvious by inspection before I go and create
a runnable example -- which I'll do if necessary.

Thanks for any suggestions.

Steve

-------------- next part --------------
A non-text attachment was scrubbed...
Name: credsetup.py
Type: text/x-python
Size: 1722 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070206/1228ddb2/attachment.py 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: httpauth.tac
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070206/1228ddb2/attachment.txt 

From pmarks at purdue.edu  Tue Feb  6 23:27:23 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 6 Feb 2007 23:27:23 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
Message-ID: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>

I wrote this program that uses Twisted with a bunch of UDP
communication, and a friend of mine got this exception while running
it on Cygwin:

Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
48, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
33, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py",
line 139, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.4/site-packages/twisted/internet/udp.py",
line 114, in doRead
    data, addr = self.socket.recvfrom(self.maxPacketSize)
socket.error: (104, 'Connection reset by peer')


My interpretation is that windows (and therefore Cygwin) can throw a
Connection Reset By Peer error when receiving UDP packets, and Twisted
only checks for the error on win32, but not on Cygwin, because Cygwin
is identified as posix.

Anyway, here's a patch I wrote that fixes the problem by checking for
ECONNRESET on every platform, although I'm not sure if that is the
correct approach.


--- udp.py      2007-01-12 14:55:11.000000000 -0500
+++ /home/paul/test/udp.py      2007-02-06 23:11:55.000000000 -0500
@@ -27,10 +27,10 @@
     from errno import WSAEINTR as EINTR
     from errno import WSAEMSGSIZE as EMSGSIZE
     from errno import WSAECONNREFUSED as ECONNREFUSED
-    from errno import WSAECONNRESET
+    from errno import WSAECONNRESET as ECONNRESET
     EAGAIN=EWOULDBLOCK
 else:
-    from errno import EWOULDBLOCK, EINTR, EMSGSIZE, ECONNREFUSED, EAGAIN
+    from errno import EWOULDBLOCK, EINTR, EMSGSIZE, ECONNREFUSED,
EAGAIN, ECONNRESET

 # Twisted Imports
 from twisted.internet import protocol, base, defer, address
@@ -116,7 +116,7 @@
                 no = se.args[0]
                 if no in (EAGAIN, EINTR, EWOULDBLOCK):
                     return
-                if (no == ECONNREFUSED) or (platformType == "win32"
and no == WSAECONNRESET):
+                if (no == ECONNREFUSED or no == ECONNRESET):
                     if self._connectedAddr:
                         self.protocol.connectionRefused()
                 else:
@@ -276,7 +276,7 @@
                 no = se.args[0]
                 if no in (EAGAIN, EINTR, EWOULDBLOCK):
                     return
-                if (no == ECONNREFUSED) or (platformType == "win32"
and no == WSAECONNRESET):
+                if (no == ECONNREFUSED or no == ECONNRESET):
                     self.protocol.connectionRefused()
                 else:
                     raise



From abierbaum at gmail.com  Wed Feb  7 00:18:39 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 23:18:39 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <20070207014950.25807.1089686106.divmod.quotient.12461@ohm>
References: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<20070207014950.25807.1089686106.divmod.quotient.12461@ohm>
Message-ID: <bea9869d0702062118p61e7b169u76eae67ce9221b4@mail.gmail.com>

[..]
> >Yep.  Not pretty by any means. :(
> >
> >I am sure that any suggestions you have to make it better would be
> >well-recieved by the nose project and the plugin's author.   :)
> >
>
> You never mentioned why nose interested you.  What's the attraction?

I thought I added a link to the page, but you have to look down to the
features sections to see the details:
http://somethingaboutorange.com/mrl/projects/nose/

The most significant feature I like right now is the test discovery.
It just works and makes sense since it will find classes, methods,
modules, packages, nested packages, everything.  It also allows setup
and teardown methods at the module and package scope which can come in
very handy to setup more expensive fixtures.  The output capture seems
like a good feature but I haven't had to use it much yet (it captures
the stdout during a test and only shows it if there is a failure).
The assertion messages are cleaner, it support plugins, the list goes
on.

The summary is that it is just more featureful then the standard
unittest module and it seems like a more solid well-reasoned framework
for testing.  It doesn't do everything, but the things it does do make
a lot of seem to make development easier.

Reading through the link above doesn't take long and it does give a
good idea of the capabilities.

-Allen



From radix at twistedmatrix.com  Wed Feb  7 00:26:06 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 Feb 2007 00:26:06 -0500
Subject: [Twisted-Python] db-based checker
In-Reply-To: <45C93731.5030400@pangalactic.us>
References: <45C93731.5030400@pangalactic.us>
Message-ID: <60ed19d40702062126o42b43f3ex73e8d5840223d2c6@mail.gmail.com>

On 2/6/07, Stephen Waterbury <waterbug at pangalactic.us> wrote:
> Here's my checker I mentioned on irc just now, 'UserDbCredChecker',
> which I've added to the web2 auth example ... as you can see,
> it's pretty trivial, and it works with my twisted.web-based app,
> so I'm puzzled why it doesn't work with the web2 auth example I've
> added it to.
>
> Sorry this isn't a runnable example, but just wanted to see if
> there was anything obvious by inspection before I go and create
> a runnable example -- which I'll do if necessary.

Well, if you have a valid ICredentialsChecker and it doesn't work with
web2 (but does with other cred-using code) then I would be inclined to
think it's a  web2 bug. A cursory glance doesn't show me anything
obvious (although it was only cursory) -- although I do notice you're
throwing away useful exception info by raising that ValueError -- I
suggest just getting rid of that try/except entirely. Anyway, probably
the best thing to do at this point is post to the twisted-web mailing
list, and mention the exception (or whatever error condition) you're
getting.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From antoine.pitrou at wengo.com  Wed Feb  7 06:46:14 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 12:46:14 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <1170848774.5120.22.camel@antoine-ubuntu>


Hi,

> I spent some more time investigating this today and found that someone
> has written a plugin for nose that allows it to test twisted code.  I
> don't think it looks as nice as trial, but it should work for the
> basics.    You can see it here:
> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> 
> If I run into some serious issues I will try my best to extend this
> plugin to support additional capabilities from trial.

Since I'm the author of this "plugin" (just a module actually) your
remarks are very welcome.

> > def threaded_reactor():
> 
> Yep.  Not pretty by any means. :(

Oh, certainly not less pretty than the self-admitted hacks that trial
uses (e.g. to stop/restart the reactor).

My "not pretty" solution has something like 50 lines of actual code and
only uses official Twisted features, which makes its complexity very
manageable. Compare that to Trial.

I'm open to any suggestion for not making use of a separate thread but,
until Twisted officially supports stopping and restarting the reactor, I
don't think it's possible (without using any of trial's self-admitted
hacks).

However, I'm not interested in grandiloquent rants about "Threads are
Evil" (I've already read them :-)).

> You never mentioned why nose interested you.  What's the attraction?

Let me give a few points as for nose vs. Trial :
- nose does not depend on Twisted. Unless all your Python projects make
use of Twisted, you certainly don't like having to use a different
testing tool depending on the project.
- nose has nice features, including the ability to write tests as
functions without having to write classes
- nose has a plugin system which already provides several extensions
- nose is documented

Regards

Antoine.





From Andy.Henshaw at gtri.gatech.edu  Wed Feb  7 07:36:31 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Wed, 7 Feb 2007 07:36:31 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
Message-ID: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>

I have some twisted code that supports forwarding serial port data to a tcp socket.  The code needs to run on Windows, so I'm using the win32eventreactor, as is required by the twisted.internet.serialport code.

Now, I need to marry it to a wxPython GUI.  Is there any reasonable way to support the twisted.internet.serialport code using wxreactor?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/1c44c275/attachment.htm 

From itamar at itamarst.org  Wed Feb  7 09:53:51 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Feb 2007 09:53:51 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
References: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
Message-ID: <1170860031.8589.64.camel@localhost.localdomain>


> Anyway, here's a patch I wrote that fixes the problem by checking for
> ECONNRESET on every platform, although I'm not sure if that is the
> correct approach.

Could you add an issue to the website? Were you in fact using connected
UDP?




From itamar at itamarst.org  Wed Feb  7 09:55:58 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Feb 2007 09:55:58 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
References: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
Message-ID: <1170860158.8589.67.camel@localhost.localdomain>

On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:

> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
> way to support the twisted.internet.serialport code using wxreactor?

You'll probably have to hack up a version of _threadedselect that's
based on win32eventreactor, unfortunately, since we don't yet have a way
to make it pluggable.




From exarkun at divmod.com  Wed Feb  7 09:57:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 09:57:21 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
Message-ID: <20070207145721.25807.1905078831.divmod.quotient.13217@ohm>

On Tue, 6 Feb 2007 23:27:23 -0500, Paul Marks <pmarks at purdue.edu> wrote:
>I wrote this program that uses Twisted with a bunch of UDP
>communication, and a friend of mine got this exception while running
>it on Cygwin:
>
>Traceback (most recent call last):
>  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
>48, in callWithLogger
>    return callWithContext({"system": lp}, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
>33, in callWithContext
>    return context.call({ILogContext: newCtx}, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
>line 59, in callWithContext
>    return self.currentContext().callWithContext(ctx, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
>line 37, in callWithContext
>    return func(*args,**kw)
>--- <exception caught here> ---
>  File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py",
>line 139, in _doReadOrWrite
>    why = getattr(selectable, method)()
>  File "/usr/lib/python2.4/site-packages/twisted/internet/udp.py",
>line 114, in doRead
>    data, addr = self.socket.recvfrom(self.maxPacketSize)
>socket.error: (104, 'Connection reset by peer')
>
>
>My interpretation is that windows (and therefore Cygwin) can throw a
>Connection Reset By Peer error when receiving UDP packets, and Twisted
>only checks for the error on win32, but not on Cygwin, because Cygwin
>is identified as posix.
>
>Anyway, here's a patch I wrote that fixes the problem by checking for
>ECONNRESET on every platform, although I'm not sure if that is the
>correct approach.
>

Thanks for the patch.  I'm not sure if it's correct either. ;)  Cygwin
isn't an officially supported platform for Twisted at the moment.  What
this basically means is that we don't do regular testing on Cygwin, so
this may not be the only problem you encounter.  Moreover, even if we
fix this, it's pretty unlikely anyone would notice if a subsequent change
breaks it again.

This is a pretty straightforward situation to remedy, though.  Someone
just needs to volunteer to run a Cygwin buildslave.  As long as there is
a buildslave for a platform, it'll get regular testing and changes which
break functionality (as reported by the test suite - by the way, is there
an existing failing unit test for this defect?) won't be allowed.

Jean-Paul



From exarkun at divmod.com  Wed Feb  7 10:06:12 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 10:06:12 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <1170848774.5120.22.camel@antoine-ubuntu>
Message-ID: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>

On Wed, 07 Feb 2007 12:46:14 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
>
>Hi,
>
>> I spent some more time investigating this today and found that someone
>> has written a plugin for nose that allows it to test twisted code.  I
>> don't think it looks as nice as trial, but it should work for the
>> basics.    You can see it here:
>> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>>
>> If I run into some serious issues I will try my best to extend this
>> plugin to support additional capabilities from trial.
>
>Since I'm the author of this "plugin" (just a module actually) your
>remarks are very welcome.
>
>> > def threaded_reactor():
>>
>> Yep.  Not pretty by any means. :(
>
>Oh, certainly not less pretty than the self-admitted hacks that trial
>uses (e.g. to stop/restart the reactor).

I don't think anyone will claim trial doesn't have more than its fair
share of terrifying hacks. :)  I hope that trial isn't being used as
a standard of quality for other coding endeavours.

>
>My "not pretty" solution has something like 50 lines of actual code and
>only uses official Twisted features, which makes its complexity very
>manageable. Compare that to Trial.

We could do that, but it seems a little silly.  There's a lot more to
trial than just reactor cooperation.  Anyway, I'm not so interested in
this point.

>
>I'm open to any suggestion for not making use of a separate thread but,
>until Twisted officially supports stopping and restarting the reactor, I
>don't think it's possible (without using any of trial's self-admitted
>hacks).

That would probably involve more knowledge of nose implementation details
than I have right now, or I'd try to offer some.  I'm sure if it were a
simple matter to get things working nicely, you would have done that. :)

>
>However, I'm not interested in grandiloquent rants about "Threads are
>Evil" (I've already read them :-)).

The one practical problem which this method of integration has is that
it will not allow unit tests to run child processes.  So, one wouldn't
be able to run Twisted's test suite with nose using this.  Of course,
if one has no interest in running tests which run child processes, then
this may not be a big deal.

>
>> You never mentioned why nose interested you.  What's the attraction?
>
>Let me give a few points as for nose vs. Trial :
>- nose does not depend on Twisted. Unless all your Python projects make
>use of Twisted, you certainly don't like having to use a different
>testing tool depending on the project.
>- nose has nice features, including the ability to write tests as
>functions without having to write classes
>- nose has a plugin system which already provides several extensions
>- nose is documented
>

Thanks for the feature list. :)  The reason I posted to the thread is
that I was interested in which specific features were proving useful
to a real user.  Can I take this as a list of features you find to be
of practical value, as a user of nose yourself?

Jean-Paul



From exarkun at divmod.com  Wed Feb  7 10:12:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 10:12:55 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <1170860158.8589.67.camel@localhost.localdomain>
Message-ID: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>

On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>
>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>> way to support the twisted.internet.serialport code using wxreactor?
>
>You'll probably have to hack up a version of _threadedselect that's
>based on win32eventreactor, unfortunately, since we don't yet have a way
>to make it pluggable.
>

Another path would be to continue to use win32er and use wxPython in a
second thread without getting wxreactor involved at all.

A third path would be to contribute some development time to Twisted to
provide a better, supported way to deal with this use case. :)

Note that there is a _threadedselect build /slave/ set up, but no one has
yet even bothered to write the trivial reactor plugin which will make it
possible for it to run any tests.  For all the interest in wxPython, it
continues to surprise me how little effort anyone has yet been willing to
spend on making it /work/.  Itamar is essentially the only person who has
done any work on it, and as far as I know, he doesn't even use it.

Jean-Paul



From antoine.pitrou at wengo.com  Wed Feb  7 10:32:26 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 16:32:26 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>
References: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>
Message-ID: <1170862346.5120.30.camel@antoine-ubuntu>


Hi Jean-Paul,

> The one practical problem which this method of integration has is that
> it will not allow unit tests to run child processes.  So, one wouldn't
> be able to run Twisted's test suite with nose using this.  Of course,
> if one has no interest in running tests which run child processes, then
> this may not be a big deal.

Do you mean because the reactor does not receive signals?

> >Let me give a few points as for nose vs. Trial :
> >- nose does not depend on Twisted. Unless all your Python projects make
> >use of Twisted, you certainly don't like having to use a different
> >testing tool depending on the project.
> >- nose has nice features, including the ability to write tests as
> >functions without having to write classes
> >- nose has a plugin system which already provides several extensions
> >- nose is documented
> 
> Thanks for the feature list. :)  The reason I posted to the thread is
> that I was interested in which specific features were proving useful
> to a real user.  Can I take this as a list of features you find to be
> of practical value, as a user of nose yourself?

Definitely (apart from the plugin system which is quite optional, but
will probably encourage people to write some interesting add-ons).

Regards

Antoine.





From Andy.Henshaw at gtri.gatech.edu  Wed Feb  7 10:44:38 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Wed, 7 Feb 2007 10:44:38 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
Message-ID: <428C01C01744D142A3DCBB7ACB08C03DDFA83B@apatlelsmail08.elsys.gtri.org>

On Wednesday, February 07, 2007 10:13 AM Jean-Paul Calderone wrote:

>On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
>>On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>>
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable 
>>> way to support the twisted.internet.serialport code using wxreactor?
>>
>>You'll probably have to hack up a version of _threadedselect that's 
>>based on win32eventreactor, unfortunately, since we don't yet have a 
>>way to make it pluggable.
>>
>
>Another path would be to continue to use win32er and use wxPython
>in a second thread without getting wxreactor involved at all.

Unfortunately, I'll probably have to do this, because I have a pretty
good understanding of how to do this and how much time it would take.

>A third path would be to contribute some development time to Twisted
>to provide a better, supported way to deal with this use case. :)

>Note that there is a _threadedselect build /slave/ set up, but no 
>one has yet even bothered to write the trivial reactor plugin which 
>will make it possible for it to run any tests.  For all the interest 
>in wxPython, it continues to surprise me how little effort anyone 
>has yet been willing to spend on making it /work/.  Itamar is 
>essentially the only person who has done any work on it, and as far 
>as I know, he doesn't even use it.

If I can carve out some time, I'll try to take a look at this.  WxPython
and Twisted are becoming important tools for us.





From exarkun at divmod.com  Wed Feb  7 11:01:14 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 11:01:14 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <1170862346.5120.30.camel@antoine-ubuntu>
Message-ID: <20070207160114.25807.525523402.divmod.quotient.13281@ohm>

On Wed, 07 Feb 2007 16:32:26 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
>
>Hi Jean-Paul,
>
>> The one practical problem which this method of integration has is that
>> it will not allow unit tests to run child processes.  So, one wouldn't
>> be able to run Twisted's test suite with nose using this.  Of course,
>> if one has no interest in running tests which run child processes, then
>> this may not be a big deal.
>
>Do you mean because the reactor does not receive signals?
>

Yep.  Without the SIGCHLD handler installed, Twisted will never reap the
children, so they will remain as zombies.

Jean-Paul



From manlio_perillo at libero.it  Wed Feb  7 11:04:52 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed, 07 Feb 2007 17:04:52 +0100
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
References: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
Message-ID: <45C9F8A4.2010002@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
>> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>>
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>>> way to support the twisted.internet.serialport code using wxreactor?
>>
>> You'll probably have to hack up a version of _threadedselect that's
>> based on win32eventreactor, unfortunately, since we don't yet have a way
>> to make it pluggable.
>>
> 
> Another path would be to continue to use win32er and use wxPython in a
> second thread without getting wxreactor involved at all.
> 

What about just run WaitForMultipleObjects in a separate thread and 
dispatch the events in the main thread?


Regards  Manlio Perillo



From abierbaum at gmail.com  Wed Feb  7 11:17:26 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Wed, 7 Feb 2007 10:17:26 -0600
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207160114.25807.525523402.divmod.quotient.13281@ohm>
References: <1170862346.5120.30.camel@antoine-ubuntu>
	<20070207160114.25807.525523402.divmod.quotient.13281@ohm>
Message-ID: <bea9869d0702070817y7acf3610sc4eb835c601d36d3@mail.gmail.com>

Is there anything that could be ported over from trial and used in the
nose plugin to make things behave better.  All I am really interested
in is allowing twisted code to be tested in the best way possible from
within nose.  The current plugin seems to work well, but if there are
ways to make it work better I am all for using them.

For example earlier in the thread Johnathan mentioned that it may be
possible to just derive from twisted.trial.unittest.TestCase directly.

Antoine: Did you try this when making the nose plugin and what
problems did you run into?


-Allen


On 2/7/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 07 Feb 2007 16:32:26 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
> >
> >Hi Jean-Paul,
> >
> >> The one practical problem which this method of integration has is that
> >> it will not allow unit tests to run child processes.  So, one wouldn't
> >> be able to run Twisted's test suite with nose using this.  Of course,
> >> if one has no interest in running tests which run child processes, then
> >> this may not be a big deal.
> >
> >Do you mean because the reactor does not receive signals?
> >
>
> Yep.  Without the SIGCHLD handler installed, Twisted will never reap the
> children, so they will remain as zombies.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From stephen.c.waterbury at nasa.gov  Wed Feb  7 11:18:21 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Wed, 07 Feb 2007 11:18:21 -0500
Subject: [Twisted-Python] Something strange about cred
Message-ID: <45C9FBCD.1090408@nasa.gov>

I think I've found the problem with trying to use my UserDbCredChecker
with the web2 auth example.  [The reason I'm posting this to the
twisted list rather than twisted-web is because I think it points to
a possible problem with cred (or at least some confusing names), which
is not specifically web.]

I believe the problem is with ICredentials.  Its interface
docstring says "I check credentials." -- first of all, this is
counter-intuitive to me.  IMO should either say "I *am* credentials",
or else the interface should be "ICredentialsChecker" -- i.e.,
I think the checkPassword method it specifies should be provided by
the ICredentialsChecker (if it is needed at all -- questionable).

IMO ICredentials subinterfaces should only specify the types
of credentials that are being provided (e.g., attributes username
and password, for IUsernamePassword), and the checkPassword method
should be in the ICredentialsChecker interface (and might not need
to be public anyway -- all that needs to be public is
requestAvatarId, really).

Getting back to the web2 auth example, it appears that the checker's
requestAvatarId method receives an ICredentials provider as its
parameter, and my assumption was that the ICredentials provider would
have attributes 'username' and 'password' -- which the IUsernamePassword
interface docstring specifies as ivars (which I believe is incorrect
syntax for a zope.interface definition -- I think they should be
Attributes if they are supposed to be part of the interface
specification) -- but I'm not sure it's getting them, because I think
if it did my checker would work (i.e., would return an AvatarId (the
username) from its requestAvatarId method).

Comments?

Steve



From glyph at divmod.com  Wed Feb  7 11:35:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 16:35:10 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>

On 03:32 pm, antoine.pitrou at wengo.com wrote:
>
>Hi Jean-Paul,
>
>> The one practical problem which this method of integration has is that
>> it will not allow unit tests to run child processes.  So, one wouldn't
>> be able to run Twisted's test suite with nose using this.  Of course,
>> if one has no interest in running tests which run child processes, then
>> this may not be a big deal.
>
>Do you mean because the reactor does not receive signals?

Yes.  Also, it's highly likely that the tests won't stop cleanly on ^C.

More serious than the process-running issue, from my point of view, is the fact that if you forget the "@deferred" decorator on a test that uses any reactor API, or code that internally _uses_ any reactor API, you will put your tests into a non-deterministic state, and although they'll pass _most_ of the time, they will die depending on the load characteristics of your machine at the time and (insert long-winded rant about the evil things threads do to your code here).  Tests are exactly the place you never want this to happen :).

The documentation for this module should be clear on the fact that Twisted-using tests are _absolutely required_ to use the decorator, even if they don't need to wait on a deferred.  Of course, that implies that the "you must return a twisted Deferred" message should probably be removed and that case dealt with.

Also, setUp and tearDown methods also need the decorator applied, I think, not just test methods.

All in all it seems like it would be simpler to just use trials' TestCase class with nose.  Is there any reason not to?

>> >Let me give a few points as for nose vs. Trial :

You are welcome to use nose, of course, but some of these reasons sounded kind of flimsy to me.

>> >- nose does not depend on Twisted. Unless all your Python projects make
>> >use of Twisted, you certainly don't like having to use a different
>> >testing tool depending on the project.

Trial doesn't force your code to make use of Twisted, and as Mr. Lange has declared previously, it goes to some lengths to be compatible with stdlib unit tests.  It can run and discover stdlib tests, as well as being run by the stdlib runner, and I've used it to test tiny projects which do not use Twisted code anywhere.

So, Trial only requires Twisted insofar as Nose requires Nose.  It's part of its implementation.  If you use Twisted for _any_ of your development, it's already installed.

>> >- nose has nice features, including the ability to write tests as
>> >functions without having to write classes

This just sounds like TIMTOWTDI to me.  I *like* the fact that all test methods look the same ;).

>> >- nose has a plugin system which already provides several extensions

In the spirit of completeness, see trial's --help-reporters and --reporter option.  These are discovered using plugins.

Please do not take this argument seriously though.  :)  There is widespread consensus that this plugin API is not very good and it is likely to change.  Still, it exists and you can use it.

See:
    http://twistedmatrix.com/trac/browser/sandbox/exarkun/merit/trunk/twisted/plugins/rr.py

Although, perhaps the utility of the plugin system is decreased more by the fact that nobody knows about it than by its sub-optimal API, which leads into your next point...

>> >- nose is documented

This is a very, very good point.  Trial's documentation is extremely weak.

Does anyone (and by "anyone" I mean "anyone but JML, who has already done more work on trial than any reasonable person ever would") want to volunteer to write a "test driven development with Twisted" lore document?  I've introduced many people to Twisted in recent weeks, and each time I ended up having to do a live demonstration of how to write a test module, how to run the trial command line, and (for those lucky enough to use emacs) how to get twisted-dev.el loaded so that f9 will do the right thing.  This stuff isn't clear even to people already familiar with Python and unit testing, let alone to people who are learning TDD for the first time with trial.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/4263516a/attachment.htm 

From exarkun at divmod.com  Wed Feb  7 11:44:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 11:44:50 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <20070207164450.25807.1755339708.divmod.quotient.13324@ohm>

On Wed, 07 Feb 2007 16:35:10 -0000, glyph at divmod.com wrote:
>On 03:32 pm, antoine.pitrou at wengo.com wrote:
>>
>>Hi Jean-Paul,
>>
>>> The one practical problem which this method of integration has is that
>>> it will not allow unit tests to run child processes.  So, one wouldn't
>>> be able to run Twisted's test suite with nose using this.  Of course,
>>> if one has no interest in running tests which run child processes, then
>>> this may not be a big deal.
>>
>>Do you mean because the reactor does not receive signals?
>
>Yes.  Also, it's highly likely that the tests won't stop cleanly on ^C.

Haa haha haa hahaha haaa haa haa haa heee haaa ha ha ha.

Jean-Paul



From antoine.pitrou at wengo.com  Wed Feb  7 12:36:15 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 18:36:15 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
References: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <1170869775.5120.55.camel@antoine-ubuntu>


Hi,

Le mercredi 07 f?vrier 2007 ? 16:35 +0000, glyph at divmod.com a ?crit :
> Yes.  Also, it's highly likely that the tests won't stop cleanly on
> ^C.

Depends on what you mean by "cleanly". I haven't noticed any annoying
behaviour when killing tests in the middle.

Regardless of ^C, there is a sporadic exception at shutdown due to the
way Python destroys modules (it first sets the module members to None).
I suppose it can happen in any situation in which Twisted is run in a
separate thread:

<<
Exception in thread Thread-1 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "threading.py", line 460, in __bootstrap
  File "threading.py", line 440, in run
  File "/home/antoine/nose-svn/nose/twistedtools.py", line 52, in <lambda>
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 218, in run
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 231, in mainLoop
<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'msg'
Unhandled exception in thread started by 
Error in sys.excepthook:

Original exception was:
>>

> More serious than the process-running issue, from my point of view, is
> the fact that if you forget the "@deferred" decorator on a test that
> uses any reactor API, or code that internally _uses_ any reactor API,
> you will put your tests into a non-deterministic state, and although
> they'll pass _most_ of the time, they will die depending on the load
> characteristics of your machine at the time and (insert long-winded
> rant about the evil things threads do to your code here).  Tests are
> exactly the place you never want this to happen :).

That's certainly right, although you should get messages about uncaught
exceptions or unhandled errbacks, so you'll know that something went
wrong.
What happens with Trial when you forget to return the Deferred the test
should wait on?

> Also, setUp and tearDown methods also need the decorator applied, I
> think, not just test methods.

Setup methods at least, if they do something asynchronous.

> All in all it seems like it would be simpler to just use trials'
> TestCase class with nose.  Is there any reason not to?

Given that Trial is a self-contained tool, and given that nose also has
its own test running and collecting, I simply didn't expect this to work
or to keep working accross versions of both tools.

> Trial doesn't force your code to make use of Twisted, and as Mr. Lange
> has declared previously, it goes to some lengths to be compatible with
> stdlib unit tests.

Of course, but to use Trial you must install Twisted don't you ?
Which is quite a big dependency, and Twisted does not yet support being
easy_install'ed.

Regards

Antoine.





From pmarks at purdue.edu  Wed Feb  7 12:47:11 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Wed, 7 Feb 2007 12:47:11 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <1170860031.8589.64.camel@localhost.localdomain>
References: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
	<1170860031.8589.64.camel@localhost.localdomain>
Message-ID: <8e5b27790702070947j6f9599a4t4b54ea6ae5aa6fe4@mail.gmail.com>

On 2/7/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> > Anyway, here's a patch I wrote that fixes the problem by checking for
> > ECONNRESET on every platform, although I'm not sure if that is the
> > correct approach.
>
> Could you add an issue to the website? Were you in fact using connected
> UDP?

Nope, just regular connectionless UDP.

But it's a decentralized P2P app that sends requests to a lot of
different hosts.  It's possible that one of them sent back an ICMP
reject, but I'm not sure.



From thostrup at gmail.com  Wed Feb  7 14:58:22 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Wed, 7 Feb 2007 20:58:22 +0100
Subject: [Twisted-Python] amptypes 0.1
Message-ID: <f33a4da20702071158k331094d0of50c0861b50fcfde@mail.gmail.com>

Hi

I've created a couple of extension types for the AMP protocol.

Currently there two types: A dictionary and a list. The types of the element
must be specified (key and value can be different in the dictionary),
otherwise they are free form, i.e., the keys in the dictionary can have any
name, and the list can be of any size. The types can be nested, e.g., you
can create a list of list of strings. I use (or will) the latter to return a
query result, for which I do not know the row size. This is currently
impossible (AFAICT), in the otherwise excellent AMP protocol.

The types inherit a maximum size from the AMP protocol, so a dictionary or
list cannot contain more than approx 64 KB data.

It can be fetched from here:
http://www.cs.aau.dk/~htj/code/amptypes-0.1.tar.gz

License is the same as for twisted.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/3f46b2f8/attachment.htm 

From glyph at divmod.com  Wed Feb  7 16:24:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 21:24:18 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>

On 05:36 pm, antoine.pitrou at wengo.com wrote:

>> More serious than the process-running issue, from my point of view, is
>> the fact that if you forget the "@deferred" decorator on a test that
>> uses any reactor API, or code that internally _uses_ any reactor API,
>> you will put your tests into a non-deterministic state, and although
>> they'll pass _most_ of the time, they will die depending on the load
>> characteristics of your machine at the time and (insert long-winded
>> rant about the evil things threads do to your code here).  Tests are
>> exactly the place you never want this to happen :).
>
>That's certainly right, although you should get messages about uncaught
>exceptions or unhandled errbacks, so you'll know that something went
>wrong.

That's not the sort of problem I'm talking about.  Some reactor APIs will appear to work when called from the wrong thread, so if you forget a @deferred somewhere, your test might seem to work, or hang in a weird place, or produce different error output each time.

>What happens with Trial when you forget to return the Deferred the test
>should wait on?

Trial doesn't require tests to return Deferreds.  If there is no Deferred, the test completes immediately.

>> All in all it seems like it would be simpler to just use trials'
>> TestCase class with nose.  Is there any reason not to?
>
>Given that Trial is a self-contained tool, and given that nose also has
>its own test running and collecting, I simply didn't expect this to work
>or to keep working accross versions of both tools.

This is definitely a concern, but your current approach doesn't seem any less fragile.

>> Trial doesn't force your code to make use of Twisted, and as Mr. Lange
>> has declared previously, it goes to some lengths to be compatible with
>> stdlib unit tests.
>
>Of course, but to use Trial you must install Twisted don't you ?

>Which is quite a big dependency,

Is 2 megabytes really too big?

>and Twisted does not yet support being easy_install'ed.

... and nose doesn't yet support being apt-get installed ;-)

If you'd like to see easy_install support for Twisted, please feel free to contribute support for it; the release manager could probably use some help maintaining setup.py in general.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/ba79f1f1/attachment.htm 

From glyph at divmod.com  Wed Feb  7 16:26:42 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 21:26:42 -0000
Subject: [Twisted-Python] amptypes 0.1
Message-ID: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>

On 07:58 pm, thostrup at gmail.com wrote:
>Hi
>
>I've created a couple of extension types for the AMP protocol.

Thanks!  Would you consider contributing these to Twisted proper?  Aside from a few very minor cleanups (test naming convention, a few missing docstrings) these look great.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/272fa769/attachment.htm 

From mithrandi-twisted-python at mithrandi.za.net  Wed Feb  7 16:53:31 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Wed, 7 Feb 2007 23:53:31 +0200
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
References: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
Message-ID: <20070207215330.GA13330@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:

> ... and nose doesn't yet support being apt-get installed ;-)

mithrandi at elvardein:~> sudo apt-get install python-nose
Reading package lists... Done
Building dependency tree... Done
The following NEW packages will be installed:
  python-nose
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0B/54.0kB of archives.
After unpacking 340kB of additional disk space will be used.
Selecting previously deselected package python-nose.
(Reading database ... 142571 files and directories currently installed.)
Unpacking python-nose (from .../python-nose_0.9.0-2_all.deb) ...
Setting up python-nose (0.9.0-2) ...


mithrandi at elvardein:~>
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/3cf84a4d/attachment.pgp 

From jml at mumak.net  Wed Feb  7 17:20:58 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 8 Feb 2007 09:20:58 +1100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
References: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <d06a5cd30702071420h44264ce5t2757437aa8259601@mail.gmail.com>

On 2/8/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 03:32 pm, antoine.pitrou at wengo.com wrote:
> >> >- nose is documented
>
> This is a very, very good point.  Trial's documentation is extremely weak.
>
> Does anyone (and by "anyone" I mean "anyone but JML, who has already done
> more work on trial than any reasonable person ever would") want to volunteer
> to write a "test driven development with Twisted" lore document?

It's on my todo list. ;)

cheers,
jml



From glyph at divmod.com  Wed Feb  7 17:36:59 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 22:36:59 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>

On 09:53 pm, mithrandi-twisted-python at mithrandi.za.net wrote:
>* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:
>
>> ... and nose doesn't yet support being apt-get installed ;-)
>
>mithrandi at elvardein:~> sudo apt-get install python-nose

Well!  Egg on my face, there.  Where's the apt line?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070207/6cd3445a/attachment.htm 

From mithrandi-twisted-python at mithrandi.za.net  Wed Feb  7 18:21:54 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 8 Feb 2007 01:21:54 +0200
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>
References: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>
Message-ID: <20070207232154.GA13592@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2007-02-07 22:36:59 -0000]:

> On 09:53 pm, mithrandi-twisted-python at mithrandi.za.net wrote:
> >* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:
> >
> >> ... and nose doesn't yet support being apt-get installed ;-)
> >
> >mithrandi at elvardein:~> sudo apt-get install python-nose
> 
> Well!  Egg on my face, there.  Where's the apt line?

It's in Debian Etch (testing, soon to be released) and Sid; also,
apparently in Ubuntu Universe, but I'm not very familiar with Ubuntu's
release / package structure.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/a1ef3083/attachment.pgp 

From tdickenson at geminidataloggers.com  Thu Feb  8 02:43:57 2007
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 08 Feb 2007 07:43:57 +0000
Subject: [Twisted-Python] Re: wxreactor, serialport, and Windows
References: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
	<1170860158.8589.67.camel@localhost.localdomain>
Message-ID: <eqcvag$140$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:

> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
> 
>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>> way to support the twisted.internet.serialport code using wxreactor?
> 
> You'll probably have to hack up a version of _threadedselect that's
> based on win32eventreactor, 

Hey, Ive already built one of those!

http://twistedmatrix.com/trac/ticket/2440




From thostrup at gmail.com  Thu Feb  8 03:08:31 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 8 Feb 2007 09:08:31 +0100
Subject: [Twisted-Python] amptypes 0.1
In-Reply-To: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>
References: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>
Message-ID: <f33a4da20702080008v5572e421s115963f5d25b213a@mail.gmail.com>

On 2/7/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 07:58 pm, thostrup at gmail.com wrote:
> >
> >I've created a couple of extension types for the AMP protocol.
>
> Thanks!  Would you consider contributing these to Twisted proper?
>

Sure.


> Aside from a few very minor cleanups (test naming convention, a few
> missing docstrings) these look great.
>

Could you give me a few pointers to what should be done, and I'll submit a
patch.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/e010273c/attachment.htm 

From slowtech.chen at yahoo.com  Thu Feb  8 04:34:17 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 01:34:17 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <611685.82568.qm@web59114.mail.re1.yahoo.com>

Hey guys,

I've been  using twisted for a couple days, I like it very much. And there are some stuffs I 'm still not quite get:

-  I like the asyn way twisted provides, but when using RDBMS, I have to spawn other threads out of the main event loop. this seems 
weird and  I 'm wondering how the performance would be when you've got a lot of concurrent db queries.

- Did anyone come into memory leak on twisted server?  'cause when I tested our twisted server today ,the memory usage became 75% when idle. 

Any suggestion welcome.

regards,
Chen




  
 




 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/7b228d1c/attachment.htm 

From therve at free.fr  Thu Feb  8 05:29:53 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 08 Feb 2007 11:29:53 +0100
Subject: [Twisted-Python] questions about large db queries and memory leak
In-Reply-To: <611685.82568.qm@web59114.mail.re1.yahoo.com>
References: <611685.82568.qm@web59114.mail.re1.yahoo.com>
Message-ID: <20070208112953.mq87c09l2p40ogc0@wasabox.wasabout.net>

Quoting slowtech chen <slowtech.chen at yahoo.com>:

> Hey guys,
>
> I've been  using twisted for a couple days, I like it very much. And 
> there are some stuffs I 'm still not quite get:
>
> -  I like the asyn way twisted provides, but when using RDBMS, I have 
> to spawn other threads out of the main event loop. this seems
> weird and  I 'm wondering how the performance would be when you've 
> got a lot of concurrent db queries.

I guess you use adbapi ? The performance are generally not a problem with db
queries because most of the job is done on the DB, not on the client. I've got
servers that makes hundreds requests against Postgres/MySQL/sqlite without
problems.

> - Did anyone come into memory leak on twisted server?  'cause when I 
> tested our twisted server today ,the memory usage became 75% when 
> idle.

Until proved, it comes from your code :).

-- 
Thomas





From antoine.pitrou at wengo.com  Thu Feb  8 05:45:54 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Thu, 08 Feb 2007 11:45:54 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207215330.GA13330@mithrandi.za.net>
References: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
	<20070207215330.GA13330@mithrandi.za.net>
Message-ID: <1170931555.5130.0.camel@antoine-ubuntu>

Le mercredi 07 f?vrier 2007 ? 23:53 +0200, Tristan Seligmann a ?crit :
> Unpacking python-nose (from .../python-nose_0.9.0-2_all.deb) ...
> Setting up python-nose (0.9.0-2) ...

To be fair, that version isn't twisted-enabled.


Antoine.





From martin at browns.co.uk  Thu Feb  8 07:14:42 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 08 Feb 2007 12:14:42 +0000
Subject: [Twisted-Python] startLogging
In-Reply-To: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
Message-ID: <200702081214.l18CEr0c003748@brownix.browns.co.uk>


Are there any samples on how best to interact with logging?

My server needs to log quite a few items, as such the log file is 
growing quite quickly and I would like to be able to switch file 
names on a daily basis. I would also probably then wish to delete 
logs older than 14 days.

I'm not sure how safe it would be to just keep calling startLogging() 
with a different file name mid-session. I realise there has been some 
discussion about this area recently.

Thanks, Martin




From thostrup at gmail.com  Thu Feb  8 07:37:24 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 8 Feb 2007 13:37:24 +0100
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <f33a4da20702080437j522801eu50315bed19e4d713@mail.gmail.com>

On 2/8/07, Martin Evans <martin at browns.co.uk> wrote:
>
>
> Are there any samples on how best to interact with logging?
>
> My server needs to log quite a few items, as such the log file is
> growing quite quickly and I would like to be able to switch file
> names on a daily basis. I would also probably then wish to delete
> logs older than 14 days.
>
> I'm not sure how safe it would be to just keep calling startLogging()
> with a different file name mid-session. I realise there has been some
> discussion about this area recently.


>From a quick look at log.py it does not appear that calling startLogging
again would stop logging to the old, it would just add another log observer,
meaning that log entries would go to both files.

One approach is to create your own log observer and using this to log with.
Then you can change file whenever you want to, and also change the log
layout etc.. Alternatively you can call removeObserver and addObserver when
you want to change log file.

Another approach is to use an external program to rotate the log files.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/0fafeabc/attachment.htm 

From mwl at point45.com  Thu Feb  8 08:28:59 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 08 Feb 2007 15:28:59 +0200
Subject: [Twisted-Python] questions about large db queries and memory leak
In-Reply-To: <611685.82568.qm@web59114.mail.re1.yahoo.com>
References: <611685.82568.qm@web59114.mail.re1.yahoo.com>
Message-ID: <45CB259B.3010307@point45.com>

slowtech chen wrote:
> - Did anyone come into memory leak on twisted server?  'cause when I 
> tested our twisted server today ,the memory usage became 75% when idle.

If you're not running Python >= 2.5.0 this might be relevant:
http://evanjones.ca/python-memory.html

-Mark



From antoine.pitrou at wengo.com  Thu Feb  8 08:31:04 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Thu, 08 Feb 2007 14:31:04 +0100
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <1170941464.5130.8.camel@antoine-ubuntu>

Le jeudi 08 f?vrier 2007 ? 12:14 +0000, Martin Evans a ?crit :
> Are there any samples on how best to interact with logging?
> 
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file 
> names on a daily basis. I would also probably then wish to delete 
> logs older than 14 days.

You could use Python's standard logging module, it has a 
TimedRotatingFileHandler which seems to do exactly what you want:
http://docs.python.org/lib/node414.html

Regards






From Andy.Henshaw at gtri.gatech.edu  Thu Feb  8 08:42:02 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Thu, 8 Feb 2007 08:42:02 -0500
Subject: [Twisted-Python] Re: wxreactor, serialport, and Windows
In-Reply-To: <eqcvag$140$1@sea.gmane.org>
Message-ID: <428C01C01744D142A3DCBB7ACB08C03DDFA9B2@apatlelsmail08.elsys.gtri.org>

On Thursday, February 08, 2007 2:44 AM, Toby Dickenson wrote:

>Itamar Shtull-Trauring wrote:
>
>> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu
wrote:
>> 
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable 
>>> way to support the twisted.internet.serialport code using wxreactor?
>> 
>> You'll probably have to hack up a version of _threadedselect that's 
>> based on win32eventreactor,
>
>Hey, Ive already built one of those!
>
>http://twistedmatrix.com/trac/ticket/2440

Thanks!  It seems to be working, although I have a bug (probably of my
own) to work out.



From mwl at point45.com  Thu Feb  8 08:51:57 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 08 Feb 2007 15:51:57 +0200
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <45CB2AFD.4060802@point45.com>

Martin Evans wrote:
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file names 
> on a daily basis. I would also probably then wish to delete logs older 
> than 14 days.

Assuming your platform has a [decent] syslogd, how about logging to 
syslog, instead of reimplementing parts of it?

Something like this should work:

% twistd --syslog --prefix foo -oy foo.tac

And then let syslog do the hard work.

-Mark




From stephen.c.waterbury at nasa.gov  Thu Feb  8 10:16:51 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 10:16:51 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45C9FBCD.1090408@nasa.gov>
References: <45C9FBCD.1090408@nasa.gov>
Message-ID: <45CB3EE3.5080301@nasa.gov>

Here's a simple self-contained example of a database
checker that's essentially identical to the one I
use with my code which works with web but not with the web2
auth example (i.e., httpauth.tac).  Perhaps someone familiar
with cred and web2 could suggest how I might fix it?

The only changes needed to make the web2 auth example
use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
into the same directory.  The test_dbchecker.py script is just
a simple test to show that DbChecker returns an AvatarId
when given a credential with correct username and password
values.

TIA for any help with this.

Cheers,
Steve

P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
doesn't allow that.  :(

-------------- next part --------------
A non-text attachment was scrubbed...
Name: httpauth.patch
Type: text/x-patch
Size: 508 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/e049d16b/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbchecker.py
Type: text/x-python
Size: 1780 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/e049d16b/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_dbchecker.py
Type: text/x-python
Size: 712 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/e049d16b/attachment-0001.py 

From exarkun at divmod.com  Thu Feb  8 11:04:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Feb 2007 11:04:21 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CB3EE3.5080301@nasa.gov>
Message-ID: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>

On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury <stephen.c.waterbury at nasa.gov> wrote:
>Here's a simple self-contained example of a database
>checker that's essentially identical to the one I
>use with my code which works with web but not with the web2
>auth example (i.e., httpauth.tac).  Perhaps someone familiar
>with cred and web2 could suggest how I might fix it?
>
>The only changes needed to make the web2 auth example
>use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>into the same directory.  The test_dbchecker.py script is just
>a simple test to show that DbChecker returns an AvatarId
>when given a credential with correct username and password
>values.
>
>TIA for any help with this.
>

Hey Steve,

Aside from the cred questions/issues you raised in the first email
(some of which I think are valid), I think the main problem you're
running into is that HTTP digest authentication is being used, but
the checker you wrote can't handle this: digest auth requires that
the checker be able to handle IUsernameHashedPassword credentials,
which yours doesn't.

The reporting for this case could probably be improved.  If there is
no checker registered which can handle the kind of credentials being
used, it's probably a programming error, and the programmer should be
told about it.

Jean-Paul



From stephen.c.waterbury at nasa.gov  Thu Feb  8 11:25:54 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 11:25:54 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
Message-ID: <45CB4F12.7010609@nasa.gov>

Jean-Paul Calderone wrote:
> On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury 
> <stephen.c.waterbury at nasa.gov> wrote:
>> Here's a simple self-contained example of a database
>> checker that's essentially identical to the one I
>> use with my code which works with web but not with the web2
>> auth example (i.e., httpauth.tac).  Perhaps someone familiar
>> with cred and web2 could suggest how I might fix it?
>>
>> The only changes needed to make the web2 auth example
>> use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>> are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>> into the same directory.  The test_dbchecker.py script is just
>> a simple test to show that DbChecker returns an AvatarId
>> when given a credential with correct username and password
>> values.
>>
>> TIA for any help with this.
>>
> 
> Hey Steve,
> 
> Aside from the cred questions/issues you raised in the first email
> (some of which I think are valid), I think the main problem you're
> running into is that HTTP digest authentication is being used, but
> the checker you wrote can't handle this: digest auth requires that
> the checker be able to handle IUsernameHashedPassword credentials,
> which yours doesn't.
> 
> The reporting for this case could probably be improved.  If there is
> no checker registered which can handle the kind of credentials being
> used, it's probably a programming error, and the programmer should be
> told about it.
> 
> Jean-Paul

Thanks for the quick response, Jp!  I was under the impression that
this was just a basic auth example -- so if the basic auth thingy
is getting a plain text (uuencoded, same thing) password from the
app, why would it hash it before it gives it to the checker?
Auggh!  I can see the checker *storing* the password hashed
(which my "production" checker does, using sha), but it seems to
me pretty brain-dead to use hashed passwords over http when
plaintext passwords over https are way, way more secure
(and then all the checker has to deal with is plaintext passwds,
which it can store hashed for extra security).

Steve



From stephen.c.waterbury at nasa.gov  Thu Feb  8 12:26:19 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 12:26:19 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CB4F12.7010609@nasa.gov>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
	<45CB4F12.7010609@nasa.gov>
Message-ID: <45CB5D3B.9030408@nasa.gov>

Stephen Waterbury wrote:
> Jean-Paul Calderone wrote:
>> On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury 
>> <stephen.c.waterbury at nasa.gov> wrote:
>>> Here's a simple self-contained example of a database
>>> checker that's essentially identical to the one I
>>> use with my code which works with web but not with the web2
>>> auth example (i.e., httpauth.tac).  Perhaps someone familiar
>>> with cred and web2 could suggest how I might fix it?
>>>
>>> The only changes needed to make the web2 auth example
>>> use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>>> are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>>> into the same directory.  The test_dbchecker.py script is just
>>> a simple test to show that DbChecker returns an AvatarId
>>> when given a credential with correct username and password
>>> values.
>>>
>>> TIA for any help with this.
>>>
>>
>> Hey Steve,
>>
>> Aside from the cred questions/issues you raised in the first email
>> (some of which I think are valid), I think the main problem you're
>> running into is that HTTP digest authentication is being used, but
>> the checker you wrote can't handle this: digest auth requires that
>> the checker be able to handle IUsernameHashedPassword credentials,
>> which yours doesn't.
>>
>> The reporting for this case could probably be improved.  If there is
>> no checker registered which can handle the kind of credentials being
>> used, it's probably a programming error, and the programmer should be
>> told about it.
>>
>> Jean-Paul
> 
> Thanks for the quick response, Jp!  I was under the impression that
> this was just a basic auth example -- so if the basic auth thingy
> is getting a plain text (uuencoded, same thing) password from the
> app, why would it hash it before it gives it to the checker?
> Auggh!  I can see the checker *storing* the password hashed
> (which my "production" checker does, using sha), but it seems to
> me pretty brain-dead to use hashed passwords over http when
> plaintext passwords over https are way, way more secure
> (and then all the checker has to deal with is plaintext passwds,
> which it can store hashed for extra security).

Well, that was an incorrect and non-sequitur reply on my part,
so apologies for that!

I still think HTTP digest authentication is not very useful,
but I do understand why web2 implements it, because it's part
of the spec.  No more griping, for now -- and I should say that
everything *else* about web2 looks great so far!  :)

Steve



From sflist at ihonk.com  Thu Feb  8 13:19:39 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 08 Feb 2007 10:19:39 -0800
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <1170958779.26020.73.camel@lothar>

On Thu, 2007-02-08 at 12:14 +0000, Martin Evans wrote:
> Are there any samples on how best to interact with logging?
> 
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file 
> names on a daily basis. I would also probably then wish to delete 
> logs older than 14 days.
> 
> I'm not sure how safe it would be to just keep calling startLogging() 
> with a different file name mid-session. I realise there has been some 
> discussion about this area recently.

Twisted includes a class, twisted.python.logfile.LogFile, which
implements rotation. It does not, however, do auto-deletion. So I did
this on Twisted 2.5 (no idea if 2.4's any different), which saves x old
logs. If you want to discriminate by age, I'd suggest subclassing
logfile.DailyLogFile and using a similar approach.

-------------

import os
from twisted.python import logfile, threadable

class RotatingCleaningLogFile(logfile.LogFile):
    """ Deletes old logs. If maxOldLogs<1, doesn't delete old logs."""
    def __init__(self, name, directory, maxOldLogs=0,
                 rotateLength=1000000, defaultMode=None):
        logfile.LogFile.__init__(self, name, directory, rotateLength,
                                 defaultMode)
        self.maxOldLogs = maxOldLogs

    def rotate(self):
        logfile.LogFile.rotate(self)
        if self.maxOldLogs > 0:
            logs = self.listLogs()
            for i in logs:
                if i > self.maxOldLogs:
                    os.unlink('%s.%d' % (self.path, i))

threadable.synchronize(RotatingLogFile)

-------------

Good luck!

Steve




From sflist at ihonk.com  Thu Feb  8 13:35:03 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 08 Feb 2007 10:35:03 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service control
Message-ID: <1170959704.26020.89.camel@lothar>

Hi,

Itamar posted earlier in this list how to run Twisted as a service:

http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html

Now, I want to trap some Windows events and make some calls into my
Twisted app (calling disconnect() on a pb.PBClientFactory instance is
one example). I'll be setting up the trapping in the service code above,
though, so from looking at the howtos, it looks like the right thing for
me to do when I get some event is:

reactor.callFromThread(factory.disconnect)

The docs state, though, that the callable must be thread safe. Does that
mean I need to use threadable.synchronize() to put a lock around
factory.disconnect? Or whatever else I'm calling into?

Steve




From exarkun at divmod.com  Thu Feb  8 13:36:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Feb 2007 13:36:58 -0500
Subject: [Twisted-Python] startLogging
In-Reply-To: <1170958779.26020.73.camel@lothar>
Message-ID: <20070208183658.25807.921930257.divmod.quotient.14774@ohm>

On Thu, 08 Feb 2007 10:19:39 -0800, Steve Freitas <sflist at ihonk.com> wrote:
>On Thu, 2007-02-08 at 12:14 +0000, Martin Evans wrote:
>> Are there any samples on how best to interact with logging?
>>
>> My server needs to log quite a few items, as such the log file is
>> growing quite quickly and I would like to be able to switch file
>> names on a daily basis. I would also probably then wish to delete
>> logs older than 14 days.
>>
>> I'm not sure how safe it would be to just keep calling startLogging()
>> with a different file name mid-session. I realise there has been some
>> discussion about this area recently.
>
>Twisted includes a class, twisted.python.logfile.LogFile, which
>implements rotation. It does not, however, do auto-deletion. So I did
>this on Twisted 2.5 (no idea if 2.4's any different), which saves x old
>logs. If you want to discriminate by age, I'd suggest subclassing
>logfile.DailyLogFile and using a similar approach.
>

FWIW, there's a patch which adds similar functionality in the tracker
(or maybe it has been applied to trunk by now, I can't remember).  So
in the next Twisted release this will probably be available, although
it is not yet clear how it will be exposed via the twistd commandline.

Jean-Paul



From glyph at divmod.com  Thu Feb  8 15:40:50 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 08 Feb 2007 20:40:50 -0000
Subject: [Twisted-Python] Something strange about cred
Message-ID: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>

On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:

>P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
>doesn't allow that.  :(

Clearly you're allowed to exchange messages with dangerous subversives like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/6e8ef308/attachment.htm 

From stephen.c.waterbury at nasa.gov  Thu Feb  8 16:16:12 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 16:16:12 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
References: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
Message-ID: <45CB931C.5060409@nasa.gov>

glyph at divmod.com wrote:
> On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:
> 
>> P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
>> doesn't allow that.  :(
> 
> Clearly you're allowed to exchange messages with dangerous subversives
> like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)

Heh -- unfortunately, running one's own SMTP service is a Big Hairy
Deal as well.  In ze old days, everybody used to be able to run
their own sendmail, but now you have to have an account on a
NASA/GSFC smtp server and send from that ... bah!  :P

I should quit bitching, just ssh to my home machine and use an
IRC client from there ... guess I'm lazy.  Whining is too much fun.  ;)

Cheers,
Steve



From njp at njp.us  Thu Feb  8 16:21:31 2007
From: njp at njp.us (Norm Petterson)
Date: Thu, 8 Feb 2007 16:21:31 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
References: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
Message-ID: <9670a730702081321k4fa3aa11ka16811390b4a916d@mail.gmail.com>

+1 on the IRC-via-SMTP proxy!

On 2/8/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:
>
> >P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
> >doesn't allow that.  :(
>
> Clearly you're allowed to exchange messages with dangerous subversives
> like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/7f8460ce/attachment.htm 

From daedalus at eigenmagic.com  Thu Feb  8 16:31:47 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 09 Feb 2007 08:31:47 +1100
Subject: [Twisted-Python] Support for ICMP ping?
In-Reply-To: <200609111657.11790.ncesar@lunix.com.ar>
References: <200609111657.11790.ncesar@lunix.com.ar>
Message-ID: <1170970307.13507.11.camel@fnord.melbourne.eigenmagic.net>

On Mon, 2006-09-11 at 16:57 -0300, Nicolas D. Cesar wrote:
> I've been googling if there is any 'ICMP ping' support in Twisted. I've 
> encounter ancient replies:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2003-August/005542.html
> 
> I wonder if today is any ICMP support. I've tried to search the source 
> tree[1], and doesn't seem.
> 
> My actual needs is creating a DeferredList with "ping-testers" for different 
> IPs, just to check if there up or not. 

I'm a little behind in my reading, but this caught my eye. I've written
a twisted based ICMP module for our seafelt software that I'm willing to
share with people, if you're still looking for one. The purpose for
writing it is very similar to what you've described here, so it may suit
your purposes.

-- 
Justin Warren <daedalus at eigenmagic.com>



From stephen.c.waterbury at nasa.gov  Thu Feb  8 17:51:02 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 17:51:02 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
Message-ID: <45CBA956.3000607@nasa.gov>

Jean-Paul Calderone wrote:
> ... I think the main problem you're
> running into is that HTTP digest authentication is being used  ...

*So* (for anybody still listening ;) I finally figured out the
implication of Jp's comment:  all I had to do was remove the
digest.DigestCredentialFactory('md5', 'My Realm') factory
instance from HTTPAuthResource's list of credentialFactories
and bingo, we're in basic auth mode and my checker works
with the web2 auth example -- yay!

That wasn't obvious to me from HTTPAuthResource's doc
string nor from the example docs, but arguably I should have
guessed it (sooner).

Anyway, I'm happy now -- thanks, web2 team!

Death to HTTP digest authentication!

Cheers,
Steve



From dreid at dreid.org  Thu Feb  8 19:13:03 2007
From: dreid at dreid.org (David Reid)
Date: Thu, 8 Feb 2007 16:13:03 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CBA956.3000607@nasa.gov>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
	<45CBA956.3000607@nasa.gov>
Message-ID: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:

> Jean-Paul Calderone wrote:
>> ... I think the main problem you're
>> running into is that HTTP digest authentication is being used  ...
>
> *So* (for anybody still listening ;) I finally figured out the
> implication of Jp's comment:  all I had to do was remove the
> digest.DigestCredentialFactory('md5', 'My Realm') factory
> instance from HTTPAuthResource's list of credentialFactories
> and bingo, we're in basic auth mode and my checker works
> with the web2 auth example -- yay!

Why doesn't your DB Checker just support both interfaces?  
IUsernamePassword, and IUsernameHashedPassword,
doing the right thing depending on the interface provided by the  
credentials input.  Or, do the same thing regardless, because they  
provide compatible checkPassword interfaces.  You'd have to read the  
password from the DB here, but I don't see why that should concern  
you.  And the ability to use Digest auth would provide all around  
better security.

> That wasn't obvious to me from HTTPAuthResource's doc
> string nor from the example docs, but arguably I should have
> guessed it (sooner).

> Anyway, I'm happy now -- thanks, web2 team!

You're welcome, sorry I didn't get a chance to chime in on this
discussion earlier.

> Death to HTTP digest authentication!

I don't know, I definitely prefer digest authentication[1] to sending
my password in plaintext[2]

>
> Cheers,
> Steve
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

David Reid
http://dreid.org/

[1] I may be biased, i've spent a great deal of time on web2's digest  
implementation.  In fact, all the work put into web2's HTTP auth  
support was so I could do digest, and one day Kerberos.

[2] Yes I know base64 isn't plaintext, but it might as well be.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFy7ydrsrO6aeULcgRApErAJ9ER5Mi6HAdBP+7hku03n3DUiskigCfQgjq
bp1IMXp0OixUOxkZoS0mn3g=
=IYzd
-----END PGP SIGNATURE-----



From slowtech.chen at yahoo.com  Thu Feb  8 20:57:51 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 17:57:51 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <533353.23304.qm@web59111.mail.re1.yahoo.com>

From: Thomas Herv? <therve at free.fr>
>I guess you use adbapi ? The performance are generally not a problem with db
>queries because most of the job is done on the DB, not on the client. I've got
>servers that makes hundreds requests against Postgres/MySQL/sqlite without
>problems.

Yes, I will use adbapi and MySQL, good to hear that.

regards,
Chen





 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/664bdf80/attachment.htm 

From slowtech.chen at yahoo.com  Thu Feb  8 21:02:05 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 18:02:05 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <267279.22866.qm@web59107.mail.re1.yahoo.com>

From: Mark Leonard <mwl at point45.com>
>If you're not running Python >= 2.5.0 this might be relevant:
>http://evanjones.ca/python-memory.html

Yes, I am using Python 2.4., I'll dig into it, thanks for the pointing

regards,
Chen









 
____________________________________________________________________________________
Sucker-punch spam with award-winning protection. 
Try the free Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/features_spam.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070208/de783ac6/attachment.htm 

From waterbug at pangalactic.us  Thu Feb  8 22:01:02 2007
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 08 Feb 2007 22:01:02 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
Message-ID: <45CBE3EE.5090009@pangalactic.us>

David Reid wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> 
> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
> 
>> Jean-Paul Calderone wrote:
>>> ... I think the main problem you're
>>> running into is that HTTP digest authentication is being used  ...
>>
>> *So* (for anybody still listening ;) I finally figured out the
>> implication of Jp's comment:  all I had to do was remove the
>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>> instance from HTTPAuthResource's list of credentialFactories
>> and bingo, we're in basic auth mode and my checker works
>> with the web2 auth example -- yay!
> 
> Why doesn't your DB Checker just support both interfaces? 
> IUsernamePassword, and IUsernameHashedPassword,
> doing the right thing depending on the interface provided by the 
> credentials input.  Or, do the same thing regardless, because they 
> provide compatible checkPassword interfaces.  You'd have to read the 
> password from the DB here, but I don't see why that should concern you.  
> And the ability to use Digest auth would provide all around better 
> security.

Thanks, David, but for my application it isn't useful.  IMNSHO, digest
auth only gives an illusion of good security -- it's encrypted, right? 
But I regard it as a waste of time, and the time that I have to work
on the actual logic of my application is in short supply as it is.

Digest auth was invented in 1993, well before widespread open source
implementation of strong asymmetric key technologies, and digest auth
is a technology that can be broken by determined hackers.  I don't
intend to bother with it -- especially since good transport layer
encryption technology is now quite easy to use.

I prefer to exclude digest auth completely from any of my applications,
as I am campaigning against its use.

>> That wasn't obvious to me from HTTPAuthResource's doc
>> string nor from the example docs, but arguably I should have
>> guessed it (sooner).
> 
>> Anyway, I'm happy now -- thanks, web2 team!
> 
> You're welcome, sorry I didn't get a chance to chime in on this
> discussion earlier.

Yes, it would have saved me half a day off-and-on of head-scratching.

>> Death to HTTP digest authentication!
> 
> I don't know, I definitely prefer digest authentication[1] to sending
> my password in plaintext[2]

I use either plaintext basic auth (if the need is only for user
identification, not security) or transport layer asymmetric key
encryption (if the resource needs security).  If it needs security,
it needs real security, and since twisted makes transport layer
asymmetric key encryption (e.g., openssl) quite easy to use, the
only reason I can see for bothering with digest auth is if you
have either some legacy stuff that needs it (which I don't) or
a pointy-haired boss who insists on it (time to look for another
job! ... but one doesn't always have that opportunity, of course).
There might be other use-cases, but I have surrounded them with
a Somebody Else's Problem Field, so they are invisible to me.  ;)

Thanks for all your good work on web2 -- it is appreciated!  :)

Cheers,
Steve



From p.mayers at imperial.ac.uk  Fri Feb  9 06:24:29 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 09 Feb 2007 11:24:29 +0000
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
Message-ID: <45CC59ED.9030909@imperial.ac.uk>

David Reid wrote:
> 
>> Death to HTTP digest authentication!
> 
> I don't know, I definitely prefer digest authentication[1] to sending
> my password in plaintext[2]

+1

web2 auth is a much better architecture.

I only spent a few hours looking at it (primarily looking at how Apples 
CalDAV server implemented SPNEGO - very neat) but it seemed to me that 
it could issue multiple WWW-Authenticate headers and the browser should 
pick and reply to the appropriate one.

Was my understanding correct? If so, why did the digest checker cause this?



From mwl at point45.com  Fri Feb  9 10:04:06 2007
From: mwl at point45.com (Mark Leonard)
Date: Fri, 09 Feb 2007 17:04:06 +0200
Subject: [Twisted-Python] Possible trial -u / threads bug
Message-ID: <45CC8D66.9060105@point45.com>

Hi,

I'm encountering a problem when using deferToThread in a unit test and 
running it with trial -u.

The code below demonstrates the problem. It fails (by timing out) on the 
second pass.

It seems to fail reliably on Twisted 2.5.0 (Python 2.5.0), but on a 
Twisted 2.0.1 (Python 2.4.1) installation it works just fine.

I think the problem is related to trial's cleanup of the threadpool. I 
did try (as a test) add reactor.threadpool.stop() to tearDown and 
reactor.threadpool.start() to setUp, but it had no effect on the second 
pass failure.

Can anybody confirm the problem and, if so, should I create a ticket for it?

Thanks,
-Mark

===

from twisted.trial import unittest
from twisted.internet.threads import deferToThread

from time import sleep

def blockingFunc():
     sleep(0.1)

class DeferToThreadTestCase(unittest.TestCase):

     def testDeferToThread(self):
         return deferToThread(blockingFunc)




From itamar at itamarst.org  Fri Feb  9 10:57:36 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Feb 2007 10:57:36 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r19592 - Author: therve
In-Reply-To: <E1HFXNC-0000Cl-00@wolfwood>
References: <E1HFXNC-0000Cl-00@wolfwood>
Message-ID: <1171036656.1073.7.camel@localhost.localdomain>

On Fri, 2007-02-09 at 08:09 -0700, Thomas Herve wrote:

> +                    # If the test failed the process may already be dead
> +                    # The error here is only noise
> +                    pass

Actually it's the other way around, I think...




From itamar at itamarst.org  Fri Feb  9 10:58:56 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Feb 2007 10:58:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r19594 - Initial observer
In-Reply-To: <E1HFXrV-00017F-00@wolfwood>
References: <E1HFXrV-00017F-00@wolfwood>
Message-ID: <1171036736.1073.9.camel@localhost.localdomain>

As long as you're at it, all the horrible code in emit ideally should be
factored out into a utility function, instead of being duplicated.




From dreid at dreid.org  Fri Feb  9 11:18:44 2007
From: dreid at dreid.org (David Reid)
Date: Fri, 9 Feb 2007 08:18:44 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CBE3EE.5090009@pangalactic.us>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
	<45CBE3EE.5090009@pangalactic.us>
Message-ID: <032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>


On Feb 8, 2007, at 7:01 PM, Stephen Waterbury wrote:

> David Reid wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
>>> Jean-Paul Calderone wrote:
>>>> ... I think the main problem you're
>>>> running into is that HTTP digest authentication is being used  ...
>>>
>>> *So* (for anybody still listening ;) I finally figured out the
>>> implication of Jp's comment:  all I had to do was remove the
>>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>>> instance from HTTPAuthResource's list of credentialFactories
>>> and bingo, we're in basic auth mode and my checker works
>>> with the web2 auth example -- yay!
>> Why doesn't your DB Checker just support both interfaces?  
>> IUsernamePassword, and IUsernameHashedPassword,
>> doing the right thing depending on the interface provided by the  
>> credentials input.  Or, do the same thing regardless, because they  
>> provide compatible checkPassword interfaces.  You'd have to read  
>> the password from the DB here, but I don't see why that should  
>> concern you.  And the ability to use Digest auth would provide all  
>> around better security.
>
> Thanks, David, but for my application it isn't useful.  IMNSHO, digest
> auth only gives an illusion of good security -- it's encrypted,  
> right? But I regard it as a waste of time, and the time that I have  
> to work
> on the actual logic of my application is in short supply as it is.

Well relative merits of Digest authentication aside, it's trivial to  
make your DbChecker support the IUsernameHashedPassword of which  
there are providers other than web2's DigestedCredentials.  So I feel  
like you're really missing out on some of the flexibility that is  
cred, but you seem to genuinely have no desire (and/or time) for  
anything more than basic auth so I won't harp on this point anymore.

--
David Reid
http://dreid.org/


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070209/444c84b7/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070209/444c84b7/attachment.pgp 

From dreid at dreid.org  Fri Feb  9 11:19:38 2007
From: dreid at dreid.org (David Reid)
Date: Fri, 9 Feb 2007 08:19:38 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CC59ED.9030909@imperial.ac.uk>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
	<45CC59ED.9030909@imperial.ac.uk>
Message-ID: <365F74BF-F15D-422F-969E-762F737CF77E@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 9, 2007, at 3:24 AM, Phil Mayers wrote:

> David Reid wrote:
>>> Death to HTTP digest authentication!
>> I don't know, I definitely prefer digest authentication[1] to sending
>> my password in plaintext[2]
>
> +1
>
> web2 auth is a much better architecture.
>
> I only spent a few hours looking at it (primarily looking at how  
> Apples CalDAV server implemented SPNEGO - very neat)

The way Apple's CalDAV server uses web2 auth is kind of broken,  
please don't use it as an example of how to use cred.  It does some  
very poor things because sometimes I'm an idiot.

> but it seemed to me that it could issue multiple WWW-Authenticate  
> headers and the browser should pick and reply to the appropriate one.

This is correct.

>
> Was my understanding correct? If so, why did the digest checker  
> cause this?

The problem wasn't with a Digest checker it was with the lack of a  
checker for the IUsernameHashedPassword credential interface.  You  
still need to have a checker that implements the interface of  
whatever you are getting back from ICredentialFactory.decode.  In  
basic this is IUsernamePassword, for digest this is  
IUsernameHashedPassword.

- --
David Reid
http://dreid.org/


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFzJ8frsrO6aeULcgRAmFUAJ4h2KV3NJzvC0E+tQwqLLjwrKxBdgCfZqNf
Jcj7qrA1eYMrxPNQpaZp6/w=
=uGwz
-----END PGP SIGNATURE-----



From therve at free.fr  Fri Feb  9 11:21:34 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 09 Feb 2007 17:21:34 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r19592 - Author: therve
In-Reply-To: <1171036656.1073.7.camel@localhost.localdomain>
References: <E1HFXNC-0000Cl-00@wolfwood>
	<1171036656.1073.7.camel@localhost.localdomain>
Message-ID: <20070209172134.z3nd6pkpb3wcsw88@wasabox.wasabout.net>

Quoting Itamar Shtull-Trauring <itamar at itamarst.org>:

> On Fri, 2007-02-09 at 08:09 -0700, Thomas Herve wrote:
>
>> +                    # If the test failed the process may already be dead
>> +                    # The error here is only noise
>> +                    pass
>
> Actually it's the other way around, I think...

Yes sorry, I was your comment in the tracker but after some verifications I'm
convinced myself it was this way. Maybe it's a good candidate for revert...

Does anyone knowing this code can comment ?

-- 
Thomas





From iacovou at gmail.com  Fri Feb  9 13:05:29 2007
From: iacovou at gmail.com (kgi)
Date: Fri, 9 Feb 2007 20:05:29 +0200
Subject: [Twisted-Python] Question about Foolscap Slicers and Unslicers.
Message-ID: <200702092005.29807.iacovou@gmail.com>


Hi all (and Brian in particular);

I've got a few questions about Foolscap Slicers and Unslicers. The 
documentation I'm reading is at:

  http://twistedmatrix.com/~warner/Foolscap/using-pb.html

In it, a code fragment of custom slicing is given:

    class ListSlicer(BaseSlicer):
        opentype = ("list",)
        slices = list

The docs then say in the next paragraph:

"""
Slicer registration can be either explicit or implicit. In this example, an 
implicit registration is used: by setting the slices attribute to the list 
type, the BaseSlicer's metaclass automatically registers the mapping from 
list to ListSlicer.

To explicitly register a slicer, just leave opentype set to None (to disable 
auto-registration), and then register the slicer manually.
"""

... and then quote an example of this:

    class TupleSlicer(BaseSlicer):
        opentype = ("tuple",)
        slices = None
        ...
    registerAdapter(TupleSlicer, tuple, pb.ISlicer)

The problem is that the code sets *slices* to None, but the text talks about 
setting *opentype* to None. I'd be inclined to think the code is right, 
except the text says the same sort of thing happens later on when talking 
about Unslicers:

"""
If the Unslicer has a non-None class attribute named opentype, then it is 
automatically registered. If it does not have this attribute (or if it is set 
to None), then no registration is performed, and the Unslicer must be 
manually registered:
"""

Which is it?

Actually, my real question is: what are the exact uses of "opentype" 
and "slices" respectively? I suspect that "slices" refers to the type being 
sliced, and "opentype" is something low-level to do with the slicing process 
(maybe the symbol inserted in the output stream?). Why is is (seemingly 
always) a 1-tuple?

Lastly (secondly?) there is some text in the document:

  http://twistedmatrix.com/~warner/Foolscap/specifications/pb.html

under the paragraph heading, "Arbitrary Instances are NOT serialized" that 
says:

"""
Both ends must be willing to transport the object. The sending side expresses 
this by marking the class (subclassing Copyable, or registering an ISlicer 
adapter).
"""

To me this appears to imply that each of the various ways of transporting a 
non-fundamental type is as good as any other: if I have a subclassed Copyable 
then I wouldn't need an ISlicer adapter, and vice versa.

Is this true? Does this mutual relationship hold true for ISlicer-registered 
types and types making use of foolscap.registerRemoteCopyFactory()? I'm 
asking because I have some types for which I have called 
registerRemoteCopyFactory() yet for which I get an exception saying that the 
object is not sliceable (implying that I need to take the ISlicer approach 
and that the registerRemoteCopyFactory() approach is no longer good enough).

I'm using Python 2.4, Twisted 2.5.0 and head-of-SVN Foolscap.

Cheers,

Ricky



From stephen.c.waterbury at nasa.gov  Fri Feb  9 15:40:37 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 09 Feb 2007 15:40:37 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>	<45CBE3EE.5090009@pangalactic.us>
	<032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>
Message-ID: <45CCDC45.3070207@nasa.gov>

David Reid wrote:
> 
> On Feb 8, 2007, at 7:01 PM, Stephen Waterbury wrote:
> 
>> David Reid wrote:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
>>>> Jean-Paul Calderone wrote:
>>>>> ... I think the main problem you're
>>>>> running into is that HTTP digest authentication is being used  ...
>>>>
>>>> *So* (for anybody still listening ;) I finally figured out the
>>>> implication of Jp's comment:  all I had to do was remove the
>>>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>>>> instance from HTTPAuthResource's list of credentialFactories
>>>> and bingo, we're in basic auth mode and my checker works
>>>> with the web2 auth example -- yay!
>>> Why doesn't your DB Checker just support both interfaces? 
>>> IUsernamePassword, and IUsernameHashedPassword,
>>> doing the right thing depending on the interface provided by the 
>>> credentials input.  Or, do the same thing regardless, because they 
>>> provide compatible checkPassword interfaces.  You'd have to read the 
>>> password from the DB here, but I don't see why that should concern 
>>> you.  And the ability to use Digest auth would provide all around 
>>> better security.
>>
>> Thanks, David, but for my application it isn't useful.  IMNSHO, digest
>> auth only gives an illusion of good security -- it's encrypted, right? 
>> But I regard it as a waste of time, and the time that I have to work
>> on the actual logic of my application is in short supply as it is.
> 
> Well relative merits of Digest authentication aside, it's trivial to 
> make your DbChecker support the IUsernameHashedPassword of which there 
> are providers other than web2's DigestedCredentials.  So I feel like 
> you're really missing out on some of the flexibility that is cred, but 
> you seem to genuinely have no desire (and/or time) for anything more 
> than basic auth so I won't harp on this point anymore.

Two things I should emphasize:

(1)  I do appreciate "the flexibility that is cred" -- even though I do
not intend to use digest auth, I will most likely use other auth methods
(e.g., LDAP) -- but only over an encrypted transport.  Cred's
flexibility and other well designed architectural features are
the main reasons I use Twisted.

(2)  As I mentioned in my last message, I am campaigning against the
use of digest auth here at NASA/GSFC, because when things here need
protection, they need the best protection available, and that is *not*
digest auth.  The consequences for security compromises can be pretty
dire -- e.g.:

   (a) NASA system compromises can be front-page news
       (along with other NASA-related misadventures, as we've seen over
       the past couple days ;)
   (b) government employees are personally liable for the release
       of ITAR data -- if it goes to the wrong people, the NASA
       employee responsible can get federal *prison* time.

So you can see why the illusion of security that digest auth
gives to naive people is not good enough for my apps or for any
serious commercial or government applications.  It might be useful
for free on-line gaming communities, though.  ;)

Cheers,
Steve



From abierbaum at gmail.com  Fri Feb  9 16:07:48 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Fri, 9 Feb 2007 15:07:48 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
Message-ID: <bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>

On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > > someone
> > > > has written a plugin for nose that allows it to test twisted code.  I
> > > > don't think it looks as nice as trial, but it should work for the
> > > > basics.    You can see it here:
> > > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> > >
> > > UGH
> > >
> > > def threaded_reactor():
> >
> > Yep.  Not pretty by any means. :(
> >
> > I am sure that any suggestions you have to make it better would be
> > well-recieved by the nose project and the plugin's author.   :)
> >
>
> I still need to spend some more time looking at nose, but in this
> particular case I think the plugin is unnecessary.
>
> If your tests subclass twisted.trial.unittest.TestCase, then they
> should take care of the reactor themselves.[1]

I tried this and things did not work out well.  I am currently getting
some exceptions inside nose that make me think twisted.trial may have
modified the unittest state in a way that it didn't expect.

It is always possible though that this is just a side effect of my
testing method.  Has anyone else tried using trial unittest's directly
inside nose?

-Allen



From abierbaum at gmail.com  Fri Feb  9 16:39:53 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Fri, 9 Feb 2007 15:39:53 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
	<bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>
Message-ID: <bea9869d0702091339i53655227j5351e8abd6ea6f6@mail.gmail.com>

Ok, so I found a way to fix this.  I now have nose running with a
twisted-based test derived from twisted.trial.unittest.TestCase.

I had to patch nose to get this to work:  See:
http://groups.google.com/group/nose-users/browse_frm/thread/0b8e6d7c165032ec

Thanks for all the feedback.  Hopefully things will just work now. :)

-A

On 2/9/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> > On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > > > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > > > someone
> > > > > has written a plugin for nose that allows it to test twisted code.  I
> > > > > don't think it looks as nice as trial, but it should work for the
> > > > > basics.    You can see it here:
> > > > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> > > >
> > > > UGH
> > > >
> > > > def threaded_reactor():
> > >
> > > Yep.  Not pretty by any means. :(
> > >
> > > I am sure that any suggestions you have to make it better would be
> > > well-recieved by the nose project and the plugin's author.   :)
> > >
> >
> > I still need to spend some more time looking at nose, but in this
> > particular case I think the plugin is unnecessary.
> >
> > If your tests subclass twisted.trial.unittest.TestCase, then they
> > should take care of the reactor themselves.[1]
>
> I tried this and things did not work out well.  I am currently getting
> some exceptions inside nose that make me think twisted.trial may have
> modified the unittest state in a way that it didn't expect.
>
> It is always possible though that this is just a side effect of my
> testing method.  Has anyone else tried using trial unittest's directly
> inside nose?
>
> -Allen
>



From lee.a.connell at gmail.com  Sat Feb 10 15:19:27 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 15:19:27 -0500
Subject: [Twisted-Python] wxReactor and twisted question
Message-ID: <001501c74d50$c44ea7c0$0200a8c0@leelaptop>

I want to access protocol and transport from within my wxPython app.  How do
I do this?  Since the ClientFactory is not an instance I can?t call the
sendLine() methods on it.  I?m not sure how to access protocol and factory
from within a wx.App class.  I?ve attached my code.

 

-Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070210/f8dc1331/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ChatClient.py
Type: application/octet-stream
Size: 3354 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070210/f8dc1331/attachment.obj 

From lee.a.connell at gmail.com  Sat Feb 10 17:16:06 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 17:16:06 -0500
Subject: [Twisted-Python] Howto access protocol outside of the class
Message-ID: <002701c74d61$241411d0$0200a8c0@leelaptop>

I have a class: class ForemClient(LineReceiver):

 

 

I am using wxPython to build a GUI.  I am having the hardest time trying to
access the instance of this class so I can call the transport methods from a
wxPython button event.  How can I make this accessible outside of the class
itself?  I seen that ClientCreator could be used for this, but I can?t find
an example of using the instance outside of itself.  Anyone able to help?

 

    chat = ClientCreator(reactor, ForemClient)

    d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())

    reactor.run()


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070210/ea81ec89/attachment.htm 

From lee.a.connell at gmail.com  Sat Feb 10 17:18:04 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 17:18:04 -0500
Subject: [Twisted-Python] wxreactor.install() issues
Message-ID: <002c01c74d61$58320cb0$0200a8c0@leelaptop>

When using wxreactor.install() on GUI apps it prevents the wx.xrc classes
from working right.  In my case I am subclassing the HtmlWindow class in my
.xrc file created with XRCed.  What happens here is it prevents wx.xrc from
recognizing whatever my subclass is.  If I take the wxreactor.install() out
it works just fine.


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070210/73fb8698/attachment.htm 

From teratorn at twistedmatrix.com  Sun Feb 11 00:01:36 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 10 Feb 2007 23:01:36 -0600
Subject: [Twisted-Python] Howto access protocol outside of the class
In-Reply-To: <002701c74d61$241411d0$0200a8c0@leelaptop>
References: <002701c74d61$241411d0$0200a8c0@leelaptop>
Message-ID: <op.tnkiwyuwy3d107@office2>

On Sat, 10 Feb 2007 16:16:06 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I have a class: class ForemClient(LineReceiver):
>
>
>
> I am using wxPython to build a GUI.  I am having the hardest time trying  
> to
> access the instance of this class so I can call the transport methods  
> from a
> wxPython button event.  How can I make this accessible outside of the  
> class
> itself?  I seen that ClientCreator could be used for this, but I can?t  
> find
> an example of using the instance outside of itself.  Anyone able to help?
>
>
>     chat = ClientCreator(reactor, ForemClient)
>
>     d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())
>
>     reactor.run()

You already asked this same basic question two hours ago... Not sure why  
you would re-phrase it here.

Anyway, the answer is to save the protocol instance when it gets created.  
This happens in the buildProtocol() method on your factory.

By default, the factory creates the protocol instance and returns it to  
Twisted. It's not available to user-level code directly.

So you should implement your own buildProtocol(). Have a look at  
Factory.buildProtocol and duplicate the things that it does. Then you are  
free to save a reference to the newly created protocol in any way you see  
fit.

Cheers,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at twistedmatrix.com  Sun Feb 11 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1171170301.91.1165811963@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-04 through 2007-02-11
Bugs opened: 10    Bugs closed: 6  Total open bugs: 829 (+4)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -1  |Highest:  -3          |Core:                +3  
|Enhancement:  +5  |High:     -1          |Release Management:  +2  
                   |Normal:   +4          |Trial:               +1  
                   |Low:      +4          |Web:                 +1  
                                          |Web2:                -3  


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2439] doc/core/examples/ampserver.py:25: undefined name 'total' (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2439

[#2441] release script uses os.system with non-POSIX shell code (opened by radix)
    defect          release management http://twistedmatrix.com/trac/ticket/2441

[#2443] Trial tutorial (opened by therve)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2443

[#2444] Merge Divmod.Sine sip.py into twisted.protocols.sip (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2444

[#2445] trial dumps on frame error (opened by gardnerpomper) (CLOSED, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2445

[#2446] Python 2.4 has poor round-trip behaviour for xmlrpclib.DateTime; Twisted should work around. (opened by kgi)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2446

                    ===== Low =====
[#2437] Support for UDP-Lite (opened by derfel)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2437

[#2438] Get rid of references to twisted (at) itamarst.org email address from code (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2438

[#2440] threadedwin32eventreactor.py (opened by tdickenson)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2440

[#2442] release script uses os.system (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2442



Closed Bugs
______________________
                    ===== Highest =====
[#2102] Access log has multiple copies of the same entry (opened by Cyrus Daboo, closed by therve, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2102

[#1095] Adding support for rotation on a fixed number of logs (opened by lstep, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1095

[#1921] TestTwoProcessesPosix.tearDown has a gratuitous print statement (opened by spiv, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1921

                    ===== High =====
[#2042] twisted.web2.auth.wrapper's interface is backwards (opened by glyph, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2042

                    ===== Normal =====
[#2445] trial dumps on frame error (opened by gardnerpomper, closed by exarkun, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2445

[#1827] web2.auth.wrapper.UnauthenticatedResource does not reply with allowed methods for wrapped resource (opened by troy at osc.edu, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1827





From teratorn at twistedmatrix.com  Sun Feb 11 01:35:41 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 11 Feb 2007 00:35:41 -0600
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <1170959704.26020.89.camel@lothar>
References: <1170959704.26020.89.camel@lothar>
Message-ID: <op.tnkm9rayy3d107@office2>

On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Hi,
>
> Itamar posted earlier in this list how to run Twisted as a service:
>
> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
>
> Now, I want to trap some Windows events and make some calls into my
> Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> one example). I'll be setting up the trapping in the service code above,
> though, so from looking at the howtos, it looks like the right thing for
> me to do when I get some event is:
>
> reactor.callFromThread(factory.disconnect)
>
> The docs state, though, that the callable must be thread safe. Does that
> mean I need to use threadable.synchronize() to put a lock around
> factory.disconnect? Or whatever else I'm calling into?
>
> Steve

I guess these are the docs you're refering to:

http://twistedmatrix.com/projects/core/documentation/howto/threading.html

Actually, they don't say that the callable must be thread-safe. Indeed,  
the only reason you need to use callFromThread is if the callable *is not*  
thread-safe. What callFromThread does is schedule the call to take place  
within the main thread at the convenience of the reactor.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From einar at norsk-esport.no  Sun Feb 11 07:10:04 2007
From: einar at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Sun, 11 Feb 2007 13:10:04 +0100
Subject: [Twisted-Python] Removing cruft from logs
Message-ID: <45CF079C.10807@norsk-esport.no>

Hi,

I am currently developing an application which will first and foremost
be an xmlrpc server with an adbapi or sasync backend. The number of
xmlrpc-requests is expected to be up to around a hundred per second.
Unfortunately, the logging system by default logs the following for each
and every request, leading to ridiculous logfiles:

2007/02/11 12:54 CET [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[11/Feb/2007:11:54:57 +0000] "POST /RPC2 HTTP/1.0" 200 122 "-"
"xmlrpclib.py/1.0.1 (by www.pythonware.com)"

It seems that even if I define my own logservice, as per example 11-5 in
Abe Fettig's book, I am unable to catch and filter this logentry in the
emit function before it is written to file. So I guess there's another
LogObserver used by twistd, to which I have no direct access?

What would be the proper way to get rid of this cruft?

Cheers,
Einar S. Ids?




From teratorn at twistedmatrix.com  Sun Feb 11 09:29:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 11 Feb 2007 08:29:24 -0600
Subject: [Twisted-Python] Removing cruft from logs
In-Reply-To: <45CF079C.10807@norsk-esport.no>
References: <45CF079C.10807@norsk-esport.no>
Message-ID: <op.tnk87anfy3d107@office2>

On Sun, 11 Feb 2007 06:10:04 -0600, Einar S. Ids? <einar at norsk-esport.no>  
wrote:

> Hi,
>
> I am currently developing an application which will first and foremost
> be an xmlrpc server with an adbapi or sasync backend. The number of
> xmlrpc-requests is expected to be up to around a hundred per second.
> Unfortunately, the logging system by default logs the following for each
> and every request, leading to ridiculous logfiles:
>
> 2007/02/11 12:54 CET [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
> [11/Feb/2007:11:54:57 +0000] "POST /RPC2 HTTP/1.0" 200 122 "-"
> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>
> It seems that even if I define my own logservice, as per example 11-5 in
> Abe Fettig's book, I am unable to catch and filter this logentry in the
> emit function before it is written to file. So I guess there's another
> LogObserver used by twistd, to which I have no direct access?
>
> What would be the proper way to get rid of this cruft?
>
> Cheers,
> Einar S. Ids?

I take it you're using twistd? In that case, yes, twistd adds a log  
observer when it starts. There also isn't any supported way of getting  
access to it. This and other issues are an unfortunate component of the  
present Twisted reality :)

Here's a hack:

 from twisted.python import log
log.removeObserver(log.theLogPublisher.observers[0])

Then your custom observer should be the only one left.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sun Feb 11 09:37:17 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 09:37:17 -0500
Subject: [Twisted-Python] Howto access protocol outside of the class
In-Reply-To: <op.tnkiwyuwy3d107@office2>
References: <002701c74d61$241411d0$0200a8c0@leelaptop>
	<op.tnkiwyuwy3d107@office2>
Message-ID: <001101c74dea$218a0d50$0200a8c0@leelaptop>

Sorry for double posting, must have spaced it.  Thanks for reply.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Sunday, February 11, 2007 12:02 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Howto access protocol outside of the class

On Sat, 10 Feb 2007 16:16:06 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I have a class: class ForemClient(LineReceiver):
>
>
>
> I am using wxPython to build a GUI.  I am having the hardest time trying  
> to
> access the instance of this class so I can call the transport methods  
> from a
> wxPython button event.  How can I make this accessible outside of the  
> class
> itself?  I seen that ClientCreator could be used for this, but I can?t  
> find
> an example of using the instance outside of itself.  Anyone able to help?
>
>
>     chat = ClientCreator(reactor, ForemClient)
>
>     d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())
>
>     reactor.run()

You already asked this same basic question two hours ago... Not sure why  
you would re-phrase it here.

Anyway, the answer is to save the protocol instance when it gets created.  
This happens in the buildProtocol() method on your factory.

By default, the factory creates the protocol instance and returns it to  
Twisted. It's not available to user-level code directly.

So you should implement your own buildProtocol(). Have a look at  
Factory.buildProtocol and duplicate the things that it does. Then you are  
free to save a reference to the newly created protocol in any way you see  
fit.

Cheers,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 




From lee.a.connell at gmail.com  Sun Feb 11 10:34:40 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 10:34:40 -0500
Subject: [Twisted-Python] general documentation question
Message-ID: <001d01c74df2$25f16570$0200a8c0@leelaptop>

I am trying to get use to the documentation in twisted, as I am new to
python as well.  I am using a LineReceiver class for a client I am building.
There are some attributes like ?connected, delimiter, transport?.  I am
having a tough time finding them within the twisted documentation.  I?ve
looked at all subclasses that I can see that are related to LineReceiver and
can?t seem to find where they are defined.  I did find a twistedmatrix user
that has these listed, but how do I find this in official documentation?  

 

Here is the link I am referring too. HYPERLINK
"http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.h
tml#Protocol"http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocol
s.protocol.html#Protocol

 

-Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070211/ae57d214/attachment.htm 

From radix at twistedmatrix.com  Sun Feb 11 10:58:35 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 11 Feb 2007 10:58:35 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <001d01c74df2$25f16570$0200a8c0@leelaptop>
References: <001d01c74df2$25f16570$0200a8c0@leelaptop>
Message-ID: <60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>

On 2/11/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> I am trying to get use to the documentation in twisted, as I am new to
> python as well.  I am using a LineReceiver class for a client I am building.
>  There are some attributes like "connected, delimiter, transport".  I am
> having a tough time finding them within the twisted documentation.  I've
> looked at all subclasses that I can see that are related to LineReceiver and
> can't seem to find where they are defined.  I did find a twistedmatrix user
> that has these listed, but how do I find this in official documentation?
>
> Here is the link I am referring too.
> http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.html#Protocol

Yuck. That stuff is super old and I'm surprised it's still even there.

Anyway, it appears 'transport' is unfortunately not actually mentioned
anywhere where it should be in the API docs (which is the Protocol
class, probably). 'delimiter' is fortunately documented in the
LineReceiver class. I'm not sure 'connected' is actually public, but
even if it is it is a pretty useless attribute.

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From lee.a.connell at gmail.com  Sun Feb 11 11:12:47 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 11:12:47 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>
References: <001d01c74df2$25f16570$0200a8c0@leelaptop>
	<60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>
Message-ID: <002701c74df7$795ce360$0200a8c0@leelaptop>

Hi Christopher,

Thanks for response, yeah connected is public and it's useable, I use it to
check the connection state before sending any data through my wx GUI.  I
could just as easily create my own from the connectionMade member.  I was
just more curious of the documentation layout, because I'm going to be using
it a lot.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Sunday, February 11, 2007 10:59 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] general documentation question

On 2/11/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> I am trying to get use to the documentation in twisted, as I am new to
> python as well.  I am using a LineReceiver class for a client I am
building.
>  There are some attributes like "connected, delimiter, transport".  I am
> having a tough time finding them within the twisted documentation.  I've
> looked at all subclasses that I can see that are related to LineReceiver
and
> can't seem to find where they are defined.  I did find a twistedmatrix
user
> that has these listed, but how do I find this in official documentation?
>
> Here is the link I am referring too.
>
http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.ht
ml#Protocol

Yuck. That stuff is super old and I'm surprised it's still even there.

Anyway, it appears 'transport' is unfortunately not actually mentioned
anywhere where it should be in the API docs (which is the Protocol
class, probably). 'delimiter' is fortunately documented in the
LineReceiver class. I'm not sure 'connected' is actually public, but
even if it is it is a pretty useless attribute.

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineR
eceiver.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 




From exarkun at divmod.com  Sun Feb 11 14:13:19 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Feb 2007 14:13:19 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: 0
Message-ID: <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>

On Sun, 11 Feb 2007 11:12:47 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hi Christopher,
>
>Thanks for response, yeah connected is public and it's useable

If you can't find the documentation for it, how do you know it's public?

Jean-Paul



From einar.twisted at norsk-esport.no  Sun Feb 11 17:15:12 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-15?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Sun, 11 Feb 2007 23:15:12 +0100
Subject: [Twisted-Python] Removing cruft from logs
In-Reply-To: <op.tnk87anfy3d107@office2>
References: <45CF079C.10807@norsk-esport.no> <op.tnk87anfy3d107@office2>
Message-ID: <45CF9570.2040101@norsk-esport.no>

Eric Mangold wrote:
> I take it you're using twistd? In that case, yes, twistd adds a log
> observer when it starts. There also isn't any supported way of getting
> access to it. This and other issues are an unfortunate component of the
> present Twisted reality :)
> 
> Here's a hack:
> 
> from twisted.python import log
> log.removeObserver(log.theLogPublisher.observers[0])
> 
> Then your custom observer should be the only one left.
> 
> Hope that helps,
> --Eric Mangold
> Twisted/Win32 Co-Maintainer

Thank you for your answer! It's too bad that it isn't possible to
manipulate the default logger when using twistd.

I tried your hack, but even though it stops the twistd.log from spewing
cruft, I am unable to remove it from my own log. If I simply return from
emit(), nothing is printed, as expected. But if I don't return but
instead call log.fileObserver.emit(self, logEntryDict), both the line I
wish to log and the line I wish to get rid of are printed. It seems as
if both lines are printed as the result of one call to emit(). How can I
prevent the second from being printed?

Below is a simple working example.

Cheers,
Einar

******* Server ********

from twisted.application import internet, service, strports
from twisted.web import server, xmlrpc
from twisted.internet import protocol as tiprotocol, reactor, task
from twisted.python import log, logfile
import sys

class ErrorLog(log.FileLogObserver):
   def emit(self, logEntryDict):
      # We can take a look at the message we are asked to log
      # sys.stdout.write("MSG: ---->%s<----" %logEntryDict['message'])
      # Alternatively just return to have no lines logged
      # return
      log.FileLogObserver.emit(self, logEntryDict)

class ErrorLogService(service.Service):
   def __init__(self, logName, logDir):
      self.logName = logName
      self.logDir = logDir
      self.maxLogSize = 1000000

   def startService(self):
      self.logFile = logfile.LogFile(
         self.logName, self.logDir, rotateLength = self.maxLogSize)
      #self.logFile.rotate()


      self.log = ErrorLog(self.logFile)
      self.log.start()

   def stopService(self):
      self.log.stop()
      self.logFile.close()
      del(self.logFile)

class XmlRpcServer(xmlrpc.XMLRPC):
   def xmlrpc_test(self, data):
      log.msg("Received: %s" %data)
      return 2*data;

xmlServer = XmlRpcServer()
application = service.Application('MyApp')
serviceCollection = service.IServiceCollection(application)
xmlSite = server.Site(xmlServer)
xmlServer = strports.service("35550", xmlSite)

errorLogServer = ErrorLogService('myapp.err.log', './')

xmlServer.setServiceParent(application)
errorLogServer.setServiceParent(application)



****** Simple test ******
>>> import xmlrpclib
>>> s=xmlrpclib.Server('http://localhost:35550')
>>> s.test(1)
2

***** Results *******
The following two lines should be logged to myapp.err.log. I need to get
rid of the second:

2007/02/11 23:12 CET [HTTPChannel,1,127.0.0.1] Received: 1
2007/02/11 23:12 CET [HTTPChannel,1,127.0.0.1] 127.0.0.1 - -
[11/Feb/2007:22:12:19 +0000] "POST /RPC2 HTTP/1.0" 200 121 "-"
"xmlrpclib.py/1.0.1 (by www.pythonware.com)




From lee.a.connell at gmail.com  Sun Feb 11 17:19:08 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 17:19:08 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>
References: 0 <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>
Message-ID: <003f01c74e2a$a76c8b10$0200a8c0@leelaptop>

I have intellisense inside of the IDE I'm using, "Komodo"  If I do Protcol.
It shows me "connected" as an attribute, I'm using it in my code and it
works.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Sunday, February 11, 2007 2:13 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] general documentation question

On Sun, 11 Feb 2007 11:12:47 -0500, Lee Connell <lee.a.connell at gmail.com>
wrote:
>Hi Christopher,
>
>Thanks for response, yeah connected is public and it's useable

If you can't find the documentation for it, how do you know it's public?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 




From exarkun at divmod.com  Sun Feb 11 17:28:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Feb 2007 17:28:20 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <003f01c74e2a$a76c8b10$0200a8c0@leelaptop>
Message-ID: <20070211222820.25807.1651025374.divmod.quotient.18468@ohm>

On Sun, 11 Feb 2007 17:19:08 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>I have intellisense inside of the IDE I'm using, "Komodo"  If I do Protcol.
>It shows me "connected" as an attribute, I'm using it in my code and it
>works.

I'm sure Komodo just shows you all attributes, or perhaps all
attributes which do not begin with an underscore.  While this
is a reasonable rule of thumb, it is not without exceptions.
Ultimately, Twisted gets to decide what is public or not, not
Komodo.  So, if a Twisted developer points out something isn't
public, it's best to take their word for it. :)

Jean-Paul



From jml at mumak.net  Mon Feb 12 01:23:06 2007
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 12 Feb 2007 17:23:06 +1100
Subject: [Twisted-Python] Possible trial -u / threads bug
In-Reply-To: <45CC8D66.9060105@point45.com>
References: <45CC8D66.9060105@point45.com>
Message-ID: <d06a5cd30702112223g7d9ae91fsd5f02adf7acc39e7@mail.gmail.com>

On 2/10/07, Mark Leonard <mwl at point45.com> wrote:
> Hi,
>
> I'm encountering a problem when using deferToThread in a unit test and
> running it with trial -u.
>
> The code below demonstrates the problem. It fails (by timing out) on the
> second pass.
>
> It seems to fail reliably on Twisted 2.5.0 (Python 2.5.0), but on a
> Twisted 2.0.1 (Python 2.4.1) installation it works just fine.
>
> I think the problem is related to trial's cleanup of the threadpool. I
> did try (as a test) add reactor.threadpool.stop() to tearDown and
> reactor.threadpool.start() to setUp, but it had no effect on the second
> pass failure.
>
> Can anybody confirm the problem and, if so, should I create a ticket for it?
>

Hey Mark,

I've run your code against trunk, and the problem definitely occurs
there. This definitely is a bug -- if a test passes without -u, it
should pass with -u.

Please file a bug at http://twistedmatrix.com/trac/newticket and make
sure that it's in the "Trial" component.

cheers,
jml



From sflist at ihonk.com  Mon Feb 12 03:11:06 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 12 Feb 2007 00:11:06 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <op.tnkm9rayy3d107@office2>
References: <1170959704.26020.89.camel@lothar>  <op.tnkm9rayy3d107@office2>
Message-ID: <1171267866.8410.81.camel@lothar>

On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> 
> > Hi,
> >
> > Itamar posted earlier in this list how to run Twisted as a service:
> >
> > http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
> >
> > Now, I want to trap some Windows events and make some calls into my
> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> > one example). I'll be setting up the trapping in the service code above,
> > though, so from looking at the howtos, it looks like the right thing for
> > me to do when I get some event is:
> >
> > reactor.callFromThread(factory.disconnect)
> >
> > The docs state, though, that the callable must be thread safe. Does that
> > mean I need to use threadable.synchronize() to put a lock around
> > factory.disconnect? Or whatever else I'm calling into?
> >
> > Steve
> 
> I guess these are the docs you're refering to:
> 
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
> 
> Actually, they don't say that the callable must be thread-safe. Indeed,  
> the only reason you need to use callFromThread is if the callable *is not*  
> thread-safe. What callFromThread does is schedule the call to take place  
> within the main thread at the convenience of the reactor.

Thanks for responding, Eric. After a couple of days I started to worry
about the quality of my question.

This is where I saw that note I mentioned above:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html

That's part of what I found a little confusing... If I understand them
correctly, these docs say the callable must be threadsafe, but if it is,
I should be able to call it willy nilly.

Steve




From slowtech.chen at yahoo.com  Mon Feb 12 05:57:59 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Mon, 12 Feb 2007 02:57:59 -0800 (PST)
Subject: [Twisted-Python] is it possible to use an ORM in Twisted?
Message-ID: <375613.1807.qm@web59101.mail.re1.yahoo.com>

Hey guys,

I know there is adbapi to do database operations for twisted. The way adbapi works is similar to deferToThread in some ways, I guess the difference is adbapi handles some thread issues automatically, and provides a connection pool. So here comes my question:

    Is it possible to use an ORM by calling deferToThread(ORM operations...),  it seems to me that if you take care of the thread issues, this is doable. Even so I  have no any clue though :). 

I am new to Twisted and the above is my confusion, any suggestion very welcome.

Regards,
Chen




 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070212/9a516801/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Feb 12 06:20:02 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 12 Feb 2007 11:20:02 +0000
Subject: [Twisted-Python] is it possible to use an ORM in Twisted?
In-Reply-To: <375613.1807.qm@web59101.mail.re1.yahoo.com>
References: <375613.1807.qm@web59101.mail.re1.yahoo.com>
Message-ID: <45D04D62.3020305@imperial.ac.uk>

slowtech chen wrote:
> Hey guys,
> 
> I know there is adbapi to do database operations for twisted. The way 
> adbapi works is similar to deferToThread in some ways, I guess the 
> difference is adbapi handles some thread issues automatically, and 
> provides a connection pool. So here comes my question:
> 
>     Is it possible to use an ORM by calling deferToThread(ORM 
> operations...),  it seems to me that if you take care of the thread 
> issues, this is doable. Even so I  have no any clue though :).
> 
> I am new to Twisted and the above is my confusion, any suggestion very 
> welcome.

It can be done, but they don't "look" the same as ORMs in blocking code:

http://foss.eepatents.com/sAsync

If you can afford to use a local SQLite database, there's also:

http://divmod.org/trac/wiki/DivmodAxiom

The key difficulty is that the ORM either needs to be very, very fast to 
avoid blocking when fetching the (potentially arbitrarily large) graph 
of objects from the database, or you need to fetch them in a separate thread



From teratorn at twistedmatrix.com  Mon Feb 12 10:14:53 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 12 Feb 2007 09:14:53 -0600
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <1171267866.8410.81.camel@lothar>
References: <1170959704.26020.89.camel@lothar> <op.tnkm9rayy3d107@office2>
	<1171267866.8410.81.camel@lothar>
Message-ID: <op.tnm5y3noy3d107@office2>

On Mon, 12 Feb 2007 02:11:06 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
>> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com>  
>> wrote:
>>
>> > Hi,
>> >
>> > Itamar posted earlier in this list how to run Twisted as a service:
>> >
>> >  
>> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
>> >
>> > Now, I want to trap some Windows events and make some calls into my
>> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
>> > one example). I'll be setting up the trapping in the service code  
>> above,
>> > though, so from looking at the howtos, it looks like the right thing  
>> for
>> > me to do when I get some event is:
>> >
>> > reactor.callFromThread(factory.disconnect)
>> >
>> > The docs state, though, that the callable must be thread safe. Does  
>> that
>> > mean I need to use threadable.synchronize() to put a lock around
>> > factory.disconnect? Or whatever else I'm calling into?
>> >
>> > Steve
>>
>> I guess these are the docs you're refering to:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
>>
>> Actually, they don't say that the callable must be thread-safe. Indeed,
>> the only reason you need to use callFromThread is if the callable *is  
>> not*
>> thread-safe. What callFromThread does is schedule the call to take place
>> within the main thread at the convenience of the reactor.
>
> Thanks for responding, Eric. After a couple of days I started to worry
> about the quality of my question.
>
> This is where I saw that note I mentioned above:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html
>
> That's part of what I found a little confusing... If I understand them
> correctly, these docs say the callable must be threadsafe, but if it is,
> I should be able to call it willy nilly.
>
> Steve

Wow, that doc string is quite misleading. Good catch :)

Please file a bug and assign to itamar since he has his name in that file  
:)

It's true that since you're writing a multi-threaded app the callable  
*may* need to be thread-safe. But in so far as callFromThread is concerned  
it doesn't need to be.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Mon Feb 12 12:17:37 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 12 Feb 2007 09:17:37 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <op.tnm5y3noy3d107@office2>
References: <1170959704.26020.89.camel@lothar> <op.tnkm9rayy3d107@office2>
	<1171267866.8410.81.camel@lothar>  <op.tnm5y3noy3d107@office2>
Message-ID: <1171300657.11015.0.camel@lothar>

On Mon, 2007-02-12 at 09:14 -0600, Eric Mangold wrote:
> On Mon, 12 Feb 2007 02:11:06 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> 
> > On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
> >> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com>  
> >> wrote:
> >>
> >> > Hi,
> >> >
> >> > Itamar posted earlier in this list how to run Twisted as a service:
> >> >
> >> >  
> >> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
> >> >
> >> > Now, I want to trap some Windows events and make some calls into my
> >> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> >> > one example). I'll be setting up the trapping in the service code  
> >> above,
> >> > though, so from looking at the howtos, it looks like the right thing  
> >> for
> >> > me to do when I get some event is:
> >> >
> >> > reactor.callFromThread(factory.disconnect)
> >> >
> >> > The docs state, though, that the callable must be thread safe. Does  
> >> that
> >> > mean I need to use threadable.synchronize() to put a lock around
> >> > factory.disconnect? Or whatever else I'm calling into?
> >> >
> >> > Steve
> >>
> >> I guess these are the docs you're refering to:
> >>
> >> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
> >>
> >> Actually, they don't say that the callable must be thread-safe. Indeed,
> >> the only reason you need to use callFromThread is if the callable *is  
> >> not*
> >> thread-safe. What callFromThread does is schedule the call to take place
> >> within the main thread at the convenience of the reactor.
> >
> > Thanks for responding, Eric. After a couple of days I started to worry
> > about the quality of my question.
> >
> > This is where I saw that note I mentioned above:
> >
> > http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html
> >
> > That's part of what I found a little confusing... If I understand them
> > correctly, these docs say the callable must be threadsafe, but if it is,
> > I should be able to call it willy nilly.
> >
> > Steve
> 
> Wow, that doc string is quite misleading. Good catch :)
> 
> Please file a bug and assign to itamar since he has his name in that file  
> :)

Done, #2449.

Thanks for the help!

Steve




From pablo at minimoesfuerzo.org  Thu Feb 15 04:03:10 2007
From: pablo at minimoesfuerzo.org (=?ISO-8859-1?Q?Pablo_Mart=ED?=)
Date: Thu, 15 Feb 2007 10:03:10 +0100
Subject: [Twisted-Python] Twisted + g{tk,lib}2reactor
Message-ID: <45D421CE.6080502@minimoesfuerzo.org>

Hi all,

yesterday I troubled some devs about the current state of integration
between Twisted and dbus. It all boils down to adding this two lines right
after importing dbus. Without them, it won't work.

if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
    import dbus.glib

It has been tested with dbus 0.7.2 and the g{tk,lib}2reactors.

Best regards,
Pablo



From johnpote at jptechnical.co.uk  Wed Feb 14 12:46:09 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 14 Feb 2007 17:46:09 +0000
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
Message-ID: <45D34AE1.7000301@jptechnical.co.uk>

Hi everyone,
I am putting together a number of servers that will all communicate with 
each other every 5 or 10 minutes via  TCP/IP connections. It occured to 
me that once a connection has been established I might as well leave it 
open permanently. Are there any problems/side effects of doing this? Is 
it better policy to close and re-open the connection every now and then?

Also am I correct in assuming that if a computer at one end of a 
TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
program at the other end will only know this when it attempts to send a 
packet to the now crashed computer and, having no reply, gets a timeout.

Thanks for your help,
John




From martin at browns.co.uk  Thu Feb 15 06:59:03 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 15 Feb 2007 11:59:03 +0000
Subject: [Twisted-Python] Re: startLogging
In-Reply-To: <E1HFL1Q-0000xT-03@pyramid.twistedmatrix.com>
References: <E1HFL1Q-0000xT-03@pyramid.twistedmatrix.com>
Message-ID: <200702151159.l1FBxH9L022529@brownix.browns.co.uk>

 > Are there any samples on how best to interact with logging?
 >
 > My server needs to log quite a few items, as such the log file is
 > growing quite quickly and I would like to be able to switch file
 > names on a daily basis. I would also probably then wish to delete
 > logs older than 14 days.
 >
 > I'm not sure how safe it would be to just keep calling startLogging()
 > with a different file name mid-session. I realise there has been some
 > discussion about this area recently.


Many thanks for all the suggestions last week regarding the 
startLogging function. I now have it working exactly as required. I 
ended up deriving a class from twisted.python.logfile.DailyLogFile

Martin




From rodsenra at gpr.com.br  Thu Feb 15 07:13:07 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Thu, 15 Feb 2007 10:13:07 -0200
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <20070215101307.4d29b405@Fenix>


[ John Pote ]:

|Hi everyone,
|I am putting together a number of servers that will all communicate
|with each other every 5 or 10 minutes via  TCP/IP connections. It
|occured to me that once a connection has been established I might as
|well leave it open permanently. Are there any problems/side effects of
|doing this? 
| Is it better policy to close and re-open the connection every now and
| then?

One advantage of keeping connections opened is to avoid the 3-way
handshake that will take place during connection setup. For a few
number of conenctions I see no immediate disadvantage, but I guess
it all depends on what one means by "few" and the context. 


|Also am I correct in assuming that if a computer at one end of a 
|TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
|program at the other end will only know this when it attempts to send
|a packet to the now crashed computer and, having no reply, gets a
|timeout.

AFAICT, that *is not* a limitation of Twisted. This is simply the fact
that TCP -- while a connection is in silence -- will increment its
timers, since the rx end-point is unaware if nothing is sent or if
the netpath is congested. 


cheers,
Rod Senra

-------------
Rodrigo Senra
GPr Sistemas 
http://www.gpr.com.br



From jacob at internet24.de  Thu Feb 15 09:25:56 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Thu, 15 Feb 2007 15:25:56 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <1171549557.17088.9.camel@enterprise>

I would implement some sort of keep-alive mechanism
for those connections, something that will periodically do
some sort of ping/pong sequence (possibly even
using TCP's keepalive feature if that is available, anyone
know if Twisted can request it on at least some platforms?).

(Cf. for instance this 
http://libkeepalive.sourceforge.net/docs/TCP-Keepalive-HOWTO
)

This has at least two advantages, the first being
that will be able to know that the other side has gone
down, and that you will have to reopen your TCP
connection, the second being that there maybe various
state-full routers/firewalls in between your
communication endpoints that could possibly 
"age out" your connection if you do not send
any packets for some time.

The main disadvantage is that you generate data traffic even
if you do not actually do anything.

On Wed, 2007-02-14 at 17:46 +0000, John Pote wrote:
> Hi everyone,
> I am putting together a number of servers that will all communicate with 
> each other every 5 or 10 minutes via  TCP/IP connections. It occured to 
> me that once a connection has been established I might as well leave it 
> open permanently. Are there any problems/side effects of doing this? Is 
> it better policy to close and re-open the connection every now and then?
> 
> Also am I correct in assuming that if a computer at one end of a 
> TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
> program at the other end will only know this when it attempts to send a 
> packet to the now crashed computer and, having no reply, gets a timeout.
> 
> Thanks for your help,
> John
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070215/43c926bd/attachment.pgp 

From exarkun at divmod.com  Thu Feb 15 10:02:27 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Feb 2007 10:02:27 -0500
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <1171549557.17088.9.camel@enterprise>
Message-ID: <20070215150227.25807.284303635.divmod.quotient.22562@ohm>

On Thu, 15 Feb 2007 15:25:56 +0100, Thomas Jacob <jacob at internet24.de> wrote:
>I would implement some sort of keep-alive mechanism
>for those connections, something that will periodically do
>some sort of ping/pong sequence (possibly even
>using TCP's keepalive feature if that is available, anyone
>know if Twisted can request it on at least some platforms?).
>
>(Cf. for instance this
>http://libkeepalive.sourceforge.net/docs/TCP-Keepalive-HOWTO
>)

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#setTcpKeepAlive

An application-level keepalive may be more appropriate.  If
communication happens every 5 to 10 minutes anyway, then a
separate keepalive doesn't seem very useful.  Your application
traffic will let you know when the connection is lost.  Then
you can reconnect and re-send whatever messages you need to.

Jean-Paul



From therve at free.fr  Thu Feb 15 10:13:58 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 15 Feb 2007 16:13:58 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <1171549557.17088.9.camel@enterprise>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
	<1171549557.17088.9.camel@enterprise>
Message-ID: <20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>

Quoting Thomas Jacob <jacob at internet24.de>:

> I would implement some sort of keep-alive mechanism
> for those connections, something that will periodically do
> some sort of ping/pong sequence (possibly even
> using TCP's keepalive feature if that is available, anyone
> know if Twisted can request it on at least some platforms?).

Here is documented the setTcpKeepAlive method:
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html

Generally you can enable it in the connectionMade of your protocol.

-- 
Thomas




From ellisonbg.net at gmail.com  Thu Feb 15 17:15:02 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 15 Feb 2007 15:15:02 -0700
Subject: [Twisted-Python] Problem in failure.Failure.__init__
Message-ID: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>

Hi,

I am using Twisted in a project and have been doing so for a long
time.  Today I ran into something that is really bizzare in
failure.Failure.

I have a simple callback function that I have registered on a deferred:

def myCallback(self, result, arg1, arg2):
    do some stuff....
   possibly:
        raise MyException()

The resulting exception that is raised gets sent down the pipeline and
eventually I end up serializing the Failure to send it over the wire.
The problem is that the resulting Failure is massive!  From looking at
it, the Failure has the entire locals dict.  But in my case, result,
arg1, arg2, self are all really big.  I don't want to throw all of
these things into the Failure, but Twisted seems intent on doing so.
This seems like a problem to blindly have Failure pull in the locals
w/o regard to how big the locals are.  Why is this done?  Can I
prevent it?  Is this a bug?

Thanks

Brian



From itamar at itamarst.org  Thu Feb 15 20:11:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Feb 2007 20:11:35 -0500
Subject: [Twisted-Python] Problem in failure.Failure.__init__
In-Reply-To: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>
References: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>
Message-ID: <1171588295.5421.41.camel@localhost.localdomain>

On Thu, 2007-02-15 at 15:15 -0700, Brian Granger wrote:

> This seems like a problem to blindly have Failure pull in the locals
> w/o regard to how big the locals are.  Why is this done?  Can I
> prevent it?  Is this a bug?

I would file a bug about it; it really only ought to do that in debug
mode.




From johnpote at jptechnical.co.uk  Fri Feb 16 05:34:11 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Fri, 16 Feb 2007 10:34:11 +0000
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>	<45D34AE1.7000301@jptechnical.co.uk>	<1171549557.17088.9.camel@enterprise>
	<20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
Message-ID: <45D588A3.20406@jptechnical.co.uk>

Thanks for all the quick replies. Very helpful, esp the docs links. 
Initially I will only be using just a 'few' connections, about 4 to 6. 
Good point about 'stateful packet inspection' as at least one of the 
servers will be on my home network connecting to the internet via a 
netgear router.

Thanks again,
John

Thomas Herv? wrote:

> Quoting Thomas Jacob <jacob at internet24.de>:
>
>> I would implement some sort of keep-alive mechanism
>> for those connections, something that will periodically do
>> some sort of ping/pong sequence (possibly even
>> using TCP's keepalive feature if that is available, anyone
>> know if Twisted can request it on at least some platforms?).
>
>
> Here is documented the setTcpKeepAlive method:
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html 
>
>
> Generally you can enable it in the connectionMade of your protocol.
>





From itamar at itamarst.org  Fri Feb 16 09:10:26 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Feb 2007 09:10:26 -0500
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D588A3.20406@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>	<1171549557.17088.9.camel@enterprise>
	<20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
	<45D588A3.20406@jptechnical.co.uk>
Message-ID: <1171635026.5421.59.camel@localhost.localdomain>

On Fri, 2007-02-16 at 10:34 +0000, John Pote wrote:
> Thanks for all the quick replies. Very helpful, esp the docs links. 
> Initially I will only be using just a 'few' connections, about 4 to 6. 
> Good point about 'stateful packet inspection' as at least one of the 
> servers will be on my home network connecting to the internet via a 
> netgear router.

James Knight discovered yesterday that some linksys routers have a 10
minute TCP timeout, and it may well be that netgear boxes are similarly
broken. If you can manage it, a more frequent application level ping is
worth doing.




From Marcin.Kasperski at softax.com.pl  Fri Feb 16 10:06:21 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Fri, 16 Feb 2007 16:06:21 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <200702161606.22208.Marcin.Kasperski@softax.com.pl>

> It occured to me that once a connection has been
> established I might as well leave it open permanently. Are
> there any problems/side effects of doing this? 

Some firewalls (also inteligent routers) may drop connections 
which are inactive for a few (5, 10, depending on 
configurations) minutes. This especially applies in case 
masquerading is in place.



From itamar at itamarst.org  Fri Feb 16 17:23:02 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Feb 2007 17:23:02 -0500 (EST)
Subject: [Twisted-Python] inlineCallbacks: Twisted 2.5's generator-based
 Deferred microthreads-thingie
Message-ID: <24865.63.107.91.99.1171664582.squirrel@webmail.zoteca.com>

Apparently some people are not aware of this new feature in Twisted 2.5
(requires Python 2.5), written by James Knight based on code by Chris
Armstrong. Previous versions of Twisted have deferredGenerator, but the
syntax isn't as nice.

Here's some sample code JP Calderone posted to python-dev recently:

    from twisted.internet import reactor
    from twisted.internet.defer import inlineCallbacks
    from twisted.web.client import getPage

    @inlineCallbacks
    def fetchSequence(...):
        homepage = yield getPage(homepage)
        firstData = yield getPage(anotherPage)
        if someCondition(firstData):
            while:
                secondData = yield getPage(wherever)
                if someOtherCondition(secondData):
                    break
        else:
            ...

Essentially this allows one to "wait" for a Deferred's result. It also
does error handling in the way one would expect: just use try/except
around the yield.

Be *very careful* when using this functionality, as every time you do
"yield" you are doing a context switch. Random other code will have run
for an indeterminate amount of time, possibly changing attributes and
state on objects the generator has references to.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks




From slyphon at twistedmatrix.com  Sat Feb 17 20:09:10 2007
From: slyphon at twistedmatrix.com (Thurman Hadley)
Date: Sat, 17 Feb 2007 20:09:10 -0500
Subject: [Twisted-Python] Cial1s S0ft Tabs - Super V1agra
Message-ID: <bhhqklbUUFIUJslyphon@twistedmatrix.com>


Hello,
Try this revolutionary product, Cial1s S0ft Tabs.
Cial1s S0ft Tabs is the new impotence treatment drug that everyone
is talking about. S0ft Tabs acts up to 36 hours, compare this to
only two or three hours of Viagra action! The active ingredient is
Tadalafil, same as in brand Cial1s.
Ch3ck it h3re> http://www.paminnow.com/

Simply dissolve half a pill under your tongue, 10 min before sex,
for the best erections you've ever had!
S0ft Tabs also have less sidebacks (you can drive or mix alcohol
drinks with them). No prior prescription needed.
Ch3ck it h3re> http://www.paminnow.com/







From exarkun at twistedmatrix.com  Sun Feb 18 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Feb 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1171775102.1.676019297@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-11 through 2007-02-18
Bugs opened: 13    Bugs closed: 6  Total open bugs: 836 (+7)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +3  |Highest:  -2          |Conch:     -1          
|Enhancement:  +6  |Normal:  +11          |Core:      +4          
                   |Low:      +0          |Pydoctor:  +1          
                                          |Trial:     +1          
                                          |Web:       +2          
                                          |Web2:      +1          
                                          |Website:   +1          


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2447] server.Site leaves the reactor unclean (opened by ghazel)
    defect          web        http://twistedmatrix.com/trac/ticket/2447

[#2448] deferToThread w/ trial -u times out on second pass (opened by mwl)
    defect          trial      http://twistedmatrix.com/trac/ticket/2448

[#2449] Misleading doc string (opened by Scramblejams)
    defect          core       http://twistedmatrix.com/trac/ticket/2449

[#2451] Migrate local email from pyramid to cube (opened by moonfallen)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2451

[#2452] Add a timestamp to web2.server.Request for performance tracking (opened by Cyrus Daboo)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2452

[#2453] SSHSessionProcessProtocol does not implement getHost/getPeer. (opened by jrydberg)
    defect          conch      http://twistedmatrix.com/trac/ticket/2453

[#2454] ConnectionRefusedError should include an address and a factory (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2454

[#2455] Assertion error on invalid epydoc @type syntax (opened by jdahlin)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2455

[#2456] moduleMovedForSplit messages refer to old project URLs (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2456

[#2457] failed reactor selection is reported poorly by trial and twistd (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2457

[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2447] server.Site leaves the reactor unclean (opened by ghazel)
    defect          web        http://twistedmatrix.com/trac/ticket/2447

                    ===== Low =====
[#2450] t.t.test_tcp.HalfClose3TestCase.testReadNotificationRaises failed (opened by ghazel) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2450



Closed Bugs
______________________
                    ===== Highest =====
[#2123] t.c.t.test_manhole.ManholeLoopbackStdio.testControlBackslash fails intermittently (opened by dreid, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2123

[#2371] twisted.conch.stdio.runWithProtocol writes to non-blocking file descriptor incorrectly (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2371

                    ===== Normal =====
[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez, closed by dreid, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2447] server.Site leaves the reactor unclean (opened by ghazel, closed by exarkun, )
    defect          web        http://twistedmatrix.com/trac/ticket/2447

[#2378] Comment for t.test.test_process.SignalMixin is egregiously wrong (opened by jml, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2378

                    ===== Low =====
[#2450] t.t.test_tcp.HalfClose3TestCase.testReadNotificationRaises failed (opened by ghazel, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2450





From ralf at brainbot.com  Sun Feb 18 11:14:49 2007
From: ralf at brainbot.com (Ralf Schmitt)
Date: Sun, 18 Feb 2007 17:14:49 +0100
Subject: [Twisted-Python] using py.test with twisted
Message-ID: <45D87B79.4030508@brainbot.com>

Hi,

there's been a discussion about using the nose unittest system together 
with twisted.trial.
I'm attaching a short script which enables the py.test system 
(http://codespeak.net/py/dist/test.html)
to execute unittests which use twisted (it's not compatible with trial, 
instead you have to write your
unittests like you would in py.test.). It uses greenlets in order to 
integrate twisted's mainloop with py.test.
This method might also be applicable with nose (and might be a better 
hack than the threaded_reactor hack).

Tested with a recent twisted trunk and py-0.9.0.Note that the setup and 
teardown methods currently can't return deferreds.

- Ralf



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: py.test.twisted
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070218/9109359d/attachment.txt 

From einar.twisted at norsk-esport.no  Mon Feb 19 10:39:54 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Mon, 19 Feb 2007 16:39:54 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
Message-ID: <45D9C4CA.4010608@norsk-esport.no>

Hi,

I am currently using the below technique to return a list of dicts
instead of a tuple of tuples from adbapi. Is there a cleaner way?

def dictQuery(self, query):
   self.execute(query)
   result = self.fetchall()
   columns = [d[0] for d in self._cursor.description]
   return [dict(zip(columns, r)) for r in result]

dbPool = adbapi.ConnectionPool('MySQLdb', db, user, pass, host)
dbPool.runInteraction(dictQuery, "SELECT whatever FROM table"
	).addCallback(callBackFun)

Cheers
Einar



From torriem at chem.byu.edu  Mon Feb 19 20:52:10 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 18:52:10 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
Message-ID: <1171936330.21997.18.camel@enterprise>

I am using python 2.4 on FC6, and Twisted 2.5.0.  I have installed the
latest stable versions from source of Nevow, Webut, and ldaptor
(0.0.43).  I tried to run the ldaptor-webui program, but encountered the
following traceback:

Traceback (most recent call last):
  File "/usr/bin/ldaptor-webui", line 4, in ?
    from ldaptor.apps.webui import main
  File "/usr/lib/python2.4/site-packages/ldaptor/apps/webui/main.py",
line 5, in ?
    from ldaptor.config import LDAPConfig
  File "/usr/lib/python2.4/site-packages/ldaptor/config.py", line 4,
in ?
    from ldaptor import interfaces
  File "/usr/lib/python2.4/site-packages/ldaptor/interfaces.py", line 3,
in ?
    class ILDAPEntry(components.Interface):
AttributeError: 'module' object has no attribute 'Interface'

Apparently this stems from something related to Zope.  The imported
module in question, <module 'twisted.python.components' from
'/usr/lib/python2.4/site-packages/twisted/python/components.pyc'>,
indeed has no attribute Interface.  However it does import "interface",
module <module 'zope.interface.interface' from
'/usr/lib/python2.4/site-packages/zope/interface/interface.pyc'>.  

Is ldaptor-webui in need of updating to run with something new that
either Twisted or Zope changed?  

thanks.

Michael





From jonathansamuel at yahoo.com  Mon Feb 19 20:54:32 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Mon, 19 Feb 2007 17:54:32 -0800 (PST)
Subject: [Twisted-Python] Webcat.py script from the O'Reilly Twisted book
	doesn't work on my system. Why?
In-Reply-To: <mailman.0.1171934970.21686.twisted-python@twistedmatrix.com>
Message-ID: <739837.9153.qm@web32501.mail.mud.yahoo.com>

The following code, from the O'Reilly Twisted book, is
supposed to download and print out the contents of a
URL. When I run it, however, the value of data is
empty.

If I type in a bad URL it gives me an error, as it is
supposed to. If I replace 'print data' with print
"hello world" it prints "hello world." The only thing
that doesn't work is that the value of data is empty. 

I am running Twisted 2.1, Python 2.4.3 and Red Hat 7.3
. What am I doing wrong? Do I need to upgrade to
Twisted 2.5?

#######################################
from twisted.web import client
from twisted.internet import reactor
import sys
def printPage(data):
   print data 
   reactor.stop()

def printError(failure):
   print >> sys.stderr, "Error:",
failure.getErrorMessage()
   reactor.stop()

if len(sys.argv) ==2:
   url = sys.argv[1]
   client.getPage(url).addCallback(
     printPage).addErrback(
     printError)
   reactor.run()
else:
   print "(Usage: webcat.py <URL>"




 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From exarkun at divmod.com  Mon Feb 19 21:14:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Feb 2007 21:14:37 -0500
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <1171936330.21997.18.camel@enterprise>
Message-ID: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>

On Mon, 19 Feb 2007 18:52:10 -0700, Michael Torrie <torriem at chem.byu.edu> wrote:
> [snip]
>
>Is ldaptor-webui in need of updating to run with something new that
>either Twisted or Zope changed?
>

Yep.  twisted.python.components.Interface was deprecated in June of 2004 and removed for the Twisted 2.5 release.  zope.interface.Interface should be used
instead.

Jean-Paul



From torriem at chem.byu.edu  Mon Feb 19 21:34:57 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 19:34:57 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
Message-ID: <1171938897.21997.21.camel@enterprise>

On Mon, 2007-02-19 at 21:14 -0500, Jean-Paul Calderone wrote:
> On Mon, 19 Feb 2007 18:52:10 -0700, Michael Torrie <torriem at chem.byu.edu> wrote:
> > [snip]
> >
> >Is ldaptor-webui in need of updating to run with something new that
> >either Twisted or Zope changed?
> >
> 
> Yep.  twisted.python.components.Interface was deprecated in June of 2004 and removed for the Twisted 2.5 release.  zope.interface.Interface should be used
> instead.

I just discovered that this problem has broken Ldaptor 0.0.43
completely.  If Tommi is on the list, are there any plans to fix it?  In
the meantime I will try to search and replace everything.

Michael

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From torriem at chem.byu.edu  Mon Feb 19 21:48:02 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 19:48:02 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <1171938897.21997.21.camel@enterprise>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
	<1171938897.21997.21.camel@enterprise>
Message-ID: <1171939682.21997.23.camel@enterprise>

On Mon, 2007-02-19 at 19:34 -0700, Michael Torrie wrote:
> 
> I just discovered that this problem has broken Ldaptor 0.0.43
> completely.  If Tommi is on the list, are there any plans to fix it?  In
> the meantime I will try to search and replace everything.

Actually there were just 3 files total in the ldaptor source tree that
needed to be changed to import from zope.interface for Interface.

thanks so much.

> 
> Michael
> 
> > 
> > Jean-Paul
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From itamar at itamarst.org  Mon Feb 19 21:51:36 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Feb 2007 21:51:36 -0500
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45D9C4CA.4010608@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>
Message-ID: <1171939896.5421.82.camel@localhost.localdomain>

On Mon, 2007-02-19 at 16:39 +0100, "Einar S. Ids?" wrote:
> Hi,
> 
> I am currently using the below technique to return a list of dicts
> instead of a tuple of tuples from adbapi. Is there a cleaner way?
> 
> def dictQuery(self, query):
>    self.execute(query)
>    result = self.fetchall()
>    columns = [d[0] for d in self._cursor.description]
>    return [dict(zip(columns, r)) for r in result]

Some database adapters will return objects that act like dictionaries,
or have an extra method that does so. adabpi itself doesn't really
provide any extra infrastructure for doing so since it's intended as a
thin layer wrapping db-api.




From einar.twisted at norsk-esport.no  Tue Feb 20 04:29:41 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Tue, 20 Feb 2007 10:29:41 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <1171939896.5421.82.camel@localhost.localdomain>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
Message-ID: <45DABF85.50408@norsk-esport.no>

Itamar Shtull-Trauring wrote:
> Some database adapters will return objects that act like dictionaries,
> or have an extra method that does so. adabpi itself doesn't really
> provide any extra infrastructure for doing so since it's intended as a
> thin layer wrapping db-api.

So in other words: The technique I am using is okay? Or should I be
using one of the other adapters? If so, would you mind pointing me to
some of my options as I haven't been able to find any simple
alternatives to adbapi?

Thanks,
Einar



From p.mayers at imperial.ac.uk  Tue Feb 20 06:40:17 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 20 Feb 2007 11:40:17 +0000
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DABF85.50408@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no>
Message-ID: <45DADE21.7050608@imperial.ac.uk>

Einar S. Ids? wrote:
> Itamar Shtull-Trauring wrote:
>> Some database adapters will return objects that act like dictionaries,
>> or have an extra method that does so. adabpi itself doesn't really
>> provide any extra infrastructure for doing so since it's intended as a
>> thin layer wrapping db-api.
> 
> So in other words: The technique I am using is okay? Or should I be

yes

> using one of the other adapters? If so, would you mind pointing me to

only if it provides dictfetchall() support

> some of my options as I haven't been able to find any simple
> alternatives to adbapi?

You misunderstand - you have to use adbapi. The choice is which python 
DB-API adapter the adbapi connection will "wrap".

I'm afraid I don't use MySQL so I don't know if any have dict* support.



From ldanielburr at mac.com  Tue Feb 20 07:34:48 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue, 20 Feb 2007 06:34:48 -0600
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DADE21.7050608@imperial.ac.uk>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
Message-ID: <op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Tue, 20 Feb 2007 05:40:17 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
wrote:

> Einar S. Ids? wrote:
>> Itamar Shtull-Trauring wrote:
>>> Some database adapters will return objects that act like dictionaries,
>>> or have an extra method that does so. adabpi itself doesn't really
>>> provide any extra infrastructure for doing so since it's intended as a
>>> thin layer wrapping db-api.
>>  So in other words: The technique I am using is okay? Or should I be
>
> yes
>
>> using one of the other adapters? If so, would you mind pointing me to
>
> only if it provides dictfetchall() support
>
>> some of my options as I haven't been able to find any simple
>> alternatives to adbapi?
>
> You misunderstand - you have to use adbapi. The choice is which python  
> DB-API adapter the adbapi connection will "wrap".
>
> I'm afraid I don't use MySQL so I don't know if any have dict* support.
>

The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
cursor, and should meet the original poster's needs.

Another solution is to use something like db_row (Google for it).

Hope this helps,

L. Daniel Burr



From einar.twisted at norsk-esport.no  Wed Feb 21 19:12:45 2007
From: einar.twisted at norsk-esport.no (=?UTF-8?B?IkVpbmFyIFMuIElkc8O4Ig==?=)
Date: Thu, 22 Feb 2007 01:12:45 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45DCDFFD.4090500@norsk-esport.no>

Phil: Thank you for your answer. I think I understand now, but the first
 question below will show if I'm right or way off:

L. Daniel Burr wrote:
> The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
> cursor, and should meet the original poster's needs.

I suppose that when I use adbapi.ConnectionPool('MySQLdb',...), I am
already using the MySQLdb adapter? It is straightforward to instruct
MySQLdb to use the DictCursor when programming in straight (i.e.
non-Twisted) environments, but how do I do the same from Twisted, using
t.e.a.ConnectionPool?

Please let a novice Twisted-programmer know if I am completely missing
the mark here, and I will go back to my cave with my original solution.
I'm just trying to understand the intricacies of the Twisted APIs and
lingo/semantics, and doing things right the second time :)

Cheers,
Einar



From lee.a.connell at gmail.com  Wed Feb 21 20:33:54 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Wed, 21 Feb 2007 20:33:54 -0500
Subject: [Twisted-Python] documentation
Message-ID: <c2bc197b0702211733x6c6c4468s6b70a8bc3ffda716@mail.gmail.com>

I am sorry if I sound stupid or you feel I may not be looking hard enough in
the current documentation, however I am looking for documentation on the
transport attribute that is available to the t.i.p.Protocol class.  I don't
see anything about this attribute, so If i hadn't seen code examples I would
not have known it was even available.  Again I apologize if I am missing
something here, can someone shed some light.

Thanks,

-Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070221/adf386d9/attachment.htm 

From exarkun at divmod.com  Wed Feb 21 20:54:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Feb 2007 20:54:28 -0500
Subject: [Twisted-Python] documentation
In-Reply-To: <c2bc197b0702211733x6c6c4468s6b70a8bc3ffda716@mail.gmail.com>
Message-ID: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>

On Wed, 21 Feb 2007 20:33:54 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>I am sorry if I sound stupid or you feel I may not be looking hard enough in
>the current documentation, however I am looking for documentation on the
>transport attribute that is available to the t.i.p.Protocol class.  I don't
>see anything about this attribute, so If i hadn't seen code examples I would
>not have known it was even available.  Again I apologize if I am missing
>something here, can someone shed some light.
>

You're looking for ITransport documentation, probably.  ITransport is the
interface which defines the behavior of the transport attribute of Protocol
instances.  You can find it here:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html

It is probably true that much of the documentation assumes that you already know
that a protocol's transport attribute is one of these, so it uses it without
explaining it.

Jean-Paul



From lee.a.connell at gmail.com  Wed Feb 21 21:01:36 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Wed, 21 Feb 2007 21:01:36 -0500
Subject: [Twisted-Python] documentation
In-Reply-To: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
References: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
Message-ID: <45DCF980.7030403@gmail.com>

Jean-Paul,

My only concern is I wouldn't even know that transport was available
within the Protocol class at all without the help of the demos.

Thanks for the link.

-Lee

Jean-Paul Calderone wrote:
> On Wed, 21 Feb 2007 20:33:54 -0500, Lee Connell
> <lee.a.connell at gmail.com> wrote:
>> I am sorry if I sound stupid or you feel I may not be looking hard
>> enough in
>> the current documentation, however I am looking for documentation on the
>> transport attribute that is available to the t.i.p.Protocol class.  I
>> don't
>> see anything about this attribute, so If i hadn't seen code examples
>> I would
>> not have known it was even available.  Again I apologize if I am missing
>> something here, can someone shed some light.
>>
>
> You're looking for ITransport documentation, probably.  ITransport is the
> interface which defines the behavior of the transport attribute of
> Protocol
> instances.  You can find it here:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html
>
>
> It is probably true that much of the documentation assumes that you
> already know
> that a protocol's transport attribute is one of these, so it uses it
> without
> explaining it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From manlio_perillo at libero.it  Thu Feb 22 08:21:18 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Feb 2007 14:21:18 +0100
Subject: [Twisted-Python] Debian package problems
Message-ID: <45DD98CE.5060309@libero.it>

Hi.

I have noted that the python-twisted package depends on 
python-twisted-words.

Is this really true?

For me this is a problem.
Today I have updated a Debian Etch server and an upgrade for 
python-twisted-words requires the installation of GTK and X11!


Thanks  Manlio Perillo



From exarkun at divmod.com  Thu Feb 22 08:48:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 22 Feb 2007 08:48:17 -0500
Subject: [Twisted-Python] Debian package problems
In-Reply-To: <45DD98CE.5060309@libero.it>
Message-ID: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>

On Thu, 22 Feb 2007 14:21:18 +0100, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Hi.
>
>I have noted that the python-twisted package depends on python-twisted- 
>words.
>
>Is this really true?
>
>For me this is a problem.
>Today I have updated a Debian Etch server and an upgrade for python-twisted- 
>words requires the installation of GTK and X11!
>

python-twisted is a meta package which simply depends on all parts of Twisted. 
If you don't want all parts of Twisted, you might want one of the other
packages.

As a separate issue, Twisted Words doesn't completely depend on GTK and X11,
only parts of it do.  You might suggest to the Debian maintainer that the
dependencies for python-twisted-words are incorrect.

Jean-Paul



From manlio_perillo at libero.it  Thu Feb 22 09:32:16 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Feb 2007 15:32:16 +0100
Subject: [Twisted-Python] Debian package problems
In-Reply-To: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>
References: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>
Message-ID: <45DDA970.8050203@libero.it>

Jean-Paul Calderone ha scritto:
> On Thu, 22 Feb 2007 14:21:18 +0100, Manlio Perillo 
> <manlio_perillo at libero.it> wrote:
>> Hi.
>>
>> I have noted that the python-twisted package depends on 
>> python-twisted- words.
>>
>> Is this really true?
>>
>> For me this is a problem.
>> Today I have updated a Debian Etch server and an upgrade for 
>> python-twisted- words requires the installation of GTK and X11!
>>
> 
> python-twisted is a meta package which simply depends on all parts of 
> Twisted. If you don't want all parts of Twisted, you might want one of 
> the other
> packages.
> 

Ok, thanks.

> As a separate issue, Twisted Words doesn't completely depend on GTK and 
> X11,
> only parts of it do.  You might suggest to the Debian maintainer that the
> dependencies for python-twisted-words are incorrect.
> 

The maintainer has added the dependence for python-gtk-1.2 and 
python-glade-1.2 in the new version (0.4.0-2.1).

python-gtk-1.2, then, wants other packages, including x11-common.


For now I have solved downgrading the python-twisted-words to the 
previous version, holding it.




Regards  Manlio Perillo



From ldanielburr at mac.com  Sat Feb 24 12:48:46 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sat, 24 Feb 2007 11:48:46 -0600
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DCDFFD.4090500@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<45DCDFFD.4090500@norsk-esport.no>
Message-ID: <op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Wed, 21 Feb 2007 18:12:45 -0600, Einar S. Ids?  
<einar.twisted at norsk-esport.no> wrote:

> Phil: Thank you for your answer. I think I understand now, but the first
>  question below will show if I'm right or way off:
>
> L. Daniel Burr wrote:
>> The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
>> cursor, and should meet the original poster's needs.
>
> I suppose that when I use adbapi.ConnectionPool('MySQLdb',...), I am
> already using the MySQLdb adapter? It is straightforward to instruct
> MySQLdb to use the DictCursor when programming in straight (i.e.
> non-Twisted) environments, but how do I do the same from Twisted, using
> t.e.a.ConnectionPool?
>

This is very easy to do, because adbapi.ConnectionPool will pass on
connection-specific parameters to the underlying DBAPI module.

Example (untested):

import MySQLdb
import twisted.enterprise.adbapi as db
import twisted.python.log as log


def onResultSet(resultSet):
     for row in resultSet:
         # Do stuff


pool = db.ConnectionPool(
     MySQLdb,
     host="my.host.com",
     port=1234,
     cursorclass=MySQLdb.cursors.DictCursor
)

d = pool.runQuery('SELECT * FROM SomeTable')
d.addErrback(log.err)
d.addCallback(onResultSet)


> Please let a novice Twisted-programmer know if I am completely missing
> the mark here, and I will go back to my cave with my original solution.
> I'm just trying to understand the intricacies of the Twisted APIs and
> lingo/semantics, and doing things right the second time :)
>

The key thing to understand in this case is that adbapi is just a simple
wrapper around a given DBAPI module, so if you know how to configure
MySQLdb, then configuring adbapi.ConnectionPool is very similar.  Just
pass the same keyword args to ConnectionPool, that you would pass to
MySQLdb, and you're good to go.

> Cheers,
> Einar
>

Hope this helps,

L. Daniel Burr



From einar.twisted at norsk-esport.no  Sat Feb 24 19:27:12 2007
From: einar.twisted at norsk-esport.no (=?UTF-8?B?IkVpbmFyIFMuIElkc8O4Ig==?=)
Date: Sun, 25 Feb 2007 01:27:12 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<45DCDFFD.4090500@norsk-esport.no>
	<op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45E0D7E0.4040203@norsk-esport.no>

L. Daniel Burr wrote:
> This is very easy to do, because adbapi.ConnectionPool will pass on
> connection-specific parameters to the underlying DBAPI module.
> 
> Example (untested):
>  (...)
> pool = db.ConnectionPool(
>     MySQLdb,
>     host="my.host.com",
>     port=1234,
>     cursorclass=MySQLdb.cursors.DictCursor
> )

Wow, thank you! Now /there/ is the proper way of returning a dict :) I
just can't believe it was that easy...

> The key thing to understand in this case is that adbapi is just a simple
> wrapper around a given DBAPI module, so if you know how to configure
> MySQLdb, then configuring adbapi.ConnectionPool is very similar.  Just
> pass the same keyword args to ConnectionPool, that you would pass to
> MySQLdb, and you're good to go.
> 
> 
> Hope this helps,
> 
> L. Daniel Burr

It was just the help I needed: An example to solve my problem, and a
much-needed explanation of adbapi. Perfect!

Thank you so much,
Einar



From exarkun at twistedmatrix.com  Sun Feb 25 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1172379901.4.456141430@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-18 through 2007-02-25
Bugs opened: 25    Bugs closed: 8  Total open bugs: 853 (+17)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +2          |Core:     +10          
|Enhancement: +15  |High:     +3          |Pydoctor:  +1          
                   |Normal:  +12          |Trial:     +2          
                   |Low:      +3          |Web2:      +3          
                                          |Website:   +1          
                                          |Words:     +3          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2460] HTTPAuthResource doesn't provide any way to support anonymous access. (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2460

[#2476] local variable 'cbl' referenced before assignment (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2476

[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1901

[#1351] log observer bridging to python logging facility (opened by ctheune)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

                    ===== High =====
[#2478] Erroneously written resumeProducing and pauseProducing methods in WSGIHandler (opened by dialtone)
    defect          web2       http://twistedmatrix.com/trac/ticket/2478

[#2042] twisted.web2.auth.wrapper's interface is backwards (opened by glyph)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2042

                    ===== Normal =====
[#2458] improve twisted.words.im.basechat docstrings (opened by exarkun)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2458

[#2459] Put Twisted developer targetted documentation back on the website (opened by exarkun)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2459

[#2461] words.protocols.jabber.sasl uses base64.b64encode, which breaks compatibility with Python 2.3.x (opened by murphy_slaw)
    defect          words      http://twistedmatrix.com/trac/ticket/2461

[#2462] write tests for serial port code (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2462

[#2464] manhole breaks on gtk.keysyms AttributeError (opened by gyst)
    defect          core       http://twistedmatrix.com/trac/ticket/2464

[#2465] epydoc keyword field support (opened by jdahlin)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2465

[#2466] Failures use a lot of memory (opened by njal)
    defect          core       http://twistedmatrix.com/trac/ticket/2466

[#2468] Add option to suppress private api (opened by jdahlin)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2468

[#2470] verbose mode for twistd and trial (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2470

[#2471] Doctest optionflag support (opened by jdahlin)
    defect          trial      http://twistedmatrix.com/trac/ticket/2471

[#2472] improve twistd help (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2472

[#2473] make twistd more usable (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2473

[#2474] Document deferredGenerator/inlineCallbacks in Deferred howto (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2474

[#2475] Document python logging integration in log howto (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2475

[#2477] xml serialize optimizations (opened by jack)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2477

[#2479] Hanging detector... suggested to be made into a utility (opened by Rotund) (CLOSED, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2479

                    ===== Low =====
[#2463] add tests for logging of unhandled deferred errors (opened by antoine)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2463

[#2467] twisted.web2.client.http.testConn is a pretty bad example and doesn't work in the default configuration (opened by tv)
    defect          web2       http://twistedmatrix.com/trac/ticket/2467

[#2469] Use cProfile for twistd profiling on 2.5 (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2469



Closed Bugs
______________________
                    ===== Highest =====
[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun, closed by therve, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1901

[#1906] twisted.web2 tests don't work in cleantests-1883 (opened by jml, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1906

[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

[#1351] log observer bridging to python logging facility (opened by ctheune, closed by therve, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

                    ===== Normal =====
[#2041] web2.auth.wrapper.HTTPAuthResource mis-handles URL path (opened by rfmohr at osc.edu, closed by rfmohr at osc.edu, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2041

[#2475] Document python logging integration in log howto (opened by itamarst, closed by itamarst, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2475

[#2455] Assertion error on invalid epydoc @type syntax (opened by jdahlin, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2455

[#2479] Hanging detector... suggested to be made into a utility (opened by Rotund, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2479





From redbaron at hitv.ru  Sun Feb 25 03:31:52 2007
From: redbaron at hitv.ru (Ivanov Maxim)
Date: Sun, 25 Feb 2007 11:31:52 +0300
Subject: [Twisted-Python] Plugins as event subscribers?
Message-ID: <200702251131.52177.redbaron@hitv.ru>

Hi! I'm starting my first Twisted project. It will consist of some sort of 
daemon which will communicate with one game server via UDP protocol and as 
result of this communication it will fireup some events. All needed 
functional will provided via plugins. Each plugin will register handler  on 
each event during init process. Each handler will use some sort of core API 
to communicate with game server (for example to send message to player). 

Twisted provided enough good usefull options:
- Easy low level UDP programming
- Easy support of plugins

But how about easy providing high level API to plugins? How about non twisted 
events engine? Should I write theese things from scratch, or I should read 
documentation more deeper and find some sort of framework to write such 
things?

I don't have much Python expirience, that's why I ask this questions.  I've 
some expirience with Zope and TurboGears web frameworks, they are also Python 
based, but I suppose this expirience will be useless with Twisted.



From Sven-Erik.Tiberg at ltu.se  Sun Feb 25 14:52:47 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Sun, 25 Feb 2007 20:52:47 +0100
Subject: [Twisted-Python] send_UDP? 
References: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
	<45DCF980.7030403@gmail.com>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB9104E84B2D@EMMA.personal.adp.ltu.se>

Hi.
 
Just need a small tip, how to send a string by UDP, should I use socket from python or can I use any twisted class.
 
BTW:
 
Put together a rough code for reciving a string of data from simulink ( matlab ) to a H3D ( Haptic Interactive X3D ) application www.h3d.org
 
#import H3D fields and types
from H3DInterface import *
 
recived_vect = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
 
class Set_Position( AutoUpdate( SFVec3f ) ):
 def update( self,event ):
  set_pos[1] = recived_vect[2]
  set_pos[2] = recived_vect[3]
  set_pos[3] = recived_vect[4]
  return set_pos
 
set_a_position=Set_position()
 
class Speedo_value( AutoUpdate( SFVec3f ) ):
 def update( self,event ):
  set_rot[1] = 0.0
  set_rot[2] = 0.0
  set_rot[3] = recived_vect[1]
  return set_rot
 
set_speedo=Speedo_value()
 
from twisted.internet.protocol import DatagramProtocol
from twisted.internet import reactor
 
class Recive_UDP_Package(DatagramProtocol):
 def datagramRecived(self, data):
  recived_vect=data # need to work on this to convert the data string to list element
  set_a_position()
  set_speedo()
 
reactor.listenUDP(7999, Recived_UDP_Package())
reactor.run()
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 4471 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070225/19bb7446/attachment.bin 

From exarkun at divmod.com  Sun Feb 25 15:08:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Feb 2007 15:08:58 -0500
Subject: [Twisted-Python] send_UDP? 
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB9104E84B2D@EMMA.personal.adp.ltu.se>
Message-ID: <20070225200858.25807.1788356898.divmod.quotient.31995@ohm>

On Sun, 25 Feb 2007 20:52:47 +0100, Sven-Erik Tiberg <sven-erik.tiberg at ltu.se> wrote:
>Hi.
>
>Just need a small tip, how to send a string by UDP, should I use socket from python or can I use any twisted class.
>
>BTW:
>
>Put together a rough code for reciving a string of data from simulink ( matlab ) to a H3D ( Haptic Interactive X3D ) application www.h3d.org
>
> [snip]
>
>from twisted.internet.protocol import DatagramProtocol
>from twisted.internet import reactor
>
>class Recive_UDP_Package(DatagramProtocol):
> def datagramRecived(self, data):
>  recived_vect=data # need to work on this to convert the data string to list element
>  set_a_position()
>  set_speedo()
>
>reactor.listenUDP(7999, Recived_UDP_Package())

After this port is set up, the Recived_UDP_Package instance will have a
'transport' attribute which you can use to send UDP packets.  For details,
see:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html

Jean-Paul



From lee.a.connell at gmail.com  Sun Feb 25 18:26:33 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 25 Feb 2007 18:26:33 -0500
Subject: [Twisted-Python] LineReceiver
Message-ID: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>

Hello all,

I am building a basic chat program.  I am using LineReceiver for the
protocol on both the server and the client.  My problem is when i loop
through all the clients in my ServerFactory and choose to send data to the
client with multiple calls to transport.write(data), the client side does
not pick it up in two seperate calls, instead it is received in one
lineReceive. In the server I call transport.write() twice, the client
however receives both calls in one lineReceive instead of two lineRecieve
calls, how can I get lineReceive to be fired for each transported message?

//// CLIENT LINE RECEIVE ////

    def lineReceived(self, line):
        if self.app:
            self.app.addMessage(line)

//// SERVER CONNECTION MADE ////

    def connectionMade(self):
        self.factory.clients.append(self)
        host = self.transport.getPeer().host + ": joined the server."

        for c in self.factory.clients:
            c.transport.write(host + '\n')
            if self == c:
                c.transport.write(self.getMOTD())   ### getMOTD just returns
some string ###
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070225/b211bbc3/attachment.htm 

From exarkun at divmod.com  Sun Feb 25 18:45:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Feb 2007 18:45:35 -0500
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
Message-ID: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>

On Sun, 25 Feb 2007 18:26:33 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hello all,
>
>I am building a basic chat program.  I am using LineReceiver for the
>protocol on both the server and the client.  My problem is when i loop
>through all the clients in my ServerFactory and choose to send data to the
>client with multiple calls to transport.write(data), the client side does
>not pick it up in two seperate calls, instead it is received in one
>lineReceive. In the server I call transport.write() twice, the client
>however receives both calls in one lineReceive instead of two lineRecieve
>calls, how can I get lineReceive to be fired for each transported message?

The purpose of LineReceiver is to take a stream of bytes which no guarantees
about how many bytes will be received at a time and make it appear as a line
stream where each complete line is delivered separately.

Since you are using LineReceiver, rather than calling self.transport.write,
you should probably be using self.sendLine, which will insert the delimiter
bytes for you.  You must also be careful not to include the delimiter bytes
in the strings you pass to self.sendLine.

>
>//// CLIENT LINE RECEIVE ////
>
>    def lineReceived(self, line):
>        if self.app:
>            self.app.addMessage(line)
>
>//// SERVER CONNECTION MADE ////
>
>    def connectionMade(self):
>        self.factory.clients.append(self)
>        host = self.transport.getPeer().host + ": joined the server."
>
>        for c in self.factory.clients:
>            c.transport.write(host + '\n')

So, consider doing this instead:

      c.sendLine(host)

>            if self == c:
>                c.transport.write(self.getMOTD())   ### getMOTD just returns
>some string ###

As well as:

      c.sendLine(self.getMOTD())

Also note that the default LineReceiver line delimiter is \r\n, not \n.

Jean-Paul



From einar.twisted at norsk-esport.no  Mon Feb 26 05:57:18 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Mon, 26 Feb 2007 11:57:18 +0100
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>
References: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>
Message-ID: <45E2BD0E.4070101@norsk-esport.no>

Jean-Paul Calderone wrote:
> Also note that the default LineReceiver line delimiter is \r\n, not \n.

Lee,
If for some reason you need to transmit messages which include \r\n or
\n, then you can easily change the delimiter in your protocol to e.g.
"\x04" (EOT, End Of Transmission).

from twisted.protocols import basic
class MyLineReceiverProtocol(basic.LineReceiver):
    delimiter = "\x04"

Remember to perform this modification both clientside and serverside.

More info:
http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html

There's also LineOnlyReceiver: "A protocol that receives only lines.
This is purely a speed optimisation over LineReceiver, for the cases
that raw mode is known to be unnecessary."
http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineOnlyReceiver.html

Cheers,
Einar



From jarrod at vertigrated.com  Mon Feb 26 10:49:54 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Mon, 26 Feb 2007 10:49:54 -0500
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
References: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
Message-ID: <fa3d0c740702260749n5f79c6e7jfc726ee5cfd57041@mail.gmail.com>

On 2/25/07, Lee Connell <lee.a.connell at gmail.com> wrote:
>
> Hello all,
>
>
>         for c in self.factory.clients:
>             c.transport.write(host + '\n')
>             if self == c:
>                 c.transport.write(self.getMOTD())   ### getMOTD just
> returns some string ###



the default line separator is "\r\n" you are just sending "\n"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070226/4d2bfd65/attachment.htm 

From alvinwang at gmail.com  Mon Feb 26 18:17:54 2007
From: alvinwang at gmail.com (Alvin Wang)
Date: Mon, 26 Feb 2007 15:17:54 -0800
Subject: [Twisted-Python] using py2exe or pyinstaller on twistd
Message-ID: <77d044440702261517q43973f3bi57dec3557c773855@mail.gmail.com>

I mentioned at Pycon that I wanted to use Py2exe to distribute my tac.  How
would it be done?  The alternate method I had been using was not using a tac
file but that was not recommended.

Thanks
Alvin Wang

PS
It was great meeting some of the Twisted folk at Pycon.  Highly
recommended!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070226/528d8d2b/attachment.htm 

From pmarks at purdue.edu  Tue Feb 27 14:12:23 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 14:12:23 -0500
Subject: [Twisted-Python] twisted-names: Cryptic error with no traceback?
Message-ID: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>

Some users of a program that I'm writing have been reporting this
error that I so far have been unable to track down.  It seems that it
originates from Twisted, but that it skips around my errback handler,
and provides no traceback information:

      Traceback (most recent call last):
      Failure: twisted.names.error.DNSQueryTimeoutError:


My query is made from line 121 here:
http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup

Does anyone have any insight as to where this error could be coming
from, and why it isn't getting trapped by my errback function?  I
don't know yet whether this is a problem in Twisted, or if I'm doing
something incorrect in my err_cb.



From pmarks at purdue.edu  Tue Feb 27 15:18:26 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 15:18:26 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no traceback?
In-Reply-To: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>
References: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>
Message-ID: <8e5b27790702271218r72d25f2dp8f88410e32a015cd@mail.gmail.com>

On 2/27/07, Paul Marks <pmarks at purdue.edu> wrote:
> Some users of a program that I'm writing have been reporting this
> error that I so far have been unable to track down.  It seems that it
> originates from Twisted, but that it skips around my errback handler,
> and provides no traceback information:
>
>       Traceback (most recent call last):
>       Failure: twisted.names.error.DNSQueryTimeoutError:
>
>
> My query is made from line 121 here:
> http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup
>
> Does anyone have any insight as to where this error could be coming
> from, and why it isn't getting trapped by my errback function?  I
> don't know yet whether this is a problem in Twisted, or if I'm doing
> something incorrect in my err_cb.
>

Update:
Yay, I finally found the bug!  Turns out it's a problem in Twisted.

Inside DNSDatagramProtocol.writeMessage, it writes to the UDP socket,
and never checks for socket.error.

If a socket.error does occur, then the query() function blows up
instead of returning its deferred.  So, cancelCall gets forgotten.  A
few seconds later, it chucks a DNSQueryTimeoutError, and the deferred
gets garbage collected without anything handling it.

The solution, I think, is this:
- in query(), move the "self.writeMessage(m, address)" call up a few
lines, to before the Deferred and callLater are created.
- Trap socket.error when making this writeMessage call.  If it catches
one, return a defer.fail() immediately.

Basically, if the UDP packet fails to be sent, then the timeout should
never be created.



From exarkun at divmod.com  Tue Feb 27 20:07:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Feb 2007 20:07:17 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <8e5b27790702271218r72d25f2dp8f88410e32a015cd@mail.gmail.com>
Message-ID: <20070228010717.17852.300366468.divmod.quotient.598@ohm>

On Tue, 27 Feb 2007 15:18:26 -0500, Paul Marks <pmarks at purdue.edu> wrote:
>On 2/27/07, Paul Marks <pmarks at purdue.edu> wrote:
>>Some users of a program that I'm writing have been reporting this
>>error that I so far have been unable to track down.  It seems that it
>>originates from Twisted, but that it skips around my errback handler,
>>and provides no traceback information:
>>
>>       Traceback (most recent call last):
>>       Failure: twisted.names.error.DNSQueryTimeoutError:
>>
>>
>>My query is made from line 121 here:
>>http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup
>>
>>Does anyone have any insight as to where this error could be coming
>>from, and why it isn't getting trapped by my errback function?  I
>>don't know yet whether this is a problem in Twisted, or if I'm doing
>>something incorrect in my err_cb.
>
>Update:
>Yay, I finally found the bug!  Turns out it's a problem in Twisted.
>
>Inside DNSDatagramProtocol.writeMessage, it writes to the UDP socket,
>and never checks for socket.error.
>
>If a socket.error does occur, then the query() function blows up
>instead of returning its deferred.  So, cancelCall gets forgotten.  A
>few seconds later, it chucks a DNSQueryTimeoutError, and the deferred
>gets garbage collected without anything handling it.

What socket.error are you seeing?

Jean-Paul



From exarkun at divmod.com  Tue Feb 27 20:31:36 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Feb 2007 20:31:36 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <20070228010717.17852.300366468.divmod.quotient.598@ohm>
Message-ID: <20070228013136.17852.366140032.divmod.quotient.611@ohm>

On Tue, 27 Feb 2007 20:07:17 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>
>What socket.error are you seeing?
>

Ahh, I see you filed a ticket which includes the traceback.

Jean-Paul



From pmarks at purdue.edu  Tue Feb 27 22:25:11 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 22:25:11 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <20070228013136.17852.366140032.divmod.quotient.611@ohm>
References: <20070228010717.17852.300366468.divmod.quotient.598@ohm>
	<20070228013136.17852.366140032.divmod.quotient.611@ohm>
Message-ID: <8e5b27790702271925g479e4137h13ce04cdbe771bd9@mail.gmail.com>

On 2/27/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 27 Feb 2007 20:07:17 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > [snip]
> >
> >What socket.error are you seeing?
> >
>
> Ahh, I see you filed a ticket which includes the traceback.
>
> Jean-Paul

Actually, I was having 2 separate issues; one was the non-handling of
the socket.error, which was obvious after seeing the traceback.  The
other was the mysterious DNSQueryTimeoutError that I started this
thread about.  I filed that ticket before I realized that one was
actually causing the other, but it all seems to make sense now.



From allison at shasta.stanford.edu  Tue Feb 27 23:20:13 2007
From: allison at shasta.stanford.edu (Dennis Allison)
Date: Tue, 27 Feb 2007 20:20:13 -0800 (PST)
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
Message-ID: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>


I have written a highly simplified twisted web server using twisted
extending one of the demos, but I have one small problem.

I cannot see out how to arrange to have the server listen one particluar
address:port combination.  The system I want to use it on has a pair of
NICs and I need the server to listen on one NIC and not the other due to
port conflicts.

Any help would be appreciated.






From glyph at divmod.com  Wed Feb 28 00:30:46 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Feb 2007 00:30:46 -0500
Subject: [Twisted-Python] using py2exe or pyinstaller on twistd
In-Reply-To: <77d044440702261517q43973f3bi57dec3557c773855@mail.gmail.com>
Message-ID: <20070228053046.17852.13430118.divmod.quotient.702@ohm>

On Mon, 26 Feb 2007 15:17:54 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
>I mentioned at Pycon that I wanted to use Py2exe to distribute my tac.  How
>would it be done?  The alternate method I had been using was not using a tac
>file but that was not recommended.

Not using a tac seems fairly reasonable to me.  If you want to use py2exe, you've probably got a deployment environment where twistd would not make much sense.

You might want to write a Twisted plugin and invoke that from your non-tac python mainpoint; that way it would also be usable from twistd.

>Thanks
>Alvin Wang
>
>PS
>It was great meeting some of the Twisted folk at Pycon.  Highly
>recommended!!

Yeah!



From jml at mumak.net  Wed Feb 28 03:43:39 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 28 Feb 2007 19:43:39 +1100
Subject: [Twisted-Python] Making a duck-typed traceback from a Failure
Message-ID: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>

Hello,

I've recently been doing work with Twisted tests from within the Zope
testrunner. It's a real pain because if the tests or their callbacks
raise exceptions, no traceback gets given to the result object. See
#2495.

The fix I've uploaded doesn't actually help me. By the time the result
object gets the failures, they've been cleaned with cleanFailure --
Failure.tb is None and everything is a string.

Is it possible to make a duck-typed traceback from a cleaned Failure?
I haven't really looked into it, but I can't think of why not off the
top of my head. Granted I ran out of thought gluons a couple of hours
ago.

cheers,
jml



From itamar at itamarst.org  Wed Feb 28 08:52:57 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Feb 2007 08:52:57 -0500
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
In-Reply-To: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>
References: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>
Message-ID: <1172670777.27212.12.camel@localhost.localdomain>

On Tue, 2007-02-27 at 20:20 -0800, Dennis Allison wrote:
> I have written a highly simplified twisted web server using twisted
> extending one of the demos, but I have one small problem.

I assume there was good reason for not using twisted.web? or even web2?

> I cannot see out how to arrange to have the server listen one particluar
> address:port combination.  The system I want to use it on has a pair of
> NICs and I need the server to listen on one NIC and not the other due to
> port conflicts.

listenTCP(80, factory, interface="127.0.0.1")




From allison at shasta.stanford.edu  Wed Feb 28 09:00:28 2007
From: allison at shasta.stanford.edu (Dennis Allison)
Date: Wed, 28 Feb 2007 06:00:28 -0800 (PST)
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
In-Reply-To: <1172670777.27212.12.camel@localhost.localdomain>
Message-ID: <Pine.LNX.4.44.0702280554560.23564-100000@shasta.stanford.edu>

Thank you.  My server is a twisted.web server. For some reason, I missed
the "interface" parameter when I was reading the code the first couple of
times--I finally figured it out late last night.  For a system as rich as
twisted, the documentation is sparse.

On Wed, 28 Feb 2007, Itamar Shtull-Trauring wrote:

> On Tue, 2007-02-27 at 20:20 -0800, Dennis Allison wrote:
> > I have written a highly simplified twisted web server using twisted
> > extending one of the demos, but I have one small problem.
> 
> I assume there was good reason for not using twisted.web? or even web2?
> 
> > I cannot see out how to arrange to have the server listen one particluar
> > address:port combination.  The system I want to use it on has a pair of
> > NICs and I need the server to listen on one NIC and not the other due to
> > port conflicts.
> 
> listenTCP(80, factory, interface="127.0.0.1")
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 




From jml at mumak.net  Wed Feb 28 19:16:17 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Mar 2007 11:16:17 +1100
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>
References: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>
Message-ID: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>

On 2/28/07, Jonathan Lange <jml at mumak.net> wrote:
> Is it possible to make a duck-typed traceback from a cleaned Failure?
> I haven't really looked into it, but I can't think of why not off the
> top of my head. Granted I ran out of thought gluons a couple of hours
> ago.
>

<exarkun> jml: if you refine the question with some details (why isn't
there a real traceback, what do you want to do with the reconstructed
traceback, etc), I might be able to produce some useful feedback

1. Why isn't there a real traceback

The failure is caught in an errback in Trial's run().
Deferred._runCallbacks calls Failure.cleanFailure on any failures that
are returned from Deferreds. By the time the TestResult object gets
the failure, cleanFailure() has been run on it.

cleanFailure() sets Failure.tb to None, and converts all of the frames
into strings. This ensures that we don't keep references to a billion
different objects every time there is a failure.


2. What do I want to do with it

I want to pass the duck-typed traceback along with the exception type
and exception value to traceback.format_exception.


cheers,
jml



From exarkun at divmod.com  Wed Feb 28 20:50:16 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Feb 2007 20:50:16 -0500
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>
Message-ID: <20070301015016.17852.1513181203.divmod.quotient.1157@ohm>

On Thu, 1 Mar 2007 11:16:17 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 2/28/07, Jonathan Lange <jml at mumak.net> wrote:
>>Is it possible to make a duck-typed traceback from a cleaned Failure?
>>I haven't really looked into it, but I can't think of why not off the
>>top of my head. Granted I ran out of thought gluons a couple of hours
>>ago.
>
><exarkun> jml: if you refine the question with some details (why isn't
>there a real traceback, what do you want to do with the reconstructed
>traceback, etc), I might be able to produce some useful feedback
>
>1. Why isn't there a real traceback
>
>The failure is caught in an errback in Trial's run().
>Deferred._runCallbacks calls Failure.cleanFailure on any failures that
>are returned from Deferreds. By the time the TestResult object gets
>the failure, cleanFailure() has been run on it.
>
>cleanFailure() sets Failure.tb to None, and converts all of the frames
>into strings. This ensures that we don't keep references to a billion
>different objects every time there is a failure.
>

To clarify slightly (this may be what you meant), _runCallbacks only calls
cleanFailure on Failures which run into the end of the callback chain.  So
any Failure which is returned by a callback while there is an errback left
to be processed will not have cleanFailure called on it.

>
>2. What do I want to do with it
>
>I want to pass the duck-typed traceback along with the exception type
>and exception value to traceback.format_exception.
>

Is it particularly important that the exception be formatted using that
particular function?  Failure.printTraceback() exists to deal with the
fact that Failure doesn't play nicely with the traceback module.

If you absolutely must go through format_exception, then I guess you can
create an object which is traceback-like enough for the traceback module.
It probably wouldn't even be /that/ tedious.  I don't have any particular
suggestions for doing this.  Traceback objects have some attributes, I
think you'll just need to make a class and give it some attributes (and
another for frames).

Jean-Paul



From jml at mumak.net  Wed Feb 28 21:03:23 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Mar 2007 13:03:23 +1100
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <20070301015016.17852.1513181203.divmod.quotient.1157@ohm>
References: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>
	<20070301015016.17852.1513181203.divmod.quotient.1157@ohm>
Message-ID: <d06a5cd30702281803x62f0d0d6g3035f82d34dc725@mail.gmail.com>

On 3/1/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 1 Mar 2007 11:16:17 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >2. What do I want to do with it
> >
> >I want to pass the duck-typed traceback along with the exception type
> >and exception value to traceback.format_exception.
> >
>
> Is it particularly important that the exception be formatted using that
> particular function?  Failure.printTraceback() exists to deal with the
> fact that Failure doesn't play nicely with the traceback module.
>

It is important. unittest in the standard library and the Zope
testrunner both use format_exception to display errors.

> If you absolutely must go through format_exception, then I guess you can
> create an object which is traceback-like enough for the traceback module.
> It probably wouldn't even be /that/ tedious.  I don't have any particular
> suggestions for doing this.  Traceback objects have some attributes, I
> think you'll just need to make a class and give it some attributes (and
> another for frames).
>

I'll do this then.

Thanks,
jml



From garyjefferson123 at gmail.com  Thu Feb  1 22:43:48 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Thu, 1 Feb 2007 22:43:48 -0700
Subject: [Twisted-Python] testing for error conditions
Message-ID: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>

I've got a little test program that checks to make sure my protocol
behaves correctly.  Each function returns a deferred, and sets the
next function as the callback, and some common function as errback.
This seems to work great -- the test runs through all the test funcs
when working properly, and halts at the problem point if not.

But now I want to verify that I get errors (errbacks) in all the
places I should.  I was hoping to do the same thing as before, only
now swap the function of the errbacks with that of the callbacks.

This doesn't seem to work.  Returning a deferred from an errback still
results in its parent errbacks getting called, terminating the test
program prematurely.

Whats the right way to test conditions that should trigger errbacks?
I couldn't see a tutorial or doc that covered this.

Thanks,
Gary



From jml at mumak.net  Thu Feb  1 23:01:31 2007
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 2 Feb 2007 17:01:31 +1100
Subject: [Twisted-Python] testing for error conditions
In-Reply-To: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>
References: <62ad745a0702012143m629ac54asfe83f0b93e4787a9@mail.gmail.com>
Message-ID: <d06a5cd30702012201ja5766c3w2a6fe3cff73975c3@mail.gmail.com>

On 2/2/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
> I've got a little test program that checks to make sure my protocol
> behaves correctly.  Each function returns a deferred, and sets the
> next function as the callback, and some common function as errback.
> This seems to work great -- the test runs through all the test funcs
> when working properly, and halts at the problem point if not.
>
<snip>
> Whats the right way to test conditions that should trigger errbacks?
> I couldn't see a tutorial or doc that covered this.
>

Hey Gary,

Twisted's unit testing framework, Trial, already has a bunch of
features to make this really easy.

Make a module that contains subclasses of
twisted.trial.unittest.TestCase. The code should look something like
this:

from twisted.trial import unittest

class YourTests(unittest.TestCase):
    def setUp(self):
        self.interestingProtocol = InterestingProtocol()

    def test_successPath(self):
        d = self.interestingProtocol.doSomethingSuccessfully()
        d.addCallback(lambda val: self.assertEqual(val, "expected"))
        return d

    def test_failurePath(self):
        d = self.interestingProtocol.causeErrback()
        return self.assertFailure(d, ExpectedError)


Notice that the two tests in this module both return Deferreds. Trial
will notice this and make sure that the tests are run in sequence.

To run the tests, simple go "trial
yourpackage.test.test_interestingprotocol" on the command line. Trial
accepts paths to files or fully-qualified Python names. If you specify
a package, it will recursively look for all modules under that package
that have names starting with 'test_'.

For more information, consult the API docs for twisted.trial.unittest
and the man page for 'trial'.

I'm sorry that there's not a better overview document for writing
tests for Twisted applications. As the Trial maintainer, it's been on
my radar for some time.

Hope this helps,
jml



From sflist at ihonk.com  Fri Feb  2 01:00:49 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 00:00:49 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
Message-ID: <1170403249.13420.16.camel@lothar>

Hi,

I'm doing a Twisted app on Windows. As part of its work it uses
spawnProcess to temporarily spawn a process to communicate with. When I
run the app from the command line in the usual fashion, spawnProcess()
goes on and does its thing quietly and nicely. I then turned the Twisted
app into a Windows Service, and now when it spawns the process, it opens
a terminal window. Any idea how to suppress that? I tried the usePTY
argument but of course that ain't supported on Windows.

Thanks!

Steve




From p.mayers at imperial.ac.uk  Fri Feb  2 02:52:36 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 02 Feb 2007 09:52:36 +0000
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <1170403249.13420.16.camel@lothar>
References: <1170403249.13420.16.camel@lothar>
Message-ID: <45C309E4.8050905@imperial.ac.uk>

Steve Freitas wrote:
> Hi,
> 
> I'm doing a Twisted app on Windows. As part of its work it uses
> spawnProcess to temporarily spawn a process to communicate with. When I
> run the app from the command line in the usual fashion, spawnProcess()
> goes on and does its thing quietly and nicely. I then turned the Twisted
> app into a Windows Service, and now when it spawns the process, it opens
> a terminal window. Any idea how to suppress that? I tried the usePTY
> argument but of course that ain't supported on Windows.

Is the sub-process another python? If so, use "pythonw.exe"



From teratorn at twistedmatrix.com  Fri Feb  2 03:38:44 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 04:38:44 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170403249.13420.16.camel@lothar>
References: <1170403249.13420.16.camel@lothar>
Message-ID: <op.tm4aiux8y3d107@office2>

On Fri, 02 Feb 2007 02:00:49 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Hi,
>
> I'm doing a Twisted app on Windows. As part of its work it uses
> spawnProcess to temporarily spawn a process to communicate with. When I
> run the app from the command line in the usual fashion, spawnProcess()
> goes on and does its thing quietly and nicely. I then turned the Twisted
> app into a Windows Service, and now when it spawns the process, it opens
> a terminal window. Any idea how to suppress that? I tried the usePTY
> argument but of course that ain't supported on Windows.
>
> Thanks!
>
> Steve

Unfortunately Twisted doesn't have any way to alter this behavior.

Processes on Windows will inherit the parent's console by default. So when  
you run from the command-line it doesn't need to create a new one.

But when run as a service I suspect that the parent process (Twisted) is  
created DETACHED, so it doesn't have a console. But when you spawn a new  
child it just uses the defaults which then gives you a console.

For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx

spawnProcess is currently slated for a redesign as per  
http://twistedmatrix.com/trac/ticket/2415

I will make sure this concern is address in some form or fashion, but in  
the mean time you will have to do some work yourself if you really need  
this feature. Let use know if you get stuck :)

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Fri Feb  2 04:25:58 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 05:25:58 -0600
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <45C309E4.8050905@imperial.ac.uk>
References: <1170403249.13420.16.camel@lothar>
	<45C309E4.8050905@imperial.ac.uk>
Message-ID: <op.tm4cpk0ky3d107@office2>

On Fri, 02 Feb 2007 03:52:36 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
wrote:

> Steve Freitas wrote:
>> Hi,
>>  I'm doing a Twisted app on Windows. As part of its work it uses
>> spawnProcess to temporarily spawn a process to communicate with. When I
>> run the app from the command line in the usual fashion, spawnProcess()
>> goes on and does its thing quietly and nicely. I then turned the Twisted
>> app into a Windows Service, and now when it spawns the process, it opens
>> a terminal window. Any idea how to suppress that? I tried the usePTY
>> argument but of course that ain't supported on Windows.
>
> Is the sub-process another python? If so, use "pythonw.exe"

If only! :)

Presumably the only reason he is using Twisted's process spawning API is  
because it connects stdin/out/err to the reactor. Otherwise you should  
just use one of Python's many options.

With pythonw, however, it doesn't create a console and this basically  
means that stdin/out/err are totally useless. Microsoft's C run-time  
connects stdout/err to buffers that go nowhere and as soon as you fill the  
buffers any further writes will fail with a Bad File Descriptor. You can't  
read from stdin at all. Great fun, huh? ;)

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Fri Feb  2 04:27:40 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 05:27:40 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4aiux8y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
Message-ID: <op.tm4cseu3y3d107@office2>

On Fri, 02 Feb 2007 04:38:44 -0600, Eric Mangold  
<teratorn at twistedmatrix.com> wrote:

> On Fri, 02 Feb 2007 02:00:49 -0600, Steve Freitas <sflist at ihonk.com>  
> wrote:
>
>> Hi,
>>
>> I'm doing a Twisted app on Windows. As part of its work it uses
>> spawnProcess to temporarily spawn a process to communicate with. When I
>> run the app from the command line in the usual fashion, spawnProcess()
>> goes on and does its thing quietly and nicely. I then turned the Twisted
>> app into a Windows Service, and now when it spawns the process, it opens
>> a terminal window. Any idea how to suppress that? I tried the usePTY
>> argument but of course that ain't supported on Windows.
>>
>> Thanks!
>>
>> Steve
>
> Unfortunately Twisted doesn't have any way to alter this behavior.
>
> Processes on Windows will inherit the parent's console by default. So  
> when you run from the command-line it doesn't need to create a new one.
>
> But when run as a service I suspect that the parent process (Twisted) is  
> created DETACHED, so it doesn't have a console. But when you spawn a new  
> child it just uses the defaults which then gives you a console.
>
> For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
> documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx
>
> spawnProcess is currently slated for a redesign as per  
> http://twistedmatrix.com/trac/ticket/2415
>
> I will make sure this concern is address in some form or fashion, but in  
> the mean time you will have to do some work yourself if you really need  
> this feature. Let use know if you get stuck :)

Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100% sure  
w/o running some tests.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Fri Feb  2 10:05:40 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 09:05:40 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4cseu3y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2>
Message-ID: <1170435940.13420.38.camel@lothar>

Thanks for the very informative replies, Eric.

On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
> > Processes on Windows will inherit the parent's console by default. So  
>> when you run from the command-line it doesn't need to create a new
>> one.

>Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100%
>sure w/o running some tests.

Okay... So I've got to somehow figure out how to launch the parent
Twisted instance with CREATE_NO_WINDOW (or DETACHED_PROCESS, or
whatever), then?

I'm using Hammond's pythonservice.exe, which was a side effect of using
this approach to installing and running the Windows service:

http://twistedmatrix.com/pipermail/twisted-python/2006-August/013790.html

Also, I have access to the source code of the process I'm launching --
if I can't figure out how to solve this from the Twisted side, might I
be able to resolve it by modifying the process I'm launching?

Steve




From sflist at ihonk.com  Fri Feb  2 10:09:38 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 09:09:38 -0800
Subject: [Twisted-Python] Suppressing terminal window
	from	reactor.spawnProcess?
In-Reply-To: <op.tm4cpk0ky3d107@office2>
References: <1170403249.13420.16.camel@lothar>
	<45C309E4.8050905@imperial.ac.uk>  <op.tm4cpk0ky3d107@office2>
Message-ID: <1170436178.13420.45.camel@lothar>

On Fri, 2007-02-02 at 05:25 -0600, Eric Mangold wrote:
> On Fri, 02 Feb 2007 03:52:36 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
> wrote:
> > Is the sub-process another python? If so, use "pythonw.exe"
> 
> If only! :)
> 
> Presumably the only reason he is using Twisted's process spawning API is  
> because it connects stdin/out/err to the reactor. Otherwise you should  
> just use one of Python's many options.

Actually, Phil may be on to something here. :-) Though it would be nice
for logging purposes, I actually don't need access to to the process's
stdin/out/err. Since I'm communicating with it via sockets, I just need
to launch the process, and then later I need a way to forcibly kill it,
if need be.

Steve




From teratorn at twistedmatrix.com  Fri Feb  2 18:07:44 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 19:07:44 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170435940.13420.38.camel@lothar>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
Message-ID: <op.tm5eq6dly3d107@office2>

On Fri, 02 Feb 2007 11:05:40 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Thanks for the very informative replies, Eric.
>
> On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
>> > Processes on Windows will inherit the parent's console by default. So
>>> when you run from the command-line it doesn't need to create a new
>>> one.
>
>> Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100%
>> sure w/o running some tests.
>
> Okay... So I've got to somehow figure out how to launch the parent
> Twisted instance with CREATE_NO_WINDOW (or DETACHED_PROCESS, or
> whatever), then?

Well, no. Since you aren't seeing a console window I assume that  
pythonservice.exe is already doing that for you. Your challenge is to  
launch the child process in the same fashion.

> I'm using Hammond's pythonservice.exe, which was a side effect of using
> this approach to installing and running the Windows service:
>
> http://twistedmatrix.com/pipermail/twisted-python/2006-August/013790.html
>
> Also, I have access to the source code of the process I'm launching --
> if I can't figure out how to solve this from the Twisted side, might I
> be able to resolve it by modifying the process I'm launching?
>
> Steve

It's better to control the parent process. You can easily use  
CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
to kill it. All these functions are in pywin32 which you already have if  
you're using spawnProcess.

You *can*, however, close the console after it's created. Just call  
FreeConsole(). This will have the effect of flashing a console window on  
the screen for a split second. Depending on how you run your service it  
may not have access to the desktop, and I'm not sure if this will cause  
problems with launching processes that try to create console windows.

Alternatively, since this is python, and you don't care about I/O, you can  
use pythonw.exe instead.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Fri Feb  2 18:57:46 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 17:57:46 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm5eq6dly3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
	<op.tm5eq6dly3d107@office2>
Message-ID: <1170467866.15176.16.camel@lothar>

On Fri, 2007-02-02 at 19:07 -0600, Eric Mangold wrote:
> It's better to control the parent process. You can easily use  
> CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
> to kill it. All these functions are in pywin32 which you already have if  
> you're using spawnProcess.
> 
> You *can*, however, close the console after it's created. Just call  
> FreeConsole(). This will have the effect of flashing a console window on  
> the screen for a split second. Depending on how you run your service it  
> may not have access to the desktop, and I'm not sure if this will cause  
> problems with launching processes that try to create console windows.
> 
> Alternatively, since this is python, and you don't care about I/O, you can  
> use pythonw.exe instead.

Thanks! It did. I'm not launching a Python process, but I mistakenly
assumed that Python's built in process launching functions were
blocking, so I didn't bother looking any further when I had
spawnProcess() staring at me.

I decided to use subprocess.Popen(shell=False), and that did it.
However, I've just determined that I need access to stderr after all --
apparently I need to be apprised of errors from stderr during the
process's execution -- so I'm hoping I can figure out a way to do that
within what I'm using now. Time to get some experience creating
file-like objects, I suppose.

Steve




From teratorn at twistedmatrix.com  Fri Feb  2 19:08:36 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 02 Feb 2007 20:08:36 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm5eq6dly3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170435940.13420.38.camel@lothar>
	<op.tm5eq6dly3d107@office2>
Message-ID: <op.tm5hkmk8y3d107@office2>

On Fri, 02 Feb 2007 19:07:44 -0600, Eric Mangold  
<teratorn at twistedmatrix.com> wrote:
[...]
> It's better to control the parent process. You can easily use  
> CreateProcess yourself, and use OpenProcess followed by TerminateProcess  
> to kill it. All these functions are in pywin32 which you already have if  
> you're using spawnProcess.

Actually you don't need OpenProcess since CreateProcess returns the handle  
you need.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Fri Feb  2 22:13:36 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 02 Feb 2007 21:13:36 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on Windows?
Message-ID: <1170479616.15176.27.camel@lothar>

I'm writing a Twisted client that uses PB. It seems to be getting stuck
intermittently -- failing to respond to the server's queries. Sometimes
it gets stuck immediately after login, sometimes after it's been running
fine for a while. I'm starting the Twisted client in a terminal window.
What unsticks it in these cases is always a single ^C. Now, sometimes
that spits up an unhandled exception from some place into the log
(stdout) and then it goes on its merry way -- other times it has no
error to report and moves on like nothing happened.

I'm frequently ctrl-C'ing this program as I try my new changes, and
sometimes it takes one to kill it, and sometimes it takes two. Hopefully
this is a clue.

I thought perhaps I had a deferred that was hanging, but in the entire
client, I'm calling addCallback() exactly once -- and it's followed by
an addErrback(), so I don't think the problem is there.

I first noticed this behavior when it was running as a Windows service,
and I thought it may have been related to the necessity of starting the
reactor with calling reactor.run(installSignalHandlers=0) (I didn't yet
see the tip about periodically passing child signals to the reactor),
but it still happens, albeit apparently less often, with a simple
reactor.run().

Any ideas would be appreciated.

Thanks,

Steve




From sflist at ihonk.com  Sat Feb  3 02:27:53 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 01:27:53 -0800
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
Message-ID: <1170494873.15176.37.camel@lothar>

>From an old thread[1]:

On Sat, 2005-06-11 at 11:35 -0400, Jp Calderone wrote:
> On Sat, 11 Jun 2005 11:08:12 -0400, Matt Feifarek <matt.feifarek at gmail.com> wrote:
> >On 6/10/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >> Register the same SIGCHLD handler twisted does in the main thread, that
> >> should work (they need to be reentrancy-safe anyway so the fact it's
> >> called from a different thread is fine). Possibly a more general
> >> solution could be devised for this, anyone have suggestions?
> >
> >Thanks.
> >
> >So this behavior is by design? Again, it DID work before; for the last
> >year or so, I've been using this code in production on a few servers.
> 
> Yep, and always has been.  If it ever worked, it was by accident (I really don't see how it could have, though, so I can't begin to guess what might have changed to stop it).
> 
> >
> >Perhaps a note could be made in the docs that ProcessProtocol doesn't
> >work in this case.
> >
> >This will make it pretty hard to integrate into other worlds. I'm not
> >sure that I can over-ride the signal handling in Webware and register
> >handlers. Other bits of python libraries might be the same way.
> >
> >I look forward to any "more general solution" that anyone can come up with!
> 
> Here's one:
> 
>   def reapChildren():
>       from twisted.internet import reactor, task
>       t = task.LoopingCall(reactor._handleSigchld, None, None)
>       return t.start(5)
> 
> Of course, it uses a non-public method of reactor (but installSignalHandlers is a non-public argument to reactor.run(), so you're already treading on thin ice :)

I'm trying to diagnose an intermittent pausing problem on Win32, and
t.i.process is unavailable on that platform, which reapChildren() relies
on. Is there no need for this approach when launching the reactor with
installSignalHandlers=0 on Windows?

Steve

[1]http://twistedmatrix.com/pipermail/twisted-python/2005-June/010692.html




From itamar at itamarst.org  Sat Feb  3 07:18:20 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 03 Feb 2007 09:18:20 -0500
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <1170494873.15176.37.camel@lothar>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
	<1170494873.15176.37.camel@lothar>
Message-ID: <1170512300.8589.41.camel@localhost.localdomain>

On Sat, 2007-02-03 at 01:27 -0800, Steve Freitas wrote:

> I'm trying to diagnose an intermittent pausing problem on Win32, and
> t.i.process is unavailable on that platform, which reapChildren() relies
> on. Is there no need for this approach when launching the reactor with
> installSignalHandlers=0 on Windows?

No, SIGCHLD is a Unix thing.




From teratorn at twistedmatrix.com  Sat Feb  3 08:10:14 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 03 Feb 2007 09:10:14 -0600
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170479616.15176.27.camel@lothar>
References: <1170479616.15176.27.camel@lothar>
Message-ID: <op.tm6hrctsy3d107@office2>

On Fri, 02 Feb 2007 23:13:36 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> I'm writing a Twisted client that uses PB. It seems to be getting stuck
> intermittently -- failing to respond to the server's queries. Sometimes
> it gets stuck immediately after login, sometimes after it's been running
> fine for a while. I'm starting the Twisted client in a terminal window.
> What unsticks it in these cases is always a single ^C. Now, sometimes
> that spits up an unhandled exception from some place into the log
> (stdout) and then it goes on its merry way -- other times it has no
> error to report and moves on like nothing happened.
>
> I'm frequently ctrl-C'ing this program as I try my new changes, and
> sometimes it takes one to kill it, and sometimes it takes two. Hopefully
> this is a clue.
>
> I thought perhaps I had a deferred that was hanging, but in the entire
> client, I'm calling addCallback() exactly once -- and it's followed by
> an addErrback(), so I don't think the problem is there.
>
> I first noticed this behavior when it was running as a Windows service,
> and I thought it may have been related to the necessity of starting the
> reactor with calling reactor.run(installSignalHandlers=0) (I didn't yet
> see the tip about periodically passing child signals to the reactor),
> but it still happens, albeit apparently less often, with a simple
> reactor.run().
>
> Any ideas would be appreciated.
>
> Thanks,
>
> Steve

Well I don't really know what your problem is, but here are some things  
you can think about and see if any little lights go off in your head :)

Are you running sub-processes? If a sub-process shares the same console  
some interesting things can happen.

There isn't any way to tell which process will receive console input. See  
this page for what Microsoft has to say about it:
http://msdn2.microsoft.com/en-us/library/ms682528.aspx

In particular:

"(By default, a console process inherits its parent's console, and there  
is no guarantee that input is received by the process for which it was  
intended.)"

Indeed, you can verify this by running a parent process and a child  
process that both read bytes from stdin. You will see that the bytes are  
sent to one process or the other. In my testing it alternated back and  
forth evenly.

Other forms of console input, such as ^C, seem to go to both processes at  
the same time. At least that is what happened in my simple test.

Maybe for you it's only delivering the ^C to one of the procsses, and  
sometimes it's the right one and sometimes not?

Or maybe it's much simpler than this and you just have a bare "except:"  
that is catching and hiding the first KeyboardInterrupt?

As for why your process is hanging in the first place, who is to say?  
Maybe try running under WingIDE (or something) and break in w/ the  
debugger when things hang up. The stack trace ought to give you some clues.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sat Feb  3 11:11:31 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 3 Feb 2007 13:11:31 -0500
Subject: [Twisted-Python] thread synchronization
Message-ID: <000f01c747be$bbeda320$0400a8c0@leelaptop>

While using Twisted, do I have to worry about locking objects to prevent
multiple threads from accessing the object?  From what I’ve read Twisted
doesn’t use a thread for each socket, so I would guess I don’t have to worry
about thread locking?

 

Thanks,

 

Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.21/665 - Release Date: 2/2/2007
11:39 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070203/673e9ff8/attachment.html>

From radix at twistedmatrix.com  Sat Feb  3 11:16:03 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 3 Feb 2007 13:16:03 -0500
Subject: [Twisted-Python] thread synchronization
In-Reply-To: <000f01c747be$bbeda320$0400a8c0@leelaptop>
References: <000f01c747be$bbeda320$0400a8c0@leelaptop>
Message-ID: <60ed19d40702031016i56c39566hef92c5b6c4433102@mail.gmail.com>

On 2/3/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> While using Twisted, do I have to worry about locking objects to prevent
> multiple threads from accessing the object?  >From what I've read Twisted
> doesn't use a thread for each socket, so I would guess I don't have to worry
> about thread locking?

Indeed. Unless you are creating and using threads *yourself*, you
don't need to worry about this manner of locking.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Sat Feb  3 11:19:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 Feb 2007 13:19:22 -0500
Subject: [Twisted-Python] thread synchronization
In-Reply-To: <000f01c747be$bbeda320$0400a8c0@leelaptop>
Message-ID: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>

On Sat, 3 Feb 2007 13:11:31 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>While using Twisted, do I have to worry about locking objects to prevent
>multiple threads from accessing the object?  From what I’ve read Twisted
>doesn’t use a thread for each socket, so I would guess I don’t have to worry
>about thread locking?
>

Correct, Twisted does not use a thread for each socket.  In general, Twisted
will always only call code you have defined in a single thread, the reactor
thread.  So in general, no explicit locking is required.

Jean-Paul



From sflist at ihonk.com  Sat Feb  3 12:33:23 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 11:33:23 -0800
Subject: [Twisted-Python] Problem: spawnProcess() never ending when
	installSignalHandlers=False
In-Reply-To: <1170512300.8589.41.camel@localhost.localdomain>
References: <20050611153537.5047.1641691101.divmod.quotient.1023@ohm>
	<1170494873.15176.37.camel@lothar>
	<1170512300.8589.41.camel@localhost.localdomain>
Message-ID: <1170531203.15176.57.camel@lothar>

On Sat, 2007-02-03 at 09:18 -0500, Itamar Shtull-Trauring wrote:
> On Sat, 2007-02-03 at 01:27 -0800, Steve Freitas wrote:
> 
> > I'm trying to diagnose an intermittent pausing problem on Win32, and
> > t.i.process is unavailable on that platform, which reapChildren() relies
> > on. Is there no need for this approach when launching the reactor with
> > installSignalHandlers=0 on Windows?
> 
> No, SIGCHLD is a Unix thing.

Ok, thanks.

Steve




From sflist at ihonk.com  Sat Feb  3 12:46:11 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 11:46:11 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <op.tm6hrctsy3d107@office2>
References: <1170479616.15176.27.camel@lothar>  <op.tm6hrctsy3d107@office2>
Message-ID: <1170531972.15176.71.camel@lothar>

Thanks for your response, gives me a bunch to think about.

On Sat, 2007-02-03 at 09:10 -0600, Eric Mangold wrote:
> As for why your process is hanging in the first place, who is to say?  
> Maybe try running under WingIDE (or something) and break in w/ the  
> debugger when things hang up. The stack trace ought to give you some clues.

Great idea, I'll give it a go.

In related news, I've decided to go back to trying to make
spawnProcess() work for me. I didn't realize it at the time, but when I
do subProcess.Popen(shell=True), although it solved my open console
window problem, it spawned my desired process as a child to a CMD.EXE
process. I didn't think that was a big deal until I figured out how hard
it is under Windows without using either the Taskkill utility (and I
need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
a child process while being absolutely certain that's the process you
want to kill. I'm going to have multiple instances of this process, so I
can't kill by name, and I don't want to kill by PID, because it could
get reused. I'd love to be corrected here if I'm wrong, by the way.

So back it is to spawnProcess(), since it gives me a ProcessProtocol I
can call transport.loseConnection() on to kill exactly what I mean to
kill. To solve the console problem, I'm going to try Igor Kravtchenko's
modified spawnProcess[1], and pass in CREATE_NO_WINDOW or
DETACHED_PROCESS to see what happens.

Steve

[1]http://twistedmatrix.com/pipermail/twisted-python/2006-August/013814.html




From sflist at ihonk.com  Sat Feb  3 13:43:59 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 12:43:59 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170531972.15176.71.camel@lothar>
References: <1170479616.15176.27.camel@lothar>  <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>
Message-ID: <1170535439.15176.75.camel@lothar>

On Sat, 2007-02-03 at 11:46 -0800, Steve Freitas wrote:
> So back it is to spawnProcess(), since it gives me a ProcessProtocol I
> can call transport.loseConnection() on to kill

Thinko, should be transport.signalProcess('KILL')...




From teratorn at twistedmatrix.com  Sat Feb  3 18:02:38 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 03 Feb 2007 19:02:38 -0600
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <1170531972.15176.71.camel@lothar>
References: <1170479616.15176.27.camel@lothar> <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>
Message-ID: <op.tm686otry3d107@office2>

On Sat, 03 Feb 2007 13:46:11 -0600, Steve Freitas <sflist at ihonk.com> wrote:
[...]
> In related news, I've decided to go back to trying to make
> spawnProcess() work for me. I didn't realize it at the time, but when I
> do subProcess.Popen(shell=True), although it solved my open console
> window problem, it spawned my desired process as a child to a CMD.EXE
> process. I didn't think that was a big deal until I figured out how hard
> it is under Windows without using either the Taskkill utility (and I
> need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
> a child process while being absolutely certain that's the process you
> want to kill.
>
> I'm going to have multiple instances of this process, so I
> can't kill by name, and I don't want to kill by PID, because it could
> get reused. I'd love to be corrected here if I'm wrong, by the way.

There really isn't any room for error if you just save the handle that was  
returned when you spawned the process. Just use that in a call to  
TerminateProcess().

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Sat Feb  3 20:05:53 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Sat, 03 Feb 2007 19:05:53 -0800
Subject: [Twisted-Python] Reactor getting stuck in random places on
	Windows?
In-Reply-To: <op.tm686otry3d107@office2>
References: <1170479616.15176.27.camel@lothar> <op.tm6hrctsy3d107@office2>
	<1170531972.15176.71.camel@lothar>  <op.tm686otry3d107@office2>
Message-ID: <1170558353.15176.87.camel@lothar>

On Sat, 2007-02-03 at 19:02 -0600, Eric Mangold wrote:
> On Sat, 03 Feb 2007 13:46:11 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> [...]
> > In related news, I've decided to go back to trying to make
> > spawnProcess() work for me. I didn't realize it at the time, but when I
> > do subProcess.Popen(shell=True), although it solved my open console
> > window problem, it spawned my desired process as a child to a CMD.EXE
> > process. I didn't think that was a big deal until I figured out how hard
> > it is under Windows without using either the Taskkill utility (and I
> > need to run on Win98) or undocumented calls (e.g. Sysinternals) to kill
> > a child process while being absolutely certain that's the process you
> > want to kill.
> >
> > I'm going to have multiple instances of this process, so I
> > can't kill by name, and I don't want to kill by PID, because it could
> > get reused. I'd love to be corrected here if I'm wrong, by the way.
> 
> There really isn't any room for error if you just save the handle that was  
> returned when you spawned the process. Just use that in a call to  
> TerminateProcess().

Yeah, that's another thing that drove me back to spawnProcess(). With
subprocess.Popen, I have to use shell=True to keep the terminal window
hidden, and then I don't have the handle (or even the PID obtained
directly) of the process that gets launched as a child of CMD.EXE, so
I'm stuck with a little uncertainty when I try to kill the process.

Steve




From vince6 at offshore.ai  Sat Feb  3 21:09:10 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Sun, 04 Feb 2007 00:09:10 -0400
Subject: [Twisted-Python] BananaError "longer than 64 bytes worth of prefix"
In-Reply-To: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
References: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
Message-ID: <1170562151.10246.74.camel@vinceworkstation.offshore.ai>


If I Jelly/Banana a 384 bit RSA key, all is fine.  But if I do 1024 bit
key it complains with:

  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line
138, in dataReceived
    raise BananaError("Security precaution: longer than 64 bytes worth
of prefix")
twisted.spread.banana.BananaError: Security precaution: longer than 64
bytes worth of prefix

Code to show problem is below.   It seems like banana does not believe
anyone would want numbers taking up more than 64 bytes, but for RSA keys
such numbers are common.  Should I be doing something different?  

   -- Vince


#!/usr/bin/python

from Crypto.PublicKey import RSA
from os import urandom
from twisted.spread import banana,jelly

# works for 384 bit RSA keys but not 1024
def JellyKeyTest(size):
    print "KeyTest with size=",size
    RSAkey = RSA.generate(size, urandom)   
    mykeyserial=banana.encode(jelly.jelly(RSAkey))
    RSAkey=jelly.unjelly(banana.decode(mykeyserial))  

JellyKeyTest(384)
JellyKeyTest(1024)







From vince6 at offshore.ai  Sat Feb  3 21:27:08 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Sun, 04 Feb 2007 00:27:08 -0400
Subject: [Twisted-Python] Local Twisted programming contest
In-Reply-To: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
References: <20070203181922.25807.2073123345.divmod.quotient.8664@ohm>
Message-ID: <1170563229.10246.92.camel@vinceworkstation.offshore.ai>


I am doing a series of programming contests for local high-school kids.
The first one was to make a "computer guesses your animal" game that any
number of users could play by telnet.  I gave them an echo program in
Twisted and an Animal program in Python, so they just had to figure out
how to merge these two.  I got 5 kids that showed up to at least one
meeting and one kid that wrote code that worked.  These guys had never
used Python or twisted before, and not really done that much
programming.  The first 2-3 weeks seemed to be just getting started with
Python/twisted and people only seemed to write code in the last week.
Even the ones that did not finished learned some and had fun.   In case
anyone else wants to do such a thing, this was the first assignment at
http://cate.com/apprentice 

I am thinking of a digital coin clearing client/server with a bit of GUI
for the next one.  If anyone has ideas for a programming contest for
high-school kids using Twisted, please let me know.

   -- Vince






From exarkun at twistedmatrix.com  Sat Feb  3 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1170565501.89.264966806@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-28 through 2007-02-04
Bugs opened: 12    Bugs closed: 13  Total open bugs: 825 (-1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  -3          |Conch:    +0           
|Enhancement:  -6  |Normal:   -1          |Core:     -1           
|Task:         +0  |Low:      +2          |Trial:    +1           
                   |Lowest:   +1          |Web:      +1           
                                          |Web2:     +2           
                                          |Website:  -5           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2425] t.i.tcp should not use os.strerror for Windows socket error codes (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/2425

[#2426] Delete the s*** at the end of failure.py (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2426

[#2428] TestCase.setUpClass and TestCase.flushLoggedErrors conflict (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2428

[#2429] domish.Element can't easy access elements named 'name' (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2429

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2431] _dumbwin32proc leaks process handle (opened by bwh)
    defect          core       http://twistedmatrix.com/trac/ticket/2431

[#2432] twisted.python.win32 uses unreliable method to find standard directories (opened by bwh)
    defect          core       http://twistedmatrix.com/trac/ticket/2432

                    ===== Low =====
[#2427] ADBAPI delay_connect error using Sybase (opened by hoadley) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2427

[#2433] twisted.web2.stream.PostTruncaterStream.read() leaves a dangling deferred which could cause unclean reactor errors (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2433

[#2434] twisted.web2.static.FileSaver.writeFile leaves doesn't do anything with the deferred returned by stream.readIntoFile (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2434

[#2436] Improve conch's cosmetics (opened by jml)
    task            conch      http://twistedmatrix.com/trac/ticket/2436

                    ===== Lowest =====
[#2435] RSS feed news and The Twisted Show (opened by rnc000)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2435



Closed Bugs
______________________
                    ===== Highest =====
[#2421] Make sure that closing events are handled sanely with filetransfer (opened by jml, closed by z3p, fixed)
    task            conch      http://twistedmatrix.com/trac/ticket/2421

[#2405] Various tests require stderr behavior CPython cannot and will not provide (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2405

[#2404] DST calculation problem in log.py/FileLogObserver.getTimezoneOffset (opened by thor, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2404

                    ===== Normal =====
[#1689] Move the Trac configuration files into the WebSite repository (opened by tekNico, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1689

[#1791] Update FAQ links to point to non-obsolete URLs (opened by exarkun, closed by oubiwann, fixed)
    task            website    http://twistedmatrix.com/trac/ticket/1791

[#2142] Make the FAQ a wiki page (opened by jml, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2142

[#2262] Fix Header Search CSS (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2262

[#2263] Fix "logged in as..." CSS (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2263

[#2264] Fix CSS on "Reply" buttons in issue tracker (opened by oubiwann, closed by oubiwann, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2264

[#1072] adbapi: retrying queries on a lost connection (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1072

[#1650] t.p.socks thinks getPeer() returns a tuple (opened by PenguinOfDoom, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1650

                    ===== Low =====
[#1104] seconde in log format. (opened by stilly, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1104

[#2427] ADBAPI delay_connect error using Sybase (opened by hoadley, closed by hoadley, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2427





From exarkun at divmod.com  Sun Feb  4 12:05:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 4 Feb 2007 14:05:43 -0500
Subject: [Twisted-Python] Debian Python 2.4 Buildslave
In-Reply-To: 0
Message-ID: <20070204190543.25807.2082267118.divmod.quotient.9764@ohm>

Saturday morning, halfway through the build for r19561, the PSU for the
machine running the Debian Python 2.4 buildslave fried itself and took
much of the rest of the machine with it.  Consequently, this slave will
be offline until I can replace the machine.  Since this also happens to
be my primary Twisted development machine, I probably won't be doing
much Twisted development either until it is replaced.  In particular,
if you have assigned a branch to me for review, if you'd rather not
wait a week or two, it would probably be best if you found another
reviewer.

Jean-Paul



From sflist at ihonk.com  Mon Feb  5 02:47:21 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 01:47:21 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <op.tm4cseu3y3d107@office2>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2>
Message-ID: <1170668841.16743.37.camel@lothar>

On Fri, 2007-02-02 at 05:27 -0600, Eric Mangold wrote:
> > But when run as a service I suspect that the parent process (Twisted) is  
> > created DETACHED, so it doesn't have a console. But when you spawn a new  
> > child it just uses the defaults which then gives you a console.
> >
> > For what it's worth the win32 API flag of interest is DETACHED_PROCESS  
> > documented here: http://msdn2.microsoft.com/en-us/library/ms684863.aspx
> >
> > spawnProcess is currently slated for a redesign as per  
> > http://twistedmatrix.com/trac/ticket/2415
> >
> > I will make sure this concern is address in some form or fashion, but in  
> > the mean time you will have to do some work yourself if you really need  
> > this feature. Let use know if you get stuck :)
> 
> Actually CREATE_NO_WINDOW might be the flag you want. I'm not 100% sure  
> w/o running some tests.

Just to follow up for posterity, I ended up solving my problem.

First I overrode t.i.posixbase.PosixReactorBase.spawnProcess() with my
own function, the method for which now looks like:

def spawnProcess(self, processProtocol, executable, args=(),
	env={}, path=None, uid=None, gid=None, usePTY=0,
	childFDs=None, win32flags=0):

And inside spawnProcess(), when it goes to create a Process object, I
changed the line to read:

if win32process:
	return Process(self, processProtocol, executable, args,
		env, path, win32flags)

Then I overrode t.i._dumbwin32proc.Process' __init__ function, adding
win32flags to the end of the method's arguments as before, so it looks
like:

def __init__(self, reactor, protocol, command, args, environment,
	path, win32flags=0):

Then, I modded its nested doCreate() function's call to be:

def doCreate():
	self.hProcess, self.hThread, dwPid, dwTid = \
	win32process.CreateProcess(command, cmdline, None, None,
		1, win32flags, env, path, StartupInfo)

And now that I'm passing win32con.DETACHED_PROCESS into my new
spawnProcess(), it works perfectly. I've got stdin/out/err, a proper way
to kill the process I spawned, and no annoying shell window opening.
Just what I wanted for Christmas.

One question: I noticed that the posix reactor is what's running on
Windows -- under what condition does win32eventreactor.Win32Reactor
actually get installed?

Thanks again for your help with this,

Steve




From sflist at ihonk.com  Mon Feb  5 04:18:05 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 03:18:05 -0800
Subject: [Twisted-Python] Log falls over due to recursion
Message-ID: <1170674285.16743.57.camel@lothar>

Submitted as evidence that I'm not as good at thinking through the
consequences of my actions as I'd like. Embarrassingly so. Enjoy.

I'd like to send log events to a log server via xmlrpc. So I created an
object with write() and flush() functions, and passed it to
t.p.log.FileLogObserver. In write(), I intended to use
t.w.xmlrpc.Proxy.callRemote() to send the log entry someplace. However,
this creates some log messages of its own as the xmlrpc._QueryFactory
starts up and shuts down. These trigger my observer, of course, which
tries to send 'em out over Proxy.callRemote() again, and pretty soon I'm
leaping out of my chair trying to dodge melted drive screws and paper
coin roll wrappers on various ballistic trajectories. (Well, they were
sitting on my computer. Never mind.)

I tried using FileLogObserver.stop() right before the xmlrpc call and
using start() after the call completes. It didn't work, but even if it
did, it would be a poor solution, since it would miss any log events
occurring during that time.

So I guess I need to somehow divert the log output of the consequences
of my particular call (Proxy.callRemote()) to another sink, all the
while leaving the rest of the logging functioning normally. Any
semi-reasonable way to do that?

Steve




From glyph at divmod.com  Mon Feb  5 11:19:56 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 05 Feb 2007 18:19:56 -0000
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
Message-ID: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>

On 09:47 am, sflist at ihonk.com wrote:

>Just to follow up for posterity, I ended up solving my problem.

A diff might be more interesting for posterity than a narrative about how the code was changed :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070205/c673153e/attachment.html>

From teratorn at twistedmatrix.com  Mon Feb  5 12:59:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 05 Feb 2007 13:59:24 -0600
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <1170668841.16743.37.camel@lothar>
References: <1170403249.13420.16.camel@lothar> <op.tm4aiux8y3d107@office2>
	<op.tm4cseu3y3d107@office2> <1170668841.16743.37.camel@lothar>
Message-ID: <op.tnakharfy3d107@office2>

On Mon, 05 Feb 2007 03:47:21 -0600, Steve Freitas <sflist at ihonk.com> wrote:
[...]
> One question: I noticed that the posix reactor is what's running on
> Windows -- under what condition does win32eventreactor.Win32Reactor
> actually get installed?
>
> Thanks again for your help with this,
>
> Steve

You must install the win32 event reactor yourself or use twistd -r win32.  
Note that the win32 reactor isn't as well supported as the default  
'select' reactor.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Mon Feb  5 18:21:15 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 05 Feb 2007 17:21:15 -0800
Subject: [Twisted-Python] Suppressing terminal window from
	reactor.spawnProcess?
In-Reply-To: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>
References: <20070205181956.28203.1184408711.divmod.xquotient.779@joule.divmod.com>
Message-ID: <1170724875.16743.81.camel@lothar>

On Mon, 2007-02-05 at 18:19 +0000, glyph at divmod.com wrote:
> On 09:47 am, sflist at ihonk.com wrote:
> 
> >Just to follow up for posterity, I ended up solving my problem.
> 
> A diff might be more interesting for posterity than a narrative about
> how the code was changed :)

You didn't like the buildup? The character arc? The crescendo?!?!? And
then the gentle fall back to our earthly vulnerabilities at the end?

Pfft.

I didn't patch it because I didn't want the maintenance headaches, so I
threw together the attached file instead, copying and pasting from the
original places, all possibly gratuitous imports included. If anyone
wants to use it, import it and call upgradeSpawnProcess(). It worked
nicely when I wanted to use DETACHED_PROCESS and CREATE_NO_WINDOW. No
idea what happens with anything else.

Steve
-------------- next part --------------
A non-text attachment was scrubbed...
Name: newSpawnProcess.py
Type: text/x-python
Size: 8356 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070205/52271842/attachment-0002.py>

From abierbaum at gmail.com  Tue Feb  6 10:03:49 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 11:03:49 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
Message-ID: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>

Has anyone tried/succeded at using twisted.trial with the nose unittest system?

The twisted.trial system works well for pure twisted testing but I
would like to get some of the advaned capabilities of nose in there as
well.  Any advice would be greatly appreciated.

Thanks,
Allen



From jml at mumak.net  Tue Feb  6 15:06:36 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 7 Feb 2007 09:06:36 +1100
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
Message-ID: <d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>

On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> Has anyone tried/succeded at using twisted.trial with the nose unittest system?
>
> The twisted.trial system works well for pure twisted testing but I
> would like to get some of the advaned capabilities of nose in there as
> well.  Any advice would be greatly appreciated.
>

Hey Allen,

I haven't used (or even heard of) nose before. What features from nose
do you want to use with Trial?

As for getting them to work together, Trial tries very hard to be
compatible with the standard library's unittest module, so if nose
understands that, it ought to understand Trial tests.[1]

cheers,
jml

[1] There are a couple of known instances where they won't work.
Hopefully they are listed on the bug tracker.



From abierbaum at gmail.com  Tue Feb  6 16:47:48 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 17:47:48 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
Message-ID: <bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>

On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > Has anyone tried/succeded at using twisted.trial with the nose unittest system?
> >
> > The twisted.trial system works well for pure twisted testing but I
> > would like to get some of the advaned capabilities of nose in there as
> > well.  Any advice would be greatly appreciated.
> >
>
> Hey Allen,
>
> I haven't used (or even heard of) nose before. What features from nose
> do you want to use with Trial?

Nose seems like of like the standard python unittesting framework on
steroids.  It has a great deal of nice features.  You can take a look
here: http://somethingaboutorange.com/mrl/projects/nose/

> As for getting them to work together, Trial tries very hard to be
> compatible with the standard library's unittest module, so if nose
> understands that, it ought to understand Trial tests.[1]

I spent some more time investigating this today and found that someone
has written a plugin for nose that allows it to test twisted code.  I
don't think it looks as nice as trial, but it should work for the
basics.    You can see it here:
http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py

If I run into some serious issues I will try my best to extend this
plugin to support additional capabilities from trial.

Thanks,
Allen

>
> cheers,
> jml
>
> [1] There are a couple of known instances where they won't work.
> Hopefully they are listed on the bug tracker.
>



From radix at twistedmatrix.com  Tue Feb  6 17:00:05 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Feb 2007 19:00:05 -0500
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
Message-ID: <60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>

On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> someone
> has written a plugin for nose that allows it to test twisted code.  I
> don't think it looks as nice as trial, but it should work for the
> basics.    You can see it here:
> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py

UGH

def threaded_reactor():

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From abierbaum at gmail.com  Tue Feb  6 17:05:36 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 18:05:36 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
Message-ID: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>

On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > someone
> > has written a plugin for nose that allows it to test twisted code.  I
> > don't think it looks as nice as trial, but it should work for the
> > basics.    You can see it here:
> > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>
> UGH
>
> def threaded_reactor():

Yep.  Not pretty by any means. :(

I am sure that any suggestions you have to make it better would be
well-recieved by the nose project and the plugin's author.   :)

-Allen
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jml at mumak.net  Tue Feb  6 17:38:26 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 7 Feb 2007 11:38:26 +1100
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
Message-ID: <d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>

On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > someone
> > > has written a plugin for nose that allows it to test twisted code.  I
> > > don't think it looks as nice as trial, but it should work for the
> > > basics.    You can see it here:
> > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> >
> > UGH
> >
> > def threaded_reactor():
>
> Yep.  Not pretty by any means. :(
>
> I am sure that any suggestions you have to make it better would be
> well-recieved by the nose project and the plugin's author.   :)
>

I still need to spend some more time looking at nose, but in this
particular case I think the plugin is unnecessary.

If your tests subclass twisted.trial.unittest.TestCase, then they
should take care of the reactor themselves.[1]

cheers,
jml

[1] For the moment. There are plans to change this, but they are many,
many months away from implementation.



From exarkun at divmod.com  Tue Feb  6 18:49:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Feb 2007 20:49:50 -0500
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
Message-ID: <20070207014950.25807.1089686106.divmod.quotient.12461@ohm>

On Tue, 6 Feb 2007 18:05:36 -0600, Allen Bierbaum <abierbaum at gmail.com> wrote:
>On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>>On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
>> > someone
>> > has written a plugin for nose that allows it to test twisted code.  I
>> > don't think it looks as nice as trial, but it should work for the
>> > basics.    You can see it here:
>> > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>>
>>UGH
>>
>>def threaded_reactor():
>
>Yep.  Not pretty by any means. :(
>
>I am sure that any suggestions you have to make it better would be
>well-recieved by the nose project and the plugin's author.   :)
>

You never mentioned why nose interested you.  What's the attraction?

Jean-Paul



From waterbug at pangalactic.us  Tue Feb  6 19:19:29 2007
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 06 Feb 2007 21:19:29 -0500
Subject: [Twisted-Python] db-based checker
Message-ID: <45C93731.5030400@pangalactic.us>

Here's my checker I mentioned on irc just now, 'UserDbCredChecker',
which I've added to the web2 auth example ... as you can see,
it's pretty trivial, and it works with my twisted.web-based app,
so I'm puzzled why it doesn't work with the web2 auth example I've
added it to.

Sorry this isn't a runnable example, but just wanted to see if
there was anything obvious by inspection before I go and create
a runnable example -- which I'll do if necessary.

Thanks for any suggestions.

Steve

-------------- next part --------------
A non-text attachment was scrubbed...
Name: credsetup.py
Type: text/x-python
Size: 1722 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070206/1228ddb2/attachment-0002.py>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: httpauth.tac
URL: </pipermail/twisted-python/attachments/20070206/1228ddb2/attachment.ksh>

From pmarks at purdue.edu  Tue Feb  6 21:27:23 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 6 Feb 2007 23:27:23 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
Message-ID: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>

I wrote this program that uses Twisted with a bunch of UDP
communication, and a friend of mine got this exception while running
it on Cygwin:

Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
48, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
33, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py",
line 139, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.4/site-packages/twisted/internet/udp.py",
line 114, in doRead
    data, addr = self.socket.recvfrom(self.maxPacketSize)
socket.error: (104, 'Connection reset by peer')


My interpretation is that windows (and therefore Cygwin) can throw a
Connection Reset By Peer error when receiving UDP packets, and Twisted
only checks for the error on win32, but not on Cygwin, because Cygwin
is identified as posix.

Anyway, here's a patch I wrote that fixes the problem by checking for
ECONNRESET on every platform, although I'm not sure if that is the
correct approach.


--- udp.py      2007-01-12 14:55:11.000000000 -0500
+++ /home/paul/test/udp.py      2007-02-06 23:11:55.000000000 -0500
@@ -27,10 +27,10 @@
     from errno import WSAEINTR as EINTR
     from errno import WSAEMSGSIZE as EMSGSIZE
     from errno import WSAECONNREFUSED as ECONNREFUSED
-    from errno import WSAECONNRESET
+    from errno import WSAECONNRESET as ECONNRESET
     EAGAIN=EWOULDBLOCK
 else:
-    from errno import EWOULDBLOCK, EINTR, EMSGSIZE, ECONNREFUSED, EAGAIN
+    from errno import EWOULDBLOCK, EINTR, EMSGSIZE, ECONNREFUSED,
EAGAIN, ECONNRESET

 # Twisted Imports
 from twisted.internet import protocol, base, defer, address
@@ -116,7 +116,7 @@
                 no = se.args[0]
                 if no in (EAGAIN, EINTR, EWOULDBLOCK):
                     return
-                if (no == ECONNREFUSED) or (platformType == "win32"
and no == WSAECONNRESET):
+                if (no == ECONNREFUSED or no == ECONNRESET):
                     if self._connectedAddr:
                         self.protocol.connectionRefused()
                 else:
@@ -276,7 +276,7 @@
                 no = se.args[0]
                 if no in (EAGAIN, EINTR, EWOULDBLOCK):
                     return
-                if (no == ECONNREFUSED) or (platformType == "win32"
and no == WSAECONNRESET):
+                if (no == ECONNREFUSED or no == ECONNRESET):
                     self.protocol.connectionRefused()
                 else:
                     raise



From abierbaum at gmail.com  Tue Feb  6 22:18:39 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Tue, 6 Feb 2007 23:18:39 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <20070207014950.25807.1089686106.divmod.quotient.12461@ohm>
References: <bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<20070207014950.25807.1089686106.divmod.quotient.12461@ohm>
Message-ID: <bea9869d0702062118p61e7b169u76eae67ce9221b4@mail.gmail.com>

[..]
> >Yep.  Not pretty by any means. :(
> >
> >I am sure that any suggestions you have to make it better would be
> >well-recieved by the nose project and the plugin's author.   :)
> >
>
> You never mentioned why nose interested you.  What's the attraction?

I thought I added a link to the page, but you have to look down to the
features sections to see the details:
http://somethingaboutorange.com/mrl/projects/nose/

The most significant feature I like right now is the test discovery.
It just works and makes sense since it will find classes, methods,
modules, packages, nested packages, everything.  It also allows setup
and teardown methods at the module and package scope which can come in
very handy to setup more expensive fixtures.  The output capture seems
like a good feature but I haven't had to use it much yet (it captures
the stdout during a test and only shows it if there is a failure).
The assertion messages are cleaner, it support plugins, the list goes
on.

The summary is that it is just more featureful then the standard
unittest module and it seems like a more solid well-reasoned framework
for testing.  It doesn't do everything, but the things it does do make
a lot of seem to make development easier.

Reading through the link above doesn't take long and it does give a
good idea of the capabilities.

-Allen



From radix at twistedmatrix.com  Tue Feb  6 22:26:06 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 7 Feb 2007 00:26:06 -0500
Subject: [Twisted-Python] db-based checker
In-Reply-To: <45C93731.5030400@pangalactic.us>
References: <45C93731.5030400@pangalactic.us>
Message-ID: <60ed19d40702062126o42b43f3ex73e8d5840223d2c6@mail.gmail.com>

On 2/6/07, Stephen Waterbury <waterbug at pangalactic.us> wrote:
> Here's my checker I mentioned on irc just now, 'UserDbCredChecker',
> which I've added to the web2 auth example ... as you can see,
> it's pretty trivial, and it works with my twisted.web-based app,
> so I'm puzzled why it doesn't work with the web2 auth example I've
> added it to.
>
> Sorry this isn't a runnable example, but just wanted to see if
> there was anything obvious by inspection before I go and create
> a runnable example -- which I'll do if necessary.

Well, if you have a valid ICredentialsChecker and it doesn't work with
web2 (but does with other cred-using code) then I would be inclined to
think it's a  web2 bug. A cursory glance doesn't show me anything
obvious (although it was only cursory) -- although I do notice you're
throwing away useful exception info by raising that ValueError -- I
suggest just getting rid of that try/except entirely. Anyway, probably
the best thing to do at this point is post to the twisted-web mailing
list, and mention the exception (or whatever error condition) you're
getting.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From antoine.pitrou at wengo.com  Wed Feb  7 04:46:14 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 12:46:14 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <1170848774.5120.22.camel@antoine-ubuntu>


Hi,

> I spent some more time investigating this today and found that someone
> has written a plugin for nose that allows it to test twisted code.  I
> don't think it looks as nice as trial, but it should work for the
> basics.    You can see it here:
> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> 
> If I run into some serious issues I will try my best to extend this
> plugin to support additional capabilities from trial.

Since I'm the author of this "plugin" (just a module actually) your
remarks are very welcome.

> > def threaded_reactor():
> 
> Yep.  Not pretty by any means. :(

Oh, certainly not less pretty than the self-admitted hacks that trial
uses (e.g. to stop/restart the reactor).

My "not pretty" solution has something like 50 lines of actual code and
only uses official Twisted features, which makes its complexity very
manageable. Compare that to Trial.

I'm open to any suggestion for not making use of a separate thread but,
until Twisted officially supports stopping and restarting the reactor, I
don't think it's possible (without using any of trial's self-admitted
hacks).

However, I'm not interested in grandiloquent rants about "Threads are
Evil" (I've already read them :-)).

> You never mentioned why nose interested you.  What's the attraction?

Let me give a few points as for nose vs. Trial :
- nose does not depend on Twisted. Unless all your Python projects make
use of Twisted, you certainly don't like having to use a different
testing tool depending on the project.
- nose has nice features, including the ability to write tests as
functions without having to write classes
- nose has a plugin system which already provides several extensions
- nose is documented

Regards

Antoine.





From Andy.Henshaw at gtri.gatech.edu  Wed Feb  7 05:36:31 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Wed, 7 Feb 2007 07:36:31 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
Message-ID: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>

I have some twisted code that supports forwarding serial port data to a tcp socket.  The code needs to run on Windows, so I'm using the win32eventreactor, as is required by the twisted.internet.serialport code.

Now, I need to marry it to a wxPython GUI.  Is there any reasonable way to support the twisted.internet.serialport code using wxreactor?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/1c44c275/attachment.html>

From itamar at itamarst.org  Wed Feb  7 07:53:51 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Feb 2007 09:53:51 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
References: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
Message-ID: <1170860031.8589.64.camel@localhost.localdomain>


> Anyway, here's a patch I wrote that fixes the problem by checking for
> ECONNRESET on every platform, although I'm not sure if that is the
> correct approach.

Could you add an issue to the website? Were you in fact using connected
UDP?




From itamar at itamarst.org  Wed Feb  7 07:55:58 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 07 Feb 2007 09:55:58 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
References: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
Message-ID: <1170860158.8589.67.camel@localhost.localdomain>

On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:

> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
> way to support the twisted.internet.serialport code using wxreactor?

You'll probably have to hack up a version of _threadedselect that's
based on win32eventreactor, unfortunately, since we don't yet have a way
to make it pluggable.




From exarkun at divmod.com  Wed Feb  7 07:57:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 09:57:21 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
Message-ID: <20070207145721.25807.1905078831.divmod.quotient.13217@ohm>

On Tue, 6 Feb 2007 23:27:23 -0500, Paul Marks <pmarks at purdue.edu> wrote:
>I wrote this program that uses Twisted with a bunch of UDP
>communication, and a friend of mine got this exception while running
>it on Cygwin:
>
>Traceback (most recent call last):
>  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
>48, in callWithLogger
>    return callWithContext({"system": lp}, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line
>33, in callWithContext
>    return context.call({ILogContext: newCtx}, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
>line 59, in callWithContext
>    return self.currentContext().callWithContext(ctx, func, *args, **kw)
>  File "/usr/lib/python2.4/site-packages/twisted/python/context.py",
>line 37, in callWithContext
>    return func(*args,**kw)
>--- <exception caught here> ---
>  File "/usr/lib/python2.4/site-packages/twisted/internet/selectreactor.py",
>line 139, in _doReadOrWrite
>    why = getattr(selectable, method)()
>  File "/usr/lib/python2.4/site-packages/twisted/internet/udp.py",
>line 114, in doRead
>    data, addr = self.socket.recvfrom(self.maxPacketSize)
>socket.error: (104, 'Connection reset by peer')
>
>
>My interpretation is that windows (and therefore Cygwin) can throw a
>Connection Reset By Peer error when receiving UDP packets, and Twisted
>only checks for the error on win32, but not on Cygwin, because Cygwin
>is identified as posix.
>
>Anyway, here's a patch I wrote that fixes the problem by checking for
>ECONNRESET on every platform, although I'm not sure if that is the
>correct approach.
>

Thanks for the patch.  I'm not sure if it's correct either. ;)  Cygwin
isn't an officially supported platform for Twisted at the moment.  What
this basically means is that we don't do regular testing on Cygwin, so
this may not be the only problem you encounter.  Moreover, even if we
fix this, it's pretty unlikely anyone would notice if a subsequent change
breaks it again.

This is a pretty straightforward situation to remedy, though.  Someone
just needs to volunteer to run a Cygwin buildslave.  As long as there is
a buildslave for a platform, it'll get regular testing and changes which
break functionality (as reported by the test suite - by the way, is there
an existing failing unit test for this defect?) won't be allowed.

Jean-Paul



From exarkun at divmod.com  Wed Feb  7 08:06:12 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 10:06:12 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <1170848774.5120.22.camel@antoine-ubuntu>
Message-ID: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>

On Wed, 07 Feb 2007 12:46:14 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
>
>Hi,
>
>> I spent some more time investigating this today and found that someone
>> has written a plugin for nose that allows it to test twisted code.  I
>> don't think it looks as nice as trial, but it should work for the
>> basics.    You can see it here:
>> http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
>>
>> If I run into some serious issues I will try my best to extend this
>> plugin to support additional capabilities from trial.
>
>Since I'm the author of this "plugin" (just a module actually) your
>remarks are very welcome.
>
>> > def threaded_reactor():
>>
>> Yep.  Not pretty by any means. :(
>
>Oh, certainly not less pretty than the self-admitted hacks that trial
>uses (e.g. to stop/restart the reactor).

I don't think anyone will claim trial doesn't have more than its fair
share of terrifying hacks. :)  I hope that trial isn't being used as
a standard of quality for other coding endeavours.

>
>My "not pretty" solution has something like 50 lines of actual code and
>only uses official Twisted features, which makes its complexity very
>manageable. Compare that to Trial.

We could do that, but it seems a little silly.  There's a lot more to
trial than just reactor cooperation.  Anyway, I'm not so interested in
this point.

>
>I'm open to any suggestion for not making use of a separate thread but,
>until Twisted officially supports stopping and restarting the reactor, I
>don't think it's possible (without using any of trial's self-admitted
>hacks).

That would probably involve more knowledge of nose implementation details
than I have right now, or I'd try to offer some.  I'm sure if it were a
simple matter to get things working nicely, you would have done that. :)

>
>However, I'm not interested in grandiloquent rants about "Threads are
>Evil" (I've already read them :-)).

The one practical problem which this method of integration has is that
it will not allow unit tests to run child processes.  So, one wouldn't
be able to run Twisted's test suite with nose using this.  Of course,
if one has no interest in running tests which run child processes, then
this may not be a big deal.

>
>> You never mentioned why nose interested you.  What's the attraction?
>
>Let me give a few points as for nose vs. Trial :
>- nose does not depend on Twisted. Unless all your Python projects make
>use of Twisted, you certainly don't like having to use a different
>testing tool depending on the project.
>- nose has nice features, including the ability to write tests as
>functions without having to write classes
>- nose has a plugin system which already provides several extensions
>- nose is documented
>

Thanks for the feature list. :)  The reason I posted to the thread is
that I was interested in which specific features were proving useful
to a real user.  Can I take this as a list of features you find to be
of practical value, as a user of nose yourself?

Jean-Paul



From exarkun at divmod.com  Wed Feb  7 08:12:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 10:12:55 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <1170860158.8589.67.camel@localhost.localdomain>
Message-ID: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>

On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>
>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>> way to support the twisted.internet.serialport code using wxreactor?
>
>You'll probably have to hack up a version of _threadedselect that's
>based on win32eventreactor, unfortunately, since we don't yet have a way
>to make it pluggable.
>

Another path would be to continue to use win32er and use wxPython in a
second thread without getting wxreactor involved at all.

A third path would be to contribute some development time to Twisted to
provide a better, supported way to deal with this use case. :)

Note that there is a _threadedselect build /slave/ set up, but no one has
yet even bothered to write the trivial reactor plugin which will make it
possible for it to run any tests.  For all the interest in wxPython, it
continues to surprise me how little effort anyone has yet been willing to
spend on making it /work/.  Itamar is essentially the only person who has
done any work on it, and as far as I know, he doesn't even use it.

Jean-Paul



From antoine.pitrou at wengo.com  Wed Feb  7 08:32:26 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 16:32:26 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>
References: <20070207150612.25807.1140716030.divmod.quotient.13225@ohm>
Message-ID: <1170862346.5120.30.camel@antoine-ubuntu>


Hi Jean-Paul,

> The one practical problem which this method of integration has is that
> it will not allow unit tests to run child processes.  So, one wouldn't
> be able to run Twisted's test suite with nose using this.  Of course,
> if one has no interest in running tests which run child processes, then
> this may not be a big deal.

Do you mean because the reactor does not receive signals?

> >Let me give a few points as for nose vs. Trial :
> >- nose does not depend on Twisted. Unless all your Python projects make
> >use of Twisted, you certainly don't like having to use a different
> >testing tool depending on the project.
> >- nose has nice features, including the ability to write tests as
> >functions without having to write classes
> >- nose has a plugin system which already provides several extensions
> >- nose is documented
> 
> Thanks for the feature list. :)  The reason I posted to the thread is
> that I was interested in which specific features were proving useful
> to a real user.  Can I take this as a list of features you find to be
> of practical value, as a user of nose yourself?

Definitely (apart from the plugin system which is quite optional, but
will probably encourage people to write some interesting add-ons).

Regards

Antoine.





From Andy.Henshaw at gtri.gatech.edu  Wed Feb  7 08:44:38 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Wed, 7 Feb 2007 10:44:38 -0500
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
Message-ID: <428C01C01744D142A3DCBB7ACB08C03DDFA83B@apatlelsmail08.elsys.gtri.org>

On Wednesday, February 07, 2007 10:13 AM Jean-Paul Calderone wrote:

>On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
>>On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>>
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable 
>>> way to support the twisted.internet.serialport code using wxreactor?
>>
>>You'll probably have to hack up a version of _threadedselect that's 
>>based on win32eventreactor, unfortunately, since we don't yet have a 
>>way to make it pluggable.
>>
>
>Another path would be to continue to use win32er and use wxPython
>in a second thread without getting wxreactor involved at all.

Unfortunately, I'll probably have to do this, because I have a pretty
good understanding of how to do this and how much time it would take.

>A third path would be to contribute some development time to Twisted
>to provide a better, supported way to deal with this use case. :)

>Note that there is a _threadedselect build /slave/ set up, but no 
>one has yet even bothered to write the trivial reactor plugin which 
>will make it possible for it to run any tests.  For all the interest 
>in wxPython, it continues to surprise me how little effort anyone 
>has yet been willing to spend on making it /work/.  Itamar is 
>essentially the only person who has done any work on it, and as far 
>as I know, he doesn't even use it.

If I can carve out some time, I'll try to take a look at this.  WxPython
and Twisted are becoming important tools for us.





From exarkun at divmod.com  Wed Feb  7 09:01:14 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 11:01:14 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <1170862346.5120.30.camel@antoine-ubuntu>
Message-ID: <20070207160114.25807.525523402.divmod.quotient.13281@ohm>

On Wed, 07 Feb 2007 16:32:26 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
>
>Hi Jean-Paul,
>
>> The one practical problem which this method of integration has is that
>> it will not allow unit tests to run child processes.  So, one wouldn't
>> be able to run Twisted's test suite with nose using this.  Of course,
>> if one has no interest in running tests which run child processes, then
>> this may not be a big deal.
>
>Do you mean because the reactor does not receive signals?
>

Yep.  Without the SIGCHLD handler installed, Twisted will never reap the
children, so they will remain as zombies.

Jean-Paul



From manlio_perillo at libero.it  Wed Feb  7 09:04:52 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Wed, 07 Feb 2007 17:04:52 +0100
Subject: [Twisted-Python] wxreactor, serialport, and Windows
In-Reply-To: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
References: <20070207151255.25807.778765426.divmod.quotient.13236@ohm>
Message-ID: <45C9F8A4.2010002@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 07 Feb 2007 09:55:58 -0500, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
>> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
>>
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>>> way to support the twisted.internet.serialport code using wxreactor?
>>
>> You'll probably have to hack up a version of _threadedselect that's
>> based on win32eventreactor, unfortunately, since we don't yet have a way
>> to make it pluggable.
>>
> 
> Another path would be to continue to use win32er and use wxPython in a
> second thread without getting wxreactor involved at all.
> 

What about just run WaitForMultipleObjects in a separate thread and 
dispatch the events in the main thread?


Regards  Manlio Perillo



From abierbaum at gmail.com  Wed Feb  7 09:17:26 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Wed, 7 Feb 2007 10:17:26 -0600
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207160114.25807.525523402.divmod.quotient.13281@ohm>
References: <1170862346.5120.30.camel@antoine-ubuntu>
	<20070207160114.25807.525523402.divmod.quotient.13281@ohm>
Message-ID: <bea9869d0702070817y7acf3610sc4eb835c601d36d3@mail.gmail.com>

Is there anything that could be ported over from trial and used in the
nose plugin to make things behave better.  All I am really interested
in is allowing twisted code to be tested in the best way possible from
within nose.  The current plugin seems to work well, but if there are
ways to make it work better I am all for using them.

For example earlier in the thread Johnathan mentioned that it may be
possible to just derive from twisted.trial.unittest.TestCase directly.

Antoine: Did you try this when making the nose plugin and what
problems did you run into?


-Allen


On 2/7/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 07 Feb 2007 16:32:26 +0100, Antoine Pitrou <antoine.pitrou at wengo.com> wrote:
> >
> >Hi Jean-Paul,
> >
> >> The one practical problem which this method of integration has is that
> >> it will not allow unit tests to run child processes.  So, one wouldn't
> >> be able to run Twisted's test suite with nose using this.  Of course,
> >> if one has no interest in running tests which run child processes, then
> >> this may not be a big deal.
> >
> >Do you mean because the reactor does not receive signals?
> >
>
> Yep.  Without the SIGCHLD handler installed, Twisted will never reap the
> children, so they will remain as zombies.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From stephen.c.waterbury at nasa.gov  Wed Feb  7 09:18:21 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Wed, 07 Feb 2007 11:18:21 -0500
Subject: [Twisted-Python] Something strange about cred
Message-ID: <45C9FBCD.1090408@nasa.gov>

I think I've found the problem with trying to use my UserDbCredChecker
with the web2 auth example.  [The reason I'm posting this to the
twisted list rather than twisted-web is because I think it points to
a possible problem with cred (or at least some confusing names), which
is not specifically web.]

I believe the problem is with ICredentials.  Its interface
docstring says "I check credentials." -- first of all, this is
counter-intuitive to me.  IMO should either say "I *am* credentials",
or else the interface should be "ICredentialsChecker" -- i.e.,
I think the checkPassword method it specifies should be provided by
the ICredentialsChecker (if it is needed at all -- questionable).

IMO ICredentials subinterfaces should only specify the types
of credentials that are being provided (e.g., attributes username
and password, for IUsernamePassword), and the checkPassword method
should be in the ICredentialsChecker interface (and might not need
to be public anyway -- all that needs to be public is
requestAvatarId, really).

Getting back to the web2 auth example, it appears that the checker's
requestAvatarId method receives an ICredentials provider as its
parameter, and my assumption was that the ICredentials provider would
have attributes 'username' and 'password' -- which the IUsernamePassword
interface docstring specifies as ivars (which I believe is incorrect
syntax for a zope.interface definition -- I think they should be
Attributes if they are supposed to be part of the interface
specification) -- but I'm not sure it's getting them, because I think
if it did my checker would work (i.e., would return an AvatarId (the
username) from its requestAvatarId method).

Comments?

Steve



From glyph at divmod.com  Wed Feb  7 09:35:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 16:35:10 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>

On 03:32 pm, antoine.pitrou at wengo.com wrote:
>
>Hi Jean-Paul,
>
>> The one practical problem which this method of integration has is that
>> it will not allow unit tests to run child processes.  So, one wouldn't
>> be able to run Twisted's test suite with nose using this.  Of course,
>> if one has no interest in running tests which run child processes, then
>> this may not be a big deal.
>
>Do you mean because the reactor does not receive signals?

Yes.  Also, it's highly likely that the tests won't stop cleanly on ^C.

More serious than the process-running issue, from my point of view, is the fact that if you forget the "@deferred" decorator on a test that uses any reactor API, or code that internally _uses_ any reactor API, you will put your tests into a non-deterministic state, and although they'll pass _most_ of the time, they will die depending on the load characteristics of your machine at the time and (insert long-winded rant about the evil things threads do to your code here).  Tests are exactly the place you never want this to happen :).

The documentation for this module should be clear on the fact that Twisted-using tests are _absolutely required_ to use the decorator, even if they don't need to wait on a deferred.  Of course, that implies that the "you must return a twisted Deferred" message should probably be removed and that case dealt with.

Also, setUp and tearDown methods also need the decorator applied, I think, not just test methods.

All in all it seems like it would be simpler to just use trials' TestCase class with nose.  Is there any reason not to?

>> >Let me give a few points as for nose vs. Trial :

You are welcome to use nose, of course, but some of these reasons sounded kind of flimsy to me.

>> >- nose does not depend on Twisted. Unless all your Python projects make
>> >use of Twisted, you certainly don't like having to use a different
>> >testing tool depending on the project.

Trial doesn't force your code to make use of Twisted, and as Mr. Lange has declared previously, it goes to some lengths to be compatible with stdlib unit tests.  It can run and discover stdlib tests, as well as being run by the stdlib runner, and I've used it to test tiny projects which do not use Twisted code anywhere.

So, Trial only requires Twisted insofar as Nose requires Nose.  It's part of its implementation.  If you use Twisted for _any_ of your development, it's already installed.

>> >- nose has nice features, including the ability to write tests as
>> >functions without having to write classes

This just sounds like TIMTOWTDI to me.  I *like* the fact that all test methods look the same ;).

>> >- nose has a plugin system which already provides several extensions

In the spirit of completeness, see trial's --help-reporters and --reporter option.  These are discovered using plugins.

Please do not take this argument seriously though.  :)  There is widespread consensus that this plugin API is not very good and it is likely to change.  Still, it exists and you can use it.

See:
    http://twistedmatrix.com/trac/browser/sandbox/exarkun/merit/trunk/twisted/plugins/rr.py

Although, perhaps the utility of the plugin system is decreased more by the fact that nobody knows about it than by its sub-optimal API, which leads into your next point...

>> >- nose is documented

This is a very, very good point.  Trial's documentation is extremely weak.

Does anyone (and by "anyone" I mean "anyone but JML, who has already done more work on trial than any reasonable person ever would") want to volunteer to write a "test driven development with Twisted" lore document?  I've introduced many people to Twisted in recent weeks, and each time I ended up having to do a live demonstration of how to write a test module, how to run the trial command line, and (for those lucky enough to use emacs) how to get twisted-dev.el loaded so that f9 will do the right thing.  This stuff isn't clear even to people already familiar with Python and unit testing, let alone to people who are learning TDD for the first time with trial.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/4263516a/attachment.html>

From exarkun at divmod.com  Wed Feb  7 09:44:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 7 Feb 2007 11:44:50 -0500
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <20070207164450.25807.1755339708.divmod.quotient.13324@ohm>

On Wed, 07 Feb 2007 16:35:10 -0000, glyph at divmod.com wrote:
>On 03:32 pm, antoine.pitrou at wengo.com wrote:
>>
>>Hi Jean-Paul,
>>
>>> The one practical problem which this method of integration has is that
>>> it will not allow unit tests to run child processes.  So, one wouldn't
>>> be able to run Twisted's test suite with nose using this.  Of course,
>>> if one has no interest in running tests which run child processes, then
>>> this may not be a big deal.
>>
>>Do you mean because the reactor does not receive signals?
>
>Yes.  Also, it's highly likely that the tests won't stop cleanly on ^C.

Haa haha haa hahaha haaa haa haa haa heee haaa ha ha ha.

Jean-Paul



From antoine.pitrou at wengo.com  Wed Feb  7 10:36:15 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 07 Feb 2007 18:36:15 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
References: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <1170869775.5120.55.camel@antoine-ubuntu>


Hi,

Le mercredi 07 février 2007 à 16:35 +0000, glyph at divmod.com a écrit :
> Yes.  Also, it's highly likely that the tests won't stop cleanly on
> ^C.

Depends on what you mean by "cleanly". I haven't noticed any annoying
behaviour when killing tests in the middle.

Regardless of ^C, there is a sporadic exception at shutdown due to the
way Python destroys modules (it first sets the module members to None).
I suppose it can happen in any situation in which Twisted is run in a
separate thread:

<<
Exception in thread Thread-1 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "threading.py", line 460, in __bootstrap
  File "threading.py", line 440, in run
  File "/home/antoine/nose-svn/nose/twistedtools.py", line 52, in <lambda>
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 218, in run
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 231, in mainLoop
<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'msg'
Unhandled exception in thread started by 
Error in sys.excepthook:

Original exception was:
>>

> More serious than the process-running issue, from my point of view, is
> the fact that if you forget the "@deferred" decorator on a test that
> uses any reactor API, or code that internally _uses_ any reactor API,
> you will put your tests into a non-deterministic state, and although
> they'll pass _most_ of the time, they will die depending on the load
> characteristics of your machine at the time and (insert long-winded
> rant about the evil things threads do to your code here).  Tests are
> exactly the place you never want this to happen :).

That's certainly right, although you should get messages about uncaught
exceptions or unhandled errbacks, so you'll know that something went
wrong.
What happens with Trial when you forget to return the Deferred the test
should wait on?

> Also, setUp and tearDown methods also need the decorator applied, I
> think, not just test methods.

Setup methods at least, if they do something asynchronous.

> All in all it seems like it would be simpler to just use trials'
> TestCase class with nose.  Is there any reason not to?

Given that Trial is a self-contained tool, and given that nose also has
its own test running and collecting, I simply didn't expect this to work
or to keep working accross versions of both tools.

> Trial doesn't force your code to make use of Twisted, and as Mr. Lange
> has declared previously, it goes to some lengths to be compatible with
> stdlib unit tests.

Of course, but to use Trial you must install Twisted don't you ?
Which is quite a big dependency, and Twisted does not yet support being
easy_install'ed.

Regards

Antoine.





From pmarks at purdue.edu  Wed Feb  7 10:47:11 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Wed, 7 Feb 2007 12:47:11 -0500
Subject: [Twisted-Python] [PATCH] UDP error trapping on Cygwin
In-Reply-To: <1170860031.8589.64.camel@localhost.localdomain>
References: <8e5b27790702062027w11cf45f1gf29174c8894366e@mail.gmail.com>
	<1170860031.8589.64.camel@localhost.localdomain>
Message-ID: <8e5b27790702070947j6f9599a4t4b54ea6ae5aa6fe4@mail.gmail.com>

On 2/7/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> > Anyway, here's a patch I wrote that fixes the problem by checking for
> > ECONNRESET on every platform, although I'm not sure if that is the
> > correct approach.
>
> Could you add an issue to the website? Were you in fact using connected
> UDP?

Nope, just regular connectionless UDP.

But it's a decentralized P2P app that sends requests to a lot of
different hosts.  It's possible that one of them sent back an ICMP
reject, but I'm not sure.



From thostrup at gmail.com  Wed Feb  7 12:58:22 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Wed, 7 Feb 2007 20:58:22 +0100
Subject: [Twisted-Python] amptypes 0.1
Message-ID: <f33a4da20702071158k331094d0of50c0861b50fcfde@mail.gmail.com>

Hi

I've created a couple of extension types for the AMP protocol.

Currently there two types: A dictionary and a list. The types of the element
must be specified (key and value can be different in the dictionary),
otherwise they are free form, i.e., the keys in the dictionary can have any
name, and the list can be of any size. The types can be nested, e.g., you
can create a list of list of strings. I use (or will) the latter to return a
query result, for which I do not know the row size. This is currently
impossible (AFAICT), in the otherwise excellent AMP protocol.

The types inherit a maximum size from the AMP protocol, so a dictionary or
list cannot contain more than approx 64 KB data.

It can be fetched from here:
http://www.cs.aau.dk/~htj/code/amptypes-0.1.tar.gz

License is the same as for twisted.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/3f46b2f8/attachment.html>

From glyph at divmod.com  Wed Feb  7 14:24:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 21:24:18 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>

On 05:36 pm, antoine.pitrou at wengo.com wrote:

>> More serious than the process-running issue, from my point of view, is
>> the fact that if you forget the "@deferred" decorator on a test that
>> uses any reactor API, or code that internally _uses_ any reactor API,
>> you will put your tests into a non-deterministic state, and although
>> they'll pass _most_ of the time, they will die depending on the load
>> characteristics of your machine at the time and (insert long-winded
>> rant about the evil things threads do to your code here).  Tests are
>> exactly the place you never want this to happen :).
>
>That's certainly right, although you should get messages about uncaught
>exceptions or unhandled errbacks, so you'll know that something went
>wrong.

That's not the sort of problem I'm talking about.  Some reactor APIs will appear to work when called from the wrong thread, so if you forget a @deferred somewhere, your test might seem to work, or hang in a weird place, or produce different error output each time.

>What happens with Trial when you forget to return the Deferred the test
>should wait on?

Trial doesn't require tests to return Deferreds.  If there is no Deferred, the test completes immediately.

>> All in all it seems like it would be simpler to just use trials'
>> TestCase class with nose.  Is there any reason not to?
>
>Given that Trial is a self-contained tool, and given that nose also has
>its own test running and collecting, I simply didn't expect this to work
>or to keep working accross versions of both tools.

This is definitely a concern, but your current approach doesn't seem any less fragile.

>> Trial doesn't force your code to make use of Twisted, and as Mr. Lange
>> has declared previously, it goes to some lengths to be compatible with
>> stdlib unit tests.
>
>Of course, but to use Trial you must install Twisted don't you ?

>Which is quite a big dependency,

Is 2 megabytes really too big?

>and Twisted does not yet support being easy_install'ed.

... and nose doesn't yet support being apt-get installed ;-)

If you'd like to see easy_install support for Twisted, please feel free to contribute support for it; the release manager could probably use some help maintaining setup.py in general.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/ba79f1f1/attachment.html>

From glyph at divmod.com  Wed Feb  7 14:26:42 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 21:26:42 -0000
Subject: [Twisted-Python] amptypes 0.1
Message-ID: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>

On 07:58 pm, thostrup at gmail.com wrote:
>Hi
>
>I've created a couple of extension types for the AMP protocol.

Thanks!  Would you consider contributing these to Twisted proper?  Aside from a few very minor cleanups (test naming convention, a few missing docstrings) these look great.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/272fa769/attachment.html>

From mithrandi-twisted-python at mithrandi.za.net  Wed Feb  7 14:53:31 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Wed, 7 Feb 2007 23:53:31 +0200
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
References: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
Message-ID: <20070207215330.GA13330@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:

> ... and nose doesn't yet support being apt-get installed ;-)

mithrandi at elvardein:~> sudo apt-get install python-nose
Reading package lists... Done
Building dependency tree... Done
The following NEW packages will be installed:
  python-nose
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0B/54.0kB of archives.
After unpacking 340kB of additional disk space will be used.
Selecting previously deselected package python-nose.
(Reading database ... 142571 files and directories currently installed.)
Unpacking python-nose (from .../python-nose_0.9.0-2_all.deb) ...
Setting up python-nose (0.9.0-2) ...


mithrandi at elvardein:~>
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070207/3cf84a4d/attachment.sig>

From jml at mumak.net  Wed Feb  7 15:20:58 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 8 Feb 2007 09:20:58 +1100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
References: <20070207163510.28203.472311340.divmod.xquotient.1108@joule.divmod.com>
Message-ID: <d06a5cd30702071420h44264ce5t2757437aa8259601@mail.gmail.com>

On 2/8/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 03:32 pm, antoine.pitrou at wengo.com wrote:
> >> >- nose is documented
>
> This is a very, very good point.  Trial's documentation is extremely weak.
>
> Does anyone (and by "anyone" I mean "anyone but JML, who has already done
> more work on trial than any reasonable person ever would") want to volunteer
> to write a "test driven development with Twisted" lore document?

It's on my todo list. ;)

cheers,
jml



From glyph at divmod.com  Wed Feb  7 15:36:59 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 07 Feb 2007 22:36:59 -0000
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
Message-ID: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>

On 09:53 pm, mithrandi-twisted-python at mithrandi.za.net wrote:
>* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:
>
>> ... and nose doesn't yet support being apt-get installed ;-)
>
>mithrandi at elvardein:~> sudo apt-get install python-nose

Well!  Egg on my face, there.  Where's the apt line?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070207/6cd3445a/attachment.html>

From mithrandi-twisted-python at mithrandi.za.net  Wed Feb  7 16:21:54 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 8 Feb 2007 01:21:54 +0200
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>
References: <20070207223659.28203.942501034.divmod.xquotient.1283@joule.divmod.com>
Message-ID: <20070207232154.GA13592@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2007-02-07 22:36:59 -0000]:

> On 09:53 pm, mithrandi-twisted-python at mithrandi.za.net wrote:
> >* glyph at divmod.com <glyph at divmod.com> [2007-02-07 21:24:18 -0000]:
> >
> >> ... and nose doesn't yet support being apt-get installed ;-)
> >
> >mithrandi at elvardein:~> sudo apt-get install python-nose
> 
> Well!  Egg on my face, there.  Where's the apt line?

It's in Debian Etch (testing, soon to be released) and Sid; also,
apparently in Ubuntu Universe, but I'm not very familiar with Ubuntu's
release / package structure.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070208/a1ef3083/attachment.sig>

From tdickenson at geminidataloggers.com  Thu Feb  8 00:43:57 2007
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 08 Feb 2007 07:43:57 +0000
Subject: [Twisted-Python] Re: wxreactor, serialport, and Windows
References: <428C01C01744D142A3DCBB7ACB08C03D213502@apatlelsmail08.elsys.gtri.org>
	<1170860158.8589.67.camel@localhost.localdomain>
Message-ID: <eqcvag$140$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:

> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu wrote:
> 
>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable
>> way to support the twisted.internet.serialport code using wxreactor?
> 
> You'll probably have to hack up a version of _threadedselect that's
> based on win32eventreactor, 

Hey, Ive already built one of those!

http://twistedmatrix.com/trac/ticket/2440




From thostrup at gmail.com  Thu Feb  8 01:08:31 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 8 Feb 2007 09:08:31 +0100
Subject: [Twisted-Python] amptypes 0.1
In-Reply-To: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>
References: <20070207212642.28203.1988727302.divmod.xquotient.1281@joule.divmod.com>
Message-ID: <f33a4da20702080008v5572e421s115963f5d25b213a@mail.gmail.com>

On 2/7/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 07:58 pm, thostrup at gmail.com wrote:
> >
> >I've created a couple of extension types for the AMP protocol.
>
> Thanks!  Would you consider contributing these to Twisted proper?
>

Sure.


> Aside from a few very minor cleanups (test naming convention, a few
> missing docstrings) these look great.
>

Could you give me a few pointers to what should be done, and I'll submit a
patch.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/e010273c/attachment.html>

From slowtech.chen at yahoo.com  Thu Feb  8 02:34:17 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 01:34:17 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <611685.82568.qm@web59114.mail.re1.yahoo.com>

Hey guys,

I've been  using twisted for a couple days, I like it very much. And there are some stuffs I 'm still not quite get:

-  I like the asyn way twisted provides, but when using RDBMS, I have to spawn other threads out of the main event loop. this seems 
weird and  I 'm wondering how the performance would be when you've got a lot of concurrent db queries.

- Did anyone come into memory leak on twisted server?  'cause when I tested our twisted server today ,the memory usage became 75% when idle. 

Any suggestion welcome.

regards,
Chen




  
 




 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/7b228d1c/attachment.html>

From therve at free.fr  Thu Feb  8 03:29:53 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 08 Feb 2007 11:29:53 +0100
Subject: [Twisted-Python] questions about large db queries and memory leak
In-Reply-To: <611685.82568.qm@web59114.mail.re1.yahoo.com>
References: <611685.82568.qm@web59114.mail.re1.yahoo.com>
Message-ID: <20070208112953.mq87c09l2p40ogc0@wasabox.wasabout.net>

Quoting slowtech chen <slowtech.chen at yahoo.com>:

> Hey guys,
>
> I've been  using twisted for a couple days, I like it very much. And 
> there are some stuffs I 'm still not quite get:
>
> -  I like the asyn way twisted provides, but when using RDBMS, I have 
> to spawn other threads out of the main event loop. this seems
> weird and  I 'm wondering how the performance would be when you've 
> got a lot of concurrent db queries.

I guess you use adbapi ? The performance are generally not a problem with db
queries because most of the job is done on the DB, not on the client. I've got
servers that makes hundreds requests against Postgres/MySQL/sqlite without
problems.

> - Did anyone come into memory leak on twisted server?  'cause when I 
> tested our twisted server today ,the memory usage became 75% when 
> idle.

Until proved, it comes from your code :).

-- 
Thomas





From antoine.pitrou at wengo.com  Thu Feb  8 03:45:54 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Thu, 08 Feb 2007 11:45:54 +0100
Subject: [Twisted-Python] Re: Using twisted.trial with nose unittest system
In-Reply-To: <20070207215330.GA13330@mithrandi.za.net>
References: <20070207212418.28203.1727994923.divmod.xquotient.1280@joule.divmod.com>
	<20070207215330.GA13330@mithrandi.za.net>
Message-ID: <1170931555.5130.0.camel@antoine-ubuntu>

Le mercredi 07 février 2007 à 23:53 +0200, Tristan Seligmann a écrit :
> Unpacking python-nose (from .../python-nose_0.9.0-2_all.deb) ...
> Setting up python-nose (0.9.0-2) ...

To be fair, that version isn't twisted-enabled.


Antoine.





From martin at browns.co.uk  Thu Feb  8 05:14:42 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 08 Feb 2007 12:14:42 +0000
Subject: [Twisted-Python] startLogging
In-Reply-To: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
Message-ID: <200702081214.l18CEr0c003748@brownix.browns.co.uk>


Are there any samples on how best to interact with logging?

My server needs to log quite a few items, as such the log file is 
growing quite quickly and I would like to be able to switch file 
names on a daily basis. I would also probably then wish to delete 
logs older than 14 days.

I'm not sure how safe it would be to just keep calling startLogging() 
with a different file name mid-session. I realise there has been some 
discussion about this area recently.

Thanks, Martin




From thostrup at gmail.com  Thu Feb  8 05:37:24 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 8 Feb 2007 13:37:24 +0100
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <f33a4da20702080437j522801eu50315bed19e4d713@mail.gmail.com>

On 2/8/07, Martin Evans <martin at browns.co.uk> wrote:
>
>
> Are there any samples on how best to interact with logging?
>
> My server needs to log quite a few items, as such the log file is
> growing quite quickly and I would like to be able to switch file
> names on a daily basis. I would also probably then wish to delete
> logs older than 14 days.
>
> I'm not sure how safe it would be to just keep calling startLogging()
> with a different file name mid-session. I realise there has been some
> discussion about this area recently.


>From a quick look at log.py it does not appear that calling startLogging
again would stop logging to the old, it would just add another log observer,
meaning that log entries would go to both files.

One approach is to create your own log observer and using this to log with.
Then you can change file whenever you want to, and also change the log
layout etc.. Alternatively you can call removeObserver and addObserver when
you want to change log file.

Another approach is to use an external program to rotate the log files.

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/0fafeabc/attachment.html>

From mwl at point45.com  Thu Feb  8 06:28:59 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 08 Feb 2007 15:28:59 +0200
Subject: [Twisted-Python] questions about large db queries and memory leak
In-Reply-To: <611685.82568.qm@web59114.mail.re1.yahoo.com>
References: <611685.82568.qm@web59114.mail.re1.yahoo.com>
Message-ID: <45CB259B.3010307@point45.com>

slowtech chen wrote:
> - Did anyone come into memory leak on twisted server?  'cause when I 
> tested our twisted server today ,the memory usage became 75% when idle.

If you're not running Python >= 2.5.0 this might be relevant:
http://evanjones.ca/python-memory.html

-Mark



From antoine.pitrou at wengo.com  Thu Feb  8 06:31:04 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Thu, 08 Feb 2007 14:31:04 +0100
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <1170941464.5130.8.camel@antoine-ubuntu>

Le jeudi 08 février 2007 à 12:14 +0000, Martin Evans a écrit :
> Are there any samples on how best to interact with logging?
> 
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file 
> names on a daily basis. I would also probably then wish to delete 
> logs older than 14 days.

You could use Python's standard logging module, it has a 
TimedRotatingFileHandler which seems to do exactly what you want:
http://docs.python.org/lib/node414.html

Regards






From Andy.Henshaw at gtri.gatech.edu  Thu Feb  8 06:42:02 2007
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Thu, 8 Feb 2007 08:42:02 -0500
Subject: [Twisted-Python] Re: wxreactor, serialport, and Windows
In-Reply-To: <eqcvag$140$1@sea.gmane.org>
Message-ID: <428C01C01744D142A3DCBB7ACB08C03DDFA9B2@apatlelsmail08.elsys.gtri.org>

On Thursday, February 08, 2007 2:44 AM, Toby Dickenson wrote:

>Itamar Shtull-Trauring wrote:
>
>> On Wed, 2007-02-07 at 07:36 -0500, Andy.Henshaw at gtri.gatech.edu
wrote:
>> 
>>> Now, I need to marry it to a wxPython GUI.  Is there any reasonable 
>>> way to support the twisted.internet.serialport code using wxreactor?
>> 
>> You'll probably have to hack up a version of _threadedselect that's 
>> based on win32eventreactor,
>
>Hey, Ive already built one of those!
>
>http://twistedmatrix.com/trac/ticket/2440

Thanks!  It seems to be working, although I have a bug (probably of my
own) to work out.



From mwl at point45.com  Thu Feb  8 06:51:57 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 08 Feb 2007 15:51:57 +0200
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <45CB2AFD.4060802@point45.com>

Martin Evans wrote:
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file names 
> on a daily basis. I would also probably then wish to delete logs older 
> than 14 days.

Assuming your platform has a [decent] syslogd, how about logging to 
syslog, instead of reimplementing parts of it?

Something like this should work:

% twistd --syslog --prefix foo -oy foo.tac

And then let syslog do the hard work.

-Mark




From stephen.c.waterbury at nasa.gov  Thu Feb  8 08:16:51 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 10:16:51 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45C9FBCD.1090408@nasa.gov>
References: <45C9FBCD.1090408@nasa.gov>
Message-ID: <45CB3EE3.5080301@nasa.gov>

Here's a simple self-contained example of a database
checker that's essentially identical to the one I
use with my code which works with web but not with the web2
auth example (i.e., httpauth.tac).  Perhaps someone familiar
with cred and web2 could suggest how I might fix it?

The only changes needed to make the web2 auth example
use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
into the same directory.  The test_dbchecker.py script is just
a simple test to show that DbChecker returns an AvatarId
when given a credential with correct username and password
values.

TIA for any help with this.

Cheers,
Steve

P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
doesn't allow that.  :(

-------------- next part --------------
A non-text attachment was scrubbed...
Name: httpauth.patch
Type: text/x-patch
Size: 508 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070208/e049d16b/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbchecker.py
Type: text/x-python
Size: 1780 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070208/e049d16b/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_dbchecker.py
Type: text/x-python
Size: 712 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070208/e049d16b/attachment-0005.py>

From exarkun at divmod.com  Thu Feb  8 09:04:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Feb 2007 11:04:21 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CB3EE3.5080301@nasa.gov>
Message-ID: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>

On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury <stephen.c.waterbury at nasa.gov> wrote:
>Here's a simple self-contained example of a database
>checker that's essentially identical to the one I
>use with my code which works with web but not with the web2
>auth example (i.e., httpauth.tac).  Perhaps someone familiar
>with cred and web2 could suggest how I might fix it?
>
>The only changes needed to make the web2 auth example
>use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>into the same directory.  The test_dbchecker.py script is just
>a simple test to show that DbChecker returns an AvatarId
>when given a credential with correct username and password
>values.
>
>TIA for any help with this.
>

Hey Steve,

Aside from the cred questions/issues you raised in the first email
(some of which I think are valid), I think the main problem you're
running into is that HTTP digest authentication is being used, but
the checker you wrote can't handle this: digest auth requires that
the checker be able to handle IUsernameHashedPassword credentials,
which yours doesn't.

The reporting for this case could probably be improved.  If there is
no checker registered which can handle the kind of credentials being
used, it's probably a programming error, and the programmer should be
told about it.

Jean-Paul



From stephen.c.waterbury at nasa.gov  Thu Feb  8 09:25:54 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 11:25:54 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
Message-ID: <45CB4F12.7010609@nasa.gov>

Jean-Paul Calderone wrote:
> On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury 
> <stephen.c.waterbury at nasa.gov> wrote:
>> Here's a simple self-contained example of a database
>> checker that's essentially identical to the one I
>> use with my code which works with web but not with the web2
>> auth example (i.e., httpauth.tac).  Perhaps someone familiar
>> with cred and web2 could suggest how I might fix it?
>>
>> The only changes needed to make the web2 auth example
>> use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>> are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>> into the same directory.  The test_dbchecker.py script is just
>> a simple test to show that DbChecker returns an AvatarId
>> when given a credential with correct username and password
>> values.
>>
>> TIA for any help with this.
>>
> 
> Hey Steve,
> 
> Aside from the cred questions/issues you raised in the first email
> (some of which I think are valid), I think the main problem you're
> running into is that HTTP digest authentication is being used, but
> the checker you wrote can't handle this: digest auth requires that
> the checker be able to handle IUsernameHashedPassword credentials,
> which yours doesn't.
> 
> The reporting for this case could probably be improved.  If there is
> no checker registered which can handle the kind of credentials being
> used, it's probably a programming error, and the programmer should be
> told about it.
> 
> Jean-Paul

Thanks for the quick response, Jp!  I was under the impression that
this was just a basic auth example -- so if the basic auth thingy
is getting a plain text (uuencoded, same thing) password from the
app, why would it hash it before it gives it to the checker?
Auggh!  I can see the checker *storing* the password hashed
(which my "production" checker does, using sha), but it seems to
me pretty brain-dead to use hashed passwords over http when
plaintext passwords over https are way, way more secure
(and then all the checker has to deal with is plaintext passwds,
which it can store hashed for extra security).

Steve



From stephen.c.waterbury at nasa.gov  Thu Feb  8 10:26:19 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 12:26:19 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CB4F12.7010609@nasa.gov>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
	<45CB4F12.7010609@nasa.gov>
Message-ID: <45CB5D3B.9030408@nasa.gov>

Stephen Waterbury wrote:
> Jean-Paul Calderone wrote:
>> On Thu, 08 Feb 2007 10:16:51 -0500, Stephen Waterbury 
>> <stephen.c.waterbury at nasa.gov> wrote:
>>> Here's a simple self-contained example of a database
>>> checker that's essentially identical to the one I
>>> use with my code which works with web but not with the web2
>>> auth example (i.e., httpauth.tac).  Perhaps someone familiar
>>> with cred and web2 could suggest how I might fix it?
>>>
>>> The only changes needed to make the web2 auth example
>>> use DbChecker instead of InMemoryUsernamePasswordDatabaseDontUse
>>> are (1) apply attached patch to httpauth.py, (2) drop dbchecker.py
>>> into the same directory.  The test_dbchecker.py script is just
>>> a simple test to show that DbChecker returns an AvatarId
>>> when given a credential with correct username and password
>>> values.
>>>
>>> TIA for any help with this.
>>>
>>
>> Hey Steve,
>>
>> Aside from the cred questions/issues you raised in the first email
>> (some of which I think are valid), I think the main problem you're
>> running into is that HTTP digest authentication is being used, but
>> the checker you wrote can't handle this: digest auth requires that
>> the checker be able to handle IUsernameHashedPassword credentials,
>> which yours doesn't.
>>
>> The reporting for this case could probably be improved.  If there is
>> no checker registered which can handle the kind of credentials being
>> used, it's probably a programming error, and the programmer should be
>> told about it.
>>
>> Jean-Paul
> 
> Thanks for the quick response, Jp!  I was under the impression that
> this was just a basic auth example -- so if the basic auth thingy
> is getting a plain text (uuencoded, same thing) password from the
> app, why would it hash it before it gives it to the checker?
> Auggh!  I can see the checker *storing* the password hashed
> (which my "production" checker does, using sha), but it seems to
> me pretty brain-dead to use hashed passwords over http when
> plaintext passwords over https are way, way more secure
> (and then all the checker has to deal with is plaintext passwds,
> which it can store hashed for extra security).

Well, that was an incorrect and non-sequitur reply on my part,
so apologies for that!

I still think HTTP digest authentication is not very useful,
but I do understand why web2 implements it, because it's part
of the spec.  No more griping, for now -- and I should say that
everything *else* about web2 looks great so far!  :)

Steve



From sflist at ihonk.com  Thu Feb  8 11:19:39 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 08 Feb 2007 10:19:39 -0800
Subject: [Twisted-Python] startLogging
In-Reply-To: <200702081214.l18CEr0c003748@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200702081214.l18CEr0c003748@brownix.browns.co.uk>
Message-ID: <1170958779.26020.73.camel@lothar>

On Thu, 2007-02-08 at 12:14 +0000, Martin Evans wrote:
> Are there any samples on how best to interact with logging?
> 
> My server needs to log quite a few items, as such the log file is 
> growing quite quickly and I would like to be able to switch file 
> names on a daily basis. I would also probably then wish to delete 
> logs older than 14 days.
> 
> I'm not sure how safe it would be to just keep calling startLogging() 
> with a different file name mid-session. I realise there has been some 
> discussion about this area recently.

Twisted includes a class, twisted.python.logfile.LogFile, which
implements rotation. It does not, however, do auto-deletion. So I did
this on Twisted 2.5 (no idea if 2.4's any different), which saves x old
logs. If you want to discriminate by age, I'd suggest subclassing
logfile.DailyLogFile and using a similar approach.

-------------

import os
from twisted.python import logfile, threadable

class RotatingCleaningLogFile(logfile.LogFile):
    """ Deletes old logs. If maxOldLogs<1, doesn't delete old logs."""
    def __init__(self, name, directory, maxOldLogs=0,
                 rotateLength=1000000, defaultMode=None):
        logfile.LogFile.__init__(self, name, directory, rotateLength,
                                 defaultMode)
        self.maxOldLogs = maxOldLogs

    def rotate(self):
        logfile.LogFile.rotate(self)
        if self.maxOldLogs > 0:
            logs = self.listLogs()
            for i in logs:
                if i > self.maxOldLogs:
                    os.unlink('%s.%d' % (self.path, i))

threadable.synchronize(RotatingLogFile)

-------------

Good luck!

Steve




From sflist at ihonk.com  Thu Feb  8 11:35:03 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 08 Feb 2007 10:35:03 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service control
Message-ID: <1170959704.26020.89.camel@lothar>

Hi,

Itamar posted earlier in this list how to run Twisted as a service:

http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html

Now, I want to trap some Windows events and make some calls into my
Twisted app (calling disconnect() on a pb.PBClientFactory instance is
one example). I'll be setting up the trapping in the service code above,
though, so from looking at the howtos, it looks like the right thing for
me to do when I get some event is:

reactor.callFromThread(factory.disconnect)

The docs state, though, that the callable must be thread safe. Does that
mean I need to use threadable.synchronize() to put a lock around
factory.disconnect? Or whatever else I'm calling into?

Steve




From exarkun at divmod.com  Thu Feb  8 11:36:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Feb 2007 13:36:58 -0500
Subject: [Twisted-Python] startLogging
In-Reply-To: <1170958779.26020.73.camel@lothar>
Message-ID: <20070208183658.25807.921930257.divmod.quotient.14774@ohm>

On Thu, 08 Feb 2007 10:19:39 -0800, Steve Freitas <sflist at ihonk.com> wrote:
>On Thu, 2007-02-08 at 12:14 +0000, Martin Evans wrote:
>> Are there any samples on how best to interact with logging?
>>
>> My server needs to log quite a few items, as such the log file is
>> growing quite quickly and I would like to be able to switch file
>> names on a daily basis. I would also probably then wish to delete
>> logs older than 14 days.
>>
>> I'm not sure how safe it would be to just keep calling startLogging()
>> with a different file name mid-session. I realise there has been some
>> discussion about this area recently.
>
>Twisted includes a class, twisted.python.logfile.LogFile, which
>implements rotation. It does not, however, do auto-deletion. So I did
>this on Twisted 2.5 (no idea if 2.4's any different), which saves x old
>logs. If you want to discriminate by age, I'd suggest subclassing
>logfile.DailyLogFile and using a similar approach.
>

FWIW, there's a patch which adds similar functionality in the tracker
(or maybe it has been applied to trunk by now, I can't remember).  So
in the next Twisted release this will probably be available, although
it is not yet clear how it will be exposed via the twistd commandline.

Jean-Paul



From glyph at divmod.com  Thu Feb  8 13:40:50 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 08 Feb 2007 20:40:50 -0000
Subject: [Twisted-Python] Something strange about cred
Message-ID: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>

On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:

>P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
>doesn't allow that.  :(

Clearly you're allowed to exchange messages with dangerous subversives like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/6e8ef308/attachment.html>

From stephen.c.waterbury at nasa.gov  Thu Feb  8 14:16:12 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 16:16:12 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
References: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
Message-ID: <45CB931C.5060409@nasa.gov>

glyph at divmod.com wrote:
> On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:
> 
>> P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
>> doesn't allow that.  :(
> 
> Clearly you're allowed to exchange messages with dangerous subversives
> like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)

Heh -- unfortunately, running one's own SMTP service is a Big Hairy
Deal as well.  In ze old days, everybody used to be able to run
their own sendmail, but now you have to have an account on a
NASA/GSFC smtp server and send from that ... bah!  :P

I should quit bitching, just ssh to my home machine and use an
IRC client from there ... guess I'm lazy.  Whining is too much fun.  ;)

Cheers,
Steve



From njp at njp.us  Thu Feb  8 14:21:31 2007
From: njp at njp.us (Norm Petterson)
Date: Thu, 8 Feb 2007 16:21:31 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
References: <20070208204050.28203.259500677.divmod.xquotient.1358@joule.divmod.com>
Message-ID: <9670a730702081321k4fa3aa11ka16811390b4a916d@mail.gmail.com>

+1 on the IRC-via-SMTP proxy!

On 2/8/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 03:16 pm, stephen.c.waterbury at nasa.gov wrote:
>
> >P.S.  Sorry I can't irc from work -- NASA/GSFC IT policy
> >doesn't allow that.  :(
>
> Clearly you're allowed to exchange messages with dangerous subversives
> like us, so would it help if we wrote an IRC-via-SMTP proxy? ;-)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/7f8460ce/attachment.html>

From daedalus at eigenmagic.com  Thu Feb  8 14:31:47 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 09 Feb 2007 08:31:47 +1100
Subject: [Twisted-Python] Support for ICMP ping?
In-Reply-To: <200609111657.11790.ncesar@lunix.com.ar>
References: <200609111657.11790.ncesar@lunix.com.ar>
Message-ID: <1170970307.13507.11.camel@fnord.melbourne.eigenmagic.net>

On Mon, 2006-09-11 at 16:57 -0300, Nicolas D. Cesar wrote:
> I've been googling if there is any 'ICMP ping' support in Twisted. I've 
> encounter ancient replies:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2003-August/005542.html
> 
> I wonder if today is any ICMP support. I've tried to search the source 
> tree[1], and doesn't seem.
> 
> My actual needs is creating a DeferredList with "ping-testers" for different 
> IPs, just to check if there up or not. 

I'm a little behind in my reading, but this caught my eye. I've written
a twisted based ICMP module for our seafelt software that I'm willing to
share with people, if you're still looking for one. The purpose for
writing it is very similar to what you've described here, so it may suit
your purposes.

-- 
Justin Warren <daedalus at eigenmagic.com>



From stephen.c.waterbury at nasa.gov  Thu Feb  8 15:51:02 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 08 Feb 2007 17:51:02 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
Message-ID: <45CBA956.3000607@nasa.gov>

Jean-Paul Calderone wrote:
> ... I think the main problem you're
> running into is that HTTP digest authentication is being used  ...

*So* (for anybody still listening ;) I finally figured out the
implication of Jp's comment:  all I had to do was remove the
digest.DigestCredentialFactory('md5', 'My Realm') factory
instance from HTTPAuthResource's list of credentialFactories
and bingo, we're in basic auth mode and my checker works
with the web2 auth example -- yay!

That wasn't obvious to me from HTTPAuthResource's doc
string nor from the example docs, but arguably I should have
guessed it (sooner).

Anyway, I'm happy now -- thanks, web2 team!

Death to HTTP digest authentication!

Cheers,
Steve



From dreid at dreid.org  Thu Feb  8 17:13:03 2007
From: dreid at dreid.org (David Reid)
Date: Thu, 8 Feb 2007 16:13:03 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CBA956.3000607@nasa.gov>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>
	<45CBA956.3000607@nasa.gov>
Message-ID: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:

> Jean-Paul Calderone wrote:
>> ... I think the main problem you're
>> running into is that HTTP digest authentication is being used  ...
>
> *So* (for anybody still listening ;) I finally figured out the
> implication of Jp's comment:  all I had to do was remove the
> digest.DigestCredentialFactory('md5', 'My Realm') factory
> instance from HTTPAuthResource's list of credentialFactories
> and bingo, we're in basic auth mode and my checker works
> with the web2 auth example -- yay!

Why doesn't your DB Checker just support both interfaces?  
IUsernamePassword, and IUsernameHashedPassword,
doing the right thing depending on the interface provided by the  
credentials input.  Or, do the same thing regardless, because they  
provide compatible checkPassword interfaces.  You'd have to read the  
password from the DB here, but I don't see why that should concern  
you.  And the ability to use Digest auth would provide all around  
better security.

> That wasn't obvious to me from HTTPAuthResource's doc
> string nor from the example docs, but arguably I should have
> guessed it (sooner).

> Anyway, I'm happy now -- thanks, web2 team!

You're welcome, sorry I didn't get a chance to chime in on this
discussion earlier.

> Death to HTTP digest authentication!

I don't know, I definitely prefer digest authentication[1] to sending
my password in plaintext[2]

>
> Cheers,
> Steve
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

David Reid
http://dreid.org/

[1] I may be biased, i've spent a great deal of time on web2's digest  
implementation.  In fact, all the work put into web2's HTTP auth  
support was so I could do digest, and one day Kerberos.

[2] Yes I know base64 isn't plaintext, but it might as well be.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFy7ydrsrO6aeULcgRApErAJ9ER5Mi6HAdBP+7hku03n3DUiskigCfQgjq
bp1IMXp0OixUOxkZoS0mn3g=
=IYzd
-----END PGP SIGNATURE-----



From slowtech.chen at yahoo.com  Thu Feb  8 18:57:51 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 17:57:51 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <533353.23304.qm@web59111.mail.re1.yahoo.com>

From: Thomas Hervé <therve at free.fr>
>I guess you use adbapi ? The performance are generally not a problem with db
>queries because most of the job is done on the DB, not on the client. I've got
>servers that makes hundreds requests against Postgres/MySQL/sqlite without
>problems.

Yes, I will use adbapi and MySQL, good to hear that.

regards,
Chen





 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/664bdf80/attachment.html>

From slowtech.chen at yahoo.com  Thu Feb  8 19:02:05 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Thu, 8 Feb 2007 18:02:05 -0800 (PST)
Subject: [Twisted-Python] questions about large db queries and memory leak
Message-ID: <267279.22866.qm@web59107.mail.re1.yahoo.com>

From: Mark Leonard <mwl at point45.com>
>If you're not running Python >= 2.5.0 this might be relevant:
>http://evanjones.ca/python-memory.html

Yes, I am using Python 2.4., I'll dig into it, thanks for the pointing

regards,
Chen









 
____________________________________________________________________________________
Sucker-punch spam with award-winning protection. 
Try the free Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/features_spam.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070208/de783ac6/attachment.html>

From waterbug at pangalactic.us  Thu Feb  8 20:01:02 2007
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 08 Feb 2007 22:01:02 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
Message-ID: <45CBE3EE.5090009@pangalactic.us>

David Reid wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> 
> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
> 
>> Jean-Paul Calderone wrote:
>>> ... I think the main problem you're
>>> running into is that HTTP digest authentication is being used  ...
>>
>> *So* (for anybody still listening ;) I finally figured out the
>> implication of Jp's comment:  all I had to do was remove the
>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>> instance from HTTPAuthResource's list of credentialFactories
>> and bingo, we're in basic auth mode and my checker works
>> with the web2 auth example -- yay!
> 
> Why doesn't your DB Checker just support both interfaces? 
> IUsernamePassword, and IUsernameHashedPassword,
> doing the right thing depending on the interface provided by the 
> credentials input.  Or, do the same thing regardless, because they 
> provide compatible checkPassword interfaces.  You'd have to read the 
> password from the DB here, but I don't see why that should concern you.  
> And the ability to use Digest auth would provide all around better 
> security.

Thanks, David, but for my application it isn't useful.  IMNSHO, digest
auth only gives an illusion of good security -- it's encrypted, right? 
But I regard it as a waste of time, and the time that I have to work
on the actual logic of my application is in short supply as it is.

Digest auth was invented in 1993, well before widespread open source
implementation of strong asymmetric key technologies, and digest auth
is a technology that can be broken by determined hackers.  I don't
intend to bother with it -- especially since good transport layer
encryption technology is now quite easy to use.

I prefer to exclude digest auth completely from any of my applications,
as I am campaigning against its use.

>> That wasn't obvious to me from HTTPAuthResource's doc
>> string nor from the example docs, but arguably I should have
>> guessed it (sooner).
> 
>> Anyway, I'm happy now -- thanks, web2 team!
> 
> You're welcome, sorry I didn't get a chance to chime in on this
> discussion earlier.

Yes, it would have saved me half a day off-and-on of head-scratching.

>> Death to HTTP digest authentication!
> 
> I don't know, I definitely prefer digest authentication[1] to sending
> my password in plaintext[2]

I use either plaintext basic auth (if the need is only for user
identification, not security) or transport layer asymmetric key
encryption (if the resource needs security).  If it needs security,
it needs real security, and since twisted makes transport layer
asymmetric key encryption (e.g., openssl) quite easy to use, the
only reason I can see for bothering with digest auth is if you
have either some legacy stuff that needs it (which I don't) or
a pointy-haired boss who insists on it (time to look for another
job! ... but one doesn't always have that opportunity, of course).
There might be other use-cases, but I have surrounded them with
a Somebody Else's Problem Field, so they are invisible to me.  ;)

Thanks for all your good work on web2 -- it is appreciated!  :)

Cheers,
Steve



From p.mayers at imperial.ac.uk  Fri Feb  9 04:24:29 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 09 Feb 2007 11:24:29 +0000
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
Message-ID: <45CC59ED.9030909@imperial.ac.uk>

David Reid wrote:
> 
>> Death to HTTP digest authentication!
> 
> I don't know, I definitely prefer digest authentication[1] to sending
> my password in plaintext[2]

+1

web2 auth is a much better architecture.

I only spent a few hours looking at it (primarily looking at how Apples 
CalDAV server implemented SPNEGO - very neat) but it seemed to me that 
it could issue multiple WWW-Authenticate headers and the browser should 
pick and reply to the appropriate one.

Was my understanding correct? If so, why did the digest checker cause this?



From mwl at point45.com  Fri Feb  9 08:04:06 2007
From: mwl at point45.com (Mark Leonard)
Date: Fri, 09 Feb 2007 17:04:06 +0200
Subject: [Twisted-Python] Possible trial -u / threads bug
Message-ID: <45CC8D66.9060105@point45.com>

Hi,

I'm encountering a problem when using deferToThread in a unit test and 
running it with trial -u.

The code below demonstrates the problem. It fails (by timing out) on the 
second pass.

It seems to fail reliably on Twisted 2.5.0 (Python 2.5.0), but on a 
Twisted 2.0.1 (Python 2.4.1) installation it works just fine.

I think the problem is related to trial's cleanup of the threadpool. I 
did try (as a test) add reactor.threadpool.stop() to tearDown and 
reactor.threadpool.start() to setUp, but it had no effect on the second 
pass failure.

Can anybody confirm the problem and, if so, should I create a ticket for it?

Thanks,
-Mark

===

from twisted.trial import unittest
from twisted.internet.threads import deferToThread

from time import sleep

def blockingFunc():
     sleep(0.1)

class DeferToThreadTestCase(unittest.TestCase):

     def testDeferToThread(self):
         return deferToThread(blockingFunc)




From itamar at itamarst.org  Fri Feb  9 08:57:36 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Feb 2007 10:57:36 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r19592 - Author: therve
In-Reply-To: <E1HFXNC-0000Cl-00@wolfwood>
References: <E1HFXNC-0000Cl-00@wolfwood>
Message-ID: <1171036656.1073.7.camel@localhost.localdomain>

On Fri, 2007-02-09 at 08:09 -0700, Thomas Herve wrote:

> +                    # If the test failed the process may already be dead
> +                    # The error here is only noise
> +                    pass

Actually it's the other way around, I think...




From itamar at itamarst.org  Fri Feb  9 08:58:56 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Feb 2007 10:58:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r19594 - Initial observer
In-Reply-To: <E1HFXrV-00017F-00@wolfwood>
References: <E1HFXrV-00017F-00@wolfwood>
Message-ID: <1171036736.1073.9.camel@localhost.localdomain>

As long as you're at it, all the horrible code in emit ideally should be
factored out into a utility function, instead of being duplicated.




From dreid at dreid.org  Fri Feb  9 09:18:44 2007
From: dreid at dreid.org (David Reid)
Date: Fri, 9 Feb 2007 08:18:44 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CBE3EE.5090009@pangalactic.us>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
	<45CBE3EE.5090009@pangalactic.us>
Message-ID: <032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>


On Feb 8, 2007, at 7:01 PM, Stephen Waterbury wrote:

> David Reid wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
>>> Jean-Paul Calderone wrote:
>>>> ... I think the main problem you're
>>>> running into is that HTTP digest authentication is being used  ...
>>>
>>> *So* (for anybody still listening ;) I finally figured out the
>>> implication of Jp's comment:  all I had to do was remove the
>>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>>> instance from HTTPAuthResource's list of credentialFactories
>>> and bingo, we're in basic auth mode and my checker works
>>> with the web2 auth example -- yay!
>> Why doesn't your DB Checker just support both interfaces?  
>> IUsernamePassword, and IUsernameHashedPassword,
>> doing the right thing depending on the interface provided by the  
>> credentials input.  Or, do the same thing regardless, because they  
>> provide compatible checkPassword interfaces.  You'd have to read  
>> the password from the DB here, but I don't see why that should  
>> concern you.  And the ability to use Digest auth would provide all  
>> around better security.
>
> Thanks, David, but for my application it isn't useful.  IMNSHO, digest
> auth only gives an illusion of good security -- it's encrypted,  
> right? But I regard it as a waste of time, and the time that I have  
> to work
> on the actual logic of my application is in short supply as it is.

Well relative merits of Digest authentication aside, it's trivial to  
make your DbChecker support the IUsernameHashedPassword of which  
there are providers other than web2's DigestedCredentials.  So I feel  
like you're really missing out on some of the flexibility that is  
cred, but you seem to genuinely have no desire (and/or time) for  
anything more than basic auth so I won't harp on this point anymore.

--
David Reid
http://dreid.org/


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070209/444c84b7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070209/444c84b7/attachment.sig>

From dreid at dreid.org  Fri Feb  9 09:19:38 2007
From: dreid at dreid.org (David Reid)
Date: Fri, 9 Feb 2007 08:19:38 -0800
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <45CC59ED.9030909@imperial.ac.uk>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>
	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>
	<45CC59ED.9030909@imperial.ac.uk>
Message-ID: <365F74BF-F15D-422F-969E-762F737CF77E@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 9, 2007, at 3:24 AM, Phil Mayers wrote:

> David Reid wrote:
>>> Death to HTTP digest authentication!
>> I don't know, I definitely prefer digest authentication[1] to sending
>> my password in plaintext[2]
>
> +1
>
> web2 auth is a much better architecture.
>
> I only spent a few hours looking at it (primarily looking at how  
> Apples CalDAV server implemented SPNEGO - very neat)

The way Apple's CalDAV server uses web2 auth is kind of broken,  
please don't use it as an example of how to use cred.  It does some  
very poor things because sometimes I'm an idiot.

> but it seemed to me that it could issue multiple WWW-Authenticate  
> headers and the browser should pick and reply to the appropriate one.

This is correct.

>
> Was my understanding correct? If so, why did the digest checker  
> cause this?

The problem wasn't with a Digest checker it was with the lack of a  
checker for the IUsernameHashedPassword credential interface.  You  
still need to have a checker that implements the interface of  
whatever you are getting back from ICredentialFactory.decode.  In  
basic this is IUsernamePassword, for digest this is  
IUsernameHashedPassword.

- --
David Reid
http://dreid.org/


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFzJ8frsrO6aeULcgRAmFUAJ4h2KV3NJzvC0E+tQwqLLjwrKxBdgCfZqNf
Jcj7qrA1eYMrxPNQpaZp6/w=
=uGwz
-----END PGP SIGNATURE-----



From therve at free.fr  Fri Feb  9 09:21:34 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 09 Feb 2007 17:21:34 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r19592 - Author: therve
In-Reply-To: <1171036656.1073.7.camel@localhost.localdomain>
References: <E1HFXNC-0000Cl-00@wolfwood>
	<1171036656.1073.7.camel@localhost.localdomain>
Message-ID: <20070209172134.z3nd6pkpb3wcsw88@wasabox.wasabout.net>

Quoting Itamar Shtull-Trauring <itamar at itamarst.org>:

> On Fri, 2007-02-09 at 08:09 -0700, Thomas Herve wrote:
>
>> +                    # If the test failed the process may already be dead
>> +                    # The error here is only noise
>> +                    pass
>
> Actually it's the other way around, I think...

Yes sorry, I was your comment in the tracker but after some verifications I'm
convinced myself it was this way. Maybe it's a good candidate for revert...

Does anyone knowing this code can comment ?

-- 
Thomas





From iacovou at gmail.com  Fri Feb  9 11:05:29 2007
From: iacovou at gmail.com (kgi)
Date: Fri, 9 Feb 2007 20:05:29 +0200
Subject: [Twisted-Python] Question about Foolscap Slicers and Unslicers.
Message-ID: <200702092005.29807.iacovou@gmail.com>


Hi all (and Brian in particular);

I've got a few questions about Foolscap Slicers and Unslicers. The 
documentation I'm reading is at:

  http://twistedmatrix.com/~warner/Foolscap/using-pb.html

In it, a code fragment of custom slicing is given:

    class ListSlicer(BaseSlicer):
        opentype = ("list",)
        slices = list

The docs then say in the next paragraph:

"""
Slicer registration can be either explicit or implicit. In this example, an 
implicit registration is used: by setting the slices attribute to the list 
type, the BaseSlicer's metaclass automatically registers the mapping from 
list to ListSlicer.

To explicitly register a slicer, just leave opentype set to None (to disable 
auto-registration), and then register the slicer manually.
"""

... and then quote an example of this:

    class TupleSlicer(BaseSlicer):
        opentype = ("tuple",)
        slices = None
        ...
    registerAdapter(TupleSlicer, tuple, pb.ISlicer)

The problem is that the code sets *slices* to None, but the text talks about 
setting *opentype* to None. I'd be inclined to think the code is right, 
except the text says the same sort of thing happens later on when talking 
about Unslicers:

"""
If the Unslicer has a non-None class attribute named opentype, then it is 
automatically registered. If it does not have this attribute (or if it is set 
to None), then no registration is performed, and the Unslicer must be 
manually registered:
"""

Which is it?

Actually, my real question is: what are the exact uses of "opentype" 
and "slices" respectively? I suspect that "slices" refers to the type being 
sliced, and "opentype" is something low-level to do with the slicing process 
(maybe the symbol inserted in the output stream?). Why is is (seemingly 
always) a 1-tuple?

Lastly (secondly?) there is some text in the document:

  http://twistedmatrix.com/~warner/Foolscap/specifications/pb.html

under the paragraph heading, "Arbitrary Instances are NOT serialized" that 
says:

"""
Both ends must be willing to transport the object. The sending side expresses 
this by marking the class (subclassing Copyable, or registering an ISlicer 
adapter).
"""

To me this appears to imply that each of the various ways of transporting a 
non-fundamental type is as good as any other: if I have a subclassed Copyable 
then I wouldn't need an ISlicer adapter, and vice versa.

Is this true? Does this mutual relationship hold true for ISlicer-registered 
types and types making use of foolscap.registerRemoteCopyFactory()? I'm 
asking because I have some types for which I have called 
registerRemoteCopyFactory() yet for which I get an exception saying that the 
object is not sliceable (implying that I need to take the ISlicer approach 
and that the registerRemoteCopyFactory() approach is no longer good enough).

I'm using Python 2.4, Twisted 2.5.0 and head-of-SVN Foolscap.

Cheers,

Ricky



From stephen.c.waterbury at nasa.gov  Fri Feb  9 13:40:37 2007
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 09 Feb 2007 15:40:37 -0500
Subject: [Twisted-Python] Something strange about cred
In-Reply-To: <032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>
References: <20070208160421.25807.191428722.divmod.quotient.14621@ohm>	<45CBA956.3000607@nasa.gov>	<603E453B-8F0B-461A-BD12-EE35DDD27DE2@dreid.org>	<45CBE3EE.5090009@pangalactic.us>
	<032FA5AF-DDD4-4A85-8DF2-0DBEAC1C560D@dreid.org>
Message-ID: <45CCDC45.3070207@nasa.gov>

David Reid wrote:
> 
> On Feb 8, 2007, at 7:01 PM, Stephen Waterbury wrote:
> 
>> David Reid wrote:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>> On Feb 8, 2007, at 2:51 PM, Stephen Waterbury wrote:
>>>> Jean-Paul Calderone wrote:
>>>>> ... I think the main problem you're
>>>>> running into is that HTTP digest authentication is being used  ...
>>>>
>>>> *So* (for anybody still listening ;) I finally figured out the
>>>> implication of Jp's comment:  all I had to do was remove the
>>>> digest.DigestCredentialFactory('md5', 'My Realm') factory
>>>> instance from HTTPAuthResource's list of credentialFactories
>>>> and bingo, we're in basic auth mode and my checker works
>>>> with the web2 auth example -- yay!
>>> Why doesn't your DB Checker just support both interfaces? 
>>> IUsernamePassword, and IUsernameHashedPassword,
>>> doing the right thing depending on the interface provided by the 
>>> credentials input.  Or, do the same thing regardless, because they 
>>> provide compatible checkPassword interfaces.  You'd have to read the 
>>> password from the DB here, but I don't see why that should concern 
>>> you.  And the ability to use Digest auth would provide all around 
>>> better security.
>>
>> Thanks, David, but for my application it isn't useful.  IMNSHO, digest
>> auth only gives an illusion of good security -- it's encrypted, right? 
>> But I regard it as a waste of time, and the time that I have to work
>> on the actual logic of my application is in short supply as it is.
> 
> Well relative merits of Digest authentication aside, it's trivial to 
> make your DbChecker support the IUsernameHashedPassword of which there 
> are providers other than web2's DigestedCredentials.  So I feel like 
> you're really missing out on some of the flexibility that is cred, but 
> you seem to genuinely have no desire (and/or time) for anything more 
> than basic auth so I won't harp on this point anymore.

Two things I should emphasize:

(1)  I do appreciate "the flexibility that is cred" -- even though I do
not intend to use digest auth, I will most likely use other auth methods
(e.g., LDAP) -- but only over an encrypted transport.  Cred's
flexibility and other well designed architectural features are
the main reasons I use Twisted.

(2)  As I mentioned in my last message, I am campaigning against the
use of digest auth here at NASA/GSFC, because when things here need
protection, they need the best protection available, and that is *not*
digest auth.  The consequences for security compromises can be pretty
dire -- e.g.:

   (a) NASA system compromises can be front-page news
       (along with other NASA-related misadventures, as we've seen over
       the past couple days ;)
   (b) government employees are personally liable for the release
       of ITAR data -- if it goes to the wrong people, the NASA
       employee responsible can get federal *prison* time.

So you can see why the illusion of security that digest auth
gives to naive people is not good enough for my apps or for any
serious commercial or government applications.  It might be useful
for free on-line gaming communities, though.  ;)

Cheers,
Steve



From abierbaum at gmail.com  Fri Feb  9 14:07:48 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Fri, 9 Feb 2007 15:07:48 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
Message-ID: <bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>

On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > > someone
> > > > has written a plugin for nose that allows it to test twisted code.  I
> > > > don't think it looks as nice as trial, but it should work for the
> > > > basics.    You can see it here:
> > > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> > >
> > > UGH
> > >
> > > def threaded_reactor():
> >
> > Yep.  Not pretty by any means. :(
> >
> > I am sure that any suggestions you have to make it better would be
> > well-recieved by the nose project and the plugin's author.   :)
> >
>
> I still need to spend some more time looking at nose, but in this
> particular case I think the plugin is unnecessary.
>
> If your tests subclass twisted.trial.unittest.TestCase, then they
> should take care of the reactor themselves.[1]

I tried this and things did not work out well.  I am currently getting
some exceptions inside nose that make me think twisted.trial may have
modified the unittest state in a way that it didn't expect.

It is always possible though that this is just a side effect of my
testing method.  Has anyone else tried using trial unittest's directly
inside nose?

-Allen



From abierbaum at gmail.com  Fri Feb  9 14:39:53 2007
From: abierbaum at gmail.com (Allen Bierbaum)
Date: Fri, 9 Feb 2007 15:39:53 -0600
Subject: [Twisted-Python] Using twisted.trial with nose unittest system
In-Reply-To: <bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>
References: <bea9869d0702060903k641f6870m2828de6df096a00e@mail.gmail.com>
	<d06a5cd30702061406k6bdc611cscb5a0a98a0be1f16@mail.gmail.com>
	<bea9869d0702061547l3c72c533g38bd46adbefee29b@mail.gmail.com>
	<60ed19d40702061600k592f728dx1958994342b8484c@mail.gmail.com>
	<bea9869d0702061605p32456582lba6fa48a27f530de@mail.gmail.com>
	<d06a5cd30702061638x7035b951x8d3201822d5aa54f@mail.gmail.com>
	<bea9869d0702091307i213f71f2yfa165a844a60d2e5@mail.gmail.com>
Message-ID: <bea9869d0702091339i53655227j5351e8abd6ea6f6@mail.gmail.com>

Ok, so I found a way to fix this.  I now have nose running with a
twisted-based test derived from twisted.trial.unittest.TestCase.

I had to patch nose to get this to work:  See:
http://groups.google.com/group/nose-users/browse_frm/thread/0b8e6d7c165032ec

Thanks for all the feedback.  Hopefully things will just work now. :)

-A

On 2/9/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> On 2/6/07, Jonathan Lange <jml at mumak.net> wrote:
> > On 2/7/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > On 2/6/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > > > On 2/6/07, Allen Bierbaum <abierbaum at gmail.com> wrote:
> > > > > someone
> > > > > has written a plugin for nose that allows it to test twisted code.  I
> > > > > don't think it looks as nice as trial, but it should work for the
> > > > > basics.    You can see it here:
> > > > > http://python-nose.googlecode.com/svn/trunk/nose/twistedtools.py
> > > >
> > > > UGH
> > > >
> > > > def threaded_reactor():
> > >
> > > Yep.  Not pretty by any means. :(
> > >
> > > I am sure that any suggestions you have to make it better would be
> > > well-recieved by the nose project and the plugin's author.   :)
> > >
> >
> > I still need to spend some more time looking at nose, but in this
> > particular case I think the plugin is unnecessary.
> >
> > If your tests subclass twisted.trial.unittest.TestCase, then they
> > should take care of the reactor themselves.[1]
>
> I tried this and things did not work out well.  I am currently getting
> some exceptions inside nose that make me think twisted.trial may have
> modified the unittest state in a way that it didn't expect.
>
> It is always possible though that this is just a side effect of my
> testing method.  Has anyone else tried using trial unittest's directly
> inside nose?
>
> -Allen
>



From lee.a.connell at gmail.com  Sat Feb 10 13:19:27 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 15:19:27 -0500
Subject: [Twisted-Python] wxReactor and twisted question
Message-ID: <001501c74d50$c44ea7c0$0200a8c0@leelaptop>

I want to access protocol and transport from within my wxPython app.  How do
I do this?  Since the ClientFactory is not an instance I can’t call the
sendLine() methods on it.  I’m not sure how to access protocol and factory
from within a wx.App class.  I’ve attached my code.

 

-Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070210/f8dc1331/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ChatClient.py
Type: application/octet-stream
Size: 3354 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070210/f8dc1331/attachment-0002.obj>

From lee.a.connell at gmail.com  Sat Feb 10 15:16:06 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 17:16:06 -0500
Subject: [Twisted-Python] Howto access protocol outside of the class
Message-ID: <002701c74d61$241411d0$0200a8c0@leelaptop>

I have a class: class ForemClient(LineReceiver):

 

 

I am using wxPython to build a GUI.  I am having the hardest time trying to
access the instance of this class so I can call the transport methods from a
wxPython button event.  How can I make this accessible outside of the class
itself?  I seen that ClientCreator could be used for this, but I can’t find
an example of using the instance outside of itself.  Anyone able to help?

 

    chat = ClientCreator(reactor, ForemClient)

    d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())

    reactor.run()


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070210/ea81ec89/attachment.html>

From lee.a.connell at gmail.com  Sat Feb 10 15:18:04 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 10 Feb 2007 17:18:04 -0500
Subject: [Twisted-Python] wxreactor.install() issues
Message-ID: <002c01c74d61$58320cb0$0200a8c0@leelaptop>

When using wxreactor.install() on GUI apps it prevents the wx.xrc classes
from working right.  In my case I am subclassing the HtmlWindow class in my
.xrc file created with XRCed.  What happens here is it prevents wx.xrc from
recognizing whatever my subclass is.  If I take the wxreactor.install() out
it works just fine.


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070210/73fb8698/attachment.html>

From teratorn at twistedmatrix.com  Sat Feb 10 22:01:36 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 10 Feb 2007 23:01:36 -0600
Subject: [Twisted-Python] Howto access protocol outside of the class
In-Reply-To: <002701c74d61$241411d0$0200a8c0@leelaptop>
References: <002701c74d61$241411d0$0200a8c0@leelaptop>
Message-ID: <op.tnkiwyuwy3d107@office2>

On Sat, 10 Feb 2007 16:16:06 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I have a class: class ForemClient(LineReceiver):
>
>
>
> I am using wxPython to build a GUI.  I am having the hardest time trying  
> to
> access the instance of this class so I can call the transport methods  
> from a
> wxPython button event.  How can I make this accessible outside of the  
> class
> itself?  I seen that ClientCreator could be used for this, but I can?t  
> find
> an example of using the instance outside of itself.  Anyone able to help?
>
>
>     chat = ClientCreator(reactor, ForemClient)
>
>     d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())
>
>     reactor.run()

You already asked this same basic question two hours ago... Not sure why  
you would re-phrase it here.

Anyway, the answer is to save the protocol instance when it gets created.  
This happens in the buildProtocol() method on your factory.

By default, the factory creates the protocol instance and returns it to  
Twisted. It's not available to user-level code directly.

So you should implement your own buildProtocol(). Have a look at  
Factory.buildProtocol and duplicate the things that it does. Then you are  
free to save a reference to the newly created protocol in any way you see  
fit.

Cheers,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at twistedmatrix.com  Sat Feb 10 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1171170301.91.1165811963@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-04 through 2007-02-11
Bugs opened: 10    Bugs closed: 6  Total open bugs: 829 (+4)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -1  |Highest:  -3          |Core:                +3  
|Enhancement:  +5  |High:     -1          |Release Management:  +2  
                   |Normal:   +4          |Trial:               +1  
                   |Low:      +4          |Web:                 +1  
                                          |Web2:                -3  


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2439] doc/core/examples/ampserver.py:25: undefined name 'total' (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2439

[#2441] release script uses os.system with non-POSIX shell code (opened by radix)
    defect          release management http://twistedmatrix.com/trac/ticket/2441

[#2443] Trial tutorial (opened by therve)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2443

[#2444] Merge Divmod.Sine sip.py into twisted.protocols.sip (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2444

[#2445] trial dumps on frame error (opened by gardnerpomper) (CLOSED, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2445

[#2446] Python 2.4 has poor round-trip behaviour for xmlrpclib.DateTime; Twisted should work around. (opened by kgi)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2446

                    ===== Low =====
[#2437] Support for UDP-Lite (opened by derfel)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2437

[#2438] Get rid of references to twisted (at) itamarst.org email address from code (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2438

[#2440] threadedwin32eventreactor.py (opened by tdickenson)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2440

[#2442] release script uses os.system (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2442



Closed Bugs
______________________
                    ===== Highest =====
[#2102] Access log has multiple copies of the same entry (opened by Cyrus Daboo, closed by therve, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2102

[#1095] Adding support for rotation on a fixed number of logs (opened by lstep, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1095

[#1921] TestTwoProcessesPosix.tearDown has a gratuitous print statement (opened by spiv, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1921

                    ===== High =====
[#2042] twisted.web2.auth.wrapper's interface is backwards (opened by glyph, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2042

                    ===== Normal =====
[#2445] trial dumps on frame error (opened by gardnerpomper, closed by exarkun, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2445

[#1827] web2.auth.wrapper.UnauthenticatedResource does not reply with allowed methods for wrapped resource (opened by troy at osc.edu, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1827





From teratorn at twistedmatrix.com  Sat Feb 10 23:35:41 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 11 Feb 2007 00:35:41 -0600
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <1170959704.26020.89.camel@lothar>
References: <1170959704.26020.89.camel@lothar>
Message-ID: <op.tnkm9rayy3d107@office2>

On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> Hi,
>
> Itamar posted earlier in this list how to run Twisted as a service:
>
> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
>
> Now, I want to trap some Windows events and make some calls into my
> Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> one example). I'll be setting up the trapping in the service code above,
> though, so from looking at the howtos, it looks like the right thing for
> me to do when I get some event is:
>
> reactor.callFromThread(factory.disconnect)
>
> The docs state, though, that the callable must be thread safe. Does that
> mean I need to use threadable.synchronize() to put a lock around
> factory.disconnect? Or whatever else I'm calling into?
>
> Steve

I guess these are the docs you're refering to:

http://twistedmatrix.com/projects/core/documentation/howto/threading.html

Actually, they don't say that the callable must be thread-safe. Indeed,  
the only reason you need to use callFromThread is if the callable *is not*  
thread-safe. What callFromThread does is schedule the call to take place  
within the main thread at the convenience of the reactor.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From einar at norsk-esport.no  Sun Feb 11 05:10:04 2007
From: einar at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Sun, 11 Feb 2007 13:10:04 +0100
Subject: [Twisted-Python] Removing cruft from logs
Message-ID: <45CF079C.10807@norsk-esport.no>

Hi,

I am currently developing an application which will first and foremost
be an xmlrpc server with an adbapi or sasync backend. The number of
xmlrpc-requests is expected to be up to around a hundred per second.
Unfortunately, the logging system by default logs the following for each
and every request, leading to ridiculous logfiles:

2007/02/11 12:54 CET [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
[11/Feb/2007:11:54:57 +0000] "POST /RPC2 HTTP/1.0" 200 122 "-"
"xmlrpclib.py/1.0.1 (by www.pythonware.com)"

It seems that even if I define my own logservice, as per example 11-5 in
Abe Fettig's book, I am unable to catch and filter this logentry in the
emit function before it is written to file. So I guess there's another
LogObserver used by twistd, to which I have no direct access?

What would be the proper way to get rid of this cruft?

Cheers,
Einar S. Idsø




From teratorn at twistedmatrix.com  Sun Feb 11 07:29:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 11 Feb 2007 08:29:24 -0600
Subject: [Twisted-Python] Removing cruft from logs
In-Reply-To: <45CF079C.10807@norsk-esport.no>
References: <45CF079C.10807@norsk-esport.no>
Message-ID: <op.tnk87anfy3d107@office2>

On Sun, 11 Feb 2007 06:10:04 -0600, Einar S. Idsø <einar at norsk-esport.no>  
wrote:

> Hi,
>
> I am currently developing an application which will first and foremost
> be an xmlrpc server with an adbapi or sasync backend. The number of
> xmlrpc-requests is expected to be up to around a hundred per second.
> Unfortunately, the logging system by default logs the following for each
> and every request, leading to ridiculous logfiles:
>
> 2007/02/11 12:54 CET [HTTPChannel,0,127.0.0.1] 127.0.0.1 - -
> [11/Feb/2007:11:54:57 +0000] "POST /RPC2 HTTP/1.0" 200 122 "-"
> "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
>
> It seems that even if I define my own logservice, as per example 11-5 in
> Abe Fettig's book, I am unable to catch and filter this logentry in the
> emit function before it is written to file. So I guess there's another
> LogObserver used by twistd, to which I have no direct access?
>
> What would be the proper way to get rid of this cruft?
>
> Cheers,
> Einar S. Idsø

I take it you're using twistd? In that case, yes, twistd adds a log  
observer when it starts. There also isn't any supported way of getting  
access to it. This and other issues are an unfortunate component of the  
present Twisted reality :)

Here's a hack:

 from twisted.python import log
log.removeObserver(log.theLogPublisher.observers[0])

Then your custom observer should be the only one left.

Hope that helps,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sun Feb 11 07:37:17 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 09:37:17 -0500
Subject: [Twisted-Python] Howto access protocol outside of the class
In-Reply-To: <op.tnkiwyuwy3d107@office2>
References: <002701c74d61$241411d0$0200a8c0@leelaptop>
	<op.tnkiwyuwy3d107@office2>
Message-ID: <001101c74dea$218a0d50$0200a8c0@leelaptop>

Sorry for double posting, must have spaced it.  Thanks for reply.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Sunday, February 11, 2007 12:02 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Howto access protocol outside of the class

On Sat, 10 Feb 2007 16:16:06 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I have a class: class ForemClient(LineReceiver):
>
>
>
> I am using wxPython to build a GUI.  I am having the hardest time trying  
> to
> access the instance of this class so I can call the transport methods  
> from a
> wxPython button event.  How can I make this accessible outside of the  
> class
> itself?  I seen that ClientCreator could be used for this, but I can?t  
> find
> an example of using the instance outside of itself.  Anyone able to help?
>
>
>     chat = ClientCreator(reactor, ForemClient)
>
>     d = chat.connectSSL("localhost", 1025, ssl.ClientContextFactory())
>
>     reactor.run()

You already asked this same basic question two hours ago... Not sure why  
you would re-phrase it here.

Anyway, the answer is to save the protocol instance when it gets created.  
This happens in the buildProtocol() method on your factory.

By default, the factory creates the protocol instance and returns it to  
Twisted. It's not available to user-level code directly.

So you should implement your own buildProtocol(). Have a look at  
Factory.buildProtocol and duplicate the things that it does. Then you are  
free to save a reference to the newly created protocol in any way you see  
fit.

Cheers,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.33/678 - Release Date: 2/9/2007
4:06 PM
 




From lee.a.connell at gmail.com  Sun Feb 11 08:34:40 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 10:34:40 -0500
Subject: [Twisted-Python] general documentation question
Message-ID: <001d01c74df2$25f16570$0200a8c0@leelaptop>

I am trying to get use to the documentation in twisted, as I am new to
python as well.  I am using a LineReceiver class for a client I am building.
There are some attributes like “connected, delimiter, transport”.  I am
having a tough time finding them within the twisted documentation.  I’ve
looked at all subclasses that I can see that are related to LineReceiver and
can’t seem to find where they are defined.  I did find a twistedmatrix user
that has these listed, but how do I find this in official documentation?  

 

Here is the link I am referring too. HYPERLINK
"http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.h
tml#Protocol"http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocol
s.protocol.html#Protocol

 

-Lee


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070211/ae57d214/attachment.html>

From radix at twistedmatrix.com  Sun Feb 11 08:58:35 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 11 Feb 2007 10:58:35 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <001d01c74df2$25f16570$0200a8c0@leelaptop>
References: <001d01c74df2$25f16570$0200a8c0@leelaptop>
Message-ID: <60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>

On 2/11/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> I am trying to get use to the documentation in twisted, as I am new to
> python as well.  I am using a LineReceiver class for a client I am building.
>  There are some attributes like "connected, delimiter, transport".  I am
> having a tough time finding them within the twisted documentation.  I've
> looked at all subclasses that I can see that are related to LineReceiver and
> can't seem to find where they are defined.  I did find a twistedmatrix user
> that has these listed, but how do I find this in official documentation?
>
> Here is the link I am referring too.
> http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.html#Protocol

Yuck. That stuff is super old and I'm surprised it's still even there.

Anyway, it appears 'transport' is unfortunately not actually mentioned
anywhere where it should be in the API docs (which is the Protocol
class, probably). 'delimiter' is fortunately documented in the
LineReceiver class. I'm not sure 'connected' is actually public, but
even if it is it is a pretty useless attribute.

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From lee.a.connell at gmail.com  Sun Feb 11 09:12:47 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 11:12:47 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>
References: <001d01c74df2$25f16570$0200a8c0@leelaptop>
	<60ed19d40702110758p39393129jc6d43e582eed3543@mail.gmail.com>
Message-ID: <002701c74df7$795ce360$0200a8c0@leelaptop>

Hi Christopher,

Thanks for response, yeah connected is public and it's useable, I use it to
check the connection state before sending any data through my wx GUI.  I
could just as easily create my own from the connectionMade member.  I was
just more curious of the documentation layout, because I'm going to be using
it a lot.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Sunday, February 11, 2007 10:59 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] general documentation question

On 2/11/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> I am trying to get use to the documentation in twisted, as I am new to
> python as well.  I am using a LineReceiver class for a client I am
building.
>  There are some attributes like "connected, delimiter, transport".  I am
> having a tough time finding them within the twisted documentation.  I've
> looked at all subclasses that I can see that are related to LineReceiver
and
> can't seem to find where they are defined.  I did find a twistedmatrix
user
> that has these listed, but how do I find this in official documentation?
>
> Here is the link I am referring too.
>
http://twistedmatrix.com/users/jh/teud/Twisted/twisted.protocols.protocol.ht
ml#Protocol

Yuck. That stuff is super old and I'm surprised it's still even there.

Anyway, it appears 'transport' is unfortunately not actually mentioned
anywhere where it should be in the API docs (which is the Protocol
class, probably). 'delimiter' is fortunately documented in the
LineReceiver class. I'm not sure 'connected' is actually public, but
even if it is it is a pretty useless attribute.

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineR
eceiver.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 




From exarkun at divmod.com  Sun Feb 11 12:13:19 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Feb 2007 14:13:19 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: 0
Message-ID: <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>

On Sun, 11 Feb 2007 11:12:47 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hi Christopher,
>
>Thanks for response, yeah connected is public and it's useable

If you can't find the documentation for it, how do you know it's public?

Jean-Paul



From einar.twisted at norsk-esport.no  Sun Feb 11 15:15:12 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-15?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Sun, 11 Feb 2007 23:15:12 +0100
Subject: [Twisted-Python] Removing cruft from logs
In-Reply-To: <op.tnk87anfy3d107@office2>
References: <45CF079C.10807@norsk-esport.no> <op.tnk87anfy3d107@office2>
Message-ID: <45CF9570.2040101@norsk-esport.no>

Eric Mangold wrote:
> I take it you're using twistd? In that case, yes, twistd adds a log
> observer when it starts. There also isn't any supported way of getting
> access to it. This and other issues are an unfortunate component of the
> present Twisted reality :)
> 
> Here's a hack:
> 
> from twisted.python import log
> log.removeObserver(log.theLogPublisher.observers[0])
> 
> Then your custom observer should be the only one left.
> 
> Hope that helps,
> --Eric Mangold
> Twisted/Win32 Co-Maintainer

Thank you for your answer! It's too bad that it isn't possible to
manipulate the default logger when using twistd.

I tried your hack, but even though it stops the twistd.log from spewing
cruft, I am unable to remove it from my own log. If I simply return from
emit(), nothing is printed, as expected. But if I don't return but
instead call log.fileObserver.emit(self, logEntryDict), both the line I
wish to log and the line I wish to get rid of are printed. It seems as
if both lines are printed as the result of one call to emit(). How can I
prevent the second from being printed?

Below is a simple working example.

Cheers,
Einar

******* Server ********

from twisted.application import internet, service, strports
from twisted.web import server, xmlrpc
from twisted.internet import protocol as tiprotocol, reactor, task
from twisted.python import log, logfile
import sys

class ErrorLog(log.FileLogObserver):
   def emit(self, logEntryDict):
      # We can take a look at the message we are asked to log
      # sys.stdout.write("MSG: ---->%s<----" %logEntryDict['message'])
      # Alternatively just return to have no lines logged
      # return
      log.FileLogObserver.emit(self, logEntryDict)

class ErrorLogService(service.Service):
   def __init__(self, logName, logDir):
      self.logName = logName
      self.logDir = logDir
      self.maxLogSize = 1000000

   def startService(self):
      self.logFile = logfile.LogFile(
         self.logName, self.logDir, rotateLength = self.maxLogSize)
      #self.logFile.rotate()


      self.log = ErrorLog(self.logFile)
      self.log.start()

   def stopService(self):
      self.log.stop()
      self.logFile.close()
      del(self.logFile)

class XmlRpcServer(xmlrpc.XMLRPC):
   def xmlrpc_test(self, data):
      log.msg("Received: %s" %data)
      return 2*data;

xmlServer = XmlRpcServer()
application = service.Application('MyApp')
serviceCollection = service.IServiceCollection(application)
xmlSite = server.Site(xmlServer)
xmlServer = strports.service("35550", xmlSite)

errorLogServer = ErrorLogService('myapp.err.log', './')

xmlServer.setServiceParent(application)
errorLogServer.setServiceParent(application)



****** Simple test ******
>>> import xmlrpclib
>>> s=xmlrpclib.Server('http://localhost:35550')
>>> s.test(1)
2

***** Results *******
The following two lines should be logged to myapp.err.log. I need to get
rid of the second:

2007/02/11 23:12 CET [HTTPChannel,1,127.0.0.1] Received: 1
2007/02/11 23:12 CET [HTTPChannel,1,127.0.0.1] 127.0.0.1 - -
[11/Feb/2007:22:12:19 +0000] "POST /RPC2 HTTP/1.0" 200 121 "-"
"xmlrpclib.py/1.0.1 (by www.pythonware.com)




From lee.a.connell at gmail.com  Sun Feb 11 15:19:08 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 11 Feb 2007 17:19:08 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>
References: 0 <20070211191319.25807.1349408045.divmod.quotient.18320@ohm>
Message-ID: <003f01c74e2a$a76c8b10$0200a8c0@leelaptop>

I have intellisense inside of the IDE I'm using, "Komodo"  If I do Protcol.
It shows me "connected" as an attribute, I'm using it in my code and it
works.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Sunday, February 11, 2007 2:13 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] general documentation question

On Sun, 11 Feb 2007 11:12:47 -0500, Lee Connell <lee.a.connell at gmail.com>
wrote:
>Hi Christopher,
>
>Thanks for response, yeah connected is public and it's useable

If you can't find the documentation for it, how do you know it's public?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.441 / Virus Database: 268.17.35/680 - Release Date: 2/10/2007
9:15 PM
 




From exarkun at divmod.com  Sun Feb 11 15:28:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Feb 2007 17:28:20 -0500
Subject: [Twisted-Python] general documentation question
In-Reply-To: <003f01c74e2a$a76c8b10$0200a8c0@leelaptop>
Message-ID: <20070211222820.25807.1651025374.divmod.quotient.18468@ohm>

On Sun, 11 Feb 2007 17:19:08 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>I have intellisense inside of the IDE I'm using, "Komodo"  If I do Protcol.
>It shows me "connected" as an attribute, I'm using it in my code and it
>works.

I'm sure Komodo just shows you all attributes, or perhaps all
attributes which do not begin with an underscore.  While this
is a reasonable rule of thumb, it is not without exceptions.
Ultimately, Twisted gets to decide what is public or not, not
Komodo.  So, if a Twisted developer points out something isn't
public, it's best to take their word for it. :)

Jean-Paul



From jml at mumak.net  Sun Feb 11 23:23:06 2007
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 12 Feb 2007 17:23:06 +1100
Subject: [Twisted-Python] Possible trial -u / threads bug
In-Reply-To: <45CC8D66.9060105@point45.com>
References: <45CC8D66.9060105@point45.com>
Message-ID: <d06a5cd30702112223g7d9ae91fsd5f02adf7acc39e7@mail.gmail.com>

On 2/10/07, Mark Leonard <mwl at point45.com> wrote:
> Hi,
>
> I'm encountering a problem when using deferToThread in a unit test and
> running it with trial -u.
>
> The code below demonstrates the problem. It fails (by timing out) on the
> second pass.
>
> It seems to fail reliably on Twisted 2.5.0 (Python 2.5.0), but on a
> Twisted 2.0.1 (Python 2.4.1) installation it works just fine.
>
> I think the problem is related to trial's cleanup of the threadpool. I
> did try (as a test) add reactor.threadpool.stop() to tearDown and
> reactor.threadpool.start() to setUp, but it had no effect on the second
> pass failure.
>
> Can anybody confirm the problem and, if so, should I create a ticket for it?
>

Hey Mark,

I've run your code against trunk, and the problem definitely occurs
there. This definitely is a bug -- if a test passes without -u, it
should pass with -u.

Please file a bug at http://twistedmatrix.com/trac/newticket and make
sure that it's in the "Trial" component.

cheers,
jml



From sflist at ihonk.com  Mon Feb 12 01:11:06 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 12 Feb 2007 00:11:06 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <op.tnkm9rayy3d107@office2>
References: <1170959704.26020.89.camel@lothar>  <op.tnkm9rayy3d107@office2>
Message-ID: <1171267866.8410.81.camel@lothar>

On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> 
> > Hi,
> >
> > Itamar posted earlier in this list how to run Twisted as a service:
> >
> > http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
> >
> > Now, I want to trap some Windows events and make some calls into my
> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> > one example). I'll be setting up the trapping in the service code above,
> > though, so from looking at the howtos, it looks like the right thing for
> > me to do when I get some event is:
> >
> > reactor.callFromThread(factory.disconnect)
> >
> > The docs state, though, that the callable must be thread safe. Does that
> > mean I need to use threadable.synchronize() to put a lock around
> > factory.disconnect? Or whatever else I'm calling into?
> >
> > Steve
> 
> I guess these are the docs you're refering to:
> 
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
> 
> Actually, they don't say that the callable must be thread-safe. Indeed,  
> the only reason you need to use callFromThread is if the callable *is not*  
> thread-safe. What callFromThread does is schedule the call to take place  
> within the main thread at the convenience of the reactor.

Thanks for responding, Eric. After a couple of days I started to worry
about the quality of my question.

This is where I saw that note I mentioned above:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html

That's part of what I found a little confusing... If I understand them
correctly, these docs say the callable must be threadsafe, but if it is,
I should be able to call it willy nilly.

Steve




From slowtech.chen at yahoo.com  Mon Feb 12 03:57:59 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Mon, 12 Feb 2007 02:57:59 -0800 (PST)
Subject: [Twisted-Python] is it possible to use an ORM in Twisted?
Message-ID: <375613.1807.qm@web59101.mail.re1.yahoo.com>

Hey guys,

I know there is adbapi to do database operations for twisted. The way adbapi works is similar to deferToThread in some ways, I guess the difference is adbapi handles some thread issues automatically, and provides a connection pool. So here comes my question:

    Is it possible to use an ORM by calling deferToThread(ORM operations...),  it seems to me that if you take care of the thread issues, this is doable. Even so I  have no any clue though :). 

I am new to Twisted and the above is my confusion, any suggestion very welcome.

Regards,
Chen




 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070212/9a516801/attachment.html>

From p.mayers at imperial.ac.uk  Mon Feb 12 04:20:02 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 12 Feb 2007 11:20:02 +0000
Subject: [Twisted-Python] is it possible to use an ORM in Twisted?
In-Reply-To: <375613.1807.qm@web59101.mail.re1.yahoo.com>
References: <375613.1807.qm@web59101.mail.re1.yahoo.com>
Message-ID: <45D04D62.3020305@imperial.ac.uk>

slowtech chen wrote:
> Hey guys,
> 
> I know there is adbapi to do database operations for twisted. The way 
> adbapi works is similar to deferToThread in some ways, I guess the 
> difference is adbapi handles some thread issues automatically, and 
> provides a connection pool. So here comes my question:
> 
>     Is it possible to use an ORM by calling deferToThread(ORM 
> operations...),  it seems to me that if you take care of the thread 
> issues, this is doable. Even so I  have no any clue though :).
> 
> I am new to Twisted and the above is my confusion, any suggestion very 
> welcome.

It can be done, but they don't "look" the same as ORMs in blocking code:

http://foss.eepatents.com/sAsync

If you can afford to use a local SQLite database, there's also:

http://divmod.org/trac/wiki/DivmodAxiom

The key difficulty is that the ORM either needs to be very, very fast to 
avoid blocking when fetching the (potentially arbitrarily large) graph 
of objects from the database, or you need to fetch them in a separate thread



From teratorn at twistedmatrix.com  Mon Feb 12 08:14:53 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 12 Feb 2007 09:14:53 -0600
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <1171267866.8410.81.camel@lothar>
References: <1170959704.26020.89.camel@lothar> <op.tnkm9rayy3d107@office2>
	<1171267866.8410.81.camel@lothar>
Message-ID: <op.tnm5y3noy3d107@office2>

On Mon, 12 Feb 2007 02:11:06 -0600, Steve Freitas <sflist at ihonk.com> wrote:

> On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
>> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com>  
>> wrote:
>>
>> > Hi,
>> >
>> > Itamar posted earlier in this list how to run Twisted as a service:
>> >
>> >  
>> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
>> >
>> > Now, I want to trap some Windows events and make some calls into my
>> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
>> > one example). I'll be setting up the trapping in the service code  
>> above,
>> > though, so from looking at the howtos, it looks like the right thing  
>> for
>> > me to do when I get some event is:
>> >
>> > reactor.callFromThread(factory.disconnect)
>> >
>> > The docs state, though, that the callable must be thread safe. Does  
>> that
>> > mean I need to use threadable.synchronize() to put a lock around
>> > factory.disconnect? Or whatever else I'm calling into?
>> >
>> > Steve
>>
>> I guess these are the docs you're refering to:
>>
>> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
>>
>> Actually, they don't say that the callable must be thread-safe. Indeed,
>> the only reason you need to use callFromThread is if the callable *is  
>> not*
>> thread-safe. What callFromThread does is schedule the call to take place
>> within the main thread at the convenience of the reactor.
>
> Thanks for responding, Eric. After a couple of days I started to worry
> about the quality of my question.
>
> This is where I saw that note I mentioned above:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html
>
> That's part of what I found a little confusing... If I understand them
> correctly, these docs say the callable must be threadsafe, but if it is,
> I should be able to call it willy nilly.
>
> Steve

Wow, that doc string is quite misleading. Good catch :)

Please file a bug and assign to itamar since he has his name in that file  
:)

It's true that since you're writing a multi-threaded app the callable  
*may* need to be thread-safe. But in so far as callFromThread is concerned  
it doesn't need to be.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From sflist at ihonk.com  Mon Feb 12 10:17:37 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Mon, 12 Feb 2007 09:17:37 -0800
Subject: [Twisted-Python] Calling into Twisted from a Windows service
	control
In-Reply-To: <op.tnm5y3noy3d107@office2>
References: <1170959704.26020.89.camel@lothar> <op.tnkm9rayy3d107@office2>
	<1171267866.8410.81.camel@lothar>  <op.tnm5y3noy3d107@office2>
Message-ID: <1171300657.11015.0.camel@lothar>

On Mon, 2007-02-12 at 09:14 -0600, Eric Mangold wrote:
> On Mon, 12 Feb 2007 02:11:06 -0600, Steve Freitas <sflist at ihonk.com> wrote:
> 
> > On Sun, 2007-02-11 at 00:35 -0600, Eric Mangold wrote:
> >> On Thu, 08 Feb 2007 12:35:03 -0600, Steve Freitas <sflist at ihonk.com>  
> >> wrote:
> >>
> >> > Hi,
> >> >
> >> > Itamar posted earlier in this list how to run Twisted as a service:
> >> >
> >> >  
> >> http://twistedmatrix.com/pipermail/twisted-python/2003-October/006081.html
> >> >
> >> > Now, I want to trap some Windows events and make some calls into my
> >> > Twisted app (calling disconnect() on a pb.PBClientFactory instance is
> >> > one example). I'll be setting up the trapping in the service code  
> >> above,
> >> > though, so from looking at the howtos, it looks like the right thing  
> >> for
> >> > me to do when I get some event is:
> >> >
> >> > reactor.callFromThread(factory.disconnect)
> >> >
> >> > The docs state, though, that the callable must be thread safe. Does  
> >> that
> >> > mean I need to use threadable.synchronize() to put a lock around
> >> > factory.disconnect? Or whatever else I'm calling into?
> >> >
> >> > Steve
> >>
> >> I guess these are the docs you're refering to:
> >>
> >> http://twistedmatrix.com/projects/core/documentation/howto/threading.html
> >>
> >> Actually, they don't say that the callable must be thread-safe. Indeed,
> >> the only reason you need to use callFromThread is if the callable *is  
> >> not*
> >> thread-safe. What callFromThread does is schedule the call to take place
> >> within the main thread at the convenience of the reactor.
> >
> > Thanks for responding, Eric. After a couple of days I started to worry
> > about the quality of my question.
> >
> > This is where I saw that note I mentioned above:
> >
> > http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorThreads.html
> >
> > That's part of what I found a little confusing... If I understand them
> > correctly, these docs say the callable must be threadsafe, but if it is,
> > I should be able to call it willy nilly.
> >
> > Steve
> 
> Wow, that doc string is quite misleading. Good catch :)
> 
> Please file a bug and assign to itamar since he has his name in that file  
> :)

Done, #2449.

Thanks for the help!

Steve




From pablo at minimoesfuerzo.org  Thu Feb 15 02:03:10 2007
From: pablo at minimoesfuerzo.org (=?ISO-8859-1?Q?Pablo_Mart=ED?=)
Date: Thu, 15 Feb 2007 10:03:10 +0100
Subject: [Twisted-Python] Twisted + g{tk,lib}2reactor
Message-ID: <45D421CE.6080502@minimoesfuerzo.org>

Hi all,

yesterday I troubled some devs about the current state of integration
between Twisted and dbus. It all boils down to adding this two lines right
after importing dbus. Without them, it won't work.

if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
    import dbus.glib

It has been tested with dbus 0.7.2 and the g{tk,lib}2reactors.

Best regards,
Pablo



From johnpote at jptechnical.co.uk  Wed Feb 14 10:46:09 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 14 Feb 2007 17:46:09 +0000
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
Message-ID: <45D34AE1.7000301@jptechnical.co.uk>

Hi everyone,
I am putting together a number of servers that will all communicate with 
each other every 5 or 10 minutes via  TCP/IP connections. It occured to 
me that once a connection has been established I might as well leave it 
open permanently. Are there any problems/side effects of doing this? Is 
it better policy to close and re-open the connection every now and then?

Also am I correct in assuming that if a computer at one end of a 
TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
program at the other end will only know this when it attempts to send a 
packet to the now crashed computer and, having no reply, gets a timeout.

Thanks for your help,
John




From martin at browns.co.uk  Thu Feb 15 04:59:03 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 15 Feb 2007 11:59:03 +0000
Subject: [Twisted-Python] Re: startLogging
In-Reply-To: <E1HFL1Q-0000xT-03@pyramid.twistedmatrix.com>
References: <E1HFL1Q-0000xT-03@pyramid.twistedmatrix.com>
Message-ID: <200702151159.l1FBxH9L022529@brownix.browns.co.uk>

 > Are there any samples on how best to interact with logging?
 >
 > My server needs to log quite a few items, as such the log file is
 > growing quite quickly and I would like to be able to switch file
 > names on a daily basis. I would also probably then wish to delete
 > logs older than 14 days.
 >
 > I'm not sure how safe it would be to just keep calling startLogging()
 > with a different file name mid-session. I realise there has been some
 > discussion about this area recently.


Many thanks for all the suggestions last week regarding the 
startLogging function. I now have it working exactly as required. I 
ended up deriving a class from twisted.python.logfile.DailyLogFile

Martin




From rodsenra at gpr.com.br  Thu Feb 15 05:13:07 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Thu, 15 Feb 2007 10:13:07 -0200
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <20070215101307.4d29b405@Fenix>


[ John Pote ]:

|Hi everyone,
|I am putting together a number of servers that will all communicate
|with each other every 5 or 10 minutes via  TCP/IP connections. It
|occured to me that once a connection has been established I might as
|well leave it open permanently. Are there any problems/side effects of
|doing this? 
| Is it better policy to close and re-open the connection every now and
| then?

One advantage of keeping connections opened is to avoid the 3-way
handshake that will take place during connection setup. For a few
number of conenctions I see no immediate disadvantage, but I guess
it all depends on what one means by "few" and the context. 


|Also am I correct in assuming that if a computer at one end of a 
|TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
|program at the other end will only know this when it attempts to send
|a packet to the now crashed computer and, having no reply, gets a
|timeout.

AFAICT, that *is not* a limitation of Twisted. This is simply the fact
that TCP -- while a connection is in silence -- will increment its
timers, since the rx end-point is unaware if nothing is sent or if
the netpath is congested. 


cheers,
Rod Senra

-------------
Rodrigo Senra
GPr Sistemas 
http://www.gpr.com.br



From jacob at internet24.de  Thu Feb 15 07:25:56 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Thu, 15 Feb 2007 15:25:56 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <1171549557.17088.9.camel@enterprise>

I would implement some sort of keep-alive mechanism
for those connections, something that will periodically do
some sort of ping/pong sequence (possibly even
using TCP's keepalive feature if that is available, anyone
know if Twisted can request it on at least some platforms?).

(Cf. for instance this 
http://libkeepalive.sourceforge.net/docs/TCP-Keepalive-HOWTO
)

This has at least two advantages, the first being
that will be able to know that the other side has gone
down, and that you will have to reopen your TCP
connection, the second being that there maybe various
state-full routers/firewalls in between your
communication endpoints that could possibly 
"age out" your connection if you do not send
any packets for some time.

The main disadvantage is that you generate data traffic even
if you do not actually do anything.

On Wed, 2007-02-14 at 17:46 +0000, John Pote wrote:
> Hi everyone,
> I am putting together a number of servers that will all communicate with 
> each other every 5 or 10 minutes via  TCP/IP connections. It occured to 
> me that once a connection has been established I might as well leave it 
> open permanently. Are there any problems/side effects of doing this? Is 
> it better policy to close and re-open the connection every now and then?
> 
> Also am I correct in assuming that if a computer at one end of a 
> TCP/IPconnection crashes or otherwise becomes unavailable the twisted 
> program at the other end will only know this when it attempts to send a 
> packet to the now crashed computer and, having no reply, gets a timeout.
> 
> Thanks for your help,
> John
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070215/43c926bd/attachment.sig>

From exarkun at divmod.com  Thu Feb 15 08:02:27 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Feb 2007 10:02:27 -0500
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <1171549557.17088.9.camel@enterprise>
Message-ID: <20070215150227.25807.284303635.divmod.quotient.22562@ohm>

On Thu, 15 Feb 2007 15:25:56 +0100, Thomas Jacob <jacob at internet24.de> wrote:
>I would implement some sort of keep-alive mechanism
>for those connections, something that will periodically do
>some sort of ping/pong sequence (possibly even
>using TCP's keepalive feature if that is available, anyone
>know if Twisted can request it on at least some platforms?).
>
>(Cf. for instance this
>http://libkeepalive.sourceforge.net/docs/TCP-Keepalive-HOWTO
>)

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#setTcpKeepAlive

An application-level keepalive may be more appropriate.  If
communication happens every 5 to 10 minutes anyway, then a
separate keepalive doesn't seem very useful.  Your application
traffic will let you know when the connection is lost.  Then
you can reconnect and re-send whatever messages you need to.

Jean-Paul



From therve at free.fr  Thu Feb 15 08:13:58 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 15 Feb 2007 16:13:58 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <1171549557.17088.9.camel@enterprise>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
	<1171549557.17088.9.camel@enterprise>
Message-ID: <20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>

Quoting Thomas Jacob <jacob at internet24.de>:

> I would implement some sort of keep-alive mechanism
> for those connections, something that will periodically do
> some sort of ping/pong sequence (possibly even
> using TCP's keepalive feature if that is available, anyone
> know if Twisted can request it on at least some platforms?).

Here is documented the setTcpKeepAlive method:
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html

Generally you can enable it in the connectionMade of your protocol.

-- 
Thomas




From ellisonbg.net at gmail.com  Thu Feb 15 15:15:02 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 15 Feb 2007 15:15:02 -0700
Subject: [Twisted-Python] Problem in failure.Failure.__init__
Message-ID: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>

Hi,

I am using Twisted in a project and have been doing so for a long
time.  Today I ran into something that is really bizzare in
failure.Failure.

I have a simple callback function that I have registered on a deferred:

def myCallback(self, result, arg1, arg2):
    do some stuff....
   possibly:
        raise MyException()

The resulting exception that is raised gets sent down the pipeline and
eventually I end up serializing the Failure to send it over the wire.
The problem is that the resulting Failure is massive!  From looking at
it, the Failure has the entire locals dict.  But in my case, result,
arg1, arg2, self are all really big.  I don't want to throw all of
these things into the Failure, but Twisted seems intent on doing so.
This seems like a problem to blindly have Failure pull in the locals
w/o regard to how big the locals are.  Why is this done?  Can I
prevent it?  Is this a bug?

Thanks

Brian



From itamar at itamarst.org  Thu Feb 15 18:11:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Feb 2007 20:11:35 -0500
Subject: [Twisted-Python] Problem in failure.Failure.__init__
In-Reply-To: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>
References: <6ce0ac130702151415y7a7c7914l5890d21e0b7e238c@mail.gmail.com>
Message-ID: <1171588295.5421.41.camel@localhost.localdomain>

On Thu, 2007-02-15 at 15:15 -0700, Brian Granger wrote:

> This seems like a problem to blindly have Failure pull in the locals
> w/o regard to how big the locals are.  Why is this done?  Can I
> prevent it?  Is this a bug?

I would file a bug about it; it really only ought to do that in debug
mode.




From johnpote at jptechnical.co.uk  Fri Feb 16 03:34:11 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Fri, 16 Feb 2007 10:34:11 +0000
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>	<45D34AE1.7000301@jptechnical.co.uk>	<1171549557.17088.9.camel@enterprise>
	<20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
Message-ID: <45D588A3.20406@jptechnical.co.uk>

Thanks for all the quick replies. Very helpful, esp the docs links. 
Initially I will only be using just a 'few' connections, about 4 to 6. 
Good point about 'stateful packet inspection' as at least one of the 
servers will be on my home network connecting to the internet via a 
netgear router.

Thanks again,
John

Thomas Hervé wrote:

> Quoting Thomas Jacob <jacob at internet24.de>:
>
>> I would implement some sort of keep-alive mechanism
>> for those connections, something that will periodically do
>> some sort of ping/pong sequence (possibly even
>> using TCP's keepalive feature if that is available, anyone
>> know if Twisted can request it on at least some platforms?).
>
>
> Here is documented the setTcpKeepAlive method:
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html 
>
>
> Generally you can enable it in the connectionMade of your protocol.
>





From itamar at itamarst.org  Fri Feb 16 07:10:26 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Feb 2007 09:10:26 -0500
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D588A3.20406@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>	<1171549557.17088.9.camel@enterprise>
	<20070215161358.4q3zjfuhctko4s4c@wasabox.wasabout.net>
	<45D588A3.20406@jptechnical.co.uk>
Message-ID: <1171635026.5421.59.camel@localhost.localdomain>

On Fri, 2007-02-16 at 10:34 +0000, John Pote wrote:
> Thanks for all the quick replies. Very helpful, esp the docs links. 
> Initially I will only be using just a 'few' connections, about 4 to 6. 
> Good point about 'stateful packet inspection' as at least one of the 
> servers will be on my home network connecting to the internet via a 
> netgear router.

James Knight discovered yesterday that some linksys routers have a 10
minute TCP timeout, and it may well be that netgear boxes are similarly
broken. If you can manage it, a more frequent application level ping is
worth doing.




From Marcin.Kasperski at softax.com.pl  Fri Feb 16 08:06:21 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Fri, 16 Feb 2007 16:06:21 +0100
Subject: [Twisted-Python] Problems with long term connections?
In-Reply-To: <45D34AE1.7000301@jptechnical.co.uk>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>
	<45D34AE1.7000301@jptechnical.co.uk>
Message-ID: <200702161606.22208.Marcin.Kasperski@softax.com.pl>

> It occured to me that once a connection has been
> established I might as well leave it open permanently. Are
> there any problems/side effects of doing this? 

Some firewalls (also inteligent routers) may drop connections 
which are inactive for a few (5, 10, depending on 
configurations) minutes. This especially applies in case 
masquerading is in place.



From itamar at itamarst.org  Fri Feb 16 15:23:02 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Feb 2007 17:23:02 -0500 (EST)
Subject: [Twisted-Python] inlineCallbacks: Twisted 2.5's generator-based
 Deferred microthreads-thingie
Message-ID: <24865.63.107.91.99.1171664582.squirrel@webmail.zoteca.com>

Apparently some people are not aware of this new feature in Twisted 2.5
(requires Python 2.5), written by James Knight based on code by Chris
Armstrong. Previous versions of Twisted have deferredGenerator, but the
syntax isn't as nice.

Here's some sample code JP Calderone posted to python-dev recently:

    from twisted.internet import reactor
    from twisted.internet.defer import inlineCallbacks
    from twisted.web.client import getPage

    @inlineCallbacks
    def fetchSequence(...):
        homepage = yield getPage(homepage)
        firstData = yield getPage(anotherPage)
        if someCondition(firstData):
            while:
                secondData = yield getPage(wherever)
                if someOtherCondition(secondData):
                    break
        else:
            ...

Essentially this allows one to "wait" for a Deferred's result. It also
does error handling in the way one would expect: just use try/except
around the yield.

Be *very careful* when using this functionality, as every time you do
"yield" you are doing a context switch. Random other code will have run
for an indeterminate amount of time, possibly changing attributes and
state on objects the generator has references to.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks




From slyphon at twistedmatrix.com  Sat Feb 17 18:09:10 2007
From: slyphon at twistedmatrix.com (Thurman Hadley)
Date: Sat, 17 Feb 2007 20:09:10 -0500
Subject: [Twisted-Python] Cial1s S0ft Tabs - Super V1agra
Message-ID: <bhhqklbUUFIUJslyphon@twistedmatrix.com>


Hello,
Try this revolutionary product, Cial1s S0ft Tabs.
Cial1s S0ft Tabs is the new impotence treatment drug that everyone
is talking about. S0ft Tabs acts up to 36 hours, compare this to
only two or three hours of Viagra action! The active ingredient is
Tadalafil, same as in brand Cial1s.
Ch3ck it h3re> http://www.paminnow.com/

Simply dissolve half a pill under your tongue, 10 min before sex,
for the best erections you've ever had!
S0ft Tabs also have less sidebacks (you can drive or mix alcohol
drinks with them). No prior prescription needed.
Ch3ck it h3re> http://www.paminnow.com/







From exarkun at twistedmatrix.com  Sat Feb 17 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Feb 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1171775102.1.676019297@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-11 through 2007-02-18
Bugs opened: 13    Bugs closed: 6  Total open bugs: 836 (+7)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +3  |Highest:  -2          |Conch:     -1          
|Enhancement:  +6  |Normal:  +11          |Core:      +4          
                   |Low:      +0          |Pydoctor:  +1          
                                          |Trial:     +1          
                                          |Web:       +2          
                                          |Web2:      +1          
                                          |Website:   +1          


New / Reopened Bugs
______________________
                    ===== Normal =====
[#2447] server.Site leaves the reactor unclean (opened by ghazel)
    defect          web        http://twistedmatrix.com/trac/ticket/2447

[#2448] deferToThread w/ trial -u times out on second pass (opened by mwl)
    defect          trial      http://twistedmatrix.com/trac/ticket/2448

[#2449] Misleading doc string (opened by Scramblejams)
    defect          core       http://twistedmatrix.com/trac/ticket/2449

[#2451] Migrate local email from pyramid to cube (opened by moonfallen)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2451

[#2452] Add a timestamp to web2.server.Request for performance tracking (opened by Cyrus Daboo)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2452

[#2453] SSHSessionProcessProtocol does not implement getHost/getPeer. (opened by jrydberg)
    defect          conch      http://twistedmatrix.com/trac/ticket/2453

[#2454] ConnectionRefusedError should include an address and a factory (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2454

[#2455] Assertion error on invalid epydoc @type syntax (opened by jdahlin)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2455

[#2456] moduleMovedForSplit messages refer to old project URLs (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2456

[#2457] failed reactor selection is reported poorly by trial and twistd (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2457

[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2447] server.Site leaves the reactor unclean (opened by ghazel)
    defect          web        http://twistedmatrix.com/trac/ticket/2447

                    ===== Low =====
[#2450] t.t.test_tcp.HalfClose3TestCase.testReadNotificationRaises failed (opened by ghazel) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2450



Closed Bugs
______________________
                    ===== Highest =====
[#2123] t.c.t.test_manhole.ManholeLoopbackStdio.testControlBackslash fails intermittently (opened by dreid, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2123

[#2371] twisted.conch.stdio.runWithProtocol writes to non-blocking file descriptor incorrectly (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2371

                    ===== Normal =====
[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez, closed by dreid, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2447] server.Site leaves the reactor unclean (opened by ghazel, closed by exarkun, )
    defect          web        http://twistedmatrix.com/trac/ticket/2447

[#2378] Comment for t.test.test_process.SignalMixin is egregiously wrong (opened by jml, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2378

                    ===== Low =====
[#2450] t.t.test_tcp.HalfClose3TestCase.testReadNotificationRaises failed (opened by ghazel, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2450





From ralf at brainbot.com  Sun Feb 18 09:14:49 2007
From: ralf at brainbot.com (Ralf Schmitt)
Date: Sun, 18 Feb 2007 17:14:49 +0100
Subject: [Twisted-Python] using py.test with twisted
Message-ID: <45D87B79.4030508@brainbot.com>

Hi,

there's been a discussion about using the nose unittest system together 
with twisted.trial.
I'm attaching a short script which enables the py.test system 
(http://codespeak.net/py/dist/test.html)
to execute unittests which use twisted (it's not compatible with trial, 
instead you have to write your
unittests like you would in py.test.). It uses greenlets in order to 
integrate twisted's mainloop with py.test.
This method might also be applicable with nose (and might be a better 
hack than the threaded_reactor hack).

Tested with a recent twisted trunk and py-0.9.0.Note that the setup and 
teardown methods currently can't return deferreds.

- Ralf



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: py.test.twisted
URL: </pipermail/twisted-python/attachments/20070218/9109359d/attachment.ksh>

From einar.twisted at norsk-esport.no  Mon Feb 19 08:39:54 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Mon, 19 Feb 2007 16:39:54 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
Message-ID: <45D9C4CA.4010608@norsk-esport.no>

Hi,

I am currently using the below technique to return a list of dicts
instead of a tuple of tuples from adbapi. Is there a cleaner way?

def dictQuery(self, query):
   self.execute(query)
   result = self.fetchall()
   columns = [d[0] for d in self._cursor.description]
   return [dict(zip(columns, r)) for r in result]

dbPool = adbapi.ConnectionPool('MySQLdb', db, user, pass, host)
dbPool.runInteraction(dictQuery, "SELECT whatever FROM table"
	).addCallback(callBackFun)

Cheers
Einar



From torriem at chem.byu.edu  Mon Feb 19 18:52:10 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 18:52:10 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
Message-ID: <1171936330.21997.18.camel@enterprise>

I am using python 2.4 on FC6, and Twisted 2.5.0.  I have installed the
latest stable versions from source of Nevow, Webut, and ldaptor
(0.0.43).  I tried to run the ldaptor-webui program, but encountered the
following traceback:

Traceback (most recent call last):
  File "/usr/bin/ldaptor-webui", line 4, in ?
    from ldaptor.apps.webui import main
  File "/usr/lib/python2.4/site-packages/ldaptor/apps/webui/main.py",
line 5, in ?
    from ldaptor.config import LDAPConfig
  File "/usr/lib/python2.4/site-packages/ldaptor/config.py", line 4,
in ?
    from ldaptor import interfaces
  File "/usr/lib/python2.4/site-packages/ldaptor/interfaces.py", line 3,
in ?
    class ILDAPEntry(components.Interface):
AttributeError: 'module' object has no attribute 'Interface'

Apparently this stems from something related to Zope.  The imported
module in question, <module 'twisted.python.components' from
'/usr/lib/python2.4/site-packages/twisted/python/components.pyc'>,
indeed has no attribute Interface.  However it does import "interface",
module <module 'zope.interface.interface' from
'/usr/lib/python2.4/site-packages/zope/interface/interface.pyc'>.  

Is ldaptor-webui in need of updating to run with something new that
either Twisted or Zope changed?  

thanks.

Michael





From jonathansamuel at yahoo.com  Mon Feb 19 18:54:32 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Mon, 19 Feb 2007 17:54:32 -0800 (PST)
Subject: [Twisted-Python] Webcat.py script from the O'Reilly Twisted book
	doesn't work on my system. Why?
In-Reply-To: <mailman.0.1171934970.21686.twisted-python@twistedmatrix.com>
Message-ID: <739837.9153.qm@web32501.mail.mud.yahoo.com>

The following code, from the O'Reilly Twisted book, is
supposed to download and print out the contents of a
URL. When I run it, however, the value of data is
empty.

If I type in a bad URL it gives me an error, as it is
supposed to. If I replace 'print data' with print
"hello world" it prints "hello world." The only thing
that doesn't work is that the value of data is empty. 

I am running Twisted 2.1, Python 2.4.3 and Red Hat 7.3
. What am I doing wrong? Do I need to upgrade to
Twisted 2.5?

#######################################
from twisted.web import client
from twisted.internet import reactor
import sys
def printPage(data):
   print data 
   reactor.stop()

def printError(failure):
   print >> sys.stderr, "Error:",
failure.getErrorMessage()
   reactor.stop()

if len(sys.argv) ==2:
   url = sys.argv[1]
   client.getPage(url).addCallback(
     printPage).addErrback(
     printError)
   reactor.run()
else:
   print "(Usage: webcat.py <URL>"




 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From exarkun at divmod.com  Mon Feb 19 19:14:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Feb 2007 21:14:37 -0500
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <1171936330.21997.18.camel@enterprise>
Message-ID: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>

On Mon, 19 Feb 2007 18:52:10 -0700, Michael Torrie <torriem at chem.byu.edu> wrote:
> [snip]
>
>Is ldaptor-webui in need of updating to run with something new that
>either Twisted or Zope changed?
>

Yep.  twisted.python.components.Interface was deprecated in June of 2004 and removed for the Twisted 2.5 release.  zope.interface.Interface should be used
instead.

Jean-Paul



From torriem at chem.byu.edu  Mon Feb 19 19:34:57 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 19:34:57 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
Message-ID: <1171938897.21997.21.camel@enterprise>

On Mon, 2007-02-19 at 21:14 -0500, Jean-Paul Calderone wrote:
> On Mon, 19 Feb 2007 18:52:10 -0700, Michael Torrie <torriem at chem.byu.edu> wrote:
> > [snip]
> >
> >Is ldaptor-webui in need of updating to run with something new that
> >either Twisted or Zope changed?
> >
> 
> Yep.  twisted.python.components.Interface was deprecated in June of 2004 and removed for the Twisted 2.5 release.  zope.interface.Interface should be used
> instead.

I just discovered that this problem has broken Ldaptor 0.0.43
completely.  If Tommi is on the list, are there any plans to fix it?  In
the meantime I will try to search and replace everything.

Michael

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From torriem at chem.byu.edu  Mon Feb 19 19:48:02 2007
From: torriem at chem.byu.edu (Michael Torrie)
Date: Mon, 19 Feb 2007 19:48:02 -0700
Subject: [Twisted-Python] problem running ldaptor-webui
In-Reply-To: <1171938897.21997.21.camel@enterprise>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
	<1171938897.21997.21.camel@enterprise>
Message-ID: <1171939682.21997.23.camel@enterprise>

On Mon, 2007-02-19 at 19:34 -0700, Michael Torrie wrote:
> 
> I just discovered that this problem has broken Ldaptor 0.0.43
> completely.  If Tommi is on the list, are there any plans to fix it?  In
> the meantime I will try to search and replace everything.

Actually there were just 3 files total in the ldaptor source tree that
needed to be changed to import from zope.interface for Interface.

thanks so much.

> 
> Michael
> 
> > 
> > Jean-Paul
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From itamar at itamarst.org  Mon Feb 19 19:51:36 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Feb 2007 21:51:36 -0500
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45D9C4CA.4010608@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>
Message-ID: <1171939896.5421.82.camel@localhost.localdomain>

On Mon, 2007-02-19 at 16:39 +0100, "Einar S. Idsø" wrote:
> Hi,
> 
> I am currently using the below technique to return a list of dicts
> instead of a tuple of tuples from adbapi. Is there a cleaner way?
> 
> def dictQuery(self, query):
>    self.execute(query)
>    result = self.fetchall()
>    columns = [d[0] for d in self._cursor.description]
>    return [dict(zip(columns, r)) for r in result]

Some database adapters will return objects that act like dictionaries,
or have an extra method that does so. adabpi itself doesn't really
provide any extra infrastructure for doing so since it's intended as a
thin layer wrapping db-api.




From einar.twisted at norsk-esport.no  Tue Feb 20 02:29:41 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Tue, 20 Feb 2007 10:29:41 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <1171939896.5421.82.camel@localhost.localdomain>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
Message-ID: <45DABF85.50408@norsk-esport.no>

Itamar Shtull-Trauring wrote:
> Some database adapters will return objects that act like dictionaries,
> or have an extra method that does so. adabpi itself doesn't really
> provide any extra infrastructure for doing so since it's intended as a
> thin layer wrapping db-api.

So in other words: The technique I am using is okay? Or should I be
using one of the other adapters? If so, would you mind pointing me to
some of my options as I haven't been able to find any simple
alternatives to adbapi?

Thanks,
Einar



From p.mayers at imperial.ac.uk  Tue Feb 20 04:40:17 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 20 Feb 2007 11:40:17 +0000
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DABF85.50408@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no>
Message-ID: <45DADE21.7050608@imperial.ac.uk>

Einar S. Idsø wrote:
> Itamar Shtull-Trauring wrote:
>> Some database adapters will return objects that act like dictionaries,
>> or have an extra method that does so. adabpi itself doesn't really
>> provide any extra infrastructure for doing so since it's intended as a
>> thin layer wrapping db-api.
> 
> So in other words: The technique I am using is okay? Or should I be

yes

> using one of the other adapters? If so, would you mind pointing me to

only if it provides dictfetchall() support

> some of my options as I haven't been able to find any simple
> alternatives to adbapi?

You misunderstand - you have to use adbapi. The choice is which python 
DB-API adapter the adbapi connection will "wrap".

I'm afraid I don't use MySQL so I don't know if any have dict* support.



From ldanielburr at mac.com  Tue Feb 20 05:34:48 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue, 20 Feb 2007 06:34:48 -0600
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DADE21.7050608@imperial.ac.uk>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
Message-ID: <op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Tue, 20 Feb 2007 05:40:17 -0600, Phil Mayers <p.mayers at imperial.ac.uk>  
wrote:

> Einar S. Idsø wrote:
>> Itamar Shtull-Trauring wrote:
>>> Some database adapters will return objects that act like dictionaries,
>>> or have an extra method that does so. adabpi itself doesn't really
>>> provide any extra infrastructure for doing so since it's intended as a
>>> thin layer wrapping db-api.
>>  So in other words: The technique I am using is okay? Or should I be
>
> yes
>
>> using one of the other adapters? If so, would you mind pointing me to
>
> only if it provides dictfetchall() support
>
>> some of my options as I haven't been able to find any simple
>> alternatives to adbapi?
>
> You misunderstand - you have to use adbapi. The choice is which python  
> DB-API adapter the adbapi connection will "wrap".
>
> I'm afraid I don't use MySQL so I don't know if any have dict* support.
>

The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
cursor, and should meet the original poster's needs.

Another solution is to use something like db_row (Google for it).

Hope this helps,

L. Daniel Burr



From einar.twisted at norsk-esport.no  Wed Feb 21 17:12:45 2007
From: einar.twisted at norsk-esport.no (=?UTF-8?B?IkVpbmFyIFMuIElkc8O4Ig==?=)
Date: Thu, 22 Feb 2007 01:12:45 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45DCDFFD.4090500@norsk-esport.no>

Phil: Thank you for your answer. I think I understand now, but the first
 question below will show if I'm right or way off:

L. Daniel Burr wrote:
> The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
> cursor, and should meet the original poster's needs.

I suppose that when I use adbapi.ConnectionPool('MySQLdb',...), I am
already using the MySQLdb adapter? It is straightforward to instruct
MySQLdb to use the DictCursor when programming in straight (i.e.
non-Twisted) environments, but how do I do the same from Twisted, using
t.e.a.ConnectionPool?

Please let a novice Twisted-programmer know if I am completely missing
the mark here, and I will go back to my cave with my original solution.
I'm just trying to understand the intricacies of the Twisted APIs and
lingo/semantics, and doing things right the second time :)

Cheers,
Einar



From lee.a.connell at gmail.com  Wed Feb 21 18:33:54 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Wed, 21 Feb 2007 20:33:54 -0500
Subject: [Twisted-Python] documentation
Message-ID: <c2bc197b0702211733x6c6c4468s6b70a8bc3ffda716@mail.gmail.com>

I am sorry if I sound stupid or you feel I may not be looking hard enough in
the current documentation, however I am looking for documentation on the
transport attribute that is available to the t.i.p.Protocol class.  I don't
see anything about this attribute, so If i hadn't seen code examples I would
not have known it was even available.  Again I apologize if I am missing
something here, can someone shed some light.

Thanks,

-Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070221/adf386d9/attachment.html>

From exarkun at divmod.com  Wed Feb 21 18:54:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Feb 2007 20:54:28 -0500
Subject: [Twisted-Python] documentation
In-Reply-To: <c2bc197b0702211733x6c6c4468s6b70a8bc3ffda716@mail.gmail.com>
Message-ID: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>

On Wed, 21 Feb 2007 20:33:54 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>I am sorry if I sound stupid or you feel I may not be looking hard enough in
>the current documentation, however I am looking for documentation on the
>transport attribute that is available to the t.i.p.Protocol class.  I don't
>see anything about this attribute, so If i hadn't seen code examples I would
>not have known it was even available.  Again I apologize if I am missing
>something here, can someone shed some light.
>

You're looking for ITransport documentation, probably.  ITransport is the
interface which defines the behavior of the transport attribute of Protocol
instances.  You can find it here:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html

It is probably true that much of the documentation assumes that you already know
that a protocol's transport attribute is one of these, so it uses it without
explaining it.

Jean-Paul



From lee.a.connell at gmail.com  Wed Feb 21 19:01:36 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Wed, 21 Feb 2007 21:01:36 -0500
Subject: [Twisted-Python] documentation
In-Reply-To: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
References: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
Message-ID: <45DCF980.7030403@gmail.com>

Jean-Paul,

My only concern is I wouldn't even know that transport was available
within the Protocol class at all without the help of the demos.

Thanks for the link.

-Lee

Jean-Paul Calderone wrote:
> On Wed, 21 Feb 2007 20:33:54 -0500, Lee Connell
> <lee.a.connell at gmail.com> wrote:
>> I am sorry if I sound stupid or you feel I may not be looking hard
>> enough in
>> the current documentation, however I am looking for documentation on the
>> transport attribute that is available to the t.i.p.Protocol class.  I
>> don't
>> see anything about this attribute, so If i hadn't seen code examples
>> I would
>> not have known it was even available.  Again I apologize if I am missing
>> something here, can someone shed some light.
>>
>
> You're looking for ITransport documentation, probably.  ITransport is the
> interface which defines the behavior of the transport attribute of
> Protocol
> instances.  You can find it here:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html
>
>
> It is probably true that much of the documentation assumes that you
> already know
> that a protocol's transport attribute is one of these, so it uses it
> without
> explaining it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From manlio_perillo at libero.it  Thu Feb 22 06:21:18 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Feb 2007 14:21:18 +0100
Subject: [Twisted-Python] Debian package problems
Message-ID: <45DD98CE.5060309@libero.it>

Hi.

I have noted that the python-twisted package depends on 
python-twisted-words.

Is this really true?

For me this is a problem.
Today I have updated a Debian Etch server and an upgrade for 
python-twisted-words requires the installation of GTK and X11!


Thanks  Manlio Perillo



From exarkun at divmod.com  Thu Feb 22 06:48:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 22 Feb 2007 08:48:17 -0500
Subject: [Twisted-Python] Debian package problems
In-Reply-To: <45DD98CE.5060309@libero.it>
Message-ID: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>

On Thu, 22 Feb 2007 14:21:18 +0100, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Hi.
>
>I have noted that the python-twisted package depends on python-twisted- 
>words.
>
>Is this really true?
>
>For me this is a problem.
>Today I have updated a Debian Etch server and an upgrade for python-twisted- 
>words requires the installation of GTK and X11!
>

python-twisted is a meta package which simply depends on all parts of Twisted. 
If you don't want all parts of Twisted, you might want one of the other
packages.

As a separate issue, Twisted Words doesn't completely depend on GTK and X11,
only parts of it do.  You might suggest to the Debian maintainer that the
dependencies for python-twisted-words are incorrect.

Jean-Paul



From manlio_perillo at libero.it  Thu Feb 22 07:32:16 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Feb 2007 15:32:16 +0100
Subject: [Twisted-Python] Debian package problems
In-Reply-To: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>
References: <20070222134817.25807.361401949.divmod.quotient.29612@ohm>
Message-ID: <45DDA970.8050203@libero.it>

Jean-Paul Calderone ha scritto:
> On Thu, 22 Feb 2007 14:21:18 +0100, Manlio Perillo 
> <manlio_perillo at libero.it> wrote:
>> Hi.
>>
>> I have noted that the python-twisted package depends on 
>> python-twisted- words.
>>
>> Is this really true?
>>
>> For me this is a problem.
>> Today I have updated a Debian Etch server and an upgrade for 
>> python-twisted- words requires the installation of GTK and X11!
>>
> 
> python-twisted is a meta package which simply depends on all parts of 
> Twisted. If you don't want all parts of Twisted, you might want one of 
> the other
> packages.
> 

Ok, thanks.

> As a separate issue, Twisted Words doesn't completely depend on GTK and 
> X11,
> only parts of it do.  You might suggest to the Debian maintainer that the
> dependencies for python-twisted-words are incorrect.
> 

The maintainer has added the dependence for python-gtk-1.2 and 
python-glade-1.2 in the new version (0.4.0-2.1).

python-gtk-1.2, then, wants other packages, including x11-common.


For now I have solved downgrading the python-twisted-words to the 
previous version, holding it.




Regards  Manlio Perillo



From ldanielburr at mac.com  Sat Feb 24 10:48:46 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sat, 24 Feb 2007 11:48:46 -0600
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <45DCDFFD.4090500@norsk-esport.no>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<45DCDFFD.4090500@norsk-esport.no>
Message-ID: <op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Wed, 21 Feb 2007 18:12:45 -0600, Einar S. Idsø  
<einar.twisted at norsk-esport.no> wrote:

> Phil: Thank you for your answer. I think I understand now, but the first
>  question below will show if I'm right or way off:
>
> L. Daniel Burr wrote:
>> The MySQLdb adapter has a DictCursor, which subclasses the usual dbapi
>> cursor, and should meet the original poster's needs.
>
> I suppose that when I use adbapi.ConnectionPool('MySQLdb',...), I am
> already using the MySQLdb adapter? It is straightforward to instruct
> MySQLdb to use the DictCursor when programming in straight (i.e.
> non-Twisted) environments, but how do I do the same from Twisted, using
> t.e.a.ConnectionPool?
>

This is very easy to do, because adbapi.ConnectionPool will pass on
connection-specific parameters to the underlying DBAPI module.

Example (untested):

import MySQLdb
import twisted.enterprise.adbapi as db
import twisted.python.log as log


def onResultSet(resultSet):
     for row in resultSet:
         # Do stuff


pool = db.ConnectionPool(
     MySQLdb,
     host="my.host.com",
     port=1234,
     cursorclass=MySQLdb.cursors.DictCursor
)

d = pool.runQuery('SELECT * FROM SomeTable')
d.addErrback(log.err)
d.addCallback(onResultSet)


> Please let a novice Twisted-programmer know if I am completely missing
> the mark here, and I will go back to my cave with my original solution.
> I'm just trying to understand the intricacies of the Twisted APIs and
> lingo/semantics, and doing things right the second time :)
>

The key thing to understand in this case is that adbapi is just a simple
wrapper around a given DBAPI module, so if you know how to configure
MySQLdb, then configuring adbapi.ConnectionPool is very similar.  Just
pass the same keyword args to ConnectionPool, that you would pass to
MySQLdb, and you're good to go.

> Cheers,
> Einar
>

Hope this helps,

L. Daniel Burr



From einar.twisted at norsk-esport.no  Sat Feb 24 17:27:12 2007
From: einar.twisted at norsk-esport.no (=?UTF-8?B?IkVpbmFyIFMuIElkc8O4Ig==?=)
Date: Sun, 25 Feb 2007 01:27:12 +0100
Subject: [Twisted-Python] How to properly return a dict from adbapi
In-Reply-To: <op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45D9C4CA.4010608@norsk-esport.no>
	<1171939896.5421.82.camel@localhost.localdomain>
	<45DABF85.50408@norsk-esport.no> <45DADE21.7050608@imperial.ac.uk>
	<op.tn1rwaim3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<45DCDFFD.4090500@norsk-esport.no>
	<op.tn9k3kor3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45E0D7E0.4040203@norsk-esport.no>

L. Daniel Burr wrote:
> This is very easy to do, because adbapi.ConnectionPool will pass on
> connection-specific parameters to the underlying DBAPI module.
> 
> Example (untested):
>  (...)
> pool = db.ConnectionPool(
>     MySQLdb,
>     host="my.host.com",
>     port=1234,
>     cursorclass=MySQLdb.cursors.DictCursor
> )

Wow, thank you! Now /there/ is the proper way of returning a dict :) I
just can't believe it was that easy...

> The key thing to understand in this case is that adbapi is just a simple
> wrapper around a given DBAPI module, so if you know how to configure
> MySQLdb, then configuring adbapi.ConnectionPool is very similar.  Just
> pass the same keyword args to ConnectionPool, that you would pass to
> MySQLdb, and you're good to go.
> 
> 
> Hope this helps,
> 
> L. Daniel Burr

It was just the help I needed: An example to solve my problem, and a
much-needed explanation of adbapi. Perfect!

Thank you so much,
Einar



From exarkun at twistedmatrix.com  Sat Feb 24 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Feb 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1172379901.4.456141430@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-18 through 2007-02-25
Bugs opened: 25    Bugs closed: 8  Total open bugs: 853 (+17)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +2          |Core:     +10          
|Enhancement: +15  |High:     +3          |Pydoctor:  +1          
                   |Normal:  +12          |Trial:     +2          
                   |Low:      +3          |Web2:      +3          
                                          |Website:   +1          
                                          |Words:     +3          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2460] HTTPAuthResource doesn't provide any way to support anonymous access. (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2460

[#2476] local variable 'cbl' referenced before assignment (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2476

[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1901

[#1351] log observer bridging to python logging facility (opened by ctheune)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

                    ===== High =====
[#2478] Erroneously written resumeProducing and pauseProducing methods in WSGIHandler (opened by dialtone)
    defect          web2       http://twistedmatrix.com/trac/ticket/2478

[#2042] twisted.web2.auth.wrapper's interface is backwards (opened by glyph)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2042

                    ===== Normal =====
[#2458] improve twisted.words.im.basechat docstrings (opened by exarkun)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2458

[#2459] Put Twisted developer targetted documentation back on the website (opened by exarkun)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2459

[#2461] words.protocols.jabber.sasl uses base64.b64encode, which breaks compatibility with Python 2.3.x (opened by murphy_slaw)
    defect          words      http://twistedmatrix.com/trac/ticket/2461

[#2462] write tests for serial port code (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2462

[#2464] manhole breaks on gtk.keysyms AttributeError (opened by gyst)
    defect          core       http://twistedmatrix.com/trac/ticket/2464

[#2465] epydoc keyword field support (opened by jdahlin)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2465

[#2466] Failures use a lot of memory (opened by njal)
    defect          core       http://twistedmatrix.com/trac/ticket/2466

[#2468] Add option to suppress private api (opened by jdahlin)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2468

[#2470] verbose mode for twistd and trial (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2470

[#2471] Doctest optionflag support (opened by jdahlin)
    defect          trial      http://twistedmatrix.com/trac/ticket/2471

[#2472] improve twistd help (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2472

[#2473] make twistd more usable (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2473

[#2474] Document deferredGenerator/inlineCallbacks in Deferred howto (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2474

[#2475] Document python logging integration in log howto (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2475

[#2477] xml serialize optimizations (opened by jack)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2477

[#2479] Hanging detector... suggested to be made into a utility (opened by Rotund) (CLOSED, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2479

                    ===== Low =====
[#2463] add tests for logging of unhandled deferred errors (opened by antoine)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2463

[#2467] twisted.web2.client.http.testConn is a pretty bad example and doesn't work in the default configuration (opened by tv)
    defect          web2       http://twistedmatrix.com/trac/ticket/2467

[#2469] Use cProfile for twistd profiling on 2.5 (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2469



Closed Bugs
______________________
                    ===== Highest =====
[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun, closed by therve, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1901

[#1906] twisted.web2 tests don't work in cleantests-1883 (opened by jml, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1906

[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

[#1351] log observer bridging to python logging facility (opened by ctheune, closed by therve, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

                    ===== Normal =====
[#2041] web2.auth.wrapper.HTTPAuthResource mis-handles URL path (opened by rfmohr at osc.edu, closed by rfmohr at osc.edu, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2041

[#2475] Document python logging integration in log howto (opened by itamarst, closed by itamarst, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2475

[#2455] Assertion error on invalid epydoc @type syntax (opened by jdahlin, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2455

[#2479] Hanging detector... suggested to be made into a utility (opened by Rotund, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2479





From redbaron at hitv.ru  Sun Feb 25 01:31:52 2007
From: redbaron at hitv.ru (Ivanov Maxim)
Date: Sun, 25 Feb 2007 11:31:52 +0300
Subject: [Twisted-Python] Plugins as event subscribers?
Message-ID: <200702251131.52177.redbaron@hitv.ru>

Hi! I'm starting my first Twisted project. It will consist of some sort of 
daemon which will communicate with one game server via UDP protocol and as 
result of this communication it will fireup some events. All needed 
functional will provided via plugins. Each plugin will register handler  on 
each event during init process. Each handler will use some sort of core API 
to communicate with game server (for example to send message to player). 

Twisted provided enough good usefull options:
- Easy low level UDP programming
- Easy support of plugins

But how about easy providing high level API to plugins? How about non twisted 
events engine? Should I write theese things from scratch, or I should read 
documentation more deeper and find some sort of framework to write such 
things?

I don't have much Python expirience, that's why I ask this questions.  I've 
some expirience with Zope and TurboGears web frameworks, they are also Python 
based, but I suppose this expirience will be useless with Twisted.



From Sven-Erik.Tiberg at ltu.se  Sun Feb 25 12:52:47 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Sun, 25 Feb 2007 20:52:47 +0100
Subject: [Twisted-Python] send_UDP? 
References: <20070222015428.25807.1461896500.divmod.quotient.29239@ohm>
	<45DCF980.7030403@gmail.com>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB9104E84B2D@EMMA.personal.adp.ltu.se>

Hi.
 
Just need a small tip, how to send a string by UDP, should I use socket from python or can I use any twisted class.
 
BTW:
 
Put together a rough code for reciving a string of data from simulink ( matlab ) to a H3D ( Haptic Interactive X3D ) application www.h3d.org
 
#import H3D fields and types
from H3DInterface import *
 
recived_vect = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
 
class Set_Position( AutoUpdate( SFVec3f ) ):
 def update( self,event ):
  set_pos[1] = recived_vect[2]
  set_pos[2] = recived_vect[3]
  set_pos[3] = recived_vect[4]
  return set_pos
 
set_a_position=Set_position()
 
class Speedo_value( AutoUpdate( SFVec3f ) ):
 def update( self,event ):
  set_rot[1] = 0.0
  set_rot[2] = 0.0
  set_rot[3] = recived_vect[1]
  return set_rot
 
set_speedo=Speedo_value()
 
from twisted.internet.protocol import DatagramProtocol
from twisted.internet import reactor
 
class Recive_UDP_Package(DatagramProtocol):
 def datagramRecived(self, data):
  recived_vect=data # need to work on this to convert the data string to list element
  set_a_position()
  set_speedo()
 
reactor.listenUDP(7999, Recived_UDP_Package())
reactor.run()
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 4471 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070225/19bb7446/attachment-0002.bin>

From exarkun at divmod.com  Sun Feb 25 13:08:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Feb 2007 15:08:58 -0500
Subject: [Twisted-Python] send_UDP? 
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB9104E84B2D@EMMA.personal.adp.ltu.se>
Message-ID: <20070225200858.25807.1788356898.divmod.quotient.31995@ohm>

On Sun, 25 Feb 2007 20:52:47 +0100, Sven-Erik Tiberg <sven-erik.tiberg at ltu.se> wrote:
>Hi.
>
>Just need a small tip, how to send a string by UDP, should I use socket from python or can I use any twisted class.
>
>BTW:
>
>Put together a rough code for reciving a string of data from simulink ( matlab ) to a H3D ( Haptic Interactive X3D ) application www.h3d.org
>
> [snip]
>
>from twisted.internet.protocol import DatagramProtocol
>from twisted.internet import reactor
>
>class Recive_UDP_Package(DatagramProtocol):
> def datagramRecived(self, data):
>  recived_vect=data # need to work on this to convert the data string to list element
>  set_a_position()
>  set_speedo()
>
>reactor.listenUDP(7999, Recived_UDP_Package())

After this port is set up, the Recived_UDP_Package instance will have a
'transport' attribute which you can use to send UDP packets.  For details,
see:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IUDPTransport.html

Jean-Paul



From lee.a.connell at gmail.com  Sun Feb 25 16:26:33 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sun, 25 Feb 2007 18:26:33 -0500
Subject: [Twisted-Python] LineReceiver
Message-ID: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>

Hello all,

I am building a basic chat program.  I am using LineReceiver for the
protocol on both the server and the client.  My problem is when i loop
through all the clients in my ServerFactory and choose to send data to the
client with multiple calls to transport.write(data), the client side does
not pick it up in two seperate calls, instead it is received in one
lineReceive. In the server I call transport.write() twice, the client
however receives both calls in one lineReceive instead of two lineRecieve
calls, how can I get lineReceive to be fired for each transported message?

//// CLIENT LINE RECEIVE ////

    def lineReceived(self, line):
        if self.app:
            self.app.addMessage(line)

//// SERVER CONNECTION MADE ////

    def connectionMade(self):
        self.factory.clients.append(self)
        host = self.transport.getPeer().host + ": joined the server."

        for c in self.factory.clients:
            c.transport.write(host + '\n')
            if self == c:
                c.transport.write(self.getMOTD())   ### getMOTD just returns
some string ###
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070225/b211bbc3/attachment.html>

From exarkun at divmod.com  Sun Feb 25 16:45:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Feb 2007 18:45:35 -0500
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
Message-ID: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>

On Sun, 25 Feb 2007 18:26:33 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hello all,
>
>I am building a basic chat program.  I am using LineReceiver for the
>protocol on both the server and the client.  My problem is when i loop
>through all the clients in my ServerFactory and choose to send data to the
>client with multiple calls to transport.write(data), the client side does
>not pick it up in two seperate calls, instead it is received in one
>lineReceive. In the server I call transport.write() twice, the client
>however receives both calls in one lineReceive instead of two lineRecieve
>calls, how can I get lineReceive to be fired for each transported message?

The purpose of LineReceiver is to take a stream of bytes which no guarantees
about how many bytes will be received at a time and make it appear as a line
stream where each complete line is delivered separately.

Since you are using LineReceiver, rather than calling self.transport.write,
you should probably be using self.sendLine, which will insert the delimiter
bytes for you.  You must also be careful not to include the delimiter bytes
in the strings you pass to self.sendLine.

>
>//// CLIENT LINE RECEIVE ////
>
>    def lineReceived(self, line):
>        if self.app:
>            self.app.addMessage(line)
>
>//// SERVER CONNECTION MADE ////
>
>    def connectionMade(self):
>        self.factory.clients.append(self)
>        host = self.transport.getPeer().host + ": joined the server."
>
>        for c in self.factory.clients:
>            c.transport.write(host + '\n')

So, consider doing this instead:

      c.sendLine(host)

>            if self == c:
>                c.transport.write(self.getMOTD())   ### getMOTD just returns
>some string ###

As well as:

      c.sendLine(self.getMOTD())

Also note that the default LineReceiver line delimiter is \r\n, not \n.

Jean-Paul



From einar.twisted at norsk-esport.no  Mon Feb 26 03:57:18 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Mon, 26 Feb 2007 11:57:18 +0100
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>
References: <20070225234535.25807.1196083361.divmod.quotient.32028@ohm>
Message-ID: <45E2BD0E.4070101@norsk-esport.no>

Jean-Paul Calderone wrote:
> Also note that the default LineReceiver line delimiter is \r\n, not \n.

Lee,
If for some reason you need to transmit messages which include \r\n or
\n, then you can easily change the delimiter in your protocol to e.g.
"\x04" (EOT, End Of Transmission).

from twisted.protocols import basic
class MyLineReceiverProtocol(basic.LineReceiver):
    delimiter = "\x04"

Remember to perform this modification both clientside and serverside.

More info:
http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html

There's also LineOnlyReceiver: "A protocol that receives only lines.
This is purely a speed optimisation over LineReceiver, for the cases
that raw mode is known to be unnecessary."
http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineOnlyReceiver.html

Cheers,
Einar



From jarrod at vertigrated.com  Mon Feb 26 08:49:54 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Mon, 26 Feb 2007 10:49:54 -0500
Subject: [Twisted-Python] LineReceiver
In-Reply-To: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
References: <c2bc197b0702251526w30f66d20nbd8a35652bd22c5@mail.gmail.com>
Message-ID: <fa3d0c740702260749n5f79c6e7jfc726ee5cfd57041@mail.gmail.com>

On 2/25/07, Lee Connell <lee.a.connell at gmail.com> wrote:
>
> Hello all,
>
>
>         for c in self.factory.clients:
>             c.transport.write(host + '\n')
>             if self == c:
>                 c.transport.write(self.getMOTD())   ### getMOTD just
> returns some string ###



the default line separator is "\r\n" you are just sending "\n"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070226/4d2bfd65/attachment.html>

From alvinwang at gmail.com  Mon Feb 26 16:17:54 2007
From: alvinwang at gmail.com (Alvin Wang)
Date: Mon, 26 Feb 2007 15:17:54 -0800
Subject: [Twisted-Python] using py2exe or pyinstaller on twistd
Message-ID: <77d044440702261517q43973f3bi57dec3557c773855@mail.gmail.com>

I mentioned at Pycon that I wanted to use Py2exe to distribute my tac.  How
would it be done?  The alternate method I had been using was not using a tac
file but that was not recommended.

Thanks
Alvin Wang

PS
It was great meeting some of the Twisted folk at Pycon.  Highly
recommended!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070226/528d8d2b/attachment.html>

From pmarks at purdue.edu  Tue Feb 27 12:12:23 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 14:12:23 -0500
Subject: [Twisted-Python] twisted-names: Cryptic error with no traceback?
Message-ID: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>

Some users of a program that I'm writing have been reporting this
error that I so far have been unable to track down.  It seems that it
originates from Twisted, but that it skips around my errback handler,
and provides no traceback information:

      Traceback (most recent call last):
      Failure: twisted.names.error.DNSQueryTimeoutError:


My query is made from line 121 here:
http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup

Does anyone have any insight as to where this error could be coming
from, and why it isn't getting trapped by my errback function?  I
don't know yet whether this is a problem in Twisted, or if I'm doing
something incorrect in my err_cb.



From pmarks at purdue.edu  Tue Feb 27 13:18:26 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 15:18:26 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no traceback?
In-Reply-To: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>
References: <8e5b27790702271112k3fdf7141tdcf9bbfccfd02733@mail.gmail.com>
Message-ID: <8e5b27790702271218r72d25f2dp8f88410e32a015cd@mail.gmail.com>

On 2/27/07, Paul Marks <pmarks at purdue.edu> wrote:
> Some users of a program that I'm writing have been reporting this
> error that I so far have been unable to track down.  It seems that it
> originates from Twisted, but that it skips around my errback handler,
> and provides no traceback information:
>
>       Traceback (most recent call last):
>       Failure: twisted.names.error.DNSQueryTimeoutError:
>
>
> My query is made from line 121 here:
> http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup
>
> Does anyone have any insight as to where this error could be coming
> from, and why it isn't getting trapped by my errback function?  I
> don't know yet whether this is a problem in Twisted, or if I'm doing
> something incorrect in my err_cb.
>

Update:
Yay, I finally found the bug!  Turns out it's a problem in Twisted.

Inside DNSDatagramProtocol.writeMessage, it writes to the UDP socket,
and never checks for socket.error.

If a socket.error does occur, then the query() function blows up
instead of returning its deferred.  So, cancelCall gets forgotten.  A
few seconds later, it chucks a DNSQueryTimeoutError, and the deferred
gets garbage collected without anything handling it.

The solution, I think, is this:
- in query(), move the "self.writeMessage(m, address)" call up a few
lines, to before the Deferred and callLater are created.
- Trap socket.error when making this writeMessage call.  If it catches
one, return a defer.fail() immediately.

Basically, if the UDP packet fails to be sent, then the timeout should
never be created.



From exarkun at divmod.com  Tue Feb 27 18:07:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Feb 2007 20:07:17 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <8e5b27790702271218r72d25f2dp8f88410e32a015cd@mail.gmail.com>
Message-ID: <20070228010717.17852.300366468.divmod.quotient.598@ohm>

On Tue, 27 Feb 2007 15:18:26 -0500, Paul Marks <pmarks at purdue.edu> wrote:
>On 2/27/07, Paul Marks <pmarks at purdue.edu> wrote:
>>Some users of a program that I'm writing have been reporting this
>>error that I so far have been unable to track down.  It seems that it
>>originates from Twisted, but that it skips around my errback handler,
>>and provides no traceback information:
>>
>>       Traceback (most recent call last):
>>       Failure: twisted.names.error.DNSQueryTimeoutError:
>>
>>
>>My query is made from line 121 here:
>>http://dtella.svn.sourceforge.net/viewvc/dtella/tags/1.0.2/dtella_dnslookup.py?revision=406&view=markup
>>
>>Does anyone have any insight as to where this error could be coming
>>from, and why it isn't getting trapped by my errback function?  I
>>don't know yet whether this is a problem in Twisted, or if I'm doing
>>something incorrect in my err_cb.
>
>Update:
>Yay, I finally found the bug!  Turns out it's a problem in Twisted.
>
>Inside DNSDatagramProtocol.writeMessage, it writes to the UDP socket,
>and never checks for socket.error.
>
>If a socket.error does occur, then the query() function blows up
>instead of returning its deferred.  So, cancelCall gets forgotten.  A
>few seconds later, it chucks a DNSQueryTimeoutError, and the deferred
>gets garbage collected without anything handling it.

What socket.error are you seeing?

Jean-Paul



From exarkun at divmod.com  Tue Feb 27 18:31:36 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Feb 2007 20:31:36 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <20070228010717.17852.300366468.divmod.quotient.598@ohm>
Message-ID: <20070228013136.17852.366140032.divmod.quotient.611@ohm>

On Tue, 27 Feb 2007 20:07:17 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>
>What socket.error are you seeing?
>

Ahh, I see you filed a ticket which includes the traceback.

Jean-Paul



From pmarks at purdue.edu  Tue Feb 27 20:25:11 2007
From: pmarks at purdue.edu (Paul Marks)
Date: Tue, 27 Feb 2007 22:25:11 -0500
Subject: [Twisted-Python] Re: twisted-names: Cryptic error with no
	traceback?
In-Reply-To: <20070228013136.17852.366140032.divmod.quotient.611@ohm>
References: <20070228010717.17852.300366468.divmod.quotient.598@ohm>
	<20070228013136.17852.366140032.divmod.quotient.611@ohm>
Message-ID: <8e5b27790702271925g479e4137h13ce04cdbe771bd9@mail.gmail.com>

On 2/27/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 27 Feb 2007 20:07:17 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > [snip]
> >
> >What socket.error are you seeing?
> >
>
> Ahh, I see you filed a ticket which includes the traceback.
>
> Jean-Paul

Actually, I was having 2 separate issues; one was the non-handling of
the socket.error, which was obvious after seeing the traceback.  The
other was the mysterious DNSQueryTimeoutError that I started this
thread about.  I filed that ticket before I realized that one was
actually causing the other, but it all seems to make sense now.



From allison at shasta.stanford.edu  Tue Feb 27 21:20:13 2007
From: allison at shasta.stanford.edu (Dennis Allison)
Date: Tue, 27 Feb 2007 20:20:13 -0800 (PST)
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
Message-ID: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>


I have written a highly simplified twisted web server using twisted
extending one of the demos, but I have one small problem.

I cannot see out how to arrange to have the server listen one particluar
address:port combination.  The system I want to use it on has a pair of
NICs and I need the server to listen on one NIC and not the other due to
port conflicts.

Any help would be appreciated.






From glyph at divmod.com  Tue Feb 27 22:30:46 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Feb 2007 00:30:46 -0500
Subject: [Twisted-Python] using py2exe or pyinstaller on twistd
In-Reply-To: <77d044440702261517q43973f3bi57dec3557c773855@mail.gmail.com>
Message-ID: <20070228053046.17852.13430118.divmod.quotient.702@ohm>

On Mon, 26 Feb 2007 15:17:54 -0800, Alvin Wang <alvinwang at gmail.com> wrote:
>I mentioned at Pycon that I wanted to use Py2exe to distribute my tac.  How
>would it be done?  The alternate method I had been using was not using a tac
>file but that was not recommended.

Not using a tac seems fairly reasonable to me.  If you want to use py2exe, you've probably got a deployment environment where twistd would not make much sense.

You might want to write a Twisted plugin and invoke that from your non-tac python mainpoint; that way it would also be usable from twistd.

>Thanks
>Alvin Wang
>
>PS
>It was great meeting some of the Twisted folk at Pycon.  Highly
>recommended!!

Yeah!



From jml at mumak.net  Wed Feb 28 01:43:39 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 28 Feb 2007 19:43:39 +1100
Subject: [Twisted-Python] Making a duck-typed traceback from a Failure
Message-ID: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>

Hello,

I've recently been doing work with Twisted tests from within the Zope
testrunner. It's a real pain because if the tests or their callbacks
raise exceptions, no traceback gets given to the result object. See
#2495.

The fix I've uploaded doesn't actually help me. By the time the result
object gets the failures, they've been cleaned with cleanFailure --
Failure.tb is None and everything is a string.

Is it possible to make a duck-typed traceback from a cleaned Failure?
I haven't really looked into it, but I can't think of why not off the
top of my head. Granted I ran out of thought gluons a couple of hours
ago.

cheers,
jml



From itamar at itamarst.org  Wed Feb 28 06:52:57 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Feb 2007 08:52:57 -0500
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
In-Reply-To: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>
References: <Pine.LNX.4.44.0702272019250.23564-100000@shasta.stanford.edu>
Message-ID: <1172670777.27212.12.camel@localhost.localdomain>

On Tue, 2007-02-27 at 20:20 -0800, Dennis Allison wrote:
> I have written a highly simplified twisted web server using twisted
> extending one of the demos, but I have one small problem.

I assume there was good reason for not using twisted.web? or even web2?

> I cannot see out how to arrange to have the server listen one particluar
> address:port combination.  The system I want to use it on has a pair of
> NICs and I need the server to listen on one NIC and not the other due to
> port conflicts.

listenTCP(80, factory, interface="127.0.0.1")




From allison at shasta.stanford.edu  Wed Feb 28 07:00:28 2007
From: allison at shasta.stanford.edu (Dennis Allison)
Date: Wed, 28 Feb 2007 06:00:28 -0800 (PST)
Subject: [Twisted-Python] specifying the site and port to a twisted web
	server
In-Reply-To: <1172670777.27212.12.camel@localhost.localdomain>
Message-ID: <Pine.LNX.4.44.0702280554560.23564-100000@shasta.stanford.edu>

Thank you.  My server is a twisted.web server. For some reason, I missed
the "interface" parameter when I was reading the code the first couple of
times--I finally figured it out late last night.  For a system as rich as
twisted, the documentation is sparse.

On Wed, 28 Feb 2007, Itamar Shtull-Trauring wrote:

> On Tue, 2007-02-27 at 20:20 -0800, Dennis Allison wrote:
> > I have written a highly simplified twisted web server using twisted
> > extending one of the demos, but I have one small problem.
> 
> I assume there was good reason for not using twisted.web? or even web2?
> 
> > I cannot see out how to arrange to have the server listen one particluar
> > address:port combination.  The system I want to use it on has a pair of
> > NICs and I need the server to listen on one NIC and not the other due to
> > port conflicts.
> 
> listenTCP(80, factory, interface="127.0.0.1")
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 




From jml at mumak.net  Wed Feb 28 17:16:17 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Mar 2007 11:16:17 +1100
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>
References: <d06a5cd30702280043w688bebd7jd00ca896cc6f4fa2@mail.gmail.com>
Message-ID: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>

On 2/28/07, Jonathan Lange <jml at mumak.net> wrote:
> Is it possible to make a duck-typed traceback from a cleaned Failure?
> I haven't really looked into it, but I can't think of why not off the
> top of my head. Granted I ran out of thought gluons a couple of hours
> ago.
>

<exarkun> jml: if you refine the question with some details (why isn't
there a real traceback, what do you want to do with the reconstructed
traceback, etc), I might be able to produce some useful feedback

1. Why isn't there a real traceback

The failure is caught in an errback in Trial's run().
Deferred._runCallbacks calls Failure.cleanFailure on any failures that
are returned from Deferreds. By the time the TestResult object gets
the failure, cleanFailure() has been run on it.

cleanFailure() sets Failure.tb to None, and converts all of the frames
into strings. This ensures that we don't keep references to a billion
different objects every time there is a failure.


2. What do I want to do with it

I want to pass the duck-typed traceback along with the exception type
and exception value to traceback.format_exception.


cheers,
jml



From exarkun at divmod.com  Wed Feb 28 18:50:16 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Feb 2007 20:50:16 -0500
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>
Message-ID: <20070301015016.17852.1513181203.divmod.quotient.1157@ohm>

On Thu, 1 Mar 2007 11:16:17 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 2/28/07, Jonathan Lange <jml at mumak.net> wrote:
>>Is it possible to make a duck-typed traceback from a cleaned Failure?
>>I haven't really looked into it, but I can't think of why not off the
>>top of my head. Granted I ran out of thought gluons a couple of hours
>>ago.
>
><exarkun> jml: if you refine the question with some details (why isn't
>there a real traceback, what do you want to do with the reconstructed
>traceback, etc), I might be able to produce some useful feedback
>
>1. Why isn't there a real traceback
>
>The failure is caught in an errback in Trial's run().
>Deferred._runCallbacks calls Failure.cleanFailure on any failures that
>are returned from Deferreds. By the time the TestResult object gets
>the failure, cleanFailure() has been run on it.
>
>cleanFailure() sets Failure.tb to None, and converts all of the frames
>into strings. This ensures that we don't keep references to a billion
>different objects every time there is a failure.
>

To clarify slightly (this may be what you meant), _runCallbacks only calls
cleanFailure on Failures which run into the end of the callback chain.  So
any Failure which is returned by a callback while there is an errback left
to be processed will not have cleanFailure called on it.

>
>2. What do I want to do with it
>
>I want to pass the duck-typed traceback along with the exception type
>and exception value to traceback.format_exception.
>

Is it particularly important that the exception be formatted using that
particular function?  Failure.printTraceback() exists to deal with the
fact that Failure doesn't play nicely with the traceback module.

If you absolutely must go through format_exception, then I guess you can
create an object which is traceback-like enough for the traceback module.
It probably wouldn't even be /that/ tedious.  I don't have any particular
suggestions for doing this.  Traceback objects have some attributes, I
think you'll just need to make a class and give it some attributes (and
another for frames).

Jean-Paul



From jml at mumak.net  Wed Feb 28 19:03:23 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Mar 2007 13:03:23 +1100
Subject: [Twisted-Python] Re: Making a duck-typed traceback from a Failure
In-Reply-To: <20070301015016.17852.1513181203.divmod.quotient.1157@ohm>
References: <d06a5cd30702281616v384882b0n93d938b99a25f8b5@mail.gmail.com>
	<20070301015016.17852.1513181203.divmod.quotient.1157@ohm>
Message-ID: <d06a5cd30702281803x62f0d0d6g3035f82d34dc725@mail.gmail.com>

On 3/1/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 1 Mar 2007 11:16:17 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >2. What do I want to do with it
> >
> >I want to pass the duck-typed traceback along with the exception type
> >and exception value to traceback.format_exception.
> >
>
> Is it particularly important that the exception be formatted using that
> particular function?  Failure.printTraceback() exists to deal with the
> fact that Failure doesn't play nicely with the traceback module.
>

It is important. unittest in the standard library and the Zope
testrunner both use format_exception to display errors.

> If you absolutely must go through format_exception, then I guess you can
> create an object which is traceback-like enough for the traceback module.
> It probably wouldn't even be /that/ tedious.  I don't have any particular
> suggestions for doing this.  Traceback objects have some attributes, I
> think you'll just need to make a class and give it some attributes (and
> another for frames).
>

I'll do this then.

Thanks,
jml



