From glyph at twistedmatrix.com  Wed Dec 31 18:20:09 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 31 Dec 2003 17:20:09 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] log stderr and non-zero exit code in CGIs, don't show info to users as it is a security risk (closes issue #241)
In-Reply-To: <20030828212642.7529d345.itamar@itamarst.org>
Message-ID: <E09A3B60-3BE7-11D8-8F96-000393C9700E@twistedmatrix.com>

Well, thanks to the few users who responded to me privately.  The 
feeling seems to be unanimously in favor of leaving the output on by 
default: however, there is also widespread agreement that we need a 
better error-reporting mechanism in general so that we can look at 
these sorts of things in a persistent manner without grepping through 
logfiles all the time.

On Thursday, August 28, 2003, at 08:26 PM, Itamar Shtull-Trauring wrote:

> Only revert the removed HTML output - it should be logged to the log
> file regardless.

Will do.




From flxkid at techemail.com  Mon Dec  1 00:45:01 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Sun, 30 Nov 2003 21:45:01 -0800 (PST)
Subject: [Twisted-Python] Re: using twisted web server as a type of REST server
Message-ID: <20031201054501.39CB7393B@sitemail.everyone.net>

An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031130/fa25716f/attachment.txt 

From nkrontir at hotmail.com  Mon Dec  1 04:25:13 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Mon, 1 Dec 2003 11:25:13 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
Message-ID: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>

Hi there.
I am writing a file transfer program using twisted as my framework. 
I have been having some problems as far as memory usage is concerned (i.e. both client and server just eat through available memory without ever releasing it back to the kernel while transfering data). I am aware that in theory, the client and server will consume at least as much memory as the file to be transferred, but this memory should also be made available to the O/S after the operation has completed.
I also use a garbage collector, which makes things just marginally better and the only TWISTED operations I use are a few transport write and callLater commands.
The only culprits responsible for this I can imagine to be a difference between the hardcoded buffer sizes in TWISTED and the amount of data I send (I send 64Kb of data per request for faster delivery in LANs) and/or possibly that this memory lost is in many small chunks of data -- in this case no O/S can free this data, since there are always limits only above which the kernel will deem an amount of memory worth the trouble to be released (I think glibc has around a 2MB limit)...
As professional network programmers, do you believe my diagnosis is correct? Have you encountered such problems in the past? Are there workarounds for this?

Many thanks,

Nick.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031201/539eaa2b/attachment.htm 

From andrew-twisted at puzzling.org  Mon Dec  1 07:11:51 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 1 Dec 2003 23:11:51 +1100
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
Message-ID: <20031201121151.GB21535@frobozz>

On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
>    Hi there.
>    I am writing a file transfer program using twisted as my framework.
>    I have been having some problems as far as memory usage is concerned
>    (i.e. both client and server just eat through available memory without
>    ever releasing it back to the kernel while transfering data). I am aware
>    that in theory, the client and server will consume at least as much memory
>    as the file to be transferred, but this memory should also be made
>    available to the O/S after the operation has completed.
>    I also use a garbage collector, which makes things just marginally better
>    and the only TWISTED operations I use are a few transport write and
>    callLater commands.

You don't say how large "large" is, but you probably should be using
producer/consumer APIs rather than just plain transport.write(data).  See
twisted.protocols.basic.FileSender for an example.  If I'm understanding
your problem correctly, you should see a significant improvement.  This
technique doesn't require holding the entire file in memory to transfer it.

I'm not sure what you mean about using a garbage collector -- Python
automatically cleans up objects with zero reference counts, and periodically
finds and collects unreachable object cycles.

>    The only culprits responsible for this I can imagine to be a difference
>    between the hardcoded buffer sizes in TWISTED and the amount of data I
>    send (I send 64Kb of data per request for faster delivery in LANs) and/or
>    possibly that this memory lost is in many small chunks of data -- in this
>    case no O/S can free this data, since there are always limits only above
>    which the kernel will deem an amount of memory worth the trouble to be
>    released (I think glibc has around a 2MB limit)...

Memory fragmentation can prevent the OS reclaiming memory, but generally
you'd expect memory growth to slow as it asymptotically reaches a high
enough limit to accomodate all memory allocations for your load, even with
fragmentation.

I believe Python 2.3's pymalloc allocates memory for different types in
different "arenas", which are seperately mmapped, so fragmentation in e.g.
the string arena (strings being that type this is read from files, split up,
sent over the network, etc) hopefully won't impact other memory allocation.
So 2.3 vs. 2.2 (or earlier) you should see... different memory use
characteristics.  Hopefully better, but you never know :)

Also, transport.write and callLater in 64kB chunks is unlikely to be the
fastest or memory-efficient technique.  Producers/consumers should be best,
but I'd suspect that even a single transport.write of the entire content
would probably be better.  Actual benchmarks to support this claim would be
very welcome!

>    As professional network programmers, do you believe my diagnosis is
>    correct? Have you encountered such problems in the past? Are there
>    workarounds for this?

I really can't say.  You've given no specific data at all... How large are
the files?  How much memory does your server appear to lose per request?
How much memory does the server take overall (both initially and after
running for a while)?  How many concurrent requests are you dealing with?
What platform, version of Python, and version of Twisted?  Anything else you
think is relevant?  :)

If you could answer some of these sorts of questions, we could maybe tell
you if what you're seeing is expected behaviour, or unusual, and maybe
suggest specific remedies.

-Andrew.




From wenderson at casadosprogramadores.com.br  Mon Dec  1 10:40:45 2003
From: wenderson at casadosprogramadores.com.br (Wenderson Teixeira)
Date: Mon, 1 Dec 2003 13:40:45 -0200
Subject: RES: [Twisted-Python] Woven and nested database queries
In-Reply-To: <3FC757DF.5010405@tv.debian.net>
Message-ID: <003001c3b821$7cf57b00$4501a8c0@wteixeiradsk1>

	Thanks for your reply, but I tested and that doesn't seem to work either.

	Tex

-----Mensagem original-----
De: twisted-python-admin at twistedmatrix.com [mailto:twisted-python-admin at twistedmatrix.com] Em nome de Tommi Virtanen
Enviada em: sexta-feira, 28 de novembro de 2003 12:13
Para: twisted-python at twistedmatrix.com
Assunto: Re: [Twisted-Python] Woven and nested database queries


Wenderson Teixeira wrote:
> 	I'm new to the list and I'm just starting with Twisted and Woven.
> 	I think the framework is great, but I'm having some problems.
> 	When I try to make two nested <div>, both with independent queries,
> 	I get na error, the solution I've found is to create another model
> 	called "loaddata", which does nothing, except call the queries.
> 	If anyone knows a better way, I'd like to hear, I've searched all
> 	over the Internet, and found nothing that could help.

Your problem is most likely Deferred models of which you need a 
submodel. Woven is buggy.

>                     <div model="a">
>                         <div view="Text"/>
>                         <p>B</p>
>                         <ul model="b" view="List">
>                             <li pattern="listItem" view="Text" />
>                         </ul>

Try <ul model="./b" view="List">, that should work.




From 2s7l3way02 at sneakemail.com  Mon Dec  1 14:52:06 2003
From: 2s7l3way02 at sneakemail.com (Mark Evans)
Date: 1 Dec 2003 19:52:06 -0000
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1
Message-ID: <25772-38779@sneakemail.com>

Are there any significant UDP bug fixes
or enhancements that make it worthwhile
to migrate immediately to the new 1.1.1 release candidate?

How stable is this rc, generally speaking?

-Mark



From exarkun at intarweb.us  Mon Dec  1 15:01:32 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 1 Dec 2003 15:01:32 -0500
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1
In-Reply-To: <25772-38779@sneakemail.com>
References: <25772-38779@sneakemail.com>
Message-ID: <20031201200132.GA31563@intarweb.us>

On Mon, Dec 01, 2003 at 07:52:06PM -0000, Mark Evans wrote:
> Are there any significant UDP bug fixes
> or enhancements that make it worthwhile
> to migrate immediately to the new 1.1.1 release candidate?

  I don't think there are any UDP changes from 1.1.0.

> 
> How stable is this rc, generally speaking?

  There are a couple known bugs (but not new bugs ;)

  There will probably be another release candidate tonight.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031201/ebcb090b/attachment.pgp 

From mailinglists at shechen.at  Mon Dec  1 22:55:37 2003
From: mailinglists at shechen.at (stephan)
Date: Mon, 01 Dec 2003 19:55:37 -0800
Subject: [Twisted-Python] mounting a twisted server
Message-ID: <oprzjbuzhawzeeq5@mail.geekmail.cc>

I have written a custom file system in python which I use in conjunction 
with twisted and its http protocol. So, as far as browsers are concerned i 
am fine. what I would like to do next is to serve my file system in some 
form so that it could be mounted on a client machine. The idea is that 
'web enabled objects' can be directly edited in a certain app. NFS or 
samba would conceptionally work but does not seem to be supported by 
twisted and seems to be overkill anyways.

Does anybody have any ideas how I could accomplish that. Anybody 
experienced with mounting ftp servers (heard its prone to errors.)


_stephan



From andrew-twisted at puzzling.org  Mon Dec  1 23:21:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Dec 2003 15:21:50 +1100
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjbuzhawzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc>
Message-ID: <20031202042150.GJ22674@frobozz>

On Mon, Dec 01, 2003 at 07:55:37PM -0800, stephan wrote:
> 
> I have written a custom file system in python which I use in conjunction 
> with twisted and its http protocol. So, as far as browsers are concerned i 
> am fine. what I would like to do next is to serve my file system in some 
> form so that it could be mounted on a client machine. The idea is that 
> 'web enabled objects' can be directly edited in a certain app. NFS or 
> samba would conceptionally work but does not seem to be supported by 
> twisted and seems to be overkill anyways.
> 
> Does anybody have any ideas how I could accomplish that. Anybody 
> experienced with mounting ftp servers (heard its prone to errors.)

This sounds like a good use for WebDAV, but unfortunately there is no
Twisted implementation of it yet.  It's probably easier than NFS or SMB,
though, but I'm just guessing :)

-Andrew.




From bob at redivi.com  Mon Dec  1 23:39:28 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Dec 2003 23:39:28 -0500
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjbuzhawzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc>
Message-ID: <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>


On Dec 1, 2003, at 10:55 PM, stephan wrote:

>
> I have written a custom file system in python which I use in 
> conjunction with twisted and its http protocol. So, as far as browsers 
> are concerned i am fine. what I would like to do next is to serve my 
> file system in some form so that it could be mounted on a client 
> machine. The idea is that 'web enabled objects' can be directly edited 
> in a certain app. NFS or samba would conceptionally work but does not 
> seem to be supported by twisted and seems to be overkill anyways.
>
> Does anybody have any ideas how I could accomplish that. Anybody 
> experienced with mounting ftp servers (heard its prone to errors.)

WebDAV is probably the right solution, but it's not currently 
implemented by Twisted (but feel free to write an implementation and 
submit patches).  I have done some very simple WebDAV stuff with 
Twisted, the simple commands are easy and are enough to get some things 
to work (like mozilla calendar or iCal).

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031201/2d273258/attachment.bin 

From mailinglists at shechen.at  Tue Dec  2 02:45:33 2003
From: mailinglists at shechen.at (stephan)
Date: Mon, 01 Dec 2003 23:45:33 -0800
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc> <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>
Message-ID: <oprzjmh7fuwzeeq5@mail.geekmail.cc>

hey bob, I just downloaded the RFC 2518 for WebDav. It seems that the 
protocol is based on XML which is nice. I also noticed that it is quite 
extensive and provides a lot of features I don't really need at the 
moment.

Do you mind sharing your simple WebDav files.

_stephan


On Mon, 1 Dec 2003 23:39:28 -0500, Bob Ippolito <bob at redivi.com> wrote:

>
> On Dec 1, 2003, at 10:55 PM, stephan wrote:
>
>>
>> I have written a custom file system in python which I use in
>> conjunction with twisted and its http protocol. So, as far as browsers
>> are concerned i am fine. what I would like to do next is to serve my
>> file system in some form so that it could be mounted on a client
>> machine. The idea is that 'web enabled objects' can be directly edited
>> in a certain app. NFS or samba would conceptionally work but does not
>> seem to be supported by twisted and seems to be overkill anyways.
>>
>> Does anybody have any ideas how I could accomplish that. Anybody
>> experienced with mounting ftp servers (heard its prone to errors.)
>
> WebDAV is probably the right solution, but it's not currently
> implemented by Twisted (but feel free to write an implementation and
> submit patches).  I have done some very simple WebDAV stuff with
> Twisted, the simple commands are easy and are enough to get some things
> to work (like mozilla calendar or iCal).
>
> -bob





From Pieter.Claerhout at Creo.com  Tue Dec  2 03:05:21 2003
From: Pieter.Claerhout at Creo.com (Pieter Claerhout)
Date: Tue, 2 Dec 2003 09:05:21 +0100 
Subject: [Twisted-Python] Some problems with twisted
Message-ID: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>

Hello all,

I'm having some problems with getting a certain app running under Twisted.
I've attached
the code I have so far. There are a few things that are not working the way
they should
(because I probably did something wrong). Twisted is still pretty new for
me.

1. If I run this script from the command prompt, e.g.:

   C:\>python sample.py
   
   It does start and performs the processing as defined in the
ProcessingService, but it
   doesn't seem to start the WebAdminService. When I try to connect to the
web interface
   by surfing to http://localhost:9119/, it fails to connect.

2. During the execution of the doProcessing function, it's impossible to
stop the
   application with e.g. CTRL+BREAK. Is there a way around this?

3. The code from the doProcessing service is basically blocking the whole
application 
   when it's running. The goal of this application is that it does two
things:
   
   1. It grabs files from a list of servers every hour and performs some
calculations on
      these files. The results will be stored in a database (SQLite or
MySQL).

   2. The application will provide a web interface to administer the
application and
      display the results by getting these from the database.

   Since downloading from the internet is not always as reliable as we would
like it to
   be, it's possible that if a number of the servers are not online, the
systems slows
   down considerably. It would be a waste of time anyway to let the
application wait
   for this single server when it can continue with the other ones in the
meantime.

   What I would like to find is a way to get the data from these servers as
fast as
   possible and do the calculations on them without blocking the system.

   What is the normal way of doing things like this in Twisted. Should I use
threads to
   do this, or is there another way?

Thanks a lot in advance,


pieter

[ pieter claerhout | pieter at yellowduck.be | www.yellowduck.be ]


#---- START OF CODE ----
import time
from twisted.internet import app
from twisted.internet import reactor
from twisted.web import static
from twisted.web import script
from twisted.web import server

class ProcessingService( app.ApplicationService ):

    def __init__( self, serviceName, serviceParent=None ):
        app.ApplicationService.__init__(
            self, serviceName, serviceParent=serviceParent
        )

    def startService( self ):
        reactor.callLater( 0, self.doProcessing )

    def doProcessing( self ):
        for url in [ 'http://www.yellowduck.be/', 'http://www.beachshop.be/'
]:
            print 'Processing %s' %( url )
            time.sleep( 5 )
        reactor.callLater( 360, self.doProcessing )

class WebAdminService( app.ApplicationService ):

    def __init__( self, serviceName, serviceParent=None ):
        app.ApplicationService.__init__(
            self, serviceName, serviceParent=serviceParent
        )

    def startService( self ):
        root = static.File( 'htdocs' )
        site = server.Site( root )
        self.serviceParent.listenTCP( 9119, site )

def main():
    myapp = app.Application( 'myapp' )
    ProcessingService( 'processor', myapp )
    WebAdminService( 'webadmin', myapp )
    myapp.run()

if __name__ == '__main__':
    main()
#---- END OF CODE ----



From twisted at zadka.site.co.il  Tue Dec  2 05:01:41 2003
From: twisted at zadka.site.co.il (Moshe Zadka)
Date: 2 Dec 2003 10:01:41 -0000
Subject: [Twisted-Python] Some problems with twisted
In-Reply-To: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
References: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
Message-ID: <20031202100141.5517.qmail@green.zadka.com>

On Tue, 2 Dec 2003, Pieter Claerhout <Pieter.Claerhout at Creo.com> wrote:

> 2. During the execution of the doProcessing function, it's impossible to
> stop the application with e.g. CTRL+BREAK. Is there a way around this?

That's the first sign of problems: "during" a function call is a perceptable
time.

Here's code which would do the right thing, completely untested.
Notice how calculate, which would do the MySQL dance [probably
a bad idea to use SQL for these things], is only called when
the data is ready.

from twisted.application import service, internet
from twisted.web import server, static, client

def ProcessingService():
    return internet.TimerService(_doProcessing,
                                 ['http://www.yellowduck.be/',
                                  'http://www.beachshop.be/'])

def _doProcessing(urls):
    def calculation(data):
        pass # do something here
    for url in urls:
        client.getPage(url).addCallback(calculation)

def WebAdminService():
    return internet.TCPService(9119, server.Site(static.File('htdocs')))

application = service.Application('myapp')
for s in [ProcessingService(), WebAdminService()]:
    s.setServiceParent(application)



From nieder at mail.ru  Tue Dec  2 02:58:17 2003
From: nieder at mail.ru (Ricardo Niederberger Cabral)
Date: Tue, 2 Dec 2003 08:58:17 +0100
Subject: [Twisted-Python] determine the number of incoming tcp connections
Message-ID: <20031202075635.GA2697@nieder>

How can i ask my twisted.internet.app.Application or
twisted.spread.pb.Root how many incoming tcp connections it currently
has ?

I failed to find such thing on the API (or didn't try hard enough :/
), so should i make the other side say "i'm alive" and then count myself the
number of "i'm alive"s i get ?

Best regards,
--
rnc <nieder at mail dot ru>



From henni at brainbot.com  Tue Dec  2 06:26:11 2003
From: henni at brainbot.com (Thorsten Henninger)
Date: Tue, 02 Dec 2003 12:26:11 +0100
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjmh7fuwzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc> <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com> <oprzjmh7fuwzeeq5@mail.geekmail.cc>
Message-ID: <3FCC76D3.8030606@brainbot.com>

Hi,

I would be very interested in using WebDav together with twisted as well.
Since I am very  new to twisted, some simple WebDav files would really 
help me to get startet.
If I get it to work, I would not mind to share my results and submit 
patches!

regards,

Thorsten

stephan wrote:

>
> hey bob, I just downloaded the RFC 2518 for WebDav. It seems that the 
> protocol is based on XML which is nice. I also noticed that it is 
> quite extensive and provides a lot of features I don't really need at 
> the moment.
>
> Do you mind sharing your simple WebDav files.
>
> _stephan
>
>
> On Mon, 1 Dec 2003 23:39:28 -0500, Bob Ippolito <bob at redivi.com> wrote:
>
>>
>> On Dec 1, 2003, at 10:55 PM, stephan wrote:
>>
>>>
>>> I have written a custom file system in python which I use in
>>> conjunction with twisted and its http protocol. So, as far as browsers
>>> are concerned i am fine. what I would like to do next is to serve my
>>> file system in some form so that it could be mounted on a client
>>> machine. The idea is that 'web enabled objects' can be directly edited
>>> in a certain app. NFS or samba would conceptionally work but does not
>>> seem to be supported by twisted and seems to be overkill anyways.
>>>
>>> Does anybody have any ideas how I could accomplish that. Anybody
>>> experienced with mounting ftp servers (heard its prone to errors.)
>>
>>
>> WebDAV is probably the right solution, but it's not currently
>> implemented by Twisted (but feel free to write an implementation and
>> submit patches).  I have done some very simple WebDAV stuff with
>> Twisted, the simple commands are easy and are enough to get some things
>> to work (like mozilla calendar or iCal).
>>
>> -bob
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
brainbot technologies AG 
boppstrasse . 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:henni at brainbot.com





From nkrontir at hotmail.com  Tue Dec  2 08:46:07 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Tue, 2 Dec 2003 15:46:07 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz>
Message-ID: <LAW11-OE16A5JIzpNce00000910@hotmail.com>

Hi again.

----- Original Message ----- 
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Monday, December 01, 2003 2:11 PM
Subject: Re: [Twisted-Python] Memory usage in large file transfers


> On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
> >    Hi there.
> >    I am writing a file transfer program using twisted as my framework.
> >    I have been having some problems as far as memory usage is concerned
> >    (i.e. both client and server just eat through available memory
without
> >    ever releasing it back to the kernel while transfering data). I am
aware
> >    that in theory, the client and server will consume at least as much
memory
> >    as the file to be transferred, but this memory should also be made
> >    available to the O/S after the operation has completed.
> >    I also use a garbage collector, which makes things just marginally
better
> >    and the only TWISTED operations I use are a few transport write and
> >    callLater commands.
>
> You don't say how large "large" is, but you probably should be using
> producer/consumer APIs rather than just plain transport.write(data).  See
> twisted.protocols.basic.FileSender for an example.  If I'm understanding
> your problem correctly, you should see a significant improvement.  This
> technique doesn't require holding the entire file in memory to transfer
it.
>
> I'm not sure what you mean about using a garbage collector -- Python
> automatically cleans up objects with zero reference counts, and
periodically
> finds and collects unreachable object cycles.
>
nk: The size of files I am referring to can be anything from 20MB up to
500MB, but right now I'm taking it easy with the client/ server model; I'm
using sending a single 43MB file, and as I'm debugging and improving
performance, I will increase this filesize...
nk: I had originally thought about using basic.FileSender but a) It has been
commented as unstable by the twisted development team and b)I need to send a
client ID each time I send a single buffer (security... what can you
say...). To make sure that I'm not holding the entire file's contents in
memory, I read (at most) 64K of  the file each time, and send this data
away. After it has been sent, this data buffer is flushed. I guess I can try
to change this to file.open, file.seek, file.read and file.close each time I
read the file so that the only contents of the file in system memory are the
only ones necessary...
nk: When talking about the garbage collector, I'm just referring to python's
gc.enable() and gc.collect() commands, nothing more... Unfortunately I don't
believe that the built-in periodical find-and-collect unreachable object
cycles is very useful in the case of the client, since it shuts down after
the file's EOF...
> >    The only culprits responsible for this I can imagine to be a
difference
> >    between the hardcoded buffer sizes in TWISTED and the amount of data
I
> >    send (I send 64Kb of data per request for faster delivery in LANs)
and/or
> >    possibly that this memory lost is in many small chunks of data -- in
this
> >    case no O/S can free this data, since there are always limits only
above
> >    which the kernel will deem an amount of memory worth the trouble to
be
> >    released (I think glibc has around a 2MB limit)...
>
> Memory fragmentation can prevent the OS reclaiming memory, but generally
> you'd expect memory growth to slow as it asymptotically reaches a high
> enough limit to accomodate all memory allocations for your load, even with
> fragmentation.
>
> I believe Python 2.3's pymalloc allocates memory for different types in
> different "arenas", which are seperately mmapped, so fragmentation in e.g.
> the string arena (strings being that type this is read from files, split
up,
> sent over the network, etc) hopefully won't impact other memory
allocation.
> So 2.3 vs. 2.2 (or earlier) you should see... different memory use
> characteristics.  Hopefully better, but you never know :)
>
> Also, transport.write and callLater in 64kB chunks is unlikely to be the
> fastest or memory-efficient technique.  Producers/consumers should be
best,
> but I'd suspect that even a single transport.write of the entire content
> would probably be better.  Actual benchmarks to support this claim would
be
> very welcome!
>
> >    As professional network programmers, do you believe my diagnosis is
> >    correct? Have you encountered such problems in the past? Are there
> >    workarounds for this?
>
> I really can't say.  You've given no specific data at all... How large are
> the files?  How much memory does your server appear to lose per request?
> How much memory does the server take overall (both initially and after
> running for a while)?  How many concurrent requests are you dealing with?
> What platform, version of Python, and version of Twisted?  Anything else
you
> think is relevant?  :)
>
nk: Right now, I'm testing the server/ client model with a 43 MB file. The
memory consumed on a WinMe system using Python 2.3.2 and Twisted 1.1.0 with
a 64K buffer is 58MB, while with a 4KB buffer is around the 80MB region. On
Linux using Python 2.3.2 and Twisted 1.1.0, the memory consumed with a 4K
buffer is always a bit more than 100MB. I can't use very large buffers on my
Linux system, because of the ID I have to send per buffer sent. It seems
that the linux default SOL_SOCKET, SO_RCVBUF sizes are relatively small, so
it confuses the client ID since the packets it receives will have different
sizes... Note that these results are for 1 server and 1 client. I have not
yet dared do 2 concurrent clients at once!
nk: The server consumes only 3MB of memory while idle. Unfortunately, I
cannot tell if the erratic memory consumption lies on the server or client
side (or both), since I only have 1 PC...
> If you could answer some of these sorts of questions, we could maybe tell
> you if what you're seeing is expected behaviour, or unusual, and maybe
> suggest specific remedies.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From vanandel at atd.ucar.edu  Tue Dec  2 09:01:29 2003
From: vanandel at atd.ucar.edu (Joe Van Andel)
Date: Tue, 02 Dec 2003 07:01:29 -0700
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor already installed
Message-ID: <3FCC9B39.1060801@atd.ucar.edu>

Using Twisted 1.1.0, Python 2.3.2, Redhat 9:

Python scripts using that import xmlprc before calling qtreactor.install()

e.g:
========================
from twisted.web.xmlrpc import Proxy

qtreactor.install(app)
=========================

fail with the traceback:

Traceback (most recent call last):
   File "qtdemo2.py", line 28, in ?
     qtreactor.install(app)
   File 
"/opt/local_rh90/lib/python2.3/site-packages/twisted/internet/qtreactor.py", 
line 197, in install
     installReactor(reactor)
   File 
"/opt/local_rh90/lib/python2.3/site-packages/twisted/internet/main.py", 
line 90, in installReactor
     assert not sys.modules.has_key('twisted.internet.reactor'), \
AssertionError: reactor already installed

====================================

Another demonstration of this problem:
=====================
 >>> from twisted.web.xmlrpc import Proxy
 >>> import sys
 >>> sys.modules.has_key('twisted.internet.reactor')
True
=========================
internet/main.py, installReactor() needs a more robust test whether a 
reactor has already been installed, rather than relying on whether 
twisted.internet.reactor has been imported.

The workaround is to move the import statement, but this isn't always a 
clean solution.

-- 
Joe VanAndel  	
National Center for Atmospheric Research
http://www.atd.ucar.edu/~vanandel/
Internet: vanandel at ucar dot edu
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qtdemo2.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/76e8efcc/attachment.txt 

From exarkun at intarweb.us  Tue Dec  2 10:21:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 10:21:42 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <LAW11-OE16A5JIzpNce00000910@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz> <LAW11-OE16A5JIzpNce00000910@hotmail.com>
Message-ID: <20031202152142.GB1559@intarweb.us>

On Tue, Dec 02, 2003 at 03:46:07PM +0200, Nikolaos Krontiris wrote:
> Hi again.
> 
> ----- Original Message ----- 
> From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
> To: <twisted-python at twistedmatrix.com>
> Sent: Monday, December 01, 2003 2:11 PM
> Subject: Re: [Twisted-Python] Memory usage in large file transfers
> 
> 
> > On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
> > >    Hi there.

> > >    I am writing a file transfer program using twisted as my framework.
> > >    I have been having some problems as far as memory usage is
> > >    concerned (i.e. both client and server just eat through available
> > >    memory without ever releasing it back to the kernel while
> > >    transfering data). I am aware that in theory, the client and server
> > >    will consume at least as much memory as the file to be transferred,
> > >    but this memory should also be made available to the O/S after the
> > >    operation has completed. I also use a garbage collector, which
> > >    makes things just marginally better and the only TWISTED operations
> > >    I use are a few transport write and callLater commands.
> >
> > You don't say how large "large" is, but you probably should be using
> > producer/consumer APIs rather than just plain transport.write(data).  See
> > twisted.protocols.basic.FileSender for an example.  If I'm understanding
> > your problem correctly, you should see a significant improvement.  This
> > technique doesn't require holding the entire file in memory to transfer
> > it.
> >
> > I'm not sure what you mean about using a garbage collector -- Python
> > automatically cleans up objects with zero reference counts, and
> > periodically finds and collects unreachable object cycles.
> >
> nk: The size of files I am referring to can be anything from 20MB up to
> 500MB, but right now I'm taking it easy with the client/ server model; I'm
> using sending a single 43MB file, and as I'm debugging and improving
> performance, I will increase this filesize...
> nk: I had originally thought about using basic.FileSender but a) It has been
> commented as unstable by the twisted development team and b)I need to send a
> client ID each time I send a single buffer (security... what can you
> say...).

  Comments of "unstable" in Twisted sources refer to the fact that we are
not promising that the API will not change.  The code in question is bug
free, as far as I know.

  Client ID?  I assume you're using TCP; what do you need to add an ID to
every packet for?

> To make sure that I'm not holding the entire file's contents in
> memory, I read (at most) 64K of  the file each time, and send this data
> away. After it has been sent, this data buffer is flushed. I guess I can try
> to change this to file.open, file.seek, file.read and file.close each time I
> read the file so that the only contents of the file in system memory are the
> only ones necessary...

  That is not necessary.

> nk: When talking about the garbage collector, I'm just referring to python's
> gc.enable() and gc.collect() commands, nothing more... Unfortunately I don't
> believe that the built-in periodical find-and-collect unreachable object
> cycles is very useful in the case of the client, since it shuts down after
> the file's EOF...

  Unless you are preventing the garbage collector from working, I don't see
why this should be the case.  To see if your program is building up
unreasonable amounts of unfreeable objects, look at the gc.garbage list. 
Any objects the garbage collector has found can be freed but which it cannot
actually free will end up there.

> [snip]
> >
> > >    As professional network programmers, do you believe my diagnosis is
> > >    correct? Have you encountered such problems in the past? Are there
> > >    workarounds for this?
> >
> > I really can't say.  You've given no specific data at all... How large are
> > the files?  How much memory does your server appear to lose per request?
> > How much memory does the server take overall (both initially and after
> > running for a while)?  How many concurrent requests are you dealing with?
> > What platform, version of Python, and version of Twisted?  Anything else
> you
> > think is relevant?  :)
> >
> nk: Right now, I'm testing the server/ client model with a 43 MB file. The
> memory consumed on a WinMe system using Python 2.3.2 and Twisted 1.1.0 with
> a 64K buffer is 58MB, while with a 4KB buffer is around the 80MB region. On
> Linux using Python 2.3.2 and Twisted 1.1.0, the memory consumed with a 4K
> buffer is always a bit more than 100MB. I can't use very large buffers on my
> Linux system, because of the ID I have to send per buffer sent. It seems
> that the linux default SOL_SOCKET, SO_RCVBUF sizes are relatively small, so
> it confuses the client ID since the packets it receives will have different
> sizes... Note that these results are for 1 server and 1 client. I have not
> yet dared do 2 concurrent clients at once!

  You absolutely must not rely on the number of bytes received from a
particular read from a socket.  I cannot stress this enough.  You
*absolutely* *can* *not* rely on it.

> nk: The server consumes only 3MB of memory while idle. Unfortunately, I
> cannot tell if the erratic memory consumption lies on the server or client
> side (or both), since I only have 1 PC...

  The client and server are still separate processes.  You should be able to
view resource usage for each individually.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/6d92cfc8/attachment.pgp 

From exarkun at intarweb.us  Tue Dec  2 10:27:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 10:27:21 -0500
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor already installed
In-Reply-To: <3FCC9B39.1060801@atd.ucar.edu>
References: <3FCC9B39.1060801@atd.ucar.edu>
Message-ID: <20031202152721.GC1559@intarweb.us>

On Tue, Dec 02, 2003 at 07:01:29AM -0700, Joe Van Andel wrote:
> Using Twisted 1.1.0, Python 2.3.2, Redhat 9:
> 
> [snip]
> 
> The workaround is to move the import statement, but this isn't always a 
> clean solution.
> 

  This isn't a workaround.  This is [close to] the correct solution.  :)

  The actual solution is to use "twistd" with the "--reactor qt" argument to
run the program (and to write the program in such a way that it can be run
like this).  

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/e451a42b/attachment.pgp 

From martin at datacash.com  Tue Dec  2 10:37:03 2003
From: martin at datacash.com (Martin Waite)
Date: 02 Dec 2003 15:37:03 +0000
Subject: [Twisted-Python] tutorial finger14.py error ?
Message-ID: <1070379423.1168.189.camel@pascal>

Hi,

I am working through the excellent tutorial 

http://twistedmatrix.com/documents/howto/tutorial.

In finger14.py, there are two similar definitions of 
_read() - one as a method of FingerService and the 
second local to startService().

The version in startService() doesn't seem to do anything.
It tries to read self.file instead of self.filename - and
so cannot succeed.

Can this be deleted to remove the confusion ?

regards,
Martin






From itamar at itamarst.org  Tue Dec  2 10:36:53 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:36:53 -0500
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor
 already installed
In-Reply-To: <3FCC9B39.1060801@atd.ucar.edu>
References: <3FCC9B39.1060801@atd.ucar.edu>
Message-ID: <20031202103653.419cb065.itamar@itamarst.org>

On Tue, 02 Dec 2003 07:01:29 -0700
Joe Van Andel <vanandel at atd.ucar.edu> wrote:

> The workaround is to move the import statement, but this isn't always
> a clean solution.

It's not a workaround - it's the documented way of doing this.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 10:38:52 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:38:52 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <LAW11-OE16A5JIzpNce00000910@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
	<20031201121151.GB21535@frobozz>
	<LAW11-OE16A5JIzpNce00000910@hotmail.com>
Message-ID: <20031202103852.0a2832aa.itamar@itamarst.org>

On Tue, 2 Dec 2003 15:46:07 +0200
"Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:

> nk: I had originally thought about using basic.FileSender but a) It
> has been commented as unstable by the twisted development team and b)I
> need to send a client ID each time I send a single buffer (security...
> what can you say...). To make sure that I'm not holding the entire
> file's contents in

You don't have to use FileSender as is, you could write a variant of it
using the underlying producer/consumer APIs, that's the solution. See
http://itamarst.org/writings/OSCON03/twisted_internet-108.html

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 10:42:50 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:42:50 -0500
Subject: [Twisted-Python] Some problems with twisted
In-Reply-To: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
References: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
Message-ID: <20031202104250.01bc33e5.itamar@itamarst.org>

On Tue, 2 Dec 2003 09:05:21 +0100
Pieter Claerhout <Pieter.Claerhout at Creo.com> wrote:

> 2. During the execution of the doProcessing function, it's impossible
> to stop the
>    application with e.g. CTRL+BREAK. Is there a way around this?

Yes, don't time.sleep(), that freezes the whole program. That's what
reactor.callLater is for - schedule a function to run in 5 seconds. This
is the same issue as the next one.

As an aside, twisted.internet.app is deprecated. Look at the online docs
for 1.1.0 to see how the new, updated APIs work.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 11:07:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 11:07:55 -0500
Subject: [Twisted-Python] tutorial finger14.py error ?
In-Reply-To: <1070379423.1168.189.camel@pascal>
References: <1070379423.1168.189.camel@pascal>
Message-ID: <20031202110755.12f932b1.itamar@itamarst.org>

On 02 Dec 2003 15:37:03 +0000
Martin Waite <martin at datacash.com> wrote:

> Can this be deleted to remove the confusion ?

Fixed in CVS, thanks.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From bob at redivi.com  Tue Dec  2 11:23:32 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 11:23:32 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <20031202103852.0a2832aa.itamar@itamarst.org>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz> <LAW11-OE16A5JIzpNce00000910@hotmail.com> <20031202103852.0a2832aa.itamar@itamarst.org>
Message-ID: <DF025956-24E3-11D8-A56A-000A95686CD8@redivi.com>


On Dec 2, 2003, at 10:38 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2 Dec 2003 15:46:07 +0200
> "Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:
>
>> nk: I had originally thought about using basic.FileSender but a) It
>> has been commented as unstable by the twisted development team and b)I
>> need to send a client ID each time I send a single buffer (security...
>> what can you say...). To make sure that I'm not holding the entire
>> file's contents in
>
> You don't have to use FileSender as is, you could write a variant of it
> using the underlying producer/consumer APIs, that's the solution. See
> http://itamarst.org/writings/OSCON03/twisted_internet-108.html

And if you do, please don't screw with the Python garbage collector.  
Just because you can turn it off, doesn't mean you should.  Doing a 
full collect every so often is slower than letting gc take its normal 
course anyways (in my experience).

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/9028808d/attachment.bin 

From nkrontir at hotmail.com  Tue Dec  2 12:04:49 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Tue, 2 Dec 2003 19:04:49 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com><20031201121151.GB21535@frobozz><LAW11-OE16A5JIzpNce00000910@hotmail.com> <20031202103852.0a2832aa.itamar@itamarst.org>
Message-ID: <Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>

----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, December 02, 2003 5:38 PM
Subject: Re: [Twisted-Python] Memory usage in large file transfers


> On Tue, 2 Dec 2003 15:46:07 +0200
> "Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:
>
> > nk: I had originally thought about using basic.FileSender but a) It
> > has been commented as unstable by the twisted development team and b)I
> > need to send a client ID each time I send a single buffer (security...
> > what can you say...). To make sure that I'm not holding the entire
> > file's contents in
>
> You don't have to use FileSender as is, you could write a variant of it
> using the underlying producer/consumer APIs, that's the solution. See
> http://itamarst.org/writings/OSCON03/twisted_internet-108.html
>
nk: Ok, I can give it a try, sounds like a good idea. But, since producers
have transport.write in their cores anyway, why should there be a
performance difference between this solution and the way I'm using it (just
calling transport.write)?
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From warner at lothar.com  Tue Dec  2 12:37:20 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 02 Dec 2003 09:37:20 -0800 (PST)
Subject: [Twisted-Python] mounting a twisted server
Message-ID: <20031202.093720.77222785.warner@lothar.com>

stephan <mailinglists at shechen.at> writes:
> NFS or samba would conceptionally work but does not seem to be supported by
> twisted and seems to be overkill anyways.

The gnome-vfs layer might be worth looking at: it allows fairly arbitrary
things to be interpreted as "filesystems" (auto-mounted ftp sites, synthetic
configuration files, etc), but is only accessible to programs using the
gnome-vfs library for file access.

If you've considered NFS then one of the user-space filesystems might be a
reasonable approach. They involve a kernel module which proxies filesystem
requests up to a userspace daemon, which can then do whatever it wants to
satisfy the open/read/write/close requests. Some of the ones I've looked at
have python bindings, and getting their callback scheme to work with Twisted
shouldn't be too hard.

Advantages: any app on your box can access the files (no special library
needed)

Disadvantages: only runs on linux (or possibly some BSDs), is only directly
available to processes running on that same box, but you could probably NFS-
or SMB-export the resulting filesystem so other machines could mount it.

 FUSE: Filesystem in USErspace
       http://sourceforge.net/projects/avf
       includes Perl and Python bindings


 -Brian



From martin at datacash.com  Tue Dec  2 12:55:05 2003
From: martin at datacash.com (Martin Waite)
Date: 02 Dec 2003 17:55:05 +0000
Subject: [Twisted-Python] daemon thread support
Message-ID: <1070387706.1168.205.camel@pascal>

Hi,

I have written a simple network listener that
collects requests, stores these in a database,
pulls responses from a database, and forwards these
back over the network.

This uses three threads:
  * main twisted reactor thread
  * database writer thread
  * database reader thread

The database threads are created using reactor.callInThread().

Everything works fine, but I cannot get the application
to close down cleanly - it always blocks waiting for the 
database threads to stop.

Is there any way to mark these threads as daemon threads 
so that python will close down even if they're still running ?

regards,
Martin






From itamar at itamarst.org  Tue Dec  2 13:28:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:28:36 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <1070387706.1168.205.camel@pascal>
References: <1070387706.1168.205.camel@pascal>
Message-ID: <20031202132836.0c370d7a.itamar@itamarst.org>

On 02 Dec 2003 17:55:05 +0000
Martin Waite <martin at datacash.com> wrote:

> Everything works fine, but I cannot get the application
> to close down cleanly - it always blocks waiting for the 
> database threads to stop.

Instead of having a reader thread, have read tasks that you send to
thread. That is, don't send one function to callInThread that does a
while loop, send functions that do one task and then exit.

Also look at twisted.enterprise.adbapi and the enterprise howto.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 13:31:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:31:47 -0500
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <20031202.093720.77222785.warner@lothar.com>
References: <20031202.093720.77222785.warner@lothar.com>
Message-ID: <20031202133147.3cf458b9.itamar@itamarst.org>

On Tue, 02 Dec 2003 09:37:20 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

> If you've considered NFS then one of the user-space filesystems might
> be a reasonable approach. They involve a kernel module which proxies
> filesystem requests up to a userspace daemon, which can then do
> whatever it wants to satisfy the open/read/write/close requests. Some
> of the ones I've looked at have python bindings, and getting their
> callback scheme to work with Twisted shouldn't be too hard.

Huh? You don't need that, a NFS server can run as pure user space, no
kernel work involved, it's just another network server. The only
possible issue is loopback mounting due to reentry issues or something
(there was a paper at Usenix 2001 IIRC about a toolkit for writing NFS
servers in C++, probably covers that). You just mount it with nfs
client, which does need to be in kernel but that's already in linux
etc..

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 13:33:37 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:33:37 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
	<20031201121151.GB21535@frobozz>
	<LAW11-OE16A5JIzpNce00000910@hotmail.com>
	<20031202103852.0a2832aa.itamar@itamarst.org>
	<Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>
Message-ID: <20031202133337.6c9bda44.itamar@itamarst.org>

On Tue, 2 Dec 2003 19:04:49 +0200
"Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:

> nk: Ok, I can give it a try, sounds like a good idea. But, since
> producers have transport.write in their cores anyway, why should there
> be a performance difference between this solution and the way I'm
> using it (just calling transport.write)?

Because it only writes (if you do it correctly and don't just ignore
producer callbacks) when the transport buffers are empty and writes will
go out over the network immediately, so data doesn't accumulate in the
transport buffers (which can be expensive if it gets too big).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From warner at lothar.com  Tue Dec  2 14:07:45 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 02 Dec 2003 11:07:45 -0800 (PST)
Subject: [Twisted-Python] Contributing to Twisted
Message-ID: <20031202.110745.124402457.warner@lothar.com>

Michal Pasternak <michal at pasternak.w.lub.pl> writes:

> I'd like to setup buildbot on my machine and help Twisted building and
> testing packages - as my contribution to Twisted project. I can install it
> on a 700 MHz / 256 RAM / NetBSD-stable machine.

Excellent! I'll set up a netbsd builder and mail you the setup information. I
need a little time to get the next buildbot release out the door.. otherwise
I think you'll need to run the CVS version of the buildslave. I'll see what I
can get done this week.

You should start by downloading the buildbot code from buildbot.sf.net and
familizarize yourself with the docs on "how to set up a build slave".

Also, what version of python do you have installed on that machine? Does
NetBSD have kqueue? Does the kqueue reactor work for you? I'll use these
answers to set up the builder configuration.

thanks!
 -Brian



From phil at bubblehouse.org  Tue Dec  2 14:46:16 2003
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 2 Dec 2003 14:46:16 -0500 (EST)
Subject: [Twisted-Python] TwistedJava
Message-ID: <1431.65.246.170.211.1070394376.squirrel@192.168.0.2>

I was just wondering if anyone ( **cough**itamar**cough** ;-) ) has had a
chance to hack out TwistedJava for the new cred framework.

I know it's not a high-demand product, but I could really use it...I've
been looking at the source code and twisted-python's cred code, but i
don't think i'm at a level with twisted to be able to hack it myself.

if there's anything i can do to help expedite the process, i'd be glad to
help.

-phil



From michal at pasternak.w.lub.pl  Tue Dec  2 15:44:28 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 2 Dec 2003 21:44:28 +0100
Subject: [Twisted-Python] Contributing to Twisted
In-Reply-To: <20031202.110745.124402457.warner@lothar.com>
References: <20031202.110745.124402457.warner@lothar.com>
Message-ID: <20031202204428.GA21102@pasternak.w.lub.pl>

Brian Warner [Tue, Dec 02, 2003 at 11:07:45AM -0800]:
> You should start by downloading the buildbot code from buildbot.sf.net and
> familizarize yourself with the docs on "how to set up a build slave".
It's sufficient to cd /usr/pkgsrc/wip/py-buildbot && make install clean :)

> Also, what version of python do you have installed on that machine?
2.3

> Does NetBSD have kqueue? Does the kqueue reactor work for you?
I have NetBSD-stable, which doesn't support it. Kqueue support is in
NetBSD-current, which I don't have installed.

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From vlupien at drummonddesigns.com  Tue Dec  2 16:56:12 2003
From: vlupien at drummonddesigns.com (vicky lupien)
Date: Tue, 2 Dec 2003 16:56:12 -0500
Subject: [Twisted-Python] deferred
Message-ID: <000001c3b91f$1a231f60$687ba8c0@vicky>

I have a problem with deferred.  I have a wmfactory that return the
results of a sql query but sometimes it occurs that the result is an
sql-exception error because it's an insert query and sometimes the data
are already in the database. When this kind of error occurs, the page is
not render and I got an error.
 
Here's what I talking about:
 
class MessagePage(pages.BasePage):
    templateDirectory =
str(os.sep).join([pages.BasePage().templateDirectory])
    templateFile = "message.html"
    
    def initialize(self, theDeferred=None):
         # theDeferred is the results of an sql query of an other page
but at the stage of deferred
        self.theDeferred = theDeferred
            
        
    def wmfactory_theDeferred(self, request):
        return self.theDeferred   #here's where the error occurs.  When
the sql queries is ok everything is fine but when it's an sql exception
it breaks
    
    def wvupdate_message(self, request, widget, data):
        print data  # I don't want to just print the data
(self.deferred) but it's a test to see what's the problem
 
My template:
<html>
            <head>
            </head>
            <body>
                        <br />
                        <br />
                        ALLO
                        <div model="theDeferred" view="message">
                        </div>
            </body>
</html>
 
The error I got when it's an sql exception:
_mysql_exceptions.IntegrityError: (1062, "Duplicate entry '12345' for
key 2")
how can I avoid this error?
 
vicky
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/f60e2d1c/attachment.htm 

From exarkun at intarweb.us  Tue Dec  2 17:43:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 17:43:05 -0500
Subject: [Twisted-Python] deferred
In-Reply-To: <000001c3b91f$1a231f60$687ba8c0@vicky>
References: <000001c3b91f$1a231f60$687ba8c0@vicky>
Message-ID: <20031202224305.GA3777@intarweb.us>

On Tue, Dec 02, 2003 at 04:56:12PM -0500, vicky lupien wrote:
> I have a problem with deferred.  I have a wmfactory that return the
> results of a sql query but sometimes it occurs that the result is an
> sql-exception error because it's an insert query and sometimes the data
> are already in the database. When this kind of error occurs, the page is
> not render and I got an error.

  Add an errback to the deferred which handles the error in the way you
would like.  For example,

    from twisted.python import log
    def ebSQLInsert(failure):
        failure.trap(MySQLdb.IntegrityError)   # Only handle one error type
        return "The SQL insert failed"

    theDeferred.addErrback(ebSQLInsert)

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/c7f6b2bf/attachment.pgp 

From 2002 at weholt.org  Tue Dec  2 17:54:48 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 2 Dec 2003 23:54:48 +0100
Subject: [Twisted-Python] deferred
References: <000001c3b91f$1a231f60$687ba8c0@vicky>
Message-ID: <007901c3b927$50ac2d30$0401a8c0@RAZOR>

Your error has nothing to do with deferred. The error is coming from MySQL and it probably means your trying to insert duplicate values in a primary key field or some other field which must be uniqe in your table.

Thomas


  ----- Original Message ----- 
  From: vicky lupien 
  To: twisted-python at twistedmatrix.com 
  Sent: Tuesday, December 02, 2003 10:56 PM
  Subject: [Twisted-Python] deferred


  I have a problem with deferred.  I have a wmfactory that return the results of a sql query but sometimes it occurs that the result is an sql-exception error because it's an insert query and sometimes the data are already in the database. When this kind of error occurs, the page is not render and I got an error.

   

  Here's what I talking about:

   

  class MessagePage(pages.BasePage):

      templateDirectory = str(os.sep).join([pages.BasePage().templateDirectory])

      templateFile = "message.html"

      

      def initialize(self, theDeferred=None):

           # theDeferred is the results of an sql query of an other page but at the stage of deferred

          self.theDeferred = theDeferred

              

          

      def wmfactory_theDeferred(self, request):

          return self.theDeferred   #here's where the error occurs.  When the sql queries is ok everything is fine but when it's an sql exception it breaks

      

      def wvupdate_message(self, request, widget, data):

          print data  # I don't want to just print the data (self.deferred) but it's a test to see what's the problem

   

  My template:

  <html>

              <head>

              </head>

              <body>

                          <br />

                          <br />

                          ALLO

                          <div model="theDeferred" view="message">

                          </div>

              </body>

  </html>

   

  The error I got when it's an sql exception:

  _mysql_exceptions.IntegrityError: (1062, "Duplicate entry '12345' for key 2")

  how can I avoid this error?

   

  vicky

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/b7405378/attachment.htm 

From andrew-twisted at puzzling.org  Tue Dec  2 19:26:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 11:26:40 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031202132836.0c370d7a.itamar@itamarst.org>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org>
Message-ID: <20031203002640.GA25233@frobozz>

On Tue, Dec 02, 2003 at 01:28:36PM -0500, Itamar Shtull-Trauring wrote:
> On 02 Dec 2003 17:55:05 +0000
> Martin Waite <martin at datacash.com> wrote:
> 
> > Everything works fine, but I cannot get the application
> > to close down cleanly - it always blocks waiting for the 
> > database threads to stop.
> 
> Instead of having a reader thread, have read tasks that you send to
> thread. That is, don't send one function to callInThread that does a
> while loop, send functions that do one task and then exit.
> 
> Also look at twisted.enterprise.adbapi and the enterprise howto.

Alternatively, have some way to signal to your threads that they should
shutdown cleanly.  I'm assuming your thread does something like:

    while 1:
        nextTask = queue.get()  # queue is a Queue.Queue instance
        process(nextTask)

You could change it to:

    while 1:
        nextTask = queue.get()  # queue is a Queue.Queue instance
        if nextTask is None:
            break
        process(nextTask)

And then all you need to do is make sure you add a None to your threads'
queues when you shutdown, e.g. from stopService.  I've used this method in
the past to shutdown worker threads -- I didn't want them to finish
prematurely, because otherwise there was a risk that the data they were
writing to the DB would get lost.  So I used this sort of explicit
notification, rather than Python's thread.setDaemonic(1).

For reader threads, obviously data loss isn't a problem, so you could just
set those to be daemonic -- although I was creating my threads myself,
rather than using callInThread.  If you use callInThread, do it the way
Itamar suggests: send functions that do their task then exit.  callInThread
maintains a threadpool to service those functions quickly (with a maximum
size to prevent too many running at once).  Otherwise, if you want to do
your own long-running thread, just create it yourself, and you can
setDaemonic on it if appropriate.

-Andrew.




From itamar at itamarst.org  Tue Dec  2 20:09:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 20:09:47 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203002640.GA25233@frobozz>
References: <1070387706.1168.205.camel@pascal>
	<20031202132836.0c370d7a.itamar@itamarst.org>
	<20031203002640.GA25233@frobozz>
Message-ID: <20031202200947.3366b145.itamar@itamarst.org>

On Wed, 3 Dec 2003 11:26:40 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> For reader threads, obviously data loss isn't a problem, so you could
> just set those to be daemonic -- although I was creating my threads
> myself,

This is a bad idea. It can cause fun stuff like segfaults on shutdown.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Dec  2 20:38:20 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 12:38:20 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031202200947.3366b145.itamar@itamarst.org>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031202200947.3366b145.itamar@itamarst.org>
Message-ID: <20031203013819.GB25233@frobozz>

On Tue, Dec 02, 2003 at 08:09:47PM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 3 Dec 2003 11:26:40 +1100
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> > For reader threads, obviously data loss isn't a problem, so you could
> > just set those to be daemonic -- although I was creating my threads
> > myself,
> 
> This is a bad idea. It can cause fun stuff like segfaults on shutdown.

It can?!  The standard library docs for the threading module give no
indication of this...

(The explicit shutdown request usually feels cleaner to me anyway, but I'm
surprised that calling setDaemon(1) could be dangerous)

-Andrew.




From jsbenson at bensonsystems.com  Tue Dec  2 20:58:35 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Tue, 2 Dec 2003 17:58:35 -0800
Subject: [Twisted-Python] how to best limit a given protocol to one instance (socket connection)?
Message-ID: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>

Hi, I'd like to ensure that only one client can get into my instance of
Protocol. I'm thinking of setting an "instances" attribute on the Factory
and losing the connection if it has already been incremented to 1, but I'm
wondering if there is something more forceful that says "server rejected
connection" that might be a twisted Factory or Protocol configuration
option.

Thanks in advance for any help.





From andrew-twisted at puzzling.org  Tue Dec  2 21:05:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 13:05:08 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203002640.GA25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz>
Message-ID: <20031203020508.GD25233@frobozz>

On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
> 
> You could change it to:
> 
>     while 1:
>         nextTask = queue.get()  # queue is a Queue.Queue instance
>         if nextTask is None:
>             break
>         process(nextTask)

Or as exarkun pointed out on IRC:

<exarkun> reactor.callInThread(itertools.imap, process, iter(queue.get, None))
<exarkun> Where else can you find a generalized one line thread-worker
          implementation?

Although you don't need Twisted for that, you could probably do:

    threading.Thread(target=itertools.imap, args=(process, iter(queue.get, None)))

;)

-Andrew.




From exarkun at intarweb.us  Tue Dec  2 21:10:59 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 21:10:59 -0500
Subject: [Twisted-Python] how to best limit a given protocol to one instance (socket connection)?
In-Reply-To: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>
References: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>
Message-ID: <20031203021059.GA4679@intarweb.us>

On Tue, Dec 02, 2003 at 05:58:35PM -0800, John Benson wrote:
> Hi, I'd like to ensure that only one client can get into my instance of
> Protocol. I'm thinking of setting an "instances" attribute on the Factory
> and losing the connection if it has already been incremented to 1, but I'm
> wondering if there is something more forceful that says "server rejected
> connection" that might be a twisted Factory or Protocol configuration
> option.

  You could turn off the listening port after the first connection.

    class Factory(ServerFactory):
	port = None
        def buildProtocol(self, addr):
            if self.port is not None:
                self.port.stopListening()
                self.port = None
            else:
                # This is necessary in case multiple
                # connections are made before the call
                # to stopListening above is made.
                return None
            ...


    f = Factory()
    f.port = reactor.listenTCP(port, f)

  This will refuse *almost* all connections after the first.  It is still
possible that two or more might arrive at nearly the same time and both be
accept()'d, but after buildProtocol runs for the first time, no further
connections will be able to be made, as the listening socket will not longer
be listening.

  I'm not sure if there's a way to eliminate the possibility of multiple
connections being made close together.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/2551e868/attachment.pgp 

From itamar at itamarst.org  Tue Dec  2 21:12:23 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 21:12:23 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203013819.GB25233@frobozz>
References: <1070387706.1168.205.camel@pascal>
	<20031202132836.0c370d7a.itamar@itamarst.org>
	<20031203002640.GA25233@frobozz>
	<20031202200947.3366b145.itamar@itamarst.org>
	<20031203013819.GB25233@frobozz>
Message-ID: <20031202211223.49ed9955.itamar@itamarst.org>

On Wed, 3 Dec 2003 12:38:20 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> It can?!  The standard library docs for the threading module give no
> indication of this...

Happened to me in Python 2.0. Also note that the "exit thread on
shutdown" behaviour is OS and thread implementation specific, if I'm not
mistaken. Avoid.
 
-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From exarkun at intarweb.us  Tue Dec  2 21:15:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 21:15:01 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203020508.GD25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz>
Message-ID: <20031203021501.GB4679@intarweb.us>

On Wed, Dec 03, 2003 at 01:05:08PM +1100, Andrew Bennetts wrote:
> On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
> > 
> > You could change it to:
> > 
> >     while 1:
> >         nextTask = queue.get()  # queue is a Queue.Queue instance
> >         if nextTask is None:
> >             break
> >         process(nextTask)
> 
> Or as exarkun pointed out on IRC:
> 
> <exarkun> reactor.callInThread(itertools.imap, process, iter(queue.get, None))
> <exarkun> Where else can you find a generalized one line thread-worker
>           implementation?
> 
> Although you don't need Twisted for that, you could probably do:
> 
>     threading.Thread(target=itertools.imap, args=(process, iter(queue.get, None)))
> 

  This makes using threads far, far too easy.  Luckily for everyone, on a
second reading, I don't think these will work.  imap needs something to
iterate the object it returns.  Both of the above solutions will simply
create an itertools.imap object and then do nothing with it :)

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/9a4b757f/attachment.pgp 

From bob at redivi.com  Tue Dec  2 21:46:20 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 21:46:20 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203021501.GB4679@intarweb.us>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us>
Message-ID: <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>


On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:

> On Wed, Dec 03, 2003 at 01:05:08PM +1100, Andrew Bennetts wrote:
>> On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
>>>
>>> You could change it to:
>>>
>>>     while 1:
>>>         nextTask = queue.get()  # queue is a Queue.Queue instance
>>>         if nextTask is None:
>>>             break
>>>         process(nextTask)
>>
>> Or as exarkun pointed out on IRC:
>>
>> <exarkun> reactor.callInThread(itertools.imap, process, 
>> iter(queue.get, None))
>> <exarkun> Where else can you find a generalized one line thread-worker
>>           implementation?
>>
>> Although you don't need Twisted for that, you could probably do:
>>
>>     threading.Thread(target=itertools.imap, args=(process, 
>> iter(queue.get, None)))
>>
>
>   This makes using threads far, far too easy.  Luckily for everyone, 
> on a
> second reading, I don't think these will work.  imap needs something to
> iterate the object it returns.  Both of the above solutions will simply
> create an itertools.imap object and then do nothing with it :)

What about list as the function, and itertools.imap as the argument to 
that function?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/73f6abd0/attachment.bin 

From itamar at itamarst.org  Tue Dec  2 21:53:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 21:53:36 -0500
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
Message-ID: <20031202215336.3f62d869.itamar@itamarst.org>

TwistedJava is an implementation of Perspective Broker for java.

This release is basically identical to 0.6, except it adds a login()
method which supports logging to new style Twisted 1.1 PB servers.

http://itamarst.org/software/twistedjava/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Dec  2 22:10:20 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 14:10:20 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>
Message-ID: <20031203031020.GF25233@frobozz>

On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> 
> On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
> 
> >  This makes using threads far, far too easy.  Luckily for everyone, 
> >on a
> >second reading, I don't think these will work.  imap needs something to
> >iterate the object it returns.  Both of the above solutions will simply
> >create an itertools.imap object and then do nothing with it :)
> 
> What about list as the function, and itertools.imap as the argument to 
> that function?

Or maybe sets.Set?  So long as process always returns the same value
(probably None), this won't eat memory the way list would...

-Andrew.




From phil at bubblehouse.org  Tue Dec  2 22:20:25 2003
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 2 Dec 2003 22:20:25 -0500 (EST)
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
In-Reply-To: <20031202215336.3f62d869.itamar@itamarst.org>
References: <20031202215336.3f62d869.itamar@itamarst.org>
Message-ID: <56478.192.168.0.1.1070421625.squirrel@192.168.0.2>

HOORAY!!!!

thanks itamar!

-phil



> TwistedJava is an implementation of Perspective Broker for java.
>
> This release is basically identical to 0.6, except it adds a login()
> method which supports logging to new style Twisted 1.1 PB servers.
>
> http://itamarst.org/software/twistedjava/
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 



From exarkun at intarweb.us  Tue Dec  2 22:46:27 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 22:46:27 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203031020.GF25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz>
Message-ID: <20031203034627.GA4962@intarweb.us>

On Wed, Dec 03, 2003 at 02:10:20PM +1100, Andrew Bennetts wrote:
> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> > 
> > On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
> > 
> > >  This makes using threads far, far too easy.  Luckily for everyone, 
> > >on a
> > >second reading, I don't think these will work.  imap needs something to
> > >iterate the object it returns.  Both of the above solutions will simply
> > >create an itertools.imap object and then do nothing with it :)
> > 
> > What about list as the function, and itertools.imap as the argument to 
> > that function?
> 
> Or maybe sets.Set?  So long as process always returns the same value
> (probably None), this won't eat memory the way list would...
> 

  Ssssssssssshhhhhhhhhhhh

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/cda4de05/attachment.pgp 

From golux at comcast.net  Tue Dec  2 22:49:46 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 02 Dec 2003 22:49:46 -0500
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
In-Reply-To: <20031202215336.3f62d869.itamar@itamarst.org>
References: <20031202215336.3f62d869.itamar@itamarst.org>
Message-ID: <3FCD5D5A.1090107@comcast.net>

Cool!  Thanks, Itamar ... I'm hoping to entice some
Java programmers with whose app my Twisted app
needs to communicate to try this out.  (Okay, we'll
probably do some dumb SOAP stuff first ....)
I like the idea of using PB much better than
any alternative I know of.

Cheers,
Steve.




From itamar at itamarst.org  Tue Dec  2 22:53:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 22:53:25 -0500
Subject: [Twisted-Python] Please try - experimental wxPython reactor
Message-ID: <20031202225325.7bcdde29.itamar@itamarst.org>

Attached is an attempt at making a wxPython reactor, allowing easy
integration of Twisted applications with wxPython. I'm hoping it solves
the issues that the current wx support has. See docstring for usage.

Please, if you have a wxPython/Twisted app, try this out and tell me if
it works.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wxreactor.py
Type: application/octet-stream
Size: 2912 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/549d701d/attachment.obj 

From bob at redivi.com  Tue Dec  2 22:58:05 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 22:58:05 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203031020.GF25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz>
Message-ID: <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>


On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>
>> On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
>>
>>>  This makes using threads far, far too easy.  Luckily for everyone,
>>> on a
>>> second reading, I don't think these will work.  imap needs something 
>>> to
>>> iterate the object it returns.  Both of the above solutions will 
>>> simply
>>> create an itertools.imap object and then do nothing with it :)
>>
>> What about list as the function, and itertools.imap as the argument to
>> that function?
>
> Or maybe sets.Set?  So long as process always returns the same value
> (probably None), this won't eat memory the way list would...

sets.Set eats more memory than list does (it's a python class that uses 
a dict for storage).. if you don't want to return anything useful 
there's always reduce(lambda a,b:None, iterable)

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031202/607ec0e3/attachment.bin 

From uwe at oss4u.com  Wed Dec  3 00:36:35 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Tue, 2 Dec 2003 21:36:35 -0800
Subject: [Twisted-Python] Please try - experimental wxPython reactor
In-Reply-To: <20031202225325.7bcdde29.itamar@itamarst.org>
References: <20031202225325.7bcdde29.itamar@itamarst.org>
Message-ID: <200312022136.35980.uwe@oss4u.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Itamar,

on a quick look it seems to work. I noticed it's a bit slow on the display 
(client) side. That may probably be tweaked with the timer setting in the 
WxReactor class. My application actually loads a 1.5 MB wx.Xressource file, 
smaller applications might not have that problem. 

I noted that in my app no labels (wx.StaticText) show up. This can be due to 
the timing issue above, or simply because I only quickly disabled my timer 
solution and put the reactor in. I didn't really do a comprehensive test. 
wxreactor needs the latest RC2 and I'm still using pre 1.1.0 - so I certainly 
get a bunch of depreciation warnings.
Whenever I've got time to switch my app over to 1.1.x I'll do more 
comprehensive testing.
At least it doesn't get stuck when entering a modal dialog or a pulldown menu.
I currently just don't have the time/manpower to pull my application to the 
new API. Maybe it's also not the brightest idea to test with a huge 
application (currently some 10 MB sourcecode)
But it's definitely a good start. I'll try using it on smaller projects that I 
can start off with 1.1.x
But it looks very promising to finally have support out of the box.
I'll also give it a shot on windows.

Suggestion: I'll try to tweak the timer settings in the next days. If that 
shows the desired effect, maybe you can parametrize the settings to allow 
tweaking it to application needs.

UC


On Tuesday 02 December 2003 07:53 pm, Itamar Shtull-Trauring wrote:
> Attached is an attempt at making a wxPython reactor, allowing easy
> integration of Twisted applications with wxPython. I'm hoping it solves
> the issues that the current wx support has. See docstring for usage.
>
> Please, if you have a wxPython/Twisted app, try this out and tell me if
> it works.

- --
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (GNU/Linux)

iD8DBQE/zXZjjqGXBvRToM4RAtahAJ9B4XLGFty1dB9V7cAdeo9uhmb1mQCfW0hn
YhovWMPxanVk/3gq+Hb62Rc=
=ZlIn
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Wed Dec  3 01:26:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 17:26:09 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>
Message-ID: <20031203062609.GI25233@frobozz>

On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
> >On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> >>
> >>What about list as the function, and itertools.imap as the argument to
> >>that function?
> >
> >Or maybe sets.Set?  So long as process always returns the same value
> >(probably None), this won't eat memory the way list would...
> 
> sets.Set eats more memory than list does (it's a python class that uses 
> a dict for storage).. if you don't want to return anything useful 
> there's always reduce(lambda a,b:None, iterable)

Uh, not if the iterable returns the same element repeatedly.  Compare the
memory use of:

    sets.Set(itertools.repeat(None))

vs.

    list(itertools.repeat(None))

Your idea with reduce is better -- except that it uses a lambda.  Somehow
that feels like cheating ;)

So, to sum up:

    reactor.callInThread(sets.Set, itertools.imap(process, iter(queue.get, None)))

Or:
    threading.Thread(
        target=sets.Set,
        args=(itertools.imap(process, iter(queue.get, None)),)
    )

Is our generic one-line worker thread?  What about catching possible
exceptions from process?  ;)

-Andrew.




From bob at redivi.com  Wed Dec  3 02:19:33 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 02:19:33 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203062609.GI25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com> <20031203062609.GI25233@frobozz>
Message-ID: <0B388670-2561-11D8-B196-000A95686CD8@redivi.com>


On Dec 3, 2003, at 1:26 AM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
>> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
>>> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>>>
>>>> What about list as the function, and itertools.imap as the argument 
>>>> to
>>>> that function?
>>>
>>> Or maybe sets.Set?  So long as process always returns the same value
>>> (probably None), this won't eat memory the way list would...
>>
>> sets.Set eats more memory than list does (it's a python class that 
>> uses
>> a dict for storage).. if you don't want to return anything useful
>> there's always reduce(lambda a,b:None, iterable)
>
> Uh, not if the iterable returns the same element repeatedly.  Compare 
> the
> memory use of:
>
>     sets.Set(itertools.repeat(None))
>
> vs.
>
>     list(itertools.repeat(None))
>
> Your idea with reduce is better -- except that it uses a lambda.  
> Somehow
> that feels like cheating ;)

Fine, no lambda, cheaper than Set (memory and cpu):
	reactor.callInThread(reduce, {}.get, itertools.imap(process, 
iter(queue.get, None)))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031203/ee20bc13/attachment.bin 

From bob at redivi.com  Wed Dec  3 02:31:04 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 02:31:04 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203062609.GI25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com> <20031203062609.GI25233@frobozz>
Message-ID: <A6ECC27A-2562-11D8-B196-000A95686CD8@redivi.com>


On Dec 3, 2003, at 1:26 AM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
>> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
>>> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>>>
>>>> What about list as the function, and itertools.imap as the argument 
>>>> to
>>>> that function?
>>>
>>> Or maybe sets.Set?  So long as process always returns the same value
>>> (probably None), this won't eat memory the way list would...
>>
>> sets.Set eats more memory than list does (it's a python class that 
>> uses
>> a dict for storage).. if you don't want to return anything useful
>> there's always reduce(lambda a,b:None, iterable)
>
> Uh, not if the iterable returns the same element repeatedly.  Compare 
> the
> memory use of:
>
>     sets.Set(itertools.repeat(None))
>
> vs.
>
>     list(itertools.repeat(None))
>
> Your idea with reduce is better -- except that it uses a lambda.  
> Somehow
> that feels like cheating ;)

(ignore my last message that used {}.get -- that breaks on unhashable 
things .. this should be faster anyways)

	reactor.callInThread(reduce, operator.is_, itertools.imap(process, 
iter(queue.get, None)))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031203/09a13b15/attachment.bin 

From nico at tekNico.net  Wed Dec  3 07:20:37 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 03 Dec 2003 13:20:37 +0100
Subject: [Twisted-Python] t.web.proxy ignores response body if no Content-Length
Message-ID: <3FCDD515.1070407@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The connectionLost method of t.web.proxy.ProxyClient neglects to call its
namesake in the t.protocols.http.HTTPClient superclass.

The later thoughtfully calls self.handleResponseEnd() when the connection is
lost; such behaviour is needed as a fallback, when a broken web server (the so
called "Apache Coyote 1.0" inside Jakarta Tomcat 4.0) omits to send a
"Content-Length" header (nor a "Transfer-Encoding" one) with a non-null (and
non-chunked) response body.

Keeping with the old, and always valid, Internet adage:

"Be strict in what you send, and lenient in what you receive"

or some such. :^)

Opened bug #419 in the tracker for this, with one-line patch attached.


- --
"I can think of two reasons for running Windows software.
A: Your fascist employer is a nitwit and approves of nonsense
like Lotus Notes, which oughta be illegal.
B: You're running games." -- Helgi Hrafn Gunnarsson

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQE/zdUUXv0hgDImBm4RAguXAJ9q46fE/MFFYVFmCIZzKm6DISr1XgCgnPqd
jyMtje1UQbrje8S633G8x9M=
=s0PV
-----END PGP SIGNATURE-----




From lafou at wanadoo.fr  Wed Dec  3 14:54:48 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Wed, 3 Dec 2003 20:54:48 +0100
Subject: [Twisted-Python] deferred
In-Reply-To: <007901c3b927$50ac2d30$0401a8c0@RAZOR>
References: <000001c3b91f$1a231f60$687ba8c0@vicky> <007901c3b927$50ac2d30$0401a8c0@RAZOR>
Message-ID: <200312032054.48364.lafou@wanadoo.fr>

you should read the post again... 

On Tuesday 02 December 2003 23:54, Thomas Weholt wrote:
> Your error has nothing to do with deferred. The error is coming from MySQL
> and it probably means your trying to insert duplicate values in a primary
> key field or some other field which must be uniqe in your table. 
> Thomas
> ?
> ?




From mporter at despammed.com  Wed Dec  3 17:50:12 2003
From: mporter at despammed.com (Michael Porter)
Date: Wed, 3 Dec 2003 22:50:12 -0000
Subject: [Twisted-Python] Please try - experimental wxPython reactor
References: <20031202225325.7bcdde29.itamar@itamarst.org>
Message-ID: <004601c3b9ef$d0376740$0201a8c0@dan>

I had to get a newer twisted\python\runtime.py from 1.1.1rc2 as I'm running
Twisted 1.1.0 but with that in place it seems to work well with my network
jukebox app.

My wx usage is fairly trivial (just a front-end to configure and run the
server) but I can now bring up the system menu or drag the window about
without the server freezing up!

Thanks,

Mike.


----- Original Message -----
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, December 03, 2003 3:53 AM
Subject: [despammed] [Twisted-Python] Please try - experimental wxPython
reactor


> Attached is an attempt at making a wxPython reactor, allowing easy
> integration of Twisted applications with wxPython. I'm hoping it solves
> the issues that the current wx support has. See docstring for usage.
>
> Please, if you have a wxPython/Twisted app, try this out and tell me if
> it works.
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>




From slyphon at twistedmatrix.com  Wed Dec  3 20:48:56 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 03 Dec 2003 20:48:56 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
Message-ID: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>

This may seem obvious to everyone, but I had an insight into the use of
deferreds today. It would always confuse me, I've got a method that's
going to take quite a while to run. When something calls it, i want to
immediately return a deferred. But how to accomplish this? returns (most
frequently) come at the *end* of a function!

I was thinking about it like this (hence my confusion):

def aLongWait(stuff):		# obviously incorrect
    d = defer.Deferred()   
    return d
    result = doSomeStuffHere(stuff)
    d.callback(result)


the little trick I figured out today is as follows:

def aLongWait(stuff):
    d = defer.Deferred()
    def _():
         result = doSomeStuffHere(stuff)
         d.callback(result)
    reactor.callLater(0, _)
    return d

it's almost like a deferred block (in the try/except sense). It creates
a deferred that is (pretty much) guaranteed only to be called by
aLongWait(), it returns that deferred, then in the next reactor
iteration, it runs the steps that will have to wait a long time to be
processed. at the end of doSomeStuffHere() it calls back the deferred
with the result.

Neat huh?

This is going to clean up about 50% of the deferreds i use! (before i
was defining an instance variable deferred and using and resetting it if
i needed another one, which was messy)

Anyway, just adding to the collective knowledge base.

Cheers,
- Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031203/a645a246/attachment.pgp 

From bob at redivi.com  Wed Dec  3 21:38:50 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 21:38:50 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <FE2F2E77-2602-11D8-A6E9-000A95686CD8@redivi.com>


On Dec 3, 2003, at 8:48 PM, Jonathan Simms wrote:

> This may seem obvious to everyone, but I had an insight into the use of
> deferreds today. It would always confuse me, I've got a method that's
> going to take quite a while to run. When something calls it, i want to
> immediately return a deferred. But how to accomplish this? returns 
> (most
> frequently) come at the *end* of a function!
>
> I was thinking about it like this (hence my confusion):
>
> def aLongWait(stuff):		# obviously incorrect
>     d = defer.Deferred()
>     return d
>     result = doSomeStuffHere(stuff)
>     d.callback(result)
>
>
> the little trick I figured out today is as follows:
>
> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

That's still totally wrong.  You either need to defer doSomeStuffHere 
to a thread (reactor.callInThread), or refactor "doSomeStuffHere" into 
an iterator that only does a little bit each call.. and then call it 
once a runloop until it's done, and when it's done you do the callback 
with the result.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031203/5554079c/attachment.bin 

From itamar at itamarst.org  Wed Dec  3 21:37:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 3 Dec 2003 21:37:38 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from
 a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031203213738.054df79f.itamar@itamarst.org>

On Wed, 03 Dec 2003 20:48:56 -0500
Jonathan Simms <slyphon at twistedmatrix.com> wrote:

> I was thinking about it like this (hence my confusion):
> 
> def aLongWait(stuff):		# obviously incorrect
>     d = defer.Deferred()   
>     return d
>     result = doSomeStuffHere(stuff)
>     d.callback(result)
> 
> 
> the little trick I figured out today is as follows:
> 
> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

Why is this any different? all it does is make d get its result slightly
afterwards. It doesn't change anything fundemantal. It's virtually
identical to:

def aLongWait(stuff):
    result = doSomeStuffHere(stuff)
    d = defer.Deferred()
    d.callback(result)
    return d

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From warner at lothar.com  Wed Dec  3 23:42:23 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 03 Dec 2003 20:42:23 -0800 (PST)
Subject: [Twisted-Python] way of dealing with returning a deferred from
 a method/function
Message-ID: <20031203.204223.59466751.warner@lothar.com>

> On Dec 3, 2003, at 8:48 PM, Jonathan Simms wrote:
>
>> This may seem obvious to everyone, but I had an insight into the use of
>> deferreds today. It would always confuse me, I've got a method that's
>> going to take quite a while to run.

It occurred to me that the wording here ("quite a while to run") is
significant, and perhaps we should take a closer look at the Deferred
documentation because it might be fueling some of the confusion surrounding
when and where Deferreds will help you.

 bad language:
   The function takes a long time to run.

 good language:
   The function will not be complete for a long time.
   The operation will not finish right away.

Functions which take a long time to run, like "for i in range(10**10):", are
going to take many seconds of continuous CPU time to finish. To do something
else while it is running means time-slicing (run it in a thread), or
task-switching (break it into pieces and chain them with callLater so that
other events can be processed in between the chunks), or a different form of
task-switching (run the operation in a separate OS process and watch for the
child to exit). These are all fundamentally the same technique, the only
difference is who gets to decide how the CPU cycles are allocated and when
the job-switches take place.


A function which may not be complete for a while, like "waitForUserInput()",
or "waitForWebResponse()", use a little CPU to set up the operation and then
sits around doing nothing until somebody else does something (at least they
do when implemented in the old-style synchronous single-tasking blocking-IO
way). They aren't burning CPU in the meantime: they are waiting for someone
else to burn CPU (the web server, the human thinking about which button they
want to push), or for packets to reach their destination and back, or
whatever. Because the operation is not consuming CPU time, and because you
aren't really sure exactly when the operation is going to be complete, it
feels silly to sit around and do nothing for all that time. This is where
Deferreds are useful. They provide a standard idiom for "tell me when
something happens" callbacks.

The important distinction to make is that, in the Deferred case, the
operation is completed by some *external* event (external to the function
that creates the Deferred, that is). It could be network activity (in which
case the event is when the select loop sees the readable socket and calls
dataReceived()), it could be a callLater timer expiring, it could be some
third piece of code responding to an externality and running your callback,
allowing your Deferred to complete. If the completing activity were performed
by the same code that generated (and then returned) the Deferred, you might
as well just do the entire operation synchronously.


The term "blocking" is frequently used in this context. A function that has
to sort a million numbers will take a long time to run, but it is not usually
described as blocking, because there is no way it could return sooner than
that and still get its job done. A function that sends a packet and
busy-waits until another packet comes back *is* said to be blocking.

It's all a question of terminology :)

 -Brian



From exarkun at intarweb.us  Thu Dec  4 00:21:11 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 00:21:11 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <20031203213738.054df79f.itamar@itamarst.org>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com> <20031203213738.054df79f.itamar@itamarst.org>
Message-ID: <20031204052111.GA9378@intarweb.us>

On Wed, Dec 03, 2003 at 09:37:38PM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 03 Dec 2003 20:48:56 -0500
> Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> 
> > [snip]
> > 
> > def aLongWait(stuff):
> >     d = defer.Deferred()
> >     def _():
> >          result = doSomeStuffHere(stuff)
> >          d.callback(result)
> >     reactor.callLater(0, _)
> >     return d
> 
> Why is this any different? all it does is make d get its result slightly
> afterwards. It doesn't change anything fundemantal. It's virtually
> identical to:
> 
> def aLongWait(stuff):
>     result = doSomeStuffHere(stuff)
>     d = defer.Deferred()
>     d.callback(result)
>     return d
> 

  which is better expressed as:

    def aLongWait(stuff):
        return defer.succeed(doSomeStuffHere(stuff))

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/94116f96/attachment.pgp 

From rdrb at 123.cl  Thu Dec  4 09:09:36 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 11:09:36 -0300
Subject: [Twisted-Python] Generators as MicroThread and Twisted
Message-ID: <44680e4472dc.4472dc44680e@noborrar.co.cl>

Hi,

Is there any relation between the generators microthread execution idea and the Twisted deffered/reactors schema ?

http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

I'm observing how circle.org.au is reinventing the wheel. It does it very fine, but can be twisted used ? How does one idea relates to the other ? Pro/Cons ?

Thanks.
RodrigoB.




From rdrb at 123.cl  Thu Dec  4 09:21:17 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 11:21:17 -0300
Subject: [Twisted-Python] Twisted inclusion in other software
Message-ID: <442a6b448472.448472442a6b@noborrar.co.cl>

It looks like, but I need to be sure.
Twisted is 99% pure python code. For each optimised C module there is a Python remplacement.

So, it is absolutelly viable to include some Twisted modules directly into another app, eliminating the requirement of "please install www.twistedmatrix.com" ?

For example: twisted.internet and twisted...woven ?

Obviously product references will be explicited in the Readme.

Can this be done ?
Have it be done  ?

Except for Banana application, it is a solution for the distribution and deployement problem ?

Thanks.
RodrigoB.





From exarkun at intarweb.us  Thu Dec  4 11:45:34 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 11:45:34 -0500
Subject: [Twisted-Python] Generators as MicroThread and Twisted
In-Reply-To: <44680e4472dc.4472dc44680e@noborrar.co.cl>
References: <44680e4472dc.4472dc44680e@noborrar.co.cl>
Message-ID: <20031204164534.GA10492@intarweb.us>

On Thu, Dec 04, 2003 at 11:09:36AM -0300, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:
> Hi,
> 
> Is there any relation between the generators microthread execution idea
> and the Twisted deffered/reactors schema ?
> 
> http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

  Not a very strong one.  A subpackage in twisted, flow, uses some similar
ideas, and while using twisted.flow can lead to much simplified code, it is
not widely used throughout Twisted itself.

> 
> I'm observing how circle.org.au is reinventing the wheel. It does it very
> fine, but can be twisted used ? How does one idea relates to the other ?
> Pro/Cons ?

  I can't resolve this domain name...

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/660a307a/attachment.pgp 

From exarkun at intarweb.us  Thu Dec  4 11:48:45 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 11:48:45 -0500
Subject: [Twisted-Python] Twisted inclusion in other software
In-Reply-To: <442a6b448472.448472442a6b@noborrar.co.cl>
References: <442a6b448472.448472442a6b@noborrar.co.cl>
Message-ID: <20031204164845.GB10492@intarweb.us>

On Thu, Dec 04, 2003 at 11:21:17AM -0300, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:
> It looks like, but I need to be sure.
> Twisted is 99% pure python code. For each optimised C module there is a Python remplacement.
> 
> So, it is absolutelly viable to include some Twisted modules directly into
> another app, eliminating the requirement of "please install
> www.twistedmatrix.com" ?
> 
> For example: twisted.internet and twisted...woven ?
> 
> Obviously product references will be explicited in the Readme.
> 
> Can this be done ?
> Have it be done  ?

  Sure, there is no problem distributed Twisted with another project.  I
think that, even if Twisted did depend on C extensions (which, as you
pointed out, it does not), it could be distributed with an application which
depended on it.

  Do I know of any projects that do this?  Hmmm.  Not really... I can think
of one that gives you the option to download an install Twisted
(automatically) during its own installation process, but that's all.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/ff192620/attachment.pgp 

From fdrake at acm.org  Thu Dec  4 12:05:27 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Thu, 4 Dec 2003 12:05:27 -0500
Subject: [Twisted-Python] Example of FTPClient.stor()?
Message-ID: <16335.26967.282893.977777@grendel.fdrake.net>

Does anyone have a (short) example using FTPClient.stor()?  I'm pretty
new to Twisted, and am still getting the hang of the model of using
Deferreds.

(The presence of both stor() and storeFile() in the docs is confusing
as well; a quick glance through twisted.protocols.ftp's source makes
me think that stor() is the preferred name, and storeFile() is an
implementation detail.  Is that right?)

Thanks!


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From bob at redivi.com  Thu Dec  4 12:32:00 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 4 Dec 2003 12:32:00 -0500
Subject: [Twisted-Python] Generators as MicroThread and Twisted
In-Reply-To: <44680e4472dc.4472dc44680e@noborrar.co.cl>
References: <44680e4472dc.4472dc44680e@noborrar.co.cl>
Message-ID: <C4CC741B-267F-11D8-A6E9-000A95686CD8@redivi.com>


On Dec 4, 2003, at 9:09 AM, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Is there any relation between the generators microthread execution 
> idea and the Twisted deffered/reactors schema ?
>
> http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

You can integrate a "generator microthread" into Twisted (with 
appropriate wrappers).  One of these wrappers is twisted.flow.

> I'm observing how circle.org.au is reinventing the wheel. It does it 
> very fine, but can be twisted used ? How does one idea relates to the 
> other ? Pro/Cons ?

circle.org.au?  I have no idea what you're talking about.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/89f383ad/attachment.bin 

From oisin at enginesofcreation.ie  Thu Dec  4 12:20:30 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Thu, 04 Dec 2003 17:20:30 +0000
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <16335.26967.282893.977777@grendel.fdrake.net>
References: <16335.26967.282893.977777@grendel.fdrake.net>
Message-ID: <3FCF6CDE.7040604@enginesofcreation.ie>

Fred L. Drake, Jr. wrote:

>Does anyone have a (short) example using FTPClient.stor()?  I'm pretty
>new to Twisted, and am still getting the hang of the model of using
>Deferreds.
>
>(The presence of both stor() and storeFile() in the docs is confusing
>as well; a quick glance through twisted.protocols.ftp's source makes
>me think that stor() is the preferred name, and storeFile() is an
>implementation detail.  Is that right?)
>
>Thanks!
>
>
>  -Fred
>
>  
>
Hi Fred,

I had trouble grappling with this  as well. As far as I remember stro() 
just refers to
the storeFile() function in the code.

Attached should be an example of the final solution I came up with to do 
a storeFile().

Hopefully this is of some use to you.

All the best,

om



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ftpclient.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/d43a4251/attachment.txt 

From fdrake at acm.org  Thu Dec  4 12:57:49 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Thu, 4 Dec 2003 12:57:49 -0500
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <3FCF6CDE.7040604@enginesofcreation.ie>
References: <16335.26967.282893.977777@grendel.fdrake.net>
	<3FCF6CDE.7040604@enginesofcreation.ie>
Message-ID: <16335.30109.255125.794299@grendel.fdrake.net>

Oisin Mulvihill writes:
 > I had trouble grappling with this  as well. As far as I remember stro() 
 > just refers to
 > the storeFile() function in the code.

In the FTPClient implementation, yes.  It doesn't exist in IFTPShell
or FTPAnonymousShell though, which is what makes me think that it is
either a legacy name for the method maintained for backward
compatibility (in which case a comment would clarify immensely), or an
accident of implementation (in which case the storeFile() name can
probably be removed or documented differently).  If neither of those
is the case, then it needs better documentation.

 > Attached should be an example of the final solution I came up with to do 
 > a storeFile().
 > 
 > Hopefully this is of some use to you.

Thanks!  I'll take a look at your client code.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From matthew.s.hegedus at lmco.com  Thu Dec  4 13:03:19 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Thu, 04 Dec 2003 12:03:19 -0600
Subject: [Twisted-Python] Using Twisted in a network project
Message-ID: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>

Howdy all,

Here's my problem: I'm in a situation where applications on a LAN need to be
able to transmit UDP packets to other apps on the same LAN and on other LANS
acroos the WAN. On the WAN there may be many routers in between that are not
configured for multicast and cannot be reconfigured by users interested in
multicasting. So multicast is out, and we are left with broadcast and
point-to-point transmissions. For performance concerns, it's not viable to
have each application do a point-to-point transmission to all other apps
that are not on the same subnet. So I am left with a
broadcast/point-to-point compromise.

My potential solution: Have a system (let's call it "Custom Router X")
sitting on each LAN with the apps running. Custom Router 1's purpose will be
to run code that grabs the applications' broadcasted UDP packets off of the
LAN, send the UDP packets point-to-point to Custom Router 2..N (where N is
the number of non-local LANS where these interesting apps are running) on
the non-local LANS, and listen for point-to-point UDP packets to
re-broadcast locally received from any of the other Custom Router's.

I would like to use Twisted if I could to write the code running on these
Custom Routers to achieve what I've described. 

Question #1: Does this idea sound rediculous?
Question #2: If so, does anyone have any better suggestions?
Question #3: If this idea is reasonable in theory, should I be worried about
Twisted/Python network performance?

Thank you and Gigem,

Matthew



From mporter at despammed.com  Thu Dec  4 16:13:22 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 4 Dec 2003 21:13:22 -0000
Subject: [Twisted-Python] Twisted inclusion in other software
References: <442a6b448472.448472442a6b@noborrar.co.cl>
Message-ID: <004101c3baab$7c78a080$0201a8c0@dan>

My network jukebox app, mpJuke (http://www.mpweb.dsl.pipex.com/) does this.
I package up Twisted and a number of other Python packages and 'freeze' them
using cx_Freeze so that the end-user doesn't need to install anything extra
(even Python).

I've only done this on Windows but it should work just as well on Unix.

Mike.

----- Original Message -----
From: "RITA Y/O RODRIGO DIAZ Y/O BENENSON" <rdrb at 123.cl>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, December 04, 2003 2:21 PM
Subject: [despammed] [Twisted-Python] Twisted inclusion in other software


> It looks like, but I need to be sure.
> Twisted is 99% pure python code. For each optimised C module there is a
Python remplacement.
>
> So, it is absolutelly viable to include some Twisted modules directly into
another app, eliminating the requirement of "please install
www.twistedmatrix.com" ?
>
> For example: twisted.internet and twisted...woven ?
>
> Obviously product references will be explicited in the Readme.
>
> Can this be done ?
> Have it be done  ?
>
> Except for Banana application, it is a solution for the distribution and
deployement problem ?
>
> Thanks.
> RodrigoB.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ----------------------------------------------
> Filtered by despammed.com.  Tracer: JAA257401070549977
> Consider a PayPal donation to help Despammed
> stay a step or two ahead of the bad guys.
> A new PayPal donation button is now on the
> home page.  Thanks!
>




From warner at lothar.com  Thu Dec  4 16:43:57 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 04 Dec 2003 13:43:57 -0800 (PST)
Subject: [Twisted-Python] Using Twisted in a network project
Message-ID: <20031204.134357.118735369.warner@lothar.com>

"Hegedus, Matthew S" <matthew.s.hegedus at lmco.com> writes:

> I would like to use Twisted if I could to write the code running on these
> Custom Routers to achieve what I've described. 

Sounds perfectly reasonable. That's the same approach used by standard IPv4
multicast routers. Most of the multicast routing protocols are concerned with
optimizing a tree of possible sources and members: your design simplifies
that to a single source and a strict two-level hierarchy (level 1 are the
distant gateway router, level 2 is the set of remote endpoints), which should
remove much of the complexity from those protocols.

You'll need to implement a protocol from the end point to their local
"router" (a host that can multicast to the end point and which is running
your router program) which says "I want to join group X". That router then
needs a protocol to the data source to say "somebody behind me wants to join
group X, please sign me up".

It will probably be easier to have the original data source do both the local
multicast and the series of remote-router UDP unicasts. (I'm assuming you're
writing the code on that end too). You can have a local-router too, but then
you have to coordinate an additional host.

Think of things in terms of trees of subscriptions. You probably have
reasonable multicast support within your local subnet (most OSes ship with
multicast-capable IP stacks), so use it (i.e. don't broadcast your local data
packets, because then you'll waste the time and interrupts of all the local
non-participating nodes). The data source should pick a multicast group
address, everyone local should join that group (the IP stack and the ethernet
hardware will take care of the details), the local router can join it too.
You'll need some kind of service advertisement so the remote routers and
remote nodes can know which groups they can join.

> Question #3: If this idea is reasonable in theory, should I be worried about
> Twisted/Python network performance?

Depends upon how much data you're sending and what kind of connection you
have to the outside world. Unless you've got a really nice pipe, it is likely
that Twisted running on reasonable hardware will be able to saturate it. The
local traffic is all multicast (one packet on the wire each), the remote
traffic to N remote routers is unicast (N packets on the wire each), so the
number of packets that your userspace code has to deal with is N+1 each, and
your upstream bandwidth has to handle N of those. Once you've got more than
two or three remote routers, N/(N+1) goes to 1 and Twisted doesn't have to
run any faster than it takes to saturate your upsteam pipe.

If you live on an OC-48 or something then you can set up multiple local
routers and have them decide amongst themselves which one should be
responsible for sending to each remote router.

sounds like fun,
 -Brian



From rdrb at 123.cl  Thu Dec  4 21:10:04 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 23:10:04 -0300
Subject: [Twisted-Python] The circle
Message-ID: <47294c474022.47402247294c@noborrar.co.cl>

Sorry,
the microthread usage was thinked to be used in,

http://thecircle.org.au

(not circle.org.au as mentioned)
(take a look, you could like it)


I think twisted.flow is very near from the original idea.

Thanks.
RodrigoB.





From bob at redivi.com  Thu Dec  4 22:15:45 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 4 Dec 2003 22:15:45 -0500
Subject: [Twisted-Python] The circle
In-Reply-To: <47294c474022.47402247294c@noborrar.co.cl>
References: <47294c474022.47402247294c@noborrar.co.cl>
Message-ID: <50DA0229-26D1-11D8-9690-000A95686CD8@redivi.com>


On Dec 4, 2003, at 9:10 PM, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Sorry,
> the microthread usage was thinked to be used in,
>
> http://thecircle.org.au
>
> (not circle.org.au as mentioned)
> (take a look, you could like it)
>
>
> I think twisted.flow is very near from the original idea.

Yeah, too bad you can't download or look at the CVS.  Savannah is down.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031204/aa8a225c/attachment.bin 

From andrew-twisted at puzzling.org  Thu Dec  4 22:27:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Dec 2003 14:27:56 +1100
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <16335.30109.255125.794299@grendel.fdrake.net>
References: <16335.26967.282893.977777@grendel.fdrake.net> <3FCF6CDE.7040604@enginesofcreation.ie> <16335.30109.255125.794299@grendel.fdrake.net>
Message-ID: <20031205032756.GA452@frobozz>

On Thu, Dec 04, 2003 at 12:57:49PM -0500, Fred L. Drake, Jr. wrote:
> 
> Oisin Mulvihill writes:
>  > I had trouble grappling with this  as well. As far as I remember stro() 
>  > just refers to
>  > the storeFile() function in the code.
> 
> In the FTPClient implementation, yes.  It doesn't exist in IFTPShell
> or FTPAnonymousShell though, which is what makes me think that it is
> either a legacy name for the method maintained for backward
> compatibility (in which case a comment would clarify immensely), or an
> accident of implementation (in which case the storeFile() name can
> probably be removed or documented differently).  If neither of those
> is the case, then it needs better documentation.

Currently the FTPClient and FTP (server) implementations don't share any
code (although ftp.py recently got a new maintainer, Jonathan Simms, who is
working on fixing this), so there's not much you can usefully infer by
comparing the server and client implementations at the moment. :/

I wrote the bulk of the FTPClient code, and if I recall correctly, I think I
intended 'storeFile' to be the preferred name, and 'stor' to be an alias for
people who know about the details of how FTP looks on the wire, or who were
already familiar with the standard library's ftplib.  In retrospect, I'm not
sure this was a good decision.

The implementation of stor is simply:

    stor = storeFile

so it doesn't matter which name you choose.

I think we should probably decide which name is preferred, clearly document
it, and deprecate the other one.  The same applies to retr/retrieveFile.

>  > Attached should be an example of the final solution I came up with to do 
>  > a storeFile().
>  > 
>  > Hopefully this is of some use to you.
> 
> Thanks!  I'll take a look at your client code.

Also, look twisted/test/test_ftp.py -- there's a testStor method in there
somewhere...

...well, there was.  Hmm.  CVS to the rescue:
    
    http://cvs.twistedmatrix.com/cvs/*checkout*/twisted/test/test_ftp.py?rev=1.32&content-type=text/plain

Jonathan -- what happened to testStor?

-Andrew.




From jsbenson at bensonsystems.com  Thu Dec  4 23:15:44 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Thu, 4 Dec 2003 20:15:44 -0800
Subject: [Twisted-Python] having trouble displaying Tkinter photo images with twisted, help?
Message-ID: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>

The following toy program has no trouble displaying a GIF image:

from twisted.internet import protocol, reactor, tksupport
import Tkinter
class FingerProtocol(protocol.Protocol):
    pass
class FingerFactory(protocol.ServerFactory):
    protocol = FingerProtocol
root = Tkinter.Tk()
tksupport.install(root)
iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
Tkinter.Button(image=iconimage).pack()
reactor.listenTCP(1079, FingerFactory())
reactor.run()

However, I have a larger program that gets a blank image when the

iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
Tkinter.Button(image=iconimage).pack()

code runs. I've tried moving the code around and come up with the same
result: no image, although a widget is created and displayed as a blank
area.

Has anyone run across this before, and is there a workaround?





From pje at telecommunity.com  Fri Dec  5 09:57:07 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 05 Dec 2003 09:57:07 -0500
Subject: [Twisted-Python] PyProtocols 0.9.2 Bug fix release
Message-ID: <5.1.0.14.0.20031205095450.02a75260@mail.telecommunity.com>

I goofed, missing a unit test for one of the new features: 
'protocols.Variation' was broken in the 0.9.1 release.  0.9.2 fixes the 
bug.  Sorry for the inconvenience.


PyProtocols Resources
---------------------

* Project home page:
    http://peak.telecommunity.com/PyProtocols.html

* Detailed Changes since the 0.9 release:
    http://peak.telecommunity.com/protocol_api/CHANGES.txt.html

* Release notes, installation instructions, and browsable API docs:
    http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
    http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
    http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
    http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
    http://cvs.eby-sarna.com/PyProtocols/ 




From exarkun at intarweb.us  Fri Dec  5 11:48:13 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 5 Dec 2003 11:48:13 -0500
Subject: [Twisted-Python] having trouble displaying Tkinter photo images with twisted, help?
In-Reply-To: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>
References: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>
Message-ID: <20031205164813.GA14468@intarweb.us>

On Thu, Dec 04, 2003 at 08:15:44PM -0800, John Benson wrote:
> The following toy program has no trouble displaying a GIF image:
> 
> from twisted.internet import protocol, reactor, tksupport
> import Tkinter
> class FingerProtocol(protocol.Protocol):
>     pass
> class FingerFactory(protocol.ServerFactory):
>     protocol = FingerProtocol
> root = Tkinter.Tk()
> tksupport.install(root)
> iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
> Tkinter.Button(image=iconimage).pack()
> reactor.listenTCP(1079, FingerFactory())
> reactor.run()
> 
> However, I have a larger program that gets a blank image when the
> 
> iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
> Tkinter.Button(image=iconimage).pack()
> 
> code runs. I've tried moving the code around and come up with the same
> result: no image, although a widget is created and displayed as a blank
> area.
> 
> Has anyone run across this before, and is there a workaround?
> 

  Just a guess - if the PhotoImage is garbage collected (No, the Button does
not hold a reference to it), the image data is freed and will
consequentially not be available for display.  Perhaps you need to stash a
reference to the PhotoImage somewhere?

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031205/496a74c8/attachment.pgp 

From glyph at twistedmatrix.com  Fri Dec  5 13:35:51 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 05 Dec 2003 13:35:51 -0500
Subject: [Twisted-Python] having trouble displaying Tkinter photo images
 with twisted, help?
In-Reply-To: <20031205164813.GA14468@intarweb.us>
References: <015501c3bae6$75a13750$8f0a500a@jsbwxp3> <20031205164813.GA14468@intarweb.us>
Message-ID: <3FD0D007.8090807@twistedmatrix.com>

Jp Calderone wrote:

>   Just a guess - if the PhotoImage is garbage collected (No, the Button does
> not hold a reference to it), the image data is freed and will
> consequentially not be available for display.  Perhaps you need to stash a
> reference to the PhotoImage somewhere?

Yeah, that's a well-known bug with Tkinter's image support.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 256 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031205/665ca119/attachment.pgp 

From ejy712 at comcast.net  Fri Dec  5 18:01:53 2003
From: ejy712 at comcast.net (Ed Young)
Date: Fri, 05 Dec 2003 18:01:53 -0500
Subject: [Twisted-Python] No connectionLost
Message-ID: <3FD10E61.1040400@comcast.net>

I am developing an asynchronous messaging application.  I was testing it 
today with a colleague over a vpn.  The vpn went down.  But the twisted 
connection looked like it stayed up.  I was expecting a connectionLost() 
call.  It never came.  When the vpn was recovered the transfer did not 
continue.

Is this expected behavior?  What can I do to avoid this problem?

BTW - twisted absolutely rocks!  Performance is great.  And the 
interface is very well thought out.  Thanks...




From glyph at twistedmatrix.com  Fri Dec  5 19:25:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 05 Dec 2003 19:25:27 -0500
Subject: [Twisted-Python] No connectionLost
In-Reply-To: <3FD10E61.1040400@comcast.net>
References: <3FD10E61.1040400@comcast.net>
Message-ID: <3FD121F7.60501@twistedmatrix.com>

Ed Young wrote:

> Is this expected behavior?

Yep.  TCP is weird that way.  If you waited long enough you probably 
would have gotten the connectionLost to happen.

 > What can I do to avoid this problem?

Use a protocol that has keep-alive packets.  If you send data over the 
connection every so often and require that it comes back in a certain 
amount of time, you can terminate the connection if the link gets 
unacceptably unresponsive.

Alternatively, call self.transport.setTcpKeepAlive(True) from your protocol.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 256 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031205/128e3b72/attachment.pgp 

From warner at lothar.com  Fri Dec  5 19:38:06 2003
From: warner at lothar.com (Brian Warner)
Date: Fri, 05 Dec 2003 16:38:06 -0800 (PST)
Subject: [Twisted-Python] No connectionLost
Message-ID: <20031205.163806.58129207.warner@lothar.com>

> Is this expected behavior?  What can I do to avoid this problem?

Yes. Twisted applications (indeed all endpoints communicating over
packet-switched networks) have no way to know about connections that are
broken somewhere in the middle. If the remote program is terminated, their
kernel will probably send you a TCP FIN to shutdown the connection. If your
end terminates then you know your connection is lost. But the only way to
detect that something in the middle has gone away is to notice that the
remote system is not getting your packets.

The key thing to pay attention to is that there is no "connection" as such.
There are two endpoints which may or may not hold the same beliefs about
their ability to communicate, and any individual packet may or may not arrive
at its destination.

The standard technique to deal with this (and try to maintain the illusion of
"connection") this is with pings that must be acknowleged. The default TCP
socket usually shuts down after transmitted data has been outstanding
(unacknowleged) for a while (10s of minutes? maybe an hour?), but if there is
no data being transmitted then you may never discover that the connection is
no longer useable.

You can turn on TCP Keepalives with a socket option, which causes a probe to
be sent after some period of inactivity (two hours on my system). When this
probe goes unacknowleged for a while (same as regular data), the connection
is declared dead. This will cause the same kind of connectionLost
notification as happens when the remote program terminates and their kernel
tells you about the socket being closed.

You can add code to your protocol to make additional pings on a regular
basis, and then establish timeouts which manually drop the connection if they
are not acknowleged in time. You will need to make a tradeoff between extra
traffic and the latency that will go by before you detect the connection has
gone away (to detect a lost connection within 60 seconds, you must send some
data every 60 seconds). With shorter timeouts you also run the risk of
false-shutdowns, where the app overreacts to a temporary network outage.

Practically speaking, most connections run over fairly reliable networks, and
programs crash/quit much more frequently than intermediate routers. So the
"connection lost" FIN packet is usually good enough. With a VPN providing
additional routing complexity in the middle, that assumption doesn't hold up
so well.

hope that helps,
 -Brian



From michal at pasternak.w.lub.pl  Fri Dec  5 20:30:53 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sat, 6 Dec 2003 02:30:53 +0100
Subject: [Twisted-Python] pb.Viewable gets None as client argument.
Message-ID: <20031206013053.GB1037@pasternak.w.lub.pl>

I've got a client, I've got a server. They exchange data without problems,
one of the procedures the client is calling sends references to pb.Viewable
to all other connected clients. If those clients do callRemote() on the
received results, the client parameter is None at the server side. Any ideas
how to fix it?

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From rahul at reno.cis.upenn.edu  Fri Dec  5 22:28:56 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Fri, 5 Dec 2003 22:28:56 -0500
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
Message-ID: <200312060328.hB63SuS14972@reno.cis.upenn.edu>

Hi Folks,
I have the following need. My program acts as a xmlrpc client using
the Proxy class, peeking at the top of a stack to find its payload. It gets
the payload by peeking and then sends it out on the network. What I want
to do, if the send was successful, is to pop the stack, and if not successful,
to resend the payload. Since callback and errback only tahe the succesful
response(message) or failure instance respectively as an argument, how do
I do this, as I am not able to access the stack inside these functions,
(I cant use a module global, as each program has multiple stack instances,
and i need to pass a particular one).

Am i missing something?

Thanks a lot,
Rahul




From andrew-twisted at puzzling.org  Fri Dec  5 22:43:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 6 Dec 2003 14:43:05 +1100
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
In-Reply-To: <200312060328.hB63SuS14972@reno.cis.upenn.edu>
References: <200312060328.hB63SuS14972@reno.cis.upenn.edu>
Message-ID: <20031206034305.GD1500@frobozz>

On Fri, Dec 05, 2003 at 10:28:56PM -0500, rahul at reno.cis.upenn.edu wrote:
> Hi Folks,
> I have the following need. My program acts as a xmlrpc client using
> the Proxy class, peeking at the top of a stack to find its payload. It gets
> the payload by peeking and then sends it out on the network. What I want
> to do, if the send was successful, is to pop the stack, and if not successful,
> to resend the payload. Since callback and errback only tahe the succesful
> response(message) or failure instance respectively as an argument, how do
> I do this, as I am not able to access the stack inside these functions,
> (I cant use a module global, as each program has multiple stack instances,
> and i need to pass a particular one).
> 
> Am i missing something?

I think what you are looking for is:

     d.addCallback(cb, extraArg1, extraArg2)  # etc

which will be called as

     cb(result, extraArg1, extraArg2)

E.g.:

>>> from twisted.internet.defer import Deferred
>>> d = Deferred()
>>> def cb(result, foo):
...     print result * 2, foo
... 
>>> d.addCallback(cb, 'Hey!')
<Deferred at 0x401e5a6c>
>>> d.callback(5)
10 Hey!


[Glancing at http://twistedmatrix.com/documents/howto/defer, it does mention
 this in passing, but it doesn't give any examples or make it clear.  If you
 read the section on "Basic Callback Functions"
 (http://twistedmatrix.com/documents/howto/defer#auto9) carefully, and you
 know what you're looking for, it does describe this feature.]

-Andrew.




From rahul at reno.cis.upenn.edu  Fri Dec  5 23:36:04 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Fri, 5 Dec 2003 23:36:04 -0500
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
In-Reply-To: <20031206034305.GD1500@frobozz>; from andrew-twisted@puzzling.org on Sat, Dec 06, 2003 at 02:43:05PM +1100
References: <200312060328.hB63SuS14972@reno.cis.upenn.edu> <20031206034305.GD1500@frobozz>
Message-ID: <20031205233604.A15087@reno.cis.upenn.edu>

Andrew,
Thanks! For some reason I missed it completely in the defer document. Someone
run me over with a large truck!

The program I am writing is a general astronomy data analysis pipeline system,
with a workflow similar to BPELWS, but way simpler, and multiprotocol.
Twisted just makes that very easy. The exact reason for http based xmlrpc
is that some of the peers on this pipeline have very poor networking
(our telescopes being at 9500 ft in Taiwan's central mountains..), and thats
why I need to be able to back off on messages and persist messages if necessary.

My current program mixes twisted and threads, mostly because I havent grokked
twisted zen yet. But I intend to, ofcourse, and the next task will
be protocolozing stack access so that new additions to the stack can be treated
as events. 

Thanks for helping me along..and also big thanks to the author of "Twisted From Scratch"
Rahul
On Sat, Dec 06, 2003 at 02:43:05PM +1100, Andrew Bennetts wrote:
> On Fri, Dec 05, 2003 at 10:28:56PM -0500, rahul at reno.cis.upenn.edu wrote:
> > Hi Folks,
> > I have the following need. My program acts as a xmlrpc client using
> > the Proxy class, peeking at the top of a stack to find its payload. It gets
> > the payload by peeking and then sends it out on the network. What I want
> > to do, if the send was successful, is to pop the stack, and if not successful,
> > to resend the payload. Since callback and errback only tahe the succesful
> > response(message) or failure instance respectively as an argument, how do
> > I do this, as I am not able to access the stack inside these functions,
> > (I cant use a module global, as each program has multiple stack instances,
> > and i need to pass a particular one).
> > 
> > Am i missing something?
> 
> I think what you are looking for is:
> 
>      d.addCallback(cb, extraArg1, extraArg2)  # etc
> 
> which will be called as
> 
>      cb(result, extraArg1, extraArg2)
> 
> E.g.:
> 
> >>> from twisted.internet.defer import Deferred
> >>> d = Deferred()
> >>> def cb(result, foo):
> ...     print result * 2, foo
> ... 
> >>> d.addCallback(cb, 'Hey!')
> <Deferred at 0x401e5a6c>
> >>> d.callback(5)
> 10 Hey!
> 
> 
> [Glancing at http://twistedmatrix.com/documents/howto/defer, it does mention
>  this in passing, but it doesn't give any examples or make it clear.  If you
>  read the section on "Basic Callback Functions"
>  (http://twistedmatrix.com/documents/howto/defer#auto9) carefully, and you
>  know what you're looking for, it does describe this feature.]
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From slyphon at twistedmatrix.com  Sat Dec  6 06:23:23 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Sat, 06 Dec 2003 06:23:23 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from
	a method/function
In-Reply-To: <20031204052111.GA9378@intarweb.us>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
	 <20031203213738.054df79f.itamar@itamarst.org>
	 <20031204052111.GA9378@intarweb.us>
Message-ID: <1070709803.12455.93.camel@willie-the-pimp.embassynetworks.com>

On Thu, 2003-12-04 at 00:21, Jp Calderone wrote:
> On Wed, Dec 03, 2003 at 09:37:38PM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 03 Dec 2003 20:48:56 -0500
> > Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > 
> > > [snip]
> > > 
> > > def aLongWait(stuff):
> > >     d = defer.Deferred()
> > >     def _():
> > >          result = doSomeStuffHere(stuff)
> > >          d.callback(result)
> > >     reactor.callLater(0, _)
> > >     return d
> > 
> > Why is this any different? all it does is make d get its result slightly
> > afterwards. It doesn't change anything fundemantal. It's virtually
> > identical to:
> > 
> > def aLongWait(stuff):
> >     result = doSomeStuffHere(stuff)
> >     d = defer.Deferred()
> >     d.callback(result)
> >     return d
> > 
> 
>   which is better expressed as:
> 
>     def aLongWait(stuff):
>         return defer.succeed(doSomeStuffHere(stuff))
> 
>   Jp

DOH!

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031206/b9aba44d/attachment.pgp 

From sam at SpinwardStars.com  Sat Dec  6 13:00:30 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sat, 06 Dec 2003 11:00:30 -0700
Subject: [Twisted-Python] Help with child Resources
Message-ID: <5.2.0.9.0.20031206104247.03110a50@pop.mindspring.com>

<newbie-alert />

I'm trying to serve a resource with child resources within
a subdirectory of a directory served via "mktap web".

The url http://mydomain/myPath properly serves the root
resource, RootResource, from index.rpy.

The url http://mydomain/myPath/mysub returns
"404 - No Such Resource".

My resource classes and index.rpy are defined in the
attached files.

I tried changing isLeaf to 1 in RootResource, to force
the render method to be called instead of attempting to
find the sub-resource, but got the same result, so I
suspect that the search for the sub-path resource is
happening before RootResource is reached.

I suspect I've missed something relatively simple, but
I'm new to Twisted. Can someone point out what I'm
doing wrong?

Thanks.

- Sam


-------------- next part --------------
from twisted.web import resource

def DEBUG_RENDER( cls, request ):
	tmpl = "<html>" \
		"class = %s<br />" \
		"prepath = %s<br />" \
		"postpath = %s<br />" \
		"</html>"
	return tmpl % (cls.__name__, request.prepath, request.postpath)

class SubResource( resource.Resource ):
    # No children
    isLeaf = 1
    
    def render(self, request):
    	return DEBUG_RENDER( self.__class__, request )

class RootResource( resource.Resource ):
    # Has children
    isLeaf = 0
    
    def render(self, request):
    	return DEBUG_RENDER( self.__class__, request )
    
    def getChild(self, path, request):
        if path == '':
            return self
        if path == 'mysub':
            return SubResource()
        
        # Terminal condition: don't recognize the name.
        return error.NoResource("No such child resource '" + name + "'")

resource = RootResource()

From sam at SpinwardStars.com  Sat Dec  6 13:40:40 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sat, 06 Dec 2003 11:40:40 -0700
Subject: [Twisted-Python] Re: Help with child Resources
Message-ID: <5.2.0.9.0.20031206113551.00a95918@pop.mindspring.com>

I figured it out. I made 2 mistakes.

1. I arranged the files as
       siteroot/
          mytest/
             index.rpy
2. I used "--ignore-ext rpy" instead of "--ignore-ext .rpy"
    with mktap web. (Note the missing period.)

When I use "--ignore-ext .rpy" and arrange the files as ...
       siteroot/
          mytest.rpy
...it returns what I expect for both http://mydomain/mytest
and http://mydomain/mytest/mysub.

- Sam





From rdrb at 123.cl  Sat Dec  6 16:05:28 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Sat, 06 Dec 2003 18:05:28 -0300
Subject: [Twisted-Python] The Circle now aviable
Message-ID: <4bca604bd1dc.4bd1dc4bca60@noborrar.co.cl>

Hi,
now there is a mirror of the Circle (for linux users, GTK based gui).

The Circle is going into internals refactoring. I'm sugesting to use Twisted for his new generators based schema (flows instead of threads).

Anyone interested ?

The Circle is an already aviable, already usable P2P software based on the DHT concept. It allow decentralized presence, instant and delayed messages, file sharing, users directory, trust based news, and more plugins extensions. Pure python and GTK.

http://thecircle.org.au

RodrigoB.






From golux at comcast.net  Sat Dec  6 21:06:20 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 21:06:20 -0500
Subject: [Twisted-Python] possible doc error
Message-ID: <3FD28B1C.1040202@comcast.net>

In howto/application:

"It is, of course, possible to write one's own services, but Twisted 
comes out of the box with several services which are useful in writing 
network applications. Those are in twisted.application.internet."

For sure, Twisted comes out of the box with a load of stuff,
but the only service I see in twisted.application.internet
is the TimerService.  Should that be twisted.internet.app ?




From exarkun at intarweb.us  Sat Dec  6 22:59:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 6 Dec 2003 22:59:40 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <20031207035940.GA18490@intarweb.us>

On Sat, Dec 06, 2003 at 09:06:20PM -0500, Stephen Waterbury wrote:
> In howto/application:
> 
> "It is, of course, possible to write one's own services, but Twisted 
> comes out of the box with several services which are useful in writing 
> network applications. Those are in twisted.application.internet."
> 
> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  Should that be twisted.internet.app ?
> 

  Hey Steve,

    twisted.application.internet actually provides quite a few other
services, but they are all generated in a rather unorthodox manner rather
than defined directly, which makes finding them by reading the source a bit
difficult.

    The automatically generated API docs are a little more informative:

  http://twistedmatrix.com/documents/TwistedDocs/current/api/twisted.application.internet.html

    Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031206/9ee2d442/attachment.pgp 

From golux at comcast.net  Sat Dec  6 23:07:05 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 23:07:05 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <3FD2A769.7050507@comcast.net>

Stephen Waterbury wrote:
> In howto/application:
> 
> "It is, of course, possible to write one's own services, but Twisted 
> comes out of the box with several services which are useful in writing 
> network applications. Those are in twisted.application.internet."
> 
> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  ...

Never mind, I see the magic now.  Hmm ... I'll try to come
up with a doc patch that makes it a little more explicit.




From golux at comcast.net  Sat Dec  6 23:33:41 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 23:33:41 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <20031207035940.GA18490@intarweb.us>
References: <3FD28B1C.1040202@comcast.net> <20031207035940.GA18490@intarweb.us>
Message-ID: <3FD2ADA5.4010700@comcast.net>

Thanks, Jp -- actually, I saw them and sent my "oops"
message *just* before yours hit the list ... ;)

Yep, the API docs are definitely more explicit ...
and now I see how the docstrings for the classes were
generated, too, so that's what epydoc used.  Moshe
is pretty slick.  :)

Actually, what really would have helped would be
if the twisted.application.internet in the howto
was a link to that part of the API doc.

Jp Calderone wrote:
> On Sat, Dec 06, 2003 at 09:06:20PM -0500, Stephen Waterbury wrote:
> 
>>In howto/application:
>>
>>"It is, of course, possible to write one's own services, but Twisted 
>>comes out of the box with several services which are useful in writing 
>>network applications. Those are in twisted.application.internet."
>>
>>For sure, Twisted comes out of the box with a load of stuff,
>>but the only service I see in twisted.application.internet
>>is the TimerService.  Should that be twisted.internet.app ?
>>
> 
> 
>   Hey Steve,
> 
>     twisted.application.internet actually provides quite a few other
> services, but they are all generated in a rather unorthodox manner rather
> than defined directly, which makes finding them by reading the source a bit
> difficult.
> 
>     The automatically generated API docs are a little more informative:
> 
>   http://twistedmatrix.com/documents/TwistedDocs/current/api/twisted.application.internet.html
> 
>     Jp





From itamar at itamarst.org  Sun Dec  7 01:53:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 01:53:03 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <1070779983.12190.759.camel@sheriffpony>

On Sat, 2003-12-06 at 21:06, Stephen Waterbury wrote:

> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  Should that be twisted.internet.app ?

Nope, twisted.internet.app is deprecated. The code in that module is
auto-generated to some degree. You can still import it though :) See API
docs, it should show up there.
-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From gp.ciceri at acm.org  Sun Dec  7 03:58:33 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 07 Dec 2003 09:58:33 +0100
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
Message-ID: <3FD2EBB9.9040201@acm.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

hello all,
I'm looking for some usage examples of the (new in 1.1) jabber protocol
in twisted, in particular a client (I'm not able to find any in the
1.1.1rc4).

Before the new jabber protocol you can build jabber clients in twisted
with the support of tpjabber.py (posted on the ML on Febuary): perhaps
simply the new jabber protocol support in twisted is not complete ?

Any hint will be appreciated.

Regards
/gp

- --
~  Gian Paolo Ciceri        Via G.Marconi 5 - 22036 ERBA CO ITALY
~                           mobile :   ++39 340 7218101
~                           eMail  :   gp.ciceri at acm.org,
~                                  :   gp.ciceri at suddenthinks.com
~                           webSite:   http://www.suddenthinks.com
~                           ICQ #  :   94620118
~                           jabber :   gp.ciceri at jabber.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/0uu45CXmEF0gaHgRAmR0AKDStDlk4xZJHuZ8snnZC08iyBrFWACgkX1A
B3/o4IHIxrewQRu18vXlPyU=
=7A8n
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Sun Dec  7 09:06:24 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Dec 2003 01:06:24 +1100
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD2ADA5.4010700@comcast.net>
References: <3FD28B1C.1040202@comcast.net> <20031207035940.GA18490@intarweb.us> <3FD2ADA5.4010700@comcast.net>
Message-ID: <20031207140624.GE1500@frobozz>

On Sat, Dec 06, 2003 at 11:33:41PM -0500, Stephen Waterbury wrote:
> Thanks, Jp -- actually, I saw them and sent my "oops"
> message *just* before yours hit the list ... ;)
> 
> Yep, the API docs are definitely more explicit ...
> and now I see how the docstrings for the classes were
> generated, too, so that's what epydoc used.  Moshe
> is pretty slick.  :)
> 
> Actually, what really would have helped would be
> if the twisted.application.internet in the howto
> was a link to that part of the API doc.

I've just checked in a change to do that:
    http://twistedmatrix.com/users/warner/doc-latest/howto/application.html

Thanks!

-Andrew.




From wilk-ml at flibuste.net  Sun Dec  7 09:58:23 2003
From: wilk-ml at flibuste.net (William Dode)
Date: Sun, 07 Dec 2003 15:58:23 +0100
Subject: [Twisted-Python] jabber client examples for the new
 protocol.jabber
In-Reply-To: <3FD2EBB9.9040201@acm.org> (gian paolo ciceri's message of
 "Sun, 07 Dec 2003 09:58:33 +0100")
References: <3FD2EBB9.9040201@acm.org>
Message-ID: <878ylollo0.fsf@blakie.riol>

gian paolo ciceri <gp.ciceri at acm.org> writes:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> hello all,
> I'm looking for some usage examples of the (new in 1.1) jabber protocol
> in twisted, in particular a client (I'm not able to find any in the
> 1.1.1rc4).

I'm very interested also, and i could make heavy test (in an online
scrabble game http://seps.flibute.net)

-- 
William Dod? - http://flibuste.net



From developer at csrules.dyndns.org  Sun Dec  7 13:40:47 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 10:40:47 -0800
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD2EBB9.9040201@acm.org>
References: <3FD2EBB9.9040201@acm.org>
Message-ID: <3FD3742F.9030809@csrules.dyndns.org>

Jabber support works fine.

If i get a few minutes I'll post a simple example . If you want to see 
an example of
a jabber 'component' written with it you can check jabberstudio, this 
project uses it:

http://www.jabberstudio.org/projects/proxy65/project/view.php

-darryl

gian paolo ciceri wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> hello all,
> I'm looking for some usage examples of the (new in 1.1) jabber protocol
> in twisted, in particular a client (I'm not able to find any in the
> 1.1.1rc4).
>
> Before the new jabber protocol you can build jabber clients in twisted
> with the support of tpjabber.py (posted on the ML on Febuary): perhaps
> simply the new jabber protocol support in twisted is not complete ?
>
> Any hint will be appreciated.
>
> Regards
> /gp
>
>





From itamar at itamarst.org  Sun Dec  7 12:07:49 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 12:07:49 -0500
Subject: [Twisted-Python] wxPython reactor now in Twisted CVS
Message-ID: <1070816869.17798.0.camel@sheriffpony>

You can't use it to run tests with trial, but other than that it seems
to be fine. Any comments, suggestions and bug reports are welcome.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lafou at wanadoo.fr  Sun Dec  7 13:06:03 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Sun, 7 Dec 2003 19:06:03 +0100
Subject: [Twisted-Python] woven templates DTD
Message-ID: <200312071906.03277.lafou@wanadoo.fr>

Hi all

I've made some templates using a DTD (XHTML 1.1 or HTML 4.0 strict). The 
rendered pages are missing this dtd, beacause it's overwritten with 
<?xml version="1.0"?>

Of course, pages are different if they are rendered :(

Do I have to change all my templates to xml dtd ? Or can I impose my DTD to 
woven ?

thx !

--
Philippe




From lafou at wanadoo.fr  Sun Dec  7 13:10:15 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Sun, 7 Dec 2003 19:10:15 +0100
Subject: [Twisted-Python] woven templates DTD
Message-ID: <200312071910.15453.lafou@wanadoo.fr>

Sorry my last post, I've found the solution ...

I have to set the dtd to XHTML-1.0 Tansitional, and then, woven doesn't delete 
the dtd...

I'm sure this part is covered in the doc ?!

--
Philippe




From developer at csrules.dyndns.org  Sun Dec  7 13:23:26 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 12:23:26 -0600
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD3742F.9030809@csrules.dyndns.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
Message-ID: <3FD3701E.3080001@csrules.dyndns.org>

As promised I wrote a simple script and posted it here:

http://randomthoughts.vandorp.ca/syncato/WK/blog/706?t=item

cheers,
darryl


darryl wrote:
> Jabber support works fine.
> 
> If i get a few minutes I'll post a simple example . If you want to see 
> an example of
> a jabber 'component' written with it you can check jabberstudio, this 
> project uses it:
> 
> http://www.jabberstudio.org/projects/proxy65/project/view.php
> 
> -darryl
> 





From gp.ciceri at acm.org  Sun Dec  7 13:34:41 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 07 Dec 2003 19:34:41 +0100
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD3742F.9030809@csrules.dyndns.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
Message-ID: <3FD372C1.3060004@acm.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

darryl wrote:
| Jabber support works fine.
|

o.k., no doubts about it :-)

| If i get a few minutes I'll post a simple example . If you want to see
| an example of
| a jabber 'component' written with it you can check jabberstudio, this
| project uses it:
|
| http://www.jabberstudio.org/projects/proxy65/project/view.php
|

I've just checked out, and it seems really interesting.

But I'm looking for a "standard" client (something doing
sending/receiving messages and chats and playing with rosters).
In particular, while I've found samples of "iq" nodes usage,
I'd like to know how to handle "presence" and "message" nodes.

So if you have this kind of examples, it's really what I need.
(perhaps I'm missing something basilar, and it's only a matter
to do a simple trick)


Thanks for your patience.
Best Regards

/gp

| -darryl
|
| gian paolo ciceri wrote:
|
|> -----BEGIN PGP SIGNED MESSAGE-----
|> Hash: SHA1
|>
|> hello all,
|> I'm looking for some usage examples of the (new in 1.1) jabber protocol
|> in twisted, in particular a client (I'm not able to find any in the
|> 1.1.1rc4).
|>
|> Before the new jabber protocol you can build jabber clients in twisted
|> with the support of tpjabber.py (posted on the ML on Febuary): perhaps
|> simply the new jabber protocol support in twisted is not complete ?
|>
|> Any hint will be appreciated.
|>
|> Regards
|> /gp
|>
|>
|
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


- --
~  Gian Paolo Ciceri        Via G.Marconi 5 - 22036 ERBA CO ITALY
~                           mobile :   ++39 340 7218101
~                           eMail  :   gp.ciceri at acm.org,
~                                  :   gp.ciceri at suddenthinks.com
~                           webSite:   http://www.suddenthinks.com
~                           ICQ #  :   94620118
~                           jabber :   gp.ciceri at jabber.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/03LA5CXmEF0gaHgRAvbuAJ9lBWjt/ntZshbHHtyJg33VltZrGwCfQFed
nkou4wOhCCEJ8StNHqZazXc=
=OmYa
-----END PGP SIGNATURE-----




From developer at csrules.dyndns.org  Sun Dec  7 14:19:55 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 13:19:55 -0600
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD372C1.3060004@acm.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org> <3FD372C1.3060004@acm.org>
Message-ID: <3FD37D5B.3090705@csrules.dyndns.org>

gp,

These things are all possible of course :)

However, they aren't built in yet. Or shall i say, at this
time you have to build them yourself. I have no idea if dizzyd
ever intends to build those components or not.

That being said it's pretty straight forward. You just build
up your domish.Elements and send them via the xmlstream.
There also is support for adding observers for iq elements
with unique id's and such.

If you have any specific questions feel free to ask and I'll
answer if I can.

-darryl

> But I'm looking for a "standard" client (something doing
> sending/receiving messages and chats and playing with rosters).
> In particular, while I've found samples of "iq" nodes usage,
> I'd like to know how to handle "presence" and "message" nodes.
> 
> So if you have this kind of examples, it's really what I need.
> (perhaps I'm missing something basilar, and it's only a matter
> to do a simple trick)
> 
> 
> Thanks for your patience.
> Best Regards
> 
> /gp




From sam at SpinwardStars.com  Sun Dec  7 15:02:26 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sun, 07 Dec 2003 13:02:26 -0700
Subject: [Twisted-Python] Generate select options in woven
Message-ID: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>

Can someone help me out? I'm trying (so far without success) to get Woven 
to generate the Options for a Select from my Model. I haven't found any 
docs or examples that explain it.

- Sam





From jsbenson at bensonsystems.com  Sun Dec  7 15:25:38 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Sun, 7 Dec 2003 12:25:38 -0800
Subject: [Twisted-Python] Thanks for all the help
Message-ID: <04f301c3bd00$48b6b910$210110ac@jsbwxp3>

It's beginning to dawn on me that the whole
OOP/functional/aspect-oriented/etc. scene is about software engineering, not
just about egos and pet languages.

My software engineering education kind of stopped with Structured System
Design ? la Yourdon and Wirth's structured programming mantras in the 70's.
After that, I saw fads come (and and almost as often go: AI, 4th-generation
DBMS's, talking paperclips) but didn't see anything that made me want to
change my basic take on programming.

Then I got into Python about a year ago and it's been a bit of a rocket
ride, educationally. In the beginning, the air was a little too thin at the
requisite levels of abstraction and took some getting used to, and will
probably remain the biggest barrier to entry. It's actually the second
Revenge of the Nerds, and a Darwinian selection process is taking place as
we speak: I think a lot of people didn't make the transition from COBOL to
C, and another group will have trouble going from pointers to references and
making sense of the multiheaded XML hydra.

Add to this the fact that many people now believe that you can teach
object-oriented languages without recapitulating the conceptual models
underlying the whole progression: toggled-in machine language routines
wriggling in the primordial ooze of absolute machine addresses, relocating
assemblers darting about the shallows, "high-level" languages like FORTRAN
and COBOL lumbering out of the primal memory sea and expiring on the land,
clever amphibians like C scurrying on the shore but returning to the memory
sea to lay their pointery little eggs, and finally the Pythons and Javas
that preserve only a faint echo of their marine origins in the IDs of their
objects.

I've taught computer languages professionally, and, as the age gap between
myself and my students widens, I feel more and more guilty that I had the
big advantage of having seen so much of the evolution happen. It helps me
appreciate both what's great about what we have now, and why certain
limitations are still there. The new folks don't have that advantage unless
they do enough assembler programming to understand how things look from the
instruction set level.

'Nuff said about that. Many thanks to everyone at the python and twisted
lists for their help as I reinvent myself again.








From anthony at ekit-inc.com  Mon Dec  1 19:58:42 2003
From: anthony at ekit-inc.com (Anthony Baxter)
Date: Tue, 02 Dec 2003 11:58:42 +1100
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1 
In-Reply-To: Message from "Mark Evans" <2s7l3way02@sneakemail.com> 
   of "01 Dec 2003 19:52:06 -0000." <25772-38779@sneakemail.com> 
Message-ID: <200312020058.hB20wgmD030546@maxim.off.ekorp.com>

>>> "Mark Evans" wrote
> Are there any significant UDP bug fixes
> or enhancements that make it worthwhile
> to migrate immediately to the new 1.1.1 release candidate?
> 
> How stable is this rc, generally speaking?

I don't believe there's any major changes in UDP in this release.
Note that shtoom (shtoom.sf.net) is using UDP quite heavily, and
hasn't had a problem.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never to late to have a happy childhood.




From steve at jibson.com  Tue Dec  2 11:49:29 2003
From: steve at jibson.com (Steve Jibson)
Date: Tue, 02 Dec 2003 09:49:29 -0700
Subject: [Twisted-Python] PyOpenSSL for Python 2.3
Message-ID: <3FCCC299.3060507@jibson.com>

Hi.

Sorry to bother you, but do you have (or can you point me to) a binary 
distribution of pyOpenSSL for Python 2.3?

Thanks,

Steve





From moonfallen at twistedmatrix.com  Wed Dec  3 23:25:41 2003
From: moonfallen at twistedmatrix.com (Cory Dodt)
Date: Wed, 3 Dec 2003 23:25:41 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031204042541.GA12942@pyramid.twistedmatrix.com>

> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

What neither Bob nor Itamar have pointed out is *why* this doesn't work.

doSomeStuffHere() takes a long time to do its processing, and it blocks.
You've succeeded in making aLongWait not block its caller, but
doSomeStuffHere is still going to throw a monkey wrench into the works,
because it will still block later -- specifically, it blocks the reactor
loop.  When the reactor decides to run _(), everything else the reactor
is responsible for must stop and wait for doSomeStuffHere to finish.

To make it not block the reactor, you need to take one of their
suggestions: use a thread, or refactor the whole thing to do a little
bit at a time.  At some level these amount to the same thing, but using
a thread makes the OS responsible for deciding what constitutes "a
little bit", and the other way makes you responsible.  Each has
appropriate and inappropriate uses.

C



From tv at tv.debian.net  Thu Dec  4 14:15:46 2003
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 04 Dec 2003 21:15:46 +0200
Subject: [Twisted-Python] Using Twisted in a network project
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>
Message-ID: <3FCF87E2.3090105@tv.debian.net>

Hegedus, Matthew S wrote:
> Here's my problem: I'm in a situation where applications on a LAN need to be
> able to transmit UDP packets to other apps on the same LAN and on other LANS
> acroos the WAN. On the WAN there may be many routers in between that are not
> configured for multicast and cannot be reconfigured by users interested in
> multicasting. So multicast is out, and we are left with broadcast and

The standard solution is to use a multicast router and IP tunnels. That
way the "hostile" routers don't need to understand multicast at all.

That doesn't let you play with twisted, though ;)




From waldbie at attglobal.net  Sun Dec  7 19:44:26 2003
From: waldbie at attglobal.net (Carl Waldbieser)
Date: Sun, 7 Dec 2003 19:44:26 -0500
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
Message-ID: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>

I am using:
Twisted 1.1.0.
Python 2.3.2
Running on WinXP

I recently set up a wireless network at home (1 WinXP system and 1 Win98
system), and because I have a dial-up connection to the Internet, I wanted
to set up an HTTP proxy sever so both computers could browse the web
simultaneously.  I tried a bunch of different free applications that seemed
to fit the bill, but many seemed either too complicated, or easy but just
not configurable enough.

While googling, I came across an old message where someone was very
impressed with how easy it was to create a web proxy using twisted.  Since I
am a big Python fan, I thought I'd give it a go.  It was remarkably easy to
hack something together, and initially, everything seemed to work pretty
well.  However, after browsing one site, I noticed a buch of errors popping
up in my console box.  Both seemed to originate from http.py (in
/twisted/protocols directory).

The first (around line 314) was that the StringTransport class was being
asked to make a loseConnection() method invocation, but the class didn't
have one.  I seemed to get around that problem by adding that method to the
class as a no-op.

The second (around line 350) was caused by the following statement:

key, val = line.split(': ', 1)

I believe the line has something to do with parsing the request headers.
The problem was that the header was being sent like "name:value" with no
space after the colon.  This caused the tuple unpacking to blow up.  I
googled for information about what comprises a valid HTTP request, and came
up with the following:

In rfc2616
concerning HTTP/1.1
in section 4.2
Direct quote: "The field value MAY be preceded by any amount of LWS, though
a single SP is preferred."

I have no idea if this is the final word on HTTP headers, but it does look
like maybe the lack of a space should be accepted more gracefully in this
case.

I am not sure if these are actual bugs (the proxy didn't crash in any
event).  I thought I ought to let someone, know, though.

Carl Waldbieser




From andrew-twisted at puzzling.org  Sun Dec  7 20:16:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Dec 2003 12:16:03 +1100
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
In-Reply-To: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
References: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
Message-ID: <20031208011603.GA8937@frobozz>

On Sun, Dec 07, 2003 at 07:44:26PM -0500, Carl Waldbieser wrote:
> 
> The second (around line 350) was caused by the following statement:
> 
> key, val = line.split(': ', 1)
> 
> I believe the line has something to do with parsing the request headers.
> The problem was that the header was being sent like "name:value" with no
> space after the colon.  This caused the tuple unpacking to blow up.  I

This bug has already been fixed in CVS, I think... try 1.1.1rc4.

-Andrew.




From itamar at itamarst.org  Sun Dec  7 20:41:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 20:41:38 -0500
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
In-Reply-To: <20031208011603.GA8937@frobozz>
References: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
	 <20031208011603.GA8937@frobozz>
Message-ID: <1070847698.20500.0.camel@sheriffpony>

On Sun, 2003-12-07 at 20:16, Andrew Bennetts wrote:

> This bug has already been fixed in CVS, I think... try 1.1.1rc4.

Yes, along with other fixes to the proxy, but they might only make it
into 1.1.2. Try 1.1.1rc4 and see.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lafou at wanadoo.fr  Mon Dec  8 01:53:40 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Mon, 8 Dec 2003 07:53:40 +0100
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
Message-ID: <200312080753.40092.lafou@wanadoo.fr>

On Sunday 07 December 2003 21:02, Samuel Reynolds wrote:
> Can someone help me out? I'm trying (so far without success) to get Woven
> to generate the Options for a Select from my Model. I haven't found any
> docs or examples that explain it.

You can use something like this :

<select name="display" onChange="submit()" model="versions" view="List">
   <span pattern="listItem">
       <option view="display_value" value="thevalue"><span view="Text"></span>
       </option>
   </span>
</select>


here is your simple model

def wmfactory_versions(self, request):
	return ["item1", "item2", "item3"]


This will help to autoselect the last selected value :

from twisted.web import  microdom

def wvupdate_display_value(self, request, node, model):
        option = microdom.lmx(node)
        option['value'] = model
        display = request.args.get("display", [""])[0]
        if display == model:
            option['selected'] = "1"

I hope this helps !


Regards
--
Philippe




From wilk-ml at flibuste.net  Mon Dec  8 08:04:08 2003
From: wilk-ml at flibuste.net (William Dode)
Date: Mon, 08 Dec 2003 14:04:08 +0100
Subject: [Twisted-Python] jabber client examples for the new
 protocol.jabber
In-Reply-To: <3FD3701E.3080001@csrules.dyndns.org> (developer@csrules.dyndns.org's
 message of "Sun, 07 Dec 2003 12:23:26 -0600")
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
	<3FD3701E.3080001@csrules.dyndns.org>
Message-ID: <87d6azo3zr.fsf@blakie.riol>

darryl <developer at csrules.dyndns.org> writes:

> As promised I wrote a simple script and posted it here:
>
> http://randomthoughts.vandorp.ca/syncato/WK/blog/706?t=item
>

thanks a lot !!!

-- 
William Dod? - http://flibuste.net



From rahul at reno.cis.upenn.edu  Mon Dec  8 10:49:48 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Mon, 8 Dec 2003 10:49:48 -0500
Subject: [Twisted-Python] twistd logging rotation and discarding logs
Message-ID: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>

Hi Folks,
twistd has a very nice logging feature which seems on my machine to
totate log files every 1mb. After a while though many log files pile up.
I looked in twisted.python.log for options to discard older files, and also
on google, but wasnt sure how to interact with twistd's logging. Is there
a way of doing this at the twistd level, or should I just use cron or
implement custom logging using twistd.python.log and logfile?
Thanks,
Rahul



From sam at SpinwardStars.com  Mon Dec  8 10:51:07 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Mon, 08 Dec 2003 08:51:07 -0700
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <200312080753.40092.lafou@wanadoo.fr>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
 <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
Message-ID: <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>

That helps a lot. Thanks.

However...

Is it possible to get
    <option value='id1'>label1</option>
?

So that
    wmfactory_versions = {
          {val='id1', desc='value1'},
          {val='id2', desc='value2'},
          {val='id3', desc='value3'} }
or (preferably)
    wmfactory_versions = {'id1':'value1','id2':'value2','id3':'value3'}
and
    <select name='display' model='versions' view='[[SOMETHING?]]'>
       [[SOMETHING?]]
    </select>

yield
    <select name='display>
       <option value='id1'>value1</option>
       <option value='id2'>value2</option>
       <option value='id3'>value3</option>
    </select>

I've tried several variations of view='List' and view='KeyedList'
on the select tag, using the above models, without success.
The nearest I've been able to get is one of the following:
    <option value='id1'>id1</option>
    <option value='value1'>value1</option>
    <option value='id1'>value1id1</option>

- Sam

At 2003-12-08 07:53 AM +0100, you wrote:
>On Sunday 07 December 2003 21:02, Samuel Reynolds wrote:
> > Can someone help me out? I'm trying (so far without success) to get Woven
> > to generate the Options for a Select from my Model. I haven't found any
> > docs or examples that explain it.
>
>You can use something like this :
>
><select name="display" onChange="submit()" model="versions" view="List">
>    <span pattern="listItem">
>        <option view="display_value" value="thevalue"><span 
> view="Text"></span>
>        </option>
>    </span>
></select>
>
>
>here is your simple model
>
>def wmfactory_versions(self, request):
>         return ["item1", "item2", "item3"]
>
>
>This will help to autoselect the last selected value :
>
>from twisted.web import  microdom
>
>def wvupdate_display_value(self, request, node, model):
>         option = microdom.lmx(node)
>         option['value'] = model
>         display = request.args.get("display", [""])[0]
>         if display == model:
>             option['selected'] = "1"
>
>I hope this helps !
>
>
>Regards
>--
>Philippe
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From lafou at wanadoo.fr  Mon Dec  8 11:33:14 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Mon, 8 Dec 2003 17:33:14 +0100
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com> <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>
Message-ID: <200312081733.14349.lafou@wanadoo.fr>

> I've tried several variations of view='List' and view='KeyedList'
> on the select tag, using the above models, without success.
> The nearest I've been able to get is one of the following:
>     <option value='id1'>id1</option>
>     <option value='value1'>value1</option>
>     <option value='id1'>value1id1</option>

I never succeded in using KeyedList :(

****************************
with  :

wmfactory_versions = [
          ('id1', 'value1'),
          ('id2', 'value2'),
          ('id3', 'value3')]


You can do that : 

def wvupdate_display_value(self, request, node, model):
        option = microdom.lmx(node)
        option['value'] = model
        display = request.args.get("display", [""])[0]
        if display == model:
            option['selected'] = "1"

And change 
	<option view="display_value" value="thevalue">
		<span view="Text"></span>
	</option>
to
	<option view="display_value" value="thevalue" model="0">
		<span view="Text" model="1"></span>
	</option>

(not tested, but it should work).


 ** OR  ************

if you really want to use a dict like

wmfactory_versions = {
          {val='id1', desc='value1'},
          {val='id2', desc='value2'},
          {val='id3', desc='value3'} }

then put this in your template :

<option view="display_value" value="thevalue" model="/id">
		<span view="Text" model="/desc"></span>
</option>


see http://www.twistedmatrix.com/documents/howto/modelindepth#submodelpaths
for more infos.

********************
Btw, I think woven should remove empty <span> tags from outputs. I'll post a 
bug report for that.
********************
if you want some exemple code, you can download this :

http://wwwetu.utc.fr/~plafoucr/gat/gat.tzg

it's a frontend to Portage (the gentoo package manager). It's in progress, and 
lacks most of its features, but some code parts may help you.


good luck !
Philippe




From exarkun at intarweb.us  Mon Dec  8 13:26:48 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 8 Dec 2003 13:26:48 -0500
Subject: [Twisted-Python] twistd logging rotation and discarding logs
In-Reply-To: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>
References: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>
Message-ID: <20031208182648.GA4119@intarweb.us>

On Mon, Dec 08, 2003 at 10:49:48AM -0500, rahul at reno.cis.upenn.edu wrote:
> Hi Folks,
> twistd has a very nice logging feature which seems on my machine to
> totate log files every 1mb. After a while though many log files pile up.
> I looked in twisted.python.log for options to discard older files, and also
> on google, but wasnt sure how to interact with twistd's logging. Is there
> a way of doing this at the twistd level, or should I just use cron or
> implement custom logging using twistd.python.log and logfile?
> Thanks,
> Rahul

  Log rotation is handled by twisted.python.logfile.LogFile.rotate().  If
you wanted to discard older logs, you would probably subclass LogFile,
override rotate, and then install your LogFile instead of the default
LogFile.

  The last step will probably be somewhat tricky.  I don't think twistd
lets you specify the LogFile class to use (though perhaps it should).

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031208/72a3366d/attachment.pgp 

From marjancinober at hotmail.com  Mon Dec  8 15:01:31 2003
From: marjancinober at hotmail.com (marjan cinober)
Date: Mon, 08 Dec 2003 21:01:31 +0100
Subject: [Twisted-Python] Begginner discovering Emacs as a python debugger
Message-ID: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>

Hello!

I have just tested debugging in emacs with twistd.
M-x pdb
Run pdb (like this): twistd -b -y finger11.py
COOL :))

It would be great to have similar easy entry interface to pdb through emacs 
for any python script not just twistd -b.
Anybody knows how to achieve that (or something like that)?

Thanks

Regards
               Cinober

_________________________________________________________________
Winterize your home with tips from MSN House & Home. 
http://special.msn.com/home/warmhome.armx




From itamar at itamarst.org  Mon Dec  8 16:06:05 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Dec 2003 16:06:05 -0500
Subject: [Twisted-Python] Begginner discovering Emacs as a python
	debugger
In-Reply-To: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>
References: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>
Message-ID: <1070917565.22491.3.camel@sheriffpony>

On Mon, 2003-12-08 at 15:01, marjan cinober wrote:
> Hello!
> 
> I have just tested debugging in emacs with twistd.
> M-x pdb
> Run pdb (like this): twistd -b -y finger11.py
> COOL :))
> 
> It would be great to have similar easy entry interface to pdb through emacs 
> for any python script not just twistd -b.
> Anybody knows how to achieve that (or something like that)?

Write a little script called "pdb", add it to your PATH, and then you
can M-x pdb with "pdb yourscript.py".

$ cat bin/pdb
#!/bin/sh
exec /usr/bin/python2.2 /usr/lib/python2.2/pdb.py $1 $2 $3 $4 $5 $6

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From gavrie at disksites.com  Wed Dec 10 05:20:02 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Wed, 10 Dec 2003 12:20:02 +0200
Subject: [Twisted-Python] Woven: can't get view notification to work
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>

Hi,

I'm trying to use the notify method of a model to update its views while a page is being rendered. For sake of simplicity, let's assume there's a global data structure which is updated while the page is rendered. A view which renders this data structure should then be called again so that it'll render the updated version.

Unfortunately, I can't get it to work: even though the view is being called again by the notify method, the new view doesn't show up on the final page -- as if it ran only once.

I have attached a small test program (test_notify.py).
Here's a log of what happens when running it, and connecting from a Web browser:

> twistd -ny test_notify.py
2003/12/10 12:08 IST [-] Log opened.
2003/12/10 12:08 IST [-] twistd 1.1.0 (/usr/bin/python 2.3.2) starting up
2003/12/10 12:08 IST [-] reactor class: twisted.internet.default.SelectReactor
2003/12/10 12:08 IST [-] Loading test_notify.py...
2003/12/10 12:08 IST [-] Loaded.
2003/12/10 12:08 IST [-] twisted.web.server.Site starting on 8000
2003/12/10 12:08 IST [-] Starting factory <twisted.web.server.Site instance at 0xbf04f02c>
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] ### mydict: {'hello': 'world'}
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] ### mydict: {'foo': 'bar', 'hello': 'world'}
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] 192.168.1.124 - - [10/Dec/2003:10:08:47 +0000] "GET / HTTP/1.1" 200 88 "-" "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.5) Gecko/20031007 Firebird/0.7"

The 'mydict' data structure is being updated by one of the models on the page, and it is rendered by one of the views. The model notifies the view, and the view is run on the updated data -- as is evident from the second "## mydict:" line. 

However, the final page just shows {'hello': 'world'} instead of the expected {'foo': 'bar', 'hello': 'world'}.

Any ideas as to why this happens?

My platform: Twisted 1.1.0 with Python 2.3.2 on a Linux machine.

Thanks,

-- Gavrie Philipson.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_notify.py
Type: application/octet-stream
Size: 1000 bytes
Desc: test_notify.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031210/30353ed2/attachment.obj 

From ralf at brainbot.com  Wed Dec 10 08:38:01 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 10 Dec 2003 14:38:01 +0100
Subject: [Twisted-Python] Patch: sending new style classes via perspective broker
Message-ID: <86d6aw94jq.fsf@stronzo.brainbot.com>

Hi,
sending new style classes via perspective broker currently isn't
possible without extra effort. I have attached a short test program
and a patch to jelly.py, which solves that problem.

- Ralf

=========== 
from twisted.spread import pb
from twisted.internet import reactor, threads
from twisted.python import threadable

class Data(pb.Copyable, pb.RemoteCopy, object):
    def __init__(self, s):
        self.s = s

pb.setUnjellyableForClass(Data, Data)
    
class Echoer(pb.Root):
    def remote_echo(self, st):
        print "REMOTE_ECHO:", st, st.s
        return st

if __name__ == '__main__':
    reactor.listenTCP(8789, pb.PBServerFactory(Echoer()))

    factory = pb.PBClientFactory()
    reactor.connectTCP("127.0.0.1", 8789, factory)
    factory.getRootObject().addCallback(lambda r: r.callRemote("echo", Data("foo")))

    reactor.callLater(2, reactor.stop)
    reactor.run()

===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.48
diff -u -r1.48 jelly.py
--- jelly.py    4 Jun 2003 00:18:03 -0000       1.48
+++ jelly.py    10 Dec 2003 12:35:48 -0000
@@ -520,6 +520,9 @@
                 inst = _Dummy() # XXX chomp, chomp
                 inst.__class__ = regClass
                 method = inst.unjellyFor
+            elif isinstance(regClass, type): # new style class
+                inst = object.__new__(regClass) # does not call regClass.__init__
+                method = inst.unjellyFor
             else:
                 method = regClass # this is how it ought to be done
             val = method(self, obj)

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Wed Dec 10 10:26:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 10:26:14 -0500
Subject: [Twisted-Python] Patch: sending new style classes via
	perspective broker
In-Reply-To: <86d6aw94jq.fsf@stronzo.brainbot.com>
References: <86d6aw94jq.fsf@stronzo.brainbot.com>
Message-ID: <1071069974.26501.17.camel@sheriffpony>

On Wed, 2003-12-10 at 08:38, Ralf Schmitt wrote:

> sending new style classes via perspective broker currently isn't
> possible without extra effort. I have attached a short test program
> and a patch to jelly.py, which solves that problem.

Nice! Could you add this to the issue tracker? Adding a test would be
even better :) http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From dp at twistedmatrix.com  Wed Dec 10 12:23:56 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 10 Dec 2003 12:23:56 -0500
Subject: [Twisted-Python] Woven: can't get view notification to work
In-Reply-To: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>
References: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>
Message-ID: <A275BA24-2B35-11D8-8E58-000A95864FC4@twistedmatrix.com>


On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:

>         lmx(node).p().text(str(mydict))

Change this to lmx(self) and it works. It's the widget that knows the 
correct place in the current DOM to make changes, not the template node 
that was passed in (node).

A major difficulty with the livepage and view notification architecture 
in woven is object identity -- you must have a reference to a DOM node 
which is actually in the DOM in order for your mutation changes to 
actually show up when the DOM is turned into a string. This is 
partially because woven tries really hard to allow you to re-render 
only those portions of the page that have changed, as you are 
attempting to do here by using notify. Since woven needs to be able to 
rerender portions of the page, it also needs to keep around copies of 
the original DOM -- the "template" DOM -- so it can pass it to your 
function again upon rerendering.

Anyway, Widgets also add an extra level of complexity over the w3c DOM 
in woven. This is the main reason I went with rendering functions, not 
rendering objects, in Nevow. (The render function can of course be a 
method bound to an object).

Neither LivePage nor partial-page rendering are implemented in Nevow 
yet, precisely because they are advanced features that are difficult to 
get right, and I wanted to make sure the basic rendering features were 
correct first. Since Nevow rendering hasn't had any surprising bugs for 
over a month, I think it's time to start implementing LivePage and 
partial-page rendering in Nevow. I'm planning on doing a lot of 
documentation and implementation work around christmastime, when I 
should have more time to focus on it.

dp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1751 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031210/ed09ee58/attachment.bin 

From ralf at brainbot.com  Wed Dec 10 12:49:26 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 10 Dec 2003 18:49:26 +0100
Subject: [Twisted-Python] Patch: sending new style classes via
 perspective broker
In-Reply-To: <1071069974.26501.17.camel@sheriffpony> (Itamar
 Shtull-Trauring's message of "Wed, 10 Dec 2003 10:26:14 -0500")
References: <86d6aw94jq.fsf@stronzo.brainbot.com>
	<1071069974.26501.17.camel@sheriffpony>
Message-ID: <86fzfsr2ah.fsf@stronzo.brainbot.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Wed, 2003-12-10 at 08:38, Ralf Schmitt wrote:
>
>> sending new style classes via perspective broker currently isn't
>> possible without extra effort. I have attached a short test program
>> and a patch to jelly.py, which solves that problem.
>
> Nice! Could you add this to the issue tracker? Adding a test would be
> even better :) http://twistedmatrix.com/bugs/

Issue added, but no test ;)

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From martin at datacash.com  Wed Dec 10 13:10:09 2003
From: martin at datacash.com (Martin Waite)
Date: 10 Dec 2003 18:10:09 +0000
Subject: [Twisted-Python] difficulty in calling callLater from callback
Message-ID: <1071079809.718.62.camel@pascal>

Hi,

I'm trying to get a set of database updates (read_db_response())
run once a second or so.

=================
dbpool = adbapi.ConnectionPool( "MySQLdb", host = 'localhost', user = 'martin', passwd = 'passwd', db = 'request' )

def read_db_response(cursor):
    cursor.execute( "update 1" )
    cursor.execute( "update 2" )
    cursor.execute( "update 3" )
    return 1;

def read_loop():
    dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )

read_loop()
=================

I thought I could do this by attaching a callback to 
dbpool.runInteraction(), and have that callback schedule
the next call of read_loop().

What happens is that read_db_response() runs exactly once.

Does anyone know what I have done wrong here ?

regards,
Martin




From itamar at itamarst.org  Wed Dec 10 13:31:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 13:31:41 -0500
Subject: [Twisted-Python] ANN: Twisted 1.1.1
Message-ID: <1071081101.25510.92.camel@sheriffpony>

Twisted is an event-driven networking framework for server and client
applications.

For more information, visit http://www.twistedmatrix.com, join the list
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python or
visit us on #twisted at irc.freenode.net.

The Twisted from Scratch tutorial is a good starting point for learning
Twisted: http://twistedmatrix.com/documents/howto/tutorial


What's New in 1.1.1
===================

- Many bug fixes and minor improvements.

- MSN protocol support updated to support MSN8P.

- Conch SSH client now supports SSH auth agent.


What is Twisted?
================

Twisted is an event-driven framework for building networked clients and
servers.  It contains a powerful and simple networking core, a
full-featured suite of interoperable protocols, among them a powerful
web server and applications framework.





From itamar at itamarst.org  Wed Dec 10 13:38:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 13:38:21 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <1071081501.26501.95.camel@sheriffpony>

On Wed, 2003-12-10 at 13:10, Martin Waite wrote:

> def read_loop():
>     dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )
> 
> read_loop()
> =================
> 
> I thought I could do this by attaching a callback to 
> dbpool.runInteraction(), and have that callback schedule
> the next call of read_loop().

Callbacks are expected to receive an argument, the result of the
previous callback/the deferred.

For example:

def read_loop():
    dbpool.runInteraction( read_db_response ).addCallback(
                   lambda _: reactor.callLater(1, read_loop ))

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From radix at twistedmatrix.com  Wed Dec 10 13:47:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 10 Dec 2003 13:47:03 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <3FD76A27.8060206@twistedmatrix.com>

Martin Waite wrote:
> dbpool = adbapi.ConnectionPool( "MySQLdb", host = 'localhost', user = 'martin', passwd = 'passwd', db = 'request' )
> 
> def read_db_response(cursor):
>     cursor.execute( "update 1" )
>     cursor.execute( "update 2" )
>     cursor.execute( "update 3" )
>     return 1;
> 
> def read_loop():
>     dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )

This code will make cause reactor.callLater(1, 1, read_loop) to be 
called, where the first `1' is the result of read_db_response.

You probably want

   .addCallback(lambda r: reactor.callLater(1, read_loop))

or something.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From exarkun at intarweb.us  Wed Dec 10 13:58:30 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 10 Dec 2003 13:58:30 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <20031210185830.GA16423@intarweb.us>

On Wed, Dec 10, 2003 at 06:10:09PM +0000, Martin Waite wrote:
> Hi,
> 
> [sni]p
> 
> What happens is that read_db_response() runs exactly once.
> 
> Does anyone know what I have done wrong here ?
> 

  radix and itamar have pointed out the specific problem, but I'd like to
point out another: there are no errbacks in your code.

  Without error handlers, any exception that is raised asynchronously
(termed a "failure" in Twisted) will probably never be reported to you.

  More importantly, even if you manage to debug your application without
adding error handlers, you'll never know if it breaks once you deploy it.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031210/728fe9dd/attachment.pgp 

From gavrie at disksites.com  Wed Dec 10 14:00:29 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Wed, 10 Dec 2003 21:00:29 +0200
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
Message-ID: <200312102100.30020.gavrie@disksites.com>

On Wed, 10 Dec 2003 12:23:56 -0500, Donovan Preston wrote:

> On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:
> 
> >         lmx(node).p().text(str(mydict))
> 
> Change this to lmx(self) and it works. It's the widget that knows the 
> correct place in the current DOM to make changes, not the template node 
> that was passed in (node).

Ah, now I see... you wouldn't believe how much I agonized over this... thanks.

Incidentally, since you keep mentioning Nevow, I did have some thoughts on 
using it instead of Woven.
However, I am using template files to generate forms instead of generating 
them from the code (I need precise layour control). It seems that Nevow 
doesn't yet fully handle rendering of template files. Is this correct? Are 
any changes to this expected soon?

PS: My apologies to the rest of the list for sending a text message in base64 
encoding (making it unreadable in the archives) -- that's what I deserve for 
posting that message from Outlook :-)

-- Gavrie.



From dp at twistedmatrix.com  Wed Dec 10 15:25:43 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 10 Dec 2003 15:25:43 -0500
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
In-Reply-To: <200312102100.30020.gavrie@disksites.com>
References: <200312102100.30020.gavrie@disksites.com>
Message-ID: <07BE351A-2B4F-11D8-8E58-000A95864FC4@twistedmatrix.com>

On Dec 10, 2003, at 2:00 PM, Gavrie Philipson wrote:

> On Wed, 10 Dec 2003 12:23:56 -0500, Donovan Preston wrote:
>
>> On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:
>>
>>>         lmx(node).p().text(str(mydict))
>>
>> Change this to lmx(self) and it works. It's the widget that knows the
>> correct place in the current DOM to make changes, not the template 
>> node
>> that was passed in (node).
>
> Ah, now I see... you wouldn't believe how much I agonized over this... 
> thanks.

Good, I'm glad that fixed it for you.

> Incidentally, since you keep mentioning Nevow, I did have some 
> thoughts on
> using it instead of Woven.

As I mentioned before, the parts of woven which are not yet implemented 
in Nevow are the LivePage and partial-page-rerendering stuff. You, by 
using notify, are using the partial-page-rerendering stuff. I'd be 
interested in knowing what you want to use it for, and how I can 
accommodate this use case and my use cases without being too 
heavyweight and cumbersome.

> However, I am using template files to generate forms instead of 
> generating
> them from the code (I need precise layour control). It seems that Nevow
> doesn't yet fully handle rendering of template files. Is this correct? 
> Are
> any changes to this expected soon?

Hmm -- I'm not sure where people get the impression that disk templates 
aren't supported. nevow.renderers.HTMLRenderer is the Resource subclass 
to use, and you can use it like this:

class Foo(HTMLRenderer):
	def data_bar(self, context, data):
		return "bar!"

	def render_baz(self, context, data):
		return "Baz (%s)" % data


Then, your HTML template would have model= and view= directives in it 
(eventually, these will be replaced by nevow:data and nevow:render 
directives, but I implemented model= and view= directives to allow use 
of woven templates)

<html>
	<body>
		<div model="bar" view="baz" />
	</body>
</html>

dp




From radix at twistedmatrix.com  Wed Dec 10 19:32:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 10 Dec 2003 19:32:32 -0500
Subject: [Twisted-Python] New twisted-web mailing list (Yes, this is for _YOU_)
Message-ID: <3FD7BB20.9080808@twistedmatrix.com>

We've decided to split off discussion of twisted.web, Nevow, and Woven 
into a new mailing list: twisted-web at twistedmatrix.com

Please subscribe here::

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

We have also started a new IRC channel, #twisted.web, on 
irc.freenode.net, as #divmod and #twisted were getting somewhat flooded 
with the t.w/Nevow discussion.

I've also updated our web site with links to the new mailing list.

Beware,-off-topic-posters!-ly yours,

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From gavrie at disksites.com  Thu Dec 11 03:01:15 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Thu, 11 Dec 2003 10:01:15 +0200
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C987A4@santarosa.dsnt.disksites.com>

> -----Original Message-----
> From: Donovan Preston [mailto:dp at twistedmatrix.com] 
> Sent: Wednesday, December 10, 2003 22:26
> Subject: Re: [Twisted-Python] Re: Woven: can't get view notification to work
> 

[...]

> As I mentioned before, the parts of woven which are not yet implemented 
> in Nevow are the LivePage and partial-page-rerendering stuff. You, by 
> using notify, are using the partial-page-rerendering stuff. I'd be 
> interested in knowing what you want to use it for, and how I can 
> accommodate this use case and my use cases without being too 
> heavyweight and cumbersome.

I'm using the partial rerendering stuff for error handling:
My model uses XML-RPC to get and set data from another machine. The XML-RPC calls are triggered (by the models) while rendering the page. If an error is returned from an XML-RPC call, I want to rerender parts of the page to reflect that error (e.g. adding an error message). Another area is when using forms: I am using controllers to handle form input. The controller, after validating the data, tries to submit it to the XML-RPC server. If the server returns an error for some reason, this should be reported to the user on the page that is rendered after submitting the form. Partial rerendering seemed the natural solution for this.

Am I missing a simple and obvious way to do these things?

[...]

> Hmm -- I'm not sure where people get the impression that disk 
> templates aren't supported. 

Er... could it possibly be because there's not much documentation for Nevow yet?

-- Gavrie.



From martin at datacash.com  Thu Dec 11 04:56:49 2003
From: martin at datacash.com (Martin Waite)
Date: 11 Dec 2003 09:56:49 +0000
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <20031210185830.GA16423@intarweb.us>
References: <1071079809.718.62.camel@pascal> 
	<20031210185830.GA16423@intarweb.us>
Message-ID: <1071136609.719.72.camel@pascal>

Thanks guys, this works a treat now.

regards,
Martin

On Wed, 2003-12-10 at 18:58, Jp Calderone wrote:
> On Wed, Dec 10, 2003 at 06:10:09PM +0000, Martin Waite wrote:
> > Hi,
> > 
> > [sni]p
> > 
> > What happens is that read_db_response() runs exactly once.
> > 
> > Does anyone know what I have done wrong here ?
> > 
> 
>   radix and itamar have pointed out the specific problem, but I'd like to
> point out another: there are no errbacks in your code.
> 
>   Without error handlers, any exception that is raised asynchronously
> (termed a "failure" in Twisted) will probably never be reported to you.
> 
>   More importantly, even if you manage to debug your application without
> adding error handlers, you'll never know if it breaks once you deploy it.
> 
>   Jp





From martin at datacash.com  Thu Dec 11 06:25:09 2003
From: martin at datacash.com (Martin Waite)
Date: 11 Dec 2003 11:25:09 +0000
Subject: [Twisted-Python] startService not called in finger14.py ?
Message-ID: <1071141909.719.133.camel@pascal>

Hi,

It seems that FingerService.stopService() and
FingerService.startService() never actually get called 
in finger14.py in the tutorial.

I have added logging into startService() and stopService()
to trace when they get called:

==========================================================
# Read from file
from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic
from twisted.python import log

class FingerProtocol(basic.LineReceiver):
    def lineReceived(self, user):
        self.factory.getUser(user
        ).addErrback(lambda _: "Internal error in server"
        ).addCallback(lambda m:
                      (self.transport.write(m+"\r\n"),
                       self.transport.loseConnection()))

class FingerService(service.Service):
    def __init__(self, filename):
        self.users = {}
        self.filename = filename
    def startService(self):
        def _read(self):
            for line in file(self.file):
                user, status = line.split(':', 1)
                user=user.strip()
                status=status.strip()
                self.users[user] = status
            self.call = reactor.callLater(30, _read)
        _read()
	log.msg( "startService" )
        service.Service.startService(self)
    def stopService(self):
	log.msg( "stopService" )
        service.Service.stopService(self)
        self.call.cancel()
    def getUser(self, user):
        return defer.succeed(self.users.get(user, "No such user"))
    def getFingerFactory(self):
	log.msg( "getFingerFactory" )
        f = protocol.ServerFactory()
        f.protocol, f.getUser = FingerProtocol, self.getUser,
        f.startService = self.startService
        return f

application = service.Application('finger', uid=1, gid=1)
f = FingerService('/home/martin/users')
finger = internet.TCPServer(1079, f.getFingerFactory())
finger.setServiceParent(service.IServiceCollection(application))
==========================================================


Running the example:

 twistd2.2 -noy finger14.py
2003/12/11 11:20 GMT [-] Log opened.
2003/12/11 11:20 GMT [-] twistd 1.1.1 (/usr/bin/python2.2 2.2.1) starting up
2003/12/11 11:20 GMT [-] reactor class: twisted.internet.default.SelectReactor
2003/12/11 11:20 GMT [-] Loading finger14.py...
2003/12/11 11:20 GMT [-] getFingerFactory
2003/12/11 11:20 GMT [-] Loaded.
2003/12/11 11:20 GMT [-] twisted.internet.protocol.ServerFactory starting on 1079
2003/12/11 11:20 GMT [-] Starting factory <twisted.internet.protocol.ServerFactory instance at 0x828e5e4>

<ctrl-C>

2003/12/11 11:20 GMT [-] (Port 1079 Closed)
2003/12/11 11:20 GMT [-] Stopping factory <twisted.internet.protocol.ServerFactory instance at 0x828e5e4>
2003/12/11 11:20 GMT [-] Main loop terminated.
2003/12/11 11:20 GMT [-] Server Shut Down.

==========================

This is bad news for me because I'm trying to write a service
based on this code.   I really want stopService() to be called
so I can cleanly close down my app, but I can't figure out
how to do it.

Can anyone help please ?

regards,
Martin








From dialtone at aruba.it  Thu Dec 11 12:03:05 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Thu, 11 Dec 2003 18:03:05 +0100
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <1071141909.719.133.camel@pascal>
References: <1071141909.719.133.camel@pascal>
Message-ID: <20031211170305.GA4844@vercingetorix.caesar.org>

I don't get why this version of my software does not work...  The
previous version did not use service.Service but directly
protocol.ServerFactory and it worked right.

Basically this software is a server to which you can connect and
manage some database, actually now it only supports sqlite but it will
support more and more soon I hope.

######################################## CODE HERE ################
VERSION = 0.1

from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic

import sqlite

def catchError(err):
    return "Internal Server"

class DBUniversalProtocol(basic.LineReceiver):
    def send_results(self, q_results):
        if q_results:
            print "Sending data...",
            self.transport.write(str(q_results) +'\r\n')
            print "OK"

    def connectionMade(self):
        self.factory.connect_to_DB()

    def connectionLost(self, reason):
        print "Connection closed by client... ",
        self.factory.conn.commit()
        self.factory.cursor.close()
        self.factory.conn.close()
        print "Reset done."

    def lineReceived(self, line):
        d = self.factory.dispatch_function(line)
        d.addErrback(catchError)
        d.addCallback(self.send_results)        

class DBUniversalService(service.Service):
    def __init__(self):
        print "DB Universal Server, v.", VERSION, "(c) Valentino Volonghi"
        print "Licensed under the Lesser General Public License v2.1"
        print "Written by Valentino Volonghi and released without any warranties"
        
        self.dispatcher = {'set_query':self.set_query,
                           'get_many':self.get_many,
                           'get_all':self.get_all,
                           'get_one':self.get_one
                          }
        self.conn = None
        self.cursor = None

    def getDBUniversalFactory(self):
        f = protocol.ServerFactory()
        f.protocol = DBUniversalProtocol
        f.dispatch_function = self.dispatch_function
        f.conn = self.conn
        f.cursor = self.cursor
        f.connect_to_DB = self.connect_to_DB
        return f

    def dispatch_function(self, line):
        # Every line sent to this server is made of some parts:
        # "FUN_TO_CALL:ARGS_IF_ANY\r\n"
        # Be sure to always use this format standard otherwise
        # You won't have the expected behaviour
        
        fun = line.split(":")[0]
        callable = self.dispatcher.get(fun.strip(), None)
        if not callable:
            return defer.succeed(self.error())
        else:
            return defer.succeed(callable(line))

    def set_query(self, line):
        arg = line.split(":")[1]
        self.SQL = arg
        return self.run_query()

    def get_many(self, line):
        arg = line.split(":")[1]
        try:
            NUM = int(arg)
        except:
            return defer.succeed(self.error())
        return defer.succeed(self.cursor.fetchmany(NUM))

    def get_all(self, line):
        return defer.succeed(self.cursor.fetchall())

    def get_one(self, line):
        return defer.succeed(self.cursor.fetchone())

    def error(self):
        return "Operation Failed!"

    def allOK(self):
        return "OK"
    
    def run_query(self):
        print "Checking the query (%s)... " %(self.SQL.strip()),
        isCorrect = self.check_query(self.SQL)        
        if isCorrect:
            print " OK"
            self.cursor.execute(self.SQL)
            return defer.succeed(self.allOK())
        else:
            print " Failed"
            return defer.succeed(self.error())

    def check_query(self, to_check):
        res = to_check.split("\r\n")
        if len(res) > 2: return 0
        if res[0][-1] != ";": return 0
        return 1

    def connect_to_DB(self):
        print "Connecting to DB... ",
        self.conn = sqlite.connect("test.db")
        self.cursor = self.conn.cursor()
        print "OK"

#############################################
MYPORT = 6000
application = service.Application('dbi_face', uid=1000, gid=1000)
f = DBUniversalService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(MYPORT, f.getDBUniversalFactory()
                   ).setServiceParent(serviceCollection)
#############################################
Are these last lines right or are they wrong?

I've not really understood the meaning of the last lines,
while I understand the meaning of:

reactor.listenTCP(MYPORT, DBUniversalServer())
reactor.run()

I must say I based my "upgrade" to finger listings.

Thanks for your help

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User



From ddsell at msn.com  Thu Dec 11 20:14:16 2003
From: ddsell at msn.com (Dustin Sell)
Date: Thu, 11 Dec 2003 20:14:16 -0500
Subject: [Twisted-Python] Installing Twisted 1.0.7 on FreeBSD 4.4
Message-ID: <BAY3-F116kzyeCOOwxi000326bf@hotmail.com>

I'm wanting to install proxy65 onto a Jabber server - which requires at a 
minimum Twisted v1.0.7.  The only port of I see of Twisted for FreeBSD is 
1.0.6.  Has anyone successfully installed v1.0.7 onto a FreeBSD 4.4 system?  
Anything to look out for/gotcha's/etc?

Thanks,
Dustin

_________________________________________________________________
Don?t worry if your Inbox will max out while you are enjoying the holidays.  
Get MSN Extra Storage!  http://join.msn.com/?PAGE=features/es




From kunger at intersight.com  Thu Dec 11 21:18:40 2003
From: kunger at intersight.com (Kevin Unger)
Date: Thu, 11 Dec 2003 18:18:40 -0800
Subject: [Twisted-Python] Session expiration callbacks have no arguments?
In-Reply-To: <20031211170305.GA4844@vercingetorix.caesar.org>
Message-ID: <8016EC8C-2C49-11D8-9030-003065B25CAA@intersight.com>

Hello twisteds,

Shouldn't the callbacks that are  registered via 
web.server.Session.notifyOnExpire() be called with the session object 
as a parameter?  How does the callback know what session is expiring?

-k




On Thursday, December 11, 2003, at 09:03 AM, Valentino Volonghi aka 
Dialtone wrote:

> I don't get why this version of my software does not work...  The
> previous version did not use service.Service but directly
> protocol.ServerFactory and it worked right.
>
> Basically this software is a server to which you can connect and
> manage some database, actually now it only supports sqlite but it will
> support more and more soon I hope.
>
> ######################################## CODE HERE ################
> VERSION = 0.1
>
> from twisted.application import internet, service
> from twisted.internet import protocol, reactor, defer
> from twisted.protocols import basic
>
> import sqlite
>
> def catchError(err):
>     return "Internal Server"
>
> class DBUniversalProtocol(basic.LineReceiver):
>     def send_results(self, q_results):
>         if q_results:
>             print "Sending data...",
>             self.transport.write(str(q_results) +'\r\n')
>             print "OK"
>
>     def connectionMade(self):
>         self.factory.connect_to_DB()
>
>     def connectionLost(self, reason):
>         print "Connection closed by client... ",
>         self.factory.conn.commit()
>         self.factory.cursor.close()
>         self.factory.conn.close()
>         print "Reset done."
>
>     def lineReceived(self, line):
>         d = self.factory.dispatch_function(line)
>         d.addErrback(catchError)
>         d.addCallback(self.send_results)
>
> class DBUniversalService(service.Service):
>     def __init__(self):
>         print "DB Universal Server, v.", VERSION, "(c) Valentino 
> Volonghi"
>         print "Licensed under the Lesser General Public License v2.1"
>         print "Written by Valentino Volonghi and released without any 
> warranties"
>
>         self.dispatcher = {'set_query':self.set_query,
>                            'get_many':self.get_many,
>                            'get_all':self.get_all,
>                            'get_one':self.get_one
>                           }
>         self.conn = None
>         self.cursor = None
>
>     def getDBUniversalFactory(self):
>         f = protocol.ServerFactory()
>         f.protocol = DBUniversalProtocol
>         f.dispatch_function = self.dispatch_function
>         f.conn = self.conn
>         f.cursor = self.cursor
>         f.connect_to_DB = self.connect_to_DB
>         return f
>
>     def dispatch_function(self, line):
>         # Every line sent to this server is made of some parts:
>         # "FUN_TO_CALL:ARGS_IF_ANY\r\n"
>         # Be sure to always use this format standard otherwise
>         # You won't have the expected behaviour
>
>         fun = line.split(":")[0]
>         callable = self.dispatcher.get(fun.strip(), None)
>         if not callable:
>             return defer.succeed(self.error())
>         else:
>             return defer.succeed(callable(line))
>
>     def set_query(self, line):
>         arg = line.split(":")[1]
>         self.SQL = arg
>         return self.run_query()
>
>     def get_many(self, line):
>         arg = line.split(":")[1]
>         try:
>             NUM = int(arg)
>         except:
>             return defer.succeed(self.error())
>         return defer.succeed(self.cursor.fetchmany(NUM))
>
>     def get_all(self, line):
>         return defer.succeed(self.cursor.fetchall())
>
>     def get_one(self, line):
>         return defer.succeed(self.cursor.fetchone())
>
>     def error(self):
>         return "Operation Failed!"
>
>     def allOK(self):
>         return "OK"
>
>     def run_query(self):
>         print "Checking the query (%s)... " %(self.SQL.strip()),
>         isCorrect = self.check_query(self.SQL)
>         if isCorrect:
>             print " OK"
>             self.cursor.execute(self.SQL)
>             return defer.succeed(self.allOK())
>         else:
>             print " Failed"
>             return defer.succeed(self.error())
>
>     def check_query(self, to_check):
>         res = to_check.split("\r\n")
>         if len(res) > 2: return 0
>         if res[0][-1] != ";": return 0
>         return 1
>
>     def connect_to_DB(self):
>         print "Connecting to DB... ",
>         self.conn = sqlite.connect("test.db")
>         self.cursor = self.conn.cursor()
>         print "OK"
>
> #############################################
> MYPORT = 6000
> application = service.Application('dbi_face', uid=1000, gid=1000)
> f = DBUniversalService()
> serviceCollection = service.IServiceCollection(application)
> internet.TCPServer(MYPORT, f.getDBUniversalFactory()
>                    ).setServiceParent(serviceCollection)
> #############################################
> Are these last lines right or are they wrong?
>
> I've not really understood the meaning of the last lines,
> while I understand the meaning of:
>
> reactor.listenTCP(MYPORT, DBUniversalServer())
> reactor.run()
>
> I must say I based my "upgrade" to finger listings.
>
> Thanks for your help
>
> -- 
> Valentino Volonghi, Regia SpA, Milan
> Linux User #310274, Gentoo Proud User
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From rdrb at 123.cl  Thu Dec 11 15:36:01 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 11 Dec 2003 17:36:01 -0300
Subject: [Twisted-Python] Jabber knowledge sharing
Message-ID: <5cbdb15cc410.5cc4105cbdb1@noborrar.co.cl>

Hi!,

I'm searching People that could want to collaborate in the devellopment of an interface between a P2P chat and presence service and Jabber.

The idea is to implement a client for Circle that would provide a (simple) Jabber server. So jabber clients (gaim, etc) can connect to it.

I would like to contact people interested in the project or in the topic, that could help me with the Jabber side, at least at the conceptual level.

Thanks in advance,
RodrigoB.

http://thecircle.org.au




From R.Livsey at cache-22.co.uk  Thu Dec 11 21:01:21 2003
From: R.Livsey at cache-22.co.uk (Richard Livsey)
Date: Fri, 12 Dec 2003 02:01:21 +0000
Subject: [Twisted-Python] IRC & Excess-Flood
Message-ID: <3FD92171.9000705@cache-22.co.uk>

I'm in the process of writing an IRC component to an app I've made.
All seems to work fine, except when it comes to output a lot of data it 
gets booted from the IRC server for flooding :o)

*** Quits: SearchBot (Excess Flood)

However, it doesn't seem to just disconnect as clientConnectionLost 
doesn't get called.

In the logs, it says:
 'Stopping factory <__builtin__.IRCClientFactoryFromService instance at 
0x00CE06E8>'

Any ideas on what I can do to stop it happening?
For the moment I'm just going to throttle the output by making each 
message have a delay using callLater, but it would be nice to work out 
whats happening!

Cheers :o)

-- 
R.Livsey
Incutio Web Developer
www.cache-22.co.uk
www.incutio.com




From itamar at itamarst.org  Thu Dec 11 13:28:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Dec 2003 13:28:16 -0500
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <20031211170305.GA4844@vercingetorix.caesar.org>
References: <1071141909.719.133.camel@pascal>
	 <20031211170305.GA4844@vercingetorix.caesar.org>
Message-ID: <1071167296.26496.103.camel@sheriffpony>

On Thu, 2003-12-11 at 12:03, Valentino Volonghi aka Dialtone wrote:

> #############################################
> MYPORT = 6000
> application = service.Application('dbi_face', uid=1000, gid=1000)
> f = DBUniversalService()
> serviceCollection = service.IServiceCollection(application)
> internet.TCPServer(MYPORT, f.getDBUniversalFactory()
>                    ).setServiceParent(serviceCollection)
> #############################################
> Are these last lines right or are they wrong?

Looks right. are you running it with twistd?

$ twistd -y myscript.py

See also twistd --help

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From vlupien at drummonddesigns.com  Thu Dec 11 16:30:39 2003
From: vlupien at drummonddesigns.com (vicky lupien)
Date: Thu, 11 Dec 2003 16:30:39 -0500
Subject: [Twisted-Python] template in wchild
Message-ID: <000001c3c02e$05e88920$687ba8c0@vicky>

I have a web base application with woven.  I'm using an html template
with a form for my page.  In the setUp fonction I've changed my
template. 
So when I click on my submit button in my form, I want to see the
template with the modification from the setUp in my wchild_submit.  I
don't know if it's possible.  I tried to use request.d but it's seems
that it's not the same request from my page's class.
 
Thx in advance,
 
Vicky 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031211/4c045812/attachment.htm 

From ttimo at idsoftware.com  Fri Dec 12 03:50:43 2003
From: ttimo at idsoftware.com (Timothee Besset)
Date: Fri, 12 Dec 2003 09:50:43 +0100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <3FD92171.9000705@cache-22.co.uk>
References: <3FD92171.9000705@cache-22.co.uk>
Message-ID: <20031212095043.343700e9.ttimo@idsoftware.com>

The IRC RFCs describe the flood protection mecanism that's used in IRC
daemons. The IRC protocol in twisted doesn't do any rate limitation, it
can easily flood the server and get disconnected. I have the rate
monitoring algorithm written in C, contact me directly if you are
interested. It might be a good thing to add that to twisted's IRC protocol
if you convert it to python.

TTimo

On Fri, 12 Dec 2003 02:01:21 +0000
Richard Livsey <R.Livsey at cache-22.co.uk> wrote:

> I'm in the process of writing an IRC component to an app I've made.
> All seems to work fine, except when it comes to output a lot of data it 
> gets booted from the IRC server for flooding :o)
> 
> *** Quits: SearchBot (Excess Flood)
> 
> However, it doesn't seem to just disconnect as clientConnectionLost 
> doesn't get called.
> 
> In the logs, it says:
>  'Stopping factory <__builtin__.IRCClientFactoryFromService instance at 
> 0x00CE06E8>'
> 
> Any ideas on what I can do to stop it happening?
> For the moment I'm just going to throttle the output by making each 
> message have a delay using callLater, but it would be nice to work out 
> whats happening!
> 
> Cheers :o)
> 
> -- 
> R.Livsey
> Incutio Web Developer
> www.cache-22.co.uk
> www.incutio.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Fri Dec 12 04:14:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Dec 2003 20:14:21 +1100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212095043.343700e9.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk> <20031212095043.343700e9.ttimo@idsoftware.com>
Message-ID: <20031212091421.GA25857@frobozz>

On Fri, Dec 12, 2003 at 09:50:43AM +0100, Timothee Besset wrote:
> The IRC RFCs describe the flood protection mecanism that's used in IRC
> daemons. The IRC protocol in twisted doesn't do any rate limitation, it

Actually, it does.  IRCClient has a lineRate[1] attribute that controls rate
limiting.  See the docstring for details.

-Andrew.

[1] It really should be called lineDelay, because as the docstring says,
    it's the delay, not the rate.  Oh well.




From nico at tekNico.net  Fri Dec 12 05:08:06 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 12 Dec 2003 11:08:06 +0100
Subject: [Twisted-Python] Re: New twisted-web mailing list (Yes, this is for _YOU_)
In-Reply-To: <3FD7BB20.9080808@twistedmatrix.com>
References: <3FD7BB20.9080808@twistedmatrix.com>
Message-ID: <3FD99386.1020803@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> We've decided to split off discussion of twisted.web, Nevow, and Woven
> into a new mailing list: twisted-web at twistedmatrix.com

Now on gmane.org too, included by yours truly. :^)


- --
Nicola Larosa - nico at tekNico.net

"Computers are beyond dumb, they're mind-numbingly stupid.
They're hostile, rigid, capricious, and unforgiving.
They're impossibly demanding and they never learn anything."
- -- John R. Levine


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQE/2ZOEXv0hgDImBm4RAiRlAJ9FALfySlseNg5VmJpevPL/ziIesACeJLjJ
ZHO4SsDa2W8AQYe/Y+9blf4=
=e3I1
-----END PGP SIGNATURE-----




From dialtone at aruba.it  Fri Dec 12 06:13:07 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Fri, 12 Dec 2003 12:13:07 +0100
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <1071167296.26496.103.camel@sheriffpony>
References: <1071141909.719.133.camel@pascal> <20031211170305.GA4844@vercingetorix.caesar.org> <1071167296.26496.103.camel@sheriffpony>
Message-ID: <20031212111307.GG4844@vercingetorix.caesar.org>

* Itamar Shtull-Trauring <itamar at itamarst.org> [111203, 13:28]:
> $ twistd -y myscript.py
> 
> See also twistd --help

I was not. But a friend of mine told me to do so and it worked. Thx
for your help anyway.

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User
Date: Fri, 12 Dec 2003 12:13:03 +0100
Message-ID: <87k752xpa8.fsf at vercingetorix.caesar.org>



From ttimo at idsoftware.com  Fri Dec 12 07:22:17 2003
From: ttimo at idsoftware.com (Timothee Besset)
Date: Fri, 12 Dec 2003 13:22:17 +0100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212091421.GA25857@frobozz>
References: <3FD92171.9000705@cache-22.co.uk>
	<20031212095043.343700e9.ttimo@idsoftware.com>
	<20031212091421.GA25857@frobozz>
Message-ID: <20031212132217.42247c11.ttimo@idsoftware.com>

Last time I looked, lineRate used a simple delaying algorithm, which is
quite far from what the ircd does for rate control. It should work fairly
well if you set it to something ( default is no rate control ), but it's
far from optimal.

TTimo

On Fri, 12 Dec 2003 20:14:21 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> On Fri, Dec 12, 2003 at 09:50:43AM +0100, Timothee Besset wrote:
> > The IRC RFCs describe the flood protection mecanism that's used in IRC
> > daemons. The IRC protocol in twisted doesn't do any rate limitation, it
> 
> Actually, it does.  IRCClient has a lineRate[1] attribute that controls rate
> limiting.  See the docstring for details.
> 
> -Andrew.
> 
> [1] It really should be called lineDelay, because as the docstring says,
>     it's the delay, not the rate.  Oh well.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Fri Dec 12 07:47:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Dec 2003 23:47:19 +1100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212132217.42247c11.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk> <20031212095043.343700e9.ttimo@idsoftware.com> <20031212091421.GA25857@frobozz> <20031212132217.42247c11.ttimo@idsoftware.com>
Message-ID: <20031212124719.GA26954@frobozz>

On Fri, Dec 12, 2003 at 01:22:17PM +0100, Timothee Besset wrote:
> Last time I looked, lineRate used a simple delaying algorithm, which is
> quite far from what the ircd does for rate control. It should work fairly
> well if you set it to something ( default is no rate control ), but it's
> far from optimal.

Well, that's still better than "doesn't do any rate limitation", which is
what you claimed earlier.  I think the original poster is better off using
Twisted's rate limiting that works "fairly well" than being told it has none
at all.

-Andrew.




From R.Livsey at cache-22.co.uk  Fri Dec 12 08:00:06 2003
From: R.Livsey at cache-22.co.uk (Richard Livsey)
Date: Fri, 12 Dec 2003 13:00:06 +0000
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212132217.42247c11.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk>	<20031212095043.343700e9.ttimo@idsoftware.com>	<20031212091421.GA25857@frobozz> <20031212132217.42247c11.ttimo@idsoftware.com>
Message-ID: <3FD9BBD6.9070102@cache-22.co.uk>

Thanks to all that replied, I have set lineRate and instead of 
displaying all results I have limited the number of messages sent at any 
one time to 10 (with a command to display the next 10 etc..)
Seems to work quite well now.

Thanks again.

-- 
R.Livsey
Incutio Web Developer
www.cache-22.co.uk
www.incutio.com


Timothee Besset wrote:

>Last time I looked, lineRate used a simple delaying algorithm, which is
>quite far from what the ircd does for rate control. It should work fairly
>well if you set it to something ( default is no rate control ), but it's
>far from optimal.
>
>TTimo
>




From missive at hotmail.com  Fri Dec 12 08:52:48 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 12 Dec 2003 13:52:48 +0000
Subject: [Twisted-Python] Re: Installing Twisted 1.0.7 on FreeBSD 4.4
Message-ID: <BAY2-F64JkrKdMUPqRn00026fdc@hotmail.com>

>I'm wanting to install proxy65 onto a Jabber server - which requires at a
>minimum Twisted v1.0.7.  The only port of I see of Twisted for FreeBSD is
>1.0.6.  Has anyone successfully installed v1.0.7 onto a FreeBSD 4.4 system?
>Anything to look out for/gotcha's/etc?
>

1.1.0 is the current version in ports.

That said, FreeBSD 4.4 is pretty outdated, and you may have trouble
compiling anything from the ports collection. I have read a few messages
recently which hinted that people would need to update their base
systems first.

That said, I don't think you should have any problems just installing the
latest twisted straight from the release tarball.

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From martin at datacash.com  Fri Dec 12 10:25:43 2003
From: martin at datacash.com (Martin Waite)
Date: 12 Dec 2003 15:25:43 +0000
Subject: [Twisted-Python] patch for finger14.py
Message-ID: <1071242743.719.207.camel@pascal>

Hi,

Below is a patched up version of finger14.py for the 
tutorial page.

The key difference here is that the FingerService 
is registered as a service of the application, and so 
the startService() and stopService() methods are called 
appropriately.

I have also removed the statement 
   f.startService = self.startService
from within getFingerFactory(), because it didn't 
do anything.  Also, self.file has become self.filename
in _read().

It does work now, but is this the right way to do it ?

cheers,
Martin

=======================================

# Read from file
from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic

class FingerProtocol(basic.LineReceiver):
    def lineReceived(self, user):
        self.factory.getUser(user
        ).addErrback(lambda _: "Internal error in server"
        ).addCallback(lambda m:
                      (self.transport.write(m+"\r\n"),
                       self.transport.loseConnection()))

class FingerService(service.Service):
    def __init__(self, filename):
        self.users = {}
        self.filename = filename
    def startService(self):
        def _read(self):
            for line in file(self.filename):
                user, status = line.split(':', 1)
                user=user.strip()
                status=status.strip()
                self.users[user] = status
            self.call = reactor.callLater(30, _read)
        _read(self)
        service.Service.startService(self)
    def stopService(self):
        service.Service.stopService(self)
        self.call.cancel()
    def getUser(self, user):
        return defer.succeed(self.users.get(user, "No such user"))
    def getFingerFactory(self):
        f = protocol.ServerFactory()
        f.protocol, f.getUser = FingerProtocol, self.getUser,
        return f

application = service.Application('finger', uid=1, gid=1)
f = FingerService('/etc/users')
finger = internet.TCPServer(79, f.getFingerFactory())

f.setServiceParent(service.IServiceCollection(application)) 
finger.setServiceParent(service.IServiceCollection(application))







From dizzyd at jabber.org  Fri Dec 12 10:28:31 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Fri, 12 Dec 2003 08:28:31 -0700
Subject: [Twisted-Python] PyOpenSSL for Python 2.3
In-Reply-To: <3FCCC299.3060507@jibson.com>
References: <3FCCC299.3060507@jibson.com>
Message-ID: <D7D90A50-2CB7-11D8-80F4-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I have the Windows version available at:

http://www.dizzyd.com/pyOpenSSL-0.5.1.win32-py2.3.exe

D.

On Dec 2, 2003, at 9:49 AM, Steve Jibson wrote:

> Hi.
>
> Sorry to bother you, but do you have (or can you point me to) a binary 
> distribution of pyOpenSSL for Python 2.3?
>
> Thanks,
>
> Steve
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (Darwin)

iD8DBQE/2d6gYNE3chVHHsMRArtRAKCvZAMUKgYw4wb8/AZLSJ7BjzqH0QCgn7P0
aXeFVzXzrI7NoIIQnytIDr8=
=aqcT
-----END PGP SIGNATURE-----




From dp at twistedmatrix.com  Fri Dec 12 10:43:18 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 12 Dec 2003 10:43:18 -0500
Subject: [Twisted-Python] template in wchild
In-Reply-To: <000001c3c02e$05e88920$687ba8c0@vicky>
References: <000001c3c02e$05e88920$687ba8c0@vicky>
Message-ID: <E802570D-2CB9-11D8-8659-000A95864FC4@twistedmatrix.com>


On Dec 11, 2003, at 4:30 PM, vicky lupien wrote:

> I have a web base application with woven.?I?m using an html template 
> with a form for my page.? In the setUp fonction I?ve changed my 
> template.
>
> So when I click on my submit button in my form, I want to see the 
> template with the modification from the setUp in my wchild_submit.? I 
> don?t know if it?s possible.? I tried to use request.d but it?s seems 
> that it?s not the same request from my page?s class.

Please use twisted-web for questions like this in the future -- it's 
what we set it up for. 
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

twisted.web.woven.page.Page loads the template and parses it into a DOM 
at initialization time. If you want to dynamically construct a template 
in wchild_submit, which needs to return a Resource instance (which Page 
is), you should construct and return a new page instance with your 
dynamic template:

def wchild_submit(self, request):
	return page.Page(template="""<html>HELLO!</html>""")

dp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1184 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031212/966b3d89/attachment.bin 

From fog at initd.org  Fri Dec 12 17:25:35 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 12 Dec 2003 23:25:35 +0100
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
Message-ID: <1071267935.1263.116.camel@localhost>

Hi *,

lately some people asked me why twisted does not support psycopg. Mm..
actually I write all my twisted-based code using psycopg so I was a
little bit disappointed. :) They told me that twisted is using pypgsql
as default and I finally realized what they meant: psycopg is missing
from the test_enterprise.py unit test and pypgsql is listed as "the"
postgresql adapter. So here's the patch that adds psycopg to
test_enterprise.py (I don't care about the "the" part :) 

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Spesso crescere ed andare a vivere da soli ? l'unico modo di restare
   bambini.                                             -- Alice Fontana
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_enterprise.py-psycopg.diff
Type: text/x-patch
Size: 1675 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031212/9d8f022f/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031212/9d8f022f/attachment.pgp 

From andrew-twisted at puzzling.org  Fri Dec 12 19:37:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 13 Dec 2003 11:37:06 +1100
Subject: [Twisted-Python] patch for finger14.py
In-Reply-To: <1071242743.719.207.camel@pascal>
References: <1071242743.719.207.camel@pascal>
Message-ID: <20031213003706.GA736@frobozz>

On Fri, Dec 12, 2003 at 03:25:43PM +0000, Martin Waite wrote:
> Hi,
> 
> Below is a patched up version of finger14.py for the 
> tutorial page.

Can you please submit this to http://twistedmatrix.com/bugs, so it doesn't
get forgotten?

Thanks!

-Andrew.




From douglas at paradise.net.nz  Fri Dec 12 22:54:40 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Sat, 13 Dec 2003 16:54:40 +1300
Subject: [Twisted-Python] subclassing ftp
Message-ID: <3FDA8D80.5060404@paradise.net.nz>

hi all,

I'm making a thing which collects webcam images via ftp (the lowest 
common denominator for webcam software), and sends them off again via 
the web.  I'd quite like to do it without troubling the file system, 
storing the images as python strings, whilst ignoring all the cd/pwd 
stuff.  Needless to say I don't want to use real system usernames.

Is this very sensible or possible?  I (happily) don't know much about 
the ftp protocol, or its twisted implementation.


cheers,

Douglas Bagnall




From fog at initd.org  Sat Dec 13 14:15:01 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 20:15:01 +0100
Subject: [Twisted-Python] long-lived database transaction
Message-ID: <1071342901.1263.164.camel@localhost>

Hi *,

attached to this mail there are two files that implement long-lived
database transactions for twisted (xdbapi.py, to be dropped in
twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 

some months ago i needed database transactions that span more than a
single deferred chain (i.e., runInteraction) and i noting that twisted
was missing such a feature i implemented them in my application. now
that i have some free time, i though it would be nice to let other
people use my code directly from twisted. note that everything you can
do with xdbapi can be done with adbapi and long chains of deferred, but
for some kind of applications keeping around an open transaction and
committing at the end of a complex process is much more simplier.

here is a little example, note that all the methods are completely
asynchronous and return deferreds. also note that the example just show
the usage but not the "reason" for xdbapi. (the original need was that
sometimes you can't commit some information because the whole stuff
comes in pieces but accumulating it makes the code much more complicated
than just writing to the db and the commit the whole at the end.)

class MyAppUsingLongLivedTransactions:

    def __init__(self):
        self.dbpool = xdbapi.ConnectionPool('psycopg', database='test')

    def doSomething(self):
        # react to some user input, open the transaction and save it away,
        # also do a select and present the user some data
        d = self.dbpool.begin()
        d.addCallback(self.doSomething_cb)

    def doSomething_cb(self, trans):
        self.trans = trans
        d = self.trans.runQuery("SELECT ...")
        d.addCallback(self.doSomethingWithTheDataAndAskUserNextStep)

    def doSomthingElse(self, data):
        # the user gave us some data and we need to write to db and commit
        self.trans.runOperation("INSERT...", data)
        # no callback/errback? ouch!
        self.trans.commit()
        # ouch! again, but this is just an example

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  L'unica cosa che riesco a produrre con una certa precisione nella mia
   vita sono i dubbi.                                  -- Natale Titotto
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xdbapi.py
Type: text/x-python
Size: 10079 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/2440b483/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_xdbapi.py
Type: text/x-python
Size: 10423 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/2440b483/attachment-0001.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/2440b483/attachment.pgp 

From radix at twistedmatrix.com  Sat Dec 13 15:55:22 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 13 Dec 2003 15:55:22 -0500
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071342901.1263.164.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
Message-ID: <3FDB7CBA.7030903@twistedmatrix.com>

Federico Di Gregorio wrote:
> Hi *,
> 
> attached to this mail there are two files that implement long-lived
> database transactions for twisted (xdbapi.py, to be dropped in
> twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 


This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
you can integrate with/refactor adbapi such that you don't duplicate all 
that code?

Also, please create a "Feature"-level issue on the bug tracker for this 
patch (especially since the patch needs discussion):

   http://twistedmatrix.com/bugs/

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From khowe at perfnet.ca  Fri Dec 12 15:38:46 2003
From: khowe at perfnet.ca (Kevin Howe)
Date: Fri, 12 Dec 2003 15:38:46 -0500
Subject: [Twisted-Python] mktap not working with Twisted_NoDocs-1.1.1.win32-py2.3.exe
Message-ID: <000001c3c0f0$072cdad0$1a00000a@khowe>

I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script
runs with no errors (I tried using --debug), it just just ends with no TAP
file being created?




From itamar at itamarst.org  Sat Dec 13 16:05:32 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Dec 2003 16:05:32 -0500
Subject: [Twisted-Python] mktap not working with
	Twisted_NoDocs-1.1.1.win32-py2.3.exe
In-Reply-To: <000001c3c0f0$072cdad0$1a00000a@khowe>
References: <000001c3c0f0$072cdad0$1a00000a@khowe>
Message-ID: <1071349531.31486.1.camel@sheriffpony>

On Fri, 2003-12-12 at 15:38, Kevin Howe wrote:
> I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
> use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script
> runs with no errors (I tried using --debug), it just just ends with no TAP
> file being created?

You need to run c:\python23\scripts\mktap.py, and not what you are
currently doing (c:\python23\site-packages\twisted\scripts\mktap.py) or
whatever.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Sat Dec 13 16:16:30 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sat, 13 Dec 2003 22:16:30 +0100
Subject: [Twisted-Python] mktap not working with Twisted_NoDocs-1.1.1.win32-py2.3.exe
In-Reply-To: <000001c3c0f0$072cdad0$1a00000a@khowe>
References: <000001c3c0f0$072cdad0$1a00000a@khowe>
Message-ID: <20031213211630.GA24734@pasternak.w.lub.pl>

Kevin Howe [Fri, Dec 12, 2003 at 03:38:46PM -0500]:
> I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
> use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script

If you won't give it the name of service to create, it won't do much.

Just run "mktap.py" without parameters and check the help.

AFAIR there's also mktap.bat somewhere under c:\python2x\

Take care,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From fog at initd.org  Sat Dec 13 16:50:50 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 22:50:50 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <3FDB7CBA.7030903@twistedmatrix.com>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>
Message-ID: <1071352250.1263.177.camel@localhost>

Il sab, 2003-12-13 alle 21:55, Christopher Armstrong ha scritto:
> Federico Di Gregorio wrote:
> > Hi *,
> > 
> > attached to this mail there are two files that implement long-lived
> > database transactions for twisted (xdbapi.py, to be dropped in
> > twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 
> 
> This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> you can integrate with/refactor adbapi such that you don't duplicate all 
> that code?

the original code was very different from adbapi, but i wanted to
provide a similar interface. that's why i rape'n'pasted. :)

unfortunately the adbapi code is based on a *thread* pool and the
connection pool is just a side-effect of using one connection per thread
(this is completely wrong, imho, see my comments of about one year ago
about adbapi on this very list.) anyway, this obviously makes impossible
to have long-lived transactions. 

i would be very happy to convert adbapi to a *real connection pool* and
add long-lived transactions to it (very much like xdbapi incorporates
one-shot transactions that mimic ConnectionPool.runXXX, look at the
code) but i tought it was less invasive to first provide a completely
separate implementation, starting with xdbapi.

> Also, please create a "Feature"-level issue on the bug tracker for this 
> patch (especially since the patch needs discussion):

ok. let's discuss it and i'll resubmit the patch after.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
   Lasciate che i furetti vengano a me. -- Maria Luisa Benedetta Panzani
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/79ff44bd/attachment.pgp 

From grib at billgribble.com  Sat Dec 13 16:53:16 2003
From: grib at billgribble.com (Bill Gribble)
Date: Sat, 13 Dec 2003 15:53:16 -0600
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <3FDB7CBA.7030903@twistedmatrix.com>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>
Message-ID: <1071352396.976.136.camel@serrano>

On Sat, 2003-12-13 at 14:55, Christopher Armstrong wrote:
> This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> you can integrate with/refactor adbapi such that you don't duplicate all 
> that code?
> 
> Also, please create a "Feature"-level issue on the bug tracker for this 
> patch (especially since the patch needs discussion):
> 
>    http://twistedmatrix.com/bugs/

There's already a bug about this, # 303.  I submitted a patch for
similar functionality a while back.  After a couple go-rounds with Dave
P, I arrived at a satisfactory solution, which I then dropped the ball
on submitting :(  

I've been using it here for a couple of months with no problems.  I just
added a few calls to the existing adbapi api to get/commit transactions
and to call operations/queries in them. 

Attached is MY current patch to adbapi.py,, which I'm 92% happy with
(there are probably cleaner ways to handle the per-thread work queue).
Furthermore there aren't any tests.  I'd be happy to do a little more
work to clean it up and add tests if it's a decent base to work from. 

Thanks,
b.g.






-------------- next part --------------
A non-text attachment was scrubbed...
Name: adbdiff.out
Type: text/x-patch
Size: 6364 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/7e9c40c0/attachment.bin 

From fog at initd.org  Sat Dec 13 17:15:43 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 23:15:43 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071352396.976.136.camel@serrano>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352396.976.136.camel@serrano>
Message-ID: <1071353743.1263.182.camel@localhost>

Il sab, 2003-12-13 alle 22:53, Bill Gribble ha scritto:

> There's already a bug about this, # 303.  I submitted a patch for
> similar functionality a while back.  After a couple go-rounds with Dave
> P, I arrived at a satisfactory solution, which I then dropped the ball
> on submitting :(  

sorry, i went over it. :(

> I've been using it here for a couple of months with no problems.  I just
> added a few calls to the existing adbapi api to get/commit transactions
> and to call operations/queries in them. 
> 
> Attached is MY current patch to adbapi.py,, which I'm 92% happy with

I don't like it very much, mainly because it sticks with the "let's use
a thread pool" and then needs semaphores and locks to do what is better
done by a simple list (see my patch)...

*but*

...it provides what i need(ed) and if it has any possibility of going in
i will happily help writing the unit tests. no problems leaving xdbapi
out in this case.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  I terminali seriali sono in via di estinzione (infatti quello che
   c'era si ? estinto)                                 -- Simone Caldana
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031213/bf84d6ea/attachment.pgp 

From stormcoder at yahoo.com  Sat Dec 13 20:44:33 2003
From: stormcoder at yahoo.com (Mike Owens)
Date: Sat, 13 Dec 2003 17:44:33 -0800
Subject: [Twisted-Python] Small Problem -twisted web
Message-ID: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>

I have written a script that runs as a Win32 service. The service runs but
when I try to connect I get a connection refused error in the browser. I am
including the source at the end. Also the call to unlistenTCP doesn't seem
to return. Anyone have any ideas?

import win32serviceutil as wsu
import win32service as ws
import win32event as we



from twisted.internet import app
from twisted.web import static, server, vhost, script

DefaultSite = r"sites\Default\documents"
my = r"sites\my\documents"
other = r"sites\other\documents"

Indices = ['index.html', 'index.rpy']

class TwistedService(wsu.ServiceFramework, object):
    _svc_name_ = "TwistedWeb"
    _svc_display_name_ = "A twisted web server"
    root = None
    Application = None
    def __init__ (self, args):
        wsu.ServiceFramework.__init__(self, args)
        self.hWaitStop = we.CreateEvent(None, 0, 0, None)
        self.root = vhost.NameVirtualHost()
        self.root.default = static.File(DefaultSite)
        pf = static.File(my)
        pf.indices = Indices

        pf.processors = {'.rpy': script.ResourceScript}
        pf.ignoreExt(".rpy")
        self.root.addHost("my.com", pf)
        self.root.addHost("www.my.com", pf)
        self.root.addHost("my.org", pf)
        self.root.addHost("www.my.org", pf)
        self.root.addHost("my.net", pf)
        self.root.addHost("www.my.net", pf)

        ob = static.File(other)
        ob.indices = Indices
        ob.processors = {".rpy":script.ResourceScript}
        ob.ignoreExt(".rpy")
        self.root.addHost("other.com", ob)
        self.root.addHost("www.other.com", ob)
        self.Application = app.Application("web")
        return


    def SvcStop (self):
        self.ReportServiceStatus(ws.SERVICE_STOP_PENDING)
        self.Application.unlistenTCP(80)
        we.SetEvent(self.hWaitStop)
        return

    def SvcDoRun (self):
        we.WaitForSingleObject(self.hWaitStop, we.INFINITE)
        self.Application.listenTCP(80, server.Site(self.root))
        return

if __name__ == "__main__":
    wsu.HandleCommandLine(TwistedService)


domains have been changed to protect the innocent.

"You can have peace. Or you can have freedom. Don't ever count on having
both at once." - Lazarus Long


---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.548 / Virus Database: 341 - Release Date: 12/5/2003





From andrew-twisted at puzzling.org  Sat Dec 13 21:03:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 14 Dec 2003 13:03:23 +1100
Subject: [Twisted-Python] Small Problem -twisted web
In-Reply-To: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>
References: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>
Message-ID: <20031214020323.GA755@frobozz>

On Sat, Dec 13, 2003 at 05:44:33PM -0800, Mike Owens wrote:
> 
>     def SvcDoRun (self):
>         we.WaitForSingleObject(self.hWaitStop, we.INFINITE)
>         self.Application.listenTCP(80, server.Site(self.root))
>         return

You need to call reactor.run() here.  Search the mailing list archives for
working examples of Twisted NT services.

-Andrew.




From dave at krondo.com  Sun Dec 14 11:45:23 2003
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 14 Dec 2003 08:45:23 -0800
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
In-Reply-To: <1071267935.1263.116.camel@localhost>
References: <1071267935.1263.116.camel@localhost>
Message-ID: <1071420323.7281.38.camel@oneiros>

On Fri, 2003-12-12 at 14:25, Federico Di Gregorio wrote:
> Hi *,
> 
> lately some people asked me why twisted does not support psycopg. Mm..
> actually I write all my twisted-based code using psycopg so I was a
> little bit disappointed. :) They told me that twisted is using pypgsql
> as default and I finally realized what they meant: psycopg is missing
> from the test_enterprise.py unit test and pypgsql is listed as "the"
> postgresql adapter. So here's the patch that adds psycopg to
> test_enterprise.py (I don't care about the "the" part :) 

Thanks for the patch. I'm happy to add tests for other dbms's
as well. It is in now with one minor change -- the original
patch was setting PostgresTestCase.skip in one code path and
I changed it to PsycopgTestCase.skip.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031214/27eb4c25/attachment.pgp 

From dave at krondo.com  Sun Dec 14 11:48:29 2003
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 14 Dec 2003 08:48:29 -0800
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071352250.1263.177.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
Message-ID: <1071420509.7281.42.camel@oneiros>

On Sat, 2003-12-13 at 13:50, Federico Di Gregorio wrote:
> Il sab, 2003-12-13 alle 21:55, Christopher Armstrong ha scritto:
> > Federico Di Gregorio wrote:
> > > Hi *,
> > > 
> > > attached to this mail there are two files that implement long-lived
> > > database transactions for twisted (xdbapi.py, to be dropped in
> > > twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 
> > 
> > This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> > you can integrate with/refactor adbapi such that you don't duplicate all 
> > that code?
> 
> the original code was very different from adbapi, but i wanted to
> provide a similar interface. that's why i rape'n'pasted. :)
> 
> unfortunately the adbapi code is based on a *thread* pool and the
> connection pool is just a side-effect of using one connection per thread
> (this is completely wrong, imho, see my comments of about one year ago
> about adbapi on this very list.) anyway, this obviously makes impossible
> to have long-lived transactions. 

Evidently not impossible, as Bill Gribble has a patch adding
this support to the existing adbapi.py. But it still may be
simpler to support an extended transaction api by going away
from a thread pool. In either case, we should not have two
separate modules.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031214/ac9f2119/attachment.pgp 

From fog at initd.org  Sun Dec 14 12:21:54 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sun, 14 Dec 2003 18:21:54 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071420509.7281.42.camel@oneiros>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>
Message-ID: <1071422514.1263.195.camel@localhost>

Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
[snip]
> Evidently not impossible, as Bill Gribble has a patch adding

eheh. yesss. i should have added "without leaving a thread suspended".
my fault.

> this support to the existing adbapi.py. But it still may be
> simpler to support an extended transaction api by going away
> from a thread pool. In either case, we should not have two
> separate modules.

agreed. see my later mail; Bill's patch is fine if we can get it in.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
                              Viviamo in un mondo reale, Ciccio. -- Lucy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031214/f522fa54/attachment.pgp 

From fog at initd.org  Sun Dec 14 12:23:08 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sun, 14 Dec 2003 18:23:08 +0100
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
In-Reply-To: <1071420323.7281.38.camel@oneiros>
References: <1071267935.1263.116.camel@localhost>
	 <1071420323.7281.38.camel@oneiros>
Message-ID: <1071422588.1263.197.camel@localhost>

Il dom, 2003-12-14 alle 17:45, Dave Peticolas ha scritto:
> Thanks for the patch. I'm happy to add tests for other dbms's
> as well. It is in now with one minor change -- the original
> patch was setting PostgresTestCase.skip in one code path and
> I changed it to PsycopgTestCase.skip.

argh. and i was accused of rape'n'paste just 24h ago... :)
thank you very much for including my patch.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  "Yes, your honour, I have RSA encryption code tattood on my penis.
   Shall I show the jury?"                                     -- <dark>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031214/7b748b87/attachment.pgp 

From lstep at adequat.net  Sun Dec 14 17:50:48 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Sun, 14 Dec 2003 23:50:48 +0100
Subject: [Twisted-Python] Twisted Weekly News #9
Message-ID: <200312142350.28201.lstep@adequat.net>

====================================================================
Twisted Weekly News #9
====================================================================

.. contents::

If you have any new information, ideas, announcements for the next TWN, please 
write to me, <lior at gradstein.info>. TWN is also available as HTML formatted 
ReST on http://gradstein.info/articles/twisted_news/twisted_news/twn9

The Twisted Weekly News
-------------------------

9th Issue. Sunday, December 14, 2003

QOTW::

   <moshez> dash: being squishy is pleasant for everyone always
   <dash> moshez: i demand proof
   <moshez> dash: it is an AXIOM!!
   <moshez> dash: squishing is part of the basic axiom set
   <moshez> like DeCartes said "I squish therefore I am"

Discussions
-------------

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006692.html
   RodrigoB suggested to use Twisted for the refactoring of The Circle, a P2P
   app.

 * http://twistedmatrix.com/pipermailtwisted-python/2003-December/006705.html
   Last week, someone asked for an example of a Jabber client using Twisted
   libs, darryl posted a reply this week. darryl posted another example using
   PEAK too (http://randomthoughts.vandorp.ca/syncato/WK/blog/671?t=projects)

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006723.html
   Cinober explains his discoveries on debugging Twisted code within Emacs.
   Itamar gave a more generic explanation on how to debug general python code    
 (http://twistedmatrix.com/pipermail/twisted-python/2003-December/006724.html)

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006745.html
   Richard Livsey asked why his IRC bot gets disconnected without any
   possibility of reconnection after sending too much data to the server.
   Timothee Besset replied he should read the IRC RFCs, that explains that his
   IRC bot was banned (flooding protection) and that he should use a rate
   limiting algorithm which doesn't yet exist in Twisted IRCClient
   implementation. Andrew Bennetts answered that, actually, there
   is a rate limiting method, but it is more a delay than a rate limitation
 (http://twistedmatrix.com/pipermail/twisted-python/2003-December/006749.html)
   which solved Richard's problem.


Progress
-----------

 * **Twisted 1.1.1**: Itamar announced Twisted 1.1.1 as the official new
    stable release 
(http://twistedmatrix.com/pipermail/twisted-python/2003-December/006731.html).
    The changes are mainly bugfixes and minor improvements. MSN8P support in
    the MSN protocol has been updated and Conch SSH agent client now supports
    SSH auth agent.

 * **Quotient 0.8.8**: A new version (0.8.8) of Quotient
   (http://www.divmod.org/) has been released.
   The pace of releases is getting faster each week. In this release (except
   from bugfixes), the database has been simplified and throttling tools have
   been added. To show that Quotient can be used as a framework not just for
   email, a project planning tool has been started (Anvil).


Cool Thing of the Week
-----------------------

 * **Twisted-web split** A new mailing list
 (http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web and stored on
   NNTP gmane.org) as well as a new IRC channel
 (irc://irc.freenode.net/#twisted.web) who focus on twisted.web and
   woven/nevow part of Twisted.


Current releases
-----------------

  * Twisted: 1.1.1 (released 2003-12-10)
  * Quotient: 0.8.8 (released 2003-12-12)
  * Twisted Java: 0.6.1 (released 2003-12-02)



Ok, that's it for this week. Thanks for reading!

-- 
Luc Stepniewski <lstep at adelux.fr> <http://www.adelux.fr/>
Adelux - Securite, Zope, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A




From jjanecek at telusplanet.net  Sun Dec 14 20:41:37 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 17:41:37 -0800
Subject: [Twisted-Python] reactor.callLater ponderings
Message-ID: <1071452497.3fdd11517366c@webmail.telus.net>

I created this little program to test the callLater feacture in
twisted.

from twisted.internet import pollreactor
pollreactor.install()

##try :
##	from twisted.internet import win32eventreactor
##	win32eventreactor.install()
##except :
##	print "can not install win32 reactor"

from twisted.internet import reactor
from twisted.python import threadable
from twisted.internet import threads
threadable.init(1)
reactor.suggestThreadPoolSize(10)
print reactor

import time
#conclusions would be possible to correct so reactor
#fires more accuratly not required since it is pretty close
#for what ever reason reactor can not go finer then 10ms
#on freebsd the min timer frequency is 20.0 ms
frequency=20.0 #time that callback will pulse in ms
clock_count=0
start_time=None
last_tick=0

def clock_pulse() :
    global start_time,clock_count,last_tick
    if start_time==None :
        start_time=time.time()
        
    next_time=frequency/1000.0
    #i noticed that the clock needs to be corrected
    #to keep proper time over a long period 
    cur_time=(time.time()-start_time)*1000
    if (cur_time-clock_count)>frequency :
        print "too slow correction"
        next_time=0
    elif(clock_count-cur_time)>frequency :
        print "too fast correction"
        next_time=(frequency/1000.0)*2
    #if clock_count>0 :
    #last_tick=time.time
    reactor.callLater(next_time,clock_pulse)
    reactor.callInThread(clock_pulse_thread)
    clock_count+=frequency
    #clock_pulse_thread()
    

def clock_pulse_thread() :
    global start_time,clock_count,last_tick
    cur_time=time.time()    
    if last_tick>0 :
        print "diff ",(cur_time-last_tick)*1000
        pass
    last_tick=cur_time        
    
    if clock_count>=1000 :
        stop_time=time.time()
        real_time=(stop_time-start_time)*1000
        print "Total Time= ",clock_count," ",real_time
        print "Difference= ",clock_count-real_time," percent
",((clock_count-real_time)/real_time)*100.0
        reactor.stop()
    time.sleep(0.01)
  
reactor.callLater(frequency/1000.0,clock_pulse)
reactor.run()

Now the instresting thing is that is windows the smallest
increment i can call the callback with is like 10 ms. 
While on freebsd even using kqueue it is like 20 ms.

I guess you could call that smallest increment like a tick.
ticks in freebsd and on windows are accurate while on linux they
seem to be all over the place, why is this ?

Also is there a place that I can use to set how frequent i want the reactor
to check to see if a callLater function should be run ?

While on Linux (I tested using redhat 9.0 and mandrake 9.2) it does
not seem to be accurate on anything under 1 second. I peeked inside the
basereactor code and it does not seem to shed anylight. 

I am running the clock pulse in a thread to simulate that it has to 
wait for something.






From itamar at itamarst.org  Sun Dec 14 20:52:40 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Dec 2003 20:52:40 -0500
Subject: [Twisted-Python] reactor.callLater ponderings
In-Reply-To: <1071452497.3fdd11517366c@webmail.telus.net>
References: <1071452497.3fdd11517366c@webmail.telus.net>
Message-ID: <1071453160.1317.5.camel@sheriffpony>

On Sun, 2003-12-14 at 20:41, jjanecek at telusplanet.net wrote:

> Also is there a place that I can use to set how frequent i want the reactor
> to check to see if a callLater function should be run ?

Nope. If you want high resolution you probably want
twisted.internet.task.LoopingCall.

Using itimer python extensions, and registering reactor.wakeUp() as the
signal handler for SIGALARM can also help.

Also note the kqueue python extension is supposedly badly designed, and
needs a rewrite.

I've seen better than 1sec resolution on linux - 20ms seems to be limit
there too without using something like LoopingCall.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From andrew-twisted at puzzling.org  Sun Dec 14 22:17:36 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Dec 2003 14:17:36 +1100
Subject: [Twisted-Python] reactor.callLater ponderings
In-Reply-To: <1071452497.3fdd11517366c@webmail.telus.net>
References: <1071452497.3fdd11517366c@webmail.telus.net>
Message-ID: <20031215031736.GA3302@frobozz>

On Sun, Dec 14, 2003 at 05:41:37PM -0800, jjanecek at telusplanet.net wrote:
> I created this little program to test the callLater feacture in
> twisted.

It's not immediately clear to me exactly what you are trying to test with
this code... if you're just testing the resolution of callLater, then why
are you using threads?

callLater uses the timeout facility of select(2), poll(2) or whatever
underlying mechanism your reactor is using (you're using the poll reactor).
The poll system call takes a timeout in milliseconds, so I would expect that
on linux the theoretical minimum timeout you could get is determined by the
kernel's HZ value.  I don't know if the intervening layers of libc and
Python's runtime would have any impact... but given the way that Python does
multithreading, I *would* expect using threads in Python to have a
measurable impact.  Maybe try again without using threads?

Also, you call reactor.stop() from within a thread... I *think* that to be
correct, that you need to do reactor.callFromThread(reactor.stop).  I'm not
sure, though.

> def clock_pulse_thread() :
[...]
>     time.sleep(0.01)
>   
> reactor.callLater(frequency/1000.0,clock_pulse)
> reactor.run()
> 
> Now the instresting thing is that is windows the smallest
> increment i can call the callback with is like 10 ms. 

This is probably due to a hard-coded value on line 153 of win32reactor.py
(assuming you're using win32reactor and not just the default select
reactor..?)

> Also is there a place that I can use to set how frequent i want the reactor
> to check to see if a callLater function should be run ?

This question doesn't really make sense for most of the reactors.  The
reactor looks at the queue of callLaters to determine when it needs to next
wake up by to process the next one on time.  If there's activity on one of
its file descriptors (i.e. there's network traffic waiting to be read), it
will wake up sooner, process the traffic, and recalculate the timeout.  If
there is a new callLater added, it will recalculate the timeout.  The
timeout is passed to select or poll or kqueue or whatever, and the OS kernel
is in charge of making the system call return after the timeout has expired
if I/O hasn't already caused that to happen.

In the case of the win32reactor, there is a value with roughly the meaning
you have in mind (line 153 of win32reactor...)

> While on Linux (I tested using redhat 9.0 and mandrake 9.2) it does
> not seem to be accurate on anything under 1 second. I peeked inside the
> basereactor code and it does not seem to shed anylight. 

Is the consistent with both the default reactor (which uses select), and the
poll reactor?  Can you reproduce this without threads?

> I am running the clock pulse in a thread to simulate that it has to 
> wait for something.

As I've mentioned before, I don't really understand what you mean by this.

-Andrew.




From jjanecek at telusplanet.net  Mon Dec 15 00:12:24 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 21:12:24 -0800
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :)
Message-ID: <1071465144.3fdd42b85396d@webmail.telus.net>

I know i should have attended those english classes :(
Instead i was out smoking drugs and skipping english class to hack on my
computer. I am can not even use the excuse that english is not my native tongue :(.


Anyway in a nutshell i am making an rtp stack.
for the recieving part no problem.

Why I made the little clocking test program is because for rtp packets the
timing is very important. For audio the packet length is ussually 20ms.

I wanted to process the call inside a thread just because sometimes it has to
wait to read from the audio input. Surprisingly enuff it does not really make
that much difference if I call in thread or not.

when i am on my windows xp box, it would go at like 10ms with a correction only
needed like every 30 secs or so. That is using default reactor and windoze reactor.

for freebsd the finest I can get it is with 20ms it does not matter if i use
default reactor, poll reactor or kqueue. I just tried kqueue reactor since it 
sounded intresting :). 

For linux (red hat and mandrake) i tried both select reactor and poll reactor,
and it did not seem to make difference.

Anyway I will investigate Itamar's suggestions :

Nope. If you want high resolution you probably want
twisted.internet.task.LoopingCall.

Using itimer python extensions, and registering reactor.wakeUp() as the
signal handler for SIGALARM can also help.

and i will keep u guys informed with what i discover, thanx for your guys help :)




From itamar at itamarst.org  Mon Dec 15 00:44:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 00:44:21 -0500
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am
	trying to do) :)
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net>
References: <1071465144.3fdd42b85396d@webmail.telus.net>
Message-ID: <1071467060.31479.11.camel@sheriffpony>

On Mon, 2003-12-15 at 00:12, jjanecek at telusplanet.net wrote: 

> Anyway in a nutshell i am making an rtp stack.
> for the recieving part no problem.
> 
> Why I made the little clocking test program is because for rtp packets the
> timing is very important. For audio the packet length is ussually 20ms.

LoopingCall was written for RTP :) See CVS at
http://sf.net/projects/shtoom/ -- if you want to help I'm sure anthony
would appreciate it.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From anthony at interlink.com.au  Mon Dec 15 01:08:40 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 15 Dec 2003 17:08:40 +1100
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :) 
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net> 
Message-ID: <200312150608.hBF68e9F013378@localhost.localdomain>

>>> jjanecek at telusplanet.net wrote
> Anyway in a nutshell i am making an rtp stack.
> for the recieving part no problem.
> 
> Why I made the little clocking test program is because for rtp packets the
> timing is very important. For audio the packet length is ussually 20ms.
> 
> I wanted to process the call inside a thread just because sometimes it has to
> wait to read from the audio input. Surprisingly enuff it does not really make
> that much difference if I call in thread or not.

Been there, done that. See the Shtoom project at shtoom.sf.net. You
don't need to put it in a thread - indeed, I'd suspect that putting it
in a thread would give worse behaviour, because of the context switching.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From jjanecek at telusplanet.net  Mon Dec 15 02:15:52 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 23:15:52 -0800
Subject: [Twisted-Python] Re: Re: reactor.callLater ponderings (what i am trying to do) :)
In-Reply-To: <20031215061002.22990.60139.Mailman@twistedmatrix.com>
References: <20031215061002.22990.60139.Mailman@twistedmatrix.com>
Message-ID: <1071472552.3fdd5fa8a2785@webmail.telus.net>

Thanx for your help :)

Here is an example of how i implement LoopClock

from twisted.internet import reactor
print reactor
from twisted.internet.task import LoopingCall
from twisted.python import threadable
from twisted.internet import threads
threadable.init(1)
reactor.suggestThreadPoolSize(10)
print reactor

import time
#conclusions would be possible to correct so reactor
#fires more accuratly not required since it is pretty close
#for what ever reason reactor can not go finer then 10ms
#on freebsd the min timer frequency is 20.0 ms
frequency=10.0 #time that callback will pulse in ms
clock_count=0
start_time=None
last_tick=0

def clock_pulse() :
    global start_time,clock_count,last_tick
    if start_time==None :
        start_time=time.time()
        
    next_time=frequency/1000.0
    cur_time=(time.time()-start_time)*1000

    reactor.callInThread(clock_pulse_thread)
    #clock_pulse_thread() 
    clock_count+=frequency
    

def clock_pulse_thread() :
    global start_time,clock_count,last_tick
    cur_time=time.time()    
    if last_tick>0 :
        print "diff ",(cur_time-last_tick)*1000
        pass
    last_tick=cur_time        
    
    if clock_count>=10000 :
        stop_time=time.time()
        real_time=(stop_time-start_time)*1000
        print "Total Time= ",clock_count," ",real_time
        print "Difference= ",clock_count-real_time," percent
",((clock_count-real_time)/real_time)*100.0
        reactor.stop()
    time.sleep(0.005)
  
LC=LoopingCall(clock_pulse)
LC.start(frequency/1000.0)

reactor.run()

20 ms on freebsd still seems to be the minimum of resultion 
10 ms on windows and linux :)
anyway 20 ms is adequate.

I would like to help anthony on the shloom project but I have to 
talk to my boss first. Unfortunately I am not the one who makes the
decisions :(. If the small company I am working for goes tits up
then i will release my code as I relocate my office to a dumpster :)

Anyway it is kinda intresting that me and anthony had the idea for a 
VOIP fone using twisted at approx the same time.

I attempting to create an "RTP stack" which will accept and broadcast rtp
packets from a variety of sources and then like filter them down similar
to how a tcp stack works. If that makes sense.

The only problem i had was the timing issue. I tested my code on a 
windoze box, when i moved it up to freebsd box i started to drop packets 
(IE packets where arriving late). I orrigionally thought it was because of
the distance from me to the server (I am like 20 hops). But then I discovered
that the real problem was i was not sending out the packets at the correct time
as I had thought. The class LoopingCall does in a more elegant manner what i was 
attempting to do in my Clocking Program :)


Anyway Thanx for your help, and twisted kiks ass :)





From nbm at mithrandr.moria.org  Mon Dec 15 02:37:43 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 15 Dec 2003 09:37:43 +0200
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :)
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net>
References: <1071465144.3fdd42b85396d@webmail.telus.net>
Message-ID: <20031215073743.GA12070@mithrandr.moria.org>

On Sun 2003-12-14 (21:12), jjanecek at telusplanet.net wrote:
> when i am on my windows xp box, it would go at like 10ms with a correction only
> needed like every 30 secs or so. That is using default reactor and windoze reactor.
> 
> for freebsd the finest I can get it is with 20ms it does not matter if i use
> default reactor, poll reactor or kqueue. I just tried kqueue reactor since it 
> sounded intresting :). 

On FreeBSD, check your HZ setting if you haven't done so already:

sysctl kern.clockrate
kern.clockrate: { hz = 100, tick = 10000, profhz = 1024, stathz = 128 }

You probably want hz=1000 (at least), so put the following at the end of
(or create the file if it doesn't exist) /boot/loader.conf:

	kern.hz="1000"

You don't mention what version of FreeBSD you're using - this'll work on
4.4-RELEASE and upward.  Before that, you'd have to recomile your kernel
with "options HZ=1000" in your config file.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
http://mithrandr.moria.org/



From anthony at interlink.com.au  Mon Dec 15 02:55:20 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 15 Dec 2003 18:55:20 +1100
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :) 
In-Reply-To: <20031215073743.GA12070@mithrandr.moria.org> 
Message-ID: <200312150755.hBF7tKDf028989@localhost.localdomain>

>>> Neil Blakey-Milner wrote
> On FreeBSD, check your HZ setting if you haven't done so already:
> 
> sysctl kern.clockrate
> kern.clockrate: { hz = 100, tick = 10000, profhz = 1024, stathz = 128 }


Note, though, that for typical RTP usage, you need to only hit a 20ms
timer. This is quite do-able with a 10ms resolution clock.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From slyphon at twistedmatrix.com  Mon Dec 15 03:24:35 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 15 Dec 2003 03:24:35 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server implementation
Message-ID: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>

I've got a newly-refactored version of FTP in my sandbox. I'm not sure,
however, how to deploy it into the library. It splits the actual
protocol code and the server-y aspects into two files, ftp and ftpdav.
I feel that the protocol implementation should be separate from the code
that integrates the protocol with cred, i'm just unsure about where that
cred-code should go. Also, there's been some considerable trouble caused
by the fact that my avatar implemenation is not windows-friendly. Any
thoughts on how to either adapt it, or if some kindly windows-user could
implement a windows-compatable version, would be greatly appreciated.

Also, on a tangent, the new (-new) ftp protocol refactoring in my
sandbox has much more complete code-coverage in terms of the unittests. 

I await your suggestions before taking further action.

-Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/2860eb82/attachment.pgp 

From Richard.Townsend at edl.uk.eds.com  Mon Dec 15 05:14:44 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 15 Dec 2003 10:14:44 -0000
Subject: [Twisted-Python] Using service.Application
Message-ID: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>

I had the following demo script for Twisted 1.0.6:

#-----------------
import sys
from twisted.internet import app, reactor
from twisted.python import log, logfile
from twisted.web import server, resource

class Simple(resource.Resource):
    isLeaf = True

    def render(self, request):
        print "Request:", request
        return "<html>Hello</html>"


if __name__ == '__main__':
    
    f = sys.stdout
    log.startLogging(f)

    site = server.Site(Simple())
    application = app.Application('web')
    application.bindPorts()
    application.listenTCP(8080, site)
    application.run(save=0)
#-----------------

This works OK with the following client:

#-----------------
from twisted.internet import reactor
from twisted.web.client import getPage
from twisted.python.util import println


class Client:
    
    def __init__(self):
        self.sendReq()
        reactor.run()


    def handleCallback(self, value):
        println("Success:", value)
        reactor.stop()
    
    
    def handleErrback(self, error):
        println("Error:", error)
        reactor.stop()


    def sendReq(self):
        uri = "http://localhost:8080/Simple"
        deferred = getPage(uri)
        deferred.addCallbacks(self.handleCallback,
                              self.handleErrback)

        
if __name__ == "__main__":
    
    Client()
#-----------------

However, under Twisted 1.1.1 this raises: 
exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
use twisted.application instead.

So I tried to create a new version of the server:

#-----------------
import sys
from twisted.application import service, internet
from twisted.internet import reactor
from twisted.python import log
from twisted.web import server, resource


class Simple(resource.Resource):
    isLeaf = True

    def render(self, request):
        print "Request:", request
        return "<html>Hello</html>"


if __name__ == '__main__':
    
    f = sys.stdout
    log.startLogging(f)
    
    root = Simple()
    site = server.Site(root)
    application = service.Application('web')
    sc = service.IServiceCollection(application)
    i = internet.TCPServer(8080, site)
    i.setServiceParent(sc)
    reactor.run()
#-----------------

But now my client gives this:

Error: [Failure instance: Traceback: 
twisted.internet.error.ConnectionRefusedError, 
Connection was refused by other side: 22: Invalid argument.
]

I am running Python 2.3.2 on HP-UX 11i.

Can anybody advise what is happening here?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/a6b7954a/attachment.htm 

From orya at bgumail.bgu.ac.il  Mon Dec 15 06:31:27 2003
From: orya at bgumail.bgu.ac.il (orya at bgumail.bgu.ac.il)
Date: Mon, 15 Dec 2003 13:31:27 +0200
Subject: [Twisted-Python] Hi
Message-ID: <20031215114520.HZOQ26787.shunit@shunit>

i have some hard time dealing with user input 
on a woven form 
can anyone help????




From alan at norfolkgraphics.com  Mon Dec 15 07:05:17 2003
From: alan at norfolkgraphics.com (Alan McIntyre)
Date: Mon, 15 Dec 2003 07:05:17 -0500
Subject: [Twisted-Python] Twisted is cool
Message-ID: <3FDDA37D.1090201@norfolkgraphics.com>

Hi all,

I just wanted to thank the Twisted developers for making such a cool 
piece of software.  We received a question from a customer late Friday 
afternoon about remotely viewing data from their data acquisition 
system.  There are short-term options that involve using their existing 
fat clients over a VPN, communicating with a server via a proprietary 
format, but that's not acceptable long-term (for many reasons), so I 
figured I would try making a web-based demo in Python.

Thanks to Twisted and Python, I was able to start from scratch and put 
together a server to present some of this data via XML-RPC in about 2 or 
3 hours (and that includes looking up a lot of stuff in the 
documentation).  I'm currently using PHP to display the data on a web 
page, but I may eventually use Twisted for that as well.

If I had tried to do this in C/C++, or if even if I'd tried to do this 
in Python without Twisted, I'd probably still be fighting with it for a 
good part of this week.  But now I have a demo put together, it's been 
running for about 7 hours with no problems, and we can go from saying 
"we'll look into that" to "oh, yeah, here's something we put together 
from scratch in our spare time" in less than one business day.

Of course there's a long way to go before this becomes a production 
product, but hopefully this means I will be working with Twisted and 
Python a lot more in the future, and hopefully I'll be able to tell more 
about it as time goes on.  Again, many thanks for such a wonderful piece 
of software.

Happy Monday,
Alan




From michal at pasternak.w.lub.pl  Mon Dec 15 07:12:51 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Mon, 15 Dec 2003 13:12:51 +0100
Subject: [Twisted-Python] Hi
In-Reply-To: <20031215114520.HZOQ26787.shunit@shunit>
References: <20031215114520.HZOQ26787.shunit@shunit>
Message-ID: <20031215121251.GB24520@pasternak.w.lub.pl>

orya at bgumail.bgu.ac.il [Mon, Dec 15, 2003 at 01:31:27PM +0200]:
> i have some hard time dealing with user input 
> on a woven form 
> can anyone help????

Eric S. Raymond propably. Click here: 
http://www.catb.org/~esr/faqs/smart-questions.html#prune

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From andrew-twisted at puzzling.org  Mon Dec 15 07:35:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Dec 2003 23:35:57 +1100
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server implementation
In-Reply-To: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031215123557.GA4547@frobozz>

On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
> cred-code should go. Also, there's been some considerable trouble caused
> by the fact that my avatar implemenation is not windows-friendly. Any
> thoughts on how to either adapt it, or if some kindly windows-user could
> implement a windows-compatable version, would be greatly appreciated.

Is the problem with windows the lack of pwd and grp modules?  I presume you
need these for authentication and permission checking?  If that's the case,
perhaps you could implement a simpler avatar for windows that only supports
anonymous, read-only access to any files that the server has permission to
read?  (i.e. basically what the old server supported anyway)

> Also, on a tangent, the new (-new) ftp protocol refactoring in my
> sandbox has much more complete code-coverage in terms of the unittests. 

Woo!  What about for the client?  ;)

-Andrew.




From john.abel at pa.press.net  Mon Dec 15 07:48:09 2003
From: john.abel at pa.press.net (John Abel)
Date: Mon, 15 Dec 2003 12:48:09 +0000
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
 implementation
In-Reply-To: <20031215123557.GA4547@frobozz>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com> <20031215123557.GA4547@frobozz>
Message-ID: <3FDDAD89.6070101@pa.press.net>

Andrew Bennetts wrote:

>On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
>  
>
>>cred-code should go. Also, there's been some considerable trouble caused
>>by the fact that my avatar implemenation is not windows-friendly. Any
>>thoughts on how to either adapt it, or if some kindly windows-user could
>>implement a windows-compatable version, would be greatly appreciated.
>>    
>>
>
>Is the problem with windows the lack of pwd and grp modules?  I presume you
>need these for authentication and permission checking?  If that's the case,
>perhaps you could implement a simpler avatar for windows that only supports
>anonymous, read-only access to any files that the server has permission to
>read?  (i.e. basically what the old server supported anyway)
>
>  
>
I have code for authentication on 2000/XP platforms, if you're 
interested? It is used in the medusa ftp example.

>>Also, on a tangent, the new (-new) ftp protocol refactoring in my
>>sandbox has much more complete code-coverage in terms of the unittests. 
>>    
>>
>
>Woo!  What about for the client?  ;)
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>



From exarkun at intarweb.us  Mon Dec 15 08:27:19 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 15 Dec 2003 08:27:19 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
Message-ID: <20031215132719.GA28160@intarweb.us>

On Mon, Dec 15, 2003 at 10:14:44AM -0000, Richard.Townsend at edl.uk.eds.com wrote:
> I had the following demo script for Twisted 1.0.6:
> 
> #-----------------
> [snip server code]
> #-----------------
> 
> This works OK with the following client:
> 
> #-----------------
> [snip client code]
> #-----------------
> 
> However, under Twisted 1.1.1 this raises: 
> exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
> use twisted.application instead.
> 
> So I tried to create a new version of the server:
> 
> #-----------------
> [snip]
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
>     
>     root = Simple()
>     site = server.Site(root)
>     application = service.Application('web')
>     sc = service.IServiceCollection(application)
>     i = internet.TCPServer(8080, site)
>     i.setServiceParent(sc)
>     reactor.run()
> #-----------------
> 
> But now my client gives this:
> 
> Error: [Failure instance: Traceback: 
> twisted.internet.error.ConnectionRefusedError, 
> Connection was refused by other side: 22: Invalid argument.
> ]
> 
> I am running Python 2.3.2 on HP-UX 11i.
> 
> Can anybody advise what is happening here?
> 

  Your new version isn't actually starting up any of your services.  Two
ways to address this: use twisted.internet.app.startApplication and
twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
internally) instead of reactor.run, or get rid of the __name__ check and the
reactor.run() call, and use "twistd -y <your file>" to run the server.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/cd66dfb3/attachment.pgp 

From Richard.Townsend at edl.uk.eds.com  Mon Dec 15 09:01:44 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 15 Dec 2003 14:01:44 -0000
Subject: [Twisted-Python] Using service.Application
Message-ID: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>

> Your new version isn't actually starting up any of your services.  Two
> ways to address this: use twisted.internet.app.startApplication and
> twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
> internally) instead of reactor.run, or get rid of the __name__ check and
the
> reactor.run() call, and use "twistd -y <your file>" to run the server.
> 
>   Jp

Thanks for the suggestions Jp (I assume you meant twisted.application.app,
not twisted.internet.app).

I don't use twistd at present because I subclass Logfile to limit the max
number of rotating log files and I not aware of how I can do that with
twistd.

regards,
Richard Townsend
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/fca13170/attachment.htm 

From exarkun at intarweb.us  Mon Dec 15 09:16:06 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 15 Dec 2003 09:16:06 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>
Message-ID: <20031215141606.GA28376@intarweb.us>

On Mon, Dec 15, 2003 at 02:01:44PM -0000, Richard.Townsend at edl.uk.eds.com wrote:
> > Your new version isn't actually starting up any of your services.  Two
> > ways to address this: use twisted.internet.app.startApplication and
> > twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
> > internally) instead of reactor.run, or get rid of the __name__ check and
> the
> > reactor.run() call, and use "twistd -y <your file>" to run the server.
> > 
> >   Jp
> 
> Thanks for the suggestions Jp (I assume you meant twisted.application.app,
> not twisted.internet.app).

  Ahh, yes.  Finger memory is still using the old system...

> 
> I don't use twistd at present because I subclass Logfile to limit the max
> number of rotating log files and I not aware of how I can do that with
> twistd.

  Yep, twistd doesn't let you control that very well..  Fixing it has long
been on my todo list.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/843207f5/attachment.pgp 

From dave at krondo.com  Mon Dec 15 09:34:25 2003
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 15 Dec 2003 06:34:25 -0800
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071422514.1263.195.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>  <1071422514.1263.195.camel@localhost>
Message-ID: <1071498865.7280.52.camel@oneiros>

On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> [snip]
> > Evidently not impossible, as Bill Gribble has a patch adding
> 
> eheh. yesss. i should have added "without leaving a thread suspended".
> my fault.
> 
> > this support to the existing adbapi.py. But it still may be
> > simpler to support an extended transaction api by going away
> > from a thread pool. In either case, we should not have two
> > separate modules.
> 
> agreed. see my later mail; Bill's patch is fine if we can get it in.

I'd like to have some tests for it before it goes in.
I might have some time over holiday break to work on
some.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/4704bec1/attachment.pgp 

From fog at initd.org  Mon Dec 15 10:09:16 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Mon, 15 Dec 2003 16:09:16 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071498865.7280.52.camel@oneiros>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>  <1071422514.1263.195.camel@localhost>
	 <1071498865.7280.52.camel@oneiros>
Message-ID: <1071500956.1239.22.camel@localhost>

Il lun, 2003-12-15 alle 15:34, Dave Peticolas ha scritto:
> On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> > Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> > [snip]
> > > Evidently not impossible, as Bill Gribble has a patch adding
> > 
> > eheh. yesss. i should have added "without leaving a thread suspended".
> > my fault.
> > 
> > > this support to the existing adbapi.py. But it still may be
> > > simpler to support an extended transaction api by going away
> > > from a thread pool. In either case, we should not have two
> > > separate modules.
> > 
> > agreed. see my later mail; Bill's patch is fine if we can get it in.
> 
> I'd like to have some tests for it before it goes in.
> I might have some time over holiday break to work on
> some.

i can do the tests too. can we coordinate over irc or IM?

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
                              Viviamo in un mondo reale, Ciccio. -- Lucy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031215/5fe44648/attachment.pgp 

From radix at twistedmatrix.com  Mon Dec 15 11:03:17 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 15 Dec 2003 11:03:17 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
 implementation
In-Reply-To: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FDDDB45.6080004@twistedmatrix.com>

Jonathan Simms wrote:
> I've got a newly-refactored version of FTP in my sandbox. I'm not sure,
> however, how to deploy it into the library. It splits the actual
> protocol code and the server-y aspects into two files, ftp and ftpdav.
> I feel that the protocol implementation should be separate from the code
> that integrates the protocol with cred, i'm just unsure about where that
> cred-code should go. 

Hrmm, what is this cred-code? A protocol *should* have cred support 
built in; generally, it should have a reference to a portal instance and 
call the login method on it with any Interfaces it wants from an avatar.

IMO, you should be separating filesystem (i.e., "application logic") 
code from the protocol, not cred support.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From orya at bgumail.bgu.ac.il  Mon Dec 15 11:39:10 2003
From: orya at bgumail.bgu.ac.il (orya at bgumail.bgu.ac.il)
Date: Mon, 15 Dec 2003 18:39:10 +0200
Subject: [Twisted-Python] new to Guard
Message-ID: <20031215165303.JPGH26787.shunit@shunit>

Hello there my Twisted fellow mates,

I have used Twisted to build an http web interface.
i want to add an authentication form before logging into the site
i'm a bit confused from the cred/guard documentation...

How do i attach a guard to my existing web server??
And how do i redirect to the main page after logged in??
I'll appriciate it if someone can guide me through the initial steps.

here is an little example of the main class code:
*************************************************
import os

from twisted.web import server, static
from twisted.application import service, internet

from main import MainPage

##########################

# Create Web server
root = MainPage() # inherits from page.Page
root.putChild("css", static.File("css"))    # css subdir
site = server.Site(root)

# Create Application
application = service.Application("webserver")

# Create Web service
port = 8080
web = internet.TCPServer(port, site)
web.setServiceParent(application)





From itamar at itamarst.org  Mon Dec 15 12:13:17 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 12:13:17 -0500
Subject: [Twisted-Python] Hi
In-Reply-To: <20031215114520.HZOQ26787.shunit@shunit>
References: <20031215114520.HZOQ26787.shunit@shunit>
Message-ID: <1071508397.31486.15.camel@sheriffpony>

On Mon, 2003-12-15 at 06:31, orya at bgumail.bgu.ac.il wrote:
> i have some hard time dealing with user input 
> on a woven form 
> can anyone help????

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

or #twisted.web on irc.freenode.net is probably a better place to ask.
However, the short answer is "override your resource's render and
extract from request.args".

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From itamar at itamarst.org  Mon Dec 15 12:16:57 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 12:16:57 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
Message-ID: <1071508616.31480.19.camel@sheriffpony>

On Mon, 2003-12-15 at 05:14, Richard.Townsend at edl.uk.eds.com wrote:
> I had the following demo script for Twisted 1.0.6:
> 
> #-----------------
> import sys
> from twisted.internet import app, reactor
> from twisted.python import log, logfile
> from twisted.web import server, resource
> 
> class Simple(resource.Resource):
>     isLeaf = True
> 
>     def render(self, request):
>         print "Request:", request
>         return "<html>Hello</html>"
> 
> 
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
> 
>     site = server.Site(Simple())
>     application = app.Application('web')
>     application.bindPorts()
>     application.listenTCP(8080, site)
>     application.run(save=0)
> #-----------------
> 
> This works OK with the following client:
> 
> #-----------------
> from twisted.internet import reactor
> from twisted.web.client import getPage
> from twisted.python.util import println
> 
> 
> class Client:
>     
>     def __init__(self):
>         self.sendReq()
>         reactor.run()
> 
> 
>     def handleCallback(self, value):
>         println("Success:", value)
>         reactor.stop()
>     
>     
>     def handleErrback(self, error):
>         println("Error:", error)
>         reactor.stop()
> 
> 
>     def sendReq(self):
>         uri = "http://localhost:8080/Simple"
>         deferred = getPage(uri)
>         deferred.addCallbacks(self.handleCallback,
>                               self.handleErrback)
> 
>         
> if __name__ == "__main__":
>     
>     Client()
> #-----------------
> 
> However, under Twisted 1.1.1 this raises: 
> exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
> use twisted.application instead.
> 
> So I tried to create a new version of the server:
> 
> #-----------------
> import sys
> from twisted.application import service, internet
> from twisted.internet import reactor
> from twisted.python import log
> from twisted.web import server, resource
> 
> 
> class Simple(resource.Resource):
>     isLeaf = True
> 
>     def render(self, request):
>         print "Request:", request
>         return "<html>Hello</html>"
> 
> 
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
>     
>     root = Simple()
>     site = server.Site(root)
>     application = service.Application('web')
>     sc = service.IServiceCollection(application)
>     i = internet.TCPServer(8080, site)
>     i.setServiceParent(sc)
>     reactor.run()

reactor.run() is not how you start a service. You could:

    sc.startService()
    reactor.addSystemEventTrigger('before', 'shutdown',
          sc.stopService)
    reactor.run()

or, better yet, use twistd - see
http://twistedmatrix.com/documents/howto/application (last bit).

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From radix at twistedmatrix.com  Mon Dec 15 13:02:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 15 Dec 2003 13:02:32 -0500
Subject: [Twisted-Python] Twisted Weekly News #9
In-Reply-To: <200312142350.28201.lstep@adequat.net>
References: <200312142350.28201.lstep@adequat.net>
Message-ID: <3FDDF738.7000103@twistedmatrix.com>

Luc Stepniewski wrote:
> ====================================================================
> Twisted Weekly News #9
> ====================================================================

This is great! Thanks much for putting this together. :-)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From cls at xpnet.com.br  Mon Dec 15 13:08:05 2003
From: cls at xpnet.com.br (Claudio Leonel)
Date: Mon, 15 Dec 2003 16:08:05 -0200
Subject: [Twisted-Python] How to intercept SSL exceptions ?
Message-ID: <3FDDF885.5070808@xpnet.com.br>

Hi all,


When my twisted SSL client connects to the wrong server or
its CA certificate is not the correct one, SSL exceptions
occurs in the following lines, inside Twisted:

   File 
"/usr/local/lib/python2.3/site-packages/twisted/internet/tcp.py", line 
259, in writeSomeData
     return self.socket.send(data)
SSL.Error: [('SSL routines', 'SSL3_GET_SERVER_CERTIFICATE', 'certificate 
verify failed')]

and

   File 
"/usr/local/lib/python2.3/site-packages/twisted/internet/tcp.py", line 
234, in doRead
     data = self.socket.recv(self.bufferSize)
SSL.Error: [('SSL routines', 'SSL3_GET_SERVER_CERTIFICATE', 'certificate 
verify failed')]


How can I intercept these exceptions in my application so they do not
interfere with the client output ?


Regards,
Claudio Leonel






From glyph at twistedmatrix.com  Mon Dec 15 13:41:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Dec 2003 13:41:55 -0500
Subject: [Twisted-Python] Twisted Weekly News #9
In-Reply-To: <3FDDF738.7000103@twistedmatrix.com>
References: <200312142350.28201.lstep@adequat.net> <3FDDF738.7000103@twistedmatrix.com>
Message-ID: <5B5A8CDE-2F2E-11D8-B527-000393C9700E@twistedmatrix.com>

On Dec 15, 2003, at 1:02 PM, Christopher Armstrong wrote:

> This is great! Thanks much for putting this together. :-)

Yes indeed!  Great work!




From dave at krondo.com  Mon Dec 15 14:40:57 2003
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 15 Dec 2003 11:40:57 -0800 (PST)
Subject: [Twisted-Python] long-lived database transaction
Message-ID: <20031215194057.6F0D3A2666@oneiros.krondo.net>


> On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> > Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> > [snip]
> > > Evidently not impossible, as Bill Gribble has a patch adding
> >=20
> > eheh. yesss. i should have added "without leaving a thread suspended".
> > my fault.
> >=20
> > > this support to the existing adbapi.py. But it still may be
> > > simpler to support an extended transaction api by going away
> > > from a thread pool. In either case, we should not have two
> > > separate modules.
> >=20
> > agreed. see my later mail; Bill's patch is fine if we can get it in.
>=20
> I'd like to have some tests for it before it goes in.
> I might have some time over holiday break to work on
> some.

> i can do the tests too. can we coordinate over irc or IM?

During the week I don't actually have irc/im access or even
access to a machine I can work on, for now. So feel free to
get started and we can sync up this weekend.

dave




From itamar at itamarst.org  Mon Dec 15 15:09:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 15:09:26 -0500
Subject: [Twisted-Python] PyCon submissions now accepted
Message-ID: <1071518966.5659.0.camel@sheriffpony>

Dear Python User:

I am pleased to be able to announce that the submission
process for PyCon DC 2004 is now open. Please direct your
browser to

    http://submit.pycon.org/

and create your account by entering your email address and
leaving the password field blank - a password will be sent
to you by email, and you can submit your paper!

Please remember that your submissions should ideally be in
a single file, containing HTML or the reStructured Text
format. Ultimately we would like to publish all
accepted papers on the web, and these rules should make it
easier to do so. Send enquiries about other formats to

    pycon-organizers at python.org

If your paper is accepted and you prepare an electronic
presentation (in PDF, PythonPoint or PowerPoint) we will
also happily publish that on the web site when PyCon is over.

We are interested in any and all submissions about uses of
Python and the development of the language. Since there is
expected to be a strong educational community presence for
the next PyCon, teaching materials of various kinds are also
encouraged.

Please help us to make the next PyCon even better than the
first one. See you in March!

Sincerely

Steve Holden
Chairman
PyCon DC 2004





From matthew.s.hegedus at lmco.com  Mon Dec 15 15:13:39 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Mon, 15 Dec 2003 14:13:39 -0600
Subject: [Twisted-Python] Twisted reactor
Message-ID: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>

I want to have a piece of software that listens for UDP packets on multiple
ports. It listens TCP for a connection that will tell it what UDP ports to
listen to. The UDP ports change dynamically. I guess I can always do a
reactor.listenUDP(port) whenever I need to listen on additional ports, but
how do I get the reactor to stop listening on a particular port? Thanks,

Matthew



From matt at pollenation.net  Mon Dec 15 17:37:43 2003
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 15 Dec 2003 22:37:43 +0000
Subject: [Twisted-Python] Twisted reactor
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>
Message-ID: <3FDE37B7.8080207@pollenation.net>

Hegedus, Matthew S wrote:

>I want to have a piece of software that listens for UDP packets on multiple
>ports. It listens TCP for a connection that will tell it what UDP ports to
>listen to. The UDP ports change dynamically. I guess I can always do a
>reactor.listenUDP(port) whenever I need to listen on additional ports, but
>how do I get the reactor to stop listening on a particular port? Thanks,
>
listenUDP() returns an object which supports the IListeningPort 
interface. Hang on to that object and call stopListening() on it when 
you change ports.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt at pollenation.net





From greg at lapcominc.com  Mon Dec 15 18:12:37 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Mon, 15 Dec 2003 18:12:37 -0500
Subject: [Twisted-Python] twisted web question
Message-ID: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>

I am playing with some twisted-web and woven stuff.

I noticed that whenever I get an error page, the server no longer 
handles requests.

Is this the intended behavior?

Greg




From Thomas.Favier at accelance.fr  Tue Dec 16 05:46:45 2003
From: Thomas.Favier at accelance.fr (Thomas Favier)
Date: Tue, 16 Dec 2003 11:46:45 +0100
Subject: [Twisted-Python] Patch submission ?
Message-ID: <3FDEE295.2000302@accelance.fr>

Hi,

    I'd like to know what is the standard way of submitting patches. 
 From what I've read on the ML, patches should be sent to the tracker. I 
did so, but my small submission didn't even get read...

    So is the standard way :
1. post to ML
2. have response about the bug tracker thing
3. post it to bug tracker ?

    It seems a good way to be sure that at least someone knows the patch 
exists ;)

    My submission is Issue371, submitted on Oct 28. It is a small patch 
to restore the possibility to give the host you want to query in 
HTTPPageGetter (usefull for monitoring real servers in a load-balanced 
architecture). Moving to 1.1.1 this morning, my app choke on this...

    I don't mind patching my sources at every upgrade, but I'd like to 
know how to be sure that patches are at least read ;)

    Anyway thanks for that great piece of code.

Thomas.




From lafou at wanadoo.fr  Tue Dec 16 09:33:59 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Tue, 16 Dec 2003 15:33:59 +0100
Subject: [Twisted-Python] twisted web question
In-Reply-To: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
Message-ID: <200312161533.59346.lafou@wanadoo.fr>

I had this problem and pointed up to ml some weeks ago... No response for 
that. I just corrected it by using a TAP file instead of creating the 
application in my code.
Try :

==========================================================
mktap  web --resource-script=index.rpy
==========================================================

then start it with :


==========================================================
PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
==========================================================

Here is my index.rpy file :

==========================================================
# This file is used for debug. It allows to reload the whole application
# and test changes directly.

import MyWovenPages


## Comment out this line when finished debugging
reload(MyWovenPages)

# We must have a 'resource'. We take the index page as the default resource.
resource = MyWovenPages.MyWovenPages_Index()
==========================================================

hope this helped

--
Philippe


On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
> I am playing with some twisted-web and woven stuff.
>
> I noticed that whenever I get an error page, the server no longer
> handles requests.
>
> Is this the intended behavior?
>
> Greg
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Tue Dec 16 10:02:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 10:02:20 -0500
Subject: [Twisted-Python] Patch submission ?
In-Reply-To: <3FDEE295.2000302@accelance.fr>
References: <3FDEE295.2000302@accelance.fr>
Message-ID: <1071586940.1201.0.camel@sheriffpony>

On Tue, 2003-12-16 at 05:46, Thomas Favier wrote:

>  From what I've read on the ML, patches should be sent to the tracker. I 
> did so, but my small submission didn't even get read...
> 
>     So is the standard way :
> 1. post to ML
> 2. have response about the bug tracker thing
> 3. post it to bug tracker ?

Standard way is:
1. Post to bug tracker
2. If no one handles it, bug mailing list or someone on the IRC channel.

So you're doing fine. :)

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From greg at lapcominc.com  Tue Dec 16 10:06:54 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Tue, 16 Dec 2003 10:06:54 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>

So basically one has to use an rpy file to avoid this issue....

One thing I was wondering about using an rpy file:

Does the resource object get instantiated on every request?  It seems 
like this would cause a lot of page objects to be created for every 
request...

Thanks for the tip.
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucri?re wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From greg at lapcominc.com  Tue Dec 16 10:07:26 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Tue, 16 Dec 2003 10:07:26 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>

Just thought of something else:

If I use mktap and an .rpy script, I cannot install any other protocol 
factory.  My server listens on one port to implement a proprietary 
TCP/IP protocol, and another port to provide a web interface.  Am I 
right that I cannot set this up using mktap?

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucri?re wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Tue Dec 16 10:12:15 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 10:12:15 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
	 <200312161533.59346.lafou@wanadoo.fr>
	 <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
Message-ID: <1071587535.1200.2.camel@sheriffpony>

On Tue, 2003-12-16 at 10:07, Greg Lappen wrote:
> Just thought of something else:
> 
> If I use mktap and an .rpy script, I cannot install any other protocol 
> factory.  My server listens on one port to implement a proprietary 
> TCP/IP protocol, and another port to provide a web interface.  Am I 
> right that I cannot set this up using mktap?

If you use mktap web, yes. So don't use it.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Tue Dec 16 17:06:07 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 16 Dec 2003 23:06:07 +0100
Subject: [Twisted-Python] Twisted Web sessions
Message-ID: <20031216220607.GA11719@pasternak.w.lub.pl>

Hi,

how do I protect from session-hijacking when using Twisted Web? Is it the
same as with PHP -- or do you, Twisted guys, already think out of something?

Take care,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From radix at twistedmatrix.com  Tue Dec 16 17:12:43 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 16 Dec 2003 17:12:43 -0500
Subject: [Twisted-Python] Twisted Web sessions
In-Reply-To: <20031216220607.GA11719@pasternak.w.lub.pl>
References: <20031216220607.GA11719@pasternak.w.lub.pl>
Message-ID: <3FDF835B.5080008@twistedmatrix.com>

Michal Pasternak wrote:
> how do I protect from session-hijacking when using Twisted Web? Is it the
> same as with PHP -- or do you, Twisted guys, already think out of something?

AFAIK, the entirety of the built-in protection is that the session key 
is a long random number. Your best bet is SSL, I think.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From michal at pasternak.w.lub.pl  Tue Dec 16 17:42:08 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 16 Dec 2003 23:42:08 +0100
Subject: [Twisted-Python] Session trouble
Message-ID: <20031216224208.GA23618@pasternak.w.lub.pl>

Hi,

On a page of the site I've got a form. The user enters values and submits
the form. Entered values are saved to session. If s/he gets back to the page
(=> encounters the same form), values are loaded from the session and the
form is filled with them. Everything worked okay, until I turned on caching.
Now, even if the test machine is on different subnet, the filled values are
presented to all connected users by default (eg. my friend, while testing
it, enters some data; I open a "clean" browser, without any cookies or such,
enter the page with the form - and I get the same data he entered!).

My question is simple: how do I get around this? Should I turn off the
caching (which speeds up page generation significantly, so I'd rather say
it's required)? Is it known issue? What am I doing wrong? Where should I RTFM?

I run the site server with twistd and RPY script.

This is my RPY script:

	cache()
	import myWeb
	resource = myWeb.RootPage()

This is how I save / load session values in myWeb:

     I have declared:
     
	class IPreferences(components.Interface):
    		pass
	class Preferences(components.Adapter):
    		__implements__ = IPreferences
	components.registerAdapter(Preferences, server.Session, IPreferences)

     Then, when I'm loading/saving values from/to session, I use:
     
        prefs = req.getSession(IPreferences)
	
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From itamar at itamarst.org  Tue Dec 16 18:26:31 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 18:26:31 -0500
Subject: [Twisted-Python] Session trouble
In-Reply-To: <20031216224208.GA23618@pasternak.w.lub.pl>
References: <20031216224208.GA23618@pasternak.w.lub.pl>
Message-ID: <1071617191.3519.1.camel@sheriffpony>

Could you ask web questions on 	
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web?

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Wed Dec 17 00:26:09 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Wed, 17 Dec 2003 06:26:09 +0100
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
Message-ID: <20031217052609.GA20970@pasternak.w.lub.pl>

Hi,

I'm testing a bit the performance of Twisted Web, using puf(1) downloader
and loopback interface. Puf is something like wget(1), only it can do many
simultaneous connections. When the maximum connection no. is small (1 - 40
connections at once), Twisted Web works very good, providing a reasonable
page generation time (thus, data transfer rate) and eating my CPU. 

But if I raise the simultaneous connection number to something above 40,
data transfer rate and CPU usage fall.

Is it intended behaviour? I don't think I'll ever have to program a site,
which has to serve more, than 40 connections at once, but in case this
happens, I'd like to know.

Regards,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From exarkun at intarweb.us  Wed Dec 17 00:41:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 17 Dec 2003 00:41:51 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <20031217052609.GA20970@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
Message-ID: <20031217054151.GB3045@intarweb.us>

On Wed, Dec 17, 2003 at 06:26:09AM +0100, Michal Pasternak wrote:
> Hi,
> 
> I'm testing a bit the performance of Twisted Web, using puf(1) downloader
> and loopback interface. Puf is something like wget(1), only it can do many
> simultaneous connections. When the maximum connection no. is small (1 - 40
> connections at once), Twisted Web works very good, providing a reasonable
> page generation time (thus, data transfer rate) and eating my CPU. 
> 
> But if I raise the simultaneous connection number to something above 40,
> data transfer rate and CPU usage fall.
> 
> Is it intended behaviour?

  Yes.  Twisted was specifically designed to scale poorly with smallish
numbers of concurrent connections.

> I don't think I'll ever have to program a site, which has to serve more,
> than 40 connections at once, but in case this happens, I'd like to know.
> 
> Regards,
> -- 
> Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031217/2b0c55b8/attachment.pgp 

From lafou at wanadoo.fr  Wed Dec 17 04:30:05 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Wed, 17 Dec 2003 10:30:05 +0100
Subject: [Twisted-Python] twisted web question
In-Reply-To: <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr> <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
Message-ID: <200312171030.05411.lafou@wanadoo.fr>

On Tuesday 16 December 2003 16:06, Greg Lappen wrote:
> So basically one has to use an rpy file to avoid this issue....
>
> One thing I was wondering about using an rpy file:
>
> Does the resource object get instantiated on every request?  It seems
> like this would cause a lot of page objects to be created for every
> request...


yep, they are created for every request !
that's why you should only use it for dev/debug.

--
sry for the twisted-web discussion here guys...
(the problem wouldn't appear with a forum, u know... :) )




From exarkun at intarweb.us  Wed Dec 17 10:40:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 17 Dec 2003 10:40:05 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312171030.05411.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr> <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com> <200312171030.05411.lafou@wanadoo.fr>
Message-ID: <20031217154005.GA4846@intarweb.us>

On Wed, Dec 17, 2003 at 10:30:05AM +0100, Philippe Lafoucri?re wrote:
> [snip]
> sry for the twisted-web discussion here guys...
> (the problem wouldn't appear with a forum, u know... :) )
> 

  http://twisted.banquise.org/

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031217/05dd0da8/attachment.pgp 

From itamar at itamarst.org  Wed Dec 17 10:47:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Dec 2003 10:47:29 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031217052609.GA20970@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
Message-ID: <1071676049.3523.15.camel@sheriffpony>

On Wed, 2003-12-17 at 00:26, Michal Pasternak wrote:

> But if I raise the simultaneous connection number to something above 40,
> data transfer rate and CPU usage fall.

I never saw that happen. How are you testing? Is it RPY? What size data?
Are you certain issue is not with interaction with client?

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From itamar at itamarst.org  Wed Dec 17 10:54:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Dec 2003 10:54:14 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031217054151.GB3045@intarweb.us>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
	 <20031217054151.GB3045@intarweb.us>
Message-ID: <1071676454.3518.20.camel@sheriffpony>

On Wed, 2003-12-17 at 00:41, Jp Calderone wrote:

>   Yes.  Twisted was specifically designed to scale poorly with smallish
> numbers of concurrent connections.

(Jp can be somewhat sarcastic sometimes.)

Note that twisted just won't scale as well as pure C
load-from-filesystem-only webservers, since *every* request is
essentialy "dynamic", i.e. requires slowish python code to run. That
does not mean twisted is slow, though, for dynamic sites it might run
faster than a apache/php/mysql app if architectured correctly, because
for dynamic apps that throughput (how many bytes you can push out) is
almost never the bottleneck. And twisted.web should be able to saturate
most network connections, even if it's slower at the moment at byte
pushing.





From slyphon at twistedmatrix.com  Wed Dec 17 11:14:56 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 17 Dec 2003 11:14:56 -0500
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <3FDA8D80.5060404@paradise.net.nz>
References: <3FDA8D80.5060404@paradise.net.nz>
Message-ID: <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>

On Fri, 2003-12-12 at 22:54, Douglas Bagnall wrote:
> hi all,
> 
> I'm making a thing which collects webcam images via ftp (the lowest 
> common denominator for webcam software), and sends them off again via 
> the web.  I'd quite like to do it without troubling the file system, 
> storing the images as python strings, whilst ignoring all the cd/pwd 
> stuff.  Needless to say I don't want to use real system usernames.
> 
> Is this very sensible or possible?  I (happily) don't know much about 
> the ftp protocol, or its twisted implementation.
> 
> 
> cheers,
> 
> Douglas Bagnall
> 
> 
This is possible, and might be sensible, but in order for you to get
this to work, you'd have to learn quite a bit about how twisted thinks
about ftp. I'd be happy to help you if you do decide to pursue this.

-Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031217/07f14516/attachment.pgp 

From slyphon at twistedmatrix.com  Wed Dec 17 11:20:32 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 17 Dec 2003 11:20:32 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
	implementation
In-Reply-To: <3FDDAD89.6070101@pa.press.net>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
	 <20031215123557.GA4547@frobozz>  <3FDDAD89.6070101@pa.press.net>
Message-ID: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>

On Mon, 2003-12-15 at 07:48, John Abel wrote:
> Andrew Bennetts wrote:
> 
> >On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
> >  
> >
> >>cred-code should go. Also, there's been some considerable trouble caused
> >>by the fact that my avatar implemenation is not windows-friendly. Any
> >>thoughts on how to either adapt it, or if some kindly windows-user could
> >>implement a windows-compatable version, would be greatly appreciated.
> >>    
> >>
> >
> >Is the problem with windows the lack of pwd and grp modules?  I presume you
> >need these for authentication and permission checking?  If that's the case,
> >perhaps you could implement a simpler avatar for windows that only supports
> >anonymous, read-only access to any files that the server has permission to
> >read?  (i.e. basically what the old server supported anyway)
> >
> >  
> >
> I have code for authentication on 2000/XP platforms, if you're 
> interested? It is used in the medusa ftp example.
> 

YES! I'm interested!


> >>Also, on a tangent, the new (-new) ftp protocol refactoring in my
> >>sandbox has much more complete code-coverage in terms of the unittests. 
> >>    
> >>
> >
> >Woo!  What about for the client?  ;)
> >
> >-Andrew.
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >  
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031217/83b43cb1/attachment.pgp 

From dialtone at aruba.it  Wed Dec 17 15:51:07 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Wed, 17 Dec 2003 21:51:07 +0100
Subject: [Twisted-Python] [WISH] pygame reactor
Message-ID: <20031217205107.GA14588@vercingetorix.caesar.org>

Hi all, looking at twisted I see that there is a very simple pyui
support but not pygame support.

My hope is, now that pyui is somewhat death or windows only, to have a
pygame reactor maybe using pygame.event.wait() which idles till a
pygame event comes.

And maybe also a protocol implemented using the event.type value
(onMouseButton1, onKeyPressed, onKeyReleased and so on).

I think that this would be a really interesting and useful feature to
have and would simplify a lot the design of fully featured gui
toolkits in pygame.

I may help in coding this stuff into twisted although I'm don't know
it well enough.

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User



From warner at lothar.com  Wed Dec 17 17:51:01 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 17 Dec 2003 14:51:01 -0800 (PST)
Subject: [Twisted-Python] [WISH] pygame reactor
Message-ID: <20031217.145101.41183314.warner@lothar.com>

> My hope is, now that pyui is somewhat death or windows only, to have a
> pygame reactor maybe using pygame.event.wait() which idles till a
> pygame event comes.

Perhaps as a way of getting started, Paul Boehm posted the following code to
this list in October of 2002. Unlike Twisted, pygame isn't very quiescent, so
there isn't a way to just sleep until something needs to be done. Instead, in
this code, twisted runs the pygame update routine as frequently as necessary
to achieve the desired frame rate. This probably has implications for
response latency to joystick events, etc.. I haven't actually tried to run
this in a long time (since about November of 2002 :).

 -Brian

# MyGame embedded in Twisted

from pygame import time
from twisted.internet import reactor

import mygame

class PygameTimer:
    def __init__(self, game):
        self.clock = time.Clock()
        self.game = game
        self.update()

    def update(self):
        self.clock.tick()
        self.ms = self.clock.get_rawtime()

        framespeed = (1.0/100.0) * 1000
        lastspeed = self.ms
        next = framespeed - lastspeed

        print "framespeed", framespeed, "ms", self.ms, "next", next, "fps", self.clock.get_fps()

        self.game.iterate()

        if self.game.want_quit:
            self.game.cleanup()
            reactor.stop()
        else:
            reactor.callLater(next/1000.0*2.0, self.update)


if __name__ == "__main__":
    pt = PygameTimer(mygame.Game())
    reactor.run()



From michal at pasternak.w.lub.pl  Wed Dec 17 20:23:30 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Thu, 18 Dec 2003 02:23:30 +0100
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <1071676454.3518.20.camel@sheriffpony>
References: <20031217052609.GA20970@pasternak.w.lub.pl> <20031217054151.GB3045@intarweb.us> <1071676454.3518.20.camel@sheriffpony>
Message-ID: <20031218012330.GA26822@pasternak.w.lub.pl>

Itamar Shtull-Trauring [Wed, Dec 17, 2003 at 10:54:14AM -0500]:
> That
> does not mean twisted is slow

I've never said that.

Everything works very good right until simultaneous connection number is
below 40. I just thought it was a hard limit set in the source (DoS
protecition?) or something similar. If you deny the existence of such limit,
I'll proceed with examination of the situation.

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From itamar at itamarst.org  Thu Dec 18 00:41:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 00:41:58 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031218012330.GA26822@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
	 <20031217054151.GB3045@intarweb.us> <1071676454.3518.20.camel@sheriffpony>
	 <20031218012330.GA26822@pasternak.w.lub.pl>
Message-ID: <1071726118.3518.22.camel@sheriffpony>

On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:

> Everything works very good right until simultaneous connection number is
> below 40. I just thought it was a hard limit set in the source (DoS
> protecition?) or something similar. If you deny the existence of such limit,
> I'll proceed with examination of the situation.

No such limit is hardcoded.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From john.abel at pa.press.net  Thu Dec 18 02:25:28 2003
From: john.abel at pa.press.net (John Abel)
Date: Thu, 18 Dec 2003 07:25:28 +0000
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
  implementation
In-Reply-To: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>
References: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FE15668.5020201@pa.press.net>

Jonathan Simms wrote:

>On Mon, 2003-12-15 at 07:48, John Abel wrote:
>  
>
>>Andrew Bennetts wrote:
>>
>>    
>>
>>>On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
>>> 
>>>
>>>      
>>>
>>>>cred-code should go. Also, there's been some considerable trouble
>>>>        
>>>>
>caused
>  
>
>>>>by the fact that my avatar implemenation is not windows-friendly.
>>>>        
>>>>
>Any
>  
>
>>>>thoughts on how to either adapt it, or if some kindly windows-user
>>>>        
>>>>
>could
>  
>
>>>>implement a windows-compatable version, would be greatly
>>>>        
>>>>
>appreciated.
>  
>
>>>>   
>>>>
>>>>        
>>>>
>>>Is the problem with windows the lack of pwd and grp modules?  I
>>>      
>>>
>presume you
>  
>
>>>need these for authentication and permission checking?  If that's the
>>>      
>>>
>case,
>  
>
>>>perhaps you could implement a simpler avatar for windows that only
>>>      
>>>
>supports
>  
>
>>>anonymous, read-only access to any files that the server has
>>>      
>>>
>permission to
>  
>
>>>read?  (i.e. basically what the old server supported anyway)
>>>
>>> 
>>>
>>>      
>>>
>>I have code for authentication on 2000/XP platforms, if you're 
>>interested? It is used in the medusa ftp example.
>>
>>    
>>
>
>YES! I'm interested!
>
>
>  
>
Here ya go.  I'm afraid it requires win32all, but I wouldn't have 
thought there'd be too many Win32 people without it.  It also requires 
the user running the script to be added to the policy entry "Act As Part 
Of The OS".

import win32security, win32con, win32api, win32net
import ntsecuritycon, pywintypes

class Win32Authorizer:

    def authorize (self, channel, userName, passWord):
        self.AdjustPrivilege( ntsecuritycon.SE_CHANGE_NOTIFY_NAME )
        self.AdjustPrivilege( ntsecuritycon.SE_ASSIGNPRIMARYTOKEN_NAME )
        self.AdjustPrivilege( ntsecuritycon.SE_TCB_NAME )
        try:
            logonHandle = win32security.LogonUser( userName,
                                                   None,
                                                   passWord,
                                                    
win32con.LOGON32_LOGON_INTERACTIVE,
                                                    
win32con.LOGON32_PROVIDER_DEFAULT )
        except pywintypes.error, ErrorMsg:
            return 0, ErrorMsg[ 2 ], None

        userInfo = win32net.NetUserGetInfo( None, userName, 1 )


    def AdjustPrivilege( self, priv ):
        flags = ntsecuritycon.TOKEN_ADJUST_PRIVILEGES | 
ntsecuritycon.TOKEN_QUERY
        htoken =  
win32security.OpenProcessToken(win32api.GetCurrentProcess(), flags)
        id = win32security.LookupPrivilegeValue(None, priv)
        newPrivileges = [(id, ntsecuritycon.SE_PRIVILEGE_ENABLED)]
        win32security.AdjustTokenPrivileges(htoken, 0, newPrivileges)

Hope that's of use.

Regards

John



From paul at soniq.net  Thu Dec 18 07:56:12 2003
From: paul at soniq.net (Paul Boehm)
Date: Thu, 18 Dec 2003 13:56:12 +0100
Subject: [Twisted-Python] twisted.web performance hacks
Message-ID: <20031218125612.GD31857@soniq.net>

On Thu, Dec 18, 2003 at 12:41:58AM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:
> 
> > Everything works very good right until simultaneous connection number is
> > below 40. I just thought it was a hard limit set in the source (DoS
> > protecition?) or something similar. If you deny the existence of such limit,
> > I'll proceed with examination of the situation.
> 
> No such limit is hardcoded.

anyone thought about writing multi-process twisted applications yet?

looking at examples/web.py, it would be easy to do

reactor.listenTCP(1999, site)
for x in xrange(1,5):
    if os.fork() == 0:
        break
reactor.run()

for shared dynamic data you'd of course have to use something along the lines
of pb+remotecache, but if i'm not mistaken, for some applications this kind of
hack might give a performance edge, especially on multiprocessor machines.

in particular twisted.web could improve in benchmarks when being able to
emulate classical application behaviour for performance reasons
(no shared data between different connection handlers)

regards,
  paul



From exarkun at intarweb.us  Thu Dec 18 09:29:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 18 Dec 2003 09:29:03 -0500
Subject: [Twisted-Python] twisted.web performance hacks
In-Reply-To: <20031218125612.GD31857@soniq.net>
References: <20031218125612.GD31857@soniq.net>
Message-ID: <20031218142903.GA7820@intarweb.us>

On Thu, Dec 18, 2003 at 01:56:12PM +0100, Paul Boehm wrote:
> On Thu, Dec 18, 2003 at 12:41:58AM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:
> > 
> > > Everything works very good right until simultaneous connection number is
> > > below 40. I just thought it was a hard limit set in the source (DoS
> > > protecition?) or something similar. If you deny the existence of such limit,
> > > I'll proceed with examination of the situation.
> > 
> > No such limit is hardcoded.
> 
> anyone thought about writing multi-process twisted applications yet?
> 
> looking at examples/web.py, it would be easy to do
> 
> reactor.listenTCP(1999, site)
> for x in xrange(1,5):
>     if os.fork() == 0:
>         break
> reactor.run()
> 
> for shared dynamic data you'd of course have to use something along the lines
> of pb+remotecache, but if i'm not mistaken, for some applications this kind of
> hack might give a performance edge, especially on multiprocessor machines.
> 
> in particular twisted.web could improve in benchmarks when being able to
> emulate classical application behaviour for performance reasons
> (no shared data between different connection handlers)

  I think the twisted.web mailing list is a more appropriate forum for
discussion of this.

  Jp

> 
> regards,
>   paul
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031218/8cb2e404/attachment.pgp 

From itamar at itamarst.org  Thu Dec 18 16:21:32 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 16:21:32 -0500
Subject: [Twisted-Python] Next time we write a protocol implementation
Message-ID: <1071782492.5837.37.camel@sheriffpony>

We should take a look at http://oss.corest.com/projects/impacket.html

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From matthew.s.hegedus at lmco.com  Thu Dec 18 19:12:20 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Thu, 18 Dec 2003 18:12:20 -0600
Subject: [Twisted-Python] Broadcasting UDP
Message-ID: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>

I am having trouble with UDP broadcasting. 

self.transport.write(data, (broadcastAddress, port))

yields a socket error 'Permission denied'. It appears the socket is not set
up for broadcasting. Upon creation I think it needs something like
SO_BROADCAST as an option. Can I get this behavior using Twisted UDP
protocols or do I need to do my own socket stuff? Thanks,

Matthew Hegedus



From itamar at itamarst.org  Thu Dec 18 19:21:46 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 19:21:46 -0500
Subject: [Twisted-Python] Broadcasting UDP
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>
Message-ID: <1071793306.5837.52.camel@sheriffpony>

On Thu, 2003-12-18 at 19:12, Hegedus, Matthew S wrote:

> yields a socket error 'Permission denied'. It appears the socket is not set
> up for broadcasting. Upon creation I think it needs something like
> SO_BROADCAST as an option. Can I get this behavior using Twisted UDP
> protocols or do I need to do my own socket stuff? Thanks,

For now self.transport.socket.setsockopt(...SO_BROADCAST) (or maybe transport.skt, check) will do the trick. Obviously this is breaking abstraction, but it does work.

Add an issue about this to the bug tracker and assign it to me, and at some point I'll add a transport.allowBroadcast(bool) method.

--
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From warner at lothar.com  Fri Dec 19 02:57:09 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 18 Dec 2003 23:57:09 -0800 (PST)
Subject: [Twisted-Python] Next time we write a protocol implementation
In-Reply-To: <1071782492.5837.37.camel@sheriffpony>
References: <1071782492.5837.37.camel@sheriffpony>
Message-ID: <20031218.235709.12758067.warner@lothar.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> We should take a look at http://oss.corest.com/projects/impacket.html

Any idea how it compares to Scapy?:

 http://www.cartel-securite.fr/pbiondi/scapy.html


 -Brian



From fdrake at acm.org  Fri Dec 19 16:41:55 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Fri, 19 Dec 2003 16:41:55 -0500
Subject: [Twisted-Python] SFTP Gateway available
Message-ID: <16355.28835.419067.966615@sftp.fdrake.net>

Zope Corporation has created an SFTP server that uses an FTP server as
a back end using Twisted.  The code is covered by the Zope Public
License (ZPL).

I don't expect we'll create a separate downloadable package for SFTP
Gateway until January, but it's already available in the public CVS
repository on cvs.zope.org.

For more information, see the README.txt file in the CVS repository:

    http://cvs.zope.org/Packages/SFTPGateway/


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From foom at fuhm.net  Fri Dec 19 18:08:49 2003
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Dec 2003 18:08:49 -0500
Subject: [Twisted-Python] SFTP Gateway available
In-Reply-To: <16355.28835.419067.966615@sftp.fdrake.net>
References: <16355.28835.419067.966615@sftp.fdrake.net>
Message-ID: <4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>

That's pretty cool. Maybe it's time for me to rewrite my ssh->telnet 
gateway in twisted. :)

James

On Dec 19, 2003, at 4:41 PM, Fred L. Drake, Jr. wrote:
> Zope Corporation has created an SFTP server that uses an FTP server as
> a back end using Twisted.  The code is covered by the Zope Public
> License (ZPL).
>
> I don't expect we'll create a separate downloadable package for SFTP
> Gateway until January, but it's already available in the public CVS
> repository on cvs.zope.org.
>
> For more information, see the README.txt file in the CVS repository:
>
>     http://cvs.zope.org/Packages/SFTPGateway/




From enrico.sirola at riskmap.it  Tue Dec 16 05:03:28 2003
From: enrico.sirola at riskmap.it (enrico.sirola at riskmap.it)
Date: 16 Dec 2003 11:03:28 +0100
Subject: [Twisted-Python] scheduling a task
Message-ID: <un09toz9r.fsf@riskmap.it>

Hello,
I just wrote my first twisted python application (basically, it's a
SOAP server). The application layout is something like the following
pseudocode:

# validator.py from here
class A(service.Service):
        # .... details omitted ...
        pass

class B(resource.Resource):
        def __init__(self, service):
                self.service = service

        # .... details omitted ...


def makeService(config):
        s = service.MultiService()
        v = A()
        soap_server = internet.TCPServer(config['port'], server.Site(B(v)))
        soap_server.setServiceParent(s)
        return s
# to here

# tap.py from here 
class Options(usage.Options):

    optParameters = [
        ['port', 'p', 8090],
        ]

def makeService(config):
    return validator.makeService(config)

# to here

# plugins.tml from here
register('server', 'server.tap', 
         description = 'build a server',
	 type = 'tap', tapname = 'server')
# to here

anyway, i'd like to add the server a task running every 30s. I saw an
example using reactor, like the following:

reactor.callLater(30, task)

now, where must i put this code in order to be run at application
bootstrap? I tried putting reactor.callLater into the makeService
function, but it seems it's executed during mktap only (am i
wrong?)... 

Thanks very much in advance,
enrico

        

-- 
Enrico Sirola <enrico dot sirola at riskmap dot it>




From greg at paperfree.net  Tue Dec 16 09:54:36 2003
From: greg at paperfree.net (Greg Lappen)
Date: Tue, 16 Dec 2003 09:54:36 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <C427D34B-2FD7-11D8-B78A-000A95DA5A64@paperfree.net>

So basically one has to use an rpy file to avoid this issue....

One thing I was wondering about using an rpy file:

Does the resource object get instantiated on every request?  It seems 
like this would cause a lot of page objects to be created for every 
request...

Thanks for the tip.

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucri?re wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From greg at paperfree.net  Tue Dec 16 10:05:26 2003
From: greg at paperfree.net (Greg Lappen)
Date: Tue, 16 Dec 2003 10:05:26 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <47D957BC-2FD9-11D8-9AE8-000A95DA5A64@paperfree.net>

Just thought of something else:

If I use mktap and an .rpy script, I cannot install any other protocol 
factory.  My server listens on one port to implement a proprietary 
TCP/IP protocol, and another port to provide a web interface.  Am I 
right that I cannot set this up using mktap?

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucri?re wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From greg at paperfree.net  Wed Dec 17 08:31:39 2003
From: greg at paperfree.net (Greg Lappen)
Date: Wed, 17 Dec 2003 08:31:39 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <20031217054151.GB3045@intarweb.us>
References: <20031217052609.GA20970@pasternak.w.lub.pl> <20031217054151.GB3045@intarweb.us>
Message-ID: <583AACCC-3095-11D8-9AE8-000A95DA5A64@paperfree.net>

Jp-

I can't tell if  you're being sarcastic or not.....

I was under the impression that twisted was designed for a large number 
of connections, but scales poorly if the application is CPU intensive.

Greg
On Dec 17, 2003, at 12:41 AM, Jp Calderone wrote:

> On Wed, Dec 17, 2003 at 06:26:09AM +0100, Michal Pasternak wrote:
>> Hi,
>>
>> I'm testing a bit the performance of Twisted Web, using puf(1) 
>> downloader
>> and loopback interface. Puf is something like wget(1), only it can do 
>> many
>> simultaneous connections. When the maximum connection no. is small (1 
>> - 40
>> connections at once), Twisted Web works very good, providing a 
>> reasonable
>> page generation time (thus, data transfer rate) and eating my CPU.
>>
>> But if I raise the simultaneous connection number to something above 
>> 40,
>> data transfer rate and CPU usage fall.
>>
>> Is it intended behaviour?
>
>   Yes.  Twisted was specifically designed to scale poorly with smallish
> numbers of concurrent connections.
>
>> I don't think I'll ever have to program a site, which has to serve 
>> more,
>> than 40 connections at once, but in case this happens, I'd like to 
>> know.
>>
>> Regards,
>> -- 
>> Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>





From andrew-twisted at puzzling.org  Fri Dec 19 19:16:04 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 20 Dec 2003 11:16:04 +1100
Subject: [Twisted-Python] scheduling a task
In-Reply-To: <un09toz9r.fsf@riskmap.it>
References: <un09toz9r.fsf@riskmap.it>
Message-ID: <20031220001604.GA9900@frobozz>

On Tue, Dec 16, 2003 at 11:03:28AM +0100, enrico.sirola at riskmap.it wrote:
> 
> Hello,
> I just wrote my first twisted python application (basically, it's a
> SOAP server). The application layout is something like the following
> pseudocode:
> 
> # validator.py from here
> class A(service.Service):
>         # .... details omitted ...
>         pass

[...]


> anyway, i'd like to add the server a task running every 30s. I saw an
> example using reactor, like the following:
> 
> reactor.callLater(30, task)
> 
> now, where must i put this code in order to be run at application
> bootstrap? I tried putting reactor.callLater into the makeService
> function, but it seems it's executed during mktap only (am i
> wrong?)... 

Put it in the startService method of your service, i.e. A.  

Also, you might find twisted.internet.task.LoopingCall to be slightly more
convenient than manually calling callLater.

-Andrew.




From fdrake at acm.org  Sat Dec 20 00:45:01 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Sat, 20 Dec 2003 00:45:01 -0500
Subject: [Twisted-Python] SFTP Gateway available
In-Reply-To: <4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>
References: <16355.28835.419067.966615@sftp.fdrake.net>
	<4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>
Message-ID: <16355.57821.463575.396055@sftp.fdrake.net>

James Y Knight writes:
 > That's pretty cool. Maybe it's time for me to rewrite my ssh->telnet 
 > gateway in twisted. :)

Thanks!

This was my first foray into Twisted, and I was quite impressed.  It
took some time to get my feet back under me, but once there, it wasn't
too hard to see how to proceed.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From lists at webcrunchers.com  Sun Dec 21 02:40:31 2003
From: lists at webcrunchers.com (JD)
Date: Sat, 20 Dec 2003 23:40:31 -0800
Subject: [Twisted-Python] Broken link in twistedmatrix.com web site.
Message-ID: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>

This page:    http://twistedmatrix.com/products/spread
In the Jelly section,  just a little more then halfway down,
has a link titled:    "Concern for Pickle" which links
to http://www.python.org/doc/current/lib/pickle-sec.html
now goes to a non-existant page in the Python
web site.

I'm most interested in reading this section.

Does anyone know where I can get this info?

JD




From exarkun at intarweb.us  Sun Dec 21 03:09:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 21 Dec 2003 03:09:57 -0500
Subject: [Twisted-Python] Broken link in twistedmatrix.com web site.
In-Reply-To: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>
References: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>
Message-ID: <20031221080957.GA17773@intarweb.us>

On Sat, Dec 20, 2003 at 11:40:31PM -0800, JD wrote:
> This page:    http://twistedmatrix.com/products/spread
> In the Jelly section,  just a little more then halfway down,
> has a link titled:    "Concern for Pickle" which links
> to http://www.python.org/doc/current/lib/pickle-sec.html
> now goes to a non-existant page in the Python
> web site.
> 
> I'm most interested in reading this section.
> 
> Does anyone know where I can get this info?


    http://www.python.org/doc/2.2/lib/pickle-sec.html

  Not sure why this is no longer in the current documentation, but I guess
it's our own fault for referring to such a volatile URL as /current/.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031221/fbf641d3/attachment.pgp 

From douglas at paradise.net.nz  Sun Dec 21 03:14:46 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Sun, 21 Dec 2003 21:14:46 +1300
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>
References: <3FDA8D80.5060404@paradise.net.nz>
 <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FE55676.3080900@paradise.net.nz>


Jonathan Simms wrote:

>>I'm making a thing which collects webcam images via ftp (the lowest 
>>common denominator for webcam software), and sends them off again via 
>>the web.  I'd quite like to do it without troubling the file system, 
>>storing the images as python strings, whilst ignoring all the cd/pwd 
>>stuff.  Needless to say I don't want to use real system usernames.
>>
>>Is this very sensible or possible?  I (happily) don't know much about 
>>the ftp protocol, or its twisted implementation.
>>
> This is possible, and might be sensible, but in order for you to get
> this to work, you'd have to learn quite a bit about how twisted thinks
> about ftp. I'd be happy to help you if you do decide to pursue this.
> 

Cool, I'll do it. Looking at CVS, I'm glad I didn't get far with the 
1.1.0 version.  There, it seemed I'd be returning a not implemented 
message for pretty much everything but USER, PASS and STOR. Now it seems 
I'll be making an IFTPShell that raises exceptions instead.  Is this 
right?  The thing I'm less sure about is how the actual STOR works.  I 
won't be getting onto it for a few days, in any case.


douglas




From enrico.sirola at riskmap.it  Sat Dec 20 10:09:21 2003
From: enrico.sirola at riskmap.it (enrico.sirola at riskmap.it)
Date: 20 Dec 2003 16:09:21 +0100
Subject: [Twisted-Python] scheduling a task
In-Reply-To: <20031220001604.GA9900@frobozz>
References: <un09toz9r.fsf@riskmap.it> <20031220001604.GA9900@frobozz>
Message-ID: <u1xqz5xwe.fsf@riskmap.it>

>>>>> "Andrew" == Andrew Bennetts <andrew-twisted at puzzling.org> writes:

[...]

    Andrew> Put it in the startService method of your service, i.e. A.

    Andrew> Also, you might find twisted.internet.task.LoopingCall to
    Andrew> be slightly more convenient than manually calling
    Andrew> callLater.

ok, thanks
enrico
-- 
Enrico Sirola <enrico.sirola at riskmap.it>




From pf_moore at yahoo.co.uk  Mon Dec 22 13:10:45 2003
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Mon, 22 Dec 2003 18:10:45 +0000
Subject: [Twisted-Python] How do I modify sys.path in a .tap file?
Message-ID: <y8t4lo4a.fsf@yahoo.co.uk>

I have an application which needs to modify sys.path, in order to pick
up its configuration file (written in Python, naturally :-)) But I'm
not sure how I do this.

Ideally, I'd like to set an option in the tap config file, so I could
just do

    mktap MyApp --confdir ....

and be able to use config["confdir"] to set "something" which would be
picked up and added to sys.path when I run the tap file with twistd.
But I'm not sure how I could do this.

Subclassing service.MultiService, so that I could set sys.path in
startService(), worked OK, but I'm not sure if that's the best idea. 
Is there another way of doing this sort of thing, that I'd be better
using?

Paul.
-- 
This signature intentionally left blank




From radix at twistedmatrix.com  Mon Dec 22 18:00:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 22 Dec 2003 18:00:54 -0500
Subject: [Twisted-Python] How do I modify sys.path in a .tap file?
In-Reply-To: <y8t4lo4a.fsf@yahoo.co.uk>
References: <y8t4lo4a.fsf@yahoo.co.uk>
Message-ID: <3FE777A6.70208@twistedmatrix.com>

Paul Moore wrote:
  > Subclassing service.MultiService, so that I could set sys.path in
> startService(), worked OK, but I'm not sure if that's the best idea. 
> Is there another way of doing this sort of thing, that I'd be better
> using?

This sounds reasonable to me.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031222/70f6032e/attachment.pgp 

From slyphon at twistedmatrix.com  Tue Dec 23 05:18:29 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Tue, 23 Dec 2003 05:18:29 -0500
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <3FE55676.3080900@paradise.net.nz>
References: <3FDA8D80.5060404@paradise.net.nz> <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com> <3FE55676.3080900@paradise.net.nz>
Message-ID: <3FE81675.9090701@twistedmatrix.com>

Douglas Bagnall wrote:

>
>
> Jonathan Simms wrote:
>
>>> I'm making a thing which collects webcam images via ftp (the lowest 
>>> common denominator for webcam software), and sends them off again 
>>> via the web.  I'd quite like to do it without troubling the file 
>>> system, storing the images as python strings, whilst ignoring all 
>>> the cd/pwd stuff.  Needless to say I don't want to use real system 
>>> usernames.
>>>
>>> Is this very sensible or possible?  I (happily) don't know much 
>>> about the ftp protocol, or its twisted implementation.
>>>
>> This is possible, and might be sensible, but in order for you to get
>> this to work, you'd have to learn quite a bit about how twisted thinks
>> about ftp. I'd be happy to help you if you do decide to pursue this.
>>
>
> Cool, I'll do it. Looking at CVS, I'm glad I didn't get far with the 
> 1.1.0 version.  There, it seemed I'd be returning a not implemented 
> message for pretty much everything but USER, PASS and STOR. Now it 
> seems I'll be making an IFTPShell that raises exceptions instead.  Is 
> this right?  The thing I'm less sure about is how the actual STOR 
> works.  I won't be getting onto it for a few days, in any case.
>
>
> douglas
>
>
I'm a bit busy right now with the holidays and all, but I'll take a look 
and get back to you within the next few days.

I'm glad someone's interested in using FTP for something :)

-Jonathan

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From sam at SpinwardStars.com  Tue Dec 23 11:00:06 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Tue, 23 Dec 2003 09:00:06 -0700
Subject: [Twisted-Python] twisted web question
In-Reply-To: <47D957BC-2FD9-11D8-9AE8-000A95DA5A64@paperfree.net>
References: <200312161533.59346.lafou@wanadoo.fr>
 <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
 <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <5.2.0.9.0.20031223085745.00aa0850@pop.mindspring.com>

At 2003-12-16 10:05 AM -0500, you wrote:
>Just thought of something else:
>
>If I use mktap and an .rpy script, I cannot install any other protocol 
>factory.  My server listens on one port to implement a proprietary TCP/IP 
>protocol, and another port to provide a web interface.  Am I right that I 
>cannot set this up using mktap?

I haven't done it, but according to `mktap --help`
you can specify "an existing .tap file to append the
plugin to, rather than creating a new one," using
-a or --append.

I believe this allows you to put multiple applications
in the same .tap file, and start up the whole set
together.

- Sam





From db3l at fitlinxx.com  Tue Dec 23 11:06:52 2003
From: db3l at fitlinxx.com (David Bolen)
Date: Tue, 23 Dec 2003 11:06:52 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
Message-ID: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>

I've been experimenting with the perspective broker in Twisted 1.1.0
and am wondering?  Is there any graceful way to reconnect and continue
to use PB references if you temporarily lose a connection due to a
network outage?

For example, I can envision my application as being a client that
connects to a remote application server, and while running may have
any number of PB references to that remote application server in
various data structures in the client.  Should there be a transient
network outage such that the TCP session to the server is interrupted,
I'd like to be able to reconnect without having to flush all such data
in the client.

I'm still experimenting, but the docs and some early tests would seem
to imply that if the TCP link breaks for any reason then any of my
object references can never be used again.  Is that in fact true
and/or is there any way to avoid such a condition?  I was hoping that
I could catch network errors in some manner such that I could try to
re-establish the PB link, and then permit existing references from the
prior connection to continue to function could severely impact a
client (or certainly impose a potentially large effort to restore any
remote state to newly viable references).

What do other perspective broker applications do about being as robust
as possible in the presence of transient network conditions?

Thanks for any info/suggestions.

-- David



From radix at twistedmatrix.com  Tue Dec 23 18:27:30 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 23 Dec 2003 18:27:30 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>
References: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>
Message-ID: <3FE8CF62.5050907@twistedmatrix.com>

David Bolen wrote:
> I've been experimenting with the perspective broker in Twisted 1.1.0
> and am wondering?  Is there any graceful way to reconnect and continue
> to use PB references if you temporarily lose a connection due to a
> network outage?

twisted.spread.sturdy does _something_ related to keeping persistent 
references to an object, but after reading it for a few minutes, I don't 
really grok it. It doesn't seem very general... Hopefully someone else 
will explain this.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031223/46e36711/attachment.pgp 

From ralf at brainbot.com  Tue Dec 23 20:59:47 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 24 Dec 2003 02:59:47 +0100
Subject: [Twisted-Python] Unjellying per broker vs. global jelly.unjellyableRegistry
Message-ID: <86smjbdlgs.fsf@stronzo.brainbot.com>

Hi,
I have attached a patch, which makes it possible to unjelly different
classes depending on the broker they were sent through (basically one
can set a brokers 'unjellyableRegistry' attribute, which then get's
used instead of the global one). Has such a feature already been
planned? Any chance of getting it included? 

- Ralf

===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.48
diff -u -u -r1.48 jelly.py
--- twisted/spread/jelly.py	4 Jun 2003 00:18:03 -0000	1.48
+++ twisted/spread/jelly.py	24 Dec 2003 01:36:31 -0000
@@ -495,13 +495,22 @@
 
 
 class _Unjellier:
-    def __init__(self, taster, persistentLoad, invoker):
+    unjellyableRegistry = unjellyableRegistry
+    unjellyableFactoryRegistry = unjellyableFactoryRegistry
+    
+    def __init__(self, taster, persistentLoad, invoker,
+                 unjellyableRegistry=None, unjellyableFactoryRegistry=None):
         self.taster = taster
         self.persistentLoad = persistentLoad
         self.references = {}
         self.postCallbacks = []
         self.invoker = invoker
 
+        if unjellyableRegistry is not None:
+            self.unjellyableRegistry = unjellyableRegistry
+        if unjellyableFactoryRegistry is not None:
+            self.unjellyableFactoryRegistry = unjellyableFactoryRegistry
+            
     def unjellyFull(self, obj):
         o = self.unjelly(obj)
         for m in self.postCallbacks:
@@ -514,7 +523,7 @@
         jelType = obj[0]
         if not self.taster.isTypeAllowed(jelType):
             raise InsecureJelly(jelType)
-        regClass = unjellyableRegistry.get(jelType)
+        regClass = self.unjellyableRegistry.get(jelType)
         if regClass is not None:
             if isinstance(regClass, ClassType):
                 inst = _Dummy() # XXX chomp, chomp
@@ -526,7 +535,7 @@
             if hasattr(val, 'postUnjelly'):
                 self.postCallbacks.append(inst.postUnjelly)
             return val
-        regFactory = unjellyableFactoryRegistry.get(jelType)
+        regFactory = self.unjellyableFactoryRegistry.get(jelType)
         if regFactory is not None:
             state = self.unjelly(obj[1])
             inst = regFactory(state)
@@ -845,7 +854,9 @@
     return _Jellier(taster, persistentStore, invoker).jelly(object)
 
 
-def unjelly(sexp, taster = DummySecurityOptions(), persistentLoad=None, invoker=None):
+def unjelly(sexp, taster = DummySecurityOptions(), persistentLoad=None, invoker=None,
+            unjellyableRegistry=None, unjellyableFactoryRegistry=None):
+
     """Unserialize from s-expression.
 
     Takes an list that was the result from a call to jelly() and unserializes
@@ -853,4 +864,4 @@
     of SecurityOptions, will cause an InsecureJelly exception to be raised if a
     disallowed type, module, or class attempted to unserialize.
     """
-    return _Unjellier(taster, persistentLoad, invoker).unjellyFull(sexp)
+    return _Unjellier(taster, persistentLoad, invoker, unjellyableRegistry, unjellyableFactoryRegistry).unjellyFull(sexp)
Index: twisted/spread/pb.py
===================================================================
RCS file: /cvs/Twisted/twisted/spread/pb.py,v
retrieving revision 1.154
diff -u -u -r1.154 pb.py
--- twisted/spread/pb.py	17 Oct 2003 19:06:23 -0000	1.154
+++ twisted/spread/pb.py	24 Dec 2003 01:36:33 -0000
@@ -500,6 +500,8 @@
     version = 6
     username = None
     factory = None
+    unjellyableRegistry = None
+    unjellyableFactoryRegistry = None
     
     def __init__(self, isClient=1, security=globalSecurity):
         banana.Banana.__init__(self, isClient)
@@ -826,7 +828,7 @@
 
         self.unserializingPerspective = perspective
         try:
-            return unjelly(sexp, self.security, None, self)
+            return unjelly(sexp, self.security, None, self, self.unjellyableRegistry, self.unjellyableFactoryRegistry)
         finally:
             self.unserializingPerspective = None
 

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Sat Dec 27 09:00:04 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Dec 2003 09:00:04 -0500
Subject: [Twisted-Python] Unjellying per broker vs. global
	jelly.unjellyableRegistry
In-Reply-To: <86smjbdlgs.fsf@stronzo.brainbot.com>
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
Message-ID: <1072533527.13424.160.camel@sheriffpony>

On Tue, 2003-12-23 at 20:59, Ralf Schmitt wrote:
> Hi,
> I have attached a patch, which makes it possible to unjelly different
> classes depending on the broker they were sent through (basically one
> can set a brokers 'unjellyableRegistry' attribute, which then get's
> used instead of the global one). Has such a feature already been
> planned? Any chance of getting it included? 

Thanks!

Add this to the bug tracker (twistedmatrix.com/bugs/) and nosy me and
warner.

As always, note that patches to Twisted need to be given copyright to
glyph (who is sole owner of Twisted). This does not affect your own use
of code you wrote.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From rdrb at 123.cl  Sat Dec 27 14:51:22 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Sat, 27 Dec 2003 16:51:22 -0300
Subject: [Twisted-Python] .tac filenames configurations
Message-ID: <1261da11fb09.11fb091261da@noborrar.co.cl>

Is there a way to indicate in the .tac file which .log and .pid filenames the .tap file will generate ?
If not, should not this feature be aviable ?

Happy new year for the Twisted minds...

RodrigoB.




From itamar at itamarst.org  Sat Dec 27 14:56:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Dec 2003 14:56:16 -0500
Subject: [Twisted-Python] .tac filenames configurations
In-Reply-To: <1261da11fb09.11fb091261da@noborrar.co.cl>
References: <1261da11fb09.11fb091261da@noborrar.co.cl>
Message-ID: <1072554976.13423.164.camel@sheriffpony>

On Sat, 2003-12-27 at 14:51, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Is there a way to indicate in the .tac file which .log and .pid filenames the .tap file will generate ?

No, this is twistd's responsibility.

> If not, should not this feature be aviable ?

Well... For example, running NT service means no concept of .pid file
and log file might go to NT event log.

However, Application objects do have a name, and certainly it might make
sense to have twistd use that as the default, so for "foo" twistd would
default to foo.pid and foo.log to go along with foo.tap. Problem is this
would not be backwards compatible

How about adding issue to bug tracker, where we can discuss this.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From ralf at brainbot.com  Sun Dec 28 17:29:18 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Sun, 28 Dec 2003 23:29:18 +0100
Subject: [Twisted-Python] Unjellying per broker vs. global
 jelly.unjellyableRegistry
In-Reply-To: <1072533527.13424.160.camel@sheriffpony> (Itamar
 Shtull-Trauring's message of "Sat, 27 Dec 2003 09:00:04 -0500")
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
	<1072533527.13424.160.camel@sheriffpony>
Message-ID: <86ekuod1a9.fsf@stronzo.brainbot.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2003-12-23 at 20:59, Ralf Schmitt wrote:
>> Hi,
>> I have attached a patch, which makes it possible to unjelly different
>> classes depending on the broker they were sent through (basically one
>> can set a brokers 'unjellyableRegistry' attribute, which then get's
>> used instead of the global one). Has such a feature already been
>> planned? Any chance of getting it included? 
>
> Thanks!
>
> Add this to the bug tracker (twistedmatrix.com/bugs/) and nosy me and
> warner.

Issue 452. But how do I change the nosy list after creating an issue?

>
> As always, note that patches to Twisted need to be given copyright to
> glyph (who is sole owner of Twisted). This does not affect your own use
> of code you wrote.
>

ok, copyright assigned to glyph. or do you need written permission?

- ralf

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Sun Dec 28 17:51:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 28 Dec 2003 17:51:24 -0500
Subject: [Twisted-Python] Unjellying per broker vs. global
	jelly.unjellyableRegistry
In-Reply-To: <86ekuod1a9.fsf@stronzo.brainbot.com>
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
	 <1072533527.13424.160.camel@sheriffpony>
	 <86ekuod1a9.fsf@stronzo.brainbot.com>
Message-ID: <1072651883.29179.0.camel@sheriffpony>

On Sun, 2003-12-28 at 17:29, Ralf Schmitt wrote:

> ok, copyright assigned to glyph. or do you need written permission?

That'll do. Unless you're a SCO employee.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lstep at adequat.net  Sun Dec 28 19:00:49 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Mon, 29 Dec 2003 01:00:49 +0100
Subject: [Twisted-Python] Twisted Weekly News #10
Message-ID: <200312290100.49502.lstep@adequat.net>

====================================================================
Twisted Weekly News #10
====================================================================
.. contents::

There wasn't too much mail this week, so I merged the previous TWN with the 
current, as I was ill last week.

If you have any new information, ideas, announcements for the next TWN, please 
write to me, <lior at gradstein.info>.
TWN is also available as HTML formated ReST on http://gradstein.info/articles/
twisted_news/twisted_news/twn10


The Twisted Weekly News
-------------------------

9&10th Issue. Sunday, December 28, 2003

QOTW::
 http://twistedmatrix.com/pipermail/twisted-python/2003-December/006789.html
 From a mail by Alan McIntyre:
 "I just wanted to thank the Twisted developers for making such a cool 
 piece of software. [...] Thanks to Twisted and Python, I was able to
 start from scratch and put  together a server to present some of this
 data via XML-RPC in about 2 or 3 hours (and that includes looking up
 a lot of stuff in the documentation)."


Discussions
-------------

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006786.html
     Jonathan Simms asked for help on his new (new) ftp server code which
     is currently in sandbox. He asks for help to resolve some problems with
     authentication on the Windows side.

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006828.html
     More and more people are becoming interested in integrating Twisted
     stuff into their projects. Last week, RodrigB asked about The Circle.
     This week, Valentino Volonghi asks about the possibility (wish) to
     replace the pygame event loop with a Twisted reactor.

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006820.html
     Michal Pasternak made some tests on Twisted, and noticed some
     performance degradation after 40 simultaneous connections. Itamar
     replied there wasn't anything hardcoded that would change Twisted
     behaviour above 40 simultaneous connections.


Cool Thing of the Week
-----------------------

 * **Treasure of code examples and tutorials for nevow** (http://
www.livejournal.com/users/fzzzy/)
   fzZzy updated his new blog on LiveJournal with a lot of code samples he
   wrote for people who asked questions on irc. The second lecture he gave
   on irc is also available (http://soundfarmer.com/content/logs/
NevowLecture2-121503.txt).
   With these docs and the previous more "in-depth" documentation from justinj 
   (http://stewstuff.com/doc/nevow.xhtml) you do not any excuse for not 
learning nevow!
 * **SFTP support in Zope (using Twisted!)** (http://twistedmatrix.com/
pipermail/twisted-python/2003-December/006839.html)
   Fred L. Drake, Jr. wrote some support (http://cvs.zope.org/Packages/
SFTPGateway/) for the sftp protocol to be included in Zope. The result may be 
available as a separate product in a near future.
 * **Impacket** (http://oss.corest.com/projects/impacket.html) Not related
   to Twisted, but interesting anyway.Itamar recommended us to take a look
   at this python library which provides low-level programmatic access to
   network packets (tcp, udp, etc.).  There is also a python pcap
   implementation on their web site.
 * **Reminder about the web forum** (http://twisted.banquise.org/)
   May I remind you that a web interface exists for those that prefer
   reading informations online? We're barely 8 now, but nobody posts
   anything which can be discussed :-(


Current releases
-----------------

  * Twisted: 1.1.1 (released 2003-12-10)
  * Quotient: 0.8.8 (released 2003-12-12)
  * Twisted Java: 0.6.1


Ok, that's it for this week. Thanks for reading!




From lists at webcrunchers.com  Sun Dec 28 19:57:20 2003
From: lists at webcrunchers.com (JD)
Date: Sun, 28 Dec 2003 16:57:20 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <200312290100.49502.lstep@adequat.net>
References: <200312290100.49502.lstep@adequat.net>
Message-ID: <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>

in my resource's "render" method,  I'm doing some things that require a 
fairly long time to
accomplish,  so each time through a loop,   I want to render some 
intermediate results
to the brower.

Kinda like this:

class myResource(resource.Resource):
	isLeaf = True
	def	render(self, request):
		# Now I build up a string to render to the browser
		html = make_body()

		# And now I want to go into a loop
		for item in items:
			result = compute_some_item(item)   # I just do something that 
returns some result
			request.write(result)				# then send it to the browser
			return(server.NOT_DONE_YET)	# Do I return now?    If so,   will I 
re-enter my "render" method again
		request.finish()

		# Now,  do I just return the html I generated earlier
		return(html)

what happens when I return with server.NOT_DONE_YET?   will I get 
called again so I can do the
request.write(something)?

What is the sequence?

According to the documentation,  I quote:  (from render.py)

     def render(self, request):
         """Render a given resource.

         This must be implemented in all subclasses of Resource.

         The return value of this method will be the rendered page, 
unless the
         return value is twisted.web.server.NOT_DONE_YET, in which case 
it is
         this class's responsibility to write the results to
         request.write(data), then call request.finish().
         """

According to this,   I return server.NOT_DONE_YET...    but then it 
goes on to say
it's my classes responsibility to write the results to 
request.write(data),   to write
the results,   but how do i do that,   because if i return 
server.NOT_DONE_YET
then I've exited,  and have no opportunity to call 
request.write(something).

So when do I call it?    Do I call it BEFORE I return?   If so,  then 
why doesn't
the bloody document say that?

And,   in the using Web document,  it says....


A Resource object may do various things to produce output which will be 
sent back to the browser:

*	Return a string
*	Call request.write("stuff") as many times as desired, then call 
request.finish() and return server.NOT_DONE_YET (This is deceptive, 
since you are in fact done with the request, but is the correct way to 
do this)
*	Request a Deferred, return server.NOT_DONE_YET, and call 
request.write("stuff") and request.finish() later, in a callback on the 
Deferred.


This seems a little more reasonable,  and my question,  according to 
this is....   do I do it in this order?

1) call request.write(html)    # from above

Then for each interation of some loop:
1) call request.write(stuff) a bunch of times,  which for each 
iteration of a loop,  may take up to a minute.
2) call request.finish()
3) return server.NOT_DONE_YET

Is this the right order for doing this?

Should I try to use a Deferred?    I have no clue how to do that,   
there appears to be a severe lack of
examples similar to what I want to do.

Lets say I want to defer ONE interation of a loop...    Lets call this 
function...

def   do_iteration(item):
	# do the interation

So,   would I construct my loop like this:

# In the render method.
for item in items:
	# process some item

	# Then do something to add this deferred,   which I still don't know 
how to do.
          # something like this?

          reactor.callLater(something, do_iteration)

         # But since I'm in the "render" method,  how do I get a 
reference to "reactor"?
         # And what it the meaning of "something" in the first argument 
of "callLater"?


John
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 5124 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031228/7e156c8e/attachment.bin 

From glyph at twistedmatrix.com  Sun Dec 28 23:32:33 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Dec 2003 23:32:33 -0500
Subject: [Twisted-Python] Twisted Weekly News #10
In-Reply-To: <200312290100.49502.lstep@adequat.net>
References: <200312290100.49502.lstep@adequat.net>
Message-ID: <058D77AF-39B8-11D8-9472-000393C9700E@twistedmatrix.com>


On Dec 28, 2003, at 7:00 PM, Luc Stepniewski wrote:

> There wasn't too much mail this week, so I merged the previous TWN 
> with the
> current, as I was ill last week.

Thanks for doing it again, Luc!  These are really useful to me :).  And 
don't worry about being sick, it was the holidays.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031228/d31ff58f/attachment.pgp 

From glyph at twistedmatrix.com  Sun Dec 28 23:39:45 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Dec 2003 23:39:45 -0500
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>
Message-ID: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>


On Dec 28, 2003, at 7:57 PM, JD wrote:

> Is this the right order for doing this?

You can do it in any order.  Basically, the rules are thus:

	- If you return a string, the framework will automatically call 
request.write(result); request.finish() for you when the method 
returns.

	- The request must be finish()ed or the page render will never 
complete in the browser.

	- If you return NOT_DONE_YET, nothing will happen automatically, and 
you can call request.write(...) at your leisure and request.finish() 
when you're done with it.  This includes in a callback of a Deferred 
(the usual use case), in another form of network callback, 
synchronously before you return NOT_DONE_YET, or whenever.  
NOT_DONE_YET just means "Do not have the framework call write() and 
finish() on the request automatically.)  The caveat is that you then 
MUST call finish(), or the page will hang forever in the browser.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031228/d3f89ed7/attachment.pgp 

From db3l at fitlinxx.com  Mon Dec 22 19:23:45 2003
From: db3l at fitlinxx.com (David Bolen)
Date: 22 Dec 2003 19:23:45 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
Message-ID: <uwu8obcvi.fsf@fitlinxx.com>

I've been experimenting with the perspective broker in Twisted 1.1.0
and am wondering?  Is there any graceful way to reconnect and continue
to use PB references if you temporarily lose a connection due to a
network outage?

For example, I can envision my application as being a client that
connects to a remote application server, and while running may have
any number of PB references to that remote application server in
various data structures in the client.  Should there be a transient
network outage such that the TCP session to the server is interrupted,
I'd like to be able to reconnect without having to flush all such data
in the client.

I'm still experimenting, but the docs and some early tests would seem
to imply that if the TCP link breaks for any reason then any of my
object references can never be used again.  Is that in fact true
and/or is there any way to avoid such a condition?  I was hoping that
I could catch network errors in some manner such that I could try to
re-establish the PB link, and then permit existing references from the
prior connection to continue to function could severely impact a
client (or certainly impose a potentially large effort to restore any
remote state to newly viable references).

What do other perspective broker applications do about being as robust
as possible in the presence of transient network conditions?

Thanks for any info/suggestions.

-- David




From a.vredegoor at hccnet.nl  Sat Dec 27 13:40:10 2003
From: a.vredegoor at hccnet.nl (Anton Vredegoor)
Date: Sat, 27 Dec 2003 19:40:10 +0100
Subject: [Twisted-Python] XML Parsing Error in tutorial.xhtml
Message-ID: <bskjqb$bba$1@sea.gmane.org>

After a fresh install of twisted 1.1.1 and clicking on the manual
entry and next on the
 
    * Tutorial: Twisted From Scratch

link in the Twisted Documentation file I get the following error in
mozilla:

###

XML Parsing Error: duplicate attribute Location:
file:///D:/Python23/Lib/site-packages/TwistedDocs/howto/tutorial.xhtml
Line Number 506, Column 60:<a class="py-listing"
href="listings/finger/finger/tap.py"
class="py-listing">finger/tap.py</a>
-----------------------------------------------------------^

###

possible fix:

Change line 506 to 510 into:

###

<a href="listings/finger/finger/tap.py"
class="py-listing">finger/tap.py</a>

<p>And register it all:</p>

<a href="listings/finger/finger/plugins.tml"
class="py-listing">finger/plugins.tml</a>

###


Anton




From exarkun at intarweb.us  Mon Dec 29 11:52:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 29 Dec 2003 11:52:21 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <uwu8obcvi.fsf@fitlinxx.com>
References: <uwu8obcvi.fsf@fitlinxx.com>
Message-ID: <20031229165221.GA7994@intarweb.us>

On Mon, Dec 22, 2003 at 07:23:45PM -0500, David Bolen wrote:
> I've been experimenting with the perspective broker in Twisted 1.1.0
> and am wondering?  Is there any graceful way to reconnect and continue
> to use PB references if you temporarily lose a connection due to a
> network outage?

  PB references are managed by the connection's Broker object, which is
created anew in the factory's buildProtocol method, and the object/reference
cache of which is cleared when connections are lost.

  Having references which can withstand disconnects should be doable
relatively easily - all you need to do is make sure the same Broker objects
get used for all subsequent reconnections.  This may be a little tricky,
since you need to differentiate between new connections and reconnections
(which you can't do easily with PB, because you'll already have a Broker),
but should be entirely possible.

  I'm not sure if there is any reason, other than trickiness factor, that
this isn't implemented directly in twisted.spread.  Perhaps there is a
hidden issue I am unaware of, or maybe it is simply that no one has wanted
it badly enough to write it :)

  Hope this helps,

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031229/44d64222/attachment.pgp 

From glyph at twistedmatrix.com  Mon Dec 29 19:00:57 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 29 Dec 2003 19:00:57 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <20031229165221.GA7994@intarweb.us>
References: <uwu8obcvi.fsf@fitlinxx.com> <20031229165221.GA7994@intarweb.us>
Message-ID: <3EA8A91B-3A5B-11D8-A5EC-000393C9700E@twistedmatrix.com>


On Dec 29, 2003, at 11:52 AM, Jp Calderone wrote:

>   I'm not sure if there is any reason, other than trickiness factor, 
> that
> this isn't implemented directly in twisted.spread.  Perhaps there is a
> hidden issue I am unaware of, or maybe it is simply that no one has 
> wanted
> it badly enough to write it :)

Reference counting.  There has to be a meta-connection around to hold 
references to the "live" state, which, IMHO, would be better 
implemented as an extra-robust byte-level stream at a lower level.  
Even with such a connection, it's bad to count on the stateful 
existence of references to individual objects which stay live over a 
long period of time.  The initial login handshake should get you to a 
"naming" object within a few steps, and then have a higher-level API 
for loading published objects from persistence or wherever.

Right now this has to be ad-hoc because there is no clear universal way 
to specify persistent, reliable object IDs that are "macro" enough not 
to change when small implementation details of the protocol shift.  Any 
object has to have an ID number that can be compared for identity but 
some objects are more equal than others.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031229/a3943ab1/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Dec 29 21:26:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 30 Dec 2003 13:26:16 +1100
Subject: [Twisted-Python] XML Parsing Error in tutorial.xhtml
In-Reply-To: <bskjqb$bba$1@sea.gmane.org>
References: <bskjqb$bba$1@sea.gmane.org>
Message-ID: <20031230022616.GA1043@frobozz>

On Sat, Dec 27, 2003 at 07:40:10PM +0100, Anton Vredegoor wrote:
> After a fresh install of twisted 1.1.1 and clicking on the manual
> entry and next on the
>  
>     * Tutorial: Twisted From Scratch
> 
> link in the Twisted Documentation file I get the following error in
> mozilla:
> 
> ###
> 
> XML Parsing Error: duplicate attribute Location:
> file:///D:/Python23/Lib/site-packages/TwistedDocs/howto/tutorial.xhtml
> Line Number 506, Column 60:<a class="py-listing"
> href="listings/finger/finger/tap.py"
> class="py-listing">finger/tap.py</a>

According to CVS, the version in 1.1.1 shouldn't have this bug (but 1.1.0
would).  Is it possible you have an older version of the docs installed?

Also, you probably want to read the processed .html, not .xhtml source used
to generate it (before 1.1.0 or so it was the other way around...)

-Andrew.




From douglas at paradise.net.nz  Tue Dec 30 01:52:46 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Tue, 30 Dec 2003 19:52:46 +1300
Subject: [Twisted-Python] flash's rtmp protocol
Message-ID: <3FF120BE.3010504@paradise.net.nz>

RTMP is a secret protocol used by Macromedia flash servers to do fancy 
interactive/streaming stuff.  I found a reference to it on one of Bob 
Ippolito's TODO lists:

http://pythonmac.org/wiki/BobIppolito

   "TODO: [....] Reverse engineer proprietary RTMP protocol (Flash
    Communication Server) and implement Python version (Twisted)"

I'm also interested in doing this, but am unlikely to start soon.  So 
this is just to let you (Bob) know, lest we do too much in parallel.


douglas





From bob at redivi.com  Tue Dec 30 02:12:21 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 30 Dec 2003 02:12:21 -0500
Subject: [Twisted-Python] flash's rtmp protocol
In-Reply-To: <3FF120BE.3010504@paradise.net.nz>
References: <3FF120BE.3010504@paradise.net.nz>
Message-ID: <82B99D7A-3A97-11D8-B505-000A95686CD8@redivi.com>


On Dec 30, 2003, at 1:52 AM, Douglas Bagnall wrote:

>
> RTMP is a secret protocol used by Macromedia flash servers to do fancy 
> interactive/streaming stuff.  I found a reference to it on one of Bob 
> Ippolito's TODO lists:
>
> http://pythonmac.org/wiki/BobIppolito
>
>   "TODO: [....] Reverse engineer proprietary RTMP protocol (Flash
>    Communication Server) and implement Python version (Twisted)"
>
> I'm also interested in doing this, but am unlikely to start soon.  So 
> this is just to let you (Bob) know, lest we do too much in parallel.

I've given the TCP sessions a cursory glance, and my best guess is that 
it uses something quite similar to its stateless "Flash Remoting MX" 
feature.  There are implementations of the remoting stuff in PHP and 
Java, but not Python (last I checked).  I have not written any code or 
documentation yet either way.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031230/e6bebe7f/attachment.bin 

From lists at webcrunchers.com  Tue Dec 30 22:04:43 2003
From: lists at webcrunchers.com (JD)
Date: Tue, 30 Dec 2003 19:04:43 -0800
Subject: [Twisted-Python] IRC Client examples...  PLEASE HELP
In-Reply-To: <3FF120BE.3010504@paradise.net.nz>
References: <3FF120BE.3010504@paradise.net.nz>
Message-ID: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>

Hi,

   Has anyone written an IRC client in Twisted,  using protocol.irc?    
Do I make a
"reactor",  or is a reactor only used for making servers?    All I need 
is some
really simple code illustrating how to connect to an IRC Server,  doing 
an "identd"
to satisfy some IRC Servers,  and then having a simple imput line,  and 
an output
line...   It doesn't have to be fancy,  just some really basic example 
code on how
to connect,  specify a nick,  joining a channel,  and typing text into 
a channel,
and of course how to quit.

  Unfortunately,  no such example exists,  all the parts seem to be 
there,  but none
of the methods in the protocol.irc.IRCClient appear to be implemented,  
which
I suspect I would have to make my own sub-class...   but I have no clue 
how to put
all this together.   There doesn't seem to be any docs that explain 
this.

John




From developer at csrules.dyndns.org  Wed Dec 31 01:56:26 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 30 Dec 2003 22:56:26 -0800
Subject: [Twisted-Python] IRC Client examples...  PLEASE HELP
In-Reply-To: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF2731A.2040208@csrules.dyndns.org>

There's an IRC log bot with the examples....

Look here:

http://twistedmatrix.com/documents/examples/

JD wrote:

> Hi,
>
>   Has anyone written an IRC client in Twisted,  using protocol.irc?    
> Do I make a
> "reactor",  or is a reactor only used for making servers?    All I 
> need is some
> really simple code illustrating how to connect to an IRC Server,  
> doing an "identd"
> to satisfy some IRC Servers,  and then having a simple imput line,  
> and an output
> line...   It doesn't have to be fancy,  just some really basic example 
> code on how
> to connect,  specify a nick,  joining a channel,  and typing text into 
> a channel,
> and of course how to quit.
>
>  Unfortunately,  no such example exists,  all the parts seem to be 
> there,  but none
> of the methods in the protocol.irc.IRCClient appear to be 
> implemented,  which
> I suspect I would have to make my own sub-class...   but I have no 
> clue how to put
> all this together.   There doesn't seem to be any docs that explain this.
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From lists at webcrunchers.com  Wed Dec 31 04:43:52 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 01:43:52 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
Message-ID: <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>

Below is a piece of code from  ircLogBot.py  in the examples section of 
the
Twisted release.

It makes reference to a "channel" - What is a channel.
I assume that "sys.argv[1]" when passed into main()
must be a "channel"

Of course the person who wrote this module just had no inclination to
actually tell anyone how to use it.    I know the 2nd argument is a file
name or path,  but what is a "channel"....

I know I probably am really lame for asking these kinds of
questions,  but i left my crystal ball on the planet venus,  and
can't read the mind of the person who wrote this module.

class LogBotFactory(protocol.ClientFactory):
     """A factory for LogBots.

     A new protocol instance will be created each time we connect to the 
server.
     """

     # the class of the protocol to build
     protocol = LogBot

     def __init__(self, channel, filename):
         self.channel = channel
         self.filename = filename

     def clientConnectionLost(self, connector, reason):
         """If we get disconnected, reconnect to server."""
         connector.connect()

     def clientConnectionFailed(self, connector, reason):
         print "connection failed:", reason
         reactor.stop()


if __name__ == '__main__':
     # create factory protocol and application
     import sys
     f = LogBotFactory(sys.argv[1], sys.argv[2])

     # connect factory to this host and port
     reactor.connectTCP("irc.freenode.net", 6667, f)

     # run bot
     reactor.run()
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1576 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031231/3509e2c5/attachment.bin 

From developer at csrules.dyndns.org  Wed Dec 31 10:33:16 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 07:33:16 -0800
Subject: [Twisted-Python] A Twisted Web Question..NOT S/B IRC client
In-Reply-To: <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com> <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF2EC3C.1020805@csrules.dyndns.org>

a)  I can't see how this is a Twisted Web Question (check the subject)

b) I'm assuming that since you want to write an IRC client you'd have 
some inkling
     of what a channel might be.....

-d

JD wrote:

> Below is a piece of code from ircLogBot.py in the examples section of the
> Twisted release.
>
> It makes reference to a "channel" - What is a channel.
> I assume that "sys.argv[1]" when passed into main()
> must be a "channel"






From martin at datacash.com  Wed Dec 31 11:56:21 2003
From: martin at datacash.com (Martin Waite)
Date: 31 Dec 2003 16:56:21 +0000
Subject: [Twisted-Python] SSL Client Certificate support
Message-ID: <1072889782.5864.27.camel@pascal>

Hi,

Does twisted support SSL Client certificates ?

I can't see anywhere to plug the certificate into 
in the SSL ClientContextFactory.

regards,
Martin






From itamar at itamarst.org  Wed Dec 31 12:04:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Dec 2003 12:04:55 -0500
Subject: [Twisted-Python] SSL Client Certificate support
In-Reply-To: <1072889782.5864.27.camel@pascal>
References: <1072889782.5864.27.camel@pascal>
Message-ID: <1072890295.28549.53.camel@sheriffpony>

On Wed, 2003-12-31 at 11:56, Martin Waite wrote:

> Does twisted support SSL Client certificates ?

Yep.

> I can't see anywhere to plug the certificate into 
> in the SSL ClientContextFactory.


class MyClientContextFactory:
    """A context factory for SSL clients."""

    isClient = 1
    method = SSL.SSLv3_METHOD

    def getContext(self):
        ctx = SSL.Context(self.method)
        ctx.use_certificate_file(self.certificateFileName)
        ctx.use_privatekey_file(self.privateKeyFileName)
        return ctx

etc.. I suggest reading pyOpenSSL docs for OpenSSL.SSL.Context.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From martin at datacash.com  Wed Dec 31 12:39:05 2003
From: martin at datacash.com (Martin Waite)
Date: 31 Dec 2003 17:39:05 +0000
Subject: [Twisted-Python] SSL Client Certificate support
In-Reply-To: <1072890295.28549.53.camel@sheriffpony>
References: <1072889782.5864.27.camel@pascal> 
	<1072890295.28549.53.camel@sheriffpony>
Message-ID: <1072892345.5943.34.camel@pascal>

On Wed, 2003-12-31 at 17:04, Itamar Shtull-Trauring wrote:
> On Wed, 2003-12-31 at 11:56, Martin Waite wrote:
> 
> > Does twisted support SSL Client certificates ?
> 
> Yep.
> 
> > I can't see anywhere to plug the certificate into 
> > in the SSL ClientContextFactory.
> 
> 
> class MyClientContextFactory:
>     """A context factory for SSL clients."""
> 
>     isClient = 1
>     method = SSL.SSLv3_METHOD
> 
>     def getContext(self):
>         ctx = SSL.Context(self.method)
>         ctx.use_certificate_file(self.certificateFileName)
>         ctx.use_privatekey_file(self.privateKeyFileName)
>         return ctx
> 
> etc.. I suggest reading pyOpenSSL docs for OpenSSL.SSL.Context.
> 

Many thanks - this all works beautifully.

regards,
Martin




From teratorn at world-net.net  Wed Dec 31 14:11:31 2003
From: teratorn at world-net.net (Eric Mangold)
Date: Wed, 31 Dec 2003 12:11:31 -0700
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
Message-ID: <200312311211.31399.teratorn@world-net.net>

On Tuesday 30 December 2003 08:04 pm, JD wrote:
> Hi,
>
>    Has anyone written an IRC client in Twisted,  using protocol.irc?
> Do I make a
> "reactor",  or is a reactor only used for making servers?    All I
> need is some
> really simple code illustrating how to connect to an IRC Server, 
> doing an "identd"

ident is a seperate protocol from IRC.  You will need to run a seperate 
daemon accessible from the Internet to provide this.  Twisted doesn't 
have an ident server.

I use the one here http://freshmeat.net/projects/fauxident/

> to satisfy some IRC Servers,  and then having a simple imput line, 
> and an output
> line...   It doesn't have to be fancy,  just some really basic
> example code on how
> to connect,  specify a nick,  joining a channel,  and typing text
> into a channel,
> and of course how to quit.
>
>   Unfortunately,  no such example exists,  all the parts seem to be
> there,  but none
> of the methods in the protocol.irc.IRCClient appear to be
> implemented, which
> I suspect I would have to make my own sub-class...   but I have no
> clue how to put
> all this together.   There doesn't seem to be any docs that explain
> this.
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at intarweb.us  Wed Dec 31 15:52:49 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 31 Dec 2003 15:52:49 -0500
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <200312311211.31399.teratorn@world-net.net>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net>
Message-ID: <20031231205249.GA25692@intarweb.us>

On Wed, Dec 31, 2003 at 12:11:31PM -0700, Eric Mangold wrote:
> 
> On Tuesday 30 December 2003 08:04 pm, JD wrote:
> > Hi,
> >
> >    Has anyone written an IRC client in Twisted,  using protocol.irc? Do
> > I make a "reactor", or is a reactor only used for making servers?  All I
> > need is some really simple code illustrating how to connect to an IRC
> > Server, doing an "identd"
> 
> ident is a seperate protocol from IRC.  You will need to run a seperate
> daemon accessible from the Internet to provide this.  Twisted doesn't have
> an ident server.

  Thanks for pointing out this oversight!  Fixed in CVS.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031231/26879ab0/attachment.pgp 

From lists at webcrunchers.com  Wed Dec 31 18:33:41 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:33:41 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <200312311211.31399.teratorn@world-net.net>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net>
Message-ID: <C4662E4E-3BE9-11D8-ADCB-0030656C6B9E@webcrunchers.com>

On Dec 31, 2003, at 11:11 AM, Eric Mangold wrote:

> ident is a seperate protocol from IRC.  You will need to run a seperate
> daemon accessible from the Internet to provide this.  Twisted doesn't
> have an ident server.
>
> I use the one here http://freshmeat.net/projects/fauxident/

Thanx,  I'll check it out.

John




From lists at webcrunchers.com  Wed Dec 31 18:35:33 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:35:33 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <20031231205249.GA25692@intarweb.us>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us>
Message-ID: <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>

On Dec 31, 2003, at 12:52 PM, Jp Calderone wrote:

>> ident is a seperate protocol from IRC.  You will need to run a 
>> seperate
>> daemon accessible from the Internet to provide this.  Twisted doesn't 
>> have
>> an ident server.
>
>   Thanks for pointing out this oversight!  Fixed in CVS.

so then,   did you just add some example code to the CVS?

John




From itamar at itamarst.org  Wed Dec 31 18:55:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Dec 2003 18:55:25 -0500
Subject: [Twisted-Python] Subversion
Message-ID: <1072914925.30272.178.camel@sheriffpony>

Currently in beta. Atomic commits, real support for renames, folders,
etc..

Can do both anon and logged in access without apache (ssh and pserver
style).

Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
integration). Has cvs importer. viewcvs supports it.

I say we switch when it hits 1.0.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lists at webcrunchers.com  Wed Dec 31 18:58:50 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:58:50 -0800
Subject: [Twisted-Python] Where is best place to put my custom code?
In-Reply-To: <20031231205249.GA25692@intarweb.us>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us>
Message-ID: <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>

Hi,

I'm open for suggestions on where I can put my customized code.    I 
seem to have a choice
between putting it in the "factory" or in the "protocol",  and I cannot 
seem to decide where the
best place would be.

My application is simple.....   here is all it should do....

1) establish a connection to an IRC server.
2) send an IRC command,  like a "who" command,  and extract the info
3) then exit the client

I could put my code in the IRCClient's "connectionMade" method.    Or I 
could put it in the
factory's "startedConnecting" method.     The code would be simple,   
issue a
"who" command,   and take it's output and return it.   So,  in my 
connectionMade method
I would issue the command...  then call reactor.stop() which would exit 
from my reactor.run().

I think the factory's "startedConnecting" might get called first,  then 
somewhere down in
this mess,   the Client would call me back with the "connectionMade",  
and I could do it there.
I just need to know the appropriate place to put my code.   None of 
these examples in
the 'examples' directories make this clear.

My next task is to know how to extract the 'who' data back from my 
initial "who"

The ONLY callback I see is the "action()" method,   where it has the 
"msg" as the argument.
Is that the one I sub-class to read back the result of the "who"?   
Which I assume is called back
from a deferred.

There are a number of other callbacks for the private messages and 
such.   Which one
do I use?   When testing the code,  I'm not getting any callbacks to 
the "action()" method.
Is this because something else is fucked up.

I don't suppose anyone on this last has an Mac OS-X system,  do they?   
If so,  I would love
to establish a VIOP meeting if anyone has the time to help me out.  My 
"iChat" AIM handle is
'jdcrunchman'

John




From rc at pgdn.org  Wed Dec 31 19:11:38 2003
From: rc at pgdn.org (Robert Church)
Date: Wed, 31 Dec 2003 16:11:38 -0800
Subject: [Twisted-Python] Subversion
In-Reply-To: <1072914925.30272.178.camel@sheriffpony>
References: <1072914925.30272.178.camel@sheriffpony>
Message-ID: <20040101001138.GA27621@pgdn.org>

On Wed, Dec 31, 2003 at 06:55:25PM -0500, Itamar Shtull-Trauring quipped:
> Currently in beta. Atomic commits, real support for renames, folders,
> etc..
> 
> Can do both anon and logged in access without apache (ssh and pserver
> style).
> 
> Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
> integration). Has cvs importer. viewcvs supports it.
> 
> I say we switch when it hits 1.0.

Subversion is wonderful. I use it for all of my code, and for a lot of
my configuration files. I haven't really had any problems either.

You should be able to run SVN and CVS side-by-side, though one of the
repositories would probably have to be read-only.



From alexander.winston at comcast.net  Wed Dec 31 20:17:41 2003
From: alexander.winston at comcast.net (Alexander Winston)
Date: Wed, 31 Dec 2003 20:17:41 -0500
Subject: [Twisted-Python] Subversion
In-Reply-To: <1072914925.30272.178.camel@sheriffpony>
References: <1072914925.30272.178.camel@sheriffpony>
Message-ID: <1072919861.26230.0.camel@duende>

On Wed, 2003-12-31 at 18:55, Itamar Shtull-Trauring wrote:
> Currently in beta. Atomic commits, real support for renames, folders,
> etc..
> 
> Can do both anon and logged in access without apache (ssh and pserver
> style).
> 
> Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
> integration). Has cvs importer. viewcvs supports it.
> 
> I say we switch when it hits 1.0.

I'm all for it. The more Subversion repositories, the merrier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031231/a50772d7/attachment.pgp 

From developer at csrules.dyndns.org  Wed Dec 31 22:30:09 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 19:30:09 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us> <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF39441.7020600@csrules.dyndns.org>

>>
>>   Thanks for pointing out this oversight!  Fixed in CVS.
>
>
> so then,   did you just add some example code to the CVS?
>
> John
>

This means he coded support for ident and added that to cvs 
(twisted.protocols.ident).
Client and server.  No he did not code IRC client examples if that's 
what your
asking ?



-d




From developer at csrules.dyndns.org  Wed Dec 31 22:38:08 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 19:38:08 -0800
Subject: [Twisted-Python]  IRC client
Message-ID: <3FF39620.4030906@csrules.dyndns.org>

>
> I see tweo meanings and interpretations of the word "channel"  - One i 
> think is some
> kind of TCP Connection info,  and the other one is a chat "room" which 
> is the word
> I use to define a "room" or place where groups of people can chat.    Is
> channel = room?
>
> John


channel is the universally accepted term for an IRC channel.
RFC 1459.

-d




From teratorn at world-net.net  Wed Dec 31 22:43:15 2003
From: teratorn at world-net.net (Eric Mangold)
Date: Wed, 31 Dec 2003 20:43:15 -0700
Subject: [Twisted-Python] Re: Where is best place to put my custom code?
In-Reply-To: <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <20031231205249.GA25692@intarweb.us> <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <200312312043.15657.teratorn@world-net.net>

On Wednesday 31 December 2003 04:58 pm, JD wrote:
> Hi,
>
> I'm open for suggestions on where I can put my customized code.    I
> seem to have a choice
> between putting it in the "factory" or in the "protocol",  and I
> cannot seem to decide where the
> best place would be.

Since this is IRC you shouldn't go issuing commands until your signed 
on, thus the signedOn method of your protocol would be the right place.

>
> My application is simple.....   here is all it should do....
>
> 1) establish a connection to an IRC server.
> 2) send an IRC command,  like a "who" command,  and extract the info
> 3) then exit the client
>
> I could put my code in the IRCClient's "connectionMade" method.    Or
> I could put it in the
> factory's "startedConnecting" method.     The code would be simple,
> issue a
> "who" command,   and take it's output and return it.   So,  in my
> connectionMade method
> I would issue the command...  then call reactor.stop() which would
> exit from my reactor.run().
>
> I think the factory's "startedConnecting" might get called first, 
> then somewhere down in
> this mess,   the Client would call me back with the "connectionMade",
> and I could do it there.
> I just need to know the appropriate place to put my code.   None of
> these examples in
> the 'examples' directories make this clear.
>
> My next task is to know how to extract the 'who' data back from my
> initial "who"

Yeah, it's not obvious how to do that. I'll send another mail when I've 
a chance to test something, but New Years is coming up right now... :)

>
> The ONLY callback I see is the "action()" method,   where it has the
> "msg" as the argument.
> Is that the one I sub-class to read back the result of the "who"?

No. An ACTION in IRC terms is a user doing an /me.

> Which I assume is called back
> from a deferred.
>
> There are a number of other callbacks for the private messages and
> such.   Which one
> do I use?   When testing the code,  I'm not getting any callbacks to
> the "action()" method.
> Is this because something else is fucked up.

Yeah, your code.

>
> I don't suppose anyone on this last has an Mac OS-X system,  do they?
> If so,  I would love
> to establish a VIOP meeting if anyone has the time to help me out. 
> My "iChat" AIM handle is
> 'jdcrunchman'
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-Eric






From a.vredegoor at hccnet.nl  Tue Dec 30 09:52:17 2003
From: a.vredegoor at hccnet.nl (Anton Vredegoor)
Date: Tue, 30 Dec 2003 15:52:17 +0100
Subject: [Twisted-Python] Re: XML Parsing Error in tutorial.xhtml
References: <bskjqb$bba$1@sea.gmane.org> <20031230022616.GA1043@frobozz>
Message-ID: <bss3jb$fpd$1@sea.gmane.org>

Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

>According to CVS, the version in 1.1.1 shouldn't have this bug (but 1.1.0
>would).  Is it possible you have an older version of the docs installed?

Yes. I installed 1.1.1 on three machines. One Windows 2000 machine had
a flawless install. Two Windows 98SE machines did not unpack the
documentation. Since one of the latter did have an older version of
the docs installed, there was an error as I described. The other
Windows 98SE machine just couldn't find the file at all, since the
docs weren't unpacked. Unpacking the docs "by hand" solved both
problems.

By the way, the tutorial uses a finger server as its example but the
Windows 98SE machines don't have a finger client, not even if using
Cygwin. I knew about learning curves, but nobody informed me about the
rocks along the slope :-)

Anton




From crunch at shopip.com  Wed Dec 31 04:29:59 2003
From: crunch at shopip.com (John Draper)
Date: Wed, 31 Dec 2003 01:29:59 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
Message-ID: <E7856519-3B73-11D8-ADCB-0030656C6B9E@shopip.com>

Hi,

I call your attention to:

This was quoted in the Docs on the TwistedMatrix web site.

Persistent Data in the Factory

Since the Protocol instance is recreated each time the connection is 
made, the client needs some way to keep track of data that should be 
persisted. In the case of ircLogBot.py: (LogBot.log() just logs the 
data to the file object stored in LogBot.file)

it references a LogBot.log() call....   but I checked in ircLogBot.py 
and there is NO log()
method,  nor is there one in any of the other classes it inherits from.

Would it be too much of a bother if I were to ask anyone about this 
descrepancy?

John
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1173 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20031231/bd821e27/attachment.bin 

From glyph at twistedmatrix.com  Wed Dec 31 16:20:09 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 31 Dec 2003 17:20:09 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] log stderr and non-zero exit code in CGIs, don't show info to users as it is a security risk (closes issue #241)
In-Reply-To: <20030828212642.7529d345.itamar@itamarst.org>
Message-ID: <E09A3B60-3BE7-11D8-8F96-000393C9700E@twistedmatrix.com>

Well, thanks to the few users who responded to me privately.  The 
feeling seems to be unanimously in favor of leaving the output on by 
default: however, there is also widespread agreement that we need a 
better error-reporting mechanism in general so that we can look at 
these sorts of things in a persistent manner without grepping through 
logfiles all the time.

On Thursday, August 28, 2003, at 08:26 PM, Itamar Shtull-Trauring wrote:

> Only revert the removed HTML output - it should be logged to the log
> file regardless.

Will do.




From nkrontir at hotmail.com  Mon Dec  1 02:25:13 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Mon, 1 Dec 2003 11:25:13 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
Message-ID: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>

Hi there.
I am writing a file transfer program using twisted as my framework. 
I have been having some problems as far as memory usage is concerned (i.e. both client and server just eat through available memory without ever releasing it back to the kernel while transfering data). I am aware that in theory, the client and server will consume at least as much memory as the file to be transferred, but this memory should also be made available to the O/S after the operation has completed.
I also use a garbage collector, which makes things just marginally better and the only TWISTED operations I use are a few transport write and callLater commands.
The only culprits responsible for this I can imagine to be a difference between the hardcoded buffer sizes in TWISTED and the amount of data I send (I send 64Kb of data per request for faster delivery in LANs) and/or possibly that this memory lost is in many small chunks of data -- in this case no O/S can free this data, since there are always limits only above which the kernel will deem an amount of memory worth the trouble to be released (I think glibc has around a 2MB limit)...
As professional network programmers, do you believe my diagnosis is correct? Have you encountered such problems in the past? Are there workarounds for this?

Many thanks,

Nick.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031201/539eaa2b/attachment.html>

From andrew-twisted at puzzling.org  Mon Dec  1 05:11:51 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 1 Dec 2003 23:11:51 +1100
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
Message-ID: <20031201121151.GB21535@frobozz>

On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
>    Hi there.
>    I am writing a file transfer program using twisted as my framework.
>    I have been having some problems as far as memory usage is concerned
>    (i.e. both client and server just eat through available memory without
>    ever releasing it back to the kernel while transfering data). I am aware
>    that in theory, the client and server will consume at least as much memory
>    as the file to be transferred, but this memory should also be made
>    available to the O/S after the operation has completed.
>    I also use a garbage collector, which makes things just marginally better
>    and the only TWISTED operations I use are a few transport write and
>    callLater commands.

You don't say how large "large" is, but you probably should be using
producer/consumer APIs rather than just plain transport.write(data).  See
twisted.protocols.basic.FileSender for an example.  If I'm understanding
your problem correctly, you should see a significant improvement.  This
technique doesn't require holding the entire file in memory to transfer it.

I'm not sure what you mean about using a garbage collector -- Python
automatically cleans up objects with zero reference counts, and periodically
finds and collects unreachable object cycles.

>    The only culprits responsible for this I can imagine to be a difference
>    between the hardcoded buffer sizes in TWISTED and the amount of data I
>    send (I send 64Kb of data per request for faster delivery in LANs) and/or
>    possibly that this memory lost is in many small chunks of data -- in this
>    case no O/S can free this data, since there are always limits only above
>    which the kernel will deem an amount of memory worth the trouble to be
>    released (I think glibc has around a 2MB limit)...

Memory fragmentation can prevent the OS reclaiming memory, but generally
you'd expect memory growth to slow as it asymptotically reaches a high
enough limit to accomodate all memory allocations for your load, even with
fragmentation.

I believe Python 2.3's pymalloc allocates memory for different types in
different "arenas", which are seperately mmapped, so fragmentation in e.g.
the string arena (strings being that type this is read from files, split up,
sent over the network, etc) hopefully won't impact other memory allocation.
So 2.3 vs. 2.2 (or earlier) you should see... different memory use
characteristics.  Hopefully better, but you never know :)

Also, transport.write and callLater in 64kB chunks is unlikely to be the
fastest or memory-efficient technique.  Producers/consumers should be best,
but I'd suspect that even a single transport.write of the entire content
would probably be better.  Actual benchmarks to support this claim would be
very welcome!

>    As professional network programmers, do you believe my diagnosis is
>    correct? Have you encountered such problems in the past? Are there
>    workarounds for this?

I really can't say.  You've given no specific data at all... How large are
the files?  How much memory does your server appear to lose per request?
How much memory does the server take overall (both initially and after
running for a while)?  How many concurrent requests are you dealing with?
What platform, version of Python, and version of Twisted?  Anything else you
think is relevant?  :)

If you could answer some of these sorts of questions, we could maybe tell
you if what you're seeing is expected behaviour, or unusual, and maybe
suggest specific remedies.

-Andrew.




From wenderson at casadosprogramadores.com.br  Mon Dec  1 08:40:45 2003
From: wenderson at casadosprogramadores.com.br (Wenderson Teixeira)
Date: Mon, 1 Dec 2003 13:40:45 -0200
Subject: RES: [Twisted-Python] Woven and nested database queries
In-Reply-To: <3FC757DF.5010405@tv.debian.net>
Message-ID: <003001c3b821$7cf57b00$4501a8c0@wteixeiradsk1>

	Thanks for your reply, but I tested and that doesn't seem to work either.

	Tex

-----Mensagem original-----
De: twisted-python-admin at twistedmatrix.com [mailto:twisted-python-admin at twistedmatrix.com] Em nome de Tommi Virtanen
Enviada em: sexta-feira, 28 de novembro de 2003 12:13
Para: twisted-python at twistedmatrix.com
Assunto: Re: [Twisted-Python] Woven and nested database queries


Wenderson Teixeira wrote:
> 	I'm new to the list and I'm just starting with Twisted and Woven.
> 	I think the framework is great, but I'm having some problems.
> 	When I try to make two nested <div>, both with independent queries,
> 	I get na error, the solution I've found is to create another model
> 	called "loaddata", which does nothing, except call the queries.
> 	If anyone knows a better way, I'd like to hear, I've searched all
> 	over the Internet, and found nothing that could help.

Your problem is most likely Deferred models of which you need a 
submodel. Woven is buggy.

>                     <div model="a">
>                         <div view="Text"/>
>                         <p>B</p>
>                         <ul model="b" view="List">
>                             <li pattern="listItem" view="Text" />
>                         </ul>

Try <ul model="./b" view="List">, that should work.




From 2s7l3way02 at sneakemail.com  Mon Dec  1 12:52:06 2003
From: 2s7l3way02 at sneakemail.com (Mark Evans)
Date: 1 Dec 2003 19:52:06 -0000
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1
Message-ID: <25772-38779@sneakemail.com>

Are there any significant UDP bug fixes
or enhancements that make it worthwhile
to migrate immediately to the new 1.1.1 release candidate?

How stable is this rc, generally speaking?

-Mark



From exarkun at intarweb.us  Mon Dec  1 13:01:32 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 1 Dec 2003 15:01:32 -0500
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1
In-Reply-To: <25772-38779@sneakemail.com>
References: <25772-38779@sneakemail.com>
Message-ID: <20031201200132.GA31563@intarweb.us>

On Mon, Dec 01, 2003 at 07:52:06PM -0000, Mark Evans wrote:
> Are there any significant UDP bug fixes
> or enhancements that make it worthwhile
> to migrate immediately to the new 1.1.1 release candidate?

  I don't think there are any UDP changes from 1.1.0.

> 
> How stable is this rc, generally speaking?

  There are a couple known bugs (but not new bugs ;)

  There will probably be another release candidate tonight.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031201/ebcb090b/attachment.sig>

From mailinglists at shechen.at  Mon Dec  1 20:55:37 2003
From: mailinglists at shechen.at (stephan)
Date: Mon, 01 Dec 2003 19:55:37 -0800
Subject: [Twisted-Python] mounting a twisted server
Message-ID: <oprzjbuzhawzeeq5@mail.geekmail.cc>

I have written a custom file system in python which I use in conjunction 
with twisted and its http protocol. So, as far as browsers are concerned i 
am fine. what I would like to do next is to serve my file system in some 
form so that it could be mounted on a client machine. The idea is that 
'web enabled objects' can be directly edited in a certain app. NFS or 
samba would conceptionally work but does not seem to be supported by 
twisted and seems to be overkill anyways.

Does anybody have any ideas how I could accomplish that. Anybody 
experienced with mounting ftp servers (heard its prone to errors.)


_stephan



From andrew-twisted at puzzling.org  Mon Dec  1 21:21:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 2 Dec 2003 15:21:50 +1100
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjbuzhawzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc>
Message-ID: <20031202042150.GJ22674@frobozz>

On Mon, Dec 01, 2003 at 07:55:37PM -0800, stephan wrote:
> 
> I have written a custom file system in python which I use in conjunction 
> with twisted and its http protocol. So, as far as browsers are concerned i 
> am fine. what I would like to do next is to serve my file system in some 
> form so that it could be mounted on a client machine. The idea is that 
> 'web enabled objects' can be directly edited in a certain app. NFS or 
> samba would conceptionally work but does not seem to be supported by 
> twisted and seems to be overkill anyways.
> 
> Does anybody have any ideas how I could accomplish that. Anybody 
> experienced with mounting ftp servers (heard its prone to errors.)

This sounds like a good use for WebDAV, but unfortunately there is no
Twisted implementation of it yet.  It's probably easier than NFS or SMB,
though, but I'm just guessing :)

-Andrew.




From bob at redivi.com  Mon Dec  1 21:39:28 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Dec 2003 23:39:28 -0500
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjbuzhawzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc>
Message-ID: <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>


On Dec 1, 2003, at 10:55 PM, stephan wrote:

>
> I have written a custom file system in python which I use in 
> conjunction with twisted and its http protocol. So, as far as browsers 
> are concerned i am fine. what I would like to do next is to serve my 
> file system in some form so that it could be mounted on a client 
> machine. The idea is that 'web enabled objects' can be directly edited 
> in a certain app. NFS or samba would conceptionally work but does not 
> seem to be supported by twisted and seems to be overkill anyways.
>
> Does anybody have any ideas how I could accomplish that. Anybody 
> experienced with mounting ftp servers (heard its prone to errors.)

WebDAV is probably the right solution, but it's not currently 
implemented by Twisted (but feel free to write an implementation and 
submit patches).  I have done some very simple WebDAV stuff with 
Twisted, the simple commands are easy and are enough to get some things 
to work (like mozilla calendar or iCal).

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031201/2d273258/attachment-0002.bin>

From mailinglists at shechen.at  Tue Dec  2 00:45:33 2003
From: mailinglists at shechen.at (stephan)
Date: Mon, 01 Dec 2003 23:45:33 -0800
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc> <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com>
Message-ID: <oprzjmh7fuwzeeq5@mail.geekmail.cc>

hey bob, I just downloaded the RFC 2518 for WebDav. It seems that the 
protocol is based on XML which is nice. I also noticed that it is quite 
extensive and provides a lot of features I don't really need at the 
moment.

Do you mind sharing your simple WebDav files.

_stephan


On Mon, 1 Dec 2003 23:39:28 -0500, Bob Ippolito <bob at redivi.com> wrote:

>
> On Dec 1, 2003, at 10:55 PM, stephan wrote:
>
>>
>> I have written a custom file system in python which I use in
>> conjunction with twisted and its http protocol. So, as far as browsers
>> are concerned i am fine. what I would like to do next is to serve my
>> file system in some form so that it could be mounted on a client
>> machine. The idea is that 'web enabled objects' can be directly edited
>> in a certain app. NFS or samba would conceptionally work but does not
>> seem to be supported by twisted and seems to be overkill anyways.
>>
>> Does anybody have any ideas how I could accomplish that. Anybody
>> experienced with mounting ftp servers (heard its prone to errors.)
>
> WebDAV is probably the right solution, but it's not currently
> implemented by Twisted (but feel free to write an implementation and
> submit patches).  I have done some very simple WebDAV stuff with
> Twisted, the simple commands are easy and are enough to get some things
> to work (like mozilla calendar or iCal).
>
> -bob





From Pieter.Claerhout at Creo.com  Tue Dec  2 01:05:21 2003
From: Pieter.Claerhout at Creo.com (Pieter Claerhout)
Date: Tue, 2 Dec 2003 09:05:21 +0100 
Subject: [Twisted-Python] Some problems with twisted
Message-ID: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>

Hello all,

I'm having some problems with getting a certain app running under Twisted.
I've attached
the code I have so far. There are a few things that are not working the way
they should
(because I probably did something wrong). Twisted is still pretty new for
me.

1. If I run this script from the command prompt, e.g.:

   C:\>python sample.py
   
   It does start and performs the processing as defined in the
ProcessingService, but it
   doesn't seem to start the WebAdminService. When I try to connect to the
web interface
   by surfing to http://localhost:9119/, it fails to connect.

2. During the execution of the doProcessing function, it's impossible to
stop the
   application with e.g. CTRL+BREAK. Is there a way around this?

3. The code from the doProcessing service is basically blocking the whole
application 
   when it's running. The goal of this application is that it does two
things:
   
   1. It grabs files from a list of servers every hour and performs some
calculations on
      these files. The results will be stored in a database (SQLite or
MySQL).

   2. The application will provide a web interface to administer the
application and
      display the results by getting these from the database.

   Since downloading from the internet is not always as reliable as we would
like it to
   be, it's possible that if a number of the servers are not online, the
systems slows
   down considerably. It would be a waste of time anyway to let the
application wait
   for this single server when it can continue with the other ones in the
meantime.

   What I would like to find is a way to get the data from these servers as
fast as
   possible and do the calculations on them without blocking the system.

   What is the normal way of doing things like this in Twisted. Should I use
threads to
   do this, or is there another way?

Thanks a lot in advance,


pieter

[ pieter claerhout | pieter at yellowduck.be | www.yellowduck.be ]


#---- START OF CODE ----
import time
from twisted.internet import app
from twisted.internet import reactor
from twisted.web import static
from twisted.web import script
from twisted.web import server

class ProcessingService( app.ApplicationService ):

    def __init__( self, serviceName, serviceParent=None ):
        app.ApplicationService.__init__(
            self, serviceName, serviceParent=serviceParent
        )

    def startService( self ):
        reactor.callLater( 0, self.doProcessing )

    def doProcessing( self ):
        for url in [ 'http://www.yellowduck.be/', 'http://www.beachshop.be/'
]:
            print 'Processing %s' %( url )
            time.sleep( 5 )
        reactor.callLater( 360, self.doProcessing )

class WebAdminService( app.ApplicationService ):

    def __init__( self, serviceName, serviceParent=None ):
        app.ApplicationService.__init__(
            self, serviceName, serviceParent=serviceParent
        )

    def startService( self ):
        root = static.File( 'htdocs' )
        site = server.Site( root )
        self.serviceParent.listenTCP( 9119, site )

def main():
    myapp = app.Application( 'myapp' )
    ProcessingService( 'processor', myapp )
    WebAdminService( 'webadmin', myapp )
    myapp.run()

if __name__ == '__main__':
    main()
#---- END OF CODE ----



From twisted at zadka.site.co.il  Tue Dec  2 03:01:41 2003
From: twisted at zadka.site.co.il (Moshe Zadka)
Date: 2 Dec 2003 10:01:41 -0000
Subject: [Twisted-Python] Some problems with twisted
In-Reply-To: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
References: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
Message-ID: <20031202100141.5517.qmail@green.zadka.com>

On Tue, 2 Dec 2003, Pieter Claerhout <Pieter.Claerhout at Creo.com> wrote:

> 2. During the execution of the doProcessing function, it's impossible to
> stop the application with e.g. CTRL+BREAK. Is there a way around this?

That's the first sign of problems: "during" a function call is a perceptable
time.

Here's code which would do the right thing, completely untested.
Notice how calculate, which would do the MySQL dance [probably
a bad idea to use SQL for these things], is only called when
the data is ready.

from twisted.application import service, internet
from twisted.web import server, static, client

def ProcessingService():
    return internet.TimerService(_doProcessing,
                                 ['http://www.yellowduck.be/',
                                  'http://www.beachshop.be/'])

def _doProcessing(urls):
    def calculation(data):
        pass # do something here
    for url in urls:
        client.getPage(url).addCallback(calculation)

def WebAdminService():
    return internet.TCPService(9119, server.Site(static.File('htdocs')))

application = service.Application('myapp')
for s in [ProcessingService(), WebAdminService()]:
    s.setServiceParent(application)



From nieder at mail.ru  Tue Dec  2 00:58:17 2003
From: nieder at mail.ru (Ricardo Niederberger Cabral)
Date: Tue, 2 Dec 2003 08:58:17 +0100
Subject: [Twisted-Python] determine the number of incoming tcp connections
Message-ID: <20031202075635.GA2697@nieder>

How can i ask my twisted.internet.app.Application or
twisted.spread.pb.Root how many incoming tcp connections it currently
has ?

I failed to find such thing on the API (or didn't try hard enough :/
), so should i make the other side say "i'm alive" and then count myself the
number of "i'm alive"s i get ?

Best regards,
--
rnc <nieder at mail dot ru>



From henni at brainbot.com  Tue Dec  2 04:26:11 2003
From: henni at brainbot.com (Thorsten Henninger)
Date: Tue, 02 Dec 2003 12:26:11 +0100
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <oprzjmh7fuwzeeq5@mail.geekmail.cc>
References: <oprzjbuzhawzeeq5@mail.geekmail.cc> <83AD176F-2481-11D8-B9E1-000A95686CD8@redivi.com> <oprzjmh7fuwzeeq5@mail.geekmail.cc>
Message-ID: <3FCC76D3.8030606@brainbot.com>

Hi,

I would be very interested in using WebDav together with twisted as well.
Since I am very  new to twisted, some simple WebDav files would really 
help me to get startet.
If I get it to work, I would not mind to share my results and submit 
patches!

regards,

Thorsten

stephan wrote:

>
> hey bob, I just downloaded the RFC 2518 for WebDav. It seems that the 
> protocol is based on XML which is nice. I also noticed that it is 
> quite extensive and provides a lot of features I don't really need at 
> the moment.
>
> Do you mind sharing your simple WebDav files.
>
> _stephan
>
>
> On Mon, 1 Dec 2003 23:39:28 -0500, Bob Ippolito <bob at redivi.com> wrote:
>
>>
>> On Dec 1, 2003, at 10:55 PM, stephan wrote:
>>
>>>
>>> I have written a custom file system in python which I use in
>>> conjunction with twisted and its http protocol. So, as far as browsers
>>> are concerned i am fine. what I would like to do next is to serve my
>>> file system in some form so that it could be mounted on a client
>>> machine. The idea is that 'web enabled objects' can be directly edited
>>> in a certain app. NFS or samba would conceptionally work but does not
>>> seem to be supported by twisted and seems to be overkill anyways.
>>>
>>> Does anybody have any ideas how I could accomplish that. Anybody
>>> experienced with mounting ftp servers (heard its prone to errors.)
>>
>>
>> WebDAV is probably the right solution, but it's not currently
>> implemented by Twisted (but feel free to write an implementation and
>> submit patches).  I have done some very simple WebDAV stuff with
>> Twisted, the simple commands are easy and are enough to get some things
>> to work (like mozilla calendar or iCal).
>>
>> -bob
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
brainbot technologies AG 
boppstrasse . 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:henni at brainbot.com





From nkrontir at hotmail.com  Tue Dec  2 06:46:07 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Tue, 2 Dec 2003 15:46:07 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz>
Message-ID: <LAW11-OE16A5JIzpNce00000910@hotmail.com>

Hi again.

----- Original Message ----- 
From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
To: <twisted-python at twistedmatrix.com>
Sent: Monday, December 01, 2003 2:11 PM
Subject: Re: [Twisted-Python] Memory usage in large file transfers


> On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
> >    Hi there.
> >    I am writing a file transfer program using twisted as my framework.
> >    I have been having some problems as far as memory usage is concerned
> >    (i.e. both client and server just eat through available memory
without
> >    ever releasing it back to the kernel while transfering data). I am
aware
> >    that in theory, the client and server will consume at least as much
memory
> >    as the file to be transferred, but this memory should also be made
> >    available to the O/S after the operation has completed.
> >    I also use a garbage collector, which makes things just marginally
better
> >    and the only TWISTED operations I use are a few transport write and
> >    callLater commands.
>
> You don't say how large "large" is, but you probably should be using
> producer/consumer APIs rather than just plain transport.write(data).  See
> twisted.protocols.basic.FileSender for an example.  If I'm understanding
> your problem correctly, you should see a significant improvement.  This
> technique doesn't require holding the entire file in memory to transfer
it.
>
> I'm not sure what you mean about using a garbage collector -- Python
> automatically cleans up objects with zero reference counts, and
periodically
> finds and collects unreachable object cycles.
>
nk: The size of files I am referring to can be anything from 20MB up to
500MB, but right now I'm taking it easy with the client/ server model; I'm
using sending a single 43MB file, and as I'm debugging and improving
performance, I will increase this filesize...
nk: I had originally thought about using basic.FileSender but a) It has been
commented as unstable by the twisted development team and b)I need to send a
client ID each time I send a single buffer (security... what can you
say...). To make sure that I'm not holding the entire file's contents in
memory, I read (at most) 64K of  the file each time, and send this data
away. After it has been sent, this data buffer is flushed. I guess I can try
to change this to file.open, file.seek, file.read and file.close each time I
read the file so that the only contents of the file in system memory are the
only ones necessary...
nk: When talking about the garbage collector, I'm just referring to python's
gc.enable() and gc.collect() commands, nothing more... Unfortunately I don't
believe that the built-in periodical find-and-collect unreachable object
cycles is very useful in the case of the client, since it shuts down after
the file's EOF...
> >    The only culprits responsible for this I can imagine to be a
difference
> >    between the hardcoded buffer sizes in TWISTED and the amount of data
I
> >    send (I send 64Kb of data per request for faster delivery in LANs)
and/or
> >    possibly that this memory lost is in many small chunks of data -- in
this
> >    case no O/S can free this data, since there are always limits only
above
> >    which the kernel will deem an amount of memory worth the trouble to
be
> >    released (I think glibc has around a 2MB limit)...
>
> Memory fragmentation can prevent the OS reclaiming memory, but generally
> you'd expect memory growth to slow as it asymptotically reaches a high
> enough limit to accomodate all memory allocations for your load, even with
> fragmentation.
>
> I believe Python 2.3's pymalloc allocates memory for different types in
> different "arenas", which are seperately mmapped, so fragmentation in e.g.
> the string arena (strings being that type this is read from files, split
up,
> sent over the network, etc) hopefully won't impact other memory
allocation.
> So 2.3 vs. 2.2 (or earlier) you should see... different memory use
> characteristics.  Hopefully better, but you never know :)
>
> Also, transport.write and callLater in 64kB chunks is unlikely to be the
> fastest or memory-efficient technique.  Producers/consumers should be
best,
> but I'd suspect that even a single transport.write of the entire content
> would probably be better.  Actual benchmarks to support this claim would
be
> very welcome!
>
> >    As professional network programmers, do you believe my diagnosis is
> >    correct? Have you encountered such problems in the past? Are there
> >    workarounds for this?
>
> I really can't say.  You've given no specific data at all... How large are
> the files?  How much memory does your server appear to lose per request?
> How much memory does the server take overall (both initially and after
> running for a while)?  How many concurrent requests are you dealing with?
> What platform, version of Python, and version of Twisted?  Anything else
you
> think is relevant?  :)
>
nk: Right now, I'm testing the server/ client model with a 43 MB file. The
memory consumed on a WinMe system using Python 2.3.2 and Twisted 1.1.0 with
a 64K buffer is 58MB, while with a 4KB buffer is around the 80MB region. On
Linux using Python 2.3.2 and Twisted 1.1.0, the memory consumed with a 4K
buffer is always a bit more than 100MB. I can't use very large buffers on my
Linux system, because of the ID I have to send per buffer sent. It seems
that the linux default SOL_SOCKET, SO_RCVBUF sizes are relatively small, so
it confuses the client ID since the packets it receives will have different
sizes... Note that these results are for 1 server and 1 client. I have not
yet dared do 2 concurrent clients at once!
nk: The server consumes only 3MB of memory while idle. Unfortunately, I
cannot tell if the erratic memory consumption lies on the server or client
side (or both), since I only have 1 PC...
> If you could answer some of these sorts of questions, we could maybe tell
> you if what you're seeing is expected behaviour, or unusual, and maybe
> suggest specific remedies.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From vanandel at atd.ucar.edu  Tue Dec  2 07:01:29 2003
From: vanandel at atd.ucar.edu (Joe Van Andel)
Date: Tue, 02 Dec 2003 07:01:29 -0700
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor already installed
Message-ID: <3FCC9B39.1060801@atd.ucar.edu>

Using Twisted 1.1.0, Python 2.3.2, Redhat 9:

Python scripts using that import xmlprc before calling qtreactor.install()

e.g:
========================
from twisted.web.xmlrpc import Proxy

qtreactor.install(app)
=========================

fail with the traceback:

Traceback (most recent call last):
   File "qtdemo2.py", line 28, in ?
     qtreactor.install(app)
   File 
"/opt/local_rh90/lib/python2.3/site-packages/twisted/internet/qtreactor.py", 
line 197, in install
     installReactor(reactor)
   File 
"/opt/local_rh90/lib/python2.3/site-packages/twisted/internet/main.py", 
line 90, in installReactor
     assert not sys.modules.has_key('twisted.internet.reactor'), \
AssertionError: reactor already installed

====================================

Another demonstration of this problem:
=====================
 >>> from twisted.web.xmlrpc import Proxy
 >>> import sys
 >>> sys.modules.has_key('twisted.internet.reactor')
True
=========================
internet/main.py, installReactor() needs a more robust test whether a 
reactor has already been installed, rather than relying on whether 
twisted.internet.reactor has been imported.

The workaround is to move the import statement, but this isn't always a 
clean solution.

-- 
Joe VanAndel  	
National Center for Atmospheric Research
http://www.atd.ucar.edu/~vanandel/
Internet: vanandel at ucar dot edu
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qtdemo2.py
URL: </pipermail/twisted-python/attachments/20031202/76e8efcc/attachment.ksh>

From exarkun at intarweb.us  Tue Dec  2 08:21:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 10:21:42 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <LAW11-OE16A5JIzpNce00000910@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz> <LAW11-OE16A5JIzpNce00000910@hotmail.com>
Message-ID: <20031202152142.GB1559@intarweb.us>

On Tue, Dec 02, 2003 at 03:46:07PM +0200, Nikolaos Krontiris wrote:
> Hi again.
> 
> ----- Original Message ----- 
> From: "Andrew Bennetts" <andrew-twisted at puzzling.org>
> To: <twisted-python at twistedmatrix.com>
> Sent: Monday, December 01, 2003 2:11 PM
> Subject: Re: [Twisted-Python] Memory usage in large file transfers
> 
> 
> > On Mon, Dec 01, 2003 at 11:25:13AM +0200, Nikolaos Krontiris wrote:
> > >    Hi there.

> > >    I am writing a file transfer program using twisted as my framework.
> > >    I have been having some problems as far as memory usage is
> > >    concerned (i.e. both client and server just eat through available
> > >    memory without ever releasing it back to the kernel while
> > >    transfering data). I am aware that in theory, the client and server
> > >    will consume at least as much memory as the file to be transferred,
> > >    but this memory should also be made available to the O/S after the
> > >    operation has completed. I also use a garbage collector, which
> > >    makes things just marginally better and the only TWISTED operations
> > >    I use are a few transport write and callLater commands.
> >
> > You don't say how large "large" is, but you probably should be using
> > producer/consumer APIs rather than just plain transport.write(data).  See
> > twisted.protocols.basic.FileSender for an example.  If I'm understanding
> > your problem correctly, you should see a significant improvement.  This
> > technique doesn't require holding the entire file in memory to transfer
> > it.
> >
> > I'm not sure what you mean about using a garbage collector -- Python
> > automatically cleans up objects with zero reference counts, and
> > periodically finds and collects unreachable object cycles.
> >
> nk: The size of files I am referring to can be anything from 20MB up to
> 500MB, but right now I'm taking it easy with the client/ server model; I'm
> using sending a single 43MB file, and as I'm debugging and improving
> performance, I will increase this filesize...
> nk: I had originally thought about using basic.FileSender but a) It has been
> commented as unstable by the twisted development team and b)I need to send a
> client ID each time I send a single buffer (security... what can you
> say...).

  Comments of "unstable" in Twisted sources refer to the fact that we are
not promising that the API will not change.  The code in question is bug
free, as far as I know.

  Client ID?  I assume you're using TCP; what do you need to add an ID to
every packet for?

> To make sure that I'm not holding the entire file's contents in
> memory, I read (at most) 64K of  the file each time, and send this data
> away. After it has been sent, this data buffer is flushed. I guess I can try
> to change this to file.open, file.seek, file.read and file.close each time I
> read the file so that the only contents of the file in system memory are the
> only ones necessary...

  That is not necessary.

> nk: When talking about the garbage collector, I'm just referring to python's
> gc.enable() and gc.collect() commands, nothing more... Unfortunately I don't
> believe that the built-in periodical find-and-collect unreachable object
> cycles is very useful in the case of the client, since it shuts down after
> the file's EOF...

  Unless you are preventing the garbage collector from working, I don't see
why this should be the case.  To see if your program is building up
unreasonable amounts of unfreeable objects, look at the gc.garbage list. 
Any objects the garbage collector has found can be freed but which it cannot
actually free will end up there.

> [snip]
> >
> > >    As professional network programmers, do you believe my diagnosis is
> > >    correct? Have you encountered such problems in the past? Are there
> > >    workarounds for this?
> >
> > I really can't say.  You've given no specific data at all... How large are
> > the files?  How much memory does your server appear to lose per request?
> > How much memory does the server take overall (both initially and after
> > running for a while)?  How many concurrent requests are you dealing with?
> > What platform, version of Python, and version of Twisted?  Anything else
> you
> > think is relevant?  :)
> >
> nk: Right now, I'm testing the server/ client model with a 43 MB file. The
> memory consumed on a WinMe system using Python 2.3.2 and Twisted 1.1.0 with
> a 64K buffer is 58MB, while with a 4KB buffer is around the 80MB region. On
> Linux using Python 2.3.2 and Twisted 1.1.0, the memory consumed with a 4K
> buffer is always a bit more than 100MB. I can't use very large buffers on my
> Linux system, because of the ID I have to send per buffer sent. It seems
> that the linux default SOL_SOCKET, SO_RCVBUF sizes are relatively small, so
> it confuses the client ID since the packets it receives will have different
> sizes... Note that these results are for 1 server and 1 client. I have not
> yet dared do 2 concurrent clients at once!

  You absolutely must not rely on the number of bytes received from a
particular read from a socket.  I cannot stress this enough.  You
*absolutely* *can* *not* rely on it.

> nk: The server consumes only 3MB of memory while idle. Unfortunately, I
> cannot tell if the erratic memory consumption lies on the server or client
> side (or both), since I only have 1 PC...

  The client and server are still separate processes.  You should be able to
view resource usage for each individually.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/6d92cfc8/attachment.sig>

From exarkun at intarweb.us  Tue Dec  2 08:27:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 10:27:21 -0500
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor already installed
In-Reply-To: <3FCC9B39.1060801@atd.ucar.edu>
References: <3FCC9B39.1060801@atd.ucar.edu>
Message-ID: <20031202152721.GC1559@intarweb.us>

On Tue, Dec 02, 2003 at 07:01:29AM -0700, Joe Van Andel wrote:
> Using Twisted 1.1.0, Python 2.3.2, Redhat 9:
> 
> [snip]
> 
> The workaround is to move the import statement, but this isn't always a 
> clean solution.
> 

  This isn't a workaround.  This is [close to] the correct solution.  :)

  The actual solution is to use "twistd" with the "--reactor qt" argument to
run the program (and to write the program in such a way that it can be run
like this).  

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/e451a42b/attachment.sig>

From martin at datacash.com  Tue Dec  2 08:37:03 2003
From: martin at datacash.com (Martin Waite)
Date: 02 Dec 2003 15:37:03 +0000
Subject: [Twisted-Python] tutorial finger14.py error ?
Message-ID: <1070379423.1168.189.camel@pascal>

Hi,

I am working through the excellent tutorial 

http://twistedmatrix.com/documents/howto/tutorial.

In finger14.py, there are two similar definitions of 
_read() - one as a method of FingerService and the 
second local to startService().

The version in startService() doesn't seem to do anything.
It tries to read self.file instead of self.filename - and
so cannot succeed.

Can this be deleted to remove the confusion ?

regards,
Martin






From itamar at itamarst.org  Tue Dec  2 08:36:53 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:36:53 -0500
Subject: [Twisted-Python] Twisted 1.1.0 - AssertionError: reactor
 already installed
In-Reply-To: <3FCC9B39.1060801@atd.ucar.edu>
References: <3FCC9B39.1060801@atd.ucar.edu>
Message-ID: <20031202103653.419cb065.itamar@itamarst.org>

On Tue, 02 Dec 2003 07:01:29 -0700
Joe Van Andel <vanandel at atd.ucar.edu> wrote:

> The workaround is to move the import statement, but this isn't always
> a clean solution.

It's not a workaround - it's the documented way of doing this.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 08:38:52 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:38:52 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <LAW11-OE16A5JIzpNce00000910@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
	<20031201121151.GB21535@frobozz>
	<LAW11-OE16A5JIzpNce00000910@hotmail.com>
Message-ID: <20031202103852.0a2832aa.itamar@itamarst.org>

On Tue, 2 Dec 2003 15:46:07 +0200
"Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:

> nk: I had originally thought about using basic.FileSender but a) It
> has been commented as unstable by the twisted development team and b)I
> need to send a client ID each time I send a single buffer (security...
> what can you say...). To make sure that I'm not holding the entire
> file's contents in

You don't have to use FileSender as is, you could write a variant of it
using the underlying producer/consumer APIs, that's the solution. See
http://itamarst.org/writings/OSCON03/twisted_internet-108.html

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 08:42:50 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 10:42:50 -0500
Subject: [Twisted-Python] Some problems with twisted
In-Reply-To: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
References: <490316A24CC5D411ACD700B0D078F7F003915C91@cseexch01.cse.creoscitex.com>
Message-ID: <20031202104250.01bc33e5.itamar@itamarst.org>

On Tue, 2 Dec 2003 09:05:21 +0100
Pieter Claerhout <Pieter.Claerhout at Creo.com> wrote:

> 2. During the execution of the doProcessing function, it's impossible
> to stop the
>    application with e.g. CTRL+BREAK. Is there a way around this?

Yes, don't time.sleep(), that freezes the whole program. That's what
reactor.callLater is for - schedule a function to run in 5 seconds. This
is the same issue as the next one.

As an aside, twisted.internet.app is deprecated. Look at the online docs
for 1.1.0 to see how the new, updated APIs work.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 09:07:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 11:07:55 -0500
Subject: [Twisted-Python] tutorial finger14.py error ?
In-Reply-To: <1070379423.1168.189.camel@pascal>
References: <1070379423.1168.189.camel@pascal>
Message-ID: <20031202110755.12f932b1.itamar@itamarst.org>

On 02 Dec 2003 15:37:03 +0000
Martin Waite <martin at datacash.com> wrote:

> Can this be deleted to remove the confusion ?

Fixed in CVS, thanks.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From bob at redivi.com  Tue Dec  2 09:23:32 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 11:23:32 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <20031202103852.0a2832aa.itamar@itamarst.org>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com> <20031201121151.GB21535@frobozz> <LAW11-OE16A5JIzpNce00000910@hotmail.com> <20031202103852.0a2832aa.itamar@itamarst.org>
Message-ID: <DF025956-24E3-11D8-A56A-000A95686CD8@redivi.com>


On Dec 2, 2003, at 10:38 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2 Dec 2003 15:46:07 +0200
> "Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:
>
>> nk: I had originally thought about using basic.FileSender but a) It
>> has been commented as unstable by the twisted development team and b)I
>> need to send a client ID each time I send a single buffer (security...
>> what can you say...). To make sure that I'm not holding the entire
>> file's contents in
>
> You don't have to use FileSender as is, you could write a variant of it
> using the underlying producer/consumer APIs, that's the solution. See
> http://itamarst.org/writings/OSCON03/twisted_internet-108.html

And if you do, please don't screw with the Python garbage collector.  
Just because you can turn it off, doesn't mean you should.  Doing a 
full collect every so often is slower than letting gc take its normal 
course anyways (in my experience).

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031202/9028808d/attachment-0002.bin>

From nkrontir at hotmail.com  Tue Dec  2 10:04:49 2003
From: nkrontir at hotmail.com (Nikolaos Krontiris)
Date: Tue, 2 Dec 2003 19:04:49 +0200
Subject: [Twisted-Python] Memory usage in large file transfers
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com><20031201121151.GB21535@frobozz><LAW11-OE16A5JIzpNce00000910@hotmail.com> <20031202103852.0a2832aa.itamar@itamarst.org>
Message-ID: <Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>

----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, December 02, 2003 5:38 PM
Subject: Re: [Twisted-Python] Memory usage in large file transfers


> On Tue, 2 Dec 2003 15:46:07 +0200
> "Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:
>
> > nk: I had originally thought about using basic.FileSender but a) It
> > has been commented as unstable by the twisted development team and b)I
> > need to send a client ID each time I send a single buffer (security...
> > what can you say...). To make sure that I'm not holding the entire
> > file's contents in
>
> You don't have to use FileSender as is, you could write a variant of it
> using the underlying producer/consumer APIs, that's the solution. See
> http://itamarst.org/writings/OSCON03/twisted_internet-108.html
>
nk: Ok, I can give it a try, sounds like a good idea. But, since producers
have transport.write in their cores anyway, why should there be a
performance difference between this solution and the way I'm using it (just
calling transport.write)?
> -- 
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From warner at lothar.com  Tue Dec  2 10:37:20 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 02 Dec 2003 09:37:20 -0800 (PST)
Subject: [Twisted-Python] mounting a twisted server
Message-ID: <20031202.093720.77222785.warner@lothar.com>

stephan <mailinglists at shechen.at> writes:
> NFS or samba would conceptionally work but does not seem to be supported by
> twisted and seems to be overkill anyways.

The gnome-vfs layer might be worth looking at: it allows fairly arbitrary
things to be interpreted as "filesystems" (auto-mounted ftp sites, synthetic
configuration files, etc), but is only accessible to programs using the
gnome-vfs library for file access.

If you've considered NFS then one of the user-space filesystems might be a
reasonable approach. They involve a kernel module which proxies filesystem
requests up to a userspace daemon, which can then do whatever it wants to
satisfy the open/read/write/close requests. Some of the ones I've looked at
have python bindings, and getting their callback scheme to work with Twisted
shouldn't be too hard.

Advantages: any app on your box can access the files (no special library
needed)

Disadvantages: only runs on linux (or possibly some BSDs), is only directly
available to processes running on that same box, but you could probably NFS-
or SMB-export the resulting filesystem so other machines could mount it.

 FUSE: Filesystem in USErspace
       http://sourceforge.net/projects/avf
       includes Perl and Python bindings


 -Brian



From martin at datacash.com  Tue Dec  2 10:55:05 2003
From: martin at datacash.com (Martin Waite)
Date: 02 Dec 2003 17:55:05 +0000
Subject: [Twisted-Python] daemon thread support
Message-ID: <1070387706.1168.205.camel@pascal>

Hi,

I have written a simple network listener that
collects requests, stores these in a database,
pulls responses from a database, and forwards these
back over the network.

This uses three threads:
  * main twisted reactor thread
  * database writer thread
  * database reader thread

The database threads are created using reactor.callInThread().

Everything works fine, but I cannot get the application
to close down cleanly - it always blocks waiting for the 
database threads to stop.

Is there any way to mark these threads as daemon threads 
so that python will close down even if they're still running ?

regards,
Martin






From itamar at itamarst.org  Tue Dec  2 11:28:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:28:36 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <1070387706.1168.205.camel@pascal>
References: <1070387706.1168.205.camel@pascal>
Message-ID: <20031202132836.0c370d7a.itamar@itamarst.org>

On 02 Dec 2003 17:55:05 +0000
Martin Waite <martin at datacash.com> wrote:

> Everything works fine, but I cannot get the application
> to close down cleanly - it always blocks waiting for the 
> database threads to stop.

Instead of having a reader thread, have read tasks that you send to
thread. That is, don't send one function to callInThread that does a
while loop, send functions that do one task and then exit.

Also look at twisted.enterprise.adbapi and the enterprise howto.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 11:31:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:31:47 -0500
Subject: [Twisted-Python] mounting a twisted server
In-Reply-To: <20031202.093720.77222785.warner@lothar.com>
References: <20031202.093720.77222785.warner@lothar.com>
Message-ID: <20031202133147.3cf458b9.itamar@itamarst.org>

On Tue, 02 Dec 2003 09:37:20 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

> If you've considered NFS then one of the user-space filesystems might
> be a reasonable approach. They involve a kernel module which proxies
> filesystem requests up to a userspace daemon, which can then do
> whatever it wants to satisfy the open/read/write/close requests. Some
> of the ones I've looked at have python bindings, and getting their
> callback scheme to work with Twisted shouldn't be too hard.

Huh? You don't need that, a NFS server can run as pure user space, no
kernel work involved, it's just another network server. The only
possible issue is loopback mounting due to reentry issues or something
(there was a paper at Usenix 2001 IIRC about a toolkit for writing NFS
servers in C++, probably covers that). You just mount it with nfs
client, which does need to be in kernel but that's already in linux
etc..

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From itamar at itamarst.org  Tue Dec  2 11:33:37 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 13:33:37 -0500
Subject: [Twisted-Python] Memory usage in large file transfers
In-Reply-To: <Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>
References: <Law11-OE44iIBFdtaFc0000c9ba@hotmail.com>
	<20031201121151.GB21535@frobozz>
	<LAW11-OE16A5JIzpNce00000910@hotmail.com>
	<20031202103852.0a2832aa.itamar@itamarst.org>
	<Law11-OE48Aj5p1Fjxe00000b56@hotmail.com>
Message-ID: <20031202133337.6c9bda44.itamar@itamarst.org>

On Tue, 2 Dec 2003 19:04:49 +0200
"Nikolaos Krontiris" <nkrontir at hotmail.com> wrote:

> nk: Ok, I can give it a try, sounds like a good idea. But, since
> producers have transport.write in their cores anyway, why should there
> be a performance difference between this solution and the way I'm
> using it (just calling transport.write)?

Because it only writes (if you do it correctly and don't just ignore
producer callbacks) when the transport buffers are empty and writes will
go out over the network immediately, so data doesn't accumulate in the
transport buffers (which can be expensive if it gets too big).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From warner at lothar.com  Tue Dec  2 12:07:45 2003
From: warner at lothar.com (Brian Warner)
Date: Tue, 02 Dec 2003 11:07:45 -0800 (PST)
Subject: [Twisted-Python] Contributing to Twisted
Message-ID: <20031202.110745.124402457.warner@lothar.com>

Michal Pasternak <michal at pasternak.w.lub.pl> writes:

> I'd like to setup buildbot on my machine and help Twisted building and
> testing packages - as my contribution to Twisted project. I can install it
> on a 700 MHz / 256 RAM / NetBSD-stable machine.

Excellent! I'll set up a netbsd builder and mail you the setup information. I
need a little time to get the next buildbot release out the door.. otherwise
I think you'll need to run the CVS version of the buildslave. I'll see what I
can get done this week.

You should start by downloading the buildbot code from buildbot.sf.net and
familizarize yourself with the docs on "how to set up a build slave".

Also, what version of python do you have installed on that machine? Does
NetBSD have kqueue? Does the kqueue reactor work for you? I'll use these
answers to set up the builder configuration.

thanks!
 -Brian



From phil at bubblehouse.org  Tue Dec  2 12:46:16 2003
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 2 Dec 2003 14:46:16 -0500 (EST)
Subject: [Twisted-Python] TwistedJava
Message-ID: <1431.65.246.170.211.1070394376.squirrel@192.168.0.2>

I was just wondering if anyone ( **cough**itamar**cough** ;-) ) has had a
chance to hack out TwistedJava for the new cred framework.

I know it's not a high-demand product, but I could really use it...I've
been looking at the source code and twisted-python's cred code, but i
don't think i'm at a level with twisted to be able to hack it myself.

if there's anything i can do to help expedite the process, i'd be glad to
help.

-phil



From michal at pasternak.w.lub.pl  Tue Dec  2 13:44:28 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 2 Dec 2003 21:44:28 +0100
Subject: [Twisted-Python] Contributing to Twisted
In-Reply-To: <20031202.110745.124402457.warner@lothar.com>
References: <20031202.110745.124402457.warner@lothar.com>
Message-ID: <20031202204428.GA21102@pasternak.w.lub.pl>

Brian Warner [Tue, Dec 02, 2003 at 11:07:45AM -0800]:
> You should start by downloading the buildbot code from buildbot.sf.net and
> familizarize yourself with the docs on "how to set up a build slave".
It's sufficient to cd /usr/pkgsrc/wip/py-buildbot && make install clean :)

> Also, what version of python do you have installed on that machine?
2.3

> Does NetBSD have kqueue? Does the kqueue reactor work for you?
I have NetBSD-stable, which doesn't support it. Kqueue support is in
NetBSD-current, which I don't have installed.

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From vlupien at drummonddesigns.com  Tue Dec  2 14:56:12 2003
From: vlupien at drummonddesigns.com (vicky lupien)
Date: Tue, 2 Dec 2003 16:56:12 -0500
Subject: [Twisted-Python] deferred
Message-ID: <000001c3b91f$1a231f60$687ba8c0@vicky>

I have a problem with deferred.  I have a wmfactory that return the
results of a sql query but sometimes it occurs that the result is an
sql-exception error because it's an insert query and sometimes the data
are already in the database. When this kind of error occurs, the page is
not render and I got an error.
 
Here's what I talking about:
 
class MessagePage(pages.BasePage):
    templateDirectory =
str(os.sep).join([pages.BasePage().templateDirectory])
    templateFile = "message.html"
    
    def initialize(self, theDeferred=None):
         # theDeferred is the results of an sql query of an other page
but at the stage of deferred
        self.theDeferred = theDeferred
            
        
    def wmfactory_theDeferred(self, request):
        return self.theDeferred   #here's where the error occurs.  When
the sql queries is ok everything is fine but when it's an sql exception
it breaks
    
    def wvupdate_message(self, request, widget, data):
        print data  # I don't want to just print the data
(self.deferred) but it's a test to see what's the problem
 
My template:
<html>
            <head>
            </head>
            <body>
                        <br />
                        <br />
                        ALLO
                        <div model="theDeferred" view="message">
                        </div>
            </body>
</html>
 
The error I got when it's an sql exception:
_mysql_exceptions.IntegrityError: (1062, "Duplicate entry '12345' for
key 2")
how can I avoid this error?
 
vicky
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031202/f60e2d1c/attachment.html>

From exarkun at intarweb.us  Tue Dec  2 15:43:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 17:43:05 -0500
Subject: [Twisted-Python] deferred
In-Reply-To: <000001c3b91f$1a231f60$687ba8c0@vicky>
References: <000001c3b91f$1a231f60$687ba8c0@vicky>
Message-ID: <20031202224305.GA3777@intarweb.us>

On Tue, Dec 02, 2003 at 04:56:12PM -0500, vicky lupien wrote:
> I have a problem with deferred.  I have a wmfactory that return the
> results of a sql query but sometimes it occurs that the result is an
> sql-exception error because it's an insert query and sometimes the data
> are already in the database. When this kind of error occurs, the page is
> not render and I got an error.

  Add an errback to the deferred which handles the error in the way you
would like.  For example,

    from twisted.python import log
    def ebSQLInsert(failure):
        failure.trap(MySQLdb.IntegrityError)   # Only handle one error type
        return "The SQL insert failed"

    theDeferred.addErrback(ebSQLInsert)

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/c7f6b2bf/attachment.sig>

From 2002 at weholt.org  Tue Dec  2 15:54:48 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 2 Dec 2003 23:54:48 +0100
Subject: [Twisted-Python] deferred
References: <000001c3b91f$1a231f60$687ba8c0@vicky>
Message-ID: <007901c3b927$50ac2d30$0401a8c0@RAZOR>

Your error has nothing to do with deferred. The error is coming from MySQL and it probably means your trying to insert duplicate values in a primary key field or some other field which must be uniqe in your table.

Thomas


  ----- Original Message ----- 
  From: vicky lupien 
  To: twisted-python at twistedmatrix.com 
  Sent: Tuesday, December 02, 2003 10:56 PM
  Subject: [Twisted-Python] deferred


  I have a problem with deferred.  I have a wmfactory that return the results of a sql query but sometimes it occurs that the result is an sql-exception error because it's an insert query and sometimes the data are already in the database. When this kind of error occurs, the page is not render and I got an error.

   

  Here's what I talking about:

   

  class MessagePage(pages.BasePage):

      templateDirectory = str(os.sep).join([pages.BasePage().templateDirectory])

      templateFile = "message.html"

      

      def initialize(self, theDeferred=None):

           # theDeferred is the results of an sql query of an other page but at the stage of deferred

          self.theDeferred = theDeferred

              

          

      def wmfactory_theDeferred(self, request):

          return self.theDeferred   #here's where the error occurs.  When the sql queries is ok everything is fine but when it's an sql exception it breaks

      

      def wvupdate_message(self, request, widget, data):

          print data  # I don't want to just print the data (self.deferred) but it's a test to see what's the problem

   

  My template:

  <html>

              <head>

              </head>

              <body>

                          <br />

                          <br />

                          ALLO

                          <div model="theDeferred" view="message">

                          </div>

              </body>

  </html>

   

  The error I got when it's an sql exception:

  _mysql_exceptions.IntegrityError: (1062, "Duplicate entry '12345' for key 2")

  how can I avoid this error?

   

  vicky

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031202/b7405378/attachment.html>

From andrew-twisted at puzzling.org  Tue Dec  2 17:26:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 11:26:40 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031202132836.0c370d7a.itamar@itamarst.org>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org>
Message-ID: <20031203002640.GA25233@frobozz>

On Tue, Dec 02, 2003 at 01:28:36PM -0500, Itamar Shtull-Trauring wrote:
> On 02 Dec 2003 17:55:05 +0000
> Martin Waite <martin at datacash.com> wrote:
> 
> > Everything works fine, but I cannot get the application
> > to close down cleanly - it always blocks waiting for the 
> > database threads to stop.
> 
> Instead of having a reader thread, have read tasks that you send to
> thread. That is, don't send one function to callInThread that does a
> while loop, send functions that do one task and then exit.
> 
> Also look at twisted.enterprise.adbapi and the enterprise howto.

Alternatively, have some way to signal to your threads that they should
shutdown cleanly.  I'm assuming your thread does something like:

    while 1:
        nextTask = queue.get()  # queue is a Queue.Queue instance
        process(nextTask)

You could change it to:

    while 1:
        nextTask = queue.get()  # queue is a Queue.Queue instance
        if nextTask is None:
            break
        process(nextTask)

And then all you need to do is make sure you add a None to your threads'
queues when you shutdown, e.g. from stopService.  I've used this method in
the past to shutdown worker threads -- I didn't want them to finish
prematurely, because otherwise there was a risk that the data they were
writing to the DB would get lost.  So I used this sort of explicit
notification, rather than Python's thread.setDaemonic(1).

For reader threads, obviously data loss isn't a problem, so you could just
set those to be daemonic -- although I was creating my threads myself,
rather than using callInThread.  If you use callInThread, do it the way
Itamar suggests: send functions that do their task then exit.  callInThread
maintains a threadpool to service those functions quickly (with a maximum
size to prevent too many running at once).  Otherwise, if you want to do
your own long-running thread, just create it yourself, and you can
setDaemonic on it if appropriate.

-Andrew.




From itamar at itamarst.org  Tue Dec  2 18:09:47 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 20:09:47 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203002640.GA25233@frobozz>
References: <1070387706.1168.205.camel@pascal>
	<20031202132836.0c370d7a.itamar@itamarst.org>
	<20031203002640.GA25233@frobozz>
Message-ID: <20031202200947.3366b145.itamar@itamarst.org>

On Wed, 3 Dec 2003 11:26:40 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> For reader threads, obviously data loss isn't a problem, so you could
> just set those to be daemonic -- although I was creating my threads
> myself,

This is a bad idea. It can cause fun stuff like segfaults on shutdown.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Dec  2 18:38:20 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 12:38:20 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031202200947.3366b145.itamar@itamarst.org>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031202200947.3366b145.itamar@itamarst.org>
Message-ID: <20031203013819.GB25233@frobozz>

On Tue, Dec 02, 2003 at 08:09:47PM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 3 Dec 2003 11:26:40 +1100
> Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> 
> > For reader threads, obviously data loss isn't a problem, so you could
> > just set those to be daemonic -- although I was creating my threads
> > myself,
> 
> This is a bad idea. It can cause fun stuff like segfaults on shutdown.

It can?!  The standard library docs for the threading module give no
indication of this...

(The explicit shutdown request usually feels cleaner to me anyway, but I'm
surprised that calling setDaemon(1) could be dangerous)

-Andrew.




From jsbenson at bensonsystems.com  Tue Dec  2 18:58:35 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Tue, 2 Dec 2003 17:58:35 -0800
Subject: [Twisted-Python] how to best limit a given protocol to one instance (socket connection)?
Message-ID: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>

Hi, I'd like to ensure that only one client can get into my instance of
Protocol. I'm thinking of setting an "instances" attribute on the Factory
and losing the connection if it has already been incremented to 1, but I'm
wondering if there is something more forceful that says "server rejected
connection" that might be a twisted Factory or Protocol configuration
option.

Thanks in advance for any help.





From andrew-twisted at puzzling.org  Tue Dec  2 19:05:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 13:05:08 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203002640.GA25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz>
Message-ID: <20031203020508.GD25233@frobozz>

On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
> 
> You could change it to:
> 
>     while 1:
>         nextTask = queue.get()  # queue is a Queue.Queue instance
>         if nextTask is None:
>             break
>         process(nextTask)

Or as exarkun pointed out on IRC:

<exarkun> reactor.callInThread(itertools.imap, process, iter(queue.get, None))
<exarkun> Where else can you find a generalized one line thread-worker
          implementation?

Although you don't need Twisted for that, you could probably do:

    threading.Thread(target=itertools.imap, args=(process, iter(queue.get, None)))

;)

-Andrew.




From exarkun at intarweb.us  Tue Dec  2 19:10:59 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 21:10:59 -0500
Subject: [Twisted-Python] how to best limit a given protocol to one instance (socket connection)?
In-Reply-To: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>
References: <00ec01c3b940$f7126810$8f0a500a@jsbwxp3>
Message-ID: <20031203021059.GA4679@intarweb.us>

On Tue, Dec 02, 2003 at 05:58:35PM -0800, John Benson wrote:
> Hi, I'd like to ensure that only one client can get into my instance of
> Protocol. I'm thinking of setting an "instances" attribute on the Factory
> and losing the connection if it has already been incremented to 1, but I'm
> wondering if there is something more forceful that says "server rejected
> connection" that might be a twisted Factory or Protocol configuration
> option.

  You could turn off the listening port after the first connection.

    class Factory(ServerFactory):
	port = None
        def buildProtocol(self, addr):
            if self.port is not None:
                self.port.stopListening()
                self.port = None
            else:
                # This is necessary in case multiple
                # connections are made before the call
                # to stopListening above is made.
                return None
            ...


    f = Factory()
    f.port = reactor.listenTCP(port, f)

  This will refuse *almost* all connections after the first.  It is still
possible that two or more might arrive at nearly the same time and both be
accept()'d, but after buildProtocol runs for the first time, no further
connections will be able to be made, as the listening socket will not longer
be listening.

  I'm not sure if there's a way to eliminate the possibility of multiple
connections being made close together.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/2551e868/attachment.sig>

From itamar at itamarst.org  Tue Dec  2 19:12:23 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 21:12:23 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203013819.GB25233@frobozz>
References: <1070387706.1168.205.camel@pascal>
	<20031202132836.0c370d7a.itamar@itamarst.org>
	<20031203002640.GA25233@frobozz>
	<20031202200947.3366b145.itamar@itamarst.org>
	<20031203013819.GB25233@frobozz>
Message-ID: <20031202211223.49ed9955.itamar@itamarst.org>

On Wed, 3 Dec 2003 12:38:20 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> It can?!  The standard library docs for the threading module give no
> indication of this...

Happened to me in Python 2.0. Also note that the "exit thread on
shutdown" behaviour is OS and thread implementation specific, if I'm not
mistaken. Avoid.
 
-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From exarkun at intarweb.us  Tue Dec  2 19:15:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 21:15:01 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203020508.GD25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz>
Message-ID: <20031203021501.GB4679@intarweb.us>

On Wed, Dec 03, 2003 at 01:05:08PM +1100, Andrew Bennetts wrote:
> On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
> > 
> > You could change it to:
> > 
> >     while 1:
> >         nextTask = queue.get()  # queue is a Queue.Queue instance
> >         if nextTask is None:
> >             break
> >         process(nextTask)
> 
> Or as exarkun pointed out on IRC:
> 
> <exarkun> reactor.callInThread(itertools.imap, process, iter(queue.get, None))
> <exarkun> Where else can you find a generalized one line thread-worker
>           implementation?
> 
> Although you don't need Twisted for that, you could probably do:
> 
>     threading.Thread(target=itertools.imap, args=(process, iter(queue.get, None)))
> 

  This makes using threads far, far too easy.  Luckily for everyone, on a
second reading, I don't think these will work.  imap needs something to
iterate the object it returns.  Both of the above solutions will simply
create an itertools.imap object and then do nothing with it :)

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/9a4b757f/attachment.sig>

From bob at redivi.com  Tue Dec  2 19:46:20 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 21:46:20 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203021501.GB4679@intarweb.us>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us>
Message-ID: <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>


On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:

> On Wed, Dec 03, 2003 at 01:05:08PM +1100, Andrew Bennetts wrote:
>> On Wed, Dec 03, 2003 at 11:26:40AM +1100, Andrew Bennetts wrote:
>>>
>>> You could change it to:
>>>
>>>     while 1:
>>>         nextTask = queue.get()  # queue is a Queue.Queue instance
>>>         if nextTask is None:
>>>             break
>>>         process(nextTask)
>>
>> Or as exarkun pointed out on IRC:
>>
>> <exarkun> reactor.callInThread(itertools.imap, process, 
>> iter(queue.get, None))
>> <exarkun> Where else can you find a generalized one line thread-worker
>>           implementation?
>>
>> Although you don't need Twisted for that, you could probably do:
>>
>>     threading.Thread(target=itertools.imap, args=(process, 
>> iter(queue.get, None)))
>>
>
>   This makes using threads far, far too easy.  Luckily for everyone, 
> on a
> second reading, I don't think these will work.  imap needs something to
> iterate the object it returns.  Both of the above solutions will simply
> create an itertools.imap object and then do nothing with it :)

What about list as the function, and itertools.imap as the argument to 
that function?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031202/73f6abd0/attachment-0002.bin>

From itamar at itamarst.org  Tue Dec  2 19:53:36 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 21:53:36 -0500
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
Message-ID: <20031202215336.3f62d869.itamar@itamarst.org>

TwistedJava is an implementation of Perspective Broker for java.

This release is basically identical to 0.6, except it adds a login()
method which supports logging to new style Twisted 1.1 PB servers.

http://itamarst.org/software/twistedjava/

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From andrew-twisted at puzzling.org  Tue Dec  2 20:10:20 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 14:10:20 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com>
Message-ID: <20031203031020.GF25233@frobozz>

On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> 
> On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
> 
> >  This makes using threads far, far too easy.  Luckily for everyone, 
> >on a
> >second reading, I don't think these will work.  imap needs something to
> >iterate the object it returns.  Both of the above solutions will simply
> >create an itertools.imap object and then do nothing with it :)
> 
> What about list as the function, and itertools.imap as the argument to 
> that function?

Or maybe sets.Set?  So long as process always returns the same value
(probably None), this won't eat memory the way list would...

-Andrew.




From phil at bubblehouse.org  Tue Dec  2 20:20:25 2003
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 2 Dec 2003 22:20:25 -0500 (EST)
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
In-Reply-To: <20031202215336.3f62d869.itamar@itamarst.org>
References: <20031202215336.3f62d869.itamar@itamarst.org>
Message-ID: <56478.192.168.0.1.1070421625.squirrel@192.168.0.2>

HOORAY!!!!

thanks itamar!

-phil



> TwistedJava is an implementation of Perspective Broker for java.
>
> This release is basically identical to 0.6, except it adds a login()
> method which supports logging to new style Twisted 1.1 PB servers.
>
> http://itamarst.org/software/twistedjava/
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 



From exarkun at intarweb.us  Tue Dec  2 20:46:27 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 2 Dec 2003 22:46:27 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203031020.GF25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz>
Message-ID: <20031203034627.GA4962@intarweb.us>

On Wed, Dec 03, 2003 at 02:10:20PM +1100, Andrew Bennetts wrote:
> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> > 
> > On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
> > 
> > >  This makes using threads far, far too easy.  Luckily for everyone, 
> > >on a
> > >second reading, I don't think these will work.  imap needs something to
> > >iterate the object it returns.  Both of the above solutions will simply
> > >create an itertools.imap object and then do nothing with it :)
> > 
> > What about list as the function, and itertools.imap as the argument to 
> > that function?
> 
> Or maybe sets.Set?  So long as process always returns the same value
> (probably None), this won't eat memory the way list would...
> 

  Ssssssssssshhhhhhhhhhhh

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031202/cda4de05/attachment.sig>

From golux at comcast.net  Tue Dec  2 20:49:46 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 02 Dec 2003 22:49:46 -0500
Subject: [Twisted-Python] ANN: TwistedJava 0.6.1
In-Reply-To: <20031202215336.3f62d869.itamar@itamarst.org>
References: <20031202215336.3f62d869.itamar@itamarst.org>
Message-ID: <3FCD5D5A.1090107@comcast.net>

Cool!  Thanks, Itamar ... I'm hoping to entice some
Java programmers with whose app my Twisted app
needs to communicate to try this out.  (Okay, we'll
probably do some dumb SOAP stuff first ....)
I like the idea of using PB much better than
any alternative I know of.

Cheers,
Steve.




From itamar at itamarst.org  Tue Dec  2 20:53:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 2 Dec 2003 22:53:25 -0500
Subject: [Twisted-Python] Please try - experimental wxPython reactor
Message-ID: <20031202225325.7bcdde29.itamar@itamarst.org>

Attached is an attempt at making a wxPython reactor, allowing easy
integration of Twisted applications with wxPython. I'm hoping it solves
the issues that the current wx support has. See docstring for usage.

Please, if you have a wxPython/Twisted app, try this out and tell me if
it works.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wxreactor.py
Type: application/octet-stream
Size: 2912 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031202/549d701d/attachment-0002.obj>

From bob at redivi.com  Tue Dec  2 20:58:05 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 2 Dec 2003 22:58:05 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203031020.GF25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz>
Message-ID: <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>


On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>
>> On Dec 2, 2003, at 9:15 PM, Jp Calderone wrote:
>>
>>>  This makes using threads far, far too easy.  Luckily for everyone,
>>> on a
>>> second reading, I don't think these will work.  imap needs something 
>>> to
>>> iterate the object it returns.  Both of the above solutions will 
>>> simply
>>> create an itertools.imap object and then do nothing with it :)
>>
>> What about list as the function, and itertools.imap as the argument to
>> that function?
>
> Or maybe sets.Set?  So long as process always returns the same value
> (probably None), this won't eat memory the way list would...

sets.Set eats more memory than list does (it's a python class that uses 
a dict for storage).. if you don't want to return anything useful 
there's always reduce(lambda a,b:None, iterable)

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031202/607ec0e3/attachment-0002.bin>

From uwe at oss4u.com  Tue Dec  2 22:36:35 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Tue, 2 Dec 2003 21:36:35 -0800
Subject: [Twisted-Python] Please try - experimental wxPython reactor
In-Reply-To: <20031202225325.7bcdde29.itamar@itamarst.org>
References: <20031202225325.7bcdde29.itamar@itamarst.org>
Message-ID: <200312022136.35980.uwe@oss4u.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Itamar,

on a quick look it seems to work. I noticed it's a bit slow on the display 
(client) side. That may probably be tweaked with the timer setting in the 
WxReactor class. My application actually loads a 1.5 MB wx.Xressource file, 
smaller applications might not have that problem. 

I noted that in my app no labels (wx.StaticText) show up. This can be due to 
the timing issue above, or simply because I only quickly disabled my timer 
solution and put the reactor in. I didn't really do a comprehensive test. 
wxreactor needs the latest RC2 and I'm still using pre 1.1.0 - so I certainly 
get a bunch of depreciation warnings.
Whenever I've got time to switch my app over to 1.1.x I'll do more 
comprehensive testing.
At least it doesn't get stuck when entering a modal dialog or a pulldown menu.
I currently just don't have the time/manpower to pull my application to the 
new API. Maybe it's also not the brightest idea to test with a huge 
application (currently some 10 MB sourcecode)
But it's definitely a good start. I'll try using it on smaller projects that I 
can start off with 1.1.x
But it looks very promising to finally have support out of the box.
I'll also give it a shot on windows.

Suggestion: I'll try to tweak the timer settings in the next days. If that 
shows the desired effect, maybe you can parametrize the settings to allow 
tweaking it to application needs.

UC


On Tuesday 02 December 2003 07:53 pm, Itamar Shtull-Trauring wrote:
> Attached is an attempt at making a wxPython reactor, allowing easy
> integration of Twisted applications with wxPython. I'm hoping it solves
> the issues that the current wx support has. See docstring for usage.
>
> Please, if you have a wxPython/Twisted app, try this out and tell me if
> it works.

- --
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (GNU/Linux)

iD8DBQE/zXZjjqGXBvRToM4RAtahAJ9B4XLGFty1dB9V7cAdeo9uhmb1mQCfW0hn
YhovWMPxanVk/3gq+Hb62Rc=
=ZlIn
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Tue Dec  2 23:26:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 3 Dec 2003 17:26:09 +1100
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com>
Message-ID: <20031203062609.GI25233@frobozz>

On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
> >On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
> >>
> >>What about list as the function, and itertools.imap as the argument to
> >>that function?
> >
> >Or maybe sets.Set?  So long as process always returns the same value
> >(probably None), this won't eat memory the way list would...
> 
> sets.Set eats more memory than list does (it's a python class that uses 
> a dict for storage).. if you don't want to return anything useful 
> there's always reduce(lambda a,b:None, iterable)

Uh, not if the iterable returns the same element repeatedly.  Compare the
memory use of:

    sets.Set(itertools.repeat(None))

vs.

    list(itertools.repeat(None))

Your idea with reduce is better -- except that it uses a lambda.  Somehow
that feels like cheating ;)

So, to sum up:

    reactor.callInThread(sets.Set, itertools.imap(process, iter(queue.get, None)))

Or:
    threading.Thread(
        target=sets.Set,
        args=(itertools.imap(process, iter(queue.get, None)),)
    )

Is our generic one-line worker thread?  What about catching possible
exceptions from process?  ;)

-Andrew.




From bob at redivi.com  Wed Dec  3 00:19:33 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 02:19:33 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203062609.GI25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com> <20031203062609.GI25233@frobozz>
Message-ID: <0B388670-2561-11D8-B196-000A95686CD8@redivi.com>


On Dec 3, 2003, at 1:26 AM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
>> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
>>> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>>>
>>>> What about list as the function, and itertools.imap as the argument 
>>>> to
>>>> that function?
>>>
>>> Or maybe sets.Set?  So long as process always returns the same value
>>> (probably None), this won't eat memory the way list would...
>>
>> sets.Set eats more memory than list does (it's a python class that 
>> uses
>> a dict for storage).. if you don't want to return anything useful
>> there's always reduce(lambda a,b:None, iterable)
>
> Uh, not if the iterable returns the same element repeatedly.  Compare 
> the
> memory use of:
>
>     sets.Set(itertools.repeat(None))
>
> vs.
>
>     list(itertools.repeat(None))
>
> Your idea with reduce is better -- except that it uses a lambda.  
> Somehow
> that feels like cheating ;)

Fine, no lambda, cheaper than Set (memory and cpu):
	reactor.callInThread(reduce, {}.get, itertools.imap(process, 
iter(queue.get, None)))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031203/ee20bc13/attachment-0002.bin>

From bob at redivi.com  Wed Dec  3 00:31:04 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 02:31:04 -0500
Subject: [Twisted-Python] daemon thread support
In-Reply-To: <20031203062609.GI25233@frobozz>
References: <1070387706.1168.205.camel@pascal> <20031202132836.0c370d7a.itamar@itamarst.org> <20031203002640.GA25233@frobozz> <20031203020508.GD25233@frobozz> <20031203021501.GB4679@intarweb.us> <E05F4612-253A-11D8-A92F-000A95686CD8@redivi.com> <20031203031020.GF25233@frobozz> <E66CC17A-2544-11D8-A92F-000A95686CD8@redivi.com> <20031203062609.GI25233@frobozz>
Message-ID: <A6ECC27A-2562-11D8-B196-000A95686CD8@redivi.com>


On Dec 3, 2003, at 1:26 AM, Andrew Bennetts wrote:

> On Tue, Dec 02, 2003 at 10:58:05PM -0500, Bob Ippolito wrote:
>> On Dec 2, 2003, at 10:10 PM, Andrew Bennetts wrote:
>>> On Tue, Dec 02, 2003 at 09:46:20PM -0500, Bob Ippolito wrote:
>>>>
>>>> What about list as the function, and itertools.imap as the argument 
>>>> to
>>>> that function?
>>>
>>> Or maybe sets.Set?  So long as process always returns the same value
>>> (probably None), this won't eat memory the way list would...
>>
>> sets.Set eats more memory than list does (it's a python class that 
>> uses
>> a dict for storage).. if you don't want to return anything useful
>> there's always reduce(lambda a,b:None, iterable)
>
> Uh, not if the iterable returns the same element repeatedly.  Compare 
> the
> memory use of:
>
>     sets.Set(itertools.repeat(None))
>
> vs.
>
>     list(itertools.repeat(None))
>
> Your idea with reduce is better -- except that it uses a lambda.  
> Somehow
> that feels like cheating ;)

(ignore my last message that used {}.get -- that breaks on unhashable 
things .. this should be faster anyways)

	reactor.callInThread(reduce, operator.is_, itertools.imap(process, 
iter(queue.get, None)))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031203/09a13b15/attachment-0002.bin>

From nico at tekNico.net  Wed Dec  3 05:20:37 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 03 Dec 2003 13:20:37 +0100
Subject: [Twisted-Python] t.web.proxy ignores response body if no Content-Length
Message-ID: <3FCDD515.1070407@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The connectionLost method of t.web.proxy.ProxyClient neglects to call its
namesake in the t.protocols.http.HTTPClient superclass.

The later thoughtfully calls self.handleResponseEnd() when the connection is
lost; such behaviour is needed as a fallback, when a broken web server (the so
called "Apache Coyote 1.0" inside Jakarta Tomcat 4.0) omits to send a
"Content-Length" header (nor a "Transfer-Encoding" one) with a non-null (and
non-chunked) response body.

Keeping with the old, and always valid, Internet adage:

"Be strict in what you send, and lenient in what you receive"

or some such. :^)

Opened bug #419 in the tracker for this, with one-line patch attached.


- --
"I can think of two reasons for running Windows software.
A: Your fascist employer is a nitwit and approves of nonsense
like Lotus Notes, which oughta be illegal.
B: You're running games." -- Helgi Hrafn Gunnarsson

Nicola Larosa - nico at tekNico.net

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQE/zdUUXv0hgDImBm4RAguXAJ9q46fE/MFFYVFmCIZzKm6DISr1XgCgnPqd
jyMtje1UQbrje8S633G8x9M=
=s0PV
-----END PGP SIGNATURE-----




From lafou at wanadoo.fr  Wed Dec  3 12:54:48 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Wed, 3 Dec 2003 20:54:48 +0100
Subject: [Twisted-Python] deferred
In-Reply-To: <007901c3b927$50ac2d30$0401a8c0@RAZOR>
References: <000001c3b91f$1a231f60$687ba8c0@vicky> <007901c3b927$50ac2d30$0401a8c0@RAZOR>
Message-ID: <200312032054.48364.lafou@wanadoo.fr>

you should read the post again... 

On Tuesday 02 December 2003 23:54, Thomas Weholt wrote:
> Your error has nothing to do with deferred. The error is coming from MySQL
> and it probably means your trying to insert duplicate values in a primary
> key field or some other field which must be uniqe in your table. 
> Thomas
>  
>  




From mporter at despammed.com  Wed Dec  3 15:50:12 2003
From: mporter at despammed.com (Michael Porter)
Date: Wed, 3 Dec 2003 22:50:12 -0000
Subject: [Twisted-Python] Please try - experimental wxPython reactor
References: <20031202225325.7bcdde29.itamar@itamarst.org>
Message-ID: <004601c3b9ef$d0376740$0201a8c0@dan>

I had to get a newer twisted\python\runtime.py from 1.1.1rc2 as I'm running
Twisted 1.1.0 but with that in place it seems to work well with my network
jukebox app.

My wx usage is fairly trivial (just a front-end to configure and run the
server) but I can now bring up the system menu or drag the window about
without the server freezing up!

Thanks,

Mike.


----- Original Message -----
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, December 03, 2003 3:53 AM
Subject: [despammed] [Twisted-Python] Please try - experimental wxPython
reactor


> Attached is an attempt at making a wxPython reactor, allowing easy
> integration of Twisted applications with wxPython. I'm hoping it solves
> the issues that the current wx support has. See docstring for usage.
>
> Please, if you have a wxPython/Twisted app, try this out and tell me if
> it works.
>
> --
> Itamar Shtull-Trauring    http://itamarst.org/
> Available for Python & Twisted consulting
>




From slyphon at twistedmatrix.com  Wed Dec  3 18:48:56 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 03 Dec 2003 20:48:56 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
Message-ID: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>

This may seem obvious to everyone, but I had an insight into the use of
deferreds today. It would always confuse me, I've got a method that's
going to take quite a while to run. When something calls it, i want to
immediately return a deferred. But how to accomplish this? returns (most
frequently) come at the *end* of a function!

I was thinking about it like this (hence my confusion):

def aLongWait(stuff):		# obviously incorrect
    d = defer.Deferred()   
    return d
    result = doSomeStuffHere(stuff)
    d.callback(result)


the little trick I figured out today is as follows:

def aLongWait(stuff):
    d = defer.Deferred()
    def _():
         result = doSomeStuffHere(stuff)
         d.callback(result)
    reactor.callLater(0, _)
    return d

it's almost like a deferred block (in the try/except sense). It creates
a deferred that is (pretty much) guaranteed only to be called by
aLongWait(), it returns that deferred, then in the next reactor
iteration, it runs the steps that will have to wait a long time to be
processed. at the end of doSomeStuffHere() it calls back the deferred
with the result.

Neat huh?

This is going to clean up about 50% of the deferreds i use! (before i
was defining an instance variable deferred and using and resetting it if
i needed another one, which was messy)

Anyway, just adding to the collective knowledge base.

Cheers,
- Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031203/a645a246/attachment.sig>

From bob at redivi.com  Wed Dec  3 19:38:50 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 3 Dec 2003 21:38:50 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <FE2F2E77-2602-11D8-A6E9-000A95686CD8@redivi.com>


On Dec 3, 2003, at 8:48 PM, Jonathan Simms wrote:

> This may seem obvious to everyone, but I had an insight into the use of
> deferreds today. It would always confuse me, I've got a method that's
> going to take quite a while to run. When something calls it, i want to
> immediately return a deferred. But how to accomplish this? returns 
> (most
> frequently) come at the *end* of a function!
>
> I was thinking about it like this (hence my confusion):
>
> def aLongWait(stuff):		# obviously incorrect
>     d = defer.Deferred()
>     return d
>     result = doSomeStuffHere(stuff)
>     d.callback(result)
>
>
> the little trick I figured out today is as follows:
>
> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

That's still totally wrong.  You either need to defer doSomeStuffHere 
to a thread (reactor.callInThread), or refactor "doSomeStuffHere" into 
an iterator that only does a little bit each call.. and then call it 
once a runloop until it's done, and when it's done you do the callback 
with the result.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031203/5554079c/attachment-0002.bin>

From itamar at itamarst.org  Wed Dec  3 19:37:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 3 Dec 2003 21:37:38 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from
 a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031203213738.054df79f.itamar@itamarst.org>

On Wed, 03 Dec 2003 20:48:56 -0500
Jonathan Simms <slyphon at twistedmatrix.com> wrote:

> I was thinking about it like this (hence my confusion):
> 
> def aLongWait(stuff):		# obviously incorrect
>     d = defer.Deferred()   
>     return d
>     result = doSomeStuffHere(stuff)
>     d.callback(result)
> 
> 
> the little trick I figured out today is as follows:
> 
> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

Why is this any different? all it does is make d get its result slightly
afterwards. It doesn't change anything fundemantal. It's virtually
identical to:

def aLongWait(stuff):
    result = doSomeStuffHere(stuff)
    d = defer.Deferred()
    d.callback(result)
    return d

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python & Twisted consulting



From warner at lothar.com  Wed Dec  3 21:42:23 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 03 Dec 2003 20:42:23 -0800 (PST)
Subject: [Twisted-Python] way of dealing with returning a deferred from
 a method/function
Message-ID: <20031203.204223.59466751.warner@lothar.com>

> On Dec 3, 2003, at 8:48 PM, Jonathan Simms wrote:
>
>> This may seem obvious to everyone, but I had an insight into the use of
>> deferreds today. It would always confuse me, I've got a method that's
>> going to take quite a while to run.

It occurred to me that the wording here ("quite a while to run") is
significant, and perhaps we should take a closer look at the Deferred
documentation because it might be fueling some of the confusion surrounding
when and where Deferreds will help you.

 bad language:
   The function takes a long time to run.

 good language:
   The function will not be complete for a long time.
   The operation will not finish right away.

Functions which take a long time to run, like "for i in range(10**10):", are
going to take many seconds of continuous CPU time to finish. To do something
else while it is running means time-slicing (run it in a thread), or
task-switching (break it into pieces and chain them with callLater so that
other events can be processed in between the chunks), or a different form of
task-switching (run the operation in a separate OS process and watch for the
child to exit). These are all fundamentally the same technique, the only
difference is who gets to decide how the CPU cycles are allocated and when
the job-switches take place.


A function which may not be complete for a while, like "waitForUserInput()",
or "waitForWebResponse()", use a little CPU to set up the operation and then
sits around doing nothing until somebody else does something (at least they
do when implemented in the old-style synchronous single-tasking blocking-IO
way). They aren't burning CPU in the meantime: they are waiting for someone
else to burn CPU (the web server, the human thinking about which button they
want to push), or for packets to reach their destination and back, or
whatever. Because the operation is not consuming CPU time, and because you
aren't really sure exactly when the operation is going to be complete, it
feels silly to sit around and do nothing for all that time. This is where
Deferreds are useful. They provide a standard idiom for "tell me when
something happens" callbacks.

The important distinction to make is that, in the Deferred case, the
operation is completed by some *external* event (external to the function
that creates the Deferred, that is). It could be network activity (in which
case the event is when the select loop sees the readable socket and calls
dataReceived()), it could be a callLater timer expiring, it could be some
third piece of code responding to an externality and running your callback,
allowing your Deferred to complete. If the completing activity were performed
by the same code that generated (and then returned) the Deferred, you might
as well just do the entire operation synchronously.


The term "blocking" is frequently used in this context. A function that has
to sort a million numbers will take a long time to run, but it is not usually
described as blocking, because there is no way it could return sooner than
that and still get its job done. A function that sends a packet and
busy-waits until another packet comes back *is* said to be blocking.

It's all a question of terminology :)

 -Brian



From exarkun at intarweb.us  Wed Dec  3 22:21:11 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 00:21:11 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <20031203213738.054df79f.itamar@itamarst.org>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com> <20031203213738.054df79f.itamar@itamarst.org>
Message-ID: <20031204052111.GA9378@intarweb.us>

On Wed, Dec 03, 2003 at 09:37:38PM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 03 Dec 2003 20:48:56 -0500
> Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> 
> > [snip]
> > 
> > def aLongWait(stuff):
> >     d = defer.Deferred()
> >     def _():
> >          result = doSomeStuffHere(stuff)
> >          d.callback(result)
> >     reactor.callLater(0, _)
> >     return d
> 
> Why is this any different? all it does is make d get its result slightly
> afterwards. It doesn't change anything fundemantal. It's virtually
> identical to:
> 
> def aLongWait(stuff):
>     result = doSomeStuffHere(stuff)
>     d = defer.Deferred()
>     d.callback(result)
>     return d
> 

  which is better expressed as:

    def aLongWait(stuff):
        return defer.succeed(doSomeStuffHere(stuff))

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031204/94116f96/attachment.sig>

From rdrb at 123.cl  Thu Dec  4 07:09:36 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 11:09:36 -0300
Subject: [Twisted-Python] Generators as MicroThread and Twisted
Message-ID: <44680e4472dc.4472dc44680e@noborrar.co.cl>

Hi,

Is there any relation between the generators microthread execution idea and the Twisted deffered/reactors schema ?

http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

I'm observing how circle.org.au is reinventing the wheel. It does it very fine, but can be twisted used ? How does one idea relates to the other ? Pro/Cons ?

Thanks.
RodrigoB.




From rdrb at 123.cl  Thu Dec  4 07:21:17 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 11:21:17 -0300
Subject: [Twisted-Python] Twisted inclusion in other software
Message-ID: <442a6b448472.448472442a6b@noborrar.co.cl>

It looks like, but I need to be sure.
Twisted is 99% pure python code. For each optimised C module there is a Python remplacement.

So, it is absolutelly viable to include some Twisted modules directly into another app, eliminating the requirement of "please install www.twistedmatrix.com" ?

For example: twisted.internet and twisted...woven ?

Obviously product references will be explicited in the Readme.

Can this be done ?
Have it be done  ?

Except for Banana application, it is a solution for the distribution and deployement problem ?

Thanks.
RodrigoB.





From exarkun at intarweb.us  Thu Dec  4 09:45:34 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 11:45:34 -0500
Subject: [Twisted-Python] Generators as MicroThread and Twisted
In-Reply-To: <44680e4472dc.4472dc44680e@noborrar.co.cl>
References: <44680e4472dc.4472dc44680e@noborrar.co.cl>
Message-ID: <20031204164534.GA10492@intarweb.us>

On Thu, Dec 04, 2003 at 11:09:36AM -0300, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:
> Hi,
> 
> Is there any relation between the generators microthread execution idea
> and the Twisted deffered/reactors schema ?
> 
> http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

  Not a very strong one.  A subpackage in twisted, flow, uses some similar
ideas, and while using twisted.flow can lead to much simplified code, it is
not widely used throughout Twisted itself.

> 
> I'm observing how circle.org.au is reinventing the wheel. It does it very
> fine, but can be twisted used ? How does one idea relates to the other ?
> Pro/Cons ?

  I can't resolve this domain name...

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031204/660a307a/attachment.sig>

From exarkun at intarweb.us  Thu Dec  4 09:48:45 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 4 Dec 2003 11:48:45 -0500
Subject: [Twisted-Python] Twisted inclusion in other software
In-Reply-To: <442a6b448472.448472442a6b@noborrar.co.cl>
References: <442a6b448472.448472442a6b@noborrar.co.cl>
Message-ID: <20031204164845.GB10492@intarweb.us>

On Thu, Dec 04, 2003 at 11:21:17AM -0300, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:
> It looks like, but I need to be sure.
> Twisted is 99% pure python code. For each optimised C module there is a Python remplacement.
> 
> So, it is absolutelly viable to include some Twisted modules directly into
> another app, eliminating the requirement of "please install
> www.twistedmatrix.com" ?
> 
> For example: twisted.internet and twisted...woven ?
> 
> Obviously product references will be explicited in the Readme.
> 
> Can this be done ?
> Have it be done  ?

  Sure, there is no problem distributed Twisted with another project.  I
think that, even if Twisted did depend on C extensions (which, as you
pointed out, it does not), it could be distributed with an application which
depended on it.

  Do I know of any projects that do this?  Hmmm.  Not really... I can think
of one that gives you the option to download an install Twisted
(automatically) during its own installation process, but that's all.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031204/ff192620/attachment.sig>

From fdrake at acm.org  Thu Dec  4 10:05:27 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Thu, 4 Dec 2003 12:05:27 -0500
Subject: [Twisted-Python] Example of FTPClient.stor()?
Message-ID: <16335.26967.282893.977777@grendel.fdrake.net>

Does anyone have a (short) example using FTPClient.stor()?  I'm pretty
new to Twisted, and am still getting the hang of the model of using
Deferreds.

(The presence of both stor() and storeFile() in the docs is confusing
as well; a quick glance through twisted.protocols.ftp's source makes
me think that stor() is the preferred name, and storeFile() is an
implementation detail.  Is that right?)

Thanks!


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From bob at redivi.com  Thu Dec  4 10:32:00 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 4 Dec 2003 12:32:00 -0500
Subject: [Twisted-Python] Generators as MicroThread and Twisted
In-Reply-To: <44680e4472dc.4472dc44680e@noborrar.co.cl>
References: <44680e4472dc.4472dc44680e@noborrar.co.cl>
Message-ID: <C4CC741B-267F-11D8-A6E9-000A95686CD8@redivi.com>


On Dec 4, 2003, at 9:09 AM, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Is there any relation between the generators microthread execution 
> idea and the Twisted deffered/reactors schema ?
>
> http://www-106.ibm.com/developerworks/linux/library/l-pythrd.html

You can integrate a "generator microthread" into Twisted (with 
appropriate wrappers).  One of these wrappers is twisted.flow.

> I'm observing how circle.org.au is reinventing the wheel. It does it 
> very fine, but can be twisted used ? How does one idea relates to the 
> other ? Pro/Cons ?

circle.org.au?  I have no idea what you're talking about.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031204/89f383ad/attachment-0002.bin>

From oisin at enginesofcreation.ie  Thu Dec  4 10:20:30 2003
From: oisin at enginesofcreation.ie (Oisin Mulvihill)
Date: Thu, 04 Dec 2003 17:20:30 +0000
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <16335.26967.282893.977777@grendel.fdrake.net>
References: <16335.26967.282893.977777@grendel.fdrake.net>
Message-ID: <3FCF6CDE.7040604@enginesofcreation.ie>

Fred L. Drake, Jr. wrote:

>Does anyone have a (short) example using FTPClient.stor()?  I'm pretty
>new to Twisted, and am still getting the hang of the model of using
>Deferreds.
>
>(The presence of both stor() and storeFile() in the docs is confusing
>as well; a quick glance through twisted.protocols.ftp's source makes
>me think that stor() is the preferred name, and storeFile() is an
>implementation detail.  Is that right?)
>
>Thanks!
>
>
>  -Fred
>
>  
>
Hi Fred,

I had trouble grappling with this  as well. As far as I remember stro() 
just refers to
the storeFile() function in the code.

Attached should be an example of the final solution I came up with to do 
a storeFile().

Hopefully this is of some use to you.

All the best,

om



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ftpclient.py
URL: </pipermail/twisted-python/attachments/20031204/d43a4251/attachment.ksh>

From fdrake at acm.org  Thu Dec  4 10:57:49 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Thu, 4 Dec 2003 12:57:49 -0500
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <3FCF6CDE.7040604@enginesofcreation.ie>
References: <16335.26967.282893.977777@grendel.fdrake.net>
	<3FCF6CDE.7040604@enginesofcreation.ie>
Message-ID: <16335.30109.255125.794299@grendel.fdrake.net>

Oisin Mulvihill writes:
 > I had trouble grappling with this  as well. As far as I remember stro() 
 > just refers to
 > the storeFile() function in the code.

In the FTPClient implementation, yes.  It doesn't exist in IFTPShell
or FTPAnonymousShell though, which is what makes me think that it is
either a legacy name for the method maintained for backward
compatibility (in which case a comment would clarify immensely), or an
accident of implementation (in which case the storeFile() name can
probably be removed or documented differently).  If neither of those
is the case, then it needs better documentation.

 > Attached should be an example of the final solution I came up with to do 
 > a storeFile().
 > 
 > Hopefully this is of some use to you.

Thanks!  I'll take a look at your client code.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From matthew.s.hegedus at lmco.com  Thu Dec  4 11:03:19 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Thu, 04 Dec 2003 12:03:19 -0600
Subject: [Twisted-Python] Using Twisted in a network project
Message-ID: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>

Howdy all,

Here's my problem: I'm in a situation where applications on a LAN need to be
able to transmit UDP packets to other apps on the same LAN and on other LANS
acroos the WAN. On the WAN there may be many routers in between that are not
configured for multicast and cannot be reconfigured by users interested in
multicasting. So multicast is out, and we are left with broadcast and
point-to-point transmissions. For performance concerns, it's not viable to
have each application do a point-to-point transmission to all other apps
that are not on the same subnet. So I am left with a
broadcast/point-to-point compromise.

My potential solution: Have a system (let's call it "Custom Router X")
sitting on each LAN with the apps running. Custom Router 1's purpose will be
to run code that grabs the applications' broadcasted UDP packets off of the
LAN, send the UDP packets point-to-point to Custom Router 2..N (where N is
the number of non-local LANS where these interesting apps are running) on
the non-local LANS, and listen for point-to-point UDP packets to
re-broadcast locally received from any of the other Custom Router's.

I would like to use Twisted if I could to write the code running on these
Custom Routers to achieve what I've described. 

Question #1: Does this idea sound rediculous?
Question #2: If so, does anyone have any better suggestions?
Question #3: If this idea is reasonable in theory, should I be worried about
Twisted/Python network performance?

Thank you and Gigem,

Matthew



From mporter at despammed.com  Thu Dec  4 14:13:22 2003
From: mporter at despammed.com (Michael Porter)
Date: Thu, 4 Dec 2003 21:13:22 -0000
Subject: [Twisted-Python] Twisted inclusion in other software
References: <442a6b448472.448472442a6b@noborrar.co.cl>
Message-ID: <004101c3baab$7c78a080$0201a8c0@dan>

My network jukebox app, mpJuke (http://www.mpweb.dsl.pipex.com/) does this.
I package up Twisted and a number of other Python packages and 'freeze' them
using cx_Freeze so that the end-user doesn't need to install anything extra
(even Python).

I've only done this on Windows but it should work just as well on Unix.

Mike.

----- Original Message -----
From: "RITA Y/O RODRIGO DIAZ Y/O BENENSON" <rdrb at 123.cl>
To: <twisted-python at twistedmatrix.com>
Sent: Thursday, December 04, 2003 2:21 PM
Subject: [despammed] [Twisted-Python] Twisted inclusion in other software


> It looks like, but I need to be sure.
> Twisted is 99% pure python code. For each optimised C module there is a
Python remplacement.
>
> So, it is absolutelly viable to include some Twisted modules directly into
another app, eliminating the requirement of "please install
www.twistedmatrix.com" ?
>
> For example: twisted.internet and twisted...woven ?
>
> Obviously product references will be explicited in the Readme.
>
> Can this be done ?
> Have it be done  ?
>
> Except for Banana application, it is a solution for the distribution and
deployement problem ?
>
> Thanks.
> RodrigoB.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> ----------------------------------------------
> Filtered by despammed.com.  Tracer: JAA257401070549977
> Consider a PayPal donation to help Despammed
> stay a step or two ahead of the bad guys.
> A new PayPal donation button is now on the
> home page.  Thanks!
>




From warner at lothar.com  Thu Dec  4 14:43:57 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 04 Dec 2003 13:43:57 -0800 (PST)
Subject: [Twisted-Python] Using Twisted in a network project
Message-ID: <20031204.134357.118735369.warner@lothar.com>

"Hegedus, Matthew S" <matthew.s.hegedus at lmco.com> writes:

> I would like to use Twisted if I could to write the code running on these
> Custom Routers to achieve what I've described. 

Sounds perfectly reasonable. That's the same approach used by standard IPv4
multicast routers. Most of the multicast routing protocols are concerned with
optimizing a tree of possible sources and members: your design simplifies
that to a single source and a strict two-level hierarchy (level 1 are the
distant gateway router, level 2 is the set of remote endpoints), which should
remove much of the complexity from those protocols.

You'll need to implement a protocol from the end point to their local
"router" (a host that can multicast to the end point and which is running
your router program) which says "I want to join group X". That router then
needs a protocol to the data source to say "somebody behind me wants to join
group X, please sign me up".

It will probably be easier to have the original data source do both the local
multicast and the series of remote-router UDP unicasts. (I'm assuming you're
writing the code on that end too). You can have a local-router too, but then
you have to coordinate an additional host.

Think of things in terms of trees of subscriptions. You probably have
reasonable multicast support within your local subnet (most OSes ship with
multicast-capable IP stacks), so use it (i.e. don't broadcast your local data
packets, because then you'll waste the time and interrupts of all the local
non-participating nodes). The data source should pick a multicast group
address, everyone local should join that group (the IP stack and the ethernet
hardware will take care of the details), the local router can join it too.
You'll need some kind of service advertisement so the remote routers and
remote nodes can know which groups they can join.

> Question #3: If this idea is reasonable in theory, should I be worried about
> Twisted/Python network performance?

Depends upon how much data you're sending and what kind of connection you
have to the outside world. Unless you've got a really nice pipe, it is likely
that Twisted running on reasonable hardware will be able to saturate it. The
local traffic is all multicast (one packet on the wire each), the remote
traffic to N remote routers is unicast (N packets on the wire each), so the
number of packets that your userspace code has to deal with is N+1 each, and
your upstream bandwidth has to handle N of those. Once you've got more than
two or three remote routers, N/(N+1) goes to 1 and Twisted doesn't have to
run any faster than it takes to saturate your upsteam pipe.

If you live on an OC-48 or something then you can set up multiple local
routers and have them decide amongst themselves which one should be
responsible for sending to each remote router.

sounds like fun,
 -Brian



From rdrb at 123.cl  Thu Dec  4 19:10:04 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 04 Dec 2003 23:10:04 -0300
Subject: [Twisted-Python] The circle
Message-ID: <47294c474022.47402247294c@noborrar.co.cl>

Sorry,
the microthread usage was thinked to be used in,

http://thecircle.org.au

(not circle.org.au as mentioned)
(take a look, you could like it)


I think twisted.flow is very near from the original idea.

Thanks.
RodrigoB.





From bob at redivi.com  Thu Dec  4 20:15:45 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 4 Dec 2003 22:15:45 -0500
Subject: [Twisted-Python] The circle
In-Reply-To: <47294c474022.47402247294c@noborrar.co.cl>
References: <47294c474022.47402247294c@noborrar.co.cl>
Message-ID: <50DA0229-26D1-11D8-9690-000A95686CD8@redivi.com>


On Dec 4, 2003, at 9:10 PM, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Sorry,
> the microthread usage was thinked to be used in,
>
> http://thecircle.org.au
>
> (not circle.org.au as mentioned)
> (take a look, you could like it)
>
>
> I think twisted.flow is very near from the original idea.

Yeah, too bad you can't download or look at the CVS.  Savannah is down.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031204/aa8a225c/attachment-0002.bin>

From andrew-twisted at puzzling.org  Thu Dec  4 20:27:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 5 Dec 2003 14:27:56 +1100
Subject: [Twisted-Python] Example of FTPClient.stor()?
In-Reply-To: <16335.30109.255125.794299@grendel.fdrake.net>
References: <16335.26967.282893.977777@grendel.fdrake.net> <3FCF6CDE.7040604@enginesofcreation.ie> <16335.30109.255125.794299@grendel.fdrake.net>
Message-ID: <20031205032756.GA452@frobozz>

On Thu, Dec 04, 2003 at 12:57:49PM -0500, Fred L. Drake, Jr. wrote:
> 
> Oisin Mulvihill writes:
>  > I had trouble grappling with this  as well. As far as I remember stro() 
>  > just refers to
>  > the storeFile() function in the code.
> 
> In the FTPClient implementation, yes.  It doesn't exist in IFTPShell
> or FTPAnonymousShell though, which is what makes me think that it is
> either a legacy name for the method maintained for backward
> compatibility (in which case a comment would clarify immensely), or an
> accident of implementation (in which case the storeFile() name can
> probably be removed or documented differently).  If neither of those
> is the case, then it needs better documentation.

Currently the FTPClient and FTP (server) implementations don't share any
code (although ftp.py recently got a new maintainer, Jonathan Simms, who is
working on fixing this), so there's not much you can usefully infer by
comparing the server and client implementations at the moment. :/

I wrote the bulk of the FTPClient code, and if I recall correctly, I think I
intended 'storeFile' to be the preferred name, and 'stor' to be an alias for
people who know about the details of how FTP looks on the wire, or who were
already familiar with the standard library's ftplib.  In retrospect, I'm not
sure this was a good decision.

The implementation of stor is simply:

    stor = storeFile

so it doesn't matter which name you choose.

I think we should probably decide which name is preferred, clearly document
it, and deprecate the other one.  The same applies to retr/retrieveFile.

>  > Attached should be an example of the final solution I came up with to do 
>  > a storeFile().
>  > 
>  > Hopefully this is of some use to you.
> 
> Thanks!  I'll take a look at your client code.

Also, look twisted/test/test_ftp.py -- there's a testStor method in there
somewhere...

...well, there was.  Hmm.  CVS to the rescue:
    
    http://cvs.twistedmatrix.com/cvs/*checkout*/twisted/test/test_ftp.py?rev=1.32&content-type=text/plain

Jonathan -- what happened to testStor?

-Andrew.




From jsbenson at bensonsystems.com  Thu Dec  4 21:15:44 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Thu, 4 Dec 2003 20:15:44 -0800
Subject: [Twisted-Python] having trouble displaying Tkinter photo images with twisted, help?
Message-ID: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>

The following toy program has no trouble displaying a GIF image:

from twisted.internet import protocol, reactor, tksupport
import Tkinter
class FingerProtocol(protocol.Protocol):
    pass
class FingerFactory(protocol.ServerFactory):
    protocol = FingerProtocol
root = Tkinter.Tk()
tksupport.install(root)
iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
Tkinter.Button(image=iconimage).pack()
reactor.listenTCP(1079, FingerFactory())
reactor.run()

However, I have a larger program that gets a blank image when the

iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
Tkinter.Button(image=iconimage).pack()

code runs. I've tried moving the code around and come up with the same
result: no image, although a widget is created and displayed as a blank
area.

Has anyone run across this before, and is there a workaround?





From pje at telecommunity.com  Fri Dec  5 07:57:07 2003
From: pje at telecommunity.com (Phillip J. Eby)
Date: Fri, 05 Dec 2003 09:57:07 -0500
Subject: [Twisted-Python] PyProtocols 0.9.2 Bug fix release
Message-ID: <5.1.0.14.0.20031205095450.02a75260@mail.telecommunity.com>

I goofed, missing a unit test for one of the new features: 
'protocols.Variation' was broken in the 0.9.1 release.  0.9.2 fixes the 
bug.  Sorry for the inconvenience.


PyProtocols Resources
---------------------

* Project home page:
    http://peak.telecommunity.com/PyProtocols.html

* Detailed Changes since the 0.9 release:
    http://peak.telecommunity.com/protocol_api/CHANGES.txt.html

* Release notes, installation instructions, and browsable API docs:
    http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
    http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
    http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
    http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
    http://cvs.eby-sarna.com/PyProtocols/ 




From exarkun at intarweb.us  Fri Dec  5 09:48:13 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 5 Dec 2003 11:48:13 -0500
Subject: [Twisted-Python] having trouble displaying Tkinter photo images with twisted, help?
In-Reply-To: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>
References: <015501c3bae6$75a13750$8f0a500a@jsbwxp3>
Message-ID: <20031205164813.GA14468@intarweb.us>

On Thu, Dec 04, 2003 at 08:15:44PM -0800, John Benson wrote:
> The following toy program has no trouble displaying a GIF image:
> 
> from twisted.internet import protocol, reactor, tksupport
> import Tkinter
> class FingerProtocol(protocol.Protocol):
>     pass
> class FingerFactory(protocol.ServerFactory):
>     protocol = FingerProtocol
> root = Tkinter.Tk()
> tksupport.install(root)
> iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
> Tkinter.Button(image=iconimage).pack()
> reactor.listenTCP(1079, FingerFactory())
> reactor.run()
> 
> However, I have a larger program that gets a blank image when the
> 
> iconimage = Tkinter.PhotoImage(master=root, file='buzzard.gif')
> Tkinter.Button(image=iconimage).pack()
> 
> code runs. I've tried moving the code around and come up with the same
> result: no image, although a widget is created and displayed as a blank
> area.
> 
> Has anyone run across this before, and is there a workaround?
> 

  Just a guess - if the PhotoImage is garbage collected (No, the Button does
not hold a reference to it), the image data is freed and will
consequentially not be available for display.  Perhaps you need to stash a
reference to the PhotoImage somewhere?

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031205/496a74c8/attachment.sig>

From glyph at twistedmatrix.com  Fri Dec  5 11:35:51 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 05 Dec 2003 13:35:51 -0500
Subject: [Twisted-Python] having trouble displaying Tkinter photo images
 with twisted, help?
In-Reply-To: <20031205164813.GA14468@intarweb.us>
References: <015501c3bae6$75a13750$8f0a500a@jsbwxp3> <20031205164813.GA14468@intarweb.us>
Message-ID: <3FD0D007.8090807@twistedmatrix.com>

Jp Calderone wrote:

>   Just a guess - if the PhotoImage is garbage collected (No, the Button does
> not hold a reference to it), the image data is freed and will
> consequentially not be available for display.  Perhaps you need to stash a
> reference to the PhotoImage somewhere?

Yeah, that's a well-known bug with Tkinter's image support.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 256 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031205/665ca119/attachment.sig>

From ejy712 at comcast.net  Fri Dec  5 16:01:53 2003
From: ejy712 at comcast.net (Ed Young)
Date: Fri, 05 Dec 2003 18:01:53 -0500
Subject: [Twisted-Python] No connectionLost
Message-ID: <3FD10E61.1040400@comcast.net>

I am developing an asynchronous messaging application.  I was testing it 
today with a colleague over a vpn.  The vpn went down.  But the twisted 
connection looked like it stayed up.  I was expecting a connectionLost() 
call.  It never came.  When the vpn was recovered the transfer did not 
continue.

Is this expected behavior?  What can I do to avoid this problem?

BTW - twisted absolutely rocks!  Performance is great.  And the 
interface is very well thought out.  Thanks...




From glyph at twistedmatrix.com  Fri Dec  5 17:25:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 05 Dec 2003 19:25:27 -0500
Subject: [Twisted-Python] No connectionLost
In-Reply-To: <3FD10E61.1040400@comcast.net>
References: <3FD10E61.1040400@comcast.net>
Message-ID: <3FD121F7.60501@twistedmatrix.com>

Ed Young wrote:

> Is this expected behavior?

Yep.  TCP is weird that way.  If you waited long enough you probably 
would have gotten the connectionLost to happen.

 > What can I do to avoid this problem?

Use a protocol that has keep-alive packets.  If you send data over the 
connection every so often and require that it comes back in a certain 
amount of time, you can terminate the connection if the link gets 
unacceptably unresponsive.

Alternatively, call self.transport.setTcpKeepAlive(True) from your protocol.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 256 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031205/128e3b72/attachment.sig>

From warner at lothar.com  Fri Dec  5 17:38:06 2003
From: warner at lothar.com (Brian Warner)
Date: Fri, 05 Dec 2003 16:38:06 -0800 (PST)
Subject: [Twisted-Python] No connectionLost
Message-ID: <20031205.163806.58129207.warner@lothar.com>

> Is this expected behavior?  What can I do to avoid this problem?

Yes. Twisted applications (indeed all endpoints communicating over
packet-switched networks) have no way to know about connections that are
broken somewhere in the middle. If the remote program is terminated, their
kernel will probably send you a TCP FIN to shutdown the connection. If your
end terminates then you know your connection is lost. But the only way to
detect that something in the middle has gone away is to notice that the
remote system is not getting your packets.

The key thing to pay attention to is that there is no "connection" as such.
There are two endpoints which may or may not hold the same beliefs about
their ability to communicate, and any individual packet may or may not arrive
at its destination.

The standard technique to deal with this (and try to maintain the illusion of
"connection") this is with pings that must be acknowleged. The default TCP
socket usually shuts down after transmitted data has been outstanding
(unacknowleged) for a while (10s of minutes? maybe an hour?), but if there is
no data being transmitted then you may never discover that the connection is
no longer useable.

You can turn on TCP Keepalives with a socket option, which causes a probe to
be sent after some period of inactivity (two hours on my system). When this
probe goes unacknowleged for a while (same as regular data), the connection
is declared dead. This will cause the same kind of connectionLost
notification as happens when the remote program terminates and their kernel
tells you about the socket being closed.

You can add code to your protocol to make additional pings on a regular
basis, and then establish timeouts which manually drop the connection if they
are not acknowleged in time. You will need to make a tradeoff between extra
traffic and the latency that will go by before you detect the connection has
gone away (to detect a lost connection within 60 seconds, you must send some
data every 60 seconds). With shorter timeouts you also run the risk of
false-shutdowns, where the app overreacts to a temporary network outage.

Practically speaking, most connections run over fairly reliable networks, and
programs crash/quit much more frequently than intermediate routers. So the
"connection lost" FIN packet is usually good enough. With a VPN providing
additional routing complexity in the middle, that assumption doesn't hold up
so well.

hope that helps,
 -Brian



From michal at pasternak.w.lub.pl  Fri Dec  5 18:30:53 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sat, 6 Dec 2003 02:30:53 +0100
Subject: [Twisted-Python] pb.Viewable gets None as client argument.
Message-ID: <20031206013053.GB1037@pasternak.w.lub.pl>

I've got a client, I've got a server. They exchange data without problems,
one of the procedures the client is calling sends references to pb.Viewable
to all other connected clients. If those clients do callRemote() on the
received results, the client parameter is None at the server side. Any ideas
how to fix it?

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From rahul at reno.cis.upenn.edu  Fri Dec  5 20:28:56 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Fri, 5 Dec 2003 22:28:56 -0500
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
Message-ID: <200312060328.hB63SuS14972@reno.cis.upenn.edu>

Hi Folks,
I have the following need. My program acts as a xmlrpc client using
the Proxy class, peeking at the top of a stack to find its payload. It gets
the payload by peeking and then sends it out on the network. What I want
to do, if the send was successful, is to pop the stack, and if not successful,
to resend the payload. Since callback and errback only tahe the succesful
response(message) or failure instance respectively as an argument, how do
I do this, as I am not able to access the stack inside these functions,
(I cant use a module global, as each program has multiple stack instances,
and i need to pass a particular one).

Am i missing something?

Thanks a lot,
Rahul




From andrew-twisted at puzzling.org  Fri Dec  5 20:43:05 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 6 Dec 2003 14:43:05 +1100
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
In-Reply-To: <200312060328.hB63SuS14972@reno.cis.upenn.edu>
References: <200312060328.hB63SuS14972@reno.cis.upenn.edu>
Message-ID: <20031206034305.GD1500@frobozz>

On Fri, Dec 05, 2003 at 10:28:56PM -0500, rahul at reno.cis.upenn.edu wrote:
> Hi Folks,
> I have the following need. My program acts as a xmlrpc client using
> the Proxy class, peeking at the top of a stack to find its payload. It gets
> the payload by peeking and then sends it out on the network. What I want
> to do, if the send was successful, is to pop the stack, and if not successful,
> to resend the payload. Since callback and errback only tahe the succesful
> response(message) or failure instance respectively as an argument, how do
> I do this, as I am not able to access the stack inside these functions,
> (I cant use a module global, as each program has multiple stack instances,
> and i need to pass a particular one).
> 
> Am i missing something?

I think what you are looking for is:

     d.addCallback(cb, extraArg1, extraArg2)  # etc

which will be called as

     cb(result, extraArg1, extraArg2)

E.g.:

>>> from twisted.internet.defer import Deferred
>>> d = Deferred()
>>> def cb(result, foo):
...     print result * 2, foo
... 
>>> d.addCallback(cb, 'Hey!')
<Deferred at 0x401e5a6c>
>>> d.callback(5)
10 Hey!


[Glancing at http://twistedmatrix.com/documents/howto/defer, it does mention
 this in passing, but it doesn't give any examples or make it clear.  If you
 read the section on "Basic Callback Functions"
 (http://twistedmatrix.com/documents/howto/defer#auto9) carefully, and you
 know what you're looking for, it does describe this feature.]

-Andrew.




From rahul at reno.cis.upenn.edu  Fri Dec  5 21:36:04 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Fri, 5 Dec 2003 23:36:04 -0500
Subject: [Twisted-Python] passing data in callbacks or errbacks of deferreds
In-Reply-To: <20031206034305.GD1500@frobozz>; from andrew-twisted@puzzling.org on Sat, Dec 06, 2003 at 02:43:05PM +1100
References: <200312060328.hB63SuS14972@reno.cis.upenn.edu> <20031206034305.GD1500@frobozz>
Message-ID: <20031205233604.A15087@reno.cis.upenn.edu>

Andrew,
Thanks! For some reason I missed it completely in the defer document. Someone
run me over with a large truck!

The program I am writing is a general astronomy data analysis pipeline system,
with a workflow similar to BPELWS, but way simpler, and multiprotocol.
Twisted just makes that very easy. The exact reason for http based xmlrpc
is that some of the peers on this pipeline have very poor networking
(our telescopes being at 9500 ft in Taiwan's central mountains..), and thats
why I need to be able to back off on messages and persist messages if necessary.

My current program mixes twisted and threads, mostly because I havent grokked
twisted zen yet. But I intend to, ofcourse, and the next task will
be protocolozing stack access so that new additions to the stack can be treated
as events. 

Thanks for helping me along..and also big thanks to the author of "Twisted From Scratch"
Rahul
On Sat, Dec 06, 2003 at 02:43:05PM +1100, Andrew Bennetts wrote:
> On Fri, Dec 05, 2003 at 10:28:56PM -0500, rahul at reno.cis.upenn.edu wrote:
> > Hi Folks,
> > I have the following need. My program acts as a xmlrpc client using
> > the Proxy class, peeking at the top of a stack to find its payload. It gets
> > the payload by peeking and then sends it out on the network. What I want
> > to do, if the send was successful, is to pop the stack, and if not successful,
> > to resend the payload. Since callback and errback only tahe the succesful
> > response(message) or failure instance respectively as an argument, how do
> > I do this, as I am not able to access the stack inside these functions,
> > (I cant use a module global, as each program has multiple stack instances,
> > and i need to pass a particular one).
> > 
> > Am i missing something?
> 
> I think what you are looking for is:
> 
>      d.addCallback(cb, extraArg1, extraArg2)  # etc
> 
> which will be called as
> 
>      cb(result, extraArg1, extraArg2)
> 
> E.g.:
> 
> >>> from twisted.internet.defer import Deferred
> >>> d = Deferred()
> >>> def cb(result, foo):
> ...     print result * 2, foo
> ... 
> >>> d.addCallback(cb, 'Hey!')
> <Deferred at 0x401e5a6c>
> >>> d.callback(5)
> 10 Hey!
> 
> 
> [Glancing at http://twistedmatrix.com/documents/howto/defer, it does mention
>  this in passing, but it doesn't give any examples or make it clear.  If you
>  read the section on "Basic Callback Functions"
>  (http://twistedmatrix.com/documents/howto/defer#auto9) carefully, and you
>  know what you're looking for, it does describe this feature.]
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From slyphon at twistedmatrix.com  Sat Dec  6 04:23:23 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Sat, 06 Dec 2003 06:23:23 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from
	a method/function
In-Reply-To: <20031204052111.GA9378@intarweb.us>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
	 <20031203213738.054df79f.itamar@itamarst.org>
	 <20031204052111.GA9378@intarweb.us>
Message-ID: <1070709803.12455.93.camel@willie-the-pimp.embassynetworks.com>

On Thu, 2003-12-04 at 00:21, Jp Calderone wrote:
> On Wed, Dec 03, 2003 at 09:37:38PM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 03 Dec 2003 20:48:56 -0500
> > Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > 
> > > [snip]
> > > 
> > > def aLongWait(stuff):
> > >     d = defer.Deferred()
> > >     def _():
> > >          result = doSomeStuffHere(stuff)
> > >          d.callback(result)
> > >     reactor.callLater(0, _)
> > >     return d
> > 
> > Why is this any different? all it does is make d get its result slightly
> > afterwards. It doesn't change anything fundemantal. It's virtually
> > identical to:
> > 
> > def aLongWait(stuff):
> >     result = doSomeStuffHere(stuff)
> >     d = defer.Deferred()
> >     d.callback(result)
> >     return d
> > 
> 
>   which is better expressed as:
> 
>     def aLongWait(stuff):
>         return defer.succeed(doSomeStuffHere(stuff))
> 
>   Jp

DOH!

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031206/b9aba44d/attachment.sig>

From sam at SpinwardStars.com  Sat Dec  6 11:00:30 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sat, 06 Dec 2003 11:00:30 -0700
Subject: [Twisted-Python] Help with child Resources
Message-ID: <5.2.0.9.0.20031206104247.03110a50@pop.mindspring.com>

<newbie-alert />

I'm trying to serve a resource with child resources within
a subdirectory of a directory served via "mktap web".

The url http://mydomain/myPath properly serves the root
resource, RootResource, from index.rpy.

The url http://mydomain/myPath/mysub returns
"404 - No Such Resource".

My resource classes and index.rpy are defined in the
attached files.

I tried changing isLeaf to 1 in RootResource, to force
the render method to be called instead of attempting to
find the sub-resource, but got the same result, so I
suspect that the search for the sub-path resource is
happening before RootResource is reached.

I suspect I've missed something relatively simple, but
I'm new to Twisted. Can someone point out what I'm
doing wrong?

Thanks.

- Sam


-------------- next part --------------
from twisted.web import resource

def DEBUG_RENDER( cls, request ):
	tmpl = "<html>" \
		"class = %s<br />" \
		"prepath = %s<br />" \
		"postpath = %s<br />" \
		"</html>"
	return tmpl % (cls.__name__, request.prepath, request.postpath)

class SubResource( resource.Resource ):
    # No children
    isLeaf = 1
    
    def render(self, request):
    	return DEBUG_RENDER( self.__class__, request )

class RootResource( resource.Resource ):
    # Has children
    isLeaf = 0
    
    def render(self, request):
    	return DEBUG_RENDER( self.__class__, request )
    
    def getChild(self, path, request):
        if path == '':
            return self
        if path == 'mysub':
            return SubResource()
        
        # Terminal condition: don't recognize the name.
        return error.NoResource("No such child resource '" + name + "'")

resource = RootResource()

From sam at SpinwardStars.com  Sat Dec  6 11:40:40 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sat, 06 Dec 2003 11:40:40 -0700
Subject: [Twisted-Python] Re: Help with child Resources
Message-ID: <5.2.0.9.0.20031206113551.00a95918@pop.mindspring.com>

I figured it out. I made 2 mistakes.

1. I arranged the files as
       siteroot/
          mytest/
             index.rpy
2. I used "--ignore-ext rpy" instead of "--ignore-ext .rpy"
    with mktap web. (Note the missing period.)

When I use "--ignore-ext .rpy" and arrange the files as ...
       siteroot/
          mytest.rpy
...it returns what I expect for both http://mydomain/mytest
and http://mydomain/mytest/mysub.

- Sam





From rdrb at 123.cl  Sat Dec  6 14:05:28 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Sat, 06 Dec 2003 18:05:28 -0300
Subject: [Twisted-Python] The Circle now aviable
Message-ID: <4bca604bd1dc.4bd1dc4bca60@noborrar.co.cl>

Hi,
now there is a mirror of the Circle (for linux users, GTK based gui).

The Circle is going into internals refactoring. I'm sugesting to use Twisted for his new generators based schema (flows instead of threads).

Anyone interested ?

The Circle is an already aviable, already usable P2P software based on the DHT concept. It allow decentralized presence, instant and delayed messages, file sharing, users directory, trust based news, and more plugins extensions. Pure python and GTK.

http://thecircle.org.au

RodrigoB.






From golux at comcast.net  Sat Dec  6 19:06:20 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 21:06:20 -0500
Subject: [Twisted-Python] possible doc error
Message-ID: <3FD28B1C.1040202@comcast.net>

In howto/application:

"It is, of course, possible to write one's own services, but Twisted 
comes out of the box with several services which are useful in writing 
network applications. Those are in twisted.application.internet."

For sure, Twisted comes out of the box with a load of stuff,
but the only service I see in twisted.application.internet
is the TimerService.  Should that be twisted.internet.app ?




From exarkun at intarweb.us  Sat Dec  6 20:59:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 6 Dec 2003 22:59:40 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <20031207035940.GA18490@intarweb.us>

On Sat, Dec 06, 2003 at 09:06:20PM -0500, Stephen Waterbury wrote:
> In howto/application:
> 
> "It is, of course, possible to write one's own services, but Twisted 
> comes out of the box with several services which are useful in writing 
> network applications. Those are in twisted.application.internet."
> 
> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  Should that be twisted.internet.app ?
> 

  Hey Steve,

    twisted.application.internet actually provides quite a few other
services, but they are all generated in a rather unorthodox manner rather
than defined directly, which makes finding them by reading the source a bit
difficult.

    The automatically generated API docs are a little more informative:

  http://twistedmatrix.com/documents/TwistedDocs/current/api/twisted.application.internet.html

    Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031206/9ee2d442/attachment.sig>

From golux at comcast.net  Sat Dec  6 21:07:05 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 23:07:05 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <3FD2A769.7050507@comcast.net>

Stephen Waterbury wrote:
> In howto/application:
> 
> "It is, of course, possible to write one's own services, but Twisted 
> comes out of the box with several services which are useful in writing 
> network applications. Those are in twisted.application.internet."
> 
> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  ...

Never mind, I see the magic now.  Hmm ... I'll try to come
up with a doc patch that makes it a little more explicit.




From golux at comcast.net  Sat Dec  6 21:33:41 2003
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 06 Dec 2003 23:33:41 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <20031207035940.GA18490@intarweb.us>
References: <3FD28B1C.1040202@comcast.net> <20031207035940.GA18490@intarweb.us>
Message-ID: <3FD2ADA5.4010700@comcast.net>

Thanks, Jp -- actually, I saw them and sent my "oops"
message *just* before yours hit the list ... ;)

Yep, the API docs are definitely more explicit ...
and now I see how the docstrings for the classes were
generated, too, so that's what epydoc used.  Moshe
is pretty slick.  :)

Actually, what really would have helped would be
if the twisted.application.internet in the howto
was a link to that part of the API doc.

Jp Calderone wrote:
> On Sat, Dec 06, 2003 at 09:06:20PM -0500, Stephen Waterbury wrote:
> 
>>In howto/application:
>>
>>"It is, of course, possible to write one's own services, but Twisted 
>>comes out of the box with several services which are useful in writing 
>>network applications. Those are in twisted.application.internet."
>>
>>For sure, Twisted comes out of the box with a load of stuff,
>>but the only service I see in twisted.application.internet
>>is the TimerService.  Should that be twisted.internet.app ?
>>
> 
> 
>   Hey Steve,
> 
>     twisted.application.internet actually provides quite a few other
> services, but they are all generated in a rather unorthodox manner rather
> than defined directly, which makes finding them by reading the source a bit
> difficult.
> 
>     The automatically generated API docs are a little more informative:
> 
>   http://twistedmatrix.com/documents/TwistedDocs/current/api/twisted.application.internet.html
> 
>     Jp





From itamar at itamarst.org  Sat Dec  6 23:53:03 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 01:53:03 -0500
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD28B1C.1040202@comcast.net>
References: <3FD28B1C.1040202@comcast.net>
Message-ID: <1070779983.12190.759.camel@sheriffpony>

On Sat, 2003-12-06 at 21:06, Stephen Waterbury wrote:

> For sure, Twisted comes out of the box with a load of stuff,
> but the only service I see in twisted.application.internet
> is the TimerService.  Should that be twisted.internet.app ?

Nope, twisted.internet.app is deprecated. The code in that module is
auto-generated to some degree. You can still import it though :) See API
docs, it should show up there.
-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From gp.ciceri at acm.org  Sun Dec  7 01:58:33 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 07 Dec 2003 09:58:33 +0100
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
Message-ID: <3FD2EBB9.9040201@acm.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

hello all,
I'm looking for some usage examples of the (new in 1.1) jabber protocol
in twisted, in particular a client (I'm not able to find any in the
1.1.1rc4).

Before the new jabber protocol you can build jabber clients in twisted
with the support of tpjabber.py (posted on the ML on Febuary): perhaps
simply the new jabber protocol support in twisted is not complete ?

Any hint will be appreciated.

Regards
/gp

- --
~  Gian Paolo Ciceri        Via G.Marconi 5 - 22036 ERBA CO ITALY
~                           mobile :   ++39 340 7218101
~                           eMail  :   gp.ciceri at acm.org,
~                                  :   gp.ciceri at suddenthinks.com
~                           webSite:   http://www.suddenthinks.com
~                           ICQ #  :   94620118
~                           jabber :   gp.ciceri at jabber.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/0uu45CXmEF0gaHgRAmR0AKDStDlk4xZJHuZ8snnZC08iyBrFWACgkX1A
B3/o4IHIxrewQRu18vXlPyU=
=7A8n
-----END PGP SIGNATURE-----




From andrew-twisted at puzzling.org  Sun Dec  7 07:06:24 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Dec 2003 01:06:24 +1100
Subject: [Twisted-Python] possible doc error
In-Reply-To: <3FD2ADA5.4010700@comcast.net>
References: <3FD28B1C.1040202@comcast.net> <20031207035940.GA18490@intarweb.us> <3FD2ADA5.4010700@comcast.net>
Message-ID: <20031207140624.GE1500@frobozz>

On Sat, Dec 06, 2003 at 11:33:41PM -0500, Stephen Waterbury wrote:
> Thanks, Jp -- actually, I saw them and sent my "oops"
> message *just* before yours hit the list ... ;)
> 
> Yep, the API docs are definitely more explicit ...
> and now I see how the docstrings for the classes were
> generated, too, so that's what epydoc used.  Moshe
> is pretty slick.  :)
> 
> Actually, what really would have helped would be
> if the twisted.application.internet in the howto
> was a link to that part of the API doc.

I've just checked in a change to do that:
    http://twistedmatrix.com/users/warner/doc-latest/howto/application.html

Thanks!

-Andrew.




From wilk-ml at flibuste.net  Sun Dec  7 07:58:23 2003
From: wilk-ml at flibuste.net (William Dode)
Date: Sun, 07 Dec 2003 15:58:23 +0100
Subject: [Twisted-Python] jabber client examples for the new
 protocol.jabber
In-Reply-To: <3FD2EBB9.9040201@acm.org> (gian paolo ciceri's message of
 "Sun, 07 Dec 2003 09:58:33 +0100")
References: <3FD2EBB9.9040201@acm.org>
Message-ID: <878ylollo0.fsf@blakie.riol>

gian paolo ciceri <gp.ciceri at acm.org> writes:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> hello all,
> I'm looking for some usage examples of the (new in 1.1) jabber protocol
> in twisted, in particular a client (I'm not able to find any in the
> 1.1.1rc4).

I'm very interested also, and i could make heavy test (in an online
scrabble game http://seps.flibute.net)

-- 
William Dodé - http://flibuste.net



From developer at csrules.dyndns.org  Sun Dec  7 11:40:47 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 10:40:47 -0800
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD2EBB9.9040201@acm.org>
References: <3FD2EBB9.9040201@acm.org>
Message-ID: <3FD3742F.9030809@csrules.dyndns.org>

Jabber support works fine.

If i get a few minutes I'll post a simple example . If you want to see 
an example of
a jabber 'component' written with it you can check jabberstudio, this 
project uses it:

http://www.jabberstudio.org/projects/proxy65/project/view.php

-darryl

gian paolo ciceri wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> hello all,
> I'm looking for some usage examples of the (new in 1.1) jabber protocol
> in twisted, in particular a client (I'm not able to find any in the
> 1.1.1rc4).
>
> Before the new jabber protocol you can build jabber clients in twisted
> with the support of tpjabber.py (posted on the ML on Febuary): perhaps
> simply the new jabber protocol support in twisted is not complete ?
>
> Any hint will be appreciated.
>
> Regards
> /gp
>
>





From itamar at itamarst.org  Sun Dec  7 10:07:49 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 12:07:49 -0500
Subject: [Twisted-Python] wxPython reactor now in Twisted CVS
Message-ID: <1070816869.17798.0.camel@sheriffpony>

You can't use it to run tests with trial, but other than that it seems
to be fine. Any comments, suggestions and bug reports are welcome.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lafou at wanadoo.fr  Sun Dec  7 11:06:03 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Sun, 7 Dec 2003 19:06:03 +0100
Subject: [Twisted-Python] woven templates DTD
Message-ID: <200312071906.03277.lafou@wanadoo.fr>

Hi all

I've made some templates using a DTD (XHTML 1.1 or HTML 4.0 strict). The 
rendered pages are missing this dtd, beacause it's overwritten with 
<?xml version="1.0"?>

Of course, pages are different if they are rendered :(

Do I have to change all my templates to xml dtd ? Or can I impose my DTD to 
woven ?

thx !

--
Philippe




From lafou at wanadoo.fr  Sun Dec  7 11:10:15 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Sun, 7 Dec 2003 19:10:15 +0100
Subject: [Twisted-Python] woven templates DTD
Message-ID: <200312071910.15453.lafou@wanadoo.fr>

Sorry my last post, I've found the solution ...

I have to set the dtd to XHTML-1.0 Tansitional, and then, woven doesn't delete 
the dtd...

I'm sure this part is covered in the doc ?!

--
Philippe




From developer at csrules.dyndns.org  Sun Dec  7 11:23:26 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 12:23:26 -0600
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD3742F.9030809@csrules.dyndns.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
Message-ID: <3FD3701E.3080001@csrules.dyndns.org>

As promised I wrote a simple script and posted it here:

http://randomthoughts.vandorp.ca/syncato/WK/blog/706?t=item

cheers,
darryl


darryl wrote:
> Jabber support works fine.
> 
> If i get a few minutes I'll post a simple example . If you want to see 
> an example of
> a jabber 'component' written with it you can check jabberstudio, this 
> project uses it:
> 
> http://www.jabberstudio.org/projects/proxy65/project/view.php
> 
> -darryl
> 





From gp.ciceri at acm.org  Sun Dec  7 11:34:41 2003
From: gp.ciceri at acm.org (gian paolo ciceri)
Date: Sun, 07 Dec 2003 19:34:41 +0100
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD3742F.9030809@csrules.dyndns.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
Message-ID: <3FD372C1.3060004@acm.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

darryl wrote:
| Jabber support works fine.
|

o.k., no doubts about it :-)

| If i get a few minutes I'll post a simple example . If you want to see
| an example of
| a jabber 'component' written with it you can check jabberstudio, this
| project uses it:
|
| http://www.jabberstudio.org/projects/proxy65/project/view.php
|

I've just checked out, and it seems really interesting.

But I'm looking for a "standard" client (something doing
sending/receiving messages and chats and playing with rosters).
In particular, while I've found samples of "iq" nodes usage,
I'd like to know how to handle "presence" and "message" nodes.

So if you have this kind of examples, it's really what I need.
(perhaps I'm missing something basilar, and it's only a matter
to do a simple trick)


Thanks for your patience.
Best Regards

/gp

| -darryl
|
| gian paolo ciceri wrote:
|
|> -----BEGIN PGP SIGNED MESSAGE-----
|> Hash: SHA1
|>
|> hello all,
|> I'm looking for some usage examples of the (new in 1.1) jabber protocol
|> in twisted, in particular a client (I'm not able to find any in the
|> 1.1.1rc4).
|>
|> Before the new jabber protocol you can build jabber clients in twisted
|> with the support of tpjabber.py (posted on the ML on Febuary): perhaps
|> simply the new jabber protocol support in twisted is not complete ?
|>
|> Any hint will be appreciated.
|>
|> Regards
|> /gp
|>
|>
|
|
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


- --
~  Gian Paolo Ciceri        Via G.Marconi 5 - 22036 ERBA CO ITALY
~                           mobile :   ++39 340 7218101
~                           eMail  :   gp.ciceri at acm.org,
~                                  :   gp.ciceri at suddenthinks.com
~                           webSite:   http://www.suddenthinks.com
~                           ICQ #  :   94620118
~                           jabber :   gp.ciceri at jabber.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.2 (GNU/Linux)

iD8DBQE/03LA5CXmEF0gaHgRAvbuAJ9lBWjt/ntZshbHHtyJg33VltZrGwCfQFed
nkou4wOhCCEJ8StNHqZazXc=
=OmYa
-----END PGP SIGNATURE-----




From developer at csrules.dyndns.org  Sun Dec  7 12:19:55 2003
From: developer at csrules.dyndns.org (darryl)
Date: Sun, 07 Dec 2003 13:19:55 -0600
Subject: [Twisted-Python] jabber client examples for the new protocol.jabber
In-Reply-To: <3FD372C1.3060004@acm.org>
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org> <3FD372C1.3060004@acm.org>
Message-ID: <3FD37D5B.3090705@csrules.dyndns.org>

gp,

These things are all possible of course :)

However, they aren't built in yet. Or shall i say, at this
time you have to build them yourself. I have no idea if dizzyd
ever intends to build those components or not.

That being said it's pretty straight forward. You just build
up your domish.Elements and send them via the xmlstream.
There also is support for adding observers for iq elements
with unique id's and such.

If you have any specific questions feel free to ask and I'll
answer if I can.

-darryl

> But I'm looking for a "standard" client (something doing
> sending/receiving messages and chats and playing with rosters).
> In particular, while I've found samples of "iq" nodes usage,
> I'd like to know how to handle "presence" and "message" nodes.
> 
> So if you have this kind of examples, it's really what I need.
> (perhaps I'm missing something basilar, and it's only a matter
> to do a simple trick)
> 
> 
> Thanks for your patience.
> Best Regards
> 
> /gp




From sam at SpinwardStars.com  Sun Dec  7 13:02:26 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Sun, 07 Dec 2003 13:02:26 -0700
Subject: [Twisted-Python] Generate select options in woven
Message-ID: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>

Can someone help me out? I'm trying (so far without success) to get Woven 
to generate the Options for a Select from my Model. I haven't found any 
docs or examples that explain it.

- Sam





From jsbenson at bensonsystems.com  Sun Dec  7 13:25:38 2003
From: jsbenson at bensonsystems.com (John Benson)
Date: Sun, 7 Dec 2003 12:25:38 -0800
Subject: [Twisted-Python] Thanks for all the help
Message-ID: <04f301c3bd00$48b6b910$210110ac@jsbwxp3>

It's beginning to dawn on me that the whole
OOP/functional/aspect-oriented/etc. scene is about software engineering, not
just about egos and pet languages.

My software engineering education kind of stopped with Structured System
Design á la Yourdon and Wirth's structured programming mantras in the 70's.
After that, I saw fads come (and and almost as often go: AI, 4th-generation
DBMS's, talking paperclips) but didn't see anything that made me want to
change my basic take on programming.

Then I got into Python about a year ago and it's been a bit of a rocket
ride, educationally. In the beginning, the air was a little too thin at the
requisite levels of abstraction and took some getting used to, and will
probably remain the biggest barrier to entry. It's actually the second
Revenge of the Nerds, and a Darwinian selection process is taking place as
we speak: I think a lot of people didn't make the transition from COBOL to
C, and another group will have trouble going from pointers to references and
making sense of the multiheaded XML hydra.

Add to this the fact that many people now believe that you can teach
object-oriented languages without recapitulating the conceptual models
underlying the whole progression: toggled-in machine language routines
wriggling in the primordial ooze of absolute machine addresses, relocating
assemblers darting about the shallows, "high-level" languages like FORTRAN
and COBOL lumbering out of the primal memory sea and expiring on the land,
clever amphibians like C scurrying on the shore but returning to the memory
sea to lay their pointery little eggs, and finally the Pythons and Javas
that preserve only a faint echo of their marine origins in the IDs of their
objects.

I've taught computer languages professionally, and, as the age gap between
myself and my students widens, I feel more and more guilty that I had the
big advantage of having seen so much of the evolution happen. It helps me
appreciate both what's great about what we have now, and why certain
limitations are still there. The new folks don't have that advantage unless
they do enough assembler programming to understand how things look from the
instruction set level.

'Nuff said about that. Many thanks to everyone at the python and twisted
lists for their help as I reinvent myself again.








From anthony at ekit-inc.com  Mon Dec  1 17:58:42 2003
From: anthony at ekit-inc.com (Anthony Baxter)
Date: Tue, 02 Dec 2003 11:58:42 +1100
Subject: [Twisted-Python] UDP changes from 1.1.0 to 1.1.1rc1 
In-Reply-To: Message from "Mark Evans" <2s7l3way02@sneakemail.com> 
   of "01 Dec 2003 19:52:06 -0000." <25772-38779@sneakemail.com> 
Message-ID: <200312020058.hB20wgmD030546@maxim.off.ekorp.com>

>>> "Mark Evans" wrote
> Are there any significant UDP bug fixes
> or enhancements that make it worthwhile
> to migrate immediately to the new 1.1.1 release candidate?
> 
> How stable is this rc, generally speaking?

I don't believe there's any major changes in UDP in this release.
Note that shtoom (shtoom.sf.net) is using UDP quite heavily, and
hasn't had a problem.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never to late to have a happy childhood.




From steve at jibson.com  Tue Dec  2 09:49:29 2003
From: steve at jibson.com (Steve Jibson)
Date: Tue, 02 Dec 2003 09:49:29 -0700
Subject: [Twisted-Python] PyOpenSSL for Python 2.3
Message-ID: <3FCCC299.3060507@jibson.com>

Hi.

Sorry to bother you, but do you have (or can you point me to) a binary 
distribution of pyOpenSSL for Python 2.3?

Thanks,

Steve





From moonfallen at twistedmatrix.com  Wed Dec  3 21:25:41 2003
From: moonfallen at twistedmatrix.com (Cory Dodt)
Date: Wed, 3 Dec 2003 23:25:41 -0500
Subject: [Twisted-Python] way of dealing with returning a deferred from a method/function
In-Reply-To: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
References: <1070502536.12456.70.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031204042541.GA12942@pyramid.twistedmatrix.com>

> def aLongWait(stuff):
>     d = defer.Deferred()
>     def _():
>          result = doSomeStuffHere(stuff)
>          d.callback(result)
>     reactor.callLater(0, _)
>     return d

What neither Bob nor Itamar have pointed out is *why* this doesn't work.

doSomeStuffHere() takes a long time to do its processing, and it blocks.
You've succeeded in making aLongWait not block its caller, but
doSomeStuffHere is still going to throw a monkey wrench into the works,
because it will still block later -- specifically, it blocks the reactor
loop.  When the reactor decides to run _(), everything else the reactor
is responsible for must stop and wait for doSomeStuffHere to finish.

To make it not block the reactor, you need to take one of their
suggestions: use a thread, or refactor the whole thing to do a little
bit at a time.  At some level these amount to the same thing, but using
a thread makes the OS responsible for deciding what constitutes "a
little bit", and the other way makes you responsible.  Each has
appropriate and inappropriate uses.

C



From tv at tv.debian.net  Thu Dec  4 12:15:46 2003
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 04 Dec 2003 21:15:46 +0200
Subject: [Twisted-Python] Using Twisted in a network project
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D2502@EMSS07M12.us.lmco.com>
Message-ID: <3FCF87E2.3090105@tv.debian.net>

Hegedus, Matthew S wrote:
> Here's my problem: I'm in a situation where applications on a LAN need to be
> able to transmit UDP packets to other apps on the same LAN and on other LANS
> acroos the WAN. On the WAN there may be many routers in between that are not
> configured for multicast and cannot be reconfigured by users interested in
> multicasting. So multicast is out, and we are left with broadcast and

The standard solution is to use a multicast router and IP tunnels. That
way the "hostile" routers don't need to understand multicast at all.

That doesn't let you play with twisted, though ;)




From waldbie at attglobal.net  Sun Dec  7 17:44:26 2003
From: waldbie at attglobal.net (Carl Waldbieser)
Date: Sun, 7 Dec 2003 19:44:26 -0500
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
Message-ID: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>

I am using:
Twisted 1.1.0.
Python 2.3.2
Running on WinXP

I recently set up a wireless network at home (1 WinXP system and 1 Win98
system), and because I have a dial-up connection to the Internet, I wanted
to set up an HTTP proxy sever so both computers could browse the web
simultaneously.  I tried a bunch of different free applications that seemed
to fit the bill, but many seemed either too complicated, or easy but just
not configurable enough.

While googling, I came across an old message where someone was very
impressed with how easy it was to create a web proxy using twisted.  Since I
am a big Python fan, I thought I'd give it a go.  It was remarkably easy to
hack something together, and initially, everything seemed to work pretty
well.  However, after browsing one site, I noticed a buch of errors popping
up in my console box.  Both seemed to originate from http.py (in
/twisted/protocols directory).

The first (around line 314) was that the StringTransport class was being
asked to make a loseConnection() method invocation, but the class didn't
have one.  I seemed to get around that problem by adding that method to the
class as a no-op.

The second (around line 350) was caused by the following statement:

key, val = line.split(': ', 1)

I believe the line has something to do with parsing the request headers.
The problem was that the header was being sent like "name:value" with no
space after the colon.  This caused the tuple unpacking to blow up.  I
googled for information about what comprises a valid HTTP request, and came
up with the following:

In rfc2616
concerning HTTP/1.1
in section 4.2
Direct quote: "The field value MAY be preceded by any amount of LWS, though
a single SP is preferred."

I have no idea if this is the final word on HTTP headers, but it does look
like maybe the lack of a space should be accepted more gracefully in this
case.

I am not sure if these are actual bugs (the proxy didn't crash in any
event).  I thought I ought to let someone, know, though.

Carl Waldbieser




From andrew-twisted at puzzling.org  Sun Dec  7 18:16:03 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Dec 2003 12:16:03 +1100
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
In-Reply-To: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
References: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
Message-ID: <20031208011603.GA8937@frobozz>

On Sun, Dec 07, 2003 at 07:44:26PM -0500, Carl Waldbieser wrote:
> 
> The second (around line 350) was caused by the following statement:
> 
> key, val = line.split(': ', 1)
> 
> I believe the line has something to do with parsing the request headers.
> The problem was that the header was being sent like "name:value" with no
> space after the colon.  This caused the tuple unpacking to blow up.  I

This bug has already been fixed in CVS, I think... try 1.1.1rc4.

-Andrew.




From itamar at itamarst.org  Sun Dec  7 18:41:38 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Dec 2003 20:41:38 -0500
Subject: [Twisted-Python] Possible bug in twisted/protocols/http.py?
In-Reply-To: <20031208011603.GA8937@frobozz>
References: <005d01c3bd24$6f18bb70$0200a8c0@copernicus>
	 <20031208011603.GA8937@frobozz>
Message-ID: <1070847698.20500.0.camel@sheriffpony>

On Sun, 2003-12-07 at 20:16, Andrew Bennetts wrote:

> This bug has already been fixed in CVS, I think... try 1.1.1rc4.

Yes, along with other fixes to the proxy, but they might only make it
into 1.1.2. Try 1.1.1rc4 and see.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lafou at wanadoo.fr  Sun Dec  7 23:53:40 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Mon, 8 Dec 2003 07:53:40 +0100
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
Message-ID: <200312080753.40092.lafou@wanadoo.fr>

On Sunday 07 December 2003 21:02, Samuel Reynolds wrote:
> Can someone help me out? I'm trying (so far without success) to get Woven
> to generate the Options for a Select from my Model. I haven't found any
> docs or examples that explain it.

You can use something like this :

<select name="display" onChange="submit()" model="versions" view="List">
   <span pattern="listItem">
       <option view="display_value" value="thevalue"><span view="Text"></span>
       </option>
   </span>
</select>


here is your simple model

def wmfactory_versions(self, request):
	return ["item1", "item2", "item3"]


This will help to autoselect the last selected value :

from twisted.web import  microdom

def wvupdate_display_value(self, request, node, model):
        option = microdom.lmx(node)
        option['value'] = model
        display = request.args.get("display", [""])[0]
        if display == model:
            option['selected'] = "1"

I hope this helps !


Regards
--
Philippe




From wilk-ml at flibuste.net  Mon Dec  8 06:04:08 2003
From: wilk-ml at flibuste.net (William Dode)
Date: Mon, 08 Dec 2003 14:04:08 +0100
Subject: [Twisted-Python] jabber client examples for the new
 protocol.jabber
In-Reply-To: <3FD3701E.3080001@csrules.dyndns.org> (developer@csrules.dyndns.org's
 message of "Sun, 07 Dec 2003 12:23:26 -0600")
References: <3FD2EBB9.9040201@acm.org> <3FD3742F.9030809@csrules.dyndns.org>
	<3FD3701E.3080001@csrules.dyndns.org>
Message-ID: <87d6azo3zr.fsf@blakie.riol>

darryl <developer at csrules.dyndns.org> writes:

> As promised I wrote a simple script and posted it here:
>
> http://randomthoughts.vandorp.ca/syncato/WK/blog/706?t=item
>

thanks a lot !!!

-- 
William Dodé - http://flibuste.net



From rahul at reno.cis.upenn.edu  Mon Dec  8 08:49:48 2003
From: rahul at reno.cis.upenn.edu (rahul at reno.cis.upenn.edu)
Date: Mon, 8 Dec 2003 10:49:48 -0500
Subject: [Twisted-Python] twistd logging rotation and discarding logs
Message-ID: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>

Hi Folks,
twistd has a very nice logging feature which seems on my machine to
totate log files every 1mb. After a while though many log files pile up.
I looked in twisted.python.log for options to discard older files, and also
on google, but wasnt sure how to interact with twistd's logging. Is there
a way of doing this at the twistd level, or should I just use cron or
implement custom logging using twistd.python.log and logfile?
Thanks,
Rahul



From sam at SpinwardStars.com  Mon Dec  8 08:51:07 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Mon, 08 Dec 2003 08:51:07 -0700
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <200312080753.40092.lafou@wanadoo.fr>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
 <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com>
Message-ID: <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>

That helps a lot. Thanks.

However...

Is it possible to get
    <option value='id1'>label1</option>
?

So that
    wmfactory_versions = {
          {val='id1', desc='value1'},
          {val='id2', desc='value2'},
          {val='id3', desc='value3'} }
or (preferably)
    wmfactory_versions = {'id1':'value1','id2':'value2','id3':'value3'}
and
    <select name='display' model='versions' view='[[SOMETHING?]]'>
       [[SOMETHING?]]
    </select>

yield
    <select name='display>
       <option value='id1'>value1</option>
       <option value='id2'>value2</option>
       <option value='id3'>value3</option>
    </select>

I've tried several variations of view='List' and view='KeyedList'
on the select tag, using the above models, without success.
The nearest I've been able to get is one of the following:
    <option value='id1'>id1</option>
    <option value='value1'>value1</option>
    <option value='id1'>value1id1</option>

- Sam

At 2003-12-08 07:53 AM +0100, you wrote:
>On Sunday 07 December 2003 21:02, Samuel Reynolds wrote:
> > Can someone help me out? I'm trying (so far without success) to get Woven
> > to generate the Options for a Select from my Model. I haven't found any
> > docs or examples that explain it.
>
>You can use something like this :
>
><select name="display" onChange="submit()" model="versions" view="List">
>    <span pattern="listItem">
>        <option view="display_value" value="thevalue"><span 
> view="Text"></span>
>        </option>
>    </span>
></select>
>
>
>here is your simple model
>
>def wmfactory_versions(self, request):
>         return ["item1", "item2", "item3"]
>
>
>This will help to autoselect the last selected value :
>
>from twisted.web import  microdom
>
>def wvupdate_display_value(self, request, node, model):
>         option = microdom.lmx(node)
>         option['value'] = model
>         display = request.args.get("display", [""])[0]
>         if display == model:
>             option['selected'] = "1"
>
>I hope this helps !
>
>
>Regards
>--
>Philippe
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From lafou at wanadoo.fr  Mon Dec  8 09:33:14 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Mon, 8 Dec 2003 17:33:14 +0100
Subject: [Twisted-Python] Generate select options in woven
In-Reply-To: <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>
References: <5.2.0.9.0.20031207130122.00a95fc0@pop.mindspring.com> <5.2.0.9.0.20031208084141.00a95ed8@pop.mindspring.com>
Message-ID: <200312081733.14349.lafou@wanadoo.fr>

> I've tried several variations of view='List' and view='KeyedList'
> on the select tag, using the above models, without success.
> The nearest I've been able to get is one of the following:
>     <option value='id1'>id1</option>
>     <option value='value1'>value1</option>
>     <option value='id1'>value1id1</option>

I never succeded in using KeyedList :(

****************************
with  :

wmfactory_versions = [
          ('id1', 'value1'),
          ('id2', 'value2'),
          ('id3', 'value3')]


You can do that : 

def wvupdate_display_value(self, request, node, model):
        option = microdom.lmx(node)
        option['value'] = model
        display = request.args.get("display", [""])[0]
        if display == model:
            option['selected'] = "1"

And change 
	<option view="display_value" value="thevalue">
		<span view="Text"></span>
	</option>
to
	<option view="display_value" value="thevalue" model="0">
		<span view="Text" model="1"></span>
	</option>

(not tested, but it should work).


 ** OR  ************

if you really want to use a dict like

wmfactory_versions = {
          {val='id1', desc='value1'},
          {val='id2', desc='value2'},
          {val='id3', desc='value3'} }

then put this in your template :

<option view="display_value" value="thevalue" model="/id">
		<span view="Text" model="/desc"></span>
</option>


see http://www.twistedmatrix.com/documents/howto/modelindepth#submodelpaths
for more infos.

********************
Btw, I think woven should remove empty <span> tags from outputs. I'll post a 
bug report for that.
********************
if you want some exemple code, you can download this :

http://wwwetu.utc.fr/~plafoucr/gat/gat.tzg

it's a frontend to Portage (the gentoo package manager). It's in progress, and 
lacks most of its features, but some code parts may help you.


good luck !
Philippe




From exarkun at intarweb.us  Mon Dec  8 11:26:48 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 8 Dec 2003 13:26:48 -0500
Subject: [Twisted-Python] twistd logging rotation and discarding logs
In-Reply-To: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>
References: <200312081549.hB8Fnme28715@reno.cis.upenn.edu>
Message-ID: <20031208182648.GA4119@intarweb.us>

On Mon, Dec 08, 2003 at 10:49:48AM -0500, rahul at reno.cis.upenn.edu wrote:
> Hi Folks,
> twistd has a very nice logging feature which seems on my machine to
> totate log files every 1mb. After a while though many log files pile up.
> I looked in twisted.python.log for options to discard older files, and also
> on google, but wasnt sure how to interact with twistd's logging. Is there
> a way of doing this at the twistd level, or should I just use cron or
> implement custom logging using twistd.python.log and logfile?
> Thanks,
> Rahul

  Log rotation is handled by twisted.python.logfile.LogFile.rotate().  If
you wanted to discard older logs, you would probably subclass LogFile,
override rotate, and then install your LogFile instead of the default
LogFile.

  The last step will probably be somewhat tricky.  I don't think twistd
lets you specify the LogFile class to use (though perhaps it should).

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031208/72a3366d/attachment.sig>

From marjancinober at hotmail.com  Mon Dec  8 13:01:31 2003
From: marjancinober at hotmail.com (marjan cinober)
Date: Mon, 08 Dec 2003 21:01:31 +0100
Subject: [Twisted-Python] Begginner discovering Emacs as a python debugger
Message-ID: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>

Hello!

I have just tested debugging in emacs with twistd.
M-x pdb
Run pdb (like this): twistd -b -y finger11.py
COOL :))

It would be great to have similar easy entry interface to pdb through emacs 
for any python script not just twistd -b.
Anybody knows how to achieve that (or something like that)?

Thanks

Regards
               Cinober

_________________________________________________________________
Winterize your home with tips from MSN House & Home. 
http://special.msn.com/home/warmhome.armx




From itamar at itamarst.org  Mon Dec  8 14:06:05 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Dec 2003 16:06:05 -0500
Subject: [Twisted-Python] Begginner discovering Emacs as a python
	debugger
In-Reply-To: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>
References: <Sea1-F151B0iiOrkktZ0000e416@hotmail.com>
Message-ID: <1070917565.22491.3.camel@sheriffpony>

On Mon, 2003-12-08 at 15:01, marjan cinober wrote:
> Hello!
> 
> I have just tested debugging in emacs with twistd.
> M-x pdb
> Run pdb (like this): twistd -b -y finger11.py
> COOL :))
> 
> It would be great to have similar easy entry interface to pdb through emacs 
> for any python script not just twistd -b.
> Anybody knows how to achieve that (or something like that)?

Write a little script called "pdb", add it to your PATH, and then you
can M-x pdb with "pdb yourscript.py".

$ cat bin/pdb
#!/bin/sh
exec /usr/bin/python2.2 /usr/lib/python2.2/pdb.py $1 $2 $3 $4 $5 $6

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From gavrie at disksites.com  Wed Dec 10 03:20:02 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Wed, 10 Dec 2003 12:20:02 +0200
Subject: [Twisted-Python] Woven: can't get view notification to work
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>

Hi,

I'm trying to use the notify method of a model to update its views while a page is being rendered. For sake of simplicity, let's assume there's a global data structure which is updated while the page is rendered. A view which renders this data structure should then be called again so that it'll render the updated version.

Unfortunately, I can't get it to work: even though the view is being called again by the notify method, the new view doesn't show up on the final page -- as if it ran only once.

I have attached a small test program (test_notify.py).
Here's a log of what happens when running it, and connecting from a Web browser:

> twistd -ny test_notify.py
2003/12/10 12:08 IST [-] Log opened.
2003/12/10 12:08 IST [-] twistd 1.1.0 (/usr/bin/python 2.3.2) starting up
2003/12/10 12:08 IST [-] reactor class: twisted.internet.default.SelectReactor
2003/12/10 12:08 IST [-] Loading test_notify.py...
2003/12/10 12:08 IST [-] Loaded.
2003/12/10 12:08 IST [-] twisted.web.server.Site starting on 8000
2003/12/10 12:08 IST [-] Starting factory <twisted.web.server.Site instance at 0xbf04f02c>
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] ### mydict: {'hello': 'world'}
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] ### mydict: {'foo': 'bar', 'hello': 'world'}
2003/12/10 12:08 IST [HTTPChannel,0,192.168.1.124] 192.168.1.124 - - [10/Dec/2003:10:08:47 +0000] "GET / HTTP/1.1" 200 88 "-" "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.5) Gecko/20031007 Firebird/0.7"

The 'mydict' data structure is being updated by one of the models on the page, and it is rendered by one of the views. The model notifies the view, and the view is run on the updated data -- as is evident from the second "## mydict:" line. 

However, the final page just shows {'hello': 'world'} instead of the expected {'foo': 'bar', 'hello': 'world'}.

Any ideas as to why this happens?

My platform: Twisted 1.1.0 with Python 2.3.2 on a Linux machine.

Thanks,

-- Gavrie Philipson.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_notify.py
Type: application/octet-stream
Size: 1000 bytes
Desc: test_notify.py
URL: </pipermail/twisted-python/attachments/20031210/30353ed2/attachment-0002.obj>

From ralf at brainbot.com  Wed Dec 10 06:38:01 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 10 Dec 2003 14:38:01 +0100
Subject: [Twisted-Python] Patch: sending new style classes via perspective broker
Message-ID: <86d6aw94jq.fsf@stronzo.brainbot.com>

Hi,
sending new style classes via perspective broker currently isn't
possible without extra effort. I have attached a short test program
and a patch to jelly.py, which solves that problem.

- Ralf

=========== 
from twisted.spread import pb
from twisted.internet import reactor, threads
from twisted.python import threadable

class Data(pb.Copyable, pb.RemoteCopy, object):
    def __init__(self, s):
        self.s = s

pb.setUnjellyableForClass(Data, Data)
    
class Echoer(pb.Root):
    def remote_echo(self, st):
        print "REMOTE_ECHO:", st, st.s
        return st

if __name__ == '__main__':
    reactor.listenTCP(8789, pb.PBServerFactory(Echoer()))

    factory = pb.PBClientFactory()
    reactor.connectTCP("127.0.0.1", 8789, factory)
    factory.getRootObject().addCallback(lambda r: r.callRemote("echo", Data("foo")))

    reactor.callLater(2, reactor.stop)
    reactor.run()

===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.48
diff -u -r1.48 jelly.py
--- jelly.py    4 Jun 2003 00:18:03 -0000       1.48
+++ jelly.py    10 Dec 2003 12:35:48 -0000
@@ -520,6 +520,9 @@
                 inst = _Dummy() # XXX chomp, chomp
                 inst.__class__ = regClass
                 method = inst.unjellyFor
+            elif isinstance(regClass, type): # new style class
+                inst = object.__new__(regClass) # does not call regClass.__init__
+                method = inst.unjellyFor
             else:
                 method = regClass # this is how it ought to be done
             val = method(self, obj)

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Wed Dec 10 08:26:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 10:26:14 -0500
Subject: [Twisted-Python] Patch: sending new style classes via
	perspective broker
In-Reply-To: <86d6aw94jq.fsf@stronzo.brainbot.com>
References: <86d6aw94jq.fsf@stronzo.brainbot.com>
Message-ID: <1071069974.26501.17.camel@sheriffpony>

On Wed, 2003-12-10 at 08:38, Ralf Schmitt wrote:

> sending new style classes via perspective broker currently isn't
> possible without extra effort. I have attached a short test program
> and a patch to jelly.py, which solves that problem.

Nice! Could you add this to the issue tracker? Adding a test would be
even better :) http://twistedmatrix.com/bugs/

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From dp at twistedmatrix.com  Wed Dec 10 10:23:56 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 10 Dec 2003 12:23:56 -0500
Subject: [Twisted-Python] Woven: can't get view notification to work
In-Reply-To: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>
References: <7B4DD91F9C5D474898E5F4E43B9213F5C98787@santarosa.dsnt.disksites.com>
Message-ID: <A275BA24-2B35-11D8-8E58-000A95864FC4@twistedmatrix.com>


On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:

>         lmx(node).p().text(str(mydict))

Change this to lmx(self) and it works. It's the widget that knows the 
correct place in the current DOM to make changes, not the template node 
that was passed in (node).

A major difficulty with the livepage and view notification architecture 
in woven is object identity -- you must have a reference to a DOM node 
which is actually in the DOM in order for your mutation changes to 
actually show up when the DOM is turned into a string. This is 
partially because woven tries really hard to allow you to re-render 
only those portions of the page that have changed, as you are 
attempting to do here by using notify. Since woven needs to be able to 
rerender portions of the page, it also needs to keep around copies of 
the original DOM -- the "template" DOM -- so it can pass it to your 
function again upon rerendering.

Anyway, Widgets also add an extra level of complexity over the w3c DOM 
in woven. This is the main reason I went with rendering functions, not 
rendering objects, in Nevow. (The render function can of course be a 
method bound to an object).

Neither LivePage nor partial-page rendering are implemented in Nevow 
yet, precisely because they are advanced features that are difficult to 
get right, and I wanted to make sure the basic rendering features were 
correct first. Since Nevow rendering hasn't had any surprising bugs for 
over a month, I think it's time to start implementing LivePage and 
partial-page rendering in Nevow. I'm planning on doing a lot of 
documentation and implementation work around christmastime, when I 
should have more time to focus on it.

dp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1751 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031210/ed09ee58/attachment-0002.bin>

From ralf at brainbot.com  Wed Dec 10 10:49:26 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 10 Dec 2003 18:49:26 +0100
Subject: [Twisted-Python] Patch: sending new style classes via
 perspective broker
In-Reply-To: <1071069974.26501.17.camel@sheriffpony> (Itamar
 Shtull-Trauring's message of "Wed, 10 Dec 2003 10:26:14 -0500")
References: <86d6aw94jq.fsf@stronzo.brainbot.com>
	<1071069974.26501.17.camel@sheriffpony>
Message-ID: <86fzfsr2ah.fsf@stronzo.brainbot.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Wed, 2003-12-10 at 08:38, Ralf Schmitt wrote:
>
>> sending new style classes via perspective broker currently isn't
>> possible without extra effort. I have attached a short test program
>> and a patch to jelly.py, which solves that problem.
>
> Nice! Could you add this to the issue tracker? Adding a test would be
> even better :) http://twistedmatrix.com/bugs/

Issue added, but no test ;)

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From martin at datacash.com  Wed Dec 10 11:10:09 2003
From: martin at datacash.com (Martin Waite)
Date: 10 Dec 2003 18:10:09 +0000
Subject: [Twisted-Python] difficulty in calling callLater from callback
Message-ID: <1071079809.718.62.camel@pascal>

Hi,

I'm trying to get a set of database updates (read_db_response())
run once a second or so.

=================
dbpool = adbapi.ConnectionPool( "MySQLdb", host = 'localhost', user = 'martin', passwd = 'passwd', db = 'request' )

def read_db_response(cursor):
    cursor.execute( "update 1" )
    cursor.execute( "update 2" )
    cursor.execute( "update 3" )
    return 1;

def read_loop():
    dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )

read_loop()
=================

I thought I could do this by attaching a callback to 
dbpool.runInteraction(), and have that callback schedule
the next call of read_loop().

What happens is that read_db_response() runs exactly once.

Does anyone know what I have done wrong here ?

regards,
Martin




From itamar at itamarst.org  Wed Dec 10 11:31:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 13:31:41 -0500
Subject: [Twisted-Python] ANN: Twisted 1.1.1
Message-ID: <1071081101.25510.92.camel@sheriffpony>

Twisted is an event-driven networking framework for server and client
applications.

For more information, visit http://www.twistedmatrix.com, join the list
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python or
visit us on #twisted at irc.freenode.net.

The Twisted from Scratch tutorial is a good starting point for learning
Twisted: http://twistedmatrix.com/documents/howto/tutorial


What's New in 1.1.1
===================

- Many bug fixes and minor improvements.

- MSN protocol support updated to support MSN8P.

- Conch SSH client now supports SSH auth agent.


What is Twisted?
================

Twisted is an event-driven framework for building networked clients and
servers.  It contains a powerful and simple networking core, a
full-featured suite of interoperable protocols, among them a powerful
web server and applications framework.





From itamar at itamarst.org  Wed Dec 10 11:38:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 10 Dec 2003 13:38:21 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <1071081501.26501.95.camel@sheriffpony>

On Wed, 2003-12-10 at 13:10, Martin Waite wrote:

> def read_loop():
>     dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )
> 
> read_loop()
> =================
> 
> I thought I could do this by attaching a callback to 
> dbpool.runInteraction(), and have that callback schedule
> the next call of read_loop().

Callbacks are expected to receive an argument, the result of the
previous callback/the deferred.

For example:

def read_loop():
    dbpool.runInteraction( read_db_response ).addCallback(
                   lambda _: reactor.callLater(1, read_loop ))

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From radix at twistedmatrix.com  Wed Dec 10 11:47:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 10 Dec 2003 13:47:03 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <3FD76A27.8060206@twistedmatrix.com>

Martin Waite wrote:
> dbpool = adbapi.ConnectionPool( "MySQLdb", host = 'localhost', user = 'martin', passwd = 'passwd', db = 'request' )
> 
> def read_db_response(cursor):
>     cursor.execute( "update 1" )
>     cursor.execute( "update 2" )
>     cursor.execute( "update 3" )
>     return 1;
> 
> def read_loop():
>     dbpool.runInteraction( read_db_response ).addCallback( reactor.callLater, 1, read_loop )

This code will make cause reactor.callLater(1, 1, read_loop) to be 
called, where the first `1' is the result of read_db_response.

You probably want

   .addCallback(lambda r: reactor.callLater(1, read_loop))

or something.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From exarkun at intarweb.us  Wed Dec 10 11:58:30 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 10 Dec 2003 13:58:30 -0500
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <1071079809.718.62.camel@pascal>
References: <1071079809.718.62.camel@pascal>
Message-ID: <20031210185830.GA16423@intarweb.us>

On Wed, Dec 10, 2003 at 06:10:09PM +0000, Martin Waite wrote:
> Hi,
> 
> [sni]p
> 
> What happens is that read_db_response() runs exactly once.
> 
> Does anyone know what I have done wrong here ?
> 

  radix and itamar have pointed out the specific problem, but I'd like to
point out another: there are no errbacks in your code.

  Without error handlers, any exception that is raised asynchronously
(termed a "failure" in Twisted) will probably never be reported to you.

  More importantly, even if you manage to debug your application without
adding error handlers, you'll never know if it breaks once you deploy it.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031210/728fe9dd/attachment.sig>

From gavrie at disksites.com  Wed Dec 10 12:00:29 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Wed, 10 Dec 2003 21:00:29 +0200
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
Message-ID: <200312102100.30020.gavrie@disksites.com>

On Wed, 10 Dec 2003 12:23:56 -0500, Donovan Preston wrote:

> On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:
> 
> >         lmx(node).p().text(str(mydict))
> 
> Change this to lmx(self) and it works. It's the widget that knows the 
> correct place in the current DOM to make changes, not the template node 
> that was passed in (node).

Ah, now I see... you wouldn't believe how much I agonized over this... thanks.

Incidentally, since you keep mentioning Nevow, I did have some thoughts on 
using it instead of Woven.
However, I am using template files to generate forms instead of generating 
them from the code (I need precise layour control). It seems that Nevow 
doesn't yet fully handle rendering of template files. Is this correct? Are 
any changes to this expected soon?

PS: My apologies to the rest of the list for sending a text message in base64 
encoding (making it unreadable in the archives) -- that's what I deserve for 
posting that message from Outlook :-)

-- Gavrie.



From dp at twistedmatrix.com  Wed Dec 10 13:25:43 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 10 Dec 2003 15:25:43 -0500
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
In-Reply-To: <200312102100.30020.gavrie@disksites.com>
References: <200312102100.30020.gavrie@disksites.com>
Message-ID: <07BE351A-2B4F-11D8-8E58-000A95864FC4@twistedmatrix.com>

On Dec 10, 2003, at 2:00 PM, Gavrie Philipson wrote:

> On Wed, 10 Dec 2003 12:23:56 -0500, Donovan Preston wrote:
>
>> On Dec 10, 2003, at 5:20 AM, Gavrie Philipson wrote:
>>
>>>         lmx(node).p().text(str(mydict))
>>
>> Change this to lmx(self) and it works. It's the widget that knows the
>> correct place in the current DOM to make changes, not the template 
>> node
>> that was passed in (node).
>
> Ah, now I see... you wouldn't believe how much I agonized over this... 
> thanks.

Good, I'm glad that fixed it for you.

> Incidentally, since you keep mentioning Nevow, I did have some 
> thoughts on
> using it instead of Woven.

As I mentioned before, the parts of woven which are not yet implemented 
in Nevow are the LivePage and partial-page-rerendering stuff. You, by 
using notify, are using the partial-page-rerendering stuff. I'd be 
interested in knowing what you want to use it for, and how I can 
accommodate this use case and my use cases without being too 
heavyweight and cumbersome.

> However, I am using template files to generate forms instead of 
> generating
> them from the code (I need precise layour control). It seems that Nevow
> doesn't yet fully handle rendering of template files. Is this correct? 
> Are
> any changes to this expected soon?

Hmm -- I'm not sure where people get the impression that disk templates 
aren't supported. nevow.renderers.HTMLRenderer is the Resource subclass 
to use, and you can use it like this:

class Foo(HTMLRenderer):
	def data_bar(self, context, data):
		return "bar!"

	def render_baz(self, context, data):
		return "Baz (%s)" % data


Then, your HTML template would have model= and view= directives in it 
(eventually, these will be replaced by nevow:data and nevow:render 
directives, but I implemented model= and view= directives to allow use 
of woven templates)

<html>
	<body>
		<div model="bar" view="baz" />
	</body>
</html>

dp




From radix at twistedmatrix.com  Wed Dec 10 17:32:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 10 Dec 2003 19:32:32 -0500
Subject: [Twisted-Python] New twisted-web mailing list (Yes, this is for _YOU_)
Message-ID: <3FD7BB20.9080808@twistedmatrix.com>

We've decided to split off discussion of twisted.web, Nevow, and Woven 
into a new mailing list: twisted-web at twistedmatrix.com

Please subscribe here::

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

We have also started a new IRC channel, #twisted.web, on 
irc.freenode.net, as #divmod and #twisted were getting somewhat flooded 
with the t.w/Nevow discussion.

I've also updated our web site with links to the new mailing list.

Beware,-off-topic-posters!-ly yours,

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From gavrie at disksites.com  Thu Dec 11 01:01:15 2003
From: gavrie at disksites.com (Gavrie Philipson)
Date: Thu, 11 Dec 2003 10:01:15 +0200
Subject: [Twisted-Python] Re: Woven: can't get view notification to work
Message-ID: <7B4DD91F9C5D474898E5F4E43B9213F5C987A4@santarosa.dsnt.disksites.com>

> -----Original Message-----
> From: Donovan Preston [mailto:dp at twistedmatrix.com] 
> Sent: Wednesday, December 10, 2003 22:26
> Subject: Re: [Twisted-Python] Re: Woven: can't get view notification to work
> 

[...]

> As I mentioned before, the parts of woven which are not yet implemented 
> in Nevow are the LivePage and partial-page-rerendering stuff. You, by 
> using notify, are using the partial-page-rerendering stuff. I'd be 
> interested in knowing what you want to use it for, and how I can 
> accommodate this use case and my use cases without being too 
> heavyweight and cumbersome.

I'm using the partial rerendering stuff for error handling:
My model uses XML-RPC to get and set data from another machine. The XML-RPC calls are triggered (by the models) while rendering the page. If an error is returned from an XML-RPC call, I want to rerender parts of the page to reflect that error (e.g. adding an error message). Another area is when using forms: I am using controllers to handle form input. The controller, after validating the data, tries to submit it to the XML-RPC server. If the server returns an error for some reason, this should be reported to the user on the page that is rendered after submitting the form. Partial rerendering seemed the natural solution for this.

Am I missing a simple and obvious way to do these things?

[...]

> Hmm -- I'm not sure where people get the impression that disk 
> templates aren't supported. 

Er... could it possibly be because there's not much documentation for Nevow yet?

-- Gavrie.



From martin at datacash.com  Thu Dec 11 02:56:49 2003
From: martin at datacash.com (Martin Waite)
Date: 11 Dec 2003 09:56:49 +0000
Subject: [Twisted-Python] difficulty in calling callLater from callback
In-Reply-To: <20031210185830.GA16423@intarweb.us>
References: <1071079809.718.62.camel@pascal> 
	<20031210185830.GA16423@intarweb.us>
Message-ID: <1071136609.719.72.camel@pascal>

Thanks guys, this works a treat now.

regards,
Martin

On Wed, 2003-12-10 at 18:58, Jp Calderone wrote:
> On Wed, Dec 10, 2003 at 06:10:09PM +0000, Martin Waite wrote:
> > Hi,
> > 
> > [sni]p
> > 
> > What happens is that read_db_response() runs exactly once.
> > 
> > Does anyone know what I have done wrong here ?
> > 
> 
>   radix and itamar have pointed out the specific problem, but I'd like to
> point out another: there are no errbacks in your code.
> 
>   Without error handlers, any exception that is raised asynchronously
> (termed a "failure" in Twisted) will probably never be reported to you.
> 
>   More importantly, even if you manage to debug your application without
> adding error handlers, you'll never know if it breaks once you deploy it.
> 
>   Jp





From martin at datacash.com  Thu Dec 11 04:25:09 2003
From: martin at datacash.com (Martin Waite)
Date: 11 Dec 2003 11:25:09 +0000
Subject: [Twisted-Python] startService not called in finger14.py ?
Message-ID: <1071141909.719.133.camel@pascal>

Hi,

It seems that FingerService.stopService() and
FingerService.startService() never actually get called 
in finger14.py in the tutorial.

I have added logging into startService() and stopService()
to trace when they get called:

==========================================================
# Read from file
from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic
from twisted.python import log

class FingerProtocol(basic.LineReceiver):
    def lineReceived(self, user):
        self.factory.getUser(user
        ).addErrback(lambda _: "Internal error in server"
        ).addCallback(lambda m:
                      (self.transport.write(m+"\r\n"),
                       self.transport.loseConnection()))

class FingerService(service.Service):
    def __init__(self, filename):
        self.users = {}
        self.filename = filename
    def startService(self):
        def _read(self):
            for line in file(self.file):
                user, status = line.split(':', 1)
                user=user.strip()
                status=status.strip()
                self.users[user] = status
            self.call = reactor.callLater(30, _read)
        _read()
	log.msg( "startService" )
        service.Service.startService(self)
    def stopService(self):
	log.msg( "stopService" )
        service.Service.stopService(self)
        self.call.cancel()
    def getUser(self, user):
        return defer.succeed(self.users.get(user, "No such user"))
    def getFingerFactory(self):
	log.msg( "getFingerFactory" )
        f = protocol.ServerFactory()
        f.protocol, f.getUser = FingerProtocol, self.getUser,
        f.startService = self.startService
        return f

application = service.Application('finger', uid=1, gid=1)
f = FingerService('/home/martin/users')
finger = internet.TCPServer(1079, f.getFingerFactory())
finger.setServiceParent(service.IServiceCollection(application))
==========================================================


Running the example:

 twistd2.2 -noy finger14.py
2003/12/11 11:20 GMT [-] Log opened.
2003/12/11 11:20 GMT [-] twistd 1.1.1 (/usr/bin/python2.2 2.2.1) starting up
2003/12/11 11:20 GMT [-] reactor class: twisted.internet.default.SelectReactor
2003/12/11 11:20 GMT [-] Loading finger14.py...
2003/12/11 11:20 GMT [-] getFingerFactory
2003/12/11 11:20 GMT [-] Loaded.
2003/12/11 11:20 GMT [-] twisted.internet.protocol.ServerFactory starting on 1079
2003/12/11 11:20 GMT [-] Starting factory <twisted.internet.protocol.ServerFactory instance at 0x828e5e4>

<ctrl-C>

2003/12/11 11:20 GMT [-] (Port 1079 Closed)
2003/12/11 11:20 GMT [-] Stopping factory <twisted.internet.protocol.ServerFactory instance at 0x828e5e4>
2003/12/11 11:20 GMT [-] Main loop terminated.
2003/12/11 11:20 GMT [-] Server Shut Down.

==========================

This is bad news for me because I'm trying to write a service
based on this code.   I really want stopService() to be called
so I can cleanly close down my app, but I can't figure out
how to do it.

Can anyone help please ?

regards,
Martin








From dialtone at aruba.it  Thu Dec 11 10:03:05 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Thu, 11 Dec 2003 18:03:05 +0100
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <1071141909.719.133.camel@pascal>
References: <1071141909.719.133.camel@pascal>
Message-ID: <20031211170305.GA4844@vercingetorix.caesar.org>

I don't get why this version of my software does not work...  The
previous version did not use service.Service but directly
protocol.ServerFactory and it worked right.

Basically this software is a server to which you can connect and
manage some database, actually now it only supports sqlite but it will
support more and more soon I hope.

######################################## CODE HERE ################
VERSION = 0.1

from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic

import sqlite

def catchError(err):
    return "Internal Server"

class DBUniversalProtocol(basic.LineReceiver):
    def send_results(self, q_results):
        if q_results:
            print "Sending data...",
            self.transport.write(str(q_results) +'\r\n')
            print "OK"

    def connectionMade(self):
        self.factory.connect_to_DB()

    def connectionLost(self, reason):
        print "Connection closed by client... ",
        self.factory.conn.commit()
        self.factory.cursor.close()
        self.factory.conn.close()
        print "Reset done."

    def lineReceived(self, line):
        d = self.factory.dispatch_function(line)
        d.addErrback(catchError)
        d.addCallback(self.send_results)        

class DBUniversalService(service.Service):
    def __init__(self):
        print "DB Universal Server, v.", VERSION, "(c) Valentino Volonghi"
        print "Licensed under the Lesser General Public License v2.1"
        print "Written by Valentino Volonghi and released without any warranties"
        
        self.dispatcher = {'set_query':self.set_query,
                           'get_many':self.get_many,
                           'get_all':self.get_all,
                           'get_one':self.get_one
                          }
        self.conn = None
        self.cursor = None

    def getDBUniversalFactory(self):
        f = protocol.ServerFactory()
        f.protocol = DBUniversalProtocol
        f.dispatch_function = self.dispatch_function
        f.conn = self.conn
        f.cursor = self.cursor
        f.connect_to_DB = self.connect_to_DB
        return f

    def dispatch_function(self, line):
        # Every line sent to this server is made of some parts:
        # "FUN_TO_CALL:ARGS_IF_ANY\r\n"
        # Be sure to always use this format standard otherwise
        # You won't have the expected behaviour
        
        fun = line.split(":")[0]
        callable = self.dispatcher.get(fun.strip(), None)
        if not callable:
            return defer.succeed(self.error())
        else:
            return defer.succeed(callable(line))

    def set_query(self, line):
        arg = line.split(":")[1]
        self.SQL = arg
        return self.run_query()

    def get_many(self, line):
        arg = line.split(":")[1]
        try:
            NUM = int(arg)
        except:
            return defer.succeed(self.error())
        return defer.succeed(self.cursor.fetchmany(NUM))

    def get_all(self, line):
        return defer.succeed(self.cursor.fetchall())

    def get_one(self, line):
        return defer.succeed(self.cursor.fetchone())

    def error(self):
        return "Operation Failed!"

    def allOK(self):
        return "OK"
    
    def run_query(self):
        print "Checking the query (%s)... " %(self.SQL.strip()),
        isCorrect = self.check_query(self.SQL)        
        if isCorrect:
            print " OK"
            self.cursor.execute(self.SQL)
            return defer.succeed(self.allOK())
        else:
            print " Failed"
            return defer.succeed(self.error())

    def check_query(self, to_check):
        res = to_check.split("\r\n")
        if len(res) > 2: return 0
        if res[0][-1] != ";": return 0
        return 1

    def connect_to_DB(self):
        print "Connecting to DB... ",
        self.conn = sqlite.connect("test.db")
        self.cursor = self.conn.cursor()
        print "OK"

#############################################
MYPORT = 6000
application = service.Application('dbi_face', uid=1000, gid=1000)
f = DBUniversalService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(MYPORT, f.getDBUniversalFactory()
                   ).setServiceParent(serviceCollection)
#############################################
Are these last lines right or are they wrong?

I've not really understood the meaning of the last lines,
while I understand the meaning of:

reactor.listenTCP(MYPORT, DBUniversalServer())
reactor.run()

I must say I based my "upgrade" to finger listings.

Thanks for your help

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User



From ddsell at msn.com  Thu Dec 11 18:14:16 2003
From: ddsell at msn.com (Dustin Sell)
Date: Thu, 11 Dec 2003 20:14:16 -0500
Subject: [Twisted-Python] Installing Twisted 1.0.7 on FreeBSD 4.4
Message-ID: <BAY3-F116kzyeCOOwxi000326bf@hotmail.com>

I'm wanting to install proxy65 onto a Jabber server - which requires at a 
minimum Twisted v1.0.7.  The only port of I see of Twisted for FreeBSD is 
1.0.6.  Has anyone successfully installed v1.0.7 onto a FreeBSD 4.4 system?  
Anything to look out for/gotcha's/etc?

Thanks,
Dustin

_________________________________________________________________
Don�t worry if your Inbox will max out while you are enjoying the holidays.  
Get MSN Extra Storage!  http://join.msn.com/?PAGE=features/es




From kunger at intersight.com  Thu Dec 11 19:18:40 2003
From: kunger at intersight.com (Kevin Unger)
Date: Thu, 11 Dec 2003 18:18:40 -0800
Subject: [Twisted-Python] Session expiration callbacks have no arguments?
In-Reply-To: <20031211170305.GA4844@vercingetorix.caesar.org>
Message-ID: <8016EC8C-2C49-11D8-9030-003065B25CAA@intersight.com>

Hello twisteds,

Shouldn't the callbacks that are  registered via 
web.server.Session.notifyOnExpire() be called with the session object 
as a parameter?  How does the callback know what session is expiring?

-k




On Thursday, December 11, 2003, at 09:03 AM, Valentino Volonghi aka 
Dialtone wrote:

> I don't get why this version of my software does not work...  The
> previous version did not use service.Service but directly
> protocol.ServerFactory and it worked right.
>
> Basically this software is a server to which you can connect and
> manage some database, actually now it only supports sqlite but it will
> support more and more soon I hope.
>
> ######################################## CODE HERE ################
> VERSION = 0.1
>
> from twisted.application import internet, service
> from twisted.internet import protocol, reactor, defer
> from twisted.protocols import basic
>
> import sqlite
>
> def catchError(err):
>     return "Internal Server"
>
> class DBUniversalProtocol(basic.LineReceiver):
>     def send_results(self, q_results):
>         if q_results:
>             print "Sending data...",
>             self.transport.write(str(q_results) +'\r\n')
>             print "OK"
>
>     def connectionMade(self):
>         self.factory.connect_to_DB()
>
>     def connectionLost(self, reason):
>         print "Connection closed by client... ",
>         self.factory.conn.commit()
>         self.factory.cursor.close()
>         self.factory.conn.close()
>         print "Reset done."
>
>     def lineReceived(self, line):
>         d = self.factory.dispatch_function(line)
>         d.addErrback(catchError)
>         d.addCallback(self.send_results)
>
> class DBUniversalService(service.Service):
>     def __init__(self):
>         print "DB Universal Server, v.", VERSION, "(c) Valentino 
> Volonghi"
>         print "Licensed under the Lesser General Public License v2.1"
>         print "Written by Valentino Volonghi and released without any 
> warranties"
>
>         self.dispatcher = {'set_query':self.set_query,
>                            'get_many':self.get_many,
>                            'get_all':self.get_all,
>                            'get_one':self.get_one
>                           }
>         self.conn = None
>         self.cursor = None
>
>     def getDBUniversalFactory(self):
>         f = protocol.ServerFactory()
>         f.protocol = DBUniversalProtocol
>         f.dispatch_function = self.dispatch_function
>         f.conn = self.conn
>         f.cursor = self.cursor
>         f.connect_to_DB = self.connect_to_DB
>         return f
>
>     def dispatch_function(self, line):
>         # Every line sent to this server is made of some parts:
>         # "FUN_TO_CALL:ARGS_IF_ANY\r\n"
>         # Be sure to always use this format standard otherwise
>         # You won't have the expected behaviour
>
>         fun = line.split(":")[0]
>         callable = self.dispatcher.get(fun.strip(), None)
>         if not callable:
>             return defer.succeed(self.error())
>         else:
>             return defer.succeed(callable(line))
>
>     def set_query(self, line):
>         arg = line.split(":")[1]
>         self.SQL = arg
>         return self.run_query()
>
>     def get_many(self, line):
>         arg = line.split(":")[1]
>         try:
>             NUM = int(arg)
>         except:
>             return defer.succeed(self.error())
>         return defer.succeed(self.cursor.fetchmany(NUM))
>
>     def get_all(self, line):
>         return defer.succeed(self.cursor.fetchall())
>
>     def get_one(self, line):
>         return defer.succeed(self.cursor.fetchone())
>
>     def error(self):
>         return "Operation Failed!"
>
>     def allOK(self):
>         return "OK"
>
>     def run_query(self):
>         print "Checking the query (%s)... " %(self.SQL.strip()),
>         isCorrect = self.check_query(self.SQL)
>         if isCorrect:
>             print " OK"
>             self.cursor.execute(self.SQL)
>             return defer.succeed(self.allOK())
>         else:
>             print " Failed"
>             return defer.succeed(self.error())
>
>     def check_query(self, to_check):
>         res = to_check.split("\r\n")
>         if len(res) > 2: return 0
>         if res[0][-1] != ";": return 0
>         return 1
>
>     def connect_to_DB(self):
>         print "Connecting to DB... ",
>         self.conn = sqlite.connect("test.db")
>         self.cursor = self.conn.cursor()
>         print "OK"
>
> #############################################
> MYPORT = 6000
> application = service.Application('dbi_face', uid=1000, gid=1000)
> f = DBUniversalService()
> serviceCollection = service.IServiceCollection(application)
> internet.TCPServer(MYPORT, f.getDBUniversalFactory()
>                    ).setServiceParent(serviceCollection)
> #############################################
> Are these last lines right or are they wrong?
>
> I've not really understood the meaning of the last lines,
> while I understand the meaning of:
>
> reactor.listenTCP(MYPORT, DBUniversalServer())
> reactor.run()
>
> I must say I based my "upgrade" to finger listings.
>
> Thanks for your help
>
> -- 
> Valentino Volonghi, Regia SpA, Milan
> Linux User #310274, Gentoo Proud User
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From rdrb at 123.cl  Thu Dec 11 13:36:01 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Thu, 11 Dec 2003 17:36:01 -0300
Subject: [Twisted-Python] Jabber knowledge sharing
Message-ID: <5cbdb15cc410.5cc4105cbdb1@noborrar.co.cl>

Hi!,

I'm searching People that could want to collaborate in the devellopment of an interface between a P2P chat and presence service and Jabber.

The idea is to implement a client for Circle that would provide a (simple) Jabber server. So jabber clients (gaim, etc) can connect to it.

I would like to contact people interested in the project or in the topic, that could help me with the Jabber side, at least at the conceptual level.

Thanks in advance,
RodrigoB.

http://thecircle.org.au




From R.Livsey at cache-22.co.uk  Thu Dec 11 19:01:21 2003
From: R.Livsey at cache-22.co.uk (Richard Livsey)
Date: Fri, 12 Dec 2003 02:01:21 +0000
Subject: [Twisted-Python] IRC & Excess-Flood
Message-ID: <3FD92171.9000705@cache-22.co.uk>

I'm in the process of writing an IRC component to an app I've made.
All seems to work fine, except when it comes to output a lot of data it 
gets booted from the IRC server for flooding :o)

*** Quits: SearchBot (Excess Flood)

However, it doesn't seem to just disconnect as clientConnectionLost 
doesn't get called.

In the logs, it says:
 'Stopping factory <__builtin__.IRCClientFactoryFromService instance at 
0x00CE06E8>'

Any ideas on what I can do to stop it happening?
For the moment I'm just going to throttle the output by making each 
message have a delay using callLater, but it would be nice to work out 
whats happening!

Cheers :o)

-- 
R.Livsey
Incutio Web Developer
www.cache-22.co.uk
www.incutio.com




From itamar at itamarst.org  Thu Dec 11 11:28:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Dec 2003 13:28:16 -0500
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <20031211170305.GA4844@vercingetorix.caesar.org>
References: <1071141909.719.133.camel@pascal>
	 <20031211170305.GA4844@vercingetorix.caesar.org>
Message-ID: <1071167296.26496.103.camel@sheriffpony>

On Thu, 2003-12-11 at 12:03, Valentino Volonghi aka Dialtone wrote:

> #############################################
> MYPORT = 6000
> application = service.Application('dbi_face', uid=1000, gid=1000)
> f = DBUniversalService()
> serviceCollection = service.IServiceCollection(application)
> internet.TCPServer(MYPORT, f.getDBUniversalFactory()
>                    ).setServiceParent(serviceCollection)
> #############################################
> Are these last lines right or are they wrong?

Looks right. are you running it with twistd?

$ twistd -y myscript.py

See also twistd --help

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From vlupien at drummonddesigns.com  Thu Dec 11 14:30:39 2003
From: vlupien at drummonddesigns.com (vicky lupien)
Date: Thu, 11 Dec 2003 16:30:39 -0500
Subject: [Twisted-Python] template in wchild
Message-ID: <000001c3c02e$05e88920$687ba8c0@vicky>

I have a web base application with woven.  I'm using an html template
with a form for my page.  In the setUp fonction I've changed my
template. 
So when I click on my submit button in my form, I want to see the
template with the modification from the setUp in my wchild_submit.  I
don't know if it's possible.  I tried to use request.d but it's seems
that it's not the same request from my page's class.
 
Thx in advance,
 
Vicky 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031211/4c045812/attachment.html>

From ttimo at idsoftware.com  Fri Dec 12 01:50:43 2003
From: ttimo at idsoftware.com (Timothee Besset)
Date: Fri, 12 Dec 2003 09:50:43 +0100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <3FD92171.9000705@cache-22.co.uk>
References: <3FD92171.9000705@cache-22.co.uk>
Message-ID: <20031212095043.343700e9.ttimo@idsoftware.com>

The IRC RFCs describe the flood protection mecanism that's used in IRC
daemons. The IRC protocol in twisted doesn't do any rate limitation, it
can easily flood the server and get disconnected. I have the rate
monitoring algorithm written in C, contact me directly if you are
interested. It might be a good thing to add that to twisted's IRC protocol
if you convert it to python.

TTimo

On Fri, 12 Dec 2003 02:01:21 +0000
Richard Livsey <R.Livsey at cache-22.co.uk> wrote:

> I'm in the process of writing an IRC component to an app I've made.
> All seems to work fine, except when it comes to output a lot of data it 
> gets booted from the IRC server for flooding :o)
> 
> *** Quits: SearchBot (Excess Flood)
> 
> However, it doesn't seem to just disconnect as clientConnectionLost 
> doesn't get called.
> 
> In the logs, it says:
>  'Stopping factory <__builtin__.IRCClientFactoryFromService instance at 
> 0x00CE06E8>'
> 
> Any ideas on what I can do to stop it happening?
> For the moment I'm just going to throttle the output by making each 
> message have a delay using callLater, but it would be nice to work out 
> whats happening!
> 
> Cheers :o)
> 
> -- 
> R.Livsey
> Incutio Web Developer
> www.cache-22.co.uk
> www.incutio.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Fri Dec 12 02:14:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Dec 2003 20:14:21 +1100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212095043.343700e9.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk> <20031212095043.343700e9.ttimo@idsoftware.com>
Message-ID: <20031212091421.GA25857@frobozz>

On Fri, Dec 12, 2003 at 09:50:43AM +0100, Timothee Besset wrote:
> The IRC RFCs describe the flood protection mecanism that's used in IRC
> daemons. The IRC protocol in twisted doesn't do any rate limitation, it

Actually, it does.  IRCClient has a lineRate[1] attribute that controls rate
limiting.  See the docstring for details.

-Andrew.

[1] It really should be called lineDelay, because as the docstring says,
    it's the delay, not the rate.  Oh well.




From nico at tekNico.net  Fri Dec 12 03:08:06 2003
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 12 Dec 2003 11:08:06 +0100
Subject: [Twisted-Python] Re: New twisted-web mailing list (Yes, this is for _YOU_)
In-Reply-To: <3FD7BB20.9080808@twistedmatrix.com>
References: <3FD7BB20.9080808@twistedmatrix.com>
Message-ID: <3FD99386.1020803@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> We've decided to split off discussion of twisted.web, Nevow, and Woven
> into a new mailing list: twisted-web at twistedmatrix.com

Now on gmane.org too, included by yours truly. :^)


- --
Nicola Larosa - nico at tekNico.net

"Computers are beyond dumb, they're mind-numbingly stupid.
They're hostile, rigid, capricious, and unforgiving.
They're impossibly demanding and they never learn anything."
- -- John R. Levine


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQE/2ZOEXv0hgDImBm4RAiRlAJ9FALfySlseNg5VmJpevPL/ziIesACeJLjJ
ZHO4SsDa2W8AQYe/Y+9blf4=
=e3I1
-----END PGP SIGNATURE-----




From dialtone at aruba.it  Fri Dec 12 04:13:07 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Fri, 12 Dec 2003 12:13:07 +0100
Subject: [Twisted-Python] Why does this not work?
In-Reply-To: <1071167296.26496.103.camel@sheriffpony>
References: <1071141909.719.133.camel@pascal> <20031211170305.GA4844@vercingetorix.caesar.org> <1071167296.26496.103.camel@sheriffpony>
Message-ID: <20031212111307.GG4844@vercingetorix.caesar.org>

* Itamar Shtull-Trauring <itamar at itamarst.org> [111203, 13:28]:
> $ twistd -y myscript.py
> 
> See also twistd --help

I was not. But a friend of mine told me to do so and it worked. Thx
for your help anyway.

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User
Date: Fri, 12 Dec 2003 12:13:03 +0100
Message-ID: <87k752xpa8.fsf at vercingetorix.caesar.org>



From ttimo at idsoftware.com  Fri Dec 12 05:22:17 2003
From: ttimo at idsoftware.com (Timothee Besset)
Date: Fri, 12 Dec 2003 13:22:17 +0100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212091421.GA25857@frobozz>
References: <3FD92171.9000705@cache-22.co.uk>
	<20031212095043.343700e9.ttimo@idsoftware.com>
	<20031212091421.GA25857@frobozz>
Message-ID: <20031212132217.42247c11.ttimo@idsoftware.com>

Last time I looked, lineRate used a simple delaying algorithm, which is
quite far from what the ircd does for rate control. It should work fairly
well if you set it to something ( default is no rate control ), but it's
far from optimal.

TTimo

On Fri, 12 Dec 2003 20:14:21 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> On Fri, Dec 12, 2003 at 09:50:43AM +0100, Timothee Besset wrote:
> > The IRC RFCs describe the flood protection mecanism that's used in IRC
> > daemons. The IRC protocol in twisted doesn't do any rate limitation, it
> 
> Actually, it does.  IRCClient has a lineRate[1] attribute that controls rate
> limiting.  See the docstring for details.
> 
> -Andrew.
> 
> [1] It really should be called lineDelay, because as the docstring says,
>     it's the delay, not the rate.  Oh well.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Fri Dec 12 05:47:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 12 Dec 2003 23:47:19 +1100
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212132217.42247c11.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk> <20031212095043.343700e9.ttimo@idsoftware.com> <20031212091421.GA25857@frobozz> <20031212132217.42247c11.ttimo@idsoftware.com>
Message-ID: <20031212124719.GA26954@frobozz>

On Fri, Dec 12, 2003 at 01:22:17PM +0100, Timothee Besset wrote:
> Last time I looked, lineRate used a simple delaying algorithm, which is
> quite far from what the ircd does for rate control. It should work fairly
> well if you set it to something ( default is no rate control ), but it's
> far from optimal.

Well, that's still better than "doesn't do any rate limitation", which is
what you claimed earlier.  I think the original poster is better off using
Twisted's rate limiting that works "fairly well" than being told it has none
at all.

-Andrew.




From R.Livsey at cache-22.co.uk  Fri Dec 12 06:00:06 2003
From: R.Livsey at cache-22.co.uk (Richard Livsey)
Date: Fri, 12 Dec 2003 13:00:06 +0000
Subject: [Twisted-Python] IRC & Excess-Flood
In-Reply-To: <20031212132217.42247c11.ttimo@idsoftware.com>
References: <3FD92171.9000705@cache-22.co.uk>	<20031212095043.343700e9.ttimo@idsoftware.com>	<20031212091421.GA25857@frobozz> <20031212132217.42247c11.ttimo@idsoftware.com>
Message-ID: <3FD9BBD6.9070102@cache-22.co.uk>

Thanks to all that replied, I have set lineRate and instead of 
displaying all results I have limited the number of messages sent at any 
one time to 10 (with a command to display the next 10 etc..)
Seems to work quite well now.

Thanks again.

-- 
R.Livsey
Incutio Web Developer
www.cache-22.co.uk
www.incutio.com


Timothee Besset wrote:

>Last time I looked, lineRate used a simple delaying algorithm, which is
>quite far from what the ircd does for rate control. It should work fairly
>well if you set it to something ( default is no rate control ), but it's
>far from optimal.
>
>TTimo
>




From missive at hotmail.com  Fri Dec 12 06:52:48 2003
From: missive at hotmail.com (Lee Harr)
Date: Fri, 12 Dec 2003 13:52:48 +0000
Subject: [Twisted-Python] Re: Installing Twisted 1.0.7 on FreeBSD 4.4
Message-ID: <BAY2-F64JkrKdMUPqRn00026fdc@hotmail.com>

>I'm wanting to install proxy65 onto a Jabber server - which requires at a
>minimum Twisted v1.0.7.  The only port of I see of Twisted for FreeBSD is
>1.0.6.  Has anyone successfully installed v1.0.7 onto a FreeBSD 4.4 system?
>Anything to look out for/gotcha's/etc?
>

1.1.0 is the current version in ports.

That said, FreeBSD 4.4 is pretty outdated, and you may have trouble
compiling anything from the ports collection. I have read a few messages
recently which hinted that people would need to update their base
systems first.

That said, I don't think you should have any problems just installing the
latest twisted straight from the release tarball.

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From martin at datacash.com  Fri Dec 12 08:25:43 2003
From: martin at datacash.com (Martin Waite)
Date: 12 Dec 2003 15:25:43 +0000
Subject: [Twisted-Python] patch for finger14.py
Message-ID: <1071242743.719.207.camel@pascal>

Hi,

Below is a patched up version of finger14.py for the 
tutorial page.

The key difference here is that the FingerService 
is registered as a service of the application, and so 
the startService() and stopService() methods are called 
appropriately.

I have also removed the statement 
   f.startService = self.startService
from within getFingerFactory(), because it didn't 
do anything.  Also, self.file has become self.filename
in _read().

It does work now, but is this the right way to do it ?

cheers,
Martin

=======================================

# Read from file
from twisted.application import internet, service
from twisted.internet import protocol, reactor, defer
from twisted.protocols import basic

class FingerProtocol(basic.LineReceiver):
    def lineReceived(self, user):
        self.factory.getUser(user
        ).addErrback(lambda _: "Internal error in server"
        ).addCallback(lambda m:
                      (self.transport.write(m+"\r\n"),
                       self.transport.loseConnection()))

class FingerService(service.Service):
    def __init__(self, filename):
        self.users = {}
        self.filename = filename
    def startService(self):
        def _read(self):
            for line in file(self.filename):
                user, status = line.split(':', 1)
                user=user.strip()
                status=status.strip()
                self.users[user] = status
            self.call = reactor.callLater(30, _read)
        _read(self)
        service.Service.startService(self)
    def stopService(self):
        service.Service.stopService(self)
        self.call.cancel()
    def getUser(self, user):
        return defer.succeed(self.users.get(user, "No such user"))
    def getFingerFactory(self):
        f = protocol.ServerFactory()
        f.protocol, f.getUser = FingerProtocol, self.getUser,
        return f

application = service.Application('finger', uid=1, gid=1)
f = FingerService('/etc/users')
finger = internet.TCPServer(79, f.getFingerFactory())

f.setServiceParent(service.IServiceCollection(application)) 
finger.setServiceParent(service.IServiceCollection(application))







From dizzyd at jabber.org  Fri Dec 12 08:28:31 2003
From: dizzyd at jabber.org (Dave Smith)
Date: Fri, 12 Dec 2003 08:28:31 -0700
Subject: [Twisted-Python] PyOpenSSL for Python 2.3
In-Reply-To: <3FCCC299.3060507@jibson.com>
References: <3FCCC299.3060507@jibson.com>
Message-ID: <D7D90A50-2CB7-11D8-80F4-00039386381C@jabber.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I have the Windows version available at:

http://www.dizzyd.com/pyOpenSSL-0.5.1.win32-py2.3.exe

D.

On Dec 2, 2003, at 9:49 AM, Steve Jibson wrote:

> Hi.
>
> Sorry to bother you, but do you have (or can you point me to) a binary 
> distribution of pyOpenSSL for Python 2.3?
>
> Thanks,
>
> Steve
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (Darwin)

iD8DBQE/2d6gYNE3chVHHsMRArtRAKCvZAMUKgYw4wb8/AZLSJ7BjzqH0QCgn7P0
aXeFVzXzrI7NoIIQnytIDr8=
=aqcT
-----END PGP SIGNATURE-----




From dp at twistedmatrix.com  Fri Dec 12 08:43:18 2003
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 12 Dec 2003 10:43:18 -0500
Subject: [Twisted-Python] template in wchild
In-Reply-To: <000001c3c02e$05e88920$687ba8c0@vicky>
References: <000001c3c02e$05e88920$687ba8c0@vicky>
Message-ID: <E802570D-2CB9-11D8-8659-000A95864FC4@twistedmatrix.com>


On Dec 11, 2003, at 4:30 PM, vicky lupien wrote:

> I have a web base application with woven. I’m using an html template 
> with a form for my page.  In the setUp fonction I’ve changed my 
> template.
>
> So when I click on my submit button in my form, I want to see the 
> template with the modification from the setUp in my wchild_submit.  I 
> don’t know if it’s possible.  I tried to use request.d but it’s seems 
> that it’s not the same request from my page’s class.

Please use twisted-web for questions like this in the future -- it's 
what we set it up for. 
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

twisted.web.woven.page.Page loads the template and parses it into a DOM 
at initialization time. If you want to dynamically construct a template 
in wchild_submit, which needs to return a Resource instance (which Page 
is), you should construct and return a new page instance with your 
dynamic template:

def wchild_submit(self, request):
	return page.Page(template="""<html>HELLO!</html>""")

dp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1184 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031212/966b3d89/attachment-0002.bin>

From fog at initd.org  Fri Dec 12 15:25:35 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 12 Dec 2003 23:25:35 +0100
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
Message-ID: <1071267935.1263.116.camel@localhost>

Hi *,

lately some people asked me why twisted does not support psycopg. Mm..
actually I write all my twisted-based code using psycopg so I was a
little bit disappointed. :) They told me that twisted is using pypgsql
as default and I finally realized what they meant: psycopg is missing
from the test_enterprise.py unit test and pypgsql is listed as "the"
postgresql adapter. So here's the patch that adds psycopg to
test_enterprise.py (I don't care about the "the" part :) 

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Spesso crescere ed andare a vivere da soli è l'unico modo di restare
   bambini.                                             -- Alice Fontana
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_enterprise.py-psycopg.diff
Type: text/x-patch
Size: 1675 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031212/9d8f022f/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031212/9d8f022f/attachment.sig>

From andrew-twisted at puzzling.org  Fri Dec 12 17:37:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 13 Dec 2003 11:37:06 +1100
Subject: [Twisted-Python] patch for finger14.py
In-Reply-To: <1071242743.719.207.camel@pascal>
References: <1071242743.719.207.camel@pascal>
Message-ID: <20031213003706.GA736@frobozz>

On Fri, Dec 12, 2003 at 03:25:43PM +0000, Martin Waite wrote:
> Hi,
> 
> Below is a patched up version of finger14.py for the 
> tutorial page.

Can you please submit this to http://twistedmatrix.com/bugs, so it doesn't
get forgotten?

Thanks!

-Andrew.




From douglas at paradise.net.nz  Fri Dec 12 20:54:40 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Sat, 13 Dec 2003 16:54:40 +1300
Subject: [Twisted-Python] subclassing ftp
Message-ID: <3FDA8D80.5060404@paradise.net.nz>

hi all,

I'm making a thing which collects webcam images via ftp (the lowest 
common denominator for webcam software), and sends them off again via 
the web.  I'd quite like to do it without troubling the file system, 
storing the images as python strings, whilst ignoring all the cd/pwd 
stuff.  Needless to say I don't want to use real system usernames.

Is this very sensible or possible?  I (happily) don't know much about 
the ftp protocol, or its twisted implementation.


cheers,

Douglas Bagnall




From fog at initd.org  Sat Dec 13 12:15:01 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 20:15:01 +0100
Subject: [Twisted-Python] long-lived database transaction
Message-ID: <1071342901.1263.164.camel@localhost>

Hi *,

attached to this mail there are two files that implement long-lived
database transactions for twisted (xdbapi.py, to be dropped in
twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 

some months ago i needed database transactions that span more than a
single deferred chain (i.e., runInteraction) and i noting that twisted
was missing such a feature i implemented them in my application. now
that i have some free time, i though it would be nice to let other
people use my code directly from twisted. note that everything you can
do with xdbapi can be done with adbapi and long chains of deferred, but
for some kind of applications keeping around an open transaction and
committing at the end of a complex process is much more simplier.

here is a little example, note that all the methods are completely
asynchronous and return deferreds. also note that the example just show
the usage but not the "reason" for xdbapi. (the original need was that
sometimes you can't commit some information because the whole stuff
comes in pieces but accumulating it makes the code much more complicated
than just writing to the db and the commit the whole at the end.)

class MyAppUsingLongLivedTransactions:

    def __init__(self):
        self.dbpool = xdbapi.ConnectionPool('psycopg', database='test')

    def doSomething(self):
        # react to some user input, open the transaction and save it away,
        # also do a select and present the user some data
        d = self.dbpool.begin()
        d.addCallback(self.doSomething_cb)

    def doSomething_cb(self, trans):
        self.trans = trans
        d = self.trans.runQuery("SELECT ...")
        d.addCallback(self.doSomethingWithTheDataAndAskUserNextStep)

    def doSomthingElse(self, data):
        # the user gave us some data and we need to write to db and commit
        self.trans.runOperation("INSERT...", data)
        # no callback/errback? ouch!
        self.trans.commit()
        # ouch! again, but this is just an example

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  L'unica cosa che riesco a produrre con una certa precisione nella mia
   vita sono i dubbi.                                  -- Natale Titotto
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xdbapi.py
Type: text/x-python
Size: 10079 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031213/2440b483/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_xdbapi.py
Type: text/x-python
Size: 10423 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031213/2440b483/attachment-0005.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031213/2440b483/attachment.sig>

From radix at twistedmatrix.com  Sat Dec 13 13:55:22 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 13 Dec 2003 15:55:22 -0500
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071342901.1263.164.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
Message-ID: <3FDB7CBA.7030903@twistedmatrix.com>

Federico Di Gregorio wrote:
> Hi *,
> 
> attached to this mail there are two files that implement long-lived
> database transactions for twisted (xdbapi.py, to be dropped in
> twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 


This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
you can integrate with/refactor adbapi such that you don't duplicate all 
that code?

Also, please create a "Feature"-level issue on the bug tracker for this 
patch (especially since the patch needs discussion):

   http://twistedmatrix.com/bugs/

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From khowe at perfnet.ca  Fri Dec 12 13:38:46 2003
From: khowe at perfnet.ca (Kevin Howe)
Date: Fri, 12 Dec 2003 15:38:46 -0500
Subject: [Twisted-Python] mktap not working with Twisted_NoDocs-1.1.1.win32-py2.3.exe
Message-ID: <000001c3c0f0$072cdad0$1a00000a@khowe>

I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script
runs with no errors (I tried using --debug), it just just ends with no TAP
file being created?




From itamar at itamarst.org  Sat Dec 13 14:05:32 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Dec 2003 16:05:32 -0500
Subject: [Twisted-Python] mktap not working with
	Twisted_NoDocs-1.1.1.win32-py2.3.exe
In-Reply-To: <000001c3c0f0$072cdad0$1a00000a@khowe>
References: <000001c3c0f0$072cdad0$1a00000a@khowe>
Message-ID: <1071349531.31486.1.camel@sheriffpony>

On Fri, 2003-12-12 at 15:38, Kevin Howe wrote:
> I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
> use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script
> runs with no errors (I tried using --debug), it just just ends with no TAP
> file being created?

You need to run c:\python23\scripts\mktap.py, and not what you are
currently doing (c:\python23\site-packages\twisted\scripts\mktap.py) or
whatever.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Sat Dec 13 14:16:30 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sat, 13 Dec 2003 22:16:30 +0100
Subject: [Twisted-Python] mktap not working with Twisted_NoDocs-1.1.1.win32-py2.3.exe
In-Reply-To: <000001c3c0f0$072cdad0$1a00000a@khowe>
References: <000001c3c0f0$072cdad0$1a00000a@khowe>
Message-ID: <20031213211630.GA24734@pasternak.w.lub.pl>

Kevin Howe [Fri, Dec 12, 2003 at 03:38:46PM -0500]:
> I just installed "Twisted_NoDocs-1.1.1.win32-py2.3.exe" but am  not able to
> use mktap. When I run "mktap.py --path=c:\my\path --port 8080" the script

If you won't give it the name of service to create, it won't do much.

Just run "mktap.py" without parameters and check the help.

AFAIR there's also mktap.bat somewhere under c:\python2x\

Take care,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From fog at initd.org  Sat Dec 13 14:50:50 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 22:50:50 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <3FDB7CBA.7030903@twistedmatrix.com>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>
Message-ID: <1071352250.1263.177.camel@localhost>

Il sab, 2003-12-13 alle 21:55, Christopher Armstrong ha scritto:
> Federico Di Gregorio wrote:
> > Hi *,
> > 
> > attached to this mail there are two files that implement long-lived
> > database transactions for twisted (xdbapi.py, to be dropped in
> > twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 
> 
> This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> you can integrate with/refactor adbapi such that you don't duplicate all 
> that code?

the original code was very different from adbapi, but i wanted to
provide a similar interface. that's why i rape'n'pasted. :)

unfortunately the adbapi code is based on a *thread* pool and the
connection pool is just a side-effect of using one connection per thread
(this is completely wrong, imho, see my comments of about one year ago
about adbapi on this very list.) anyway, this obviously makes impossible
to have long-lived transactions. 

i would be very happy to convert adbapi to a *real connection pool* and
add long-lived transactions to it (very much like xdbapi incorporates
one-shot transactions that mimic ConnectionPool.runXXX, look at the
code) but i tought it was less invasive to first provide a completely
separate implementation, starting with xdbapi.

> Also, please create a "Feature"-level issue on the bug tracker for this 
> patch (especially since the patch needs discussion):

ok. let's discuss it and i'll resubmit the patch after.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
   Lasciate che i furetti vengano a me. -- Maria Luisa Benedetta Panzani
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031213/79ff44bd/attachment.sig>

From grib at billgribble.com  Sat Dec 13 14:53:16 2003
From: grib at billgribble.com (Bill Gribble)
Date: Sat, 13 Dec 2003 15:53:16 -0600
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <3FDB7CBA.7030903@twistedmatrix.com>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>
Message-ID: <1071352396.976.136.camel@serrano>

On Sat, 2003-12-13 at 14:55, Christopher Armstrong wrote:
> This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> you can integrate with/refactor adbapi such that you don't duplicate all 
> that code?
> 
> Also, please create a "Feature"-level issue on the bug tracker for this 
> patch (especially since the patch needs discussion):
> 
>    http://twistedmatrix.com/bugs/

There's already a bug about this, # 303.  I submitted a patch for
similar functionality a while back.  After a couple go-rounds with Dave
P, I arrived at a satisfactory solution, which I then dropped the ball
on submitting :(  

I've been using it here for a couple of months with no problems.  I just
added a few calls to the existing adbapi api to get/commit transactions
and to call operations/queries in them. 

Attached is MY current patch to adbapi.py,, which I'm 92% happy with
(there are probably cleaner ways to handle the per-thread work queue).
Furthermore there aren't any tests.  I'd be happy to do a little more
work to clean it up and add tests if it's a decent base to work from. 

Thanks,
b.g.






-------------- next part --------------
A non-text attachment was scrubbed...
Name: adbdiff.out
Type: text/x-patch
Size: 6364 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031213/7e9c40c0/attachment-0002.bin>

From fog at initd.org  Sat Dec 13 15:15:43 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sat, 13 Dec 2003 23:15:43 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071352396.976.136.camel@serrano>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352396.976.136.camel@serrano>
Message-ID: <1071353743.1263.182.camel@localhost>

Il sab, 2003-12-13 alle 22:53, Bill Gribble ha scritto:

> There's already a bug about this, # 303.  I submitted a patch for
> similar functionality a while back.  After a couple go-rounds with Dave
> P, I arrived at a satisfactory solution, which I then dropped the ball
> on submitting :(  

sorry, i went over it. :(

> I've been using it here for a couple of months with no problems.  I just
> added a few calls to the existing adbapi api to get/commit transactions
> and to call operations/queries in them. 
> 
> Attached is MY current patch to adbapi.py,, which I'm 92% happy with

I don't like it very much, mainly because it sticks with the "let's use
a thread pool" and then needs semaphores and locks to do what is better
done by a simple list (see my patch)...

*but*

...it provides what i need(ed) and if it has any possibility of going in
i will happily help writing the unit tests. no problems leaving xdbapi
out in this case.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  I terminali seriali sono in via di estinzione (infatti quello che
   c'era si è estinto)                                 -- Simone Caldana
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031213/bf84d6ea/attachment.sig>

From stormcoder at yahoo.com  Sat Dec 13 18:44:33 2003
From: stormcoder at yahoo.com (Mike Owens)
Date: Sat, 13 Dec 2003 17:44:33 -0800
Subject: [Twisted-Python] Small Problem -twisted web
Message-ID: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>

I have written a script that runs as a Win32 service. The service runs but
when I try to connect I get a connection refused error in the browser. I am
including the source at the end. Also the call to unlistenTCP doesn't seem
to return. Anyone have any ideas?

import win32serviceutil as wsu
import win32service as ws
import win32event as we



from twisted.internet import app
from twisted.web import static, server, vhost, script

DefaultSite = r"sites\Default\documents"
my = r"sites\my\documents"
other = r"sites\other\documents"

Indices = ['index.html', 'index.rpy']

class TwistedService(wsu.ServiceFramework, object):
    _svc_name_ = "TwistedWeb"
    _svc_display_name_ = "A twisted web server"
    root = None
    Application = None
    def __init__ (self, args):
        wsu.ServiceFramework.__init__(self, args)
        self.hWaitStop = we.CreateEvent(None, 0, 0, None)
        self.root = vhost.NameVirtualHost()
        self.root.default = static.File(DefaultSite)
        pf = static.File(my)
        pf.indices = Indices

        pf.processors = {'.rpy': script.ResourceScript}
        pf.ignoreExt(".rpy")
        self.root.addHost("my.com", pf)
        self.root.addHost("www.my.com", pf)
        self.root.addHost("my.org", pf)
        self.root.addHost("www.my.org", pf)
        self.root.addHost("my.net", pf)
        self.root.addHost("www.my.net", pf)

        ob = static.File(other)
        ob.indices = Indices
        ob.processors = {".rpy":script.ResourceScript}
        ob.ignoreExt(".rpy")
        self.root.addHost("other.com", ob)
        self.root.addHost("www.other.com", ob)
        self.Application = app.Application("web")
        return


    def SvcStop (self):
        self.ReportServiceStatus(ws.SERVICE_STOP_PENDING)
        self.Application.unlistenTCP(80)
        we.SetEvent(self.hWaitStop)
        return

    def SvcDoRun (self):
        we.WaitForSingleObject(self.hWaitStop, we.INFINITE)
        self.Application.listenTCP(80, server.Site(self.root))
        return

if __name__ == "__main__":
    wsu.HandleCommandLine(TwistedService)


domains have been changed to protect the innocent.

"You can have peace. Or you can have freedom. Don't ever count on having
both at once." - Lazarus Long


---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.548 / Virus Database: 341 - Release Date: 12/5/2003





From andrew-twisted at puzzling.org  Sat Dec 13 19:03:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 14 Dec 2003 13:03:23 +1100
Subject: [Twisted-Python] Small Problem -twisted web
In-Reply-To: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>
References: <001901c3c1e3$d33ea1a0$c801a8c0@JUPITER>
Message-ID: <20031214020323.GA755@frobozz>

On Sat, Dec 13, 2003 at 05:44:33PM -0800, Mike Owens wrote:
> 
>     def SvcDoRun (self):
>         we.WaitForSingleObject(self.hWaitStop, we.INFINITE)
>         self.Application.listenTCP(80, server.Site(self.root))
>         return

You need to call reactor.run() here.  Search the mailing list archives for
working examples of Twisted NT services.

-Andrew.




From dave at krondo.com  Sun Dec 14 09:45:23 2003
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 14 Dec 2003 08:45:23 -0800
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
In-Reply-To: <1071267935.1263.116.camel@localhost>
References: <1071267935.1263.116.camel@localhost>
Message-ID: <1071420323.7281.38.camel@oneiros>

On Fri, 2003-12-12 at 14:25, Federico Di Gregorio wrote:
> Hi *,
> 
> lately some people asked me why twisted does not support psycopg. Mm..
> actually I write all my twisted-based code using psycopg so I was a
> little bit disappointed. :) They told me that twisted is using pypgsql
> as default and I finally realized what they meant: psycopg is missing
> from the test_enterprise.py unit test and pypgsql is listed as "the"
> postgresql adapter. So here's the patch that adds psycopg to
> test_enterprise.py (I don't care about the "the" part :) 

Thanks for the patch. I'm happy to add tests for other dbms's
as well. It is in now with one minor change -- the original
patch was setting PostgresTestCase.skip in one code path and
I changed it to PsycopgTestCase.skip.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031214/27eb4c25/attachment.sig>

From dave at krondo.com  Sun Dec 14 09:48:29 2003
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 14 Dec 2003 08:48:29 -0800
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071352250.1263.177.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
Message-ID: <1071420509.7281.42.camel@oneiros>

On Sat, 2003-12-13 at 13:50, Federico Di Gregorio wrote:
> Il sab, 2003-12-13 alle 21:55, Christopher Armstrong ha scritto:
> > Federico Di Gregorio wrote:
> > > Hi *,
> > > 
> > > attached to this mail there are two files that implement long-lived
> > > database transactions for twisted (xdbapi.py, to be dropped in
> > > twisted.enterprise) and the necessary unit tests (test_xdbapi.py). 
> > 
> > This looks like a gigantic rape'n'paste of adbapi.py. Isn't there a way 
> > you can integrate with/refactor adbapi such that you don't duplicate all 
> > that code?
> 
> the original code was very different from adbapi, but i wanted to
> provide a similar interface. that's why i rape'n'pasted. :)
> 
> unfortunately the adbapi code is based on a *thread* pool and the
> connection pool is just a side-effect of using one connection per thread
> (this is completely wrong, imho, see my comments of about one year ago
> about adbapi on this very list.) anyway, this obviously makes impossible
> to have long-lived transactions. 

Evidently not impossible, as Bill Gribble has a patch adding
this support to the existing adbapi.py. But it still may be
simpler to support an extended transaction api by going away
from a thread pool. In either case, we should not have two
separate modules.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031214/ac9f2119/attachment.sig>

From fog at initd.org  Sun Dec 14 10:21:54 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sun, 14 Dec 2003 18:21:54 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071420509.7281.42.camel@oneiros>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>
Message-ID: <1071422514.1263.195.camel@localhost>

Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
[snip]
> Evidently not impossible, as Bill Gribble has a patch adding

eheh. yesss. i should have added "without leaving a thread suspended".
my fault.

> this support to the existing adbapi.py. But it still may be
> simpler to support an extended transaction api by going away
> from a thread pool. In either case, we should not have two
> separate modules.

agreed. see my later mail; Bill's patch is fine if we can get it in.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
                              Viviamo in un mondo reale, Ciccio. -- Lucy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031214/f522fa54/attachment.sig>

From fog at initd.org  Sun Dec 14 10:23:08 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Sun, 14 Dec 2003 18:23:08 +0100
Subject: [Twisted-Python] PATCH: psycopg support in test_enterprise.py
In-Reply-To: <1071420323.7281.38.camel@oneiros>
References: <1071267935.1263.116.camel@localhost>
	 <1071420323.7281.38.camel@oneiros>
Message-ID: <1071422588.1263.197.camel@localhost>

Il dom, 2003-12-14 alle 17:45, Dave Peticolas ha scritto:
> Thanks for the patch. I'm happy to add tests for other dbms's
> as well. It is in now with one minor change -- the original
> patch was setting PostgresTestCase.skip in one code path and
> I changed it to PsycopgTestCase.skip.

argh. and i was accused of rape'n'paste just 24h ago... :)
thank you very much for including my patch.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  "Yes, your honour, I have RSA encryption code tattood on my penis.
   Shall I show the jury?"                                     -- <dark>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031214/7b748b87/attachment.sig>

From lstep at adequat.net  Sun Dec 14 15:50:48 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Sun, 14 Dec 2003 23:50:48 +0100
Subject: [Twisted-Python] Twisted Weekly News #9
Message-ID: <200312142350.28201.lstep@adequat.net>

====================================================================
Twisted Weekly News #9
====================================================================

.. contents::

If you have any new information, ideas, announcements for the next TWN, please 
write to me, <lior at gradstein.info>. TWN is also available as HTML formatted 
ReST on http://gradstein.info/articles/twisted_news/twisted_news/twn9

The Twisted Weekly News
-------------------------

9th Issue. Sunday, December 14, 2003

QOTW::

   <moshez> dash: being squishy is pleasant for everyone always
   <dash> moshez: i demand proof
   <moshez> dash: it is an AXIOM!!
   <moshez> dash: squishing is part of the basic axiom set
   <moshez> like DeCartes said "I squish therefore I am"

Discussions
-------------

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006692.html
   RodrigoB suggested to use Twisted for the refactoring of The Circle, a P2P
   app.

 * http://twistedmatrix.com/pipermailtwisted-python/2003-December/006705.html
   Last week, someone asked for an example of a Jabber client using Twisted
   libs, darryl posted a reply this week. darryl posted another example using
   PEAK too (http://randomthoughts.vandorp.ca/syncato/WK/blog/671?t=projects)

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006723.html
   Cinober explains his discoveries on debugging Twisted code within Emacs.
   Itamar gave a more generic explanation on how to debug general python code    
 (http://twistedmatrix.com/pipermail/twisted-python/2003-December/006724.html)

 * http://twistedmatrix.com/pipermail/twisted-python/2003-December/006745.html
   Richard Livsey asked why his IRC bot gets disconnected without any
   possibility of reconnection after sending too much data to the server.
   Timothee Besset replied he should read the IRC RFCs, that explains that his
   IRC bot was banned (flooding protection) and that he should use a rate
   limiting algorithm which doesn't yet exist in Twisted IRCClient
   implementation. Andrew Bennetts answered that, actually, there
   is a rate limiting method, but it is more a delay than a rate limitation
 (http://twistedmatrix.com/pipermail/twisted-python/2003-December/006749.html)
   which solved Richard's problem.


Progress
-----------

 * **Twisted 1.1.1**: Itamar announced Twisted 1.1.1 as the official new
    stable release 
(http://twistedmatrix.com/pipermail/twisted-python/2003-December/006731.html).
    The changes are mainly bugfixes and minor improvements. MSN8P support in
    the MSN protocol has been updated and Conch SSH agent client now supports
    SSH auth agent.

 * **Quotient 0.8.8**: A new version (0.8.8) of Quotient
   (http://www.divmod.org/) has been released.
   The pace of releases is getting faster each week. In this release (except
   from bugfixes), the database has been simplified and throttling tools have
   been added. To show that Quotient can be used as a framework not just for
   email, a project planning tool has been started (Anvil).


Cool Thing of the Week
-----------------------

 * **Twisted-web split** A new mailing list
 (http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web and stored on
   NNTP gmane.org) as well as a new IRC channel
 (irc://irc.freenode.net/#twisted.web) who focus on twisted.web and
   woven/nevow part of Twisted.


Current releases
-----------------

  * Twisted: 1.1.1 (released 2003-12-10)
  * Quotient: 0.8.8 (released 2003-12-12)
  * Twisted Java: 0.6.1 (released 2003-12-02)



Ok, that's it for this week. Thanks for reading!

-- 
Luc Stepniewski <lstep at adelux.fr> <http://www.adelux.fr/>
Adelux - Securite, Zope, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A




From jjanecek at telusplanet.net  Sun Dec 14 18:41:37 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 17:41:37 -0800
Subject: [Twisted-Python] reactor.callLater ponderings
Message-ID: <1071452497.3fdd11517366c@webmail.telus.net>

I created this little program to test the callLater feacture in
twisted.

from twisted.internet import pollreactor
pollreactor.install()

##try :
##	from twisted.internet import win32eventreactor
##	win32eventreactor.install()
##except :
##	print "can not install win32 reactor"

from twisted.internet import reactor
from twisted.python import threadable
from twisted.internet import threads
threadable.init(1)
reactor.suggestThreadPoolSize(10)
print reactor

import time
#conclusions would be possible to correct so reactor
#fires more accuratly not required since it is pretty close
#for what ever reason reactor can not go finer then 10ms
#on freebsd the min timer frequency is 20.0 ms
frequency=20.0 #time that callback will pulse in ms
clock_count=0
start_time=None
last_tick=0

def clock_pulse() :
    global start_time,clock_count,last_tick
    if start_time==None :
        start_time=time.time()
        
    next_time=frequency/1000.0
    #i noticed that the clock needs to be corrected
    #to keep proper time over a long period 
    cur_time=(time.time()-start_time)*1000
    if (cur_time-clock_count)>frequency :
        print "too slow correction"
        next_time=0
    elif(clock_count-cur_time)>frequency :
        print "too fast correction"
        next_time=(frequency/1000.0)*2
    #if clock_count>0 :
    #last_tick=time.time
    reactor.callLater(next_time,clock_pulse)
    reactor.callInThread(clock_pulse_thread)
    clock_count+=frequency
    #clock_pulse_thread()
    

def clock_pulse_thread() :
    global start_time,clock_count,last_tick
    cur_time=time.time()    
    if last_tick>0 :
        print "diff ",(cur_time-last_tick)*1000
        pass
    last_tick=cur_time        
    
    if clock_count>=1000 :
        stop_time=time.time()
        real_time=(stop_time-start_time)*1000
        print "Total Time= ",clock_count," ",real_time
        print "Difference= ",clock_count-real_time," percent
",((clock_count-real_time)/real_time)*100.0
        reactor.stop()
    time.sleep(0.01)
  
reactor.callLater(frequency/1000.0,clock_pulse)
reactor.run()

Now the instresting thing is that is windows the smallest
increment i can call the callback with is like 10 ms. 
While on freebsd even using kqueue it is like 20 ms.

I guess you could call that smallest increment like a tick.
ticks in freebsd and on windows are accurate while on linux they
seem to be all over the place, why is this ?

Also is there a place that I can use to set how frequent i want the reactor
to check to see if a callLater function should be run ?

While on Linux (I tested using redhat 9.0 and mandrake 9.2) it does
not seem to be accurate on anything under 1 second. I peeked inside the
basereactor code and it does not seem to shed anylight. 

I am running the clock pulse in a thread to simulate that it has to 
wait for something.






From itamar at itamarst.org  Sun Dec 14 18:52:40 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 14 Dec 2003 20:52:40 -0500
Subject: [Twisted-Python] reactor.callLater ponderings
In-Reply-To: <1071452497.3fdd11517366c@webmail.telus.net>
References: <1071452497.3fdd11517366c@webmail.telus.net>
Message-ID: <1071453160.1317.5.camel@sheriffpony>

On Sun, 2003-12-14 at 20:41, jjanecek at telusplanet.net wrote:

> Also is there a place that I can use to set how frequent i want the reactor
> to check to see if a callLater function should be run ?

Nope. If you want high resolution you probably want
twisted.internet.task.LoopingCall.

Using itimer python extensions, and registering reactor.wakeUp() as the
signal handler for SIGALARM can also help.

Also note the kqueue python extension is supposedly badly designed, and
needs a rewrite.

I've seen better than 1sec resolution on linux - 20ms seems to be limit
there too without using something like LoopingCall.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From andrew-twisted at puzzling.org  Sun Dec 14 20:17:36 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Dec 2003 14:17:36 +1100
Subject: [Twisted-Python] reactor.callLater ponderings
In-Reply-To: <1071452497.3fdd11517366c@webmail.telus.net>
References: <1071452497.3fdd11517366c@webmail.telus.net>
Message-ID: <20031215031736.GA3302@frobozz>

On Sun, Dec 14, 2003 at 05:41:37PM -0800, jjanecek at telusplanet.net wrote:
> I created this little program to test the callLater feacture in
> twisted.

It's not immediately clear to me exactly what you are trying to test with
this code... if you're just testing the resolution of callLater, then why
are you using threads?

callLater uses the timeout facility of select(2), poll(2) or whatever
underlying mechanism your reactor is using (you're using the poll reactor).
The poll system call takes a timeout in milliseconds, so I would expect that
on linux the theoretical minimum timeout you could get is determined by the
kernel's HZ value.  I don't know if the intervening layers of libc and
Python's runtime would have any impact... but given the way that Python does
multithreading, I *would* expect using threads in Python to have a
measurable impact.  Maybe try again without using threads?

Also, you call reactor.stop() from within a thread... I *think* that to be
correct, that you need to do reactor.callFromThread(reactor.stop).  I'm not
sure, though.

> def clock_pulse_thread() :
[...]
>     time.sleep(0.01)
>   
> reactor.callLater(frequency/1000.0,clock_pulse)
> reactor.run()
> 
> Now the instresting thing is that is windows the smallest
> increment i can call the callback with is like 10 ms. 

This is probably due to a hard-coded value on line 153 of win32reactor.py
(assuming you're using win32reactor and not just the default select
reactor..?)

> Also is there a place that I can use to set how frequent i want the reactor
> to check to see if a callLater function should be run ?

This question doesn't really make sense for most of the reactors.  The
reactor looks at the queue of callLaters to determine when it needs to next
wake up by to process the next one on time.  If there's activity on one of
its file descriptors (i.e. there's network traffic waiting to be read), it
will wake up sooner, process the traffic, and recalculate the timeout.  If
there is a new callLater added, it will recalculate the timeout.  The
timeout is passed to select or poll or kqueue or whatever, and the OS kernel
is in charge of making the system call return after the timeout has expired
if I/O hasn't already caused that to happen.

In the case of the win32reactor, there is a value with roughly the meaning
you have in mind (line 153 of win32reactor...)

> While on Linux (I tested using redhat 9.0 and mandrake 9.2) it does
> not seem to be accurate on anything under 1 second. I peeked inside the
> basereactor code and it does not seem to shed anylight. 

Is the consistent with both the default reactor (which uses select), and the
poll reactor?  Can you reproduce this without threads?

> I am running the clock pulse in a thread to simulate that it has to 
> wait for something.

As I've mentioned before, I don't really understand what you mean by this.

-Andrew.




From jjanecek at telusplanet.net  Sun Dec 14 22:12:24 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 21:12:24 -0800
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :)
Message-ID: <1071465144.3fdd42b85396d@webmail.telus.net>

I know i should have attended those english classes :(
Instead i was out smoking drugs and skipping english class to hack on my
computer. I am can not even use the excuse that english is not my native tongue :(.


Anyway in a nutshell i am making an rtp stack.
for the recieving part no problem.

Why I made the little clocking test program is because for rtp packets the
timing is very important. For audio the packet length is ussually 20ms.

I wanted to process the call inside a thread just because sometimes it has to
wait to read from the audio input. Surprisingly enuff it does not really make
that much difference if I call in thread or not.

when i am on my windows xp box, it would go at like 10ms with a correction only
needed like every 30 secs or so. That is using default reactor and windoze reactor.

for freebsd the finest I can get it is with 20ms it does not matter if i use
default reactor, poll reactor or kqueue. I just tried kqueue reactor since it 
sounded intresting :). 

For linux (red hat and mandrake) i tried both select reactor and poll reactor,
and it did not seem to make difference.

Anyway I will investigate Itamar's suggestions :

Nope. If you want high resolution you probably want
twisted.internet.task.LoopingCall.

Using itimer python extensions, and registering reactor.wakeUp() as the
signal handler for SIGALARM can also help.

and i will keep u guys informed with what i discover, thanx for your guys help :)




From itamar at itamarst.org  Sun Dec 14 22:44:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 00:44:21 -0500
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am
	trying to do) :)
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net>
References: <1071465144.3fdd42b85396d@webmail.telus.net>
Message-ID: <1071467060.31479.11.camel@sheriffpony>

On Mon, 2003-12-15 at 00:12, jjanecek at telusplanet.net wrote: 

> Anyway in a nutshell i am making an rtp stack.
> for the recieving part no problem.
> 
> Why I made the little clocking test program is because for rtp packets the
> timing is very important. For audio the packet length is ussually 20ms.

LoopingCall was written for RTP :) See CVS at
http://sf.net/projects/shtoom/ -- if you want to help I'm sure anthony
would appreciate it.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From anthony at interlink.com.au  Sun Dec 14 23:08:40 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 15 Dec 2003 17:08:40 +1100
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :) 
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net> 
Message-ID: <200312150608.hBF68e9F013378@localhost.localdomain>

>>> jjanecek at telusplanet.net wrote
> Anyway in a nutshell i am making an rtp stack.
> for the recieving part no problem.
> 
> Why I made the little clocking test program is because for rtp packets the
> timing is very important. For audio the packet length is ussually 20ms.
> 
> I wanted to process the call inside a thread just because sometimes it has to
> wait to read from the audio input. Surprisingly enuff it does not really make
> that much difference if I call in thread or not.

Been there, done that. See the Shtoom project at shtoom.sf.net. You
don't need to put it in a thread - indeed, I'd suspect that putting it
in a thread would give worse behaviour, because of the context switching.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From jjanecek at telusplanet.net  Mon Dec 15 00:15:52 2003
From: jjanecek at telusplanet.net (jjanecek at telusplanet.net)
Date: Sun, 14 Dec 2003 23:15:52 -0800
Subject: [Twisted-Python] Re: Re: reactor.callLater ponderings (what i am trying to do) :)
In-Reply-To: <20031215061002.22990.60139.Mailman@twistedmatrix.com>
References: <20031215061002.22990.60139.Mailman@twistedmatrix.com>
Message-ID: <1071472552.3fdd5fa8a2785@webmail.telus.net>

Thanx for your help :)

Here is an example of how i implement LoopClock

from twisted.internet import reactor
print reactor
from twisted.internet.task import LoopingCall
from twisted.python import threadable
from twisted.internet import threads
threadable.init(1)
reactor.suggestThreadPoolSize(10)
print reactor

import time
#conclusions would be possible to correct so reactor
#fires more accuratly not required since it is pretty close
#for what ever reason reactor can not go finer then 10ms
#on freebsd the min timer frequency is 20.0 ms
frequency=10.0 #time that callback will pulse in ms
clock_count=0
start_time=None
last_tick=0

def clock_pulse() :
    global start_time,clock_count,last_tick
    if start_time==None :
        start_time=time.time()
        
    next_time=frequency/1000.0
    cur_time=(time.time()-start_time)*1000

    reactor.callInThread(clock_pulse_thread)
    #clock_pulse_thread() 
    clock_count+=frequency
    

def clock_pulse_thread() :
    global start_time,clock_count,last_tick
    cur_time=time.time()    
    if last_tick>0 :
        print "diff ",(cur_time-last_tick)*1000
        pass
    last_tick=cur_time        
    
    if clock_count>=10000 :
        stop_time=time.time()
        real_time=(stop_time-start_time)*1000
        print "Total Time= ",clock_count," ",real_time
        print "Difference= ",clock_count-real_time," percent
",((clock_count-real_time)/real_time)*100.0
        reactor.stop()
    time.sleep(0.005)
  
LC=LoopingCall(clock_pulse)
LC.start(frequency/1000.0)

reactor.run()

20 ms on freebsd still seems to be the minimum of resultion 
10 ms on windows and linux :)
anyway 20 ms is adequate.

I would like to help anthony on the shloom project but I have to 
talk to my boss first. Unfortunately I am not the one who makes the
decisions :(. If the small company I am working for goes tits up
then i will release my code as I relocate my office to a dumpster :)

Anyway it is kinda intresting that me and anthony had the idea for a 
VOIP fone using twisted at approx the same time.

I attempting to create an "RTP stack" which will accept and broadcast rtp
packets from a variety of sources and then like filter them down similar
to how a tcp stack works. If that makes sense.

The only problem i had was the timing issue. I tested my code on a 
windoze box, when i moved it up to freebsd box i started to drop packets 
(IE packets where arriving late). I orrigionally thought it was because of
the distance from me to the server (I am like 20 hops). But then I discovered
that the real problem was i was not sending out the packets at the correct time
as I had thought. The class LoopingCall does in a more elegant manner what i was 
attempting to do in my Clocking Program :)


Anyway Thanx for your help, and twisted kiks ass :)





From nbm at mithrandr.moria.org  Mon Dec 15 00:37:43 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Mon, 15 Dec 2003 09:37:43 +0200
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :)
In-Reply-To: <1071465144.3fdd42b85396d@webmail.telus.net>
References: <1071465144.3fdd42b85396d@webmail.telus.net>
Message-ID: <20031215073743.GA12070@mithrandr.moria.org>

On Sun 2003-12-14 (21:12), jjanecek at telusplanet.net wrote:
> when i am on my windows xp box, it would go at like 10ms with a correction only
> needed like every 30 secs or so. That is using default reactor and windoze reactor.
> 
> for freebsd the finest I can get it is with 20ms it does not matter if i use
> default reactor, poll reactor or kqueue. I just tried kqueue reactor since it 
> sounded intresting :). 

On FreeBSD, check your HZ setting if you haven't done so already:

sysctl kern.clockrate
kern.clockrate: { hz = 100, tick = 10000, profhz = 1024, stathz = 128 }

You probably want hz=1000 (at least), so put the following at the end of
(or create the file if it doesn't exist) /boot/loader.conf:

	kern.hz="1000"

You don't mention what version of FreeBSD you're using - this'll work on
4.4-RELEASE and upward.  Before that, you'd have to recomile your kernel
with "options HZ=1000" in your config file.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
http://mithrandr.moria.org/



From anthony at interlink.com.au  Mon Dec 15 00:55:20 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 15 Dec 2003 18:55:20 +1100
Subject: [Twisted-Python] Re: reactor.callLater ponderings (what i am trying to do) :) 
In-Reply-To: <20031215073743.GA12070@mithrandr.moria.org> 
Message-ID: <200312150755.hBF7tKDf028989@localhost.localdomain>

>>> Neil Blakey-Milner wrote
> On FreeBSD, check your HZ setting if you haven't done so already:
> 
> sysctl kern.clockrate
> kern.clockrate: { hz = 100, tick = 10000, profhz = 1024, stathz = 128 }


Note, though, that for typical RTP usage, you need to only hit a 20ms
timer. This is quite do-able with a 10ms resolution clock.

Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From slyphon at twistedmatrix.com  Mon Dec 15 01:24:35 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 15 Dec 2003 03:24:35 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server implementation
Message-ID: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>

I've got a newly-refactored version of FTP in my sandbox. I'm not sure,
however, how to deploy it into the library. It splits the actual
protocol code and the server-y aspects into two files, ftp and ftpdav.
I feel that the protocol implementation should be separate from the code
that integrates the protocol with cred, i'm just unsure about where that
cred-code should go. Also, there's been some considerable trouble caused
by the fact that my avatar implemenation is not windows-friendly. Any
thoughts on how to either adapt it, or if some kindly windows-user could
implement a windows-compatable version, would be greatly appreciated.

Also, on a tangent, the new (-new) ftp protocol refactoring in my
sandbox has much more complete code-coverage in terms of the unittests. 

I await your suggestions before taking further action.

-Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031215/2860eb82/attachment.sig>

From Richard.Townsend at edl.uk.eds.com  Mon Dec 15 03:14:44 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 15 Dec 2003 10:14:44 -0000
Subject: [Twisted-Python] Using service.Application
Message-ID: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>

I had the following demo script for Twisted 1.0.6:

#-----------------
import sys
from twisted.internet import app, reactor
from twisted.python import log, logfile
from twisted.web import server, resource

class Simple(resource.Resource):
    isLeaf = True

    def render(self, request):
        print "Request:", request
        return "<html>Hello</html>"


if __name__ == '__main__':
    
    f = sys.stdout
    log.startLogging(f)

    site = server.Site(Simple())
    application = app.Application('web')
    application.bindPorts()
    application.listenTCP(8080, site)
    application.run(save=0)
#-----------------

This works OK with the following client:

#-----------------
from twisted.internet import reactor
from twisted.web.client import getPage
from twisted.python.util import println


class Client:
    
    def __init__(self):
        self.sendReq()
        reactor.run()


    def handleCallback(self, value):
        println("Success:", value)
        reactor.stop()
    
    
    def handleErrback(self, error):
        println("Error:", error)
        reactor.stop()


    def sendReq(self):
        uri = "http://localhost:8080/Simple"
        deferred = getPage(uri)
        deferred.addCallbacks(self.handleCallback,
                              self.handleErrback)

        
if __name__ == "__main__":
    
    Client()
#-----------------

However, under Twisted 1.1.1 this raises: 
exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
use twisted.application instead.

So I tried to create a new version of the server:

#-----------------
import sys
from twisted.application import service, internet
from twisted.internet import reactor
from twisted.python import log
from twisted.web import server, resource


class Simple(resource.Resource):
    isLeaf = True

    def render(self, request):
        print "Request:", request
        return "<html>Hello</html>"


if __name__ == '__main__':
    
    f = sys.stdout
    log.startLogging(f)
    
    root = Simple()
    site = server.Site(root)
    application = service.Application('web')
    sc = service.IServiceCollection(application)
    i = internet.TCPServer(8080, site)
    i.setServiceParent(sc)
    reactor.run()
#-----------------

But now my client gives this:

Error: [Failure instance: Traceback: 
twisted.internet.error.ConnectionRefusedError, 
Connection was refused by other side: 22: Invalid argument.
]

I am running Python 2.3.2 on HP-UX 11i.

Can anybody advise what is happening here?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031215/a6b7954a/attachment.html>

From orya at bgumail.bgu.ac.il  Mon Dec 15 04:31:27 2003
From: orya at bgumail.bgu.ac.il (orya at bgumail.bgu.ac.il)
Date: Mon, 15 Dec 2003 13:31:27 +0200
Subject: [Twisted-Python] Hi
Message-ID: <20031215114520.HZOQ26787.shunit@shunit>

i have some hard time dealing with user input 
on a woven form 
can anyone help????




From alan at norfolkgraphics.com  Mon Dec 15 05:05:17 2003
From: alan at norfolkgraphics.com (Alan McIntyre)
Date: Mon, 15 Dec 2003 07:05:17 -0500
Subject: [Twisted-Python] Twisted is cool
Message-ID: <3FDDA37D.1090201@norfolkgraphics.com>

Hi all,

I just wanted to thank the Twisted developers for making such a cool 
piece of software.  We received a question from a customer late Friday 
afternoon about remotely viewing data from their data acquisition 
system.  There are short-term options that involve using their existing 
fat clients over a VPN, communicating with a server via a proprietary 
format, but that's not acceptable long-term (for many reasons), so I 
figured I would try making a web-based demo in Python.

Thanks to Twisted and Python, I was able to start from scratch and put 
together a server to present some of this data via XML-RPC in about 2 or 
3 hours (and that includes looking up a lot of stuff in the 
documentation).  I'm currently using PHP to display the data on a web 
page, but I may eventually use Twisted for that as well.

If I had tried to do this in C/C++, or if even if I'd tried to do this 
in Python without Twisted, I'd probably still be fighting with it for a 
good part of this week.  But now I have a demo put together, it's been 
running for about 7 hours with no problems, and we can go from saying 
"we'll look into that" to "oh, yeah, here's something we put together 
from scratch in our spare time" in less than one business day.

Of course there's a long way to go before this becomes a production 
product, but hopefully this means I will be working with Twisted and 
Python a lot more in the future, and hopefully I'll be able to tell more 
about it as time goes on.  Again, many thanks for such a wonderful piece 
of software.

Happy Monday,
Alan




From michal at pasternak.w.lub.pl  Mon Dec 15 05:12:51 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Mon, 15 Dec 2003 13:12:51 +0100
Subject: [Twisted-Python] Hi
In-Reply-To: <20031215114520.HZOQ26787.shunit@shunit>
References: <20031215114520.HZOQ26787.shunit@shunit>
Message-ID: <20031215121251.GB24520@pasternak.w.lub.pl>

orya at bgumail.bgu.ac.il [Mon, Dec 15, 2003 at 01:31:27PM +0200]:
> i have some hard time dealing with user input 
> on a woven form 
> can anyone help????

Eric S. Raymond propably. Click here: 
http://www.catb.org/~esr/faqs/smart-questions.html#prune

-- 
Michal Pasternak :: http://pasternak.w.lub.pl



From andrew-twisted at puzzling.org  Mon Dec 15 05:35:57 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 15 Dec 2003 23:35:57 +1100
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server implementation
In-Reply-To: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <20031215123557.GA4547@frobozz>

On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
> cred-code should go. Also, there's been some considerable trouble caused
> by the fact that my avatar implemenation is not windows-friendly. Any
> thoughts on how to either adapt it, or if some kindly windows-user could
> implement a windows-compatable version, would be greatly appreciated.

Is the problem with windows the lack of pwd and grp modules?  I presume you
need these for authentication and permission checking?  If that's the case,
perhaps you could implement a simpler avatar for windows that only supports
anonymous, read-only access to any files that the server has permission to
read?  (i.e. basically what the old server supported anyway)

> Also, on a tangent, the new (-new) ftp protocol refactoring in my
> sandbox has much more complete code-coverage in terms of the unittests. 

Woo!  What about for the client?  ;)

-Andrew.




From john.abel at pa.press.net  Mon Dec 15 05:48:09 2003
From: john.abel at pa.press.net (John Abel)
Date: Mon, 15 Dec 2003 12:48:09 +0000
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
 implementation
In-Reply-To: <20031215123557.GA4547@frobozz>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com> <20031215123557.GA4547@frobozz>
Message-ID: <3FDDAD89.6070101@pa.press.net>

Andrew Bennetts wrote:

>On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
>  
>
>>cred-code should go. Also, there's been some considerable trouble caused
>>by the fact that my avatar implemenation is not windows-friendly. Any
>>thoughts on how to either adapt it, or if some kindly windows-user could
>>implement a windows-compatable version, would be greatly appreciated.
>>    
>>
>
>Is the problem with windows the lack of pwd and grp modules?  I presume you
>need these for authentication and permission checking?  If that's the case,
>perhaps you could implement a simpler avatar for windows that only supports
>anonymous, read-only access to any files that the server has permission to
>read?  (i.e. basically what the old server supported anyway)
>
>  
>
I have code for authentication on 2000/XP platforms, if you're 
interested? It is used in the medusa ftp example.

>>Also, on a tangent, the new (-new) ftp protocol refactoring in my
>>sandbox has much more complete code-coverage in terms of the unittests. 
>>    
>>
>
>Woo!  What about for the client?  ;)
>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>



From exarkun at intarweb.us  Mon Dec 15 06:27:19 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 15 Dec 2003 08:27:19 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
Message-ID: <20031215132719.GA28160@intarweb.us>

On Mon, Dec 15, 2003 at 10:14:44AM -0000, Richard.Townsend at edl.uk.eds.com wrote:
> I had the following demo script for Twisted 1.0.6:
> 
> #-----------------
> [snip server code]
> #-----------------
> 
> This works OK with the following client:
> 
> #-----------------
> [snip client code]
> #-----------------
> 
> However, under Twisted 1.1.1 this raises: 
> exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
> use twisted.application instead.
> 
> So I tried to create a new version of the server:
> 
> #-----------------
> [snip]
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
>     
>     root = Simple()
>     site = server.Site(root)
>     application = service.Application('web')
>     sc = service.IServiceCollection(application)
>     i = internet.TCPServer(8080, site)
>     i.setServiceParent(sc)
>     reactor.run()
> #-----------------
> 
> But now my client gives this:
> 
> Error: [Failure instance: Traceback: 
> twisted.internet.error.ConnectionRefusedError, 
> Connection was refused by other side: 22: Invalid argument.
> ]
> 
> I am running Python 2.3.2 on HP-UX 11i.
> 
> Can anybody advise what is happening here?
> 

  Your new version isn't actually starting up any of your services.  Two
ways to address this: use twisted.internet.app.startApplication and
twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
internally) instead of reactor.run, or get rid of the __name__ check and the
reactor.run() call, and use "twistd -y <your file>" to run the server.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031215/cd66dfb3/attachment.sig>

From Richard.Townsend at edl.uk.eds.com  Mon Dec 15 07:01:44 2003
From: Richard.Townsend at edl.uk.eds.com (Richard.Townsend at edl.uk.eds.com)
Date: Mon, 15 Dec 2003 14:01:44 -0000
Subject: [Twisted-Python] Using service.Application
Message-ID: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>

> Your new version isn't actually starting up any of your services.  Two
> ways to address this: use twisted.internet.app.startApplication and
> twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
> internally) instead of reactor.run, or get rid of the __name__ check and
the
> reactor.run() call, and use "twistd -y <your file>" to run the server.
> 
>   Jp

Thanks for the suggestions Jp (I assume you meant twisted.application.app,
not twisted.internet.app).

I don't use twistd at present because I subclass Logfile to limit the max
number of rotating log files and I not aware of how I can do that with
twistd.

regards,
Richard Townsend
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20031215/fca13170/attachment.html>

From exarkun at intarweb.us  Mon Dec 15 07:16:06 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 15 Dec 2003 09:16:06 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B242@ukhkc201>
Message-ID: <20031215141606.GA28376@intarweb.us>

On Mon, Dec 15, 2003 at 02:01:44PM -0000, Richard.Townsend at edl.uk.eds.com wrote:
> > Your new version isn't actually starting up any of your services.  Two
> > ways to address this: use twisted.internet.app.startApplication and
> > twisted.internet.app.runReactorWithLogging (these are what "twistd" calls
> > internally) instead of reactor.run, or get rid of the __name__ check and
> the
> > reactor.run() call, and use "twistd -y <your file>" to run the server.
> > 
> >   Jp
> 
> Thanks for the suggestions Jp (I assume you meant twisted.application.app,
> not twisted.internet.app).

  Ahh, yes.  Finger memory is still using the old system...

> 
> I don't use twistd at present because I subclass Logfile to limit the max
> number of rotating log files and I not aware of how I can do that with
> twistd.

  Yep, twistd doesn't let you control that very well..  Fixing it has long
been on my todo list.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031215/843207f5/attachment.sig>

From dave at krondo.com  Mon Dec 15 07:34:25 2003
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 15 Dec 2003 06:34:25 -0800
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071422514.1263.195.camel@localhost>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>  <1071422514.1263.195.camel@localhost>
Message-ID: <1071498865.7280.52.camel@oneiros>

On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> [snip]
> > Evidently not impossible, as Bill Gribble has a patch adding
> 
> eheh. yesss. i should have added "without leaving a thread suspended".
> my fault.
> 
> > this support to the existing adbapi.py. But it still may be
> > simpler to support an extended transaction api by going away
> > from a thread pool. In either case, we should not have two
> > separate modules.
> 
> agreed. see my later mail; Bill's patch is fine if we can get it in.

I'd like to have some tests for it before it goes in.
I might have some time over holiday break to work on
some.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031215/4704bec1/attachment.sig>

From fog at initd.org  Mon Dec 15 08:09:16 2003
From: fog at initd.org (Federico Di Gregorio)
Date: Mon, 15 Dec 2003 16:09:16 +0100
Subject: [Twisted-Python] long-lived database transaction
In-Reply-To: <1071498865.7280.52.camel@oneiros>
References: <1071342901.1263.164.camel@localhost>
	 <3FDB7CBA.7030903@twistedmatrix.com>  <1071352250.1263.177.camel@localhost>
	 <1071420509.7281.42.camel@oneiros>  <1071422514.1263.195.camel@localhost>
	 <1071498865.7280.52.camel@oneiros>
Message-ID: <1071500956.1239.22.camel@localhost>

Il lun, 2003-12-15 alle 15:34, Dave Peticolas ha scritto:
> On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> > Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> > [snip]
> > > Evidently not impossible, as Bill Gribble has a patch adding
> > 
> > eheh. yesss. i should have added "without leaving a thread suspended".
> > my fault.
> > 
> > > this support to the existing adbapi.py. But it still may be
> > > simpler to support an extended transaction api by going away
> > > from a thread pool. In either case, we should not have two
> > > separate modules.
> > 
> > agreed. see my later mail; Bill's patch is fine if we can get it in.
> 
> I'd like to have some tests for it before it goes in.
> I might have some time over holiday break to work on
> some.

i can do the tests too. can we coordinate over irc or IM?

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
                              Viviamo in un mondo reale, Ciccio. -- Lucy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20031215/5fe44648/attachment.sig>

From radix at twistedmatrix.com  Mon Dec 15 09:03:17 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 15 Dec 2003 11:03:17 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
 implementation
In-Reply-To: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FDDDB45.6080004@twistedmatrix.com>

Jonathan Simms wrote:
> I've got a newly-refactored version of FTP in my sandbox. I'm not sure,
> however, how to deploy it into the library. It splits the actual
> protocol code and the server-y aspects into two files, ftp and ftpdav.
> I feel that the protocol implementation should be separate from the code
> that integrates the protocol with cred, i'm just unsure about where that
> cred-code should go. 

Hrmm, what is this cred-code? A protocol *should* have cred support 
built in; generally, it should have a reference to a portal instance and 
call the login method on it with any Interfaces it wants from an avatar.

IMO, you should be separating filesystem (i.e., "application logic") 
code from the protocol, not cred support.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From orya at bgumail.bgu.ac.il  Mon Dec 15 09:39:10 2003
From: orya at bgumail.bgu.ac.il (orya at bgumail.bgu.ac.il)
Date: Mon, 15 Dec 2003 18:39:10 +0200
Subject: [Twisted-Python] new to Guard
Message-ID: <20031215165303.JPGH26787.shunit@shunit>

Hello there my Twisted fellow mates,

I have used Twisted to build an http web interface.
i want to add an authentication form before logging into the site
i'm a bit confused from the cred/guard documentation...

How do i attach a guard to my existing web server??
And how do i redirect to the main page after logged in??
I'll appriciate it if someone can guide me through the initial steps.

here is an little example of the main class code:
*************************************************
import os

from twisted.web import server, static
from twisted.application import service, internet

from main import MainPage

##########################

# Create Web server
root = MainPage() # inherits from page.Page
root.putChild("css", static.File("css"))    # css subdir
site = server.Site(root)

# Create Application
application = service.Application("webserver")

# Create Web service
port = 8080
web = internet.TCPServer(port, site)
web.setServiceParent(application)





From itamar at itamarst.org  Mon Dec 15 10:13:17 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 12:13:17 -0500
Subject: [Twisted-Python] Hi
In-Reply-To: <20031215114520.HZOQ26787.shunit@shunit>
References: <20031215114520.HZOQ26787.shunit@shunit>
Message-ID: <1071508397.31486.15.camel@sheriffpony>

On Mon, 2003-12-15 at 06:31, orya at bgumail.bgu.ac.il wrote:
> i have some hard time dealing with user input 
> on a woven form 
> can anyone help????

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

or #twisted.web on irc.freenode.net is probably a better place to ask.
However, the short answer is "override your resource's render and
extract from request.args".

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From itamar at itamarst.org  Mon Dec 15 10:16:57 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 12:16:57 -0500
Subject: [Twisted-Python] Using service.Application
In-Reply-To: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
References: <68CF619C1F239A4A8BB8EDD3D1657DC827B240@ukhkc201>
Message-ID: <1071508616.31480.19.camel@sheriffpony>

On Mon, 2003-12-15 at 05:14, Richard.Townsend at edl.uk.eds.com wrote:
> I had the following demo script for Twisted 1.0.6:
> 
> #-----------------
> import sys
> from twisted.internet import app, reactor
> from twisted.python import log, logfile
> from twisted.web import server, resource
> 
> class Simple(resource.Resource):
>     isLeaf = True
> 
>     def render(self, request):
>         print "Request:", request
>         return "<html>Hello</html>"
> 
> 
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
> 
>     site = server.Site(Simple())
>     application = app.Application('web')
>     application.bindPorts()
>     application.listenTCP(8080, site)
>     application.run(save=0)
> #-----------------
> 
> This works OK with the following client:
> 
> #-----------------
> from twisted.internet import reactor
> from twisted.web.client import getPage
> from twisted.python.util import println
> 
> 
> class Client:
>     
>     def __init__(self):
>         self.sendReq()
>         reactor.run()
> 
> 
>     def handleCallback(self, value):
>         println("Success:", value)
>         reactor.stop()
>     
>     
>     def handleErrback(self, error):
>         println("Error:", error)
>         reactor.stop()
> 
> 
>     def sendReq(self):
>         uri = "http://localhost:8080/Simple"
>         deferred = getPage(uri)
>         deferred.addCallbacks(self.handleCallback,
>                               self.handleErrback)
> 
>         
> if __name__ == "__main__":
>     
>     Client()
> #-----------------
> 
> However, under Twisted 1.1.1 this raises: 
> exceptions.DeprecationWarning: twisted.internet.app is deprecated, 
> use twisted.application instead.
> 
> So I tried to create a new version of the server:
> 
> #-----------------
> import sys
> from twisted.application import service, internet
> from twisted.internet import reactor
> from twisted.python import log
> from twisted.web import server, resource
> 
> 
> class Simple(resource.Resource):
>     isLeaf = True
> 
>     def render(self, request):
>         print "Request:", request
>         return "<html>Hello</html>"
> 
> 
> if __name__ == '__main__':
>     
>     f = sys.stdout
>     log.startLogging(f)
>     
>     root = Simple()
>     site = server.Site(root)
>     application = service.Application('web')
>     sc = service.IServiceCollection(application)
>     i = internet.TCPServer(8080, site)
>     i.setServiceParent(sc)
>     reactor.run()

reactor.run() is not how you start a service. You could:

    sc.startService()
    reactor.addSystemEventTrigger('before', 'shutdown',
          sc.stopService)
    reactor.run()

or, better yet, use twistd - see
http://twistedmatrix.com/documents/howto/application (last bit).

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From radix at twistedmatrix.com  Mon Dec 15 11:02:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 15 Dec 2003 13:02:32 -0500
Subject: [Twisted-Python] Twisted Weekly News #9
In-Reply-To: <200312142350.28201.lstep@adequat.net>
References: <200312142350.28201.lstep@adequat.net>
Message-ID: <3FDDF738.7000103@twistedmatrix.com>

Luc Stepniewski wrote:
> ====================================================================
> Twisted Weekly News #9
> ====================================================================

This is great! Thanks much for putting this together. :-)

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From cls at xpnet.com.br  Mon Dec 15 11:08:05 2003
From: cls at xpnet.com.br (Claudio Leonel)
Date: Mon, 15 Dec 2003 16:08:05 -0200
Subject: [Twisted-Python] How to intercept SSL exceptions ?
Message-ID: <3FDDF885.5070808@xpnet.com.br>

Hi all,


When my twisted SSL client connects to the wrong server or
its CA certificate is not the correct one, SSL exceptions
occurs in the following lines, inside Twisted:

   File 
"/usr/local/lib/python2.3/site-packages/twisted/internet/tcp.py", line 
259, in writeSomeData
     return self.socket.send(data)
SSL.Error: [('SSL routines', 'SSL3_GET_SERVER_CERTIFICATE', 'certificate 
verify failed')]

and

   File 
"/usr/local/lib/python2.3/site-packages/twisted/internet/tcp.py", line 
234, in doRead
     data = self.socket.recv(self.bufferSize)
SSL.Error: [('SSL routines', 'SSL3_GET_SERVER_CERTIFICATE', 'certificate 
verify failed')]


How can I intercept these exceptions in my application so they do not
interfere with the client output ?


Regards,
Claudio Leonel






From glyph at twistedmatrix.com  Mon Dec 15 11:41:55 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Dec 2003 13:41:55 -0500
Subject: [Twisted-Python] Twisted Weekly News #9
In-Reply-To: <3FDDF738.7000103@twistedmatrix.com>
References: <200312142350.28201.lstep@adequat.net> <3FDDF738.7000103@twistedmatrix.com>
Message-ID: <5B5A8CDE-2F2E-11D8-B527-000393C9700E@twistedmatrix.com>

On Dec 15, 2003, at 1:02 PM, Christopher Armstrong wrote:

> This is great! Thanks much for putting this together. :-)

Yes indeed!  Great work!




From dave at krondo.com  Mon Dec 15 12:40:57 2003
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 15 Dec 2003 11:40:57 -0800 (PST)
Subject: [Twisted-Python] long-lived database transaction
Message-ID: <20031215194057.6F0D3A2666@oneiros.krondo.net>


> On Sun, 2003-12-14 at 09:21, Federico Di Gregorio wrote:
> > Il dom, 2003-12-14 alle 17:48, Dave Peticolas ha scritto:
> > [snip]
> > > Evidently not impossible, as Bill Gribble has a patch adding
> >=20
> > eheh. yesss. i should have added "without leaving a thread suspended".
> > my fault.
> >=20
> > > this support to the existing adbapi.py. But it still may be
> > > simpler to support an extended transaction api by going away
> > > from a thread pool. In either case, we should not have two
> > > separate modules.
> >=20
> > agreed. see my later mail; Bill's patch is fine if we can get it in.
>=20
> I'd like to have some tests for it before it goes in.
> I might have some time over holiday break to work on
> some.

> i can do the tests too. can we coordinate over irc or IM?

During the week I don't actually have irc/im access or even
access to a machine I can work on, for now. So feel free to
get started and we can sync up this weekend.

dave




From itamar at itamarst.org  Mon Dec 15 13:09:26 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Dec 2003 15:09:26 -0500
Subject: [Twisted-Python] PyCon submissions now accepted
Message-ID: <1071518966.5659.0.camel@sheriffpony>

Dear Python User:

I am pleased to be able to announce that the submission
process for PyCon DC 2004 is now open. Please direct your
browser to

    http://submit.pycon.org/

and create your account by entering your email address and
leaving the password field blank - a password will be sent
to you by email, and you can submit your paper!

Please remember that your submissions should ideally be in
a single file, containing HTML or the reStructured Text
format. Ultimately we would like to publish all
accepted papers on the web, and these rules should make it
easier to do so. Send enquiries about other formats to

    pycon-organizers at python.org

If your paper is accepted and you prepare an electronic
presentation (in PDF, PythonPoint or PowerPoint) we will
also happily publish that on the web site when PyCon is over.

We are interested in any and all submissions about uses of
Python and the development of the language. Since there is
expected to be a strong educational community presence for
the next PyCon, teaching materials of various kinds are also
encouraged.

Please help us to make the next PyCon even better than the
first one. See you in March!

Sincerely

Steve Holden
Chairman
PyCon DC 2004





From matthew.s.hegedus at lmco.com  Mon Dec 15 13:13:39 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Mon, 15 Dec 2003 14:13:39 -0600
Subject: [Twisted-Python] Twisted reactor
Message-ID: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>

I want to have a piece of software that listens for UDP packets on multiple
ports. It listens TCP for a connection that will tell it what UDP ports to
listen to. The UDP ports change dynamically. I guess I can always do a
reactor.listenUDP(port) whenever I need to listen on additional ports, but
how do I get the reactor to stop listening on a particular port? Thanks,

Matthew



From matt at pollenation.net  Mon Dec 15 15:37:43 2003
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 15 Dec 2003 22:37:43 +0000
Subject: [Twisted-Python] Twisted reactor
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D2506@EMSS07M12.us.lmco.com>
Message-ID: <3FDE37B7.8080207@pollenation.net>

Hegedus, Matthew S wrote:

>I want to have a piece of software that listens for UDP packets on multiple
>ports. It listens TCP for a connection that will tell it what UDP ports to
>listen to. The UDP ports change dynamically. I guess I can always do a
>reactor.listenUDP(port) whenever I need to listen on additional ports, but
>how do I get the reactor to stop listening on a particular port? Thanks,
>
listenUDP() returns an object which supports the IListeningPort 
interface. Hang on to that object and call stopListening() on it when 
you change ports.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt at pollenation.net





From greg at lapcominc.com  Mon Dec 15 16:12:37 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Mon, 15 Dec 2003 18:12:37 -0500
Subject: [Twisted-Python] twisted web question
Message-ID: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>

I am playing with some twisted-web and woven stuff.

I noticed that whenever I get an error page, the server no longer 
handles requests.

Is this the intended behavior?

Greg




From Thomas.Favier at accelance.fr  Tue Dec 16 03:46:45 2003
From: Thomas.Favier at accelance.fr (Thomas Favier)
Date: Tue, 16 Dec 2003 11:46:45 +0100
Subject: [Twisted-Python] Patch submission ?
Message-ID: <3FDEE295.2000302@accelance.fr>

Hi,

    I'd like to know what is the standard way of submitting patches. 
 From what I've read on the ML, patches should be sent to the tracker. I 
did so, but my small submission didn't even get read...

    So is the standard way :
1. post to ML
2. have response about the bug tracker thing
3. post it to bug tracker ?

    It seems a good way to be sure that at least someone knows the patch 
exists ;)

    My submission is Issue371, submitted on Oct 28. It is a small patch 
to restore the possibility to give the host you want to query in 
HTTPPageGetter (usefull for monitoring real servers in a load-balanced 
architecture). Moving to 1.1.1 this morning, my app choke on this...

    I don't mind patching my sources at every upgrade, but I'd like to 
know how to be sure that patches are at least read ;)

    Anyway thanks for that great piece of code.

Thomas.




From lafou at wanadoo.fr  Tue Dec 16 07:33:59 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Tue, 16 Dec 2003 15:33:59 +0100
Subject: [Twisted-Python] twisted web question
In-Reply-To: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
Message-ID: <200312161533.59346.lafou@wanadoo.fr>

I had this problem and pointed up to ml some weeks ago... No response for 
that. I just corrected it by using a TAP file instead of creating the 
application in my code.
Try :

==========================================================
mktap  web --resource-script=index.rpy
==========================================================

then start it with :


==========================================================
PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
==========================================================

Here is my index.rpy file :

==========================================================
# This file is used for debug. It allows to reload the whole application
# and test changes directly.

import MyWovenPages


## Comment out this line when finished debugging
reload(MyWovenPages)

# We must have a 'resource'. We take the index page as the default resource.
resource = MyWovenPages.MyWovenPages_Index()
==========================================================

hope this helped

--
Philippe


On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
> I am playing with some twisted-web and woven stuff.
>
> I noticed that whenever I get an error page, the server no longer
> handles requests.
>
> Is this the intended behavior?
>
> Greg
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Tue Dec 16 08:02:20 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 10:02:20 -0500
Subject: [Twisted-Python] Patch submission ?
In-Reply-To: <3FDEE295.2000302@accelance.fr>
References: <3FDEE295.2000302@accelance.fr>
Message-ID: <1071586940.1201.0.camel@sheriffpony>

On Tue, 2003-12-16 at 05:46, Thomas Favier wrote:

>  From what I've read on the ML, patches should be sent to the tracker. I 
> did so, but my small submission didn't even get read...
> 
>     So is the standard way :
> 1. post to ML
> 2. have response about the bug tracker thing
> 3. post it to bug tracker ?

Standard way is:
1. Post to bug tracker
2. If no one handles it, bug mailing list or someone on the IRC channel.

So you're doing fine. :)

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From greg at lapcominc.com  Tue Dec 16 08:06:54 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Tue, 16 Dec 2003 10:06:54 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>

So basically one has to use an rpy file to avoid this issue....

One thing I was wondering about using an rpy file:

Does the resource object get instantiated on every request?  It seems 
like this would cause a lot of page objects to be created for every 
request...

Thanks for the tip.
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucrière wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From greg at lapcominc.com  Tue Dec 16 08:07:26 2003
From: greg at lapcominc.com (Greg Lappen)
Date: Tue, 16 Dec 2003 10:07:26 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>

Just thought of something else:

If I use mktap and an .rpy script, I cannot install any other protocol 
factory.  My server listens on one port to implement a proprietary 
TCP/IP protocol, and another port to provide a web interface.  Am I 
right that I cannot set this up using mktap?

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucrière wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Tue Dec 16 08:12:15 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 10:12:15 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
	 <200312161533.59346.lafou@wanadoo.fr>
	 <8F452047-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
Message-ID: <1071587535.1200.2.camel@sheriffpony>

On Tue, 2003-12-16 at 10:07, Greg Lappen wrote:
> Just thought of something else:
> 
> If I use mktap and an .rpy script, I cannot install any other protocol 
> factory.  My server listens on one port to implement a proprietary 
> TCP/IP protocol, and another port to provide a web interface.  Am I 
> right that I cannot set this up using mktap?

If you use mktap web, yes. So don't use it.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Tue Dec 16 15:06:07 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 16 Dec 2003 23:06:07 +0100
Subject: [Twisted-Python] Twisted Web sessions
Message-ID: <20031216220607.GA11719@pasternak.w.lub.pl>

Hi,

how do I protect from session-hijacking when using Twisted Web? Is it the
same as with PHP -- or do you, Twisted guys, already think out of something?

Take care,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From radix at twistedmatrix.com  Tue Dec 16 15:12:43 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 16 Dec 2003 17:12:43 -0500
Subject: [Twisted-Python] Twisted Web sessions
In-Reply-To: <20031216220607.GA11719@pasternak.w.lub.pl>
References: <20031216220607.GA11719@pasternak.w.lub.pl>
Message-ID: <3FDF835B.5080008@twistedmatrix.com>

Michal Pasternak wrote:
> how do I protect from session-hijacking when using Twisted Web? Is it the
> same as with PHP -- or do you, Twisted guys, already think out of something?

AFAIK, the entirety of the built-in protection is that the session key 
is a long random number. Your best bet is SSL, I think.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/



From michal at pasternak.w.lub.pl  Tue Dec 16 15:42:08 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Tue, 16 Dec 2003 23:42:08 +0100
Subject: [Twisted-Python] Session trouble
Message-ID: <20031216224208.GA23618@pasternak.w.lub.pl>

Hi,

On a page of the site I've got a form. The user enters values and submits
the form. Entered values are saved to session. If s/he gets back to the page
(=> encounters the same form), values are loaded from the session and the
form is filled with them. Everything worked okay, until I turned on caching.
Now, even if the test machine is on different subnet, the filled values are
presented to all connected users by default (eg. my friend, while testing
it, enters some data; I open a "clean" browser, without any cookies or such,
enter the page with the form - and I get the same data he entered!).

My question is simple: how do I get around this? Should I turn off the
caching (which speeds up page generation significantly, so I'd rather say
it's required)? Is it known issue? What am I doing wrong? Where should I RTFM?

I run the site server with twistd and RPY script.

This is my RPY script:

	cache()
	import myWeb
	resource = myWeb.RootPage()

This is how I save / load session values in myWeb:

     I have declared:
     
	class IPreferences(components.Interface):
    		pass
	class Preferences(components.Adapter):
    		__implements__ = IPreferences
	components.registerAdapter(Preferences, server.Session, IPreferences)

     Then, when I'm loading/saving values from/to session, I use:
     
        prefs = req.getSession(IPreferences)
	
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From itamar at itamarst.org  Tue Dec 16 16:26:31 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Dec 2003 18:26:31 -0500
Subject: [Twisted-Python] Session trouble
In-Reply-To: <20031216224208.GA23618@pasternak.w.lub.pl>
References: <20031216224208.GA23618@pasternak.w.lub.pl>
Message-ID: <1071617191.3519.1.camel@sheriffpony>

Could you ask web questions on 	
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web?

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From michal at pasternak.w.lub.pl  Tue Dec 16 22:26:09 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Wed, 17 Dec 2003 06:26:09 +0100
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
Message-ID: <20031217052609.GA20970@pasternak.w.lub.pl>

Hi,

I'm testing a bit the performance of Twisted Web, using puf(1) downloader
and loopback interface. Puf is something like wget(1), only it can do many
simultaneous connections. When the maximum connection no. is small (1 - 40
connections at once), Twisted Web works very good, providing a reasonable
page generation time (thus, data transfer rate) and eating my CPU. 

But if I raise the simultaneous connection number to something above 40,
data transfer rate and CPU usage fall.

Is it intended behaviour? I don't think I'll ever have to program a site,
which has to serve more, than 40 connections at once, but in case this
happens, I'd like to know.

Regards,
-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From exarkun at intarweb.us  Tue Dec 16 22:41:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 17 Dec 2003 00:41:51 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <20031217052609.GA20970@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
Message-ID: <20031217054151.GB3045@intarweb.us>

On Wed, Dec 17, 2003 at 06:26:09AM +0100, Michal Pasternak wrote:
> Hi,
> 
> I'm testing a bit the performance of Twisted Web, using puf(1) downloader
> and loopback interface. Puf is something like wget(1), only it can do many
> simultaneous connections. When the maximum connection no. is small (1 - 40
> connections at once), Twisted Web works very good, providing a reasonable
> page generation time (thus, data transfer rate) and eating my CPU. 
> 
> But if I raise the simultaneous connection number to something above 40,
> data transfer rate and CPU usage fall.
> 
> Is it intended behaviour?

  Yes.  Twisted was specifically designed to scale poorly with smallish
numbers of concurrent connections.

> I don't think I'll ever have to program a site, which has to serve more,
> than 40 connections at once, but in case this happens, I'd like to know.
> 
> Regards,
> -- 
> Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031217/2b0c55b8/attachment.sig>

From lafou at wanadoo.fr  Wed Dec 17 02:30:05 2003
From: lafou at wanadoo.fr (Philippe =?iso-8859-1?q?Lafoucri=E8re?=)
Date: Wed, 17 Dec 2003 10:30:05 +0100
Subject: [Twisted-Python] twisted web question
In-Reply-To: <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr> <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com>
Message-ID: <200312171030.05411.lafou@wanadoo.fr>

On Tuesday 16 December 2003 16:06, Greg Lappen wrote:
> So basically one has to use an rpy file to avoid this issue....
>
> One thing I was wondering about using an rpy file:
>
> Does the resource object get instantiated on every request?  It seems
> like this would cause a lot of page objects to be created for every
> request...


yep, they are created for every request !
that's why you should only use it for dev/debug.

--
sry for the twisted-web discussion here guys...
(the problem wouldn't appear with a forum, u know... :) )




From exarkun at intarweb.us  Wed Dec 17 08:40:05 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 17 Dec 2003 10:40:05 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312171030.05411.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr> <7BE8F5C6-2FD9-11D8-9AE8-000A95DA5A64@lapcominc.com> <200312171030.05411.lafou@wanadoo.fr>
Message-ID: <20031217154005.GA4846@intarweb.us>

On Wed, Dec 17, 2003 at 10:30:05AM +0100, Philippe Lafoucri?re wrote:
> [snip]
> sry for the twisted-web discussion here guys...
> (the problem wouldn't appear with a forum, u know... :) )
> 

  http://twisted.banquise.org/

> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031217/05dd0da8/attachment.sig>

From itamar at itamarst.org  Wed Dec 17 08:47:29 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Dec 2003 10:47:29 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031217052609.GA20970@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
Message-ID: <1071676049.3523.15.camel@sheriffpony>

On Wed, 2003-12-17 at 00:26, Michal Pasternak wrote:

> But if I raise the simultaneous connection number to something above 40,
> data transfer rate and CPU usage fall.

I never saw that happen. How are you testing? Is it RPY? What size data?
Are you certain issue is not with interaction with client?

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From itamar at itamarst.org  Wed Dec 17 08:54:14 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Dec 2003 10:54:14 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031217054151.GB3045@intarweb.us>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
	 <20031217054151.GB3045@intarweb.us>
Message-ID: <1071676454.3518.20.camel@sheriffpony>

On Wed, 2003-12-17 at 00:41, Jp Calderone wrote:

>   Yes.  Twisted was specifically designed to scale poorly with smallish
> numbers of concurrent connections.

(Jp can be somewhat sarcastic sometimes.)

Note that twisted just won't scale as well as pure C
load-from-filesystem-only webservers, since *every* request is
essentialy "dynamic", i.e. requires slowish python code to run. That
does not mean twisted is slow, though, for dynamic sites it might run
faster than a apache/php/mysql app if architectured correctly, because
for dynamic apps that throughput (how many bytes you can push out) is
almost never the bottleneck. And twisted.web should be able to saturate
most network connections, even if it's slower at the moment at byte
pushing.





From slyphon at twistedmatrix.com  Wed Dec 17 09:14:56 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 17 Dec 2003 11:14:56 -0500
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <3FDA8D80.5060404@paradise.net.nz>
References: <3FDA8D80.5060404@paradise.net.nz>
Message-ID: <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>

On Fri, 2003-12-12 at 22:54, Douglas Bagnall wrote:
> hi all,
> 
> I'm making a thing which collects webcam images via ftp (the lowest 
> common denominator for webcam software), and sends them off again via 
> the web.  I'd quite like to do it without troubling the file system, 
> storing the images as python strings, whilst ignoring all the cd/pwd 
> stuff.  Needless to say I don't want to use real system usernames.
> 
> Is this very sensible or possible?  I (happily) don't know much about 
> the ftp protocol, or its twisted implementation.
> 
> 
> cheers,
> 
> Douglas Bagnall
> 
> 
This is possible, and might be sensible, but in order for you to get
this to work, you'd have to learn quite a bit about how twisted thinks
about ftp. I'd be happy to help you if you do decide to pursue this.

-Jonathan Simms
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031217/07f14516/attachment.sig>

From slyphon at twistedmatrix.com  Wed Dec 17 09:20:32 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Wed, 17 Dec 2003 11:20:32 -0500
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
	implementation
In-Reply-To: <3FDDAD89.6070101@pa.press.net>
References: <1071476674.3768.13.camel@willie-the-pimp.embassynetworks.com>
	 <20031215123557.GA4547@frobozz>  <3FDDAD89.6070101@pa.press.net>
Message-ID: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>

On Mon, 2003-12-15 at 07:48, John Abel wrote:
> Andrew Bennetts wrote:
> 
> >On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
> >  
> >
> >>cred-code should go. Also, there's been some considerable trouble caused
> >>by the fact that my avatar implemenation is not windows-friendly. Any
> >>thoughts on how to either adapt it, or if some kindly windows-user could
> >>implement a windows-compatable version, would be greatly appreciated.
> >>    
> >>
> >
> >Is the problem with windows the lack of pwd and grp modules?  I presume you
> >need these for authentication and permission checking?  If that's the case,
> >perhaps you could implement a simpler avatar for windows that only supports
> >anonymous, read-only access to any files that the server has permission to
> >read?  (i.e. basically what the old server supported anyway)
> >
> >  
> >
> I have code for authentication on 2000/XP platforms, if you're 
> interested? It is used in the medusa ftp example.
> 

YES! I'm interested!


> >>Also, on a tangent, the new (-new) ftp protocol refactoring in my
> >>sandbox has much more complete code-coverage in terms of the unittests. 
> >>    
> >>
> >
> >Woo!  What about for the client?  ;)
> >
> >-Andrew.
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >  
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031217/83b43cb1/attachment.sig>

From dialtone at aruba.it  Wed Dec 17 13:51:07 2003
From: dialtone at aruba.it (Valentino Volonghi aka Dialtone)
Date: Wed, 17 Dec 2003 21:51:07 +0100
Subject: [Twisted-Python] [WISH] pygame reactor
Message-ID: <20031217205107.GA14588@vercingetorix.caesar.org>

Hi all, looking at twisted I see that there is a very simple pyui
support but not pygame support.

My hope is, now that pyui is somewhat death or windows only, to have a
pygame reactor maybe using pygame.event.wait() which idles till a
pygame event comes.

And maybe also a protocol implemented using the event.type value
(onMouseButton1, onKeyPressed, onKeyReleased and so on).

I think that this would be a really interesting and useful feature to
have and would simplify a lot the design of fully featured gui
toolkits in pygame.

I may help in coding this stuff into twisted although I'm don't know
it well enough.

-- 
Valentino Volonghi, Regia SpA, Milan
Linux User #310274, Gentoo Proud User



From warner at lothar.com  Wed Dec 17 15:51:01 2003
From: warner at lothar.com (Brian Warner)
Date: Wed, 17 Dec 2003 14:51:01 -0800 (PST)
Subject: [Twisted-Python] [WISH] pygame reactor
Message-ID: <20031217.145101.41183314.warner@lothar.com>

> My hope is, now that pyui is somewhat death or windows only, to have a
> pygame reactor maybe using pygame.event.wait() which idles till a
> pygame event comes.

Perhaps as a way of getting started, Paul Boehm posted the following code to
this list in October of 2002. Unlike Twisted, pygame isn't very quiescent, so
there isn't a way to just sleep until something needs to be done. Instead, in
this code, twisted runs the pygame update routine as frequently as necessary
to achieve the desired frame rate. This probably has implications for
response latency to joystick events, etc.. I haven't actually tried to run
this in a long time (since about November of 2002 :).

 -Brian

# MyGame embedded in Twisted

from pygame import time
from twisted.internet import reactor

import mygame

class PygameTimer:
    def __init__(self, game):
        self.clock = time.Clock()
        self.game = game
        self.update()

    def update(self):
        self.clock.tick()
        self.ms = self.clock.get_rawtime()

        framespeed = (1.0/100.0) * 1000
        lastspeed = self.ms
        next = framespeed - lastspeed

        print "framespeed", framespeed, "ms", self.ms, "next", next, "fps", self.clock.get_fps()

        self.game.iterate()

        if self.game.want_quit:
            self.game.cleanup()
            reactor.stop()
        else:
            reactor.callLater(next/1000.0*2.0, self.update)


if __name__ == "__main__":
    pt = PygameTimer(mygame.Game())
    reactor.run()



From michal at pasternak.w.lub.pl  Wed Dec 17 18:23:30 2003
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Thu, 18 Dec 2003 02:23:30 +0100
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <1071676454.3518.20.camel@sheriffpony>
References: <20031217052609.GA20970@pasternak.w.lub.pl> <20031217054151.GB3045@intarweb.us> <1071676454.3518.20.camel@sheriffpony>
Message-ID: <20031218012330.GA26822@pasternak.w.lub.pl>

Itamar Shtull-Trauring [Wed, Dec 17, 2003 at 10:54:14AM -0500]:
> That
> does not mean twisted is slow

I've never said that.

Everything works very good right until simultaneous connection number is
below 40. I just thought it was a hard limit set in the source (DoS
protecition?) or something similar. If you deny the existence of such limit,
I'll proceed with examination of the situation.

-- 
Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net



From itamar at itamarst.org  Wed Dec 17 22:41:58 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 00:41:58 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other
	applications) slow performance with many connections
In-Reply-To: <20031218012330.GA26822@pasternak.w.lub.pl>
References: <20031217052609.GA20970@pasternak.w.lub.pl>
	 <20031217054151.GB3045@intarweb.us> <1071676454.3518.20.camel@sheriffpony>
	 <20031218012330.GA26822@pasternak.w.lub.pl>
Message-ID: <1071726118.3518.22.camel@sheriffpony>

On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:

> Everything works very good right until simultaneous connection number is
> below 40. I just thought it was a hard limit set in the source (DoS
> protecition?) or something similar. If you deny the existence of such limit,
> I'll proceed with examination of the situation.

No such limit is hardcoded.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From john.abel at pa.press.net  Thu Dec 18 00:25:28 2003
From: john.abel at pa.press.net (John Abel)
Date: Thu, 18 Dec 2003 07:25:28 +0000
Subject: [Twisted-Python] Asking for suggestions in new-new ftp server
  implementation
In-Reply-To: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>
References: <1071678032.7436.43.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FE15668.5020201@pa.press.net>

Jonathan Simms wrote:

>On Mon, 2003-12-15 at 07:48, John Abel wrote:
>  
>
>>Andrew Bennetts wrote:
>>
>>    
>>
>>>On Mon, Dec 15, 2003 at 03:24:35AM -0500, Jonathan Simms wrote:
>>> 
>>>
>>>      
>>>
>>>>cred-code should go. Also, there's been some considerable trouble
>>>>        
>>>>
>caused
>  
>
>>>>by the fact that my avatar implemenation is not windows-friendly.
>>>>        
>>>>
>Any
>  
>
>>>>thoughts on how to either adapt it, or if some kindly windows-user
>>>>        
>>>>
>could
>  
>
>>>>implement a windows-compatable version, would be greatly
>>>>        
>>>>
>appreciated.
>  
>
>>>>   
>>>>
>>>>        
>>>>
>>>Is the problem with windows the lack of pwd and grp modules?  I
>>>      
>>>
>presume you
>  
>
>>>need these for authentication and permission checking?  If that's the
>>>      
>>>
>case,
>  
>
>>>perhaps you could implement a simpler avatar for windows that only
>>>      
>>>
>supports
>  
>
>>>anonymous, read-only access to any files that the server has
>>>      
>>>
>permission to
>  
>
>>>read?  (i.e. basically what the old server supported anyway)
>>>
>>> 
>>>
>>>      
>>>
>>I have code for authentication on 2000/XP platforms, if you're 
>>interested? It is used in the medusa ftp example.
>>
>>    
>>
>
>YES! I'm interested!
>
>
>  
>
Here ya go.  I'm afraid it requires win32all, but I wouldn't have 
thought there'd be too many Win32 people without it.  It also requires 
the user running the script to be added to the policy entry "Act As Part 
Of The OS".

import win32security, win32con, win32api, win32net
import ntsecuritycon, pywintypes

class Win32Authorizer:

    def authorize (self, channel, userName, passWord):
        self.AdjustPrivilege( ntsecuritycon.SE_CHANGE_NOTIFY_NAME )
        self.AdjustPrivilege( ntsecuritycon.SE_ASSIGNPRIMARYTOKEN_NAME )
        self.AdjustPrivilege( ntsecuritycon.SE_TCB_NAME )
        try:
            logonHandle = win32security.LogonUser( userName,
                                                   None,
                                                   passWord,
                                                    
win32con.LOGON32_LOGON_INTERACTIVE,
                                                    
win32con.LOGON32_PROVIDER_DEFAULT )
        except pywintypes.error, ErrorMsg:
            return 0, ErrorMsg[ 2 ], None

        userInfo = win32net.NetUserGetInfo( None, userName, 1 )


    def AdjustPrivilege( self, priv ):
        flags = ntsecuritycon.TOKEN_ADJUST_PRIVILEGES | 
ntsecuritycon.TOKEN_QUERY
        htoken =  
win32security.OpenProcessToken(win32api.GetCurrentProcess(), flags)
        id = win32security.LookupPrivilegeValue(None, priv)
        newPrivileges = [(id, ntsecuritycon.SE_PRIVILEGE_ENABLED)]
        win32security.AdjustTokenPrivileges(htoken, 0, newPrivileges)

Hope that's of use.

Regards

John



From paul at soniq.net  Thu Dec 18 05:56:12 2003
From: paul at soniq.net (Paul Boehm)
Date: Thu, 18 Dec 2003 13:56:12 +0100
Subject: [Twisted-Python] twisted.web performance hacks
Message-ID: <20031218125612.GD31857@soniq.net>

On Thu, Dec 18, 2003 at 12:41:58AM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:
> 
> > Everything works very good right until simultaneous connection number is
> > below 40. I just thought it was a hard limit set in the source (DoS
> > protecition?) or something similar. If you deny the existence of such limit,
> > I'll proceed with examination of the situation.
> 
> No such limit is hardcoded.

anyone thought about writing multi-process twisted applications yet?

looking at examples/web.py, it would be easy to do

reactor.listenTCP(1999, site)
for x in xrange(1,5):
    if os.fork() == 0:
        break
reactor.run()

for shared dynamic data you'd of course have to use something along the lines
of pb+remotecache, but if i'm not mistaken, for some applications this kind of
hack might give a performance edge, especially on multiprocessor machines.

in particular twisted.web could improve in benchmarks when being able to
emulate classical application behaviour for performance reasons
(no shared data between different connection handlers)

regards,
  paul



From exarkun at intarweb.us  Thu Dec 18 07:29:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 18 Dec 2003 09:29:03 -0500
Subject: [Twisted-Python] twisted.web performance hacks
In-Reply-To: <20031218125612.GD31857@soniq.net>
References: <20031218125612.GD31857@soniq.net>
Message-ID: <20031218142903.GA7820@intarweb.us>

On Thu, Dec 18, 2003 at 01:56:12PM +0100, Paul Boehm wrote:
> On Thu, Dec 18, 2003 at 12:41:58AM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 2003-12-17 at 20:23, Michal Pasternak wrote:
> > 
> > > Everything works very good right until simultaneous connection number is
> > > below 40. I just thought it was a hard limit set in the source (DoS
> > > protecition?) or something similar. If you deny the existence of such limit,
> > > I'll proceed with examination of the situation.
> > 
> > No such limit is hardcoded.
> 
> anyone thought about writing multi-process twisted applications yet?
> 
> looking at examples/web.py, it would be easy to do
> 
> reactor.listenTCP(1999, site)
> for x in xrange(1,5):
>     if os.fork() == 0:
>         break
> reactor.run()
> 
> for shared dynamic data you'd of course have to use something along the lines
> of pb+remotecache, but if i'm not mistaken, for some applications this kind of
> hack might give a performance edge, especially on multiprocessor machines.
> 
> in particular twisted.web could improve in benchmarks when being able to
> emulate classical application behaviour for performance reasons
> (no shared data between different connection handlers)

  I think the twisted.web mailing list is a more appropriate forum for
discussion of this.

  Jp

> 
> regards,
>   paul
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031218/8cb2e404/attachment.sig>

From itamar at itamarst.org  Thu Dec 18 14:21:32 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 16:21:32 -0500
Subject: [Twisted-Python] Next time we write a protocol implementation
Message-ID: <1071782492.5837.37.camel@sheriffpony>

We should take a look at http://oss.corest.com/projects/impacket.html

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From matthew.s.hegedus at lmco.com  Thu Dec 18 17:12:20 2003
From: matthew.s.hegedus at lmco.com (Hegedus, Matthew S)
Date: Thu, 18 Dec 2003 18:12:20 -0600
Subject: [Twisted-Python] Broadcasting UDP
Message-ID: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>

I am having trouble with UDP broadcasting. 

self.transport.write(data, (broadcastAddress, port))

yields a socket error 'Permission denied'. It appears the socket is not set
up for broadcasting. Upon creation I think it needs something like
SO_BROADCAST as an option. Can I get this behavior using Twisted UDP
protocols or do I need to do my own socket stuff? Thanks,

Matthew Hegedus



From itamar at itamarst.org  Thu Dec 18 17:21:46 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Dec 2003 19:21:46 -0500
Subject: [Twisted-Python] Broadcasting UDP
In-Reply-To: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>
References: <401C60E417B68B48B14B53D845FF596A8D250D@EMSS07M12.us.lmco.com>
Message-ID: <1071793306.5837.52.camel@sheriffpony>

On Thu, 2003-12-18 at 19:12, Hegedus, Matthew S wrote:

> yields a socket error 'Permission denied'. It appears the socket is not set
> up for broadcasting. Upon creation I think it needs something like
> SO_BROADCAST as an option. Can I get this behavior using Twisted UDP
> protocols or do I need to do my own socket stuff? Thanks,

For now self.transport.socket.setsockopt(...SO_BROADCAST) (or maybe transport.skt, check) will do the trick. Obviously this is breaking abstraction, but it does work.

Add an issue about this to the bug tracker and assign it to me, and at some point I'll add a transport.allowBroadcast(bool) method.

--
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From warner at lothar.com  Fri Dec 19 00:57:09 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 18 Dec 2003 23:57:09 -0800 (PST)
Subject: [Twisted-Python] Next time we write a protocol implementation
In-Reply-To: <1071782492.5837.37.camel@sheriffpony>
References: <1071782492.5837.37.camel@sheriffpony>
Message-ID: <20031218.235709.12758067.warner@lothar.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> We should take a look at http://oss.corest.com/projects/impacket.html

Any idea how it compares to Scapy?:

 http://www.cartel-securite.fr/pbiondi/scapy.html


 -Brian



From fdrake at acm.org  Fri Dec 19 14:41:55 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Fri, 19 Dec 2003 16:41:55 -0500
Subject: [Twisted-Python] SFTP Gateway available
Message-ID: <16355.28835.419067.966615@sftp.fdrake.net>

Zope Corporation has created an SFTP server that uses an FTP server as
a back end using Twisted.  The code is covered by the Zope Public
License (ZPL).

I don't expect we'll create a separate downloadable package for SFTP
Gateway until January, but it's already available in the public CVS
repository on cvs.zope.org.

For more information, see the README.txt file in the CVS repository:

    http://cvs.zope.org/Packages/SFTPGateway/


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From foom at fuhm.net  Fri Dec 19 16:08:49 2003
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Dec 2003 18:08:49 -0500
Subject: [Twisted-Python] SFTP Gateway available
In-Reply-To: <16355.28835.419067.966615@sftp.fdrake.net>
References: <16355.28835.419067.966615@sftp.fdrake.net>
Message-ID: <4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>

That's pretty cool. Maybe it's time for me to rewrite my ssh->telnet 
gateway in twisted. :)

James

On Dec 19, 2003, at 4:41 PM, Fred L. Drake, Jr. wrote:
> Zope Corporation has created an SFTP server that uses an FTP server as
> a back end using Twisted.  The code is covered by the Zope Public
> License (ZPL).
>
> I don't expect we'll create a separate downloadable package for SFTP
> Gateway until January, but it's already available in the public CVS
> repository on cvs.zope.org.
>
> For more information, see the README.txt file in the CVS repository:
>
>     http://cvs.zope.org/Packages/SFTPGateway/




From enrico.sirola at riskmap.it  Tue Dec 16 03:03:28 2003
From: enrico.sirola at riskmap.it (enrico.sirola at riskmap.it)
Date: 16 Dec 2003 11:03:28 +0100
Subject: [Twisted-Python] scheduling a task
Message-ID: <un09toz9r.fsf@riskmap.it>

Hello,
I just wrote my first twisted python application (basically, it's a
SOAP server). The application layout is something like the following
pseudocode:

# validator.py from here
class A(service.Service):
        # .... details omitted ...
        pass

class B(resource.Resource):
        def __init__(self, service):
                self.service = service

        # .... details omitted ...


def makeService(config):
        s = service.MultiService()
        v = A()
        soap_server = internet.TCPServer(config['port'], server.Site(B(v)))
        soap_server.setServiceParent(s)
        return s
# to here

# tap.py from here 
class Options(usage.Options):

    optParameters = [
        ['port', 'p', 8090],
        ]

def makeService(config):
    return validator.makeService(config)

# to here

# plugins.tml from here
register('server', 'server.tap', 
         description = 'build a server',
	 type = 'tap', tapname = 'server')
# to here

anyway, i'd like to add the server a task running every 30s. I saw an
example using reactor, like the following:

reactor.callLater(30, task)

now, where must i put this code in order to be run at application
bootstrap? I tried putting reactor.callLater into the makeService
function, but it seems it's executed during mktap only (am i
wrong?)... 

Thanks very much in advance,
enrico

        

-- 
Enrico Sirola <enrico dot sirola at riskmap dot it>




From greg at paperfree.net  Tue Dec 16 07:54:36 2003
From: greg at paperfree.net (Greg Lappen)
Date: Tue, 16 Dec 2003 09:54:36 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <C427D34B-2FD7-11D8-B78A-000A95DA5A64@paperfree.net>

So basically one has to use an rpy file to avoid this issue....

One thing I was wondering about using an rpy file:

Does the resource object get instantiated on every request?  It seems 
like this would cause a lot of page objects to be created for every 
request...

Thanks for the tip.

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucrière wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From greg at paperfree.net  Tue Dec 16 08:05:26 2003
From: greg at paperfree.net (Greg Lappen)
Date: Tue, 16 Dec 2003 10:05:26 -0500
Subject: [Twisted-Python] twisted web question
In-Reply-To: <200312161533.59346.lafou@wanadoo.fr>
References: <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com> <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <47D957BC-2FD9-11D8-9AE8-000A95DA5A64@paperfree.net>

Just thought of something else:

If I use mktap and an .rpy script, I cannot install any other protocol 
factory.  My server listens on one port to implement a proprietary 
TCP/IP protocol, and another port to provide a web interface.  Am I 
right that I cannot set this up using mktap?

Greg
On Dec 16, 2003, at 9:33 AM, Philippe Lafoucrière wrote:

> I had this problem and pointed up to ml some weeks ago... No response 
> for
> that. I just corrected it by using a TAP file instead of creating the
> application in my code.
> Try :
>
> ==========================================================
> mktap  web --resource-script=index.rpy
> ==========================================================
>
> then start it with :
>
>
> ==========================================================
> PYTHONPATH=$PYTHONPATH:$PWD/MyWovenPages twistd -nf web.tap
> ==========================================================
>
> Here is my index.rpy file :
>
> ==========================================================
> # This file is used for debug. It allows to reload the whole 
> application
> # and test changes directly.
>
> import MyWovenPages
>
>
> ## Comment out this line when finished debugging
> reload(MyWovenPages)
>
> # We must have a 'resource'. We take the index page as the default 
> resource.
> resource = MyWovenPages.MyWovenPages_Index()
> ==========================================================
>
> hope this helped
>
> --
> Philippe
>
>
> On Tuesday 16 December 2003 00:12, Greg Lappen wrote:
>> I am playing with some twisted-web and woven stuff.
>>
>> I noticed that whenever I get an error page, the server no longer
>> handles requests.
>>
>> Is this the intended behavior?
>>
>> Greg
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From greg at paperfree.net  Wed Dec 17 06:31:39 2003
From: greg at paperfree.net (Greg Lappen)
Date: Wed, 17 Dec 2003 08:31:39 -0500
Subject: [Twisted-Python] Twisted Web server (and possibly other applications) slow performance with many connections
In-Reply-To: <20031217054151.GB3045@intarweb.us>
References: <20031217052609.GA20970@pasternak.w.lub.pl> <20031217054151.GB3045@intarweb.us>
Message-ID: <583AACCC-3095-11D8-9AE8-000A95DA5A64@paperfree.net>

Jp-

I can't tell if  you're being sarcastic or not.....

I was under the impression that twisted was designed for a large number 
of connections, but scales poorly if the application is CPU intensive.

Greg
On Dec 17, 2003, at 12:41 AM, Jp Calderone wrote:

> On Wed, Dec 17, 2003 at 06:26:09AM +0100, Michal Pasternak wrote:
>> Hi,
>>
>> I'm testing a bit the performance of Twisted Web, using puf(1) 
>> downloader
>> and loopback interface. Puf is something like wget(1), only it can do 
>> many
>> simultaneous connections. When the maximum connection no. is small (1 
>> - 40
>> connections at once), Twisted Web works very good, providing a 
>> reasonable
>> page generation time (thus, data transfer rate) and eating my CPU.
>>
>> But if I raise the simultaneous connection number to something above 
>> 40,
>> data transfer rate and CPU usage fall.
>>
>> Is it intended behaviour?
>
>   Yes.  Twisted was specifically designed to scale poorly with smallish
> numbers of concurrent connections.
>
>> I don't think I'll ever have to program a site, which has to serve 
>> more,
>> than 40 connections at once, but in case this happens, I'd like to 
>> know.
>>
>> Regards,
>> -- 
>> Michal Pasternak :: http://pasternak.w.lub.pl :: http://winsrc.sf.net
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>





From andrew-twisted at puzzling.org  Fri Dec 19 17:16:04 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 20 Dec 2003 11:16:04 +1100
Subject: [Twisted-Python] scheduling a task
In-Reply-To: <un09toz9r.fsf@riskmap.it>
References: <un09toz9r.fsf@riskmap.it>
Message-ID: <20031220001604.GA9900@frobozz>

On Tue, Dec 16, 2003 at 11:03:28AM +0100, enrico.sirola at riskmap.it wrote:
> 
> Hello,
> I just wrote my first twisted python application (basically, it's a
> SOAP server). The application layout is something like the following
> pseudocode:
> 
> # validator.py from here
> class A(service.Service):
>         # .... details omitted ...
>         pass

[...]


> anyway, i'd like to add the server a task running every 30s. I saw an
> example using reactor, like the following:
> 
> reactor.callLater(30, task)
> 
> now, where must i put this code in order to be run at application
> bootstrap? I tried putting reactor.callLater into the makeService
> function, but it seems it's executed during mktap only (am i
> wrong?)... 

Put it in the startService method of your service, i.e. A.  

Also, you might find twisted.internet.task.LoopingCall to be slightly more
convenient than manually calling callLater.

-Andrew.




From fdrake at acm.org  Fri Dec 19 22:45:01 2003
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Sat, 20 Dec 2003 00:45:01 -0500
Subject: [Twisted-Python] SFTP Gateway available
In-Reply-To: <4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>
References: <16355.28835.419067.966615@sftp.fdrake.net>
	<4E344103-3278-11D8-AB7C-000A95A50FB2@fuhm.net>
Message-ID: <16355.57821.463575.396055@sftp.fdrake.net>

James Y Knight writes:
 > That's pretty cool. Maybe it's time for me to rewrite my ssh->telnet 
 > gateway in twisted. :)

Thanks!

This was my first foray into Twisted, and I was quite impressed.  It
took some time to get my feet back under me, but once there, it wasn't
too hard to see how to proceed.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Zope Corporation



From lists at webcrunchers.com  Sun Dec 21 00:40:31 2003
From: lists at webcrunchers.com (JD)
Date: Sat, 20 Dec 2003 23:40:31 -0800
Subject: [Twisted-Python] Broken link in twistedmatrix.com web site.
Message-ID: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>

This page:    http://twistedmatrix.com/products/spread
In the Jelly section,  just a little more then halfway down,
has a link titled:    "Concern for Pickle" which links
to http://www.python.org/doc/current/lib/pickle-sec.html
now goes to a non-existant page in the Python
web site.

I'm most interested in reading this section.

Does anyone know where I can get this info?

JD




From exarkun at intarweb.us  Sun Dec 21 01:09:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 21 Dec 2003 03:09:57 -0500
Subject: [Twisted-Python] Broken link in twistedmatrix.com web site.
In-Reply-To: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>
References: <F42E0998-3388-11D8-824D-0030656C6B9E@webcrunchers.com>
Message-ID: <20031221080957.GA17773@intarweb.us>

On Sat, Dec 20, 2003 at 11:40:31PM -0800, JD wrote:
> This page:    http://twistedmatrix.com/products/spread
> In the Jelly section,  just a little more then halfway down,
> has a link titled:    "Concern for Pickle" which links
> to http://www.python.org/doc/current/lib/pickle-sec.html
> now goes to a non-existant page in the Python
> web site.
> 
> I'm most interested in reading this section.
> 
> Does anyone know where I can get this info?


    http://www.python.org/doc/2.2/lib/pickle-sec.html

  Not sure why this is no longer in the current documentation, but I guess
it's our own fault for referring to such a volatile URL as /current/.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031221/fbf641d3/attachment.sig>

From douglas at paradise.net.nz  Sun Dec 21 01:14:46 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Sun, 21 Dec 2003 21:14:46 +1300
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>
References: <3FDA8D80.5060404@paradise.net.nz>
 <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com>
Message-ID: <3FE55676.3080900@paradise.net.nz>


Jonathan Simms wrote:

>>I'm making a thing which collects webcam images via ftp (the lowest 
>>common denominator for webcam software), and sends them off again via 
>>the web.  I'd quite like to do it without troubling the file system, 
>>storing the images as python strings, whilst ignoring all the cd/pwd 
>>stuff.  Needless to say I don't want to use real system usernames.
>>
>>Is this very sensible or possible?  I (happily) don't know much about 
>>the ftp protocol, or its twisted implementation.
>>
> This is possible, and might be sensible, but in order for you to get
> this to work, you'd have to learn quite a bit about how twisted thinks
> about ftp. I'd be happy to help you if you do decide to pursue this.
> 

Cool, I'll do it. Looking at CVS, I'm glad I didn't get far with the 
1.1.0 version.  There, it seemed I'd be returning a not implemented 
message for pretty much everything but USER, PASS and STOR. Now it seems 
I'll be making an IFTPShell that raises exceptions instead.  Is this 
right?  The thing I'm less sure about is how the actual STOR works.  I 
won't be getting onto it for a few days, in any case.


douglas




From enrico.sirola at riskmap.it  Sat Dec 20 08:09:21 2003
From: enrico.sirola at riskmap.it (enrico.sirola at riskmap.it)
Date: 20 Dec 2003 16:09:21 +0100
Subject: [Twisted-Python] scheduling a task
In-Reply-To: <20031220001604.GA9900@frobozz>
References: <un09toz9r.fsf@riskmap.it> <20031220001604.GA9900@frobozz>
Message-ID: <u1xqz5xwe.fsf@riskmap.it>

>>>>> "Andrew" == Andrew Bennetts <andrew-twisted at puzzling.org> writes:

[...]

    Andrew> Put it in the startService method of your service, i.e. A.

    Andrew> Also, you might find twisted.internet.task.LoopingCall to
    Andrew> be slightly more convenient than manually calling
    Andrew> callLater.

ok, thanks
enrico
-- 
Enrico Sirola <enrico.sirola at riskmap.it>




From pf_moore at yahoo.co.uk  Mon Dec 22 11:10:45 2003
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Mon, 22 Dec 2003 18:10:45 +0000
Subject: [Twisted-Python] How do I modify sys.path in a .tap file?
Message-ID: <y8t4lo4a.fsf@yahoo.co.uk>

I have an application which needs to modify sys.path, in order to pick
up its configuration file (written in Python, naturally :-)) But I'm
not sure how I do this.

Ideally, I'd like to set an option in the tap config file, so I could
just do

    mktap MyApp --confdir ....

and be able to use config["confdir"] to set "something" which would be
picked up and added to sys.path when I run the tap file with twistd.
But I'm not sure how I could do this.

Subclassing service.MultiService, so that I could set sys.path in
startService(), worked OK, but I'm not sure if that's the best idea. 
Is there another way of doing this sort of thing, that I'd be better
using?

Paul.
-- 
This signature intentionally left blank




From radix at twistedmatrix.com  Mon Dec 22 16:00:54 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 22 Dec 2003 18:00:54 -0500
Subject: [Twisted-Python] How do I modify sys.path in a .tap file?
In-Reply-To: <y8t4lo4a.fsf@yahoo.co.uk>
References: <y8t4lo4a.fsf@yahoo.co.uk>
Message-ID: <3FE777A6.70208@twistedmatrix.com>

Paul Moore wrote:
  > Subclassing service.MultiService, so that I could set sys.path in
> startService(), worked OK, but I'm not sure if that's the best idea. 
> Is there another way of doing this sort of thing, that I'd be better
> using?

This sounds reasonable to me.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20031222/70f6032e/attachment.sig>

From slyphon at twistedmatrix.com  Tue Dec 23 03:18:29 2003
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Tue, 23 Dec 2003 05:18:29 -0500
Subject: [Twisted-Python] subclassing ftp
In-Reply-To: <3FE55676.3080900@paradise.net.nz>
References: <3FDA8D80.5060404@paradise.net.nz> <1071677696.7436.39.camel@willie-the-pimp.embassynetworks.com> <3FE55676.3080900@paradise.net.nz>
Message-ID: <3FE81675.9090701@twistedmatrix.com>

Douglas Bagnall wrote:

>
>
> Jonathan Simms wrote:
>
>>> I'm making a thing which collects webcam images via ftp (the lowest 
>>> common denominator for webcam software), and sends them off again 
>>> via the web.  I'd quite like to do it without troubling the file 
>>> system, storing the images as python strings, whilst ignoring all 
>>> the cd/pwd stuff.  Needless to say I don't want to use real system 
>>> usernames.
>>>
>>> Is this very sensible or possible?  I (happily) don't know much 
>>> about the ftp protocol, or its twisted implementation.
>>>
>> This is possible, and might be sensible, but in order for you to get
>> this to work, you'd have to learn quite a bit about how twisted thinks
>> about ftp. I'd be happy to help you if you do decide to pursue this.
>>
>
> Cool, I'll do it. Looking at CVS, I'm glad I didn't get far with the 
> 1.1.0 version.  There, it seemed I'd be returning a not implemented 
> message for pretty much everything but USER, PASS and STOR. Now it 
> seems I'll be making an IFTPShell that raises exceptions instead.  Is 
> this right?  The thing I'm less sure about is how the actual STOR 
> works.  I won't be getting onto it for a few days, in any case.
>
>
> douglas
>
>
I'm a bit busy right now with the holidays and all, but I'll take a look 
and get back to you within the next few days.

I'm glad someone's interested in using FTP for something :)

-Jonathan

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From sam at SpinwardStars.com  Tue Dec 23 09:00:06 2003
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Tue, 23 Dec 2003 09:00:06 -0700
Subject: [Twisted-Python] twisted web question
In-Reply-To: <47D957BC-2FD9-11D8-9AE8-000A95DA5A64@paperfree.net>
References: <200312161533.59346.lafou@wanadoo.fr>
 <2C71D5BB-2F54-11D8-B78A-000A95DA5A64@lapcominc.com>
 <200312161533.59346.lafou@wanadoo.fr>
Message-ID: <5.2.0.9.0.20031223085745.00aa0850@pop.mindspring.com>

At 2003-12-16 10:05 AM -0500, you wrote:
>Just thought of something else:
>
>If I use mktap and an .rpy script, I cannot install any other protocol 
>factory.  My server listens on one port to implement a proprietary TCP/IP 
>protocol, and another port to provide a web interface.  Am I right that I 
>cannot set this up using mktap?

I haven't done it, but according to `mktap --help`
you can specify "an existing .tap file to append the
plugin to, rather than creating a new one," using
-a or --append.

I believe this allows you to put multiple applications
in the same .tap file, and start up the whole set
together.

- Sam





From db3l at fitlinxx.com  Tue Dec 23 09:06:52 2003
From: db3l at fitlinxx.com (David Bolen)
Date: Tue, 23 Dec 2003 11:06:52 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
Message-ID: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>

I've been experimenting with the perspective broker in Twisted 1.1.0
and am wondering?  Is there any graceful way to reconnect and continue
to use PB references if you temporarily lose a connection due to a
network outage?

For example, I can envision my application as being a client that
connects to a remote application server, and while running may have
any number of PB references to that remote application server in
various data structures in the client.  Should there be a transient
network outage such that the TCP session to the server is interrupted,
I'd like to be able to reconnect without having to flush all such data
in the client.

I'm still experimenting, but the docs and some early tests would seem
to imply that if the TCP link breaks for any reason then any of my
object references can never be used again.  Is that in fact true
and/or is there any way to avoid such a condition?  I was hoping that
I could catch network errors in some manner such that I could try to
re-establish the PB link, and then permit existing references from the
prior connection to continue to function could severely impact a
client (or certainly impose a potentially large effort to restore any
remote state to newly viable references).

What do other perspective broker applications do about being as robust
as possible in the presence of transient network conditions?

Thanks for any info/suggestions.

-- David



From radix at twistedmatrix.com  Tue Dec 23 16:27:30 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 23 Dec 2003 18:27:30 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>
References: <926F937512224245A616323693D3F16B02E29DAC@ctmsg01.corp.fitlinxx.com>
Message-ID: <3FE8CF62.5050907@twistedmatrix.com>

David Bolen wrote:
> I've been experimenting with the perspective broker in Twisted 1.1.0
> and am wondering?  Is there any graceful way to reconnect and continue
> to use PB references if you temporarily lose a connection due to a
> network outage?

twisted.spread.sturdy does _something_ related to keeping persistent 
references to an object, but after reading it for a few minutes, I don't 
really grok it. It doesn't seem very general... Hopefully someone else 
will explain this.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20031223/46e36711/attachment.sig>

From ralf at brainbot.com  Tue Dec 23 18:59:47 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Wed, 24 Dec 2003 02:59:47 +0100
Subject: [Twisted-Python] Unjellying per broker vs. global jelly.unjellyableRegistry
Message-ID: <86smjbdlgs.fsf@stronzo.brainbot.com>

Hi,
I have attached a patch, which makes it possible to unjelly different
classes depending on the broker they were sent through (basically one
can set a brokers 'unjellyableRegistry' attribute, which then get's
used instead of the global one). Has such a feature already been
planned? Any chance of getting it included? 

- Ralf

===================================================================
RCS file: /cvs/Twisted/twisted/spread/jelly.py,v
retrieving revision 1.48
diff -u -u -r1.48 jelly.py
--- twisted/spread/jelly.py	4 Jun 2003 00:18:03 -0000	1.48
+++ twisted/spread/jelly.py	24 Dec 2003 01:36:31 -0000
@@ -495,13 +495,22 @@
 
 
 class _Unjellier:
-    def __init__(self, taster, persistentLoad, invoker):
+    unjellyableRegistry = unjellyableRegistry
+    unjellyableFactoryRegistry = unjellyableFactoryRegistry
+    
+    def __init__(self, taster, persistentLoad, invoker,
+                 unjellyableRegistry=None, unjellyableFactoryRegistry=None):
         self.taster = taster
         self.persistentLoad = persistentLoad
         self.references = {}
         self.postCallbacks = []
         self.invoker = invoker
 
+        if unjellyableRegistry is not None:
+            self.unjellyableRegistry = unjellyableRegistry
+        if unjellyableFactoryRegistry is not None:
+            self.unjellyableFactoryRegistry = unjellyableFactoryRegistry
+            
     def unjellyFull(self, obj):
         o = self.unjelly(obj)
         for m in self.postCallbacks:
@@ -514,7 +523,7 @@
         jelType = obj[0]
         if not self.taster.isTypeAllowed(jelType):
             raise InsecureJelly(jelType)
-        regClass = unjellyableRegistry.get(jelType)
+        regClass = self.unjellyableRegistry.get(jelType)
         if regClass is not None:
             if isinstance(regClass, ClassType):
                 inst = _Dummy() # XXX chomp, chomp
@@ -526,7 +535,7 @@
             if hasattr(val, 'postUnjelly'):
                 self.postCallbacks.append(inst.postUnjelly)
             return val
-        regFactory = unjellyableFactoryRegistry.get(jelType)
+        regFactory = self.unjellyableFactoryRegistry.get(jelType)
         if regFactory is not None:
             state = self.unjelly(obj[1])
             inst = regFactory(state)
@@ -845,7 +854,9 @@
     return _Jellier(taster, persistentStore, invoker).jelly(object)
 
 
-def unjelly(sexp, taster = DummySecurityOptions(), persistentLoad=None, invoker=None):
+def unjelly(sexp, taster = DummySecurityOptions(), persistentLoad=None, invoker=None,
+            unjellyableRegistry=None, unjellyableFactoryRegistry=None):
+
     """Unserialize from s-expression.
 
     Takes an list that was the result from a call to jelly() and unserializes
@@ -853,4 +864,4 @@
     of SecurityOptions, will cause an InsecureJelly exception to be raised if a
     disallowed type, module, or class attempted to unserialize.
     """
-    return _Unjellier(taster, persistentLoad, invoker).unjellyFull(sexp)
+    return _Unjellier(taster, persistentLoad, invoker, unjellyableRegistry, unjellyableFactoryRegistry).unjellyFull(sexp)
Index: twisted/spread/pb.py
===================================================================
RCS file: /cvs/Twisted/twisted/spread/pb.py,v
retrieving revision 1.154
diff -u -u -r1.154 pb.py
--- twisted/spread/pb.py	17 Oct 2003 19:06:23 -0000	1.154
+++ twisted/spread/pb.py	24 Dec 2003 01:36:33 -0000
@@ -500,6 +500,8 @@
     version = 6
     username = None
     factory = None
+    unjellyableRegistry = None
+    unjellyableFactoryRegistry = None
     
     def __init__(self, isClient=1, security=globalSecurity):
         banana.Banana.__init__(self, isClient)
@@ -826,7 +828,7 @@
 
         self.unserializingPerspective = perspective
         try:
-            return unjelly(sexp, self.security, None, self)
+            return unjelly(sexp, self.security, None, self, self.unjellyableRegistry, self.unjellyableFactoryRegistry)
         finally:
             self.unserializingPerspective = None
 

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Sat Dec 27 07:00:04 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Dec 2003 09:00:04 -0500
Subject: [Twisted-Python] Unjellying per broker vs. global
	jelly.unjellyableRegistry
In-Reply-To: <86smjbdlgs.fsf@stronzo.brainbot.com>
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
Message-ID: <1072533527.13424.160.camel@sheriffpony>

On Tue, 2003-12-23 at 20:59, Ralf Schmitt wrote:
> Hi,
> I have attached a patch, which makes it possible to unjelly different
> classes depending on the broker they were sent through (basically one
> can set a brokers 'unjellyableRegistry' attribute, which then get's
> used instead of the global one). Has such a feature already been
> planned? Any chance of getting it included? 

Thanks!

Add this to the bug tracker (twistedmatrix.com/bugs/) and nosy me and
warner.

As always, note that patches to Twisted need to be given copyright to
glyph (who is sole owner of Twisted). This does not affect your own use
of code you wrote.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From rdrb at 123.cl  Sat Dec 27 12:51:22 2003
From: rdrb at 123.cl (RITA Y/O RODRIGO DIAZ Y/O BENENSON)
Date: Sat, 27 Dec 2003 16:51:22 -0300
Subject: [Twisted-Python] .tac filenames configurations
Message-ID: <1261da11fb09.11fb091261da@noborrar.co.cl>

Is there a way to indicate in the .tac file which .log and .pid filenames the .tap file will generate ?
If not, should not this feature be aviable ?

Happy new year for the Twisted minds...

RodrigoB.




From itamar at itamarst.org  Sat Dec 27 12:56:16 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 27 Dec 2003 14:56:16 -0500
Subject: [Twisted-Python] .tac filenames configurations
In-Reply-To: <1261da11fb09.11fb091261da@noborrar.co.cl>
References: <1261da11fb09.11fb091261da@noborrar.co.cl>
Message-ID: <1072554976.13423.164.camel@sheriffpony>

On Sat, 2003-12-27 at 14:51, RITA Y/O RODRIGO DIAZ Y/O BENENSON wrote:

> Is there a way to indicate in the .tac file which .log and .pid filenames the .tap file will generate ?

No, this is twistd's responsibility.

> If not, should not this feature be aviable ?

Well... For example, running NT service means no concept of .pid file
and log file might go to NT event log.

However, Application objects do have a name, and certainly it might make
sense to have twistd use that as the default, so for "foo" twistd would
default to foo.pid and foo.log to go along with foo.tap. Problem is this
would not be backwards compatible

How about adding issue to bug tracker, where we can discuss this.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From ralf at brainbot.com  Sun Dec 28 15:29:18 2003
From: ralf at brainbot.com (Ralf Schmitt)
Date: Sun, 28 Dec 2003 23:29:18 +0100
Subject: [Twisted-Python] Unjellying per broker vs. global
 jelly.unjellyableRegistry
In-Reply-To: <1072533527.13424.160.camel@sheriffpony> (Itamar
 Shtull-Trauring's message of "Sat, 27 Dec 2003 09:00:04 -0500")
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
	<1072533527.13424.160.camel@sheriffpony>
Message-ID: <86ekuod1a9.fsf@stronzo.brainbot.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2003-12-23 at 20:59, Ralf Schmitt wrote:
>> Hi,
>> I have attached a patch, which makes it possible to unjelly different
>> classes depending on the broker they were sent through (basically one
>> can set a brokers 'unjellyableRegistry' attribute, which then get's
>> used instead of the global one). Has such a feature already been
>> planned? Any chance of getting it included? 
>
> Thanks!
>
> Add this to the bug tracker (twistedmatrix.com/bugs/) and nosy me and
> warner.

Issue 452. But how do I change the nosy list after creating an issue?

>
> As always, note that patches to Twisted need to be given copyright to
> glyph (who is sole owner of Twisted). This does not affect your own use
> of code you wrote.
>

ok, copyright assigned to glyph. or do you need written permission?

- ralf

-- 
brainbot technologies ag
boppstrasse 64 . 55118 mainz . germany
fon +49 6131 211639-1 . fax +49 6131 211639-2
http://brainbot.com/  mailto:ralf at brainbot.com



From itamar at itamarst.org  Sun Dec 28 15:51:24 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 28 Dec 2003 17:51:24 -0500
Subject: [Twisted-Python] Unjellying per broker vs. global
	jelly.unjellyableRegistry
In-Reply-To: <86ekuod1a9.fsf@stronzo.brainbot.com>
References: <86smjbdlgs.fsf@stronzo.brainbot.com>
	 <1072533527.13424.160.camel@sheriffpony>
	 <86ekuod1a9.fsf@stronzo.brainbot.com>
Message-ID: <1072651883.29179.0.camel@sheriffpony>

On Sun, 2003-12-28 at 17:29, Ralf Schmitt wrote:

> ok, copyright assigned to glyph. or do you need written permission?

That'll do. Unless you're a SCO employee.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lstep at adequat.net  Sun Dec 28 17:00:49 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Mon, 29 Dec 2003 01:00:49 +0100
Subject: [Twisted-Python] Twisted Weekly News #10
Message-ID: <200312290100.49502.lstep@adequat.net>

====================================================================
Twisted Weekly News #10
====================================================================
.. contents::

There wasn't too much mail this week, so I merged the previous TWN with the 
current, as I was ill last week.

If you have any new information, ideas, announcements for the next TWN, please 
write to me, <lior at gradstein.info>.
TWN is also available as HTML formated ReST on http://gradstein.info/articles/
twisted_news/twisted_news/twn10


The Twisted Weekly News
-------------------------

9&10th Issue. Sunday, December 28, 2003

QOTW::
 http://twistedmatrix.com/pipermail/twisted-python/2003-December/006789.html
 From a mail by Alan McIntyre:
 "I just wanted to thank the Twisted developers for making such a cool 
 piece of software. [...] Thanks to Twisted and Python, I was able to
 start from scratch and put  together a server to present some of this
 data via XML-RPC in about 2 or 3 hours (and that includes looking up
 a lot of stuff in the documentation)."


Discussions
-------------

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006786.html
     Jonathan Simms asked for help on his new (new) ftp server code which
     is currently in sandbox. He asks for help to resolve some problems with
     authentication on the Windows side.

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006828.html
     More and more people are becoming interested in integrating Twisted
     stuff into their projects. Last week, RodrigB asked about The Circle.
     This week, Valentino Volonghi asks about the possibility (wish) to
     replace the pygame event loop with a Twisted reactor.

   * http://twistedmatrix.com/pipermail/
twisted-python/2003-December/006820.html
     Michal Pasternak made some tests on Twisted, and noticed some
     performance degradation after 40 simultaneous connections. Itamar
     replied there wasn't anything hardcoded that would change Twisted
     behaviour above 40 simultaneous connections.


Cool Thing of the Week
-----------------------

 * **Treasure of code examples and tutorials for nevow** (http://
www.livejournal.com/users/fzzzy/)
   fzZzy updated his new blog on LiveJournal with a lot of code samples he
   wrote for people who asked questions on irc. The second lecture he gave
   on irc is also available (http://soundfarmer.com/content/logs/
NevowLecture2-121503.txt).
   With these docs and the previous more "in-depth" documentation from justinj 
   (http://stewstuff.com/doc/nevow.xhtml) you do not any excuse for not 
learning nevow!
 * **SFTP support in Zope (using Twisted!)** (http://twistedmatrix.com/
pipermail/twisted-python/2003-December/006839.html)
   Fred L. Drake, Jr. wrote some support (http://cvs.zope.org/Packages/
SFTPGateway/) for the sftp protocol to be included in Zope. The result may be 
available as a separate product in a near future.
 * **Impacket** (http://oss.corest.com/projects/impacket.html) Not related
   to Twisted, but interesting anyway.Itamar recommended us to take a look
   at this python library which provides low-level programmatic access to
   network packets (tcp, udp, etc.).  There is also a python pcap
   implementation on their web site.
 * **Reminder about the web forum** (http://twisted.banquise.org/)
   May I remind you that a web interface exists for those that prefer
   reading informations online? We're barely 8 now, but nobody posts
   anything which can be discussed :-(


Current releases
-----------------

  * Twisted: 1.1.1 (released 2003-12-10)
  * Quotient: 0.8.8 (released 2003-12-12)
  * Twisted Java: 0.6.1


Ok, that's it for this week. Thanks for reading!




From lists at webcrunchers.com  Sun Dec 28 17:57:20 2003
From: lists at webcrunchers.com (JD)
Date: Sun, 28 Dec 2003 16:57:20 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <200312290100.49502.lstep@adequat.net>
References: <200312290100.49502.lstep@adequat.net>
Message-ID: <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>

in my resource's "render" method,  I'm doing some things that require a 
fairly long time to
accomplish,  so each time through a loop,   I want to render some 
intermediate results
to the brower.

Kinda like this:

class myResource(resource.Resource):
	isLeaf = True
	def	render(self, request):
		# Now I build up a string to render to the browser
		html = make_body()

		# And now I want to go into a loop
		for item in items:
			result = compute_some_item(item)   # I just do something that 
returns some result
			request.write(result)				# then send it to the browser
			return(server.NOT_DONE_YET)	# Do I return now?    If so,   will I 
re-enter my "render" method again
		request.finish()

		# Now,  do I just return the html I generated earlier
		return(html)

what happens when I return with server.NOT_DONE_YET?   will I get 
called again so I can do the
request.write(something)?

What is the sequence?

According to the documentation,  I quote:  (from render.py)

     def render(self, request):
         """Render a given resource.

         This must be implemented in all subclasses of Resource.

         The return value of this method will be the rendered page, 
unless the
         return value is twisted.web.server.NOT_DONE_YET, in which case 
it is
         this class's responsibility to write the results to
         request.write(data), then call request.finish().
         """

According to this,   I return server.NOT_DONE_YET...    but then it 
goes on to say
it's my classes responsibility to write the results to 
request.write(data),   to write
the results,   but how do i do that,   because if i return 
server.NOT_DONE_YET
then I've exited,  and have no opportunity to call 
request.write(something).

So when do I call it?    Do I call it BEFORE I return?   If so,  then 
why doesn't
the bloody document say that?

And,   in the using Web document,  it says....


A Resource object may do various things to produce output which will be 
sent back to the browser:

*	Return a string
*	Call request.write("stuff") as many times as desired, then call 
request.finish() and return server.NOT_DONE_YET (This is deceptive, 
since you are in fact done with the request, but is the correct way to 
do this)
*	Request a Deferred, return server.NOT_DONE_YET, and call 
request.write("stuff") and request.finish() later, in a callback on the 
Deferred.


This seems a little more reasonable,  and my question,  according to 
this is....   do I do it in this order?

1) call request.write(html)    # from above

Then for each interation of some loop:
1) call request.write(stuff) a bunch of times,  which for each 
iteration of a loop,  may take up to a minute.
2) call request.finish()
3) return server.NOT_DONE_YET

Is this the right order for doing this?

Should I try to use a Deferred?    I have no clue how to do that,   
there appears to be a severe lack of
examples similar to what I want to do.

Lets say I want to defer ONE interation of a loop...    Lets call this 
function...

def   do_iteration(item):
	# do the interation

So,   would I construct my loop like this:

# In the render method.
for item in items:
	# process some item

	# Then do something to add this deferred,   which I still don't know 
how to do.
          # something like this?

          reactor.callLater(something, do_iteration)

         # But since I'm in the "render" method,  how do I get a 
reference to "reactor"?
         # And what it the meaning of "something" in the first argument 
of "callLater"?


John
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 5124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031228/7e156c8e/attachment-0002.bin>

From glyph at twistedmatrix.com  Sun Dec 28 21:32:33 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Dec 2003 23:32:33 -0500
Subject: [Twisted-Python] Twisted Weekly News #10
In-Reply-To: <200312290100.49502.lstep@adequat.net>
References: <200312290100.49502.lstep@adequat.net>
Message-ID: <058D77AF-39B8-11D8-9472-000393C9700E@twistedmatrix.com>


On Dec 28, 2003, at 7:00 PM, Luc Stepniewski wrote:

> There wasn't too much mail this week, so I merged the previous TWN 
> with the
> current, as I was ill last week.

Thanks for doing it again, Luc!  These are really useful to me :).  And 
don't worry about being sick, it was the holidays.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031228/d31ff58f/attachment.sig>

From glyph at twistedmatrix.com  Sun Dec 28 21:39:45 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Dec 2003 23:39:45 -0500
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com>
Message-ID: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>


On Dec 28, 2003, at 7:57 PM, JD wrote:

> Is this the right order for doing this?

You can do it in any order.  Basically, the rules are thus:

	- If you return a string, the framework will automatically call 
request.write(result); request.finish() for you when the method 
returns.

	- The request must be finish()ed or the page render will never 
complete in the browser.

	- If you return NOT_DONE_YET, nothing will happen automatically, and 
you can call request.write(...) at your leisure and request.finish() 
when you're done with it.  This includes in a callback of a Deferred 
(the usual use case), in another form of network callback, 
synchronously before you return NOT_DONE_YET, or whenever.  
NOT_DONE_YET just means "Do not have the framework call write() and 
finish() on the request automatically.)  The caveat is that you then 
MUST call finish(), or the page will hang forever in the browser.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031228/d3f89ed7/attachment.sig>

From db3l at fitlinxx.com  Mon Dec 22 17:23:45 2003
From: db3l at fitlinxx.com (David Bolen)
Date: 22 Dec 2003 19:23:45 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
Message-ID: <uwu8obcvi.fsf@fitlinxx.com>

I've been experimenting with the perspective broker in Twisted 1.1.0
and am wondering?  Is there any graceful way to reconnect and continue
to use PB references if you temporarily lose a connection due to a
network outage?

For example, I can envision my application as being a client that
connects to a remote application server, and while running may have
any number of PB references to that remote application server in
various data structures in the client.  Should there be a transient
network outage such that the TCP session to the server is interrupted,
I'd like to be able to reconnect without having to flush all such data
in the client.

I'm still experimenting, but the docs and some early tests would seem
to imply that if the TCP link breaks for any reason then any of my
object references can never be used again.  Is that in fact true
and/or is there any way to avoid such a condition?  I was hoping that
I could catch network errors in some manner such that I could try to
re-establish the PB link, and then permit existing references from the
prior connection to continue to function could severely impact a
client (or certainly impose a potentially large effort to restore any
remote state to newly viable references).

What do other perspective broker applications do about being as robust
as possible in the presence of transient network conditions?

Thanks for any info/suggestions.

-- David




From a.vredegoor at hccnet.nl  Sat Dec 27 11:40:10 2003
From: a.vredegoor at hccnet.nl (Anton Vredegoor)
Date: Sat, 27 Dec 2003 19:40:10 +0100
Subject: [Twisted-Python] XML Parsing Error in tutorial.xhtml
Message-ID: <bskjqb$bba$1@sea.gmane.org>

After a fresh install of twisted 1.1.1 and clicking on the manual
entry and next on the
 
    * Tutorial: Twisted From Scratch

link in the Twisted Documentation file I get the following error in
mozilla:

###

XML Parsing Error: duplicate attribute Location:
file:///D:/Python23/Lib/site-packages/TwistedDocs/howto/tutorial.xhtml
Line Number 506, Column 60:<a class="py-listing"
href="listings/finger/finger/tap.py"
class="py-listing">finger/tap.py</a>
-----------------------------------------------------------^

###

possible fix:

Change line 506 to 510 into:

###

<a href="listings/finger/finger/tap.py"
class="py-listing">finger/tap.py</a>

<p>And register it all:</p>

<a href="listings/finger/finger/plugins.tml"
class="py-listing">finger/plugins.tml</a>

###


Anton




From exarkun at intarweb.us  Mon Dec 29 09:52:21 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 29 Dec 2003 11:52:21 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <uwu8obcvi.fsf@fitlinxx.com>
References: <uwu8obcvi.fsf@fitlinxx.com>
Message-ID: <20031229165221.GA7994@intarweb.us>

On Mon, Dec 22, 2003 at 07:23:45PM -0500, David Bolen wrote:
> I've been experimenting with the perspective broker in Twisted 1.1.0
> and am wondering?  Is there any graceful way to reconnect and continue
> to use PB references if you temporarily lose a connection due to a
> network outage?

  PB references are managed by the connection's Broker object, which is
created anew in the factory's buildProtocol method, and the object/reference
cache of which is cleared when connections are lost.

  Having references which can withstand disconnects should be doable
relatively easily - all you need to do is make sure the same Broker objects
get used for all subsequent reconnections.  This may be a little tricky,
since you need to differentiate between new connections and reconnections
(which you can't do easily with PB, because you'll already have a Broker),
but should be entirely possible.

  I'm not sure if there is any reason, other than trickiness factor, that
this isn't implemented directly in twisted.spread.  Perhaps there is a
hidden issue I am unaware of, or maybe it is simply that no one has wanted
it badly enough to write it :)

  Hope this helps,

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031229/44d64222/attachment.sig>

From glyph at twistedmatrix.com  Mon Dec 29 17:00:57 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 29 Dec 2003 19:00:57 -0500
Subject: [Twisted-Python] Recovering PB references on broken connection?
In-Reply-To: <20031229165221.GA7994@intarweb.us>
References: <uwu8obcvi.fsf@fitlinxx.com> <20031229165221.GA7994@intarweb.us>
Message-ID: <3EA8A91B-3A5B-11D8-A5EC-000393C9700E@twistedmatrix.com>


On Dec 29, 2003, at 11:52 AM, Jp Calderone wrote:

>   I'm not sure if there is any reason, other than trickiness factor, 
> that
> this isn't implemented directly in twisted.spread.  Perhaps there is a
> hidden issue I am unaware of, or maybe it is simply that no one has 
> wanted
> it badly enough to write it :)

Reference counting.  There has to be a meta-connection around to hold 
references to the "live" state, which, IMHO, would be better 
implemented as an extra-robust byte-level stream at a lower level.  
Even with such a connection, it's bad to count on the stateful 
existence of references to individual objects which stay live over a 
long period of time.  The initial login handshake should get you to a 
"naming" object within a few steps, and then have a higher-level API 
for loading published objects from persistence or wherever.

Right now this has to be ad-hoc because there is no clear universal way 
to specify persistent, reliable object IDs that are "macro" enough not 
to change when small implementation details of the protocol shift.  Any 
object has to have an ID number that can be compared for identity but 
some objects are more equal than others.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031229/a3943ab1/attachment.sig>

From andrew-twisted at puzzling.org  Mon Dec 29 19:26:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 30 Dec 2003 13:26:16 +1100
Subject: [Twisted-Python] XML Parsing Error in tutorial.xhtml
In-Reply-To: <bskjqb$bba$1@sea.gmane.org>
References: <bskjqb$bba$1@sea.gmane.org>
Message-ID: <20031230022616.GA1043@frobozz>

On Sat, Dec 27, 2003 at 07:40:10PM +0100, Anton Vredegoor wrote:
> After a fresh install of twisted 1.1.1 and clicking on the manual
> entry and next on the
>  
>     * Tutorial: Twisted From Scratch
> 
> link in the Twisted Documentation file I get the following error in
> mozilla:
> 
> ###
> 
> XML Parsing Error: duplicate attribute Location:
> file:///D:/Python23/Lib/site-packages/TwistedDocs/howto/tutorial.xhtml
> Line Number 506, Column 60:<a class="py-listing"
> href="listings/finger/finger/tap.py"
> class="py-listing">finger/tap.py</a>

According to CVS, the version in 1.1.1 shouldn't have this bug (but 1.1.0
would).  Is it possible you have an older version of the docs installed?

Also, you probably want to read the processed .html, not .xhtml source used
to generate it (before 1.1.0 or so it was the other way around...)

-Andrew.




From douglas at paradise.net.nz  Mon Dec 29 23:52:46 2003
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Tue, 30 Dec 2003 19:52:46 +1300
Subject: [Twisted-Python] flash's rtmp protocol
Message-ID: <3FF120BE.3010504@paradise.net.nz>

RTMP is a secret protocol used by Macromedia flash servers to do fancy 
interactive/streaming stuff.  I found a reference to it on one of Bob 
Ippolito's TODO lists:

http://pythonmac.org/wiki/BobIppolito

   "TODO: [....] Reverse engineer proprietary RTMP protocol (Flash
    Communication Server) and implement Python version (Twisted)"

I'm also interested in doing this, but am unlikely to start soon.  So 
this is just to let you (Bob) know, lest we do too much in parallel.


douglas





From bob at redivi.com  Tue Dec 30 00:12:21 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 30 Dec 2003 02:12:21 -0500
Subject: [Twisted-Python] flash's rtmp protocol
In-Reply-To: <3FF120BE.3010504@paradise.net.nz>
References: <3FF120BE.3010504@paradise.net.nz>
Message-ID: <82B99D7A-3A97-11D8-B505-000A95686CD8@redivi.com>


On Dec 30, 2003, at 1:52 AM, Douglas Bagnall wrote:

>
> RTMP is a secret protocol used by Macromedia flash servers to do fancy 
> interactive/streaming stuff.  I found a reference to it on one of Bob 
> Ippolito's TODO lists:
>
> http://pythonmac.org/wiki/BobIppolito
>
>   "TODO: [....] Reverse engineer proprietary RTMP protocol (Flash
>    Communication Server) and implement Python version (Twisted)"
>
> I'm also interested in doing this, but am unlikely to start soon.  So 
> this is just to let you (Bob) know, lest we do too much in parallel.

I've given the TCP sessions a cursory glance, and my best guess is that 
it uses something quite similar to its stateless "Flash Remoting MX" 
feature.  There are implementations of the remoting stuff in PHP and 
Java, but not Python (last I checked).  I have not written any code or 
documentation yet either way.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031230/e6bebe7f/attachment-0002.bin>

From lists at webcrunchers.com  Tue Dec 30 20:04:43 2003
From: lists at webcrunchers.com (JD)
Date: Tue, 30 Dec 2003 19:04:43 -0800
Subject: [Twisted-Python] IRC Client examples...  PLEASE HELP
In-Reply-To: <3FF120BE.3010504@paradise.net.nz>
References: <3FF120BE.3010504@paradise.net.nz>
Message-ID: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>

Hi,

   Has anyone written an IRC client in Twisted,  using protocol.irc?    
Do I make a
"reactor",  or is a reactor only used for making servers?    All I need 
is some
really simple code illustrating how to connect to an IRC Server,  doing 
an "identd"
to satisfy some IRC Servers,  and then having a simple imput line,  and 
an output
line...   It doesn't have to be fancy,  just some really basic example 
code on how
to connect,  specify a nick,  joining a channel,  and typing text into 
a channel,
and of course how to quit.

  Unfortunately,  no such example exists,  all the parts seem to be 
there,  but none
of the methods in the protocol.irc.IRCClient appear to be implemented,  
which
I suspect I would have to make my own sub-class...   but I have no clue 
how to put
all this together.   There doesn't seem to be any docs that explain 
this.

John




From developer at csrules.dyndns.org  Tue Dec 30 23:56:26 2003
From: developer at csrules.dyndns.org (darryl)
Date: Tue, 30 Dec 2003 22:56:26 -0800
Subject: [Twisted-Python] IRC Client examples...  PLEASE HELP
In-Reply-To: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF2731A.2040208@csrules.dyndns.org>

There's an IRC log bot with the examples....

Look here:

http://twistedmatrix.com/documents/examples/

JD wrote:

> Hi,
>
>   Has anyone written an IRC client in Twisted,  using protocol.irc?    
> Do I make a
> "reactor",  or is a reactor only used for making servers?    All I 
> need is some
> really simple code illustrating how to connect to an IRC Server,  
> doing an "identd"
> to satisfy some IRC Servers,  and then having a simple imput line,  
> and an output
> line...   It doesn't have to be fancy,  just some really basic example 
> code on how
> to connect,  specify a nick,  joining a channel,  and typing text into 
> a channel,
> and of course how to quit.
>
>  Unfortunately,  no such example exists,  all the parts seem to be 
> there,  but none
> of the methods in the protocol.irc.IRCClient appear to be 
> implemented,  which
> I suspect I would have to make my own sub-class...   but I have no 
> clue how to put
> all this together.   There doesn't seem to be any docs that explain this.
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From lists at webcrunchers.com  Wed Dec 31 02:43:52 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 01:43:52 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
Message-ID: <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>

Below is a piece of code from  ircLogBot.py  in the examples section of 
the
Twisted release.

It makes reference to a "channel" - What is a channel.
I assume that "sys.argv[1]" when passed into main()
must be a "channel"

Of course the person who wrote this module just had no inclination to
actually tell anyone how to use it.    I know the 2nd argument is a file
name or path,  but what is a "channel"....

I know I probably am really lame for asking these kinds of
questions,  but i left my crystal ball on the planet venus,  and
can't read the mind of the person who wrote this module.

class LogBotFactory(protocol.ClientFactory):
     """A factory for LogBots.

     A new protocol instance will be created each time we connect to the 
server.
     """

     # the class of the protocol to build
     protocol = LogBot

     def __init__(self, channel, filename):
         self.channel = channel
         self.filename = filename

     def clientConnectionLost(self, connector, reason):
         """If we get disconnected, reconnect to server."""
         connector.connect()

     def clientConnectionFailed(self, connector, reason):
         print "connection failed:", reason
         reactor.stop()


if __name__ == '__main__':
     # create factory protocol and application
     import sys
     f = LogBotFactory(sys.argv[1], sys.argv[2])

     # connect factory to this host and port
     reactor.connectTCP("irc.freenode.net", 6667, f)

     # run bot
     reactor.run()
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1576 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031231/3509e2c5/attachment-0002.bin>

From developer at csrules.dyndns.org  Wed Dec 31 08:33:16 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 07:33:16 -0800
Subject: [Twisted-Python] A Twisted Web Question..NOT S/B IRC client
In-Reply-To: <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com> <D7979172-3B75-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF2EC3C.1020805@csrules.dyndns.org>

a)  I can't see how this is a Twisted Web Question (check the subject)

b) I'm assuming that since you want to write an IRC client you'd have 
some inkling
     of what a channel might be.....

-d

JD wrote:

> Below is a piece of code from ircLogBot.py in the examples section of the
> Twisted release.
>
> It makes reference to a "channel" - What is a channel.
> I assume that "sys.argv[1]" when passed into main()
> must be a "channel"






From martin at datacash.com  Wed Dec 31 09:56:21 2003
From: martin at datacash.com (Martin Waite)
Date: 31 Dec 2003 16:56:21 +0000
Subject: [Twisted-Python] SSL Client Certificate support
Message-ID: <1072889782.5864.27.camel@pascal>

Hi,

Does twisted support SSL Client certificates ?

I can't see anywhere to plug the certificate into 
in the SSL ClientContextFactory.

regards,
Martin






From itamar at itamarst.org  Wed Dec 31 10:04:55 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Dec 2003 12:04:55 -0500
Subject: [Twisted-Python] SSL Client Certificate support
In-Reply-To: <1072889782.5864.27.camel@pascal>
References: <1072889782.5864.27.camel@pascal>
Message-ID: <1072890295.28549.53.camel@sheriffpony>

On Wed, 2003-12-31 at 11:56, Martin Waite wrote:

> Does twisted support SSL Client certificates ?

Yep.

> I can't see anywhere to plug the certificate into 
> in the SSL ClientContextFactory.


class MyClientContextFactory:
    """A context factory for SSL clients."""

    isClient = 1
    method = SSL.SSLv3_METHOD

    def getContext(self):
        ctx = SSL.Context(self.method)
        ctx.use_certificate_file(self.certificateFileName)
        ctx.use_privatekey_file(self.privateKeyFileName)
        return ctx

etc.. I suggest reading pyOpenSSL docs for OpenSSL.SSL.Context.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From martin at datacash.com  Wed Dec 31 10:39:05 2003
From: martin at datacash.com (Martin Waite)
Date: 31 Dec 2003 17:39:05 +0000
Subject: [Twisted-Python] SSL Client Certificate support
In-Reply-To: <1072890295.28549.53.camel@sheriffpony>
References: <1072889782.5864.27.camel@pascal> 
	<1072890295.28549.53.camel@sheriffpony>
Message-ID: <1072892345.5943.34.camel@pascal>

On Wed, 2003-12-31 at 17:04, Itamar Shtull-Trauring wrote:
> On Wed, 2003-12-31 at 11:56, Martin Waite wrote:
> 
> > Does twisted support SSL Client certificates ?
> 
> Yep.
> 
> > I can't see anywhere to plug the certificate into 
> > in the SSL ClientContextFactory.
> 
> 
> class MyClientContextFactory:
>     """A context factory for SSL clients."""
> 
>     isClient = 1
>     method = SSL.SSLv3_METHOD
> 
>     def getContext(self):
>         ctx = SSL.Context(self.method)
>         ctx.use_certificate_file(self.certificateFileName)
>         ctx.use_privatekey_file(self.privateKeyFileName)
>         return ctx
> 
> etc.. I suggest reading pyOpenSSL docs for OpenSSL.SSL.Context.
> 

Many thanks - this all works beautifully.

regards,
Martin




From teratorn at world-net.net  Wed Dec 31 12:11:31 2003
From: teratorn at world-net.net (Eric Mangold)
Date: Wed, 31 Dec 2003 12:11:31 -0700
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com>
Message-ID: <200312311211.31399.teratorn@world-net.net>

On Tuesday 30 December 2003 08:04 pm, JD wrote:
> Hi,
>
>    Has anyone written an IRC client in Twisted,  using protocol.irc?
> Do I make a
> "reactor",  or is a reactor only used for making servers?    All I
> need is some
> really simple code illustrating how to connect to an IRC Server, 
> doing an "identd"

ident is a seperate protocol from IRC.  You will need to run a seperate 
daemon accessible from the Internet to provide this.  Twisted doesn't 
have an ident server.

I use the one here http://freshmeat.net/projects/fauxident/

> to satisfy some IRC Servers,  and then having a simple imput line, 
> and an output
> line...   It doesn't have to be fancy,  just some really basic
> example code on how
> to connect,  specify a nick,  joining a channel,  and typing text
> into a channel,
> and of course how to quit.
>
>   Unfortunately,  no such example exists,  all the parts seem to be
> there,  but none
> of the methods in the protocol.irc.IRCClient appear to be
> implemented, which
> I suspect I would have to make my own sub-class...   but I have no
> clue how to put
> all this together.   There doesn't seem to be any docs that explain
> this.
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at intarweb.us  Wed Dec 31 13:52:49 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 31 Dec 2003 15:52:49 -0500
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <200312311211.31399.teratorn@world-net.net>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net>
Message-ID: <20031231205249.GA25692@intarweb.us>

On Wed, Dec 31, 2003 at 12:11:31PM -0700, Eric Mangold wrote:
> 
> On Tuesday 30 December 2003 08:04 pm, JD wrote:
> > Hi,
> >
> >    Has anyone written an IRC client in Twisted,  using protocol.irc? Do
> > I make a "reactor", or is a reactor only used for making servers?  All I
> > need is some really simple code illustrating how to connect to an IRC
> > Server, doing an "identd"
> 
> ident is a seperate protocol from IRC.  You will need to run a seperate
> daemon accessible from the Internet to provide this.  Twisted doesn't have
> an ident server.

  Thanks for pointing out this oversight!  Fixed in CVS.

  Jp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20031231/26879ab0/attachment.sig>

From lists at webcrunchers.com  Wed Dec 31 16:33:41 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:33:41 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <200312311211.31399.teratorn@world-net.net>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net>
Message-ID: <C4662E4E-3BE9-11D8-ADCB-0030656C6B9E@webcrunchers.com>

On Dec 31, 2003, at 11:11 AM, Eric Mangold wrote:

> ident is a seperate protocol from IRC.  You will need to run a seperate
> daemon accessible from the Internet to provide this.  Twisted doesn't
> have an ident server.
>
> I use the one here http://freshmeat.net/projects/fauxident/

Thanx,  I'll check it out.

John




From lists at webcrunchers.com  Wed Dec 31 16:35:33 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:35:33 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <20031231205249.GA25692@intarweb.us>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us>
Message-ID: <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>

On Dec 31, 2003, at 12:52 PM, Jp Calderone wrote:

>> ident is a seperate protocol from IRC.  You will need to run a 
>> seperate
>> daemon accessible from the Internet to provide this.  Twisted doesn't 
>> have
>> an ident server.
>
>   Thanks for pointing out this oversight!  Fixed in CVS.

so then,   did you just add some example code to the CVS?

John




From itamar at itamarst.org  Wed Dec 31 16:55:25 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 31 Dec 2003 18:55:25 -0500
Subject: [Twisted-Python] Subversion
Message-ID: <1072914925.30272.178.camel@sheriffpony>

Currently in beta. Atomic commits, real support for renames, folders,
etc..

Can do both anon and logged in access without apache (ssh and pserver
style).

Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
integration). Has cvs importer. viewcvs supports it.

I say we switch when it hits 1.0.

-- 
Itamar Shtull-Trauring    http://itamarst.org
Looking for a job: http://itamarst.org/resume.html




From lists at webcrunchers.com  Wed Dec 31 16:58:50 2003
From: lists at webcrunchers.com (JD)
Date: Wed, 31 Dec 2003 15:58:50 -0800
Subject: [Twisted-Python] Where is best place to put my custom code?
In-Reply-To: <20031231205249.GA25692@intarweb.us>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us>
Message-ID: <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>

Hi,

I'm open for suggestions on where I can put my customized code.    I 
seem to have a choice
between putting it in the "factory" or in the "protocol",  and I cannot 
seem to decide where the
best place would be.

My application is simple.....   here is all it should do....

1) establish a connection to an IRC server.
2) send an IRC command,  like a "who" command,  and extract the info
3) then exit the client

I could put my code in the IRCClient's "connectionMade" method.    Or I 
could put it in the
factory's "startedConnecting" method.     The code would be simple,   
issue a
"who" command,   and take it's output and return it.   So,  in my 
connectionMade method
I would issue the command...  then call reactor.stop() which would exit 
from my reactor.run().

I think the factory's "startedConnecting" might get called first,  then 
somewhere down in
this mess,   the Client would call me back with the "connectionMade",  
and I could do it there.
I just need to know the appropriate place to put my code.   None of 
these examples in
the 'examples' directories make this clear.

My next task is to know how to extract the 'who' data back from my 
initial "who"

The ONLY callback I see is the "action()" method,   where it has the 
"msg" as the argument.
Is that the one I sub-class to read back the result of the "who"?   
Which I assume is called back
from a deferred.

There are a number of other callbacks for the private messages and 
such.   Which one
do I use?   When testing the code,  I'm not getting any callbacks to 
the "action()" method.
Is this because something else is fucked up.

I don't suppose anyone on this last has an Mac OS-X system,  do they?   
If so,  I would love
to establish a VIOP meeting if anyone has the time to help me out.  My 
"iChat" AIM handle is
'jdcrunchman'

John




From rc at pgdn.org  Wed Dec 31 17:11:38 2003
From: rc at pgdn.org (Robert Church)
Date: Wed, 31 Dec 2003 16:11:38 -0800
Subject: [Twisted-Python] Subversion
In-Reply-To: <1072914925.30272.178.camel@sheriffpony>
References: <1072914925.30272.178.camel@sheriffpony>
Message-ID: <20040101001138.GA27621@pgdn.org>

On Wed, Dec 31, 2003 at 06:55:25PM -0500, Itamar Shtull-Trauring quipped:
> Currently in beta. Atomic commits, real support for renames, folders,
> etc..
> 
> Can do both anon and logged in access without apache (ssh and pserver
> style).
> 
> Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
> integration). Has cvs importer. viewcvs supports it.
> 
> I say we switch when it hits 1.0.

Subversion is wonderful. I use it for all of my code, and for a lot of
my configuration files. I haven't really had any problems either.

You should be able to run SVN and CVS side-by-side, though one of the
repositories would probably have to be read-only.



From alexander.winston at comcast.net  Wed Dec 31 18:17:41 2003
From: alexander.winston at comcast.net (Alexander Winston)
Date: Wed, 31 Dec 2003 20:17:41 -0500
Subject: [Twisted-Python] Subversion
In-Reply-To: <1072914925.30272.178.camel@sheriffpony>
References: <1072914925.30272.178.camel@sheriffpony>
Message-ID: <1072919861.26230.0.camel@duende>

On Wed, 2003-12-31 at 18:55, Itamar Shtull-Trauring wrote:
> Currently in beta. Atomic commits, real support for renames, folders,
> etc..
> 
> Can do both anon and logged in access without apache (ssh and pserver
> style).
> 
> Has emacs mode. Has windows clients (e.g. TortoiseSVN, VS.NET
> integration). Has cvs importer. viewcvs supports it.
> 
> I say we switch when it hits 1.0.

I'm all for it. The more Subversion repositories, the merrier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20031231/a50772d7/attachment.sig>

From developer at csrules.dyndns.org  Wed Dec 31 20:30:09 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 19:30:09 -0800
Subject: [Twisted-Python] Re: IRC Client examples...  PLEASE HELP
In-Reply-To: <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us> <072928DC-3BEA-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <3FF39441.7020600@csrules.dyndns.org>

>>
>>   Thanks for pointing out this oversight!  Fixed in CVS.
>
>
> so then,   did you just add some example code to the CVS?
>
> John
>

This means he coded support for ident and added that to cvs 
(twisted.protocols.ident).
Client and server.  No he did not code IRC client examples if that's 
what your
asking ?



-d




From developer at csrules.dyndns.org  Wed Dec 31 20:38:08 2003
From: developer at csrules.dyndns.org (darryl)
Date: Wed, 31 Dec 2003 19:38:08 -0800
Subject: [Twisted-Python]  IRC client
Message-ID: <3FF39620.4030906@csrules.dyndns.org>

>
> I see tweo meanings and interpretations of the word "channel"  - One i 
> think is some
> kind of TCP Connection info,  and the other one is a chat "room" which 
> is the word
> I use to define a "room" or place where groups of people can chat.    Is
> channel = room?
>
> John


channel is the universally accepted term for an IRC channel.
RFC 1459.

-d




From teratorn at world-net.net  Wed Dec 31 20:43:15 2003
From: teratorn at world-net.net (Eric Mangold)
Date: Wed, 31 Dec 2003 20:43:15 -0700
Subject: [Twisted-Python] Re: Where is best place to put my custom code?
In-Reply-To: <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <20031231205249.GA25692@intarweb.us> <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <200312312043.15657.teratorn@world-net.net>

On Wednesday 31 December 2003 04:58 pm, JD wrote:
> Hi,
>
> I'm open for suggestions on where I can put my customized code.    I
> seem to have a choice
> between putting it in the "factory" or in the "protocol",  and I
> cannot seem to decide where the
> best place would be.

Since this is IRC you shouldn't go issuing commands until your signed 
on, thus the signedOn method of your protocol would be the right place.

>
> My application is simple.....   here is all it should do....
>
> 1) establish a connection to an IRC server.
> 2) send an IRC command,  like a "who" command,  and extract the info
> 3) then exit the client
>
> I could put my code in the IRCClient's "connectionMade" method.    Or
> I could put it in the
> factory's "startedConnecting" method.     The code would be simple,
> issue a
> "who" command,   and take it's output and return it.   So,  in my
> connectionMade method
> I would issue the command...  then call reactor.stop() which would
> exit from my reactor.run().
>
> I think the factory's "startedConnecting" might get called first, 
> then somewhere down in
> this mess,   the Client would call me back with the "connectionMade",
> and I could do it there.
> I just need to know the appropriate place to put my code.   None of
> these examples in
> the 'examples' directories make this clear.
>
> My next task is to know how to extract the 'who' data back from my
> initial "who"

Yeah, it's not obvious how to do that. I'll send another mail when I've 
a chance to test something, but New Years is coming up right now... :)

>
> The ONLY callback I see is the "action()" method,   where it has the
> "msg" as the argument.
> Is that the one I sub-class to read back the result of the "who"?

No. An ACTION in IRC terms is a user doing an /me.

> Which I assume is called back
> from a deferred.
>
> There are a number of other callbacks for the private messages and
> such.   Which one
> do I use?   When testing the code,  I'm not getting any callbacks to
> the "action()" method.
> Is this because something else is fucked up.

Yeah, your code.

>
> I don't suppose anyone on this last has an Mac OS-X system,  do they?
> If so,  I would love
> to establish a VIOP meeting if anyone has the time to help me out. 
> My "iChat" AIM handle is
> 'jdcrunchman'
>
> John
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-Eric






From glyph at twistedmatrix.com  Wed Dec 31 23:23:03 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 1 Jan 2004 01:23:03 -0500
Subject: [Twisted-Python] SSL Client Certificate support
In-Reply-To: <1072892345.5943.34.camel@pascal>
References: <1072889782.5864.27.camel@pascal>  <1072890295.28549.53.camel@sheriffpony> <1072892345.5943.34.camel@pascal>
Message-ID: <F471E51A-3C22-11D8-9071-000393C9700E@twistedmatrix.com>


On Dec 31, 2003, at 12:39 PM, Martin Waite wrote:

> Many thanks - this all works beautifully.

Easier might be

from twisted.internet.ssl import DefaultOpenSSLContextFactory
ctxfac = DefaultOpenSSLContextFactory(privkey, certfile)
ctxfac.isClient = True

I would like to discourage the use of context factories outside the 
default one unless absolutely necessary - the current notion of 
"context factory" is an ugly hack that requires direct access to the 
PyOpenSSL libraries.  This will be harmful for future compatibility to, 
say, an upcoming Jython release with Java SSL support rather than 
OpenSSL.

Changing something with "OpenSSL" in its name to be a Java SSL factory 
will certainly be an ugly workaround, but _less_ ugly than trying to 
fake out the actual PyOpenSSL API by stuffing sys.modules.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040101/2283a144/attachment.sig>

From exarkun at intarweb.us  Wed Dec 31 23:38:10 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 1 Jan 2004 01:38:10 -0500
Subject: [Twisted-Python] Where is best place to put my custom code?
In-Reply-To: <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
References: <3FF120BE.3010504@paradise.net.nz> <14E99DCD-3B3E-11D8-BB69-0030656C6B9E@webcrunchers.com> <200312311211.31399.teratorn@world-net.net> <20031231205249.GA25692@intarweb.us> <47D7D71E-3BED-11D8-ADCB-0030656C6B9E@webcrunchers.com>
Message-ID: <20040101063810.GB26751@intarweb.us>

On Wed, Dec 31, 2003 at 03:58:50PM -0800, JD wrote:
> Hi,
> 
> I'm open for suggestions on where I can put my customized code.    I seem
> to have a choice between putting it in the "factory" or in the "protocol",
> and I cannot seem to decide where the best place would be.
> 
> My application is simple.....   here is all it should do....
> 
> 1) establish a connection to an IRC server.
> 2) send an IRC command,  like a "who" command,  and extract the info
> 3) then exit the client
> 
> I could put my code in the IRCClient's "connectionMade" method.    Or I
> could put it in the factory's "startedConnecting" method.  The code would
> be simple, issue a "who" command, and take it's output and return it.  So,
> in my connectionMade method I would issue the command...  then call
> reactor.stop() which would exit from my reactor.run().
> 

  startedConnecting isn't the right place.  connectionMade is a little
closer, but since you need to log in (tell the IRC server your nickname,
etc) before you can issue commands like WHO, it isn't totally appropriate
either.  signedOn is the best place, since it is called by IRCClient once
the server acknowledges the login information.

> I think the factory's "startedConnecting" might get called first,  then
> somewhere down in this mess, the Client would call me back with the
> "connectionMade", and I could do it there. I just need to know the
> appropriate place to put my code.  None of these examples in the
> 'examples' directories make this clear.
> 
> My next task is to know how to extract the 'who' data back from my initial
> "who"

  Indeed.  This is not very easy to do with IRCClient, since the response
the server sends doesn't have a whole lot to associate it with the WHO
command you originally issued.  You need to keep track of outstanding
commands and try to match them up with server replies.

  I recognized this deficiency some time ago and did some initial work
towards improving the API.  WHO is one of the commands I did manage to
improve, but I never moved any of the work out of my sandbox.  You can find
it in Twisted/sandbox/exarkun/irc2.py.  It is under the same license as the
rest of Twisted, even though it currently lacks any indication fo that.  If
it would be helpful to you, please feel free to use it.

  The improvements take one general form: commands which will produce server
responses are exposed as functions which return a Deferred.  When the server
replies, the parsed information will be passed to that Deferred's callback.

  Here is a simple example of how you might use it (untested):

    class WhoingIRCClient(irc2.AdvancedClient):
        def signedOn(self):
            # Find everyone IRC'ing from Twisted Matrix's server.
            self.who('*twistedmatrix.com'
                ).addCallbacks(self._cbWho, self._ebWho
                ).addBoth(self._shutdownEverything
                )

        def _cbWho(self, results):
            print 'channel user host server nick flags hops realname'
            for r in results:
                print ', '.join(r)

        def _ebWho(self, failure)
            print 'Error in who!'
            log.err(failure)


        def _shutdownEverything(self, ignored):
            reactor.stop()

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040101/279f3426/attachment.sig>

From a.vredegoor at hccnet.nl  Tue Dec 30 07:52:17 2003
From: a.vredegoor at hccnet.nl (Anton Vredegoor)
Date: Tue, 30 Dec 2003 15:52:17 +0100
Subject: [Twisted-Python] Re: XML Parsing Error in tutorial.xhtml
References: <bskjqb$bba$1@sea.gmane.org> <20031230022616.GA1043@frobozz>
Message-ID: <bss3jb$fpd$1@sea.gmane.org>

Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

>According to CVS, the version in 1.1.1 shouldn't have this bug (but 1.1.0
>would).  Is it possible you have an older version of the docs installed?

Yes. I installed 1.1.1 on three machines. One Windows 2000 machine had
a flawless install. Two Windows 98SE machines did not unpack the
documentation. Since one of the latter did have an older version of
the docs installed, there was an error as I described. The other
Windows 98SE machine just couldn't find the file at all, since the
docs weren't unpacked. Unpacking the docs "by hand" solved both
problems.

By the way, the tutorial uses a finger server as its example but the
Windows 98SE machines don't have a finger client, not even if using
Cygwin. I knew about learning curves, but nobody informed me about the
rocks along the slope :-)

Anton




From crunch at shopip.com  Wed Dec 31 02:29:59 2003
From: crunch at shopip.com (John Draper)
Date: Wed, 31 Dec 2003 01:29:59 -0800
Subject: [Twisted-Python] A Twisted Web Question....
In-Reply-To: <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
References: <200312290100.49502.lstep@adequat.net> <F487D580-3999-11D8-8F12-0030656C6B9E@webcrunchers.com> <0700785A-39B9-11D8-9472-000393C9700E@twistedmatrix.com>
Message-ID: <E7856519-3B73-11D8-ADCB-0030656C6B9E@shopip.com>

Hi,

I call your attention to:

This was quoted in the Docs on the TwistedMatrix web site.

Persistent Data in the Factory

Since the Protocol instance is recreated each time the connection is 
made, the client needs some way to keep track of data that should be 
persisted. In the case of ircLogBot.py: (LogBot.log() just logs the 
data to the file object stored in LogBot.file)

it references a LogBot.log() call....   but I checked in ircLogBot.py 
and there is NO log()
method,  nor is there one in any of the other classes it inherits from.

Would it be too much of a bother if I were to ask anyone about this 
descrepancy?

John
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1173 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20031231/bd821e27/attachment-0002.bin>

