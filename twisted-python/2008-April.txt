From drew.smathers at gmail.com  Tue Apr  1 00:18:57 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 1 Apr 2008 00:18:57 -0400
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
Message-ID: <368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:17 PM,  <glyph at divmod.com> wrote:
>
>  On 31 Mar, 10:45 pm, nathan.stocks at gmail.com wrote:
>  >Is there a way to do the opposite of task.coiterate?  I'm using pyglet
>  >for my UI, which was working great until I upgraded from pyglet 1.0 to
>  >1.1.  Now for some reason, the pyglet performance tanked.
>
>  Twisted's job is to run the main loop; it's best just to let it do that.
>  If Pyglet slowed down, it would be best to examine what's gone wrong
>  with Pyglet and simply submit a fix for that.
>

Yeah, I've experienced some performance issues with pyglet's
app.runtime (maybe Linux-specific or something).  Given the time, I'll
submit a meaningful bug report concerning this.  Regarding integration
with Twisted, though, I think the best thing to do (for now) is to
just ignore pyglet.app.runtime and write a pump function, roughly:

def pump():
    dt = clock.tick(True) # polling tick
    w.clear()
    w.dispatch_events()
    ...
    w.flip()
    if w.has_exit and reactor.running:
        reactor.stop()

Be sure to call clock.tick(True) - since clock.tick will otherwise
block.  The next thing to do is customize clock where appropriate -
that is, to used Twisted's scheduling functions.  Coincidentally, I
did this about 45 minutes ago for a project I'm working on:

http://hg.enterthefoo.com/roboto/file/db931f29b98e/roboto/clock.py

Beware - the above is half-baked and written under the influence of
Hobgoblin Dark English Ale.

Finally, you need schedule the pump function.  To do it as fast as possible:

    from twisted.internet import task
    gameLoop = task.LoopingCall(pump)
    gameLoop.start(0., True)
    reactor.run()

Or with a set framerate:
   ...
   gameLoop.start(1/60., True)

Cheers,

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From james at mansionfamily.plus.com  Tue Apr  1 01:37:42 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Tue, 01 Apr 2008 06:37:42 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
Message-ID: <47F1CA26.3010207@mansionfamily.plus.com>

glyph at divmod.com wrote:
> Patches which rectify this situation for any reactor, either from the 
> perspective of docs or code, would of course be appreciated.
There's no point giving a commitment to doing more than discussing 
implementation approaches. With the
best will in the world its unlikely to get to the top of my pile and 
there's no point living a fantasy.

I do need to understand how limited the current implementation is though.

> And, if you're going to file a ticket, be prepared to actually follow 
> up with an implementation.
Hmm - that's a crap attitude unless you want to deter any concensus 
formation during design.
I know its quite common in open source. :-(
>   While we want to maintain support for Windows, the level of energy 
> for doing really interesting Windows-specific stuff in Twisted is, in 
> a word, "low".
>
> One thing you might want to know before you file that ticket is that 
> *if* there's a reason for the way things are now, it's because in the 
> Twisted idiom we always make sure GUI stuff and network stuff is 
> happening in the same thread.  If one of the approaches that you 
> mentioned requires a dedicated "network" application thread, then 
> that's probably why we aren't doing it.
I appreciate that a reactive system will generally want to run its 
completion callbacks in the main
thread, but that shouldn't preclude restarting incomplete writes or 
doing low-level protocol
stuff in a thread.
>> On a similar sort of topic - is there a reason to have lots of 
>> implementations for POSIX, rather than use libevent or libev?
>
> There is more than one answer to this question.  Maybe someone will be 
> helpful and turn some of these answers into a FAQ on the wiki:
>
> 1) Twisted predates libevent by a few years and libev by many years. 
> One might instead ask why libevent didn't help us develop a C reactor, 
> rather than writing a whole new library.
I've no idea, but if you have a separation of a support library with an 
abstraction that one might
expose with SWIG or similar and reuse directly from C(++) - then this is 
well not actually apparent
on the web site. I think it would be a good idea though,and its more 
likely that I'd be able to
contribute something of this sort (eventually) than anything 
Python-specific.

You have a nice model and one that is much more portable than the common 
reactor idiom.

> 5) Despite many valid rationalizations for its existence, the code in 
> Twisted was developed organically over many years.  The stuff you'll 
> find here is the stuff that people thought was interesting and had 
> time to work on.  Strategically standardizing on a single low-level 
> multiplexing mechanism is not something that is particularly fun or 
> rewarding, especially when getting rid of the old code removes value 
> for some users.  (Not everyone already has libevent installed.)
The curse of volunteer-ware, I guess.  Understandable, but a shame in 
some ways.




From nmweizi at gmail.com  Tue Apr  1 01:45:12 2008
From: nmweizi at gmail.com (weizi)
Date: Tue, 1 Apr 2008 13:45:12 +0800
Subject: =?gb2312?B?tPC4tDogW1R3aXN0ZWQtUHl0aG9uXSBUd2lzdGVkIDguMC4xIGZvcg==?=
	=?gb2312?B?IFB5dGhvbiAyLjUgZm9yIFdpbmRvd3MgaXMJbWlzc2luZyBab3Bl?=
In-Reply-To: <fss8lj$uvs$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org>
Message-ID: <018601c893bb$9198b250$b4ca16f0$@com>

Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents



> -----????-----
> ???: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] ?? Sergey A.
> Lipnevich
> ????: 2008?4?1? 11:03
> ???: twisted-python at twistedmatrix.com
> ??: [Twisted-Python] Twisted 8.0.1 for Python 2.5 for Windows is missing
> Zope
> 
> Hi,
> 
> I'm sorry if I'm posting to the wrong list. I tried upgrading Twisted from
2.5.0
> to 8.0.1 on Windows with Python 2.5.2, but it doesn't work due to missing
> dependency: zope.interface (I'm trying to run Buildbot on it, if that
matters).
> Upon checking into this 2.5.0 installer for Windows had Zope modules
> included, but 8.0.1 doesn't. I also can't find relatively recent pre-built
> zope.interface for Windows, and don't have Visual Studio 2003 installed to
> build from source, to check if installing zope.interface would fix the
problem.
> Is it possible to include relevant Zope modules back into Windows
installer?
> Thank you!
> 
> Sergey.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From corydodt+twisted_spams at gmail.com  Tue Apr  1 02:18:13 2008
From: corydodt+twisted_spams at gmail.com (Cory Dodt)
Date: Mon, 31 Mar 2008 23:18:13 -0700
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F1CA26.3010207@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
Message-ID: <c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:37 PM, James Mansion
<james at mansionfamily.plus.com> wrote:
> > glyph at divmod.com wrote:
> > Patches which rectify this situation for any reactor, either from the
> > perspective of docs or code, would of course be appreciated.
> There's no point giving a commitment to doing more than discussing
> implementation approaches. With the
> best will in the world its unlikely to get to the top of my pile and
> there's no point living a fantasy.
>  [...]
> > And, if you're going to file a ticket, be prepared to actually follow
> > up with an implementation.
> Hmm - that's a crap attitude unless you want to deter any concensus
> formation during design.
> I know its quite common in open source. :-(

Twisted developers' time is as limited as yours is.  They're not
living in a fantasy either.

Resolving a bug includes gathering requirements and building
consensus, but building
consensus goes much faster if there's an implementation handy to
discuss.  Even a
quick hack is useful as a discussion point.  A very common scenario is
that a quick
hack is eventually refined into a unit tested, UQDS-vetted
implementation.  However,
a hand-waving discussion never is.

I certainly understand your frustrations (I've been there myself, many
times over, with
pretty much every piece of software I've ever developed with).  I
agree heartily with the
point that there is a bug if the software doesn't behave according to
documentation,
and there is even an argument to be made that the documentation should
note known
limitations--particularly when, as in this case, they are not secret
black knowledge but
common knowledge, and doubly when this non-secret non-black knowledge is a
stumbling block for so many newbies.

Still, things get fixed when someone fixes them.  It falls on the
person who needs them
fixed to do so, no matter whether you're talking about software or rain gutters.



From glyph at divmod.com  Tue Apr  1 02:29:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 06:29:11 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F1CA26.3010207@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
Message-ID: <20080401062911.21558.470848820.divmod.xquotient.9535@joule.divmod.com>

On 05:37 am, james at mansionfamily.plus.com wrote:
>glyph at divmod.com wrote:

>There's no point giving a commitment to doing more than discussing 
>implementation approaches. With the
>best will in the world its unlikely to get to the top of my pile and 
>there's no point living a fantasy.

I know the feeling.
>I do need to understand how limited the current implementation is 
>though.

It seems you've figured out the limitations at this point.
>The curse of volunteer-ware, I guess.  Understandable, but a shame in 
>some ways.

A few months ago, I would have just said "Oh well", but now, you can do 
something about it!  If you don't have the spare time to contribute an 
implementation, the Twisted project can now accept tax-deductible 
donations by way of the Software Freedom Conservancy: you'll notice a 
Google Checkout link on the front page of twistedmatrix.com.  We plan to 
have most of this money go directly to funding development, so not 
everything will necessarily be volunteer effort after that.



From mailing_lists at evotex.ch  Tue Apr  1 02:36:05 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 08:36:05 +0200
Subject: [Twisted-Python] Event dispatcher
Message-ID: <47F1D7D5.3090009@evotex.ch>

Hello,

I was searching for an event dispatching mechanism in twisted and I cam 
upon this :

http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py

but apparently it's being depreciated. There is no mention of what 
replaces it though, does someone know? Is there no replacement? If so, 
that must mean that there is a better way of doing things, can someone 
please tell me how?

Thank you,
Gabriel



From sipickles at hotmail.com  Tue Apr  1 02:45:24 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 01 Apr 2008 07:45:24 +0100
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
In-Reply-To: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>
References: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>
Message-ID: <BAY114-DAV1103403AA0062FDCEF399CBEF50@phx.gbl>



Jean-Paul Calderone wrote:
> On Mon, 31 Mar 2008 19:59:46 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I expected reactor.connectTCP to return a deferred. That would have 
>> been nice, since callbacks would have handled the outcome.
>>
>> So how to I handle failure with it?
>
> ClientFactory.clientConnectionFailed will be called if the connection
> attempt fails for some reason.
>
> Jean-Paul
Doh! :)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

-- 
Linux Counter: User# 424693 






From tdickenson at geminidataloggers.com  Tue Apr  1 03:08:31 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Tue, 01 Apr 2008 08:08:31 +0100
Subject: [Twisted-Python] Re: win 32 reactor
References: <47F11119.3040501@evotex.ch>
	<20080331165542.6859.849658278.divmod.quotient.24782@ohm>
Message-ID: <fssn1g$492$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> Gabriel Rossetti wrote:
>>Is there a way to use
>>the supplied win32 reactors (there are three I think) or do I have to
>>write one myself? Could someone please point me in the right direction?
> 
> The three reactors you're probably referring to are selectreactor,
> win32er, and IOCP reactor.

The problem on Windows is that there can only be one event loop running at
one time, but every library wants supply its own. This seem to be true for
the code Gabriel posted, and is certainly true of the reactors JP
mentioned, plus anything as ordinary as COM, the win32 MessageBox function,
or resizing a window!

This leads to a problem where your application will receive no twisted
events while your window is being resized, or a message box is visible.

IMO the best way to integrate twisted on win32 involves one of the threaded
reactors. This runs the select loop (or WFMO loop) in a separate thread,
then uses PostMessage to wake up your main thread for it to handle the
network events inside a message handler. For your application code this all
still looks like a single threaded model.

I hope this helps,




From mailing_lists at evotex.ch  Tue Apr  1 03:10:31 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:10:31 +0200
Subject: [Twisted-Python] no more zope.interface in the current windows
	release of twisted?
Message-ID: <47F1DFE7.1030209@evotex.ch>

Hello,

I wanted to test my app in windows, but twisted can't find 
zope.interface. I searched, and it isn't installed, is this an error or 
is it wanted? Can I just download the needed zope stuff without having 
to get all of zope?

Thanks,
Gabriel



From mailing_lists at evotex.ch  Tue Apr  1 03:12:34 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:12:34 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1D7D5.3090009@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>
Message-ID: <47F1E062.3020302@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I was searching for an event dispatching mechanism in twisted and I 
> cam upon this :
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>
> but apparently it's being depreciated. There is no mention of what 
> replaces it though, does someone know? Is there no replacement? If so, 
> that must mean that there is a better way of doing things, can someone 
> please tell me how?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Oh, I just saw that we should create our own event dispatcher mechanism. 
Why was it removed? Isn't it better that we all share one than recreate 
on every time?

Gabriel



From mailing_lists at evotex.ch  Tue Apr  1 03:22:49 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:22:49 +0200
Subject: [Twisted-Python] no more zope.interface in the current windows
	release of twisted?
In-Reply-To: <47F1DFE7.1030209@evotex.ch>
References: <47F1DFE7.1030209@evotex.ch>
Message-ID: <47F1E2C9.6000509@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I wanted to test my app in windows, but twisted can't find 
> zope.interface. I searched, and it isn't installed, is this an error 
> or is it wanted? Can I just download the needed zope stuff without 
> having to get all of zope?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Ok, I just got an earlier post concerning this, sorry (and thanks for 
the answer weizi)



From andrew-twisted at puzzling.org  Tue Apr  1 03:40:05 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Apr 2008 18:40:05 +1100
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1E062.3020302@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
Message-ID: <20080401074005.GN6245@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> Oh, I just saw that we should create our own event dispatcher mechanism. 
> Why was it removed? Isn't it better that we all share one than recreate on 
> every time?

The short answer is that we're sharing one already, and it's called "Python" ;)

-Andrew.




From mailing_lists at evotex.ch  Tue Apr  1 03:54:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:54:12 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <20080401074005.GN6245@steerpike.home.puzzling.org>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
	<20080401074005.GN6245@steerpike.home.puzzling.org>
Message-ID: <47F1EA24.4020200@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
> [...]
>   
>> Oh, I just saw that we should create our own event dispatcher mechanism. 
>> Why was it removed? Isn't it better that we all share one than recreate on 
>> every time?
>>     
>
> The short answer is that we're sharing one already, and it's called "Python" ;)
>
> -Andrew.
>
>
>
>   
fair enough :-)

Gabriel




From twisted at ralphm.ik.nu  Tue Apr  1 03:55:12 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 01 Apr 2008 09:55:12 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1E062.3020302@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>  <47F1E062.3020302@evotex.ch>
Message-ID: <1207036512.6825.1.camel@localhost>


On Tue, 2008-04-01 at 09:12 +0200, Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
> > Hello,
> >
> > I was searching for an event dispatching mechanism in twisted and I 
> > cam upon this :
> >
> > http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
> >
> > but apparently it's being depreciated. There is no mention of what 
> > replaces it though, does someone know? Is there no replacement? If so, 
> > that must mean that there is a better way of doing things, can someone 
> > please tell me how?

There is also an event dispatcher in twisted.words.xish.utility that
might be useful.

-- 
Groetjes,

ralphm




From glyph at divmod.com  Tue Apr  1 05:20:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 09:20:15 -0000
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1D7D5.3090009@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>
Message-ID: <20080401092015.21558.1926506092.divmod.xquotient.9547@joule.divmod.com>

On 06:36 am, mailing_lists at evotex.ch wrote:
>Hello,
>
>I was searching for an event dispatching mechanism in twisted and I cam 
>upon this :
>
>http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>
>but apparently it's being depreciated. There is no mention of what 
>replaces it though, does someone know? Is there no replacement? If so, 
>that must mean that there is a better way of doing things, can someone 
>please tell me how?

While various other ad-hoc event dispatchers exist throughout Twisted, 
the suggested replacement for t.p.dispatch is just writing your own 
function that calls functions.  Personally, I've found that attempting 
to write a totally generic event dispatch system inevitably results in 
extremely complex code whose purpose is unclear.

The one in xish which Ralph mentioned, for example, deals in part with 
XPath events; this is not a requirement that almost anything except the 
code for which it was written (twisted.words.protocols.jabber) will 
have.

That said, there are other packages which provide very, very flexible 
dispatch mechanisms, if you like that sort of thing.  One that I have 
heard a bunch of good things about is http://pylouie.org/ - again, I 
wouldn't recommend this personally, I'd look at your application and see 
what kind of events need dispatching and why, and write something geared 
towards that.  After all, the core of an "event dispatcher" is simply a 
dictionary lookup and a for loop, not something that's particularly 
onerous to repeat every so often.



From pbastov at gmail.com  Tue Apr  1 05:56:14 2008
From: pbastov at gmail.com (Pavel)
Date: Tue, 1 Apr 2008 15:56:14 +0600
Subject: [Twisted-Python] What is backlog?
Message-ID: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>

What is backlog parameter in twisted.application.internet.TCPServer constructor?

-- 
Good luck,

Pavel Bastov



From andreas at kostyrka.org  Tue Apr  1 06:05:43 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 12:05:43 +0200
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
Message-ID: <1207044343.8299.67.camel@localhost>

Just guessing it's the parameter that gets passed to the listen system
call. And that again tells the kernel how many connections to allow to
backlog.

Citing the listen manpage on Linux:

       The  backlog  argument  defines  the  maximum length to which the
queue of pending connections for sockd may grow.  If a connection
request arrives when the queue is full, the client may receive an
       error with an indication of ECONNREFUSED or, if the underlying
protocol supports retransmission, the request may be ignored so that a
later reattempt at connection succeeds.

Andreas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/5a18628b/attachment.pgp 

From pbastov at gmail.com  Tue Apr  1 06:22:08 2008
From: pbastov at gmail.com (Pavel)
Date: Tue, 1 Apr 2008 16:22:08 +0600
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <1207044343.8299.67.camel@localhost>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
Message-ID: <eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>

Thanks for the info.

Do you have any ideas on what value to use under small, medium, and high load?

On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> Just guessing it's the parameter that gets passed to the listen system
>  call. And that again tells the kernel how many connections to allow to
>  backlog.
>
>  Citing the listen manpage on Linux:
>
>        The  backlog  argument  defines  the  maximum length to which the
>  queue of pending connections for sockd may grow.  If a connection
>  request arrives when the queue is full, the client may receive an
>        error with an indication of ECONNREFUSED or, if the underlying
>  protocol supports retransmission, the request may be ignored so that a
>  later reattempt at connection succeeds.
>
>  Andreas
>
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From sipickles at hotmail.com  Tue Apr  1 06:31:54 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 01 Apr 2008 11:31:54 +0100
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <1207036512.6825.1.camel@localhost>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
	<1207036512.6825.1.camel@localhost>
Message-ID: <BAY114-DAV54064FC33B3C9B2954928BEF50@phx.gbl>



Ralph Meijer wrote:
> On Tue, 2008-04-01 at 09:12 +0200, Gabriel Rossetti wrote:
>   
>> Gabriel Rossetti wrote:
>>     
>>> Hello,
>>>
>>> I was searching for an event dispatching mechanism in twisted and I 
>>> cam upon this :
>>>
>>> http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>>>
>>> but apparently it's being depreciated. There is no mention of what 
>>> replaces it though, does someone know? Is there no replacement? If so, 
>>> that must mean that there is a better way of doing things, can someone 
>>> please tell me how?
>>>       
>
> There is also an event dispatcher in twisted.words.xish.utility that
> might be useful.
>
>   

I'm using twisted.words.xish.utility.EventDispatcher. Really easy, once 
I got the syntax right (to ignore all the xpath stuff):

ed = EventDispatcher()
ed.addObserver("//event/objectEvent", callbackFunc)

ed.dispatch("event message", "//event/objectEvent")

ed.removeObserver("//event/objectEvent", callbackFunc)


Si

-- 
Linux Counter: User# 424693 






From lists at collab.nl  Tue Apr  1 07:42:03 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Tue, 1 Apr 2008 13:42:03 +0200
Subject: =?GB2312?Q?Re:_=B4=F0=B8=B4:_[Twisted-Python]_Twisted_8.0.1_for_?=
	=?GB2312?Q?Python_2.5_for_Windows_is=09missing_Zope?=
In-Reply-To: <018601c893bb$9198b250$b4ca16f0$@com>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
Message-ID: <B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>

Shouldn't this be installed automatically now that Twisted is  
easy_installable?

Thijs

On Apr 1, 2008, at 7:45 AM, weizi wrote:

> Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents
>
>
>
>> -----????-----
>> ???: twisted-python-bounces at twistedmatrix.com
>> [mailto:twisted-python-bounces at twistedmatrix.com] ?? Sergey A.
>> Lipnevich
>> ????: 2008?4?1? 11:03
>> ???: twisted-python at twistedmatrix.com
>> ??: [Twisted-Python] Twisted 8.0.1  
>> for Python 2.5 for Windows is missing
>> Zope
>>
>> Hi,
>>
>> I'm sorry if I'm posting to the wrong list. I tried upgrading  
>> Twisted from
> 2.5.0
>> to 8.0.1 on Windows with Python 2.5.2, but it doesn't work due to  
>> missing
>> dependency: zope.interface (I'm trying to run Buildbot on it, if that
> matters).
>> Upon checking into this 2.5.0 installer for Windows had Zope modules
>> included, but 8.0.1 doesn't. I also can't find relatively recent  
>> pre-built
>> zope.interface for Windows, and don't have Visual Studio 2003  
>> installed to
>> build from source, to check if installing zope.interface would fix  
>> the
> problem.
>> Is it possible to include relevant Zope modules back into Windows
> installer?
>> Thank you!
>>
>> Sergey.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/ad58f978/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/ad58f978/attachment.pgp 

From christopher.zorn at gmail.com  Tue Apr  1 09:09:56 2008
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Tue, 1 Apr 2008 09:09:56 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
Message-ID: <149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>

On Mon, Mar 31, 2008 at 12:32 PM, Nathan <nathan.stocks at gmail.com> wrote:

> Is there any noticeable difference between psycopg (version 2) or
> pygresql (version 3.8.1) when used with twisted.enterprise to connect
> to postgresql?
>

I have found psycopg 2 to be faster. I do not have the data anymore but I
use it in production and works great.


>
> Pygresql hasn't been updated since June 2006, but maybe that's just
> because it's stable (?) -- I haven't used it at all, ever.
>
> Psycopg2 has had more recent releases, but I've experience some bugs
> with it in (non-twisted) threaded code and the web site has been down
> for weeks (months?), so I thought it wise to explore alternatives...


What bugs are you experiencing? What version are you using? We use
psycopg2-2.0.6svn in production and has been fine.


>
>
> Or is there a better third alternative???
>
> Also, we're considering turning on SSL client-certificate verification
> on our postgresql installation -- does anyone know whether either of
> the above support SSL client certificates?
>

I do not know if psycopg supports this.


>
> Opinions?
>


If you run psycopg you may want to use the patch in ticket #2488 it helps
performance.

http://twistedmatrix.com/trac/ticket/2488


> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/846f28a2/attachment.htm 

From andreas at kostyrka.org  Tue Apr  1 09:11:11 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 15:11:11 +0200
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
	<eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
Message-ID: <1207055471.8299.73.camel@localhost>

Benchmark/Test/Google? Sorry, no idea ;)

Andreas

Am Dienstag, den 01.04.2008, 16:22 +0600 schrieb Pavel:
> Thanks for the info.
> 
> Do you have any ideas on what value to use under small, medium, and high load?
> 
> On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> > Just guessing it's the parameter that gets passed to the listen system
> >  call. And that again tells the kernel how many connections to allow to
> >  backlog.
> >
> >  Citing the listen manpage on Linux:
> >
> >        The  backlog  argument  defines  the  maximum length to which the
> >  queue of pending connections for sockd may grow.  If a connection
> >  request arrives when the queue is full, the client may receive an
> >        error with an indication of ECONNREFUSED or, if the underlying
> >  protocol supports retransmission, the request may be ignored so that a
> >  later reattempt at connection succeeds.
> >
> >  Andreas
> >
> >
> > _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> 
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/fb440edd/attachment.pgp 

From andreas at kostyrka.org  Tue Apr  1 15:02:18 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 21:02:18 +0200
Subject: [Twisted-Python] Re: [Stackless] That darn GIL rant again...
In-Reply-To: <47F239C7.7030103@vintech.bg>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<9BD690EC-A169-4B8D-8C12-9B65E7D7A005@maya.com>
	<47F239C7.7030103@vintech.bg>
Message-ID: <1207076538.8299.81.camel@localhost>


Am Dienstag, den 01.04.2008, 16:33 +0300 schrieb niki:

> I disagree with point 2. "Explicit is better than implicit".
> Programmer must know where thread/process boundaries are and convey this 
> to the system. This knowledge very important in order to make all kind 
> of algorithmic decisions.

While explicit is usually better then implicit, in the area of threading
Python follows the fully implicit path. The GIL is nothing else but a
completely magic way to make Python threadsafe. Furthermore, any
solution around this must take this automatic safety into account.

Andreas

> 
> Niki Spahiev
> 
> 
> _______________________________________________
> Stackless mailing list
> Stackless at stackless.com
> http://www.stackless.com/mailman/listinfo/stackless
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/bd9c8a65/attachment.pgp 

From eburus at gmail.com  Tue Apr  1 15:55:06 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 01 Apr 2008 23:55:06 +0400
Subject: [Twisted-Python] Is psycopg or pygresql better
	with	twisted.enterprise?
In-Reply-To: <149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
Message-ID: <47F2931A.5020809@gmail.com>

We using psycopg1 for the data synchronization between MySQL\PostgreSQL,
MSSQL\PostgreSQL and etc...

psycopg2 is "faster" but very buggy in the 256/24/7 systems. We use
older version and it better choose for us,
stability is in the priority.

Christopher Zorn wrote:
> On Mon, Mar 31, 2008 at 12:32 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
>   
>> Is there any noticeable difference between psycopg (version 2) or
>> pygresql (version 3.8.1) when used with twisted.enterprise to connect
>> to postgresql?
>>
>>     
>
> I have found psycopg 2 to be faster. I do not have the data anymore but I
> use it in production and works great.
>
>
>   
>> Pygresql hasn't been updated since June 2006, but maybe that's just
>> because it's stable (?) -- I haven't used it at all, ever.
>>
>> Psycopg2 has had more recent releases, but I've experience some bugs
>> with it in (non-twisted) threaded code and the web site has been down
>> for weeks (months?), so I thought it wise to explore alternatives...
>>     
>
>
> What bugs are you experiencing? What version are you using? We use
> psycopg2-2.0.6svn in production and has been fine.
>
>
>   
>> Or is there a better third alternative???
>>
>> Also, we're considering turning on SSL client-certificate verification
>> on our postgresql installation -- does anyone know whether either of
>> the above support SSL client certificates?
>>
>>     
>
> I do not know if psycopg supports this.
>
>
>   
>> Opinions?
>>
>>     
>
>
> If you run psycopg you may want to use the patch in ticket #2488 it helps
> performance.
>
> http://twistedmatrix.com/trac/ticket/2488
>
>
>   
>> ~ Nathan
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080401/d57b2d1c/attachment.htm 

From nathan.stocks at gmail.com  Tue Apr  1 18:00:39 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 16:00:39 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>
Message-ID: <96c9d6a80804011500i3893bf51t7d7b610f9071487c@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  Yeah, I've experienced some performance issues with pyglet's
>  app.runtime (maybe Linux-specific or something).  Given the time, I'll
>  submit a meaningful bug report concerning this.  Regarding integration
>  with Twisted, though, I think the best thing to do (for now) is to
>  just ignore pyglet.app.runtime and write a pump function, roughly:
>
>  def pump():
>     dt = clock.tick(True) # polling tick
>     w.clear()
>     w.dispatch_events()
>     ...
>     w.flip()
>     if w.has_exit and reactor.running:
>         reactor.stop()
>
>  Be sure to call clock.tick(True) - since clock.tick will otherwise
>  block.  The next thing to do is customize clock where appropriate -
>  that is, to used Twisted's scheduling functions.  Coincidentally, I
>  did this about 45 minutes ago for a project I'm working on:
>
>  http://hg.enterthefoo.com/roboto/file/db931f29b98e/roboto/clock.py
>
>  Beware - the above is half-baked and written under the influence of
>  Hobgoblin Dark English Ale.
>
>  Finally, you need schedule the pump function.  To do it as fast as possible:
>
>     from twisted.internet import task
>     gameLoop = task.LoopingCall(pump)
>     gameLoop.start(0., True)
>     reactor.run()
>
>  Or with a set framerate:
>    ...
>    gameLoop.start(1/60., True)

Thanks for the great advice.  I implemented it all and it runs, but
unfortunately there was no noticeable change (for better or worse) to
pyglet's performance.  I'm currently working on setting up a
stripped-down twisted+pyglet example that reproduces the problem.
I'll post it when I get it up and running.

~ Nathan



From nathan.stocks at gmail.com  Tue Apr  1 18:08:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 16:08:35 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
Message-ID: <96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>

On Mon, Mar 31, 2008 at 8:17 PM,  <glyph at divmod.com> wrote:
>  Twisted's job is to run the main loop; it's best just to let it do that.
>  If Pyglet slowed down, it would be best to examine what's gone wrong
>  with Pyglet and simply submit a fix for that.

Understood.  Thanks for the guidance.  I'm working on example code
that reproduces the problem.

>  We spoke to Richard Jones about Pyglet/Twisted integration at Chris
>  Armstrong's excellent gaming+twisted openspace at PyCon, and I believe
>  that some future version of Pyglet will include Twisted integration.  Of
>  course, this is just a plan right now, not code, so perhaps your time
>  would be better spent contributing this feature to Pyglet, rather than
>  turning Twisted inside-out :).

I'm jealous.  I would have loved to go to PyCon.  I'm glad the
communication lines are open.

~ Nathan



From nathan.stocks at gmail.com  Tue Apr  1 19:19:42 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 17:19:42 -0600
Subject: [Twisted-Python] Example code for problem with twisted+pyglet
Message-ID: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>

(I'm cross-posting this to the twisted and pyglet mailing lists, as
I've been actively discussing this with people on both lists)
----------------------------------

Problem:  When I add AMP with SSL with SSL-client certificates to
Pyglet 1.1 (svn trunk, actually) on OS X 10.5.2, pyglet goes from
drawing at a smooth 60fps (which is the limit I set) to an extremely
choppy low fps.  The problem started when I upgraded from Pyglet from
1.0 to 1.1.

Hardware:

MacBook Pro, Intel Core 2 Duo, 2.2Ghz, 2GB RAM, GeForce 8600M GT w/128MB VRAM

Software:

OS X 10.5.2 with Graphics Update
Apple-installed python 2.5.
Twisted 8.0.1 (installed package from
http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1_py2.5_osx10.5.pkg
-- export PYTHONPATH=/Library/Python/2.5/site-packages )
pyglet trunk (revision 1990, http://pyglet.googlecode.com/svn/trunk -
installed with 'sudo python setup.py install' )

To duplicate:

1) Download http://stocksfam.com/example.tar.bz2 and untar it with
"tar jxvf example.tar.bz2" which creates an example directory.
2) Open two terminals and change to the example directory.
3) Run "./server.py" in one terminal.  This sets up an AMP+SSL server.
4) Run "./client.py" in the other terminal.  The Pyglet+AMP+SSL client
will launch, and a Pyglet 1200x800 window will pop up with a gray log
window.
5) Click and drag the gray log window around.  Notice how extremely
choppy it is.  I don't know how to debug it!  Under Pyglet 1.0, there
was no choppiness -- it stayed a smooth 60.0fps.

What can be done to debug this?  If I knew where to start, I'd try to
find the problem myself, but I'm not very familiar with the internals
of twisted or pyglet, and I'm also not very familiar with debugging
python code beyond using print statements and common sense...

~ Nathan



From sergey at optimaltec.com  Tue Apr  1 22:46:03 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Tue, 01 Apr 2008 22:46:03 -0400
Subject: =?GB2312?B?tPC4tDogW1R3aXN0ZWQtUHl0aG9uXSBUd2lzdGVkIDguMC4xIA==?=
	=?GB2312?B?Zm9yIFB5dGhvbiAyLjUgZm9yIFdpbmRvd3MgaXMgbWlzc2luZyBab3Bl?=
In-Reply-To: <018601c893bb$9198b250$b4ca16f0$@com>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
Message-ID: <fsus19$ll2$1@ger.gmane.org>

weizi wrote:
> Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents

Thank you! I couldn't find that via search. Is there going to be 3.4.1
there too :-)?

Sergey.




From sergey at optimaltec.com  Tue Apr  1 22:48:07 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Tue, 01 Apr 2008 22:48:07 -0400
Subject: [Twisted-Python] Re:
 ??:  Twisted 8.0.1 for Python 2.5 for Windows is missing Zope
In-Reply-To: <B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
Message-ID: <fsus55$ll2$2@ger.gmane.org>

Thijs Triemstra | Collab wrote:
> Shouldn't this be installed automatically now that Twisted is
> easy_installable? 

Most likely, but zope.interface on Windows would require Visual Studio
2003. I tried easy_install but couldn't complete it.
Thank you,

Sergey.




From pbastov at gmail.com  Tue Apr  1 23:48:38 2008
From: pbastov at gmail.com (Pavel)
Date: Wed, 2 Apr 2008 09:48:38 +0600
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <1207055471.8299.73.camel@localhost>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
	<eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
	<1207055471.8299.73.camel@localhost>
Message-ID: <eaf39e680804012048o53c2c860v148f2a31313a2e1f@mail.gmail.com>

Thanks anyway :)

On Tue, Apr 1, 2008 at 7:11 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> Benchmark/Test/Google? Sorry, no idea ;)
>
>  Andreas
>
>  Am Dienstag, den 01.04.2008, 16:22 +0600 schrieb Pavel:
>
>
> > Thanks for the info.
>  >
>  > Do you have any ideas on what value to use under small, medium, and high load?
>  >
>  > On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
>  > > Just guessing it's the parameter that gets passed to the listen system
>  > >  call. And that again tells the kernel how many connections to allow to
>  > >  backlog.
>  > >
>  > >  Citing the listen manpage on Linux:
>  > >
>  > >        The  backlog  argument  defines  the  maximum length to which the
>  > >  queue of pending connections for sockd may grow.  If a connection
>  > >  request arrives when the queue is full, the client may receive an
>  > >        error with an indication of ECONNREFUSED or, if the underlying
>  > >  protocol supports retransmission, the request may be ignored so that a
>  > >  later reattempt at connection succeeds.
>  > >
>  > >  Andreas
>  > >
>  > >
>  > > _______________________________________________
>  > >  Twisted-Python mailing list
>  > >  Twisted-Python at twistedmatrix.com
>  > >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  > >
>  > >
>  >
>  >
>  >
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From zooko at zooko.com  Wed Apr  2 07:38:43 2008
From: zooko at zooko.com (zooko)
Date: Wed, 2 Apr 2008 05:38:43 -0600
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <fsus55$ll2$2@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
Message-ID: <93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>

> Most likely, but zope.interface on Windows would require Visual Studio
> 2003. I tried easy_install but couldn't complete it.

The error message that says "Python was built with Visual Studio  
version 7.1, and extensions need to be built with the same version of  
the compiler" isn't true.

Install gcc (I recommend cygwin, but mingw will also work), and put  
the following stanza into your distutils config file:

[build]
compiler=mingw32

(You put "compiler=mingw32" regardless of whether you've installed  
the cygwin version of gcc or the mingw version of gcc.)

After that, builds will just work.  In particular "easy_install  
zope.interface" works, and if you don't have zope.interface then when  
you "easy_install twisted" it will automatically install zope.interface.

By the way, building extensions with mingw32 can in theory cause  
crashes if the extensions pass C++ iostreams back and forth with the  
main interpreter.  I've never experienced such a thing myself and I'm  
not entirely sure that it is even possible, since I doubt that the  
main interpreter uses iostreams.  Nonetheless, this is apparently one  
of the reasons why the Python people don't standardize on gcc, as  
described in this message:

http://mail.python.org/pipermail/distutils-sig/2007-September/ 
008255.html

Regards,

Zooko




From sipickles at hotmail.com  Wed Apr  2 08:33:58 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 02 Apr 2008 13:33:58 +0100
Subject: [Twisted-Python] Lost connection on PbServerFactory
Message-ID: <BAY114-DAV7EE355697E38ACA1DC737BEF40@phx.gbl>

Hi,

I notice PbServerFactory has a clientConnectionMade method, but no 
clientConnectionLost.

What is the correct way for a pb server to know a connection is down?

Many thanks

Simon

-- 
Linux Counter: User# 424693 






From exarkun at divmod.com  Wed Apr  2 08:50:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Apr 2008 07:50:08 -0500
Subject: [Twisted-Python] Lost connection on PbServerFactory
In-Reply-To: <BAY114-DAV7EE355697E38ACA1DC737BEF40@phx.gbl>
Message-ID: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>

On Wed, 02 Apr 2008 13:33:58 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I notice PbServerFactory has a clientConnectionMade method, but no 
>clientConnectionLost.
>
>What is the correct way for a pb server to know a connection is down?
>
>Many thanks

Broker and RemoteReference both have a `notifyOnDisconnect? method which can
be used for this.

Jean-Paul



From sipickles at hotmail.com  Wed Apr  2 08:58:15 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 02 Apr 2008 13:58:15 +0100
Subject: [Twisted-Python] Lost connection on PbServerFactory
In-Reply-To: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>
References: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>
Message-ID: <BAY114-DAV18F075AFF7A4166421E8BBEF40@phx.gbl>



Jean-Paul Calderone wrote:
> On Wed, 02 Apr 2008 13:33:58 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I notice PbServerFactory has a clientConnectionMade method, but no 
>> clientConnectionLost.
>>
>> What is the correct way for a pb server to know a connection is down?
>>
>> Many thanks
>
> Broker and RemoteReference both have a `notifyOnDisconnect? method 
> which can
> be used for this.
>
> Jean-Paul
Aww, you beat me to the reply - I'd _actually_ worked it out for myself 
- a milestone in my twisted journey!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

-- 
Linux Counter: User# 424693 






From nathan.stocks at gmail.com  Wed Apr  2 12:26:54 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 10:26:54 -0600
Subject: [Twisted-Python] Fwd: Example code for problem with twisted+pyglet
In-Reply-To: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>
References: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>
Message-ID: <96c9d6a80804020926i33dde9c7w6b5e94979ba3f408@mail.gmail.com>

Oh, and despite the date on the original message, this is NOT an April
Fool's day joke.  Just thought I should clarify that!

I should also mention that a separate (personal) project of mine that
uses twisted/AMP+pyglet but NOT SSL does not display any performance
degradation.  Weird.

~ Nathan


---------- Forwarded message ----------
From: Nathan <nathan.stocks at gmail.com>
Date: Tue, Apr 1, 2008 at 5:19 PM
Subject: Example code for problem with twisted+pyglet
To: Twisted general discussion <twisted-python at twistedmatrix.com>,
pyglet-users at googlegroups.com


(I'm cross-posting this to the twisted and pyglet mailing lists, as
 I've been actively discussing this with people on both lists)
 ----------------------------------

 Problem:  When I add AMP with SSL with SSL-client certificates to
 Pyglet 1.1 (svn trunk, actually) on OS X 10.5.2, pyglet goes from
 drawing at a smooth 60fps (which is the limit I set) to an extremely
 choppy low fps.  The problem started when I upgraded from Pyglet from
 1.0 to 1.1.

 Hardware:

 MacBook Pro, Intel Core 2 Duo, 2.2Ghz, 2GB RAM, GeForce 8600M GT w/128MB VRAM

 Software:

 OS X 10.5.2 with Graphics Update
 Apple-installed python 2.5.
 Twisted 8.0.1 (installed package from
 http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1_py2.5_osx10.5.pkg
 -- export PYTHONPATH=/Library/Python/2.5/site-packages )
 pyglet trunk (revision 1990, http://pyglet.googlecode.com/svn/trunk -
 installed with 'sudo python setup.py install' )

 To duplicate:

 1) Download http://stocksfam.com/example.tar.bz2 and untar it with
 "tar jxvf example.tar.bz2" which creates an example directory.
 2) Open two terminals and change to the example directory.
 3) Run "./server.py" in one terminal.  This sets up an AMP+SSL server.
 4) Run "./client.py" in the other terminal.  The Pyglet+AMP+SSL client
 will launch, and a Pyglet 1200x800 window will pop up with a gray log
 window.
 5) Click and drag the gray log window around.  Notice how extremely
 choppy it is.  I don't know how to debug it!  Under Pyglet 1.0, there
 was no choppiness -- it stayed a smooth 60.0fps.

 What can be done to debug this?  If I knew where to start, I'd try to
 find the problem myself, but I'm not very familiar with the internals
 of twisted or pyglet, and I'm also not very familiar with debugging
 python code beyond using print statements and common sense...

 ~ Nathan



From dschein at fsinnovations.net  Wed Apr  2 13:58:17 2008
From: dschein at fsinnovations.net (David S.)
Date: Wed, 02 Apr 2008 13:58:17 -0400
Subject: [Twisted-Python] ldaptor with Twisted 8.0.1
Message-ID: <47F3C939.2050300@fsinnovations.net>

To get ldaptor running with Twisted 8.0.1, I edited 
ldaptor/interfaces.py and replaced references to 
twisted.python.components.Interface with zope.interface.Interface and 
everything seems fine.

Any gotchas I might be missing?  Anyone else using ldaptor with the 
latest Twisted release?

Thanks for any help.

Peace,
David S.



From jcd at sdf.lonestar.org  Wed Apr  2 14:49:28 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Wed, 02 Apr 2008 14:49:28 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better
	with	twisted.enterprise?
In-Reply-To: <47F2931A.5020809@gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
	<47F2931A.5020809@gmail.com>
Message-ID: <1207162168.7981.21.camel@aalcdl07.lib.unc.edu>

On Tue, 2008-04-01 at 23:55 +0400, Burus Gmail wrote:
> We using psycopg1 for the data synchronization between MySQL
> \PostgreSQL, MSSQL\PostgreSQL and etc...
> 
> psycopg2 is "faster" but very buggy in the 256/24/7 systems. 

You mean in systems that are down 109 days out of the year? :)






From nathan.stocks at gmail.com  Wed Apr  2 15:05:49 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 13:05:49 -0600
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
Message-ID: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>

On my AMP server I'm using twisted.enterprise to query a postgres
database and do inserts.  I'd like to return whether the insert
succeeded or failed as the response to the AMP responder function --
is there an established pattern for doing things like that?

So basically, with the amp command:

class MyInsert(amp.Command):
   arguments = [('an_int',amp.Integer())]
   response = [('succeeded',amp.Boolean())]

....on the client I do:

amp_client.callRemote(MyInsert, an_int)

...on the server:

@MyInsert.responder
def my_insert(self, an_int):
   qry_def = self.dbpool.runOperation("insert into mytable the_number
values (%d);" % an_int)
   qry_def.addCallback(self._my_insert_ok)
   qry_def.addErrback(self._my_insert_err)
# Here's the AMP response...but I don't KNOW whether it succeeded yet!
# ...but I've _got_ to return a response dict  from this function or
AMP gives an error!
   return {'succeeded':True}

def _my_insert_ok(self, none_object):
   print "It succeeded"

def _my_insert_err(self, failure_object):
   print "It failed with: %s" % failure_object.getErrorMessage()

~ Nathan



From exarkun at divmod.com  Wed Apr  2 15:10:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Apr 2008 14:10:05 -0500
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
In-Reply-To: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>
Message-ID: <20080402191005.6859.551757623.divmod.quotient.25237@ohm>

On Wed, 2 Apr 2008 13:05:49 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>On my AMP server I'm using twisted.enterprise to query a postgres
>database and do inserts.  I'd like to return whether the insert
>succeeded or failed as the response to the AMP responder function --
>is there an established pattern for doing things like that?

If a responder returns a Deferred, then the result of the Deferred is
taken as the response to the request.

>
>So basically, with the amp command:
>
>class MyInsert(amp.Command):
>   arguments = [('an_int',amp.Integer())]
>   response = [('succeeded',amp.Boolean())]
>
>....on the client I do:
>
>amp_client.callRemote(MyInsert, an_int)
>
>...on the server:
>
>@MyInsert.responder
>def my_insert(self, an_int):
>   qry_def = self.dbpool.runOperation("insert into mytable the_number
>values (%d);" % an_int)
>   qry_def.addCallback(self._my_insert_ok)
>   qry_def.addErrback(self._my_insert_err)
># Here's the AMP response...but I don't KNOW whether it succeeded yet!
># ...but I've _got_ to return a response dict  from this function or
>AMP gives an error!
>   return {'succeeded':True}

Don't return that dict here.  Return qry_def, instead.  Make your callbacks
return dicts or raise exceptions to indicate the result.

Jean-Paul



From nathan.stocks at gmail.com  Wed Apr  2 15:24:45 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 13:24:45 -0600
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
In-Reply-To: <20080402191005.6859.551757623.divmod.quotient.25237@ohm>
References: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>
	<20080402191005.6859.551757623.divmod.quotient.25237@ohm>
Message-ID: <96c9d6a80804021224p4ebe3a35w4191d62b8c490383@mail.gmail.com>

On Wed, Apr 2, 2008 at 1:10 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 2 Apr 2008 13:05:49 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>
> > On my AMP server I'm using twisted.enterprise to query a postgres
> > database and do inserts.  I'd like to return whether the insert
> > succeeded or failed as the response to the AMP responder function --
> > is there an established pattern for doing things like that?
> >
>
>  If a responder returns a Deferred, then the result of the Deferred is
>  taken as the response to the request.

Aha!  Things are falling into place.  I've run into this problems
several times, and that's the piece that I had missed.  Thanks a
million!

/me needs to go read the docs on deferreds for a fourth time...

~ Nathan



From eburus at gmail.com  Wed Apr  2 15:40:14 2008
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 02 Apr 2008 23:40:14 +0400
Subject: [Twisted-Python] Is psycopg or pygresql
	better	with	twisted.enterprise?
In-Reply-To: <1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>	<47F2931A.5020809@gmail.com>
	<1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
Message-ID: <47F3E11E.4050801@gmail.com>

Yeap! It's from my favorite jokes. =)
With psycopg2 it's may be true.

J. Cliff Dyer wrote:
> On Tue, 2008-04-01 at 23:55 +0400, Burus Gmail wrote:
>   
>> We using psycopg1 for the data synchronization between MySQL
>> \PostgreSQL, MSSQL\PostgreSQL and etc...
>>
>> psycopg2 is "faster" but very buggy in the 256/24/7 systems. 
>>     
>
> You mean in systems that are down 109 days out of the year? :)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080402/eef780c4/attachment.htm 

From james at mansionfamily.plus.com  Wed Apr  2 18:24:32 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Wed, 02 Apr 2008 23:24:32 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
Message-ID: <47F407A0.6090209@mansionfamily.plus.com>

Cory Dodt wrote:
> Resolving a bug includes gathering requirements and building
> consensus, but building
> consensus goes much faster if there's an implementation handy to
> discuss.  Even a
> quick hack is useful as a discussion point.  A very common scenario is
> that a quick
> hack is eventually refined into a unit tested, UQDS-vetted
> implementation.  However,
> a hand-waving discussion never is.
>   
Call me old-fashioned, but what you are describing is the difference 
between design-free-hacking
followed by iteration, and actually designing something.  You know, all 
that waterfall stuff. I know,
its not fashionable right now.

Seriously, though, its too late at the review-of-nearly-working-code. 
There's too much
pressure to incrementally fix it, and at least one participant will have 
a sense of ownership
in something that might be a country mile from the best solution.

I know its easier to design when you can meet each other and use a white 
board or
just scribble on paper, but its still entirely possible to use words.

So - I disagree.  I'm quite happy to hand-wave, and to listen to my 
colleagues'
hand-waving. If it communicates design ideas - and requirements - before 
any wasteful
coding, that's good. Honest.

> Still, things get fixed when someone fixes them.  It falls on the
> person who needs them
> fixed to do so, no matter whether you're talking about software or rain gutters.
>   
Hmm.  You sure it doesn't happen after the prioritisation meeting and we 
all get our
steer?

James




From phil at bubblehouse.org  Wed Apr  2 19:15:37 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 02 Apr 2008 19:15:37 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F407A0.6090209@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
Message-ID: <7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>


On Apr 2, 2008, at 6:24 PM, James Mansion wrote:
> Cory Dodt wrote:
>> Resolving a bug includes gathering requirements and building
>> consensus, but building
>> consensus goes much faster if there's an implementation handy to
>> discuss.  Even a
>> quick hack is useful as a discussion point.  A very common  
>> scenario is
>> that a quick
>> hack is eventually refined into a unit tested, UQDS-vetted
>> implementation.  However,
>> a hand-waving discussion never is.
>>
> Call me old-fashioned, but what you are describing is the  
> difference between design-free-hacking
> followed by iteration, and actually designing something.  You know,  
> all that waterfall stuff. I know,
> its not fashionable right now.
>
> Seriously, though, its too late at the review-of-nearly-working- 
> code. There's too much
> pressure to incrementally fix it, and at least one participant will  
> have a sense of ownership
> in something that might be a country mile from the best solution.
>
> I know its easier to design when you can meet each other and use a  
> white board or
> just scribble on paper, but its still entirely possible to use words.
>
> So - I disagree.  I'm quite happy to hand-wave, and to listen to my  
> colleagues'
> hand-waving. If it communicates design ideas - and requirements -  
> before any wasteful
> coding, that's good. Honest.
>
>> Still, things get fixed when someone fixes them.  It falls on the
>> person who needs them
>> fixed to do so, no matter whether you're talking about software or  
>> rain gutters.
>>
> Hmm.  You sure it doesn't happen after the prioritisation meeting  
> and we all get our
> steer?

Perhaps I'm misinterpreting your meaning, but I think your attitude  
is way out of line.

Free software is possibly the only scenario where you truly get more  
than you pay for, but that doesn't mean it comes without a cost.

One cost is that the project and its community dictate their own  
development process, and one person has little or no ability to  
change that inertia. It is the right, possibly even the purpose of  
the community to grow however it will.

I get just as frustrated as the next guy when I need something fixed  
RFN, but that's the price you pay in exchange for a huge library of  
high-quality code. For every time I've run into an issue with Twisted  
that the core devs were too busy to fix, there's 50 other times when  
Twisted has saved my ass.

Wasteful coding? Who do you think you're talking to here?

-phil



From glyph at divmod.com  Wed Apr  2 20:04:26 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 00:04:26 -0000
Subject: [Twisted-Python] win32 reactors
Message-ID: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>

On 10:24 pm, james at mansionfamily.plus.com wrote:
>Call me old-fashioned, but what you are describing is the difference 
>between design-free-hacking
>followed by iteration, and actually designing something.  You know, all 
>that waterfall stuff. I know,
>its not fashionable right now.

This argument is kind of pointless.  You can insult us by saying what 
we're doing isn't "real" design, or you can talk about what they do 
where you work, but the fact is that we do have some consensus around 
doing things a certain way here (iteratively).

Regardless of fashion, we do things a certain way when we work on 
Twisted; we'll continue to do something that way unless a major 
contributor has some serious suggestions about how things might be done 
better.  You're not going to become a major contributor and get that 
kind of influence just by complaining; since, by the fact that you're 
around and talking about Twisted here, *something* we did with our 
iterative process worked out right :).



From steve at holdenweb.com  Wed Apr  2 20:21:54 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 02 Apr 2008 20:21:54 -0400
Subject: [Twisted-Python] Re: win32 reactors
In-Reply-To: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>
References: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>
Message-ID: <ft17v7$p7v$2@ger.gmane.org>

glyph at divmod.com wrote:
> On 10:24 pm, james at mansionfamily.plus.com wrote:
>> Call me old-fashioned, but what you are describing is the difference 
>> between design-free-hacking
>> followed by iteration, and actually designing something.  You know, 
>> all that waterfall stuff. I know,
>> its not fashionable right now.
> 
> This argument is kind of pointless.  You can insult us by saying what 
> we're doing isn't "real" design, or you can talk about what they do 
> where you work, but the fact is that we do have some consensus around 
> doing things a certain way here (iteratively).
> 
> Regardless of fashion, we do things a certain way when we work on 
> Twisted; we'll continue to do something that way unless a major 
> contributor has some serious suggestions about how things might be done 
> better.  You're not going to become a major contributor and get that 
> kind of influence just by complaining; since, by the fact that you're 
> around and talking about Twisted here, *something* we did with our 
> iterative process worked out right :).

Yeah, but you were just lucky - it's not like you guys are clever or 
anything ... ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From sergey at optimaltec.com  Thu Apr  3 06:50:52 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Thu, 03 Apr 2008 06:50:52 -0400
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
References: <fss8lj$uvs$1@ger.gmane.org>
	<018601c893bb$9198b250$b4ca16f0$@com>	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
Message-ID: <ft2cqb$ueh$1@ger.gmane.org>

zooko wrote:
>> Most likely, but zope.interface on Windows would require Visual Studio
>> 2003. I tried easy_install but couldn't complete it.
> 
> The error message that says "Python was built with Visual Studio version
> 7.1, and extensions need to be built with the same version of the
> compiler" isn't true.

My console message was explicitly about Visual Studio 2003 (probably
because it's Python 2.5), and the machine had Visual Studio 2005 (and
2008) installed so the message was not without merit ;-).

> Install gcc (I recommend cygwin, but mingw will also work), and put the
> following stanza into your distutils config file:

Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
extensions in the same process?

> 
> [build]
> compiler=mingw32
> 
> (You put "compiler=mingw32" regardless of whether you've installed the
> cygwin version of gcc or the mingw version of gcc.)

I can do "python setup.py build -c mingw32," even better :-).

Thank you!

Sergey.




From amauryfa at gmail.com  Thu Apr  3 08:15:39 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 3 Apr 2008 14:15:39 +0200
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <e27efe130804030515w716ab99ejd6f04d7618b2000f@mail.gmail.com>

On Thu, Apr 3, 2008 at 12:50 PM, Sergey A. Lipnevich
<sergey at optimaltec.com> wrote:
> zooko wrote:
>  >> Most likely, but zope.interface on Windows would require Visual Studio
>  >> 2003. I tried easy_install but couldn't complete it.
>  >
>  > The error message that says "Python was built with Visual Studio version
>  > 7.1, and extensions need to be built with the same version of the
>  > compiler" isn't true.
>
>  My console message was explicitly about Visual Studio 2003 (probably
>  because it's Python 2.5), and the machine had Visual Studio 2005 (and
>  2008) installed so the message was not without merit ;-).
>
>
>  > Install gcc (I recommend cygwin, but mingw will also work), and put the
>  > following stanza into your distutils config file:
>
>  Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
>  extensions in the same process?

In this particular case, it's OK:
this extension does not use system resources (memory, files...) from
the C runtime library.

-- 
Amaury Forgeot d'Arc



From mike at mkp.ca  Thu Apr  3 09:03:44 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 3 Apr 2008 09:03:44 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F407A0.6090209@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
Message-ID: <273093d80804030603t42db5221gc5639805482ab3f@mail.gmail.com>

On Wed, Apr 2, 2008 at 6:24 PM, James Mansion
<james at mansionfamily.plus.com> wrote:
>  So - I disagree.  I'm quite happy to hand-wave, and to listen to my
> colleagues'
>  hand-waving. If it communicates design ideas - and requirements - before
> any wasteful
>  coding, that's good. Honest.

"90% code" is cheap and more expressive for communicating design ideas.



From zooko at zooko.com  Thu Apr  3 09:07:26 2008
From: zooko at zooko.com (zooko)
Date: Thu, 3 Apr 2008 07:07:26 -0600
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org>
	<018601c893bb$9198b250$b4ca16f0$@com>	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <7926CA7F-4866-40E6-9B13-B6511A2EE7CD@zooko.com>

On Apr 3, 2008, at 4:50 AM, Sergey A. Lipnevich wrote:
>>
>> Install gcc (I recommend cygwin, but mingw will also work), and  
>> put the
>> following stanza into your distutils config file:
>
> Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
> extensions in the same process?

As I mentioned in letter to which you replied (above), there are some  
cases where this is a bad idea, but they appear to be vanishingly  
rare in practice.

>> [build]
>> compiler=mingw32

> I can do "python setup.py build -c mingw32," even better :-).

Yes, but if you want to use easy_install, you would have to edit your  
distutils config file.

Regards,

Zooko




From glyph at divmod.com  Thu Apr  3 10:32:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 14:32:23 -0000
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <20080403143223.21558.1594999209.divmod.xquotient.9975@joule.divmod.com>


On 10:50 am, sergey at optimaltec.com wrote:
>Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
>extensions in the same process?

I believe this is outdated advice.  There was a time that Cygwin GCC 
could not build "normal" windows Python extensions at all; nowadays, 
however, it can effectively masquerade as a particular version of the 
regular Microsoft compiler for linking purposes.  MinGW's GCC has been 
able to do this for even longer.

I don't quite understand the mechanics of this, but from your 
perspective it's simple: just do what zooko says ;-).



From andrewfr_ice at yahoo.com  Thu Apr  3 11:21:25 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 3 Apr 2008 08:21:25 -0700 (PDT)
Subject: Stackless Python/Twisted example Re: [Twisted-Python] Advice sought
	on application evolution
In-Reply-To: <E1JeVim-0002C5-VM@cube.twistedmatrix.com>
Message-ID: <845783.90078.qm@web34204.mail.mud.yahoo.com>

Hi Don and Colleagues:

>I'll be very interested to learn more about the
>melding of the two paradigms.

...

>One question: I had the impression that Stackless is
>mostly an academic exercise, sort of a proof of
>concept.  Is this wrong?  How stable, portable, etc.
is Stackless at this point?  Is it a reasonable choice

>for a commercial application?

Sorry for the wait - I have been very busy. I will
probably update my blog on the weekend. Meanwhile, I
have enclosed an example of a Toy WS-BPEL processor
prototype that more or less implements the I/O parts
of WS-BPEL specification: invoke, reply, receive,
wait, event handlers, and daemons!

In the process, the programme shows all the
integration techniques in action.

The main thing I want readers to take away is how
*little* Stackless Python and Twisted are needed to
implement something complex. To me, this is what
Python is all about.

In your case Don, I try to show how layering helps
model business logic. In the example, think of the
Process and AlarmProcess belonging to the business
logic layer.

I have tried my best to strip away the WS-BPEL
specific parts to show how I integrate Stackless with
Twisted. Still the architecture is influenced by my
need to prototype. I am still experimenting.

That said, this little prototype starts up 1001
tasklets. If a web client does a HTTP GET on
http://localhost:8080/[0-999],
the tasklet will wake up, call a web server (in my
case Apache), and return a result. Another tasklets
simply ticks.

Give me a while, and I will show another example with
process serialization (at Pycon 2008 - I demonstrated
process serialization to a few folks after my talk -
hint Twisted does not like to be pickled).

Unfortunately I have not had time to set up stress
tests. I really don't have access to large computers.

That said, the integration techniques reflect my
thinking about November/December 2007. I am eager to
find the time to try out Christopher Armstrong's
coroutine package.

If you have any questions, please don't hesitate to
ask.

Cheers,
Andrew





      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ToyProcessor5.py
Type: text/x-python
Size: 13003 bytes
Desc: 1310978246-ToyProcessor5.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080403/b2046098/attachment.py 

From ddwiggins at advpubtech.com  Thu Apr  3 12:32:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 03 Apr 2008 09:32:26 -0700
Subject: [Twisted-Python] Re: Stackless Python/Twisted example Re: Advice
 sought on application evolution
In-Reply-To: <845783.90078.qm@web34204.mail.mud.yahoo.com>
References: <E1JeVim-0002C5-VM@cube.twistedmatrix.com>
	<845783.90078.qm@web34204.mail.mud.yahoo.com>
Message-ID: <ft30qr$d63$1@ger.gmane.org>

Andrew Francis wrote:
> In your case Don, I try to show how layering helps
> model business logic. In the example, think of the
> Process and AlarmProcess belonging to the business
> logic layer.
> 
> I have tried my best to strip away the WS-BPEL
> specific parts to show how I integrate Stackless with
> Twisted. Still the architecture is influenced by my
> need to prototype. I am still experimenting.

Thanks much for the example.  At a quick scan, it looks like it'll take 
some digesting to get my head around.  I'll give it a closer look when I 
get the chance.

-- 
Don Dwiggins
Advanced Publishing Technology




From db3l.net at gmail.com  Thu Apr  3 15:35:36 2008
From: db3l.net at gmail.com (David Bolen)
Date: Thu, 03 Apr 2008 15:35:36 -0400
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
Message-ID: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>

Nathan <nathan.stocks at gmail.com> writes:

> On Mon, Mar 31, 2008 at 8:17 PM,  <glyph at divmod.com> wrote:
>>  Twisted's job is to run the main loop; it's best just to let it do that.
>>  If Pyglet slowed down, it would be best to examine what's gone wrong
>>  with Pyglet and simply submit a fix for that.
>
> Understood.  Thanks for the guidance.  I'm working on example code
> that reproduces the problem.

While in general I'm always in favor of letting Twisted own the main
loop, I've also had quite good success in the past not doing so, even
without multiple threads, primarily in cases where networking was a
secondary function (e.g., GUI applications) and less time crucial than
the primary UI interaction.

In our case, with wxPython based applications, things worked great
just having wxPython handle a timer that triggered reactor iterations.
It involved:

* During initialization, start reactor with reactor.startRunning()
* At some periodic frequency, run reactor.iterate(0)
* During termination, set up a reactor.callLater for reactor.stop, and
  then call reactor.mainLoop().  This was the cleanest way we found to
  permit all reactor finalization (events, final I/O, etc...).

Note that the first point violates the IReactorCore interface
(startRunning() should only be accessed through run()).  I don't
consider running mainLoop() at the end a violation since it's the only
time it is called.

Yes, the above means that Twisted's loop might incur higher latency
(we ran the timer at about 150ms) than it might be if in control, but
it worked very well for us, including during times when the
win32/wxPython reactors weren't particularly stable, and
_threadedselect wasn't yet an option.  And even if in control, once
Twisted calls out to pump GUI messages, large latency is still
theoretically possible until it regains control.

So while I wouldn't usually suggest making Twisted's main loop
subservient to some other loop (and trying to identify the issue in
Pyglet would be a good thing), it's also something I'm not averse to
doing when needed.

It might be worth experimenting with using Pyglet's main loop, and
pyglet.clock.schedule or pyglet.clock.schedule_interval to iterate
Twisted's reactor.

-- David




From nathan.stocks at gmail.com  Thu Apr  3 16:32:23 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 3 Apr 2008 14:32:23 -0600
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
	<m2bq4qoho7.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>

On Thu, Apr 3, 2008 at 1:35 PM, David Bolen <db3l.net at gmail.com> wrote:
>  * During initialization, start reactor with reactor.startRunning()
>  * At some periodic frequency, run reactor.iterate(0)
>  * During termination, set up a reactor.callLater for reactor.stop, and
>   then call reactor.mainLoop().  This was the cleanest way we found to
>   permit all reactor finalization (events, final I/O, etc...).

That's exactly what I was looking for, thanks!  I'll save this as the
technique to try if all else fails and the time comes that I've got to
deploy.  Hopefully we'll just be able to figure out what's going on
and fix it before then.

~ Nathan



From glyph at divmod.com  Thu Apr  3 17:41:45 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 21:41:45 -0000
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
	<m2bq4qoho7.fsf@valheru.db3l.homeip.net>
	<96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>
Message-ID: <20080403214145.21558.436454877.divmod.xquotient.10148@joule.divmod.com>


On 08:32 pm, nathan.stocks at gmail.com wrote:
>On Thu, Apr 3, 2008 at 1:35 PM, David Bolen <db3l.net at gmail.com> wrote:
>>  * During initialization, start reactor with reactor.startRunning()
>>  * At some periodic frequency, run reactor.iterate(0)
>>  * During termination, set up a reactor.callLater for reactor.stop, 
>>and
>>   then call reactor.mainLoop().  This was the cleanest way we found to
>>   permit all reactor finalization (events, final I/O, etc...).
>
>That's exactly what I was looking for, thanks!  I'll save this as the
>technique to try if all else fails and the time comes that I've got to
>deploy.  Hopefully we'll just be able to figure out what's going on
>and fix it before then.

Definitely for an "if all else fails" scenario, this should work well 
enough :).  But definitely reserve it for that.

For PyGame, there aren't too many other considerations which will 
practically cause problems, since you're spinning at full-throttle all 
the time and you are unlikely to want to integrate with too much other 
code.  (And if everything's written to just expect a normal, running 
reactor anyway, you can easily fix it later.)

For a regular GUI app though, waking up every 150ms or so can be more 
serious than the apparently negligible CPU usage it causes.  Try, for 
example, running your program under 
http://en.wikipedia.org/wiki/PowerTOP to see if this reactor integration 
mechanism is running down your laptop users' battery :).

(This message written from a laptop whose battery is no longer being 
devoured by Firefox's too-frequent wakeups...)



From exarkun at divmod.com  Thu Apr  3 18:35:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 3 Apr 2008 17:35:06 -0500
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>
Message-ID: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>

On Thu, 03 Apr 2008 15:35:36 -0400, David Bolen <db3l.net at gmail.com> wrote:
> [snip]
>
>In our case, with wxPython based applications, things worked great
>just having wxPython handle a timer that triggered reactor iterations.
>It involved:
>
>* During initialization, start reactor with reactor.startRunning()
>* At some periodic frequency, run reactor.iterate(0)
>* During termination, set up a reactor.callLater for reactor.stop, and
>  then call reactor.mainLoop().  This was the cleanest way we found to
>  permit all reactor finalization (events, final I/O, etc...).
>
>Note that the first point violates the IReactorCore interface

Let me emphasize this.  The above relies on implementation details and may
be broken by any subsequent release (assuming it works now, which I won't
comment on).

Jean-Paul



From glenn at tarbox.org  Thu Apr  3 21:01:45 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Thu, 03 Apr 2008 18:01:45 -0700
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>
References: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>
Message-ID: <1207270905.6244.79.camel@ghtmyth.hq.tarbox.org>

The Qt reactor, http://code.tarbox.org/qtreactor, inverts the
"ownership" of the callback loop as well.  However, Qt provides well
behaved callbacks for timers as well as socket activity so the reactor
behaves properly.  

The qt reactor design allows for the conventional reactor.run() at the
end of the script as well as a call to reactor.runReturn() which starts
up the reactor, nails up the timers and socket IO but returns to the
calling application.  Hence, you can startup twisted sometime after your
gui app is running.  Obviously, you need to "behave" properly and make
sure that any user code doesn't hang onto the thread but this is
required for proper gui handling code anyway...

Twisted's current wx reactor uses another thread due to difficulties
experienced with an earlier version of wx not behaving well.  There are
complexities WRT integrating those threads which lie at the heart of the
testing failures for the current wx reactor.  It might be easy to fix...

However, I've been thinking about taking the qtreactor approach and (re)
trying to fix the wx reactor by first evaluating whether wx is "better
behaved".  If it isn't, perhaps its straightforward to fix wx (???)

Thing is, once you get the logic down... and (I think) its all correct
in the qtreactor, it should be straightforward to use the wx calls to
get servicing for timing and socket IO.

-glenn


On Thu, 2008-04-03 at 17:35 -0500, Jean-Paul Calderone wrote:
> On Thu, 03 Apr 2008 15:35:36 -0400, David Bolen <db3l.net at gmail.com> wrote:
> > [snip]
> >
> >In our case, with wxPython based applications, things worked great
> >just having wxPython handle a timer that triggered reactor iterations.
> >It involved:
> >
> >* During initialization, start reactor with reactor.startRunning()
> >* At some periodic frequency, run reactor.iterate(0)
> >* During termination, set up a reactor.callLater for reactor.stop, and
> >  then call reactor.mainLoop().  This was the cleanest way we found to
> >  permit all reactor finalization (events, final I/O, etc...).
> >
> >Note that the first point violates the IReactorCore interface
> 
> Let me emphasize this.  The above relies on implementation details and may
> be broken by any subsequent release (assuming it works now, which I won't
> comment on).
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Glenn H. Tarbox, PhD    | Don?t worry about people stealing your ideas. If your ideas
206-494-0819            | are any good, you?ll have to ram them down people?s throats
glenn at tarbox.org (gtalk) + ghtdak on aim/freenode     | ^ Howard Aiken, IBM engineer





From theatilla at gmail.com  Fri Apr  4 11:01:40 2008
From: theatilla at gmail.com (Atilla)
Date: Fri, 4 Apr 2008 17:01:40 +0200
Subject: [Twisted-Python] adbapi, transactions and threading
Message-ID: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>

I hope it won't be too confusing. I'm basically trying to make sure
I've grasped the concept - do correct me on anything I am wrong about
or my way of thinking confuses you, please.

I'm not used to running blocking calls and deferToThread a lot, so I
wanted to make sure I understand that correctly.

Basically, the way I understand it - adbapi is just a deferToThread
wrapper around the normal python API, correct? As in - if I used
something different to access my database, for example - sqlalchemy, I
would only need to appropriately wrap that functionality with
deferToThread, just as adbapi does?

That's one thing. Now - what I'm trying to do in essence is to load
some big chunk of data out of the DB, process it, and save it back.
I'd use a nice chain of deffered calls - one runQuery, one for the
processing, and one runOperation. However, I need transaction
functionality, so unless I'm mistaken, my only choice is
runInteraction.

Since that's automatically ran in a separate thread, I see it as a
monolithic piece of code -> query, processing call, saving query -> no
deffereds can take place there. Am I wrong on that one? Even if so -
it won't be that bad for me, since good part of the processing will be
handled by an external library (GIL released - says so, more cores
used, makes me happy).

That leads me to the next question - when I've got long code to run
and it happens to use an external, thread-safe, C library, releasing
the GIL, I should probably always take care to defer it to thread, if
I wanted to take advantage of multiple cores, correct? Otherwise, I
wouldn't have any parallelism gains, which I can get, because of the
GIL release. And let's say that my processing code can take a while
sometimes.

Which leads me to the other question - what should I do in the case
where I need to occasionally run big chunks of code. No blocking
calls, just crunch something down. Is deferToThread the only solution
for that? Is the idea to compose that as big deffered chains so other
processing might run normally, instead of wait for the big function to
exit? Because deferToThread will only get me anything, if there's a
blocking call inside, or if I mange to get parallelism out of it, if
it's something handled by GIL-released code.

Sorry if I sound too confusing, I'm trying to wrap it all in my head
before I dive in handling the service.



From waterbug at pangalactic.us  Fri Apr  4 11:07:56 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 04 Apr 2008 11:07:56 -0400
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
References: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
Message-ID: <47F6444C.8090603@pangalactic.us>

Atilla wrote:
> Basically, the way I understand it - adbapi is just a deferToThread
> wrapper around the normal python API, correct? As in - if I used
> something different to access my database, for example - sqlalchemy, I
> would only need to appropriately wrap that functionality with
> deferToThread, just as adbapi does?

If a twisted integration for sqlalchemy is specifically what you
want, that is already available:

http://foss.eepatents.com/sAsync/

(or do a pypi search on 'sasync').

Steve



From exarkun at divmod.com  Fri Apr  4 12:09:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 4 Apr 2008 11:09:15 -0500
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
Message-ID: <20080404160915.6859.614315558.divmod.quotient.25695@ohm>

On Fri, 4 Apr 2008 17:01:40 +0200, Atilla <theatilla at gmail.com> wrote:
>I hope it won't be too confusing. I'm basically trying to make sure
>I've grasped the concept - do correct me on anything I am wrong about
>or my way of thinking confuses you, please.
>
>I'm not used to running blocking calls and deferToThread a lot, so I
>wanted to make sure I understand that correctly.
>
>Basically, the way I understand it - adbapi is just a deferToThread
>wrapper around the normal python API, correct? As in - if I used
>something different to access my database, for example - sqlalchemy, I
>would only need to appropriately wrap that functionality with
>deferToThread, just as adbapi does?

Yes.

>
>That's one thing. Now - what I'm trying to do in essence is to load
>some big chunk of data out of the DB, process it, and save it back.
>I'd use a nice chain of deffered calls - one runQuery, one for the
>processing, and one runOperation. However, I need transaction
>functionality, so unless I'm mistaken, my only choice is
>runInteraction.

Right.

>
>Since that's automatically ran in a separate thread, I see it as a
>monolithic piece of code -> query, processing call, saving query -> no
>deffereds can take place there. Am I wrong on that one? Even if so -
>it won't be that bad for me, since good part of the processing will be
>handled by an external library (GIL released - says so, more cores
>used, makes me happy).

Correct.

>
>That leads me to the next question - when I've got long code to run
>and it happens to use an external, thread-safe, C library, releasing
>the GIL, I should probably always take care to defer it to thread, if
>I wanted to take advantage of multiple cores, correct? Otherwise, I
>wouldn't have any parallelism gains, which I can get, because of the
>GIL release. And let's say that my processing code can take a while
>sometimes.

Yep.

>
>Which leads me to the other question - what should I do in the case
>where I need to occasionally run big chunks of code. No blocking
>calls, just crunch something down. Is deferToThread the only solution
>for that? Is the idea to compose that as big deffered chains so other
>processing might run normally, instead of wait for the big function to
>exit? Because deferToThread will only get me anything, if there's a
>blocking call inside, or if I mange to get parallelism out of it, if
>it's something handled by GIL-released code.

deferToThread is one solution (you can use processes instead of threads,
but that's roughly the same idea).  Deferred aren't sensible for CPU-bound
tasks.  They just make the implementation slower and more complex, and they
probably _don't_ allow other tasks to run, since a Deferred is just a way
to track results, it doesn't imply any special scheduling.  This means the
different chunks of your computation will still run all at once and block
other tasks from running unless you explicitly insert scheduling logic.  If
that is interesting, then twisted.internet.task.coiterate may be interesting.
However, having a thread-safe CPU-bound task (preferably one which is all
self-contained and doesn't need to talk to other APIs, certainly not Twisted
APIs) and running it in a thread with deferToThread is sensible.

>
>Sorry if I sound too confusing, I'm trying to wrap it all in my head
>before I dive in handling the service.
>

Not very confusing at all. :)

Jean-Paul



From rlott at evertz.com  Fri Apr  4 12:27:59 2008
From: rlott at evertz.com (Rodney Lott)
Date: Fri, 4 Apr 2008 12:27:59 -0400
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
Message-ID: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>

Hi, there.

I was wondering if there is any information or examples on how to use Twisted to perform a SSM operation.  I am new to Twisted and to Python.

In C, I believe one would use the setsocketopt() to specify the joining to a multicast group (G) to a specific source (S):

	setsockopt(sock,..., IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), ...)

I believe that Python itself has analogous socket calls and could do this using a UDP socket.  

I read the Multicast UDP example on Twisted here: http://stderr.org/doc/twisted-doc/howto/udp.html#auto3

This shows how to do a normal multicast UDP situation with Twisted (i.e. a process will receive UDP traffic from ALL sources registered to the IGMP group).  

So, if there were UDP three sources (e.g. A, B, and C) registered to the IGMP group, I would like to find a way for my client to only receive data from source B.

I believe that I can get information using a SDP/SAP using a simple UDP server listening on the appropriate port.  So, the only thing that I am missing is how to register to a group for a specific source.  I am not sure if the joinGroup() method will allow for this.  

Thanks.

-Rodney Lott

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080404/6429a580/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Apr  4 12:41:12 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 04 Apr 2008 17:41:12 +0100
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>
References: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>
Message-ID: <47F65A28.2080409@imperial.ac.uk>

Rodney Lott wrote:
> Hi, there.
> 
> I was wondering if there is any information or examples on how to use 
> Twisted to perform a SSM operation.  I am new to Twisted and to Python.
> 
> In C, I believe one would use the setsocketopt() to specify the joining 
> to a multicast group (G) to a specific source (S):
> 
>         setsockopt(sock,?, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), ?)

...provided your OS has IGMPv3 support (and the underlying network has 
IGMPv3 and PIM-SSM setup).

> 
> I believe that Python itself has analogous socket calls and could do 
> this using a UDP socket. 

At least on my version of Python (2.5.1, Fedora 8) there's no constant 
in the "socket" module for that:

 >>> [x for x in dir(socket) if 'member' in x.lower()]
['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']

Google for "python igmpv3" does not look promising... It seems as if 
this support isn't there yet.

> 
> I read the Multicast UDP example on Twisted here: 
> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
> 
> This shows how to do a normal multicast UDP situation with Twisted (i.e. 
> a process will receive UDP traffic from ALL sources registered to the 
> IGMP group). 
> 
> So, if there were UDP three sources (e.g. A, B, and C) registered to the 
> IGMP group, I would like to find a way for my client to only receive 
> data from source B.
> 
> I believe that I can get information using a SDP/SAP using a simple UDP 
> server listening on the appropriate port.  So, the only thing that I am 
> missing is how to register to a group for a specific source.  I am not 
> sure if the joinGroup() method will allow for this. 
> 
> Thanks.
> 
> -Rodney Lott
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From rlott at evertz.com  Fri Apr  4 13:49:50 2008
From: rlott at evertz.com (Rodney Lott)
Date: Fri, 4 Apr 2008 13:49:50 -0400
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <47F65A28.2080409@imperial.ac.uk>
Message-ID: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>

Thanks for the information, Phil.

I believe the 2.6 kernels are supposed to have IGMP setup.  Not sure about the PIM-SSM, though.

My Python setup (Debian etch, python 2.4.4-2) shows similar to yours re. the socket module.

Yeah.  I sent a post here because my Googling for this stuff wasn't going anywhere.  Oh, well.  Not the end of the world.  I will just use separate IGMP groups and switch on the separate addresses.

-Rodney Lott

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Phil
Mayers
Sent: Friday, April 04, 2008 12:41 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Source specific multicasting (SSM)
example?


Rodney Lott wrote:
> Hi, there.
> 
> I was wondering if there is any information or examples on how to use 
> Twisted to perform a SSM operation.  I am new to Twisted and to Python.
> 
> In C, I believe one would use the setsocketopt() to specify the joining 
> to a multicast group (G) to a specific source (S):
> 
>         setsockopt(sock,?, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), ?)

...provided your OS has IGMPv3 support (and the underlying network has 
IGMPv3 and PIM-SSM setup).

> 
> I believe that Python itself has analogous socket calls and could do 
> this using a UDP socket. 

At least on my version of Python (2.5.1, Fedora 8) there's no constant 
in the "socket" module for that:

 >>> [x for x in dir(socket) if 'member' in x.lower()]
['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']

Google for "python igmpv3" does not look promising... It seems as if 
this support isn't there yet.

> 
> I read the Multicast UDP example on Twisted here: 
> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
> 
> This shows how to do a normal multicast UDP situation with Twisted (i.e. 
> a process will receive UDP traffic from ALL sources registered to the 
> IGMP group). 
> 
> So, if there were UDP three sources (e.g. A, B, and C) registered to the 
> IGMP group, I would like to find a way for my client to only receive 
> data from source B.
> 
> I believe that I can get information using a SDP/SAP using a simple UDP 
> server listening on the appropriate port.  So, the only thing that I am 
> missing is how to register to a group for a specific source.  I am not 
> sure if the joinGroup() method will allow for this. 
> 
> Thanks.
> 
> -Rodney Lott
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From matt at madebykite.com  Fri Apr  4 14:35:43 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Fri, 4 Apr 2008 19:35:43 +0100
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
Message-ID: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>

Hi All,

Apologies if this has been covered before. I am looking to package a  
twisted application that relies on twistd as an egg but I am  
concerned as to how twistd will be aware of the my package.

How do I make twistd aware of my application if it is packaged as an  
egg? Is this possible? Do I just create my own stub to twistd that  
takes care of ensuring that twisted/plugins/myapp.py is in Python's  
path?

Thanks a lot,


Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From vince6 at offshore.ai  Fri Apr  4 14:56:32 2008
From: vince6 at offshore.ai (Vince Cate)
Date: Fri, 04 Apr 2008 14:56:32 -0400
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
Message-ID: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>


I would like a library that I can use from Twisted to help with
peer-to-peer communication.  I have looked at and tried Vertex:

  http://divmod.org/trac/wiki/UsingVertex

This is the kind of thing I want.  But I am having some problems with
it.  Are there other similar libraries out there?  What are people
using?

The problem we have with Vertex is sending from Windows to Linux.  We
can do Linux to Windows.

The error we get is in file ptcp.py
in class PTCP
def connect(self, factory, host, port, pseudoPort=1)
with factory <vertex.q2q.RPTCPConnectionAttempt instance at 0x010CEBE8>

Any help appreciated.

   -- Vince Cate







From zooko at zooko.com  Fri Apr  4 21:57:49 2008
From: zooko at zooko.com (zooko)
Date: Fri, 4 Apr 2008 19:57:49 -0600
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
In-Reply-To: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
References: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
Message-ID: <58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>


On Apr 4, 2008, at 12:35 PM, Matthew Glubb wrote:
> I am looking to package a twisted application that relies on twistd  
> as an egg but I am concerned as to how twistd will be aware of the  
> my package.
>
> How do I make twistd aware of my application if it is packaged as  
> an egg? Is this possible? Do I just create my own stub to twistd  
> that takes care of ensuring that twisted/plugins/myapp.py is in  
> Python's path?

I'm not sure if this solves your problem (because I don't know why  
the twistd script doesn't already succeed at importing twisted from  
the egg), but one option is to use the setuptools "console scripts"  
hook.

Get the Twisted 8 source code and apply the following patch.  Then  
whenever you install this patched version of twisted, it will install  
a twistd that imports the associated version of Twisted, even from an  
egg.  As an added bonus, it will make a twistd executable for the  
local platform, including Windows, although I haven't tested that  
behavior.

Regards,

Zooko


Index: setup.py
===================================================================
--- setup.py	(revision 23203)
+++ setup.py	(working copy)
@@ -86,6 +86,7 @@
              setup_args['install_requires'] = requirements
          setup_args['include_package_data'] = True
          setup_args['zip_safe'] = False
+        setup_args['entry_points'] = { 'console_scripts': [ 'twistd  
= twisted.scripts.twistd:run' ] }
      setup(**setup_args)






From glyph at divmod.com  Sat Apr  5 00:24:19 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 05 Apr 2008 04:24:19 -0000
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
Message-ID: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>

On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>I would like a library that I can use from Twisted to help with
>peer-to-peer communication.  I have looked at and tried Vertex:
>
>  http://divmod.org/trac/wiki/UsingVertex
>
>This is the kind of thing I want.  But I am having some problems with
>it.  Are there other similar libraries out there?  What are people
>using?

Hi!  I'm the main author of Vertex.

As far as I know, there's nothing really similar to Vertex, especially 
not for Twisted.  I'm really glad you're looking at it though!  As 
you've noticed, it's got some bugs, and it needs maintenance.  However, 
to sustain maintenance there has to be some interest, and with bugs it's 
difficult to attract interest ;-).

Vertex is a very interesting proof of concept though, and a lot of work 
has gone into it; it wouldn't be a huge amount of work to turn it into 
something really robust (and awesome).  In any event, it would be a lot 
less work than doing it over from scratch :).
>The problem we have with Vertex is sending from Windows to Linux.  We
>can do Linux to Windows.

A few other users have reported issues with Windows.  Is it this? 
http://divmod.org/trac/ticket/1369
>The error we get is in file ptcp.py
>in class PTCP
>def connect(self, factory, host, port, pseudoPort=1)
>with factory <vertex.q2q.RPTCPConnectionAttempt instance at 0x010CEBE8>

Can you be a bit more specific?  Is there a traceback?  Is there an 
exception?  Please provide as much information as possible.  You may 
want to sign up for the divmod-dev list, which might be more appropriate 
for discussing Vertex.  On the other hand Twisted users might be 
interested in hearing about semi-transparent NAT traversal and federated 
authentication...



From matt at madebykite.com  Sat Apr  5 06:47:53 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 5 Apr 2008 11:47:53 +0100
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
In-Reply-To: <58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>
References: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
	<58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>
Message-ID: <ABE3DDD6-70FD-4A5C-950C-350644B303AA@madebykite.com>

Hi Zooko,

Thanks for your comments. I fixed it. The solution was very simple.  
Just include twisted/plugins/... in my egg. It gets picked up  
automatically because PYTHONPATH includes the path to my egg.

Regards,


Matt

On 5 Apr 2008, at 02:57, zooko wrote:
>
> On Apr 4, 2008, at 12:35 PM, Matthew Glubb wrote:
>> I am looking to package a twisted application that relies on  
>> twistd as an egg but I am concerned as to how twistd will be aware  
>> of the my package.
>>
>> How do I make twistd aware of my application if it is packaged as  
>> an egg? Is this possible? Do I just create my own stub to twistd  
>> that takes care of ensuring that twisted/plugins/myapp.py is in  
>> Python's path?
>
> I'm not sure if this solves your problem (because I don't know why  
> the twistd script doesn't already succeed at importing twisted from  
> the egg), but one option is to use the setuptools "console scripts"  
> hook.
>
> Get the Twisted 8 source code and apply the following patch.  Then  
> whenever you install this patched version of twisted, it will  
> install a twistd that imports the associated version of Twisted,  
> even from an egg.  As an added bonus, it will make a twistd  
> executable for the local platform, including Windows, although I  
> haven't tested that behavior.
>
> Regards,
>
> Zooko
>
>
> Index: setup.py
> ===================================================================
> --- setup.py	(revision 23203)
> +++ setup.py	(working copy)
> @@ -86,6 +86,7 @@
>              setup_args['install_requires'] = requirements
>          setup_args['include_package_data'] = True
>          setup_args['zip_safe'] = False
> +        setup_args['entry_points'] = { 'console_scripts':  
> [ 'twistd = twisted.scripts.twistd:run' ] }
>      setup(**setup_args)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From makkalot at gmail.com  Sat Apr  5 06:50:50 2008
From: makkalot at gmail.com (makkalot at gmail.com)
Date: Sat, 5 Apr 2008 13:50:50 +0300
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <200804051350.51765.makkalot@gmail.com>

 >On the other hand Twisted users might be
> interested in hearing about semi-transparent NAT traversal and federated
> authentication...

Hi, i want to know what the vertex actually is. Because i had in my mind to 
develop a NAT traversal software that other applications can use easily. Is 
vertex a STUN server what is it :) And you mentioned about authentication 
which is another exciting part i want to add.



From manlio_perillo at libero.it  Sat Apr  5 07:20:49 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 05 Apr 2008 13:20:49 +0200
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <47F76091.5090201@libero.it>

glyph at divmod.com ha scritto:
> On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>> I would like a library that I can use from Twisted to help with
>> peer-to-peer communication.  I have looked at and tried Vertex:
>>
>>  http://divmod.org/trac/wiki/UsingVertex
>>
>> This is the kind of thing I want.  But I am having some problems with
>> it.  Are there other similar libraries out there?  What are people
>> using?
> 
> Hi!  I'm the main author of Vertex.
> 
> As far as I know, there's nothing really similar to Vertex, especially 
> not for Twisted.  I'm really glad you're looking at it though!  As 
> you've noticed, it's got some bugs, and it needs maintenance.  However, 
> to sustain maintenance there has to be some interest, and with bugs it's 
> difficult to attract interest ;-).
> 

Sorry for the intromission, what about SCPT?



Thanks  Manlio Perillo



From p.mayers at imperial.ac.uk  Sat Apr  5 08:15:02 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 05 Apr 2008 13:15:02 +0100
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>
References: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>
Message-ID: <47F76D46.50905@imperial.ac.uk>

Rodney Lott wrote:
> Thanks for the information, Phil.
> 
> I believe the 2.6 kernels are supposed to have IGMP setup.  Not sure
> about the PIM-SSM, though.

I don't think Linux 2.6 has IGMPv3 yes (necessary for SSM). I think it 
just has IGMPv2/1

PIM-SSM is a routing protocol and is only necessary on the routers in 
your or your providers network

Even if your network is plain ASM (any-source multicast) capable, 
there's a good chance it's not enabled for SSM. Of course, it may be 
e.g. ours is.

> 
> My Python setup (Debian etch, python 2.4.4-2) shows similar to yours
> re. the socket module.
> 
> Yeah.  I sent a post here because my Googling for this stuff wasn't
> going anywhere.  Oh, well.  Not the end of the world.  I will just
> use separate IGMP groups and switch on the separate addresses.
> 
> -Rodney Lott
> 
> -----Original Message----- From:
> twisted-python-bounces at twistedmatrix.com 
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Phil 
> Mayers Sent: Friday, April 04, 2008 12:41 PM To: Twisted general
> discussion Subject: Re: [Twisted-Python] Source specific multicasting
> (SSM) example?
> 
> 
> Rodney Lott wrote:
>> Hi, there.
>> 
>> I was wondering if there is any information or examples on how to
>> use Twisted to perform a SSM operation.  I am new to Twisted and to
>> Python.
>> 
>> In C, I believe one would use the setsocketopt() to specify the
>> joining to a multicast group (G) to a specific source (S):
>> 
>> setsockopt(sock,?, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), ?)
> 
> ...provided your OS has IGMPv3 support (and the underlying network
> has IGMPv3 and PIM-SSM setup).
> 
>> I believe that Python itself has analogous socket calls and could
>> do this using a UDP socket.
> 
> At least on my version of Python (2.5.1, Fedora 8) there's no
> constant in the "socket" module for that:
> 
>>>> [x for x in dir(socket) if 'member' in x.lower()]
> ['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']
> 
> Google for "python igmpv3" does not look promising... It seems as if
>  this support isn't there yet.
> 
>> I read the Multicast UDP example on Twisted here: 
>> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
>> 
>> This shows how to do a normal multicast UDP situation with Twisted
>> (i.e. a process will receive UDP traffic from ALL sources
>> registered to the IGMP group).
>> 
>> So, if there were UDP three sources (e.g. A, B, and C) registered
>> to the IGMP group, I would like to find a way for my client to only
>> receive data from source B.
>> 
>> I believe that I can get information using a SDP/SAP using a simple
>> UDP server listening on the appropriate port.  So, the only thing
>> that I am missing is how to register to a group for a specific
>> source.  I am not sure if the joinGroup() method will allow for
>> this.
>> 
>> Thanks.
>> 
>> -Rodney Lott
>> 
>> 
>> ------------------------------------------------------------------------
>> 
>> 
>> _______________________________________________ Twisted-Python
>> mailing list Twisted-Python at twistedmatrix.com 
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Sat Apr  5 18:39:05 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 5 Apr 2008 15:39:05 -0700 (PDT)
Subject: [Twisted-Python] Re: Stackless Python/Twisted example 
In-Reply-To: <E1JhoKj-0008Am-EJ@cube.twistedmatrix.com>
Message-ID: <600515.97227.qm@web34206.mail.mud.yahoo.com>

Hi Don and Colleagues:

>Thanks much for the example.  At a quick scan, it
>looks like it'll take some digesting to get my head
>around.  I'll give it a closer look when I 
>get the chance.

Don, you need to read the code along side the slides.
I will probably be giving a revisted version of the
talk in early May.

I will annotate the example in the week to follow.
However I need to change the code somewhat so it is a
wee less confusing to a newbie and gets rid of a
design flaw concerning daemonisation. 

With the current programme, if you hit the processor
fast enough, you will get back 404s. These really
should be 500s. This is not a problem with the
technique but with my simple minded implementation of
the WS-BPEL specification that warns of race
conditions associated with certain activities.

Although fine for my purposes, I should conduct two
sets of tests

1) More feature torture tests where I test non-trivial
message exchange patterns.

2) Performance tests. Test against
- Apache ODE
- A Stackless /Twisted solution that does not spawn a
server instance in a tasklet
- A pure Twisted solution
- A Twisted solution that uses inlineCallbacks.

Cheers,
Andrew


      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From glyph at divmod.com  Sat Apr  5 23:47:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 06 Apr 2008 03:47:47 -0000
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <200804051350.51765.makkalot@gmail.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
	<200804051350.51765.makkalot@gmail.com>
Message-ID: <20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>


On 5 Apr, 10:50 am, makkalot at gmail.com wrote:
> >On the other hand Twisted users might be
>>interested in hearing about semi-transparent NAT traversal and 
>>federated
>>authentication...
>
>Hi, i want to know what the vertex actually is. Because i had in my 
>mind to
>develop a NAT traversal software that other applications can use 
>easily. Is
>vertex a STUN server what is it :) And you mentioned about 
>authentication
>which is another exciting part i want to add.

Part of it is nat traversal layer, but it's not a STUN server, no :).

Vertex is an implementation of a protocol, Q2Q, which allows you to 
connect to a program that a user is running.  This is not entirely about 
traversing NAT.

The idea is you have a server, foo.example.com, and you want to connect 
to a user who has an account on that server, bob.  Q2Q enables you to 
say "I want a connection to bob at foo.example.com" and you don't have to 
care about how that connection is established, or, for example, whether 
bob is using his desktop or laptop computer.  One of the pieces of code 
it includes is a TCP-over-UDP implementation, which allows you to tunnel 
through almost all NAT implementations, but you don't use that code 
directly; you just ask for a Q2Q connection.

(It also allows Bob to know who is trying to connect to him before 
accepting the connection.  TCP allows you to ask this too, of course, 
but "jethro at bar.example.com" and an SSL certificate fingerprint is a lot 
more descriptive and secure than "probably 98.76.54.32 port 30487, but 
maybe not".



From exarkun at twistedmatrix.com  Sun Apr  6 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1207454707.65.694290446@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080406/57ad78d7/attachment.htm 

From jml at mumak.net  Sun Apr  6 01:02:40 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 6 Apr 2008 15:02:40 +1000
Subject: [Divmod-dev] Re: [Twisted-Python] Vertex or other P2P libraries
	for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <d06a5cd30804052202y3303628cm31dacfd421e02547@mail.gmail.com>

On Sat, Apr 5, 2008 at 2:24 PM,  <glyph at divmod.com> wrote:
> On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>
> > I would like a library that I can use from Twisted to help with
> > peer-to-peer communication.  I have looked at and tried Vertex:
> >
> >  http://divmod.org/trac/wiki/UsingVertex
> >
> > This is the kind of thing I want.  But I am having some problems with
> > it.  Are there other similar libraries out there?  What are people
> > using?
> >
>
>  Hi!  I'm the main author of Vertex.
>
>  As far as I know, there's nothing really similar to Vertex, especially not
> for Twisted.

AIUI, Telepathy tubes are very similar in intent.

jml



From sipickles at hotmail.com  Sun Apr  6 05:39:08 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 10:39:08 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
Message-ID: <BAY114-DAV5C0E672D405358DAA1B1EBEF00@phx.gbl>

I was interested in Andrews Paper on this subject. I note he recommends 
running a twisted server as a tasklet.

Is there a problem doing this?

factory = pb.PBClientFactory
reactor.connectTCP('127.0.0.1', 1234, Factory)
# Load other tasklets here
stackless.tasklet(reactor.iterate)(1)

or should I perhaps do this?

factory = pb.PBClientFactory
reactor.connectTCP('127.0.0.1', 1234, Factory)
# Load other tasklets here
while 1:
    stackless.tasklet(reactor.iterate)(1)
    stackless.schedule()

What does the delay in reactor.iterate(delay=0) do? Is there a 
reactor.run_once() call?

I want to make the reactor a tasklet so it is included in the scheduler. 
Seems to be working but have I opened a can of worms?

Thanks

Simon

-- 
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Sun Apr  6 11:08:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 6 Apr 2008 11:08:13 -0400
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <BAY114-DAV5C0E672D405358DAA1B1EBEF00@phx.gbl>
Message-ID: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>

On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>I was interested in Andrews Paper on this subject. I note he recommends 
>running a twisted server as a tasklet.
>
>Is there a problem doing this?
>
>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>stackless.tasklet(reactor.iterate)(1)
>
>or should I perhaps do this?
>
>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>while 1:
>    stackless.tasklet(reactor.iterate)(1)
>    stackless.schedule()
>
>What does the delay in reactor.iterate(delay=0) do? Is there a 
>reactor.run_once() call?
>
>I want to make the reactor a tasklet so it is included in the scheduler. 
>Seems to be working but have I opened a can of worms?
>

Most or all uses of reactor.iterate() are wrong.  I don't think Andrew's
paper suggested doing this.  Why did you decide to?

Jean-Paul



From sipickles at hotmail.com  Sun Apr  6 11:48:48 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 16:48:48 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
References: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
Message-ID: <BAY114-DAV18F6396397799D3BCF388BEF00@phx.gbl>



Jean-Paul Calderone wrote:
> On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> I was interested in Andrews Paper on this subject. I note he 
>> recommends running a twisted server as a tasklet.
>>
>> Is there a problem doing this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> stackless.tasklet(reactor.iterate)(1)
>>
>> or should I perhaps do this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> while 1:
>>    stackless.tasklet(reactor.iterate)(1)
>>    stackless.schedule()
>>
>> What does the delay in reactor.iterate(delay=0) do? Is there a 
>> reactor.run_once() call?
>>
>> I want to make the reactor a tasklet so it is included in the 
>> scheduler. Seems to be working but have I opened a can of worms?
>>
>
> Most or all uses of reactor.iterate() are wrong.
How should it be used? It looks to be working very successfully so far. 
The docs say "All pending |IDelayedCall| 
<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html>s 
will be called."

Does this not mean the reactor will process its queue and return? I 
imagine the delay argument specifies a maximum duration before the 
return. The docs do not describe this yet.
> I don't think Andrew's paper suggested doing this.  Why did you decide 
> to?
>
I want a way to let twisted.reactor yield to the stackless scheduler.

Thanks for any advice

Simon





From sipickles at hotmail.com  Sun Apr  6 11:49:37 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 16:49:37 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
References: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
Message-ID: <BAY114-DAV11408696470EA8E3296D67BEF00@phx.gbl>



Jean-Paul Calderone wrote:
> On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> I was interested in Andrews Paper on this subject. I note he 
>> recommends running a twisted server as a tasklet.
>>
>> Is there a problem doing this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> stackless.tasklet(reactor.iterate)(1)
>>
>> or should I perhaps do this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> while 1:
>>    stackless.tasklet(reactor.iterate)(1)
>>    stackless.schedule()
>>
>> What does the delay in reactor.iterate(delay=0) do? Is there a 
>> reactor.run_once() call?
>>
>> I want to make the reactor a tasklet so it is included in the 
>> scheduler. Seems to be working but have I opened a can of worms?
>>
>
> Most or all uses of reactor.iterate() are wrong.
How should it be used? It looks to be working very successfully so far. 
The docs say "All pending |IDelayedCall| 
<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html>s 
will be called."

Does this not mean the reactor will process its queue and return? I 
imagine the delay argument specifies a maximum duration before the 
return. The docs do not describe this yet.
> I don't think Andrew's paper suggested doing this.  Why did you decide 
> to?
>
I want a way to let twisted.reactor yield to the stackless scheduler.

Thanks for any advice

Simon





From sipickles at hotmail.com  Sun Apr  6 12:42:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 17:42:02 +0100
Subject: [Twisted-Python] Deferreds and Tasklets
Message-ID: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>

So I am still fiddling with interesting ways to combine stackless and 
twisted. Its fun, but I am probably naively hacking! (I always seem to 
want to use the deprecated code!- probably says a lot about me?)

I'm using Perspective Broker to do remote calls to an app running 
Twisted-Stackless. PB is positively brilliant, btw.

So say the a remote caller wants to get data from my app. It calls 
remote_GetData() in my PB app, which uses the actor model(each object 
has a channel.receive() running in its own tasklet).

remote_GetData() has to send a message thru a stackless.channel() to get 
the required data, then it must stackless.schedule()

Now it waits for the result to arrive at its own channel.receive(), 
which then needs to be passed back as the return value of remote_GetData().

Is this possible?

Perhaps like this:

from twisted.spread import pb
from twisted.internet import reactor
import stackless

dbRx = stackless.channel()
pbRx = stackless.channel()

class DataSource:
   def Listen(self):
       while 1:
           msg = dbrx.receive() # a channel will arrive here
           msg.send(42)
           stackless.schedule()
   def __init__(self):
       stackless.tasklet(self.Listen)()


class pbBroker(pb.Referenceable):
   def remote_GetData(self):
       dbRx.send(pbRx)
       result = pbRx.receive()
       # return 42 to remote caller thru pb
       return result    

This isn't ideal since I don't want pbBroker to block during the 
receive. I'd like it to closer resemble the Listen loop of the first 
class, so other objects can talk to pbBroker while it is waiting. Maybe 
like this:

class pbBroker(pb.Referenceable):
   def Listen(self):
       while 1:
           msg = self.rx.receive()
           # do stuff with msg from other local objects
           stackless.schedule()
   def __init__(self):
       self.rx = stackless.channel()
       stackless.tasklet(self.Listen)()
   def remote_GetData(self):
       ch = stackless.channel()
       dbRx.send(ch)
       # can block since its a dedicated channel
       result = ch.receive()
       # return 42 to remote caller thru pb
       return result    
I guess the same problem arise when remote_GetData() has to use a 
deferred too.

from twisted.enterprise import adbapi
dbPool = adbapi.ConnectionPool("MySQLdb", db="db", user="user", 
passwd="pw")

class pbBroker(pb.Referenceable):
   def remote_GetDeferredData(self):
       d = dbPool.runInteraction(DoQuery, "SELECT * FROM users") # 
DoQuery just wraps a query with try/except
       d.addCallback(self.GetDeferredData_Success)

   def GetDeferredData_Success(self, result):
       # return to remote caller thru pb
       return result   ## WRONG

How can I return a value for a remote_* call when I only get that value 
thru another callback?

Sorry its a long and confusing one!

Simon


-- 
Linux user #458601 - http://counter.li.org.





-- 
Linux user #458601 - http://counter.li.org.






From radix at twistedmatrix.com  Sun Apr  6 13:16:51 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 6 Apr 2008 13:16:51 -0400
Subject: [Twisted-Python] Deferreds and Tasklets
In-Reply-To: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
References: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
Message-ID: <60ed19d40804061016o6dbe938ds1104b2885aa6779a@mail.gmail.com>

On Sun, Apr 6, 2008 at 12:42 PM, Simon Pickles <sipickles at hotmail.com> wrote:
> So I am still fiddling with interesting ways to combine stackless and
> twisted. Its fun, but I am probably naively hacking! (I always seem to want
> to use the deprecated code!- probably says a lot about me?)

I've solved some of these problems in Corotwine, which uses Greenlet.
You may want to take a look at least to see how it can be done.
Specifically relating to Deferreds, corotwine.defer will probably be
helpful.

http://launchpad.net/corotwine/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Sun Apr  6 14:23:48 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 6 Apr 2008 11:23:48 -0700 (PDT)
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <E1JiRLl-00087T-Vk@cube.twistedmatrix.com>
Message-ID: <715951.52196.qm@web34201.mail.mud.yahoo.com>

Hi Simon and Colleages: 

>I note he recommends running a twisted server as a
>tasklet.

I do this so both the Twisted reactor and the
Stackless scheduler can run without blocking each
other....

The Twisted Reactor and the Stackless Schedule start
their respective systems. Both the Stackless and
Twisted run() method assume that the application has
finished once the run() method returns.

Here is simple example

import stackless
from   twisted.internet    import reactor

def hello():
    print "hello mom"

stackless.tasklet(hello)()
reactor.run()
stackless.run()

This programme will hang. Why? The Twisted reactor is
running in the main tasklet and returns only after it
has been stopped (which is never in this example).
Only after the reactor has finished, will the
stackless scheduler start. Of course, this is not the
behaviour we want.

>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>stackless.tasklet(reactor.iterate)(1)

I have never used iterate(). I am having a hard time
finding an example of iterate() in action. Perhaps I
am wrong but I would assume iterate() is used in
conjunction with something like reactor.interleave()
so that something like a GUI can function properly.

>From my understanding, your example would produce
something because in the iteration followed by a one
second delay, the client can actually complete a call.
However this seems accidental.

>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>while 1:
>    stackless.tasklet(reactor.iterate)(1)
>    stackless.schedule()

I don't understand iterate() well enough but I think
this will accidentally work sometimes. I don't have
time to run your programme but off hand, this is what
I think is happening:

1) Reactor tasklet is created. Since other tasklets
are ahead of it, it is not running.

2) stackless.schedule() kicks off the scheduling,
yielding the main tasklet and allowing the next
schedulable tasklet to run

3) Eventually the Twisted reactor runs. It does stuff.
You get results. However I don't believe it will yield
after that.

>I want to make the reactor a tasklet so it is
included >in the scheduler. 

Simon, stackless.tasklet(reactor.run)() will make the
Twisted reactor into a tasklet. However you need a way
to make it yield occasionally. That is why I use
task.LoopingCall(stackless.schedule). One nice feature
of this approach is that I do not have to alter the
Reactor.

I remember playing with PB a while ago. Here is the
post:

http://twistedmatrix.com/pipermail/twisted-python/2007-September/016000.html

I am enclosing some sample code so you can play with
it. The code may be a bit clunky because I was still
learning. Heck I am still learning :-)

Cheers,
Andrew

P.S - You may want to take out the 61 second sleep in
the PBServer. And it was neat to actually meet Bruce
Eckel at PyCon.




      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBExample.py
Type: text/x-python
Size: 2814 bytes
Desc: 3974082329-PBExample.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080406/2e4b8211/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBServer.py
Type: text/x-python
Size: 662 bytes
Desc: 2825570039-PBServer.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080406/2e4b8211/attachment-0001.py 

From makkalot at gmail.com  Sun Apr  6 16:10:15 2008
From: makkalot at gmail.com (makkalot at gmail.com)
Date: Sun, 6 Apr 2008 23:10:15 +0300
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<200804051350.51765.makkalot@gmail.com>
	<20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>
Message-ID: <200804062310.15744.makkalot@gmail.com>

> Vertex is an implementation of a protocol, Q2Q, which allows you to
> connect to a program that a user is running.  This is not entirely about
> traversing NAT.
>
> The idea is you have a server, foo.example.com, and you want to connect
> to a user who has an account on that server, bob.  Q2Q enables you to
> say "I want a connection to bob at foo.example.com" and you don't have to
> care about how that connection is established, or, for example, whether
> bob is using his desktop or laptop computer.  One of the pieces of code
> it includes is a TCP-over-UDP implementation, which allows you to tunnel
> through almost all NAT implementations, but you don't use that code
> directly; you just ask for a Q2Q connection.
Ah I got the idea,actually i also read the slides in your site. I may look at 
your nat traversal code it may give me some idea about what i'm planning todo
thanks for the description :) 



From james at mansionfamily.plus.com  Sun Apr  6 16:53:00 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Sun, 06 Apr 2008 21:53:00 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
Message-ID: <47F9382C.5070600@mansionfamily.plus.com>

Phil Christensen wrote:
> Wasteful coding? Who do you think you're talking to here?
I am suggesting that the '90% coding' suggests to me that design 
discussion starts when
most of a concrete implementation is available.  It wasn't your term but 
you have taken
offence at what I said.

Well, I disagree. I find it strange that there should be such a 
rejection of the idea
that one can achieve some degree of concensus on a design approach before
coding starts. It seems to me very wasteful if someone should expend time
getting an implementation 'mostly there' if in fact there is a devil in 
the detail that
will come up and bite it and invalidate the whole thing - and the only 
way to
do that is to be prepared to discuss abstract design approaches *before* 
coding.

Even if there is no resource available to code it, it can leave a documented
concencus that can be used to bootstrap implementation when resource
becomes available.

There are some aspects of system design relating to distributed and 
asynchronous
systems that are *not* amenable to iterative refinement and refactoring 
- you
can't generally test and refactor your way out of a design that is 
fundamentally
deadlock prone, for example.

It may be that the way that people like to 'collaborate' in open source 
does not
generally extend to design review, but that's wasteful and ultimately 
foolish for
exactly the same reasons it is in everyday work, and it suggests a 
particularly
limited view of what 'collaboration' and 'teamwork' means in the context
of software development. You can't force wouldbe contributors to do
differently, and ultimately you may get results that work, but its very 
inefficient
and there have been some high-profile attempted contributions to (say) 
the Linux
kernel that have been bounced after huge amounts of work, when it would have
been apparent that the design approach would never be accepted if it had 
been
reviewed up front. In some respects the BSD projects' approaches (or at 
least
aspirations) make them more attractive.  Sometimes, anyway.

It would just be nice to find a project where design is welcomed rather than
some macho 'code is king' bullshit. Would you be happy to work on a team
at work that spends so little time on design? Why should working on a
distributed volunteer team be materially different?

The question really is whether you want to encourage collaboration of
design and design review, or not?




From exarkun at divmod.com  Sun Apr  6 17:04:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 6 Apr 2008 17:04:15 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <20080406210415.6859.2078849761.divmod.quotient.26196@ohm>

Can we please drop this line of discussion?  It's not going to lead anywhere
productive.

If you want to continue to discuss how Twisted can work better on Windows,
*please* do.  No one is rejecting that discussion.  However, discussions
about how free software is a failure or whatever serve no useful purpose.

Thank you,

Jean-Paul



From itamar at itamarst.org  Sun Apr  6 18:35:49 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 06 Apr 2008 18:35:49 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
	<47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <1207521350.15231.75.camel@localhost.localdomain>


On Sun, 2008-04-06 at 21:53 +0100, James Mansion wrote:

> Well, I disagree. I find it strange that there should be such a 
> rejection of the idea
> that one can achieve some degree of concensus on a design approach before
> coding starts.

It depends how complex the problem being solved is. Many of our features
start as code-free tickets in the issue tracker. So please do open
tickets with suggestions/bug reports even if you don't have code:
http://twistedmatrix.com/





From glyph at divmod.com  Mon Apr  7 01:32:19 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 05:32:19 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
	<47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>


On 6 Apr, 08:53 pm, james at mansionfamily.plus.com wrote:
>It may be that the way that people like to 'collaborate' in open source 
>does  not
>generally extend to design review, but that's wasteful and ultimately 
>foolish

If you really insist on continuing this debate (I recommend not; I don't 
see a way it could come to a useful conclusion), I would really 
appreciate some links to software engineering research which 
conclusively verifies this claim.

As it is, all I've got here is the fact that your experience and 
knowledge of the field does not overlap mine at all.  Design review is, 
in fact, a waste of time _if you are including people who have not been 
involved in and thoroughly understand the implementation_.

Perhaps putting this in more familiar terms will help you understand why 
your wisdom is not being met with respect.  There is definitely a 
culture clash here.

In most companies, this is reflected in a hierarchy; junior developers 
are not given senior architect positions and are not included in high- 
level design reviews.  People may be hired directly at senior-level 
positions, of course, but they are _invited_ to do so; they don't just 
start showing up one day.  And junior developers do sometimes provide 
design input, but potential hires never do.

In Twisted-land, people like myself, JP Calderone, Thomas Herve, and 
Chris Armstrong can engage in this sort of high-level discussion and 
review.  We frequently do, often in the context of comments on tickets, 
sometimes at in-person meetings (PyCon was great for this kind of 
thing).  However, we do this because we have "high ranking" positions on 
the project.  We earned these ranks by contributing code.  To be blunt, 
you haven't.  Not only that: you specifically began this conversation by 
saying that you never would.  So the analogue in the world of business 
is: you're not just a guy we haven't "hired" for this project, you're a 
guy who has already said "I will never work for you under any 
circumstances".  You may understand why we don't invite you to our 
design meetings, from this perspective.

Despite how it may sound, this isn't any insult to you personally.  In 
fact, the decision to spend your Sunday nights doing something 
worthwhile rather than correcting errors in the finer points of 
Twisted's recv() error handling on win32 might be an endorsement of your 
generally sound judgment.  I know that sometimes I'd rather have been 
working out, watching a movie, spending time with my friends, or at 
least doing something billable during those hours.  But, if what you 
want is people to listen to you on our humble little project, you need 
to acquire some of the reputation currency that we trade around here.

This is compounded by the fact that Twisted, organizationally, has a 
very wary attitude towards design reviews.  Speaking from my own 
experiences: once one has reached a certain level of abstraction, it is 
*very* easy to delude oneself into believing that further consideration 
and discussion is useful work, when in fact all of the assumptions in 
the discussion are based on a subtly flawed or impossible-to-implement 
decision.  We discuss design and we think about it, but every discussion 
is followed by a prototype.

A design discussion is an unverified hypothesis.  There's no point in 
developing it into a theory until you have some further indication that 
it might be implemented.  And unless you have resources available (i.e. 
developers, ready and waiting to do more work) to perform the 
experiment, than brainstorming more hypotheses is a waste of time.



From waterbug at pangalactic.us  Mon Apr  7 01:56:44 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 07 Apr 2008 01:56:44 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>	<1206711598.21090.90.camel@localhost.localdomain>	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>	<47F16292.8060705@mansionfamily.plus.com>	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>	<47F1CA26.3010207@mansionfamily.plus.com>	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>	<47F407A0.6090209@mansionfamily.plus.com>	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>	<47F9382C.5070600@mansionfamily.plus.com>
	<20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>
Message-ID: <47F9B79C.2010909@pangalactic.us>

glyph at divmod.com wrote:
> A design discussion is an unverified hypothesis.  There's no point in 
> developing it into a theory until you have some further indication that 
> it might be implemented.  And unless you have resources available (i.e. 
> developers, ready and waiting to do more work) to perform the 
> experiment, than brainstorming more hypotheses is a waste of time.

Well said.  Or as I like to put it "not everyone appreciates that computer
science is an experimental science."  :)

Steve



From glyph at divmod.com  Mon Apr  7 03:07:21 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 07:07:21 -0000
Subject: [Twisted-Python] April 20 Sprint
Message-ID: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>


We're planning on having a sprint at the Divmod and Synthesis Studios 
offices in Cambridge, MA on April 20.

While I know that some people who might be there will probably be 
working on twisted.conch, twisted.words, and twisted.web, the main 
purpose of these sprints is to help facilitate the expansion of the 
Twisted community.

This sprint will have a little more planning than the last 3, which is 
to say "some, but not much".  I'd like to get a feel for how many people 
would like to come, and maybe even get the foundation to buy us a pizza 
or something.

I, for one, will definitely be there, of course.  If you will be too, 
please reply to this message.  I have specifically avoided mentioning 
any probable attendees by name so that you will all chime in and 
hopefully attract some more people :).

Also, if you want to host a parallel sprint in a different city, it 
would be great to keep the momentum rolling all the way across the 
globe; we could reduce review latency by having reviews taking place at 
the sprints as well, after the earlier ones have ended.  Sydney and the 
Bay Area, I'm talking to you.  The sun never sets on the Twisted empire, 
after all.  And that is why we must destroy it, so we can all get some 
rest.



From dialtone at gmail.com  Mon Apr  7 03:32:25 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 7 Apr 2008 00:32:25 -0700
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>

On Mon, Apr 7, 2008 at 12:07 AM,  <glyph at divmod.com> wrote:

>  Also, if you want to host a parallel sprint in a different city, it would
> be great to keep the momentum rolling all the way across the globe; we could
> reduce review latency by having reviews taking place at the sprints as well,
> after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
> you.  The sun never sets on the Twisted empire, after all.  And that is why
> we must destroy it, so we can all get some rest.

Sunday 20 wouldn't be bad for me. I have spare time sunday and sprinting
on twisted.web is a nice thing to do, maybe implementing HTTP 1.1 for
real rather
than simply chunking (which I still need to finish)?

If no-one wants to join me I'll sprint alone :)

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From theatilla at gmail.com  Mon Apr  7 04:43:53 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 7 Apr 2008 10:43:53 +0200
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <20080404160915.6859.614315558.divmod.quotient.25695@ohm>
References: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
	<20080404160915.6859.614315558.divmod.quotient.25695@ohm>
Message-ID: <b53c932d0804070143o5d4f9912rd7333a6f25b9df9c@mail.gmail.com>

Thanks a lot for your comments. I'm starting work on my service today
and looks like i've got everything cleared up. Let's hope it'll work
just as well as I think it should.

Yes, I remember coiterate from some questions I asked a while back.
However in this case I think I'll rely on deferToThread and the
external processing and see how that's going to go. I will probabbly
not run into performance issues for a while.

I'll take a look at the sqlalchemy thing as well, but maybe I'll just
go for simple adbapi, since I need to only run 2-3 simple queries.

Cheers.



From paulswartz at gmail.com  Mon Apr  7 07:13:51 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 7 Apr 2008 07:13:51 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <324cfb540804070413m511278d0i9586d2ff7cd2914a@mail.gmail.com>

On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>  I, for one, will definitely be there, of course.  If you will be too,
> please reply to this message.  I have specifically avoided mentioning any
> probable attendees by name so that you will all chime in and hopefully
> attract some more people :).

I too, barring some freak incident, will be in attendance.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin



From vince6 at offshore.ai  Mon Apr  7 08:13:18 2008
From: vince6 at offshore.ai (Vince Cate)
Date: Mon, 07 Apr 2008 08:13:18 -0400
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <1207570398.20910.249.camel@vinceworkstation.offshore.ai>

glyph
> Hi!  I'm the main author of Vertex.

Cool!   I will take bug reports off the list then.

  -- Vince





From radix at twistedmatrix.com  Mon Apr  7 10:08:25 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 7 Apr 2008 10:08:25 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <60ed19d40804070708v57a71559u13f50a1ebdd96c2e@mail.gmail.com>

On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>  I, for one, will definitely be there, of course.  If you will be too,
> please reply to this message.  I have specifically avoided mentioning any
> probable attendees by name so that you will all chime in and hopefully
> attract some more people :).

Count me in.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Mon Apr  7 11:22:44 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 7 Apr 2008 08:22:44 -0700 (PDT)
Subject: [Twisted-Python] Deferreds and Tasklets
In-Reply-To: <E1Jijxw-0006ai-RI@cube.twistedmatrix.com>
Message-ID: <595302.42430.qm@web34204.mail.mud.yahoo.com>

Hi Simon:

[quote]
So I am still fiddling with interesting ways to
combine stackless and twisted. Its fun, but I am
probably naively hacking! (I always seem to want to
use the deprecated code!- probably says a lot about
me?)
[/quote]

Simon I am all for fiddling! I was lucky to be around
some great fiddlers. "Adventures in Stackless Python /
Twisted Integration" is about my fiddling. One of the
things I tried to do with "Adventures" was show the
how and why's of the basic techniques. 

If there is something you don't understand, please
ask. That way I can improve the explanations. 

Some additional comments.

1) I try to learn from what others have done
concerning Stackless and Twisted - i.e., Richard Tew
and Christopher Armstrong. I found Richard's TinyMud
easier to follow than blockOn but got that both were
variations of the same approach. The main thing I took
away from there was learning how
deferred/callbacks/channels/tasklets interacted. 

Learning things on your own is cool. However sometimes
you are just re-inventing the wheel....

2) My knowledge increased when I understand more about
what Twisted and Stackless did under the hood. One
needs a descriptive model. Without that I would not
have been able to solve the deadlock/starvation issue
when making what is essentially a nested call. 

I am not sure if we are entirely out of the woods yet
there (in part I want people to punch holes in the
techniques). And there is much about Twisted that I
need to learn.

Take away, a deeper understanding prevents you from
spinning your wheels.

3) I try to combine 1 & 2, with literature surveys to
create a predictive model - how can we test? How can
we improve things? I believe there is considerable
room for improvement.

Take away, you don't want your wheels stuck in a rut.

Cheers,
Andrew








      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From exarkun at divmod.com  Mon Apr  7 12:45:23 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Apr 2008 12:45:23 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <60ed19d40804070708v57a71559u13f50a1ebdd96c2e@mail.gmail.com>
Message-ID: <20080407164523.6859.1656917669.divmod.quotient.26438@ohm>

On Mon, 7 Apr 2008 10:08:25 -0400, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>>  I, for one, will definitely be there, of course.  If you will be too,
>> please reply to this message.  I have specifically avoided mentioning any
>> probable attendees by name so that you will all chime in and hopefully
>> attract some more people :).
>
>Count me in.
>

Me too.

Jean-Paul



From andrewfr_ice at yahoo.com  Mon Apr  7 16:44:39 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 7 Apr 2008 13:44:39 -0700 (PDT)
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <E1JitlM-0000Aw-Sp@cube.twistedmatrix.com>
Message-ID: <79253.81418.qm@web34205.mail.mud.yahoo.com>

Hi Glyph and Colleagues:


>We're planning on having a sprint at the Divmod and
>Synthesis Studios  offices in Cambridge, MA on April
>20.

Boston is close and I have never been there. Not sure
how busy I am that week. Also I am not sure what a
sprint entails. Off the bat, stuff that would interest
me is writing protocols (I am interested in MySQL),
corotwine/stackless, SOA and Twisted.

Cheers,
Andrew


      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From clemesha at gmail.com  Mon Apr  7 17:07:23 2008
From: clemesha at gmail.com (alex clemesha)
Date: Mon, 7 Apr 2008 14:07:23 -0700
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
Message-ID: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>

On Mon, Apr 7, 2008 at 12:32 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> On Mon, Apr 7, 2008 at 12:07 AM,  <glyph at divmod.com> wrote:
>
>  >  Also, if you want to host a parallel sprint in a different city, it would
>  > be great to keep the momentum rolling all the way across the globe; we could
>  > reduce review latency by having reviews taking place at the sprints as well,
>  > after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
>  > you.  The sun never sets on the Twisted empire, after all.  And that is why
>  > we must destroy it, so we can all get some rest.
>
>  Sunday 20 wouldn't be bad for me. I have spare time sunday and sprinting
>  on twisted.web is a nice thing to do, maybe implementing HTTP 1.1 for
>  real rather
>  than simply chunking (which I still need to finish)?


Hi,
Would it be possible for someone to give a high level over-view
of the current state of the web/web2 code in Twisted?

I know that even pretty recently there was a thread
discussing web/web2, but it looks like (from our view, the regular users :)
that things are changing again.  In particular this ticket:

http://twistedmatrix.com/trac/ticket/3142

Which contains this comment from a core developer:
"twisted.web2 is being phased out in favor of twisted.web."

For those who have been following the web/web2 state for
some time now, they might be a little confused as this point.

I myself having been using twisted.web2 for a while now,
and I also know of several other projects that are doing the same.
I also have done a good amount of diving into the source code,
trying to maybe someday understand enough to contribute back,
and I hope to keep up with the current status as best as possible.

Any comments that point towards the current state of any of the parts
of web/web2 (what's "good", what's "bad", in the developers' opinion),
would be very appreciated.


Thanks for the great code,
Alex


>
>  If no-one wants to join me I'll sprint alone :)
>
>  --
>  Valentino Volonghi aka Dialtone
>  Now running MacOS X 10.5
>  Home Page: http://www.twisted.it
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Mon Apr  7 17:26:29 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 15:26:29 -0600
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
Message-ID: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>

>  I myself having been using twisted.web2 for a while now,
>  and I also know of several other projects that are doing the same.
>  I also have done a good amount of diving into the source code,
>  trying to maybe someday understand enough to contribute back,
>  and I hope to keep up with the current status as best as possible.
>
>  Any comments that point towards the current state of any of the parts
>  of web/web2 (what's "good", what's "bad", in the developers' opinion),
>  would be very appreciated.

Wow, we have been using web2 in ipython and this it is news to us as
well that web2 is being phased out.

Brian

>
>  Thanks for the great code,
>  Alex
>
>
>
>
>  >
>  >  If no-one wants to join me I'll sprint alone :)
>  >
>  >  --
>  >  Valentino Volonghi aka Dialtone
>  >  Now running MacOS X 10.5
>  >  Home Page: http://www.twisted.it
>  >
>  >
>  >
>  >  _______________________________________________
>  >  Twisted-Python mailing list
>  >  Twisted-Python at twistedmatrix.com
>  >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  >
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From foom at fuhm.net  Mon Apr  7 18:52:33 2008
From: foom at fuhm.net (James Y Knight)
Date: Mon, 7 Apr 2008 18:52:33 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
Message-ID: <B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>

On Apr 7, 2008, at 5:26 PM, Brian Granger wrote:
>> I myself having been using twisted.web2 for a while now,
>> and I also know of several other projects that are doing the same.
>> I also have done a good amount of diving into the source code,
>> trying to maybe someday understand enough to contribute back,
>> and I hope to keep up with the current status as best as possible.
>>
>> Any comments that point towards the current state of any of the parts
>> of web/web2 (what's "good", what's "bad", in the developers'  
>> opinion),
>> would be very appreciated.
>
> Wow, we have been using web2 in ipython and this it is news to us as
> well that web2 is being phased out.

I wish that people hadn't said that at this point, but since it's been  
said...

The problem, basically, is that I started the web2 and never finished  
it. At the current rate of development (really slow), there's a real  
fear that it'll never be finished. So, some (who actually are doing  
development on twisted...) feel that it would be better to take the  
more finished parts of web2 and re-integrate them into web, piece by  
piece.

I'm wary of this scheme, and I can't say I can see it being  
successful, but perhaps it's worth the shot.

My goal with web2 was to provide 99% compatibility with web1  
*resources*, but forgo compatibility at the other integration points.  
I still think this is a feasible goal to accomplish. The goal with the  
"phase-out" plan is to provide complete compatibility with all web1  
integration points *and* add the new features from web2 to web1. If  
this can be accomplished, great; I just can't say I see it being that  
feasible, and I certainly am having trouble thinking that it can get  
done *faster*.

But in any case, the take-home message of this alternate plan should  
not be "web2 is being phased out", but rather, "web2's improvements  
are being absorbed back into web." IMO, it remains to be seen whether  
or not that can actually happen, but I don't think current users have  
any serious reason for alarm at that prospect.

James



From waterbug at pangalactic.us  Mon Apr  7 19:26:46 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 07 Apr 2008 19:26:46 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
Message-ID: <47FAADB6.9000505@pangalactic.us>

[cross-posting to twisted-web, as this is probably of interest there ...]

James Y Knight wrote:
> On Apr 7, 2008, at 5:26 PM, Brian Granger wrote:
>>> I myself having been using twisted.web2 for a while now,
>>> and I also know of several other projects that are doing the same.
>>> I also have done a good amount of diving into the source code,
>>> trying to maybe someday understand enough to contribute back,
>>> and I hope to keep up with the current status as best as possible.
>>>
>>> Any comments that point towards the current state of any of the parts
>>> of web/web2 (what's "good", what's "bad", in the developers' opinion),
>>> would be very appreciated.
>>
>> Wow, we have been using web2 in ipython and this it is news to us as
>> well that web2 is being phased out.
> 
> I wish that people hadn't said that at this point, but since it's been 
> said...
> 
> The problem, basically, is that I started the web2 and never finished 
> it. At the current rate of development (really slow), there's a real 
> fear that it'll never be finished. So, some (who actually are doing 
> development on twisted...) feel that it would be better to take the more 
> finished parts of web2 and re-integrate them into web, piece by piece.
> 
> I'm wary of this scheme, and I can't say I can see it being successful, 
> but perhaps it's worth the shot.
> 
> My goal with web2 was to provide 99% compatibility with web1 
> *resources*, but forgo compatibility at the other integration points. I 
> still think this is a feasible goal to accomplish. The goal with the 
> "phase-out" plan is to provide complete compatibility with all web1 
> integration points *and* add the new features from web2 to web1. If this 
> can be accomplished, great; I just can't say I see it being that 
> feasible, and I certainly am having trouble thinking that it can get 
> done *faster*.
> 
> But in any case, the take-home message of this alternate plan should not 
> be "web2 is being phased out", but rather, "web2's improvements are 
> being absorbed back into web." IMO, it remains to be seen whether or not 
> that can actually happen, but I don't think current users have any 
> serious reason for alarm at that prospect.

The most important overall message would seem to be:  use web[1], since
even if web2 is not phased out, as much as possible of web2 is being
"back-ported" to web[1], and there will probably be a relatively easy
migration path to web2 if/when it is completed at some point in the
future.

No?

Steve



From glyph at divmod.com  Mon Apr  7 19:49:09 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 23:49:09 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
Message-ID: <20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>

On 09:07 pm, clemesha at gmail.com wrote:
>Would it be possible for someone to give a high level over-view
>of the current state of the web/web2 code in Twisted?

I don't have time to do a full overview of what's good, what's bad, and 
what's ugly in every module in web, web2, and nevow, but we did make 
some decisions about where things are going in the *future* at PyCon.

I should have done this already, but I just did a brief overview of the 
write-up on the wiki: http://twistedmatrix.com/trac/wiki/TwistedWebPlan

Wiki editors, please add links in the appropriate places.

Users, what do you think?  If you would like clarifications and edits to 
this plan, please ask.  More developers than just me should know what's 
going on and I hope we can all keep expanding that page to give the best 
picture of what's going on ...



From glyph at divmod.com  Mon Apr  7 19:52:13 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 23:52:13 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
Message-ID: <20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>


On 09:26 pm, ellisonbg.net at gmail.com wrote:
>Wow, we have been using web2 in ipython and this it is news to us as
>well that web2 is being phased out.

We are not going to be removing any functionality that is present in 
web2.  See the link I posted in my last response - 
http://twistedmatrix.com/trac/wiki/TwistedWebPlan - for more details.

The general idea is that all the good / new stuff in twisted.web2 will 
be made available somewhere in twisted.web.  All the bad, broken, or 
unfinished stuff will be removed - but it's doubtful you even would have 
been able to use this stuff in ipython; and if you did, then I'm sure 
you'll be happy to have a version that actually works :).

The thing that is being phased out is the twisted.web2 *namespace*, not 
all of the code.



From jml at mumak.net  Mon Apr  7 21:15:57 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Apr 2008 11:15:57 +1000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>

On Mon, Apr 7, 2008 at 5:07 PM,  <glyph at divmod.com> wrote:
>
>  We're planning on having a sprint at the Divmod and Synthesis Studios
> offices in Cambridge, MA on April 20.
>
>  While I know that some people who might be there will probably be working
> on twisted.conch, twisted.words, and twisted.web, the main purpose of these
> sprints is to help facilitate the expansion of the Twisted community.
>

As usual, I'd like to work on Trial and maybe Conch.

Advance planning would be good so we can get those pesky design /
I-have-fundamental-issues-with-your-implementation discussions out of
the way. Well, as much as is possible.

>  Also, if you want to host a parallel sprint in a different city, it would
> be great to keep the momentum rolling all the way across the globe; we could
> reduce review latency by having reviews taking place at the sprints as well,
> after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
> you.  The sun never sets on the Twisted empire, after all.  And that is why
> we must destroy it, so we can all get some rest.
>

A parallel sprint is unlikely, it'll be a slightly-skewed sprint at
best, given the timezones:
http://www.timeanddate.com/worldclock/meetingtime.html?day=20&month=4&year=2008&p1=43&p2=240

I could be persuaded to host / attend a Sydney sprint on April 19th.
Any chance of the foundation buying *us* pizza?

jml



From ellisonbg.net at gmail.com  Mon Apr  7 22:38:40 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 20:38:40 -0600
Subject: [Twisted-web] Re: [Twisted-Python] April 20 Sprint
In-Reply-To: <47FAADB6.9000505@pangalactic.us>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
	<47FAADB6.9000505@pangalactic.us>
Message-ID: <6ce0ac130804071938g4499f152qc66bd2b0a45398be@mail.gmail.com>

>  The most important overall message would seem to be:  use web[1], since
>  even if web2 is not phased out, as much as possible of web2 is being
>  "back-ported" to web[1], and there will probably be a relatively easy
>  migration path to web2 if/when it is completed at some point in the
>  future.

For us the only reason we moved to web2 was the http1.1 support.
Until web has that implemented, we will have a tough time moing back
to web2.  But at least we know the direction things are headed.

Brian

>  No?
>
>  Steve
>
>  _______________________________________________
>  Twisted-web mailing list
>  Twisted-web at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From ellisonbg.net at gmail.com  Mon Apr  7 22:47:34 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 20:47:34 -0600
Subject: [Twisted-web] Re: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>
Message-ID: <6ce0ac130804071947t294d3f5dq86ad69f07091cb62@mail.gmail.com>

>  I don't have time to do a full overview of what's good, what's bad, and
> what's ugly in every module in web, web2, and nevow, but we did make some
> decisions about where things are going in the *future* at PyCon.

This is great news.  I think the decision to merge things in web2 back
into web is a good one as well.

>  I should have done this already, but I just did a brief overview of the
> write-up on the wiki: http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
>  Wiki editors, please add links in the appropriate places.
>
>  Users, what do you think?  If you would like clarifications and edits to
> this plan, please ask.  More developers than just me should know what's
> going on and I hope we can all keep expanding that page to give the best
> picture of what's going on ...
>
>  _______________________________________________
>  Twisted-web mailing list
>  Twisted-web at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From glyph at divmod.com  Mon Apr  7 23:57:48 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Apr 2008 03:57:48 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>
Message-ID: <20080408035748.21558.1434515203.divmod.xquotient.10501@joule.divmod.com>

On 01:15 am, jml at mumak.net wrote:
>I could be persuaded to host / attend a Sydney sprint on April 19th.
>Any chance of the foundation buying *us* pizza?

We'll see.  I'll be happy if I can figure out how to get food on *one* 
continent, though. ;-).



From teemu.harju at gmail.com  Tue Apr  8 07:28:45 2008
From: teemu.harju at gmail.com (Teemu Harju)
Date: Tue, 8 Apr 2008 14:28:45 +0300
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
Message-ID: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>

Hi,
I'm kind of a newbie in what comes to using Twisted and I'm stuck with a
problem that I cannot seem to solve.

My problem is that I'm experimenting with "trial" to be able to test my
code. (I've heard that it is a wise thing to do ;-)). What I have is a
simple HTTP resource that allows POSTing data. I made this example to
illustrate my problem...

import urllib

from twisted.internet import reactor
from twisted.web import resource, server, client, error
from twisted.trial import unittest

class TestResource(resource.Resource):

    def render_POST(self, request):
        return str(request.args)


class SimpleResourceTest(unittest.TestCase):

    def _listen(self, site):
        return reactor.listenTCP(0, site, interface="127.0.0.1")

    def setUp(self):
        r = resource.Resource()
        r.putChild("test", TestResource())
        site = server.Site(r, timeout=None)
        self.port = self._listen(site)
        self.portno = self.port.getHost().port

    def tearDown(self):
        if self.port:
            return self.port.stopListening()

    def getURL(self, path):
        return "http://127.0.0.1:%d/%s" % (self.portno, path)

    def test_postdata(self):
        d = client.getPage(self.getURL("test"), method="POST",
                           postdata=urllib.urlencode({"test": "data"}))
        d.addCallback(self.failIfEqual, "{}")
        return d


I used some of the unittests in Twisted Web as an example and at least I
think I've got this right. However, as you can see if you run this, the test
fails. Which means that the request.args dictionary is empty. However, there
should be something since I've set the postdata parameter on the
client.getPage() method. I would really appreciate all the help here since I
cannot figure out where the postdata disappears.

Regards,

Teemu

-- 
Teemu Harju

email/jabber: teemu.harju at gmail.com
blog: http://www.teemuharju.net

~~ "A computer is like air conditioning: it becomes useless when you open
windows." ~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080408/e20d9ec3/attachment.htm 

From wthie at thiengineering.ch  Tue Apr  8 09:29:47 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 08 Apr 2008 15:29:47 +0200
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
Message-ID: <47FB734B.6000007@thiengineering.ch>

Just read your TwistedWebPlan and it sounds better than what I was able 
to dream up during my sufferings.

I know that without all the foundation work going into twisted and nevow 
I would never have been able to build a stable running production game 
server. So it's good to know in what direction things evolve!

A big 'thank you' (drawing my hat and bowing)!

Werner

glyph at divmod.com wrote:
...snip
> http://twistedmatrix.com/trac/wiki/TwistedWebPlan - for more details.
snip...



From theatilla at gmail.com  Tue Apr  8 14:40:17 2008
From: theatilla at gmail.com (Atilla)
Date: Tue, 8 Apr 2008 20:40:17 +0200
Subject: [Twisted-Python] failures, errbacks and exception handling
Message-ID: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>

Im a little confused when it comes to handling some errors in twisted.
More specifically - when it comes to processing failures that are
raised in adbapi.

Now - when runInteraction succeeds, all is ok and things are commited,
that's nice and clean. When it raises an error, I can do two things -
either wrap my calls inside the callable passes to runInteraction in
Try:Except, or attach an errback.

I'm not exactly sure which one to take. I only need to catch specific
exceptions - Mysql OperationalError (timeouts and such, in case I want
to retry). Everything else is critical and should log & abort.

The way I understood it, I should attach an errback where I call
trap() on the passed Failure. So I'd do like

handleError(falure):
  error = failure.trap(OperationalError)
  if error:
    log.err(error)

myCall.addErrback(handleError)

As far as I get it, if the error is different (say, syntax one) it'll
be propagated. However afteri add the trap call() nothing else gets
past that handleError, no Unhandled Errors are logged, and my error
object contains nothing. I wonder what am I missing here.



From drew.smathers at gmail.com  Tue Apr  8 16:18:30 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 8 Apr 2008 16:18:30 -0400
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
Message-ID: <368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:40 PM, Atilla <theatilla at gmail.com> wrote:
> Im a little confused when it comes to handling some errors in twisted.
>  More specifically - when it comes to processing failures that are
>  raised in adbapi.
>
>  Now - when runInteraction succeeds, all is ok and things are commited,
>  that's nice and clean. When it raises an error, I can do two things -
>  either wrap my calls inside the callable passes to runInteraction in
>  Try:Except, or attach an errback.
>
>  I'm not exactly sure which one to take. I only need to catch specific
>  exceptions - Mysql OperationalError (timeouts and such, in case I want
>  to retry). Everything else is critical and should log & abort.
>
>  The way I understood it, I should attach an errback where I call
>  trap() on the passed Failure. So I'd do like
>
>  handleError(falure):
>   error = failure.trap(OperationalError)
>   if error:
>     log.err(error)
>
>  myCall.addErrback(handleError)
>
>  As far as I get it, if the error is different (say, syntax one) it'll
>  be propagated. However afteri add the trap call() nothing else gets
>  past that handleError, no Unhandled Errors are logged, and my error
>  object contains nothing. I wonder what am I missing here.
>

That really depends on what you want to do.  If you just want to log
the exception (IndexError, etc) that you're not trapping, consider
creating a last ditch error handler like:

def crash(reason):
    log.err('ERROR: %s' % reason)
    ... Do the rollback or whatever else ...
    reason.printTraceback()

And add the above to your errback chain:

myCall.addErrback(handleError).addErrback(crash)


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From glyph at divmod.com  Tue Apr  8 17:01:02 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Apr 2008 21:01:02 -0000
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <47FB734B.6000007@thiengineering.ch>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
Message-ID: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>


On 01:29 pm, wthie at thiengineering.ch wrote:
>Just read your TwistedWebPlan and it sounds better than what I was able 
>to dream up during my sufferings.
>
>I know that without all the foundation work going into twisted and 
>nevow I would never have been able to build a stable running production 
>game server. So it's good to know in what direction things evolve!
>
>A big 'thank you' (drawing my hat and bowing)!

No problem!  We should have done this a long time ago.

The biggest thanks, of course, would be simply to submit patches for 
twisted.web and help us migrate web2's "greatest hits" back into the 
twisted.web server :).



From grant at osafoundation.org  Tue Apr  8 17:12:18 2008
From: grant at osafoundation.org (Grant Baillie)
Date: Tue, 8 Apr 2008 14:12:18 -0700
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
In-Reply-To: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
References: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
Message-ID: <C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>

On 8 Apr, 2008, at 04:28, Teemu Harju wrote:

> ...
>

> My problem is that I'm experimenting with "trial" to be able to test  
> my code. (I've heard that it is a wise thing to do ;-)). What I have  
> is a simple HTTP resource that allows POSTing data. I made this  
> example to illustrate my problem...
>
> ...

>

>     def test_postdata(self):
>         d = client.getPage(self.getURL("test"), method="POST",
>                            postdata=urllib.urlencode({"test":  
> "data"}))
>         d.addCallback(self.failIfEqual, "{}")
>         return d
>

You need to specify a Content-Type in your POST request, e.g.:

         d = client.getPage(self.getURL("test"), method="POST",
                            postdata=urllib.urlencode({"test": "data"}),
                            headers={"Content-Type": "application/x- 
www-form-urlencoded"})

Otherwise, your POST request is sent as text/html, and the HTTP server  
code won't know to parse args out of the request body.

(Probably this should have gone to twisted-web rather than twisted- 
python, since in the end it wasn't really about trial, but http ;).

--Grant





From clemesha at gmail.com  Tue Apr  8 18:03:08 2008
From: clemesha at gmail.com (alex clemesha)
Date: Tue, 8 Apr 2008 15:03:08 -0700
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <d272f0690804081503u2c0d82fbs892668336a162e26@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:01 PM,  <glyph at divmod.com> wrote:
>
>  On 01:29 pm, wthie at thiengineering.ch wrote:
>
> > Just read your TwistedWebPlan and it sounds better than what I was able to
> dream up during my sufferings.
> >
> > I know that without all the foundation work going into twisted and nevow I
> would never have been able to build a stable running production game server.
> So it's good to know in what direction things evolve!
> >
> > A big 'thank you' (drawing my hat and bowing)!
> >
>
>  No problem!  We should have done this a long time ago.
>
>  The biggest thanks, of course, would be simply to submit patches for
> twisted.web and help us migrate web2's "greatest hits" back into the
> twisted.web server :).
>
Yes, the TwistedWebPlan looks like a Good Thing.

One question though, what are the "greatest hits" of web2 in the
developers opinions?
I think this is an important step in making it possible for people (non experts)
to efficiently target what is "good", so that they might have a chance
to contribute patches efficiently.

I've looked through the web/web2 source code and all the unittests enough to
know that mostly the "issues" are a  "problem of perception" (see
http://twistedmatrix.com/trac/wiki/TwistedWebPlan).
So I bet more communication (on the wiki) would help prevent further
problems of this nature.

A quick "brain dump" of these "good" and "bad" pieces on some wiki page
 would probably get some momentum going!

Thanks,
Alex



>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From phil at bubblehouse.org  Tue Apr  8 20:03:40 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 08 Apr 2008 20:03:40 -0400
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <188188A4-C4EE-4999-96E7-26C7E4E009CC@bubblehouse.org>

On Apr 8, 2008, at 5:01 PM, glyph at divmod.com wrote:
> On 01:29 pm, wthie at thiengineering.ch wrote:
>> A big 'thank you' (drawing my hat and bowing)!
>
> No problem!  We should have done this a long time ago.
>
> The biggest thanks, of course, would be simply to submit patches  
> for twisted.web and help us migrate web2's "greatest hits" back  
> into the twisted.web server :).

Since we're, you know, talking about it...

I'd really love it if someone could help me with my web1 port of  
web2's WSGI module. It's completely functional, and no longer has any  
dependencies on web2, but it needs unit tests.

	http://twistedmatrix.com/trac/ticket/2753

I started working on imitating the test for the web2 version (twisted/ 
web2/test/test_wsgi.py), but it's been idling in my workspace for  
some time, so I thought I'd just put a feeler out for anyone willing  
to give it a try, or even (gasp!) write some tests. ;-)

I am using this in a production site, so I have great faith in it at  
least not having any show-stopper issues, but I just haven't gotten a  
chance to finish the tests.

-phil



From jml at mumak.net  Tue Apr  8 20:09:23 2008
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 9 Apr 2008 10:09:23 +1000
Subject: Proposed tracker tag (was Re: [Twisted-web] Re: [Twisted-Python]
	Thumbs up for TwistedWebPlan)
Message-ID: <d06a5cd30804081709k507f850ay12d4bae06881deb0@mail.gmail.com>

On Wed, Apr 9, 2008 at 10:03 AM, Phil Christensen <phil at bubblehouse.org> wrote:
>  I'd really love it if someone could help me with my web1 port of web2's
> WSGI module. It's completely functional, and no longer has any dependencies
> on web2, but it needs unit tests.
>
>         http://twistedmatrix.com/trac/ticket/2753
>
>  I started working on imitating the test for the web2 version
> (twisted/web2/test/test_wsgi.py), but it's been idling in my workspace for
> some time, so I thought I'd just put a feeler out for anyone willing to give
> it a try, or even (gasp!) write some tests. ;-)
>

I think a few tickets fall into this category. They have patches that
fix code, but for one reason or another they lack tests.

Could we, as a policy, add a 'patch' tag to such tickets when we see them?

jml



From teemu.harju at gmail.com  Tue Apr  8 22:15:36 2008
From: teemu.harju at gmail.com (Teemu Harju)
Date: Wed, 9 Apr 2008 05:15:36 +0300
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
In-Reply-To: <C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>
References: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
	<C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>
Message-ID: <96274d630804081915p35ddebd4q48bb216e96cc38a8@mail.gmail.com>

Thanks a lot for the quick reply!
I was kind of struggling in my mind about whether to post to twisted-python
or twisted-web list and I guess I chose the wrong one because I assumed that
the problem was in they way I was using trial. Anyways, thanks again and
Twisted is awesome. ;-)

- Teemu

On Wed, Apr 9, 2008 at 12:12 AM, Grant Baillie <grant at osafoundation.org>
wrote:

> On 8 Apr, 2008, at 04:28, Teemu Harju wrote:
>
>  ...
> >
> >
>  My problem is that I'm experimenting with "trial" to be able to test my
> > code. (I've heard that it is a wise thing to do ;-)). What I have is a
> > simple HTTP resource that allows POSTing data. I made this example to
> > illustrate my problem...
> >
> > ...
> >
>
>
> >
>     def test_postdata(self):
> >        d = client.getPage(self.getURL("test"), method="POST",
> >                           postdata=urllib.urlencode({"test": "data"}))
> >        d.addCallback(self.failIfEqual, "{}")
> >        return d
> >
> >
> You need to specify a Content-Type in your POST request, e.g.:
>
>        d = client.getPage(self.getURL("test"), method="POST",
>                           postdata=urllib.urlencode({"test": "data"}),
>                           headers={"Content-Type":
> "application/x-www-form-urlencoded"})
>
> Otherwise, your POST request is sent as text/html, and the HTTP server
> code won't know to parse args out of the request body.
>
> (Probably this should have gone to twisted-web rather than twisted-python,
> since in the end it wasn't really about trial, but http ;).
>
> --Grant
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Teemu Harju

email/jabber: teemu.harju at gmail.com
blog: http://www.teemuharju.net

~~ "A computer is like air conditioning: it becomes useless when you open
windows." ~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080409/12fb6e03/attachment.htm 

From nathan.stocks at gmail.com  Wed Apr  9 01:42:51 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 8 Apr 2008 23:42:51 -0600
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
Message-ID: <96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  def crash(reason):
>     log.err('ERROR: %s' % reason)
>     ... Do the rollback or whatever else ...
>     reason.printTraceback()

Just a note on the rollback: if there's an error, the adbapi run*
methods roll the transaction back before sending the error to the
errback -- so I don't know of anything left to rollback in the
errback.

~ Nathan



From theatilla at gmail.com  Wed Apr  9 04:20:07 2008
From: theatilla at gmail.com (Atilla)
Date: Wed, 9 Apr 2008 10:20:07 +0200
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
	<96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
Message-ID: <b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>

On 09/04/2008, Nathan <nathan.stocks at gmail.com> wrote:
> On Tue, Apr 8, 2008 at 2:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  >  def crash(reason):
>  >     log.err('ERROR: %s' % reason)
>  >     ... Do the rollback or whatever else ...
>  >     reason.printTraceback()
>
>
> Just a note on the rollback: if there's an error, the adbapi run*
>  methods roll the transaction back before sending the error to the
>  errback -- so I don't know of anything left to rollback in the
>  errback.
>
>
>  ~ Nathan

Yes, there's no need to rollback anything. I just want to attempt a
retry on the transaction, in cases of lock timeouts or deadlocks,
since there'll be the possibility of running clashing transactions at
the same time.

I still can't figure out how to make failure.trap() to work correctly
for me however. I'm trying to trap a mysqldb Operational exception,
but although the error is not further propagated after the trap call,
I get nothng in the return value.



From p.mayers at imperial.ac.uk  Wed Apr  9 05:42:22 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 09 Apr 2008 10:42:22 +0100
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <47FC8F7E.1010304@imperial.ac.uk>

glyph at divmod.com wrote:
> 
> On 01:29 pm, wthie at thiengineering.ch wrote:
>> Just read your TwistedWebPlan and it sounds better than what I was 
>> able to dream up during my sufferings.
>>
>> I know that without all the foundation work going into twisted and 
>> nevow I would never have been able to build a stable running 
>> production game server. So it's good to know in what direction things 
>> evolve!
>>
>> A big 'thank you' (drawing my hat and bowing)!
> 
> No problem!  We should have done this a long time ago.
> 
> The biggest thanks, of course, would be simply to submit patches for 
> twisted.web and help us migrate web2's "greatest hits" back into the 
> twisted.web server :).

Is there a trac report with tickets for the desired work(s)? Or a list 
of things that we can open trac tickets on?



From sipickles at hotmail.com  Wed Apr  9 11:13:34 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 09 Apr 2008 16:13:34 +0100
Subject: [Twisted-Python] Re: [Stackless] Deferreds and Tasklets
In-Reply-To: <E84ABA78-F84E-4235-807C-794EA564072A@gmail.com>
References: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
	<E84ABA78-F84E-4235-807C-794EA564072A@gmail.com>
Message-ID: <BAY114-DAV59164D5437691FC2E6001BEED0@phx.gbl>



Carlos Eduardo de Paula wrote:
> Hi Simon,
>
> Have you looked at the examples project? I made a small example using 
> PB in a producer/consumer demo where the producers and consumers 
> access a shared pool in a server using PB.
>
> You can see it here:
>
> http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

Oh yeah! This is really great. I'd seen this a while back, but forget it 
was combining stackless/twisted so nicely!

Thanks!
>
> http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/twistedProdCon-Server.py 
>
> http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/twistedProdCon-Client.py 
>
>
> Regards,
>
> Carlos
>
>
> On 06/04/2008, at 13:42, Simon Pickles wrote:
>
>> So I am still fiddling with interesting ways to combine stackless and
>> twisted. Its fun, but I am probably naively hacking! (I always seem to
>> want to use the deprecated code!- probably says a lot about me?)
>>
>> I'm using Perspective Broker to do remote calls to an app running
>> Twisted-Stackless. PB is positively brilliant, btw.
>>
>> So say the a remote caller wants to get data from my app. It calls
>> remote_GetData() in my PB app, which uses the actor model(each object
>> has a channel.receive() running in its own tasklet).
>>
>> remote_GetData() has to send a message thru a stackless.channel() to get
>> the required data, then it must stackless.schedule()
>>
>> Now it waits for the result to arrive at its own channel.receive(),
>> which then needs to be passed back as the return value of 
>> remote_GetData().
>>
>> Is this possible?
>>
>> Perhaps like this:
>>
>> from twisted.spread import pb
>> from twisted.internet import reactor
>> import stackless
>>
>> dbRx = stackless.channel()
>> pbRx = stackless.channel()
>>
>> class DataSource:
>>   def Listen(self):
>>       while 1:
>>           msg = dbrx.receive() # a channel will arrive here
>>           msg.send(42)
>>           stackless.schedule()
>>   def __init__(self):
>>       stackless.tasklet(self.Listen)()
>>
>>
>> class pbBroker(pb.Referenceable):
>>   def remote_GetData(self):
>>       dbRx.send(pbRx)
>>       result = pbRx.receive()
>>       # return 42 to remote caller thru pb
>>       return result
>>
>> This isn't ideal since I don't want pbBroker to block during the
>> receive. I'd like it to closer resemble the Listen loop of the first
>> class, so other objects can talk to pbBroker while it is waiting. Maybe
>> like this:
>>
>> class pbBroker(pb.Referenceable):
>>   def Listen(self):
>>       while 1:
>>           msg = self.rx.receive()
>>           # do stuff with msg from other local objects
>>           stackless.schedule()
>>   def __init__(self):
>>       self.rx = stackless.channel()
>>       stackless.tasklet(self.Listen)()
>>   def remote_GetData(self):
>>       ch = stackless.channel()
>>       dbRx.send(ch)
>>       # can block since its a dedicated channel
>>       result = ch.receive()
>>       # return 42 to remote caller thru pb
>>       return result
>> I guess the same problem arise when remote_GetData() has to use a
>> deferred too.
>>
>> from twisted.enterprise import adbapi
>> dbPool = adbapi.ConnectionPool("MySQLdb", db="db", user="user",
>> passwd="pw")
>>
>> class pbBroker(pb.Referenceable):
>>   def remote_GetDeferredData(self):
>>       d = dbPool.runInteraction(DoQuery, "SELECT * FROM users") #
>> DoQuery just wraps a query with try/except
>>       d.addCallback(self.GetDeferredData_Success)
>>
>>   def GetDeferredData_Success(self, result):
>>       # return to remote caller thru pb
>>       return result   ## WRONG
>>
>> How can I return a value for a remote_* call when I only get that value
>> thru another callback?
>>
>> Sorry its a long and confusing one!
>>
>> Simon
>>
>>
>> -- 
>> Linux user #458601 - http://counter.li.org.
>>
>>
>>
>>
>>
>> -- 
>> Linux user #458601 - http://counter.li.org.
>>
>>
>>
>>
>> _______________________________________________
>> Stackless mailing list
>> Stackless at stackless.com
>> http://www.stackless.com/mailman/listinfo/stackless
>
>
>

-- 
Linux Counter: User# 424693 






From nathan.stocks at gmail.com  Wed Apr  9 12:30:33 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 9 Apr 2008 10:30:33 -0600
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
	<96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
	<b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>
Message-ID: <96c9d6a80804090930q6bef76co37ef694af384d32b@mail.gmail.com>

On Wed, Apr 9, 2008 at 2:20 AM, Atilla <theatilla at gmail.com> wrote:
>  I still can't figure out how to make failure.trap() to work correctly
>  for me however. I'm trying to trap a mysqldb Operational exception,
>  but although the error is not further propagated after the trap call,
>  I get nothng in the return value.

I'm only two-months into twisted myself, and have never used trap(),
but from reading the api docs here:

http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html#trap

...it would seem that calling trap causes it to immediately
raise-to-the-next-errback anything you _don't_ trap.  Perhaps that's
the problem you're experiencing?  (Just a stab in the dark)

~ Nathan



From weiwei at baosight.com  Wed Apr  9 23:20:23 2008
From: weiwei at baosight.com (weiwei)
Date: Thu, 10 Apr 2008 11:20:23 +0800
Subject: [Twisted-Python] how to choose reactor in unix?
Message-ID: <001a01c89ab9$d0cd6c90$5a22190a@wwei>

hi,all!

When I develop a twisted program,which reactor is the best? 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080410/f62baf45/attachment.htm 

From adelagon at gmail.com  Wed Apr  9 23:32:23 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Thu, 10 Apr 2008 11:32:23 +0800
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
References: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
Message-ID: <7a01f6c00804092032v5b6b3e16u7b4dd7bd259b71ea@mail.gmail.com>

Read about the epollreactor

On Thu, Apr 10, 2008 at 11:20 AM, weiwei <weiwei at baosight.com> wrote:

>  hi,all!
>
> When I develop a twisted program,which reactor is the best?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080410/576f3426/attachment.htm 

From exarkun at divmod.com  Thu Apr 10 07:53:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 07:53:19 -0400
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
Message-ID: <20080410115319.6859.382014641.divmod.quotient.27515@ohm>

On Thu, 10 Apr 2008 11:20:23 +0800, weiwei <weiwei at baosight.com> wrote:
>hi,all!
>
>When I develop a twisted program,which reactor is the best?
>

Reactors present a uniform interface.  When you develop a Twisted program,
it rarely makes any difference which reactor you use.  When you deploy a
Twisted program, the target platform and scalability concerns should
to the choice.  If you use `twistd?, then all you have to do to use a
different reactor is pass a different value for the `--reactor? option.
In most cases, your actual application shouldn't know or care which reactor
is being used.

Jean-Paul



From roland.hedberg at adm.umu.se  Thu Apr 10 13:37:33 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Thu, 10 Apr 2008 19:37:33 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
Message-ID: <47FE505D.1030806@adm.umu.se>

Hi!

I'm building a Twisted based system where the basic components are 
nodes. Information flows between these nodes and one of the transport 
protocols that can be used are HTTP/HTTPS.

Now, both servers and clients has certificates and hostname verification 
is a must. Because of that I'd love to be able to access the 
subjectAltName extension.

I started with pyOpenSSL and I was very happy with that until I realized 
that there is no support for the subjectAltName (SAN) extension in 
pyOpenSSL.

Over to M2Crypto, which has support for SAN, but now I can not get 
anything to work. I guess there is some mismatch between the interfaces 
to the Context class provided by M2Crypto and pyOpenSSL. Because I just 
imported SSL from M2Crypto instead of OpenSSL and left the rest of the 
code more or less intact.

The error I get is:

  File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/internet/ssl.py", 
line 169, in createInternetSocket
  return SSL.Connection(self.ctxFactory.getContext(), sock)
  TypeError: Connection() argument 1 must be Context, not instance

So, if it possible to use M2Crypto together with Twisted ?
If so, can someone tell me what I might have missed ?

-- Roland



From exarkun at divmod.com  Thu Apr 10 13:46:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 13:46:25 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <47FE505D.1030806@adm.umu.se>
Message-ID: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>

On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>
> [snip]
>
>The error I get is:
>
>  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>  TypeError: Connection() argument 1 must be Context, not instance
>
>So, if it possible to use M2Crypto together with Twisted ?
>If so, can someone tell me what I might have missed ?
>

M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
instead of pyOpenSSL, you should use the APIs M2Crypto provides.

I can't find the M2Crypto documentation in 15 seconds of googling, but
here's some random internet stuff that seems to use the APIs you are
looking for:

  https://bosshog.lbl.gov/repos/benchmarks/perfcounter/cfg/m2crypto-server-config.tac

Jean-Paul



From ellisonbg.net at gmail.com  Thu Apr 10 14:37:59 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 12:37:59 -0600
Subject: [Twisted-Python] Problems with trial in 8.0.1
Message-ID: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>

Hi,

I just got around to installing twisted 8.0.1 (from the tarball) and I
see the following when I run

trial twisted

Traceback (most recent call last):
  File "/usr/local/bin/trial", line 5, in <module>
    pkg_resources.run_script('Twisted==8.0.1', 'trial')
  File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
line 448, in run_script

  File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
line 1160, in run_script
    execfile(script_filename, namespace, namespace)
pkg_resources.ResolutionError: No script named 'trial'

I did not use setuptools to install twisted (just plain old python
setup.py install).  Any ideas?

Brian



From warner at lothar.com  Thu Apr 10 15:57:24 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 10 Apr 2008 12:57:24 -0700
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon Twisted?
Message-ID: <20080410125724.5d3bdd43@fluxx.allmydata.com>

We've hit a problem in the Tahoe packaging scheme: we kind of want to use the
setuptools install_requires= feature to declare that Tahoe depends upon
Twisted (as well as other things). This allows someone to type "easy_install
allmydata-tahoe" and get everything built for them. It also allows our build
process to download and build anything that the user doesn't already have on
their system, making the build process much easier.

The trouble that we've run into is that various flavors of linux have made
different decisions about which setuptools "distribution" names to use. (Note
that these "distribution names" are the name= arguments to setup(), as
opposed to the python package names like or module names. Distribution names
tend to map to debian package names.)

http://allmydata.org/trac/tahoe/ticket/378 has more details, but basically
Ubuntu is shipping .egg_info data that declares that the "Twisted"
distribution is installed, whereas debian sid is shipping data that says
"Twisted-Core" is installed. Since the setuptools dependency syntax is not
rich enough to provide alternatives, the Tahoe setup.py is forced to choose
between depending upon "Twisted" or upon "Twisted-Core".

The drawback for choosing the opposite of the target platform is that users
on that platform will find their tahoe builds downloading and building the
whole Twisted-8.0.1 tarball, despite having a perfectly functional
twisted-2.5.0 installation already present. This is annoying.

We haven't figured out a good resolution to this problem yet. The best answer
I can think of would be to change the tahoe setup.py script to change the
dependencies that it declares based upon what is currently installed. This
would be a bit wonky but might avoid spurious download+builds. Another answer
might be for the debian 'python-twisted' metapackage (which depends upon
python-twisted-core, python-twisted-web, etc) to provide an .egg-info that
claims to represent the 'Twisted' distribution, but I can imagine problems
with that. Another possibility would be for the Ubuntu python-twisted-core
package to install two .egg-info files, the one for 'Twisted' that they're
already doing, and another for 'Twisted-Core'.. if that were the case, we
could have Tahoe depend upon 'Twisted-Core ' and 'Twisted-Web' and be done
with it.

So, no answers, but we're bringing up the issue in case anyone else has run
into a similar problem, or has some bright ideas on the subject.

cheers,
 -Brian



From radix at twistedmatrix.com  Thu Apr 10 16:17:04 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 Apr 2008 16:17:04 -0400
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon
	Twisted?
In-Reply-To: <20080410125724.5d3bdd43@fluxx.allmydata.com>
References: <20080410125724.5d3bdd43@fluxx.allmydata.com>
Message-ID: <60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>

On Thu, Apr 10, 2008 at 3:57 PM, Brian Warner <warner at lothar.com> wrote:

>  http://allmydata.org/trac/tahoe/ticket/378 has more details, but basically
>  Ubuntu is shipping .egg_info data that declares that the "Twisted"
>  distribution is installed, whereas debian sid is shipping data that says
>  "Twisted-Core" is installed. Since the setuptools dependency syntax is not
>  rich enough to provide alternatives, the Tahoe setup.py is forced to choose
>  between depending upon "Twisted" or upon "Twisted-Core".

[stuff about how somebody distributes an .egg for Twisted-Core]

This may not be helpful, but it is additional data: Twisted
subprojects are not easy_installable in any reasonable way. The only
thing that it makes sense to easy_install right now is "Twisted". This
has to do with the way easy_install attempts to install non-root
packages. Anyway, maybe it makes sense to depend on "Twisted Core"
sometimes to workaround buggy Debian cruft, but bad things will happen
if this results in easy_install ever attempting to download Twisted
Core as opposed to Twisted.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Thu Apr 10 16:19:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 Apr 2008 16:19:02 -0400
Subject: [Twisted-Python] Problems with trial in 8.0.1
In-Reply-To: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
References: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
Message-ID: <60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>

On Thu, Apr 10, 2008 at 2:37 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
>  trial twisted
>
>  Traceback (most recent call last):
>   File "/usr/local/bin/trial", line 5, in <module>
>     pkg_resources.run_script('Twisted==8.0.1', 'trial')
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  line 448, in run_script
>
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  line 1160, in run_script
>     execfile(script_filename, namespace, namespace)
>  pkg_resources.ResolutionError: No script named 'trial'
>
>  I did not use setuptools to install twisted (just plain old python
>  setup.py install).  Any ideas?

I have the feeling that this has something to do with the broken
half-Twisted that Apple included in their OS. I can't offer any more
help than that off the bat, though.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From ellisonbg.net at gmail.com  Thu Apr 10 16:44:45 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 14:44:45 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
Message-ID: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>

Hi,

Earlier today I posted about a problem with trial.  I reinstalled
8.0.1 and the origianl problem has gone away.  Now I get the following
error.  It appears that trial is trying to write something to the
plugins directory.  But that doesn't (and shouldn't) have the correct
write permissions.  I can run trial with as sudo, but not as a regular
user.  Isn't it bad practice to rely on being able to write to
site-packages at runtime.  Shouldn't such things do into a .twisted
directory or something like that?

Brian

Here is what I get

vpn14:~ bgranger$ trial ipython1
Traceback (most recent call last):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/scripts/trial.py",
line 293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/scripts/trial.py",
line 279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugin.py",
line 200, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugin.py",
line 179, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/filepath.py",
line 540, in setContent
    sib.open('w').write(content)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/filepath.py",
line 369, in open
    return open(self.path, mode+'b')
exceptions.IOError: [Errno 13] Permission denied:
'/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugins/dropin.cache.new'



From ellisonbg.net at gmail.com  Thu Apr 10 16:46:33 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 14:46:33 -0600
Subject: [Twisted-Python] Problems with trial in 8.0.1
In-Reply-To: <60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>
References: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
	<60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>
Message-ID: <6ce0ac130804101346y6ebff2c5qad7f7fdc287a13eb@mail.gmail.com>

I cleaned things out and did a complete reinstall (of twisted 8.0.1)
and this problem went away.  But there is another problem with trial
trying to write to my site-packages dir.  The details of this are in a
new post i just sent off.

Brian

On Thu, Apr 10, 2008 at 2:19 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Thu, Apr 10, 2008 at 2:37 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
>  >  trial twisted
>  >
>  >  Traceback (most recent call last):
>  >   File "/usr/local/bin/trial", line 5, in <module>
>  >     pkg_resources.run_script('Twisted==8.0.1', 'trial')
>  >   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  >  line 448, in run_script
>  >
>  >   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  >  line 1160, in run_script
>  >     execfile(script_filename, namespace, namespace)
>  >  pkg_resources.ResolutionError: No script named 'trial'
>  >
>  >  I did not use setuptools to install twisted (just plain old python
>  >  setup.py install).  Any ideas?
>
>  I have the feeling that this has something to do with the broken
>  half-Twisted that Apple included in their OS. I can't offer any more
>  help than that off the bat, though.
>
>  --
>  Christopher Armstrong
>  International Man of Twistery
>  http://radix.twistedmatrix.com/
>  http://twistedmatrix.com/
>  http://canonical.com/
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Thu Apr 10 16:49:24 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 16:49:24 -0400
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
Message-ID: <20080410204924.6859.1140123273.divmod.quotient.27685@ohm>

On Thu, 10 Apr 2008 14:44:45 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>Earlier today I posted about a problem with trial.  I reinstalled
>8.0.1 and the origianl problem has gone away.  Now I get the following
>error.  It appears that trial is trying to write something to the
>plugins directory.  But that doesn't (and shouldn't) have the correct
>write permissions.  I can run trial with as sudo, but not as a regular
>user.  Isn't it bad practice to rely on being able to write to
>site-packages at runtime.  Shouldn't such things do into a .twisted
>directory or something like that?

See the plugin cache section of the plugin howto documentation:

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3

Specifically, the paragraph about site-wide installations.

Jean-Paul



From ellisonbg.net at gmail.com  Thu Apr 10 17:23:58 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 15:23:58 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
Message-ID: <6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>

On Thu, Apr 10, 2008 at 2:49 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 10 Apr 2008 14:44:45 -0600, Brian Granger <ellisonbg.net at gmail.com>
> wrote:
>
> > Hi,
> >
> > Earlier today I posted about a problem with trial.  I reinstalled
> > 8.0.1 and the origianl problem has gone away.  Now I get the following
> > error.  It appears that trial is trying to write something to the
> > plugins directory.  But that doesn't (and shouldn't) have the correct
> > write permissions.  I can run trial with as sudo, but not as a regular
> > user.  Isn't it bad practice to rely on being able to write to
> > site-packages at runtime.  Shouldn't such things do into a .twisted
> > directory or something like that?
> >
>
>  See the plugin cache section of the plugin howto documentation:
>
>
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
>
>  Specifically, the paragraph about site-wide installations.
>
>  Jean-Paul

OK, there is documentation, but I still don't think it is a good idea
to rely on write permissions in this way.  Examples:

1) User downloads the Mac OS X installer for twisted from the twisted
web site.  They install it and run trial and get this nasty exception
about write permissions.  This installer installs into the system-wide
sitepackages and user will basically _always_ get this problem.

2)  User installed twisted by doing "sudo easy_install Twisted"  They
too get the exception anytime they run trial.

3) User installs using the tarball and installs using the standard
"sudo python setup.py install."  They get it too, unless they add an
optional argument to have twisted installed in their home directory
some place.

The bottom line is that these installation routes are not exceptional,
they are the most common ones.  This approach almost ensures that
almost all of our users will observe this exception when they run our
(ipython1's) test suite.  The same will be true of any twisted using
project that relies on trial or (likely) the plugin architecture.

This behavior may be documented, but I still think it is a bad idea.

Am I misunderstanding something?

Thanks,

Brian



>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From glyph at divmod.com  Thu Apr 10 18:17:05 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 Apr 2008 22:17:05 -0000
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
	<6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
Message-ID: <20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>


On 09:23 pm, ellisonbg.net at gmail.com wrote:
>OK, there is documentation, but I still don't think it is a good idea
>to rely on write permissions in this way.  Examples:

You're right, insofar as the person who should have read that 
documentation was the author of the installer, and not you.  As a post- 
installation action, the installer should load plugins and thereby write 
all of the appropriate cache files.

You're correct in saying that end-users should not have to deal with 
this edge-case.  However, that doesn't mean that the right fix is to 
write the files somewhere else; the right fix is to have installers that 
finish installation.



From ellisonbg.net at gmail.com  Thu Apr 10 18:33:14 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 16:33:14 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
	<6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
	<20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>
Message-ID: <6ce0ac130804101533y753ba79ax4e322e6fa25a2172@mail.gmail.com>

> > OK, there is documentation, but I still don't think it is a good idea
> > to rely on write permissions in this way.  Examples:
> >
>
>  You're right, insofar as the person who should have read that documentation
> was the author of the installer, and not you.  As a post- installation
> action, the installer should load plugins and thereby write all of the
> appropriate cache files.
>
>  You're correct in saying that end-users should not have to deal with this
> edge-case.  However, that doesn't mean that the right fix is to write the
> files somewhere else; the right fix is to have installers that finish
> installation.

Either way sounds good to me.

Brian

>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From zooko at zooko.com  Thu Apr 10 21:18:58 2008
From: zooko at zooko.com (zooko)
Date: Thu, 10 Apr 2008 18:18:58 -0700
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon
	Twisted?
In-Reply-To: <60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>
References: <20080410125724.5d3bdd43@fluxx.allmydata.com>
	<60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>
Message-ID: <F18E180B-8418-4232-9013-A07459BA0A41@zooko.com>

On Apr 10, 2008, at 1:17 PM, Christopher Armstrong wrote:
>
> This may not be helpful, but it is additional data: Twisted
> subprojects are not easy_installable in any reasonable way.

This is relevant; thanks for the information.


  Brian Warner wrote:
>
> Another answer
> might be for the debian 'python-twisted' metapackage (which depends  
> upon
> python-twisted-core, python-twisted-web, etc) to provide an .egg- 
> info that
> claims to represent the 'Twisted' distribution, but I can imagine  
> problems
> with that.

What problems?  That's what Ubuntu Hardy currently does.  The "python- 
twisted" Debian package currently provides the "Twisted" distutils  
distribution, but it doesn't currently declare that it does so in a  
machine-readable way.


Regards,

Zooko



From roland.hedberg at adm.umu.se  Fri Apr 11 01:54:47 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Fri, 11 Apr 2008 07:54:47 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>
References: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>
Message-ID: <47FEFD27.8020107@adm.umu.se>

Jean-Paul Calderone wrote:
> On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
> <roland.hedberg at adm.umu.se> wrote:
>>
>> [snip]
>>
>> The error I get is:
>>
>>  File 
>> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>> packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>  TypeError: Connection() argument 1 must be Context, not instance
>>
>> So, if it possible to use M2Crypto together with Twisted ?
>> If so, can someone tell me what I might have missed ?
>>
> 
> M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
> instead of pyOpenSSL, you should use the APIs M2Crypto provides.
> 

So, I've studied the wrapper that the Chandler project provides.
Unfortunately they don't provide a wrapper for SSLServer which is what I 
need. Which made me look at the Twisted code.
So what's the correct way to 'wrap' SSLServer, should I wrap 
_AbstractServer or is that a no-no ?

-- Roland




From weiwei at baosight.com  Fri Apr 11 04:55:16 2008
From: weiwei at baosight.com (weiwei)
Date: Fri, 11 Apr 2008 16:55:16 +0800
Subject: [Twisted-Python] why my my twisted program hanged and crash
Message-ID: <001001c89bb1$c4c26510$5a22190a@wwei>

hi,all!

Some day ago,I found my twisted program hanged and I try to kill it with "kill -15 mypid",then after some minutes,the program crashed and generated a core file.

So I analyze the core with dbx(my os is AIX 5.3),the following is the result:

Type 'help' for help.
[using memory image in core]
reading symbolic information ...

Segmentation fault in extend_brk at 0xd02f97c0 ($t1)
0xd02f97c0 (extend_brk+0xc8) 90040004        stw   r0,0x4(r4)
(dbx) where
extend_brk(internal error: assertion failed at line 3626 in file frame.c
??, internal error: assertion failed at line 3626 in file frame.c
??, internal error: assertion failed at line 3626 in file frame.c
??) at 0xd02f97c0
(dbx) 

I don't know why this happened:
1) why my twisted program hanged? (I use pollreactor)
2) why my twisted program crashed and generated a core file?



weiwei
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080411/a6197fe4/attachment.htm 

From theatilla at gmail.com  Fri Apr 11 06:29:15 2008
From: theatilla at gmail.com (Atilla)
Date: Fri, 11 Apr 2008 12:29:15 +0200
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <20080410115319.6859.382014641.divmod.quotient.27515@ohm>
References: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
	<20080410115319.6859.382014641.divmod.quotient.27515@ohm>
Message-ID: <b53c932d0804110329l21a64c52le941e760f353583f@mail.gmail.com>

If the number of connections is expected to be significant, you should
take a look at the difference between select and poll in therms of
their limits and read on the epoll interface. The page of libevent has
some useful explanations and graphs.



From exarkun at divmod.com  Fri Apr 11 09:15:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Apr 2008 09:15:08 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <47FEFD27.8020107@adm.umu.se>
Message-ID: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>

On Fri, 11 Apr 2008 07:54:47 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Jean-Paul Calderone wrote:
>>On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
>><roland.hedberg at adm.umu.se> wrote:
>>>
>>>[snip]
>>>
>>>The error I get is:
>>>
>>>  File 
>>>"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>>>packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>>  TypeError: Connection() argument 1 must be Context, not instance
>>>
>>>So, if it possible to use M2Crypto together with Twisted ?
>>>If so, can someone tell me what I might have missed ?
>>
>>M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
>>instead of pyOpenSSL, you should use the APIs M2Crypto provides.
>
>So, I've studied the wrapper that the Chandler project provides.
>Unfortunately they don't provide a wrapper for SSLServer which is what I 
>need. Which made me look at the Twisted code.
>So what's the correct way to 'wrap' SSLServer, should I wrap _AbstractServer 
>or is that a no-no ?

SSLServer implements a very simple set of functionality.  It will be very
easy to replicate it using the M2Crypto API.  You just need a startService
(and maybe a privilegedStartService) that calls the M2Crypto server setup
API and a stopService that calls the M2Crypto server shutdown API (which I
hope is just IListeningPort.stopListening).

_AbstractServer is private, so you shouldn't touch it.  You can look at its
implementation (barely a page) to get some hints about what to write, though.

Jean-Paul



From vvangelovski at gmail.com  Fri Apr 11 09:32:22 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 15:32:22 +0200
Subject: [Twisted-Python] ssh client and server
Message-ID: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>

I want to write a custom ssh server and client. the client should
authenticate, execute just one command on the server and get back the
response. I've been following the examples from the O'reilly book, but
I'm kinda lost. Basicaly what I wand to do is use the client from the
last example, but a simpler server without a terminal emulator,
nothing fancy. Can anyone help?



From exarkun at divmod.com  Fri Apr 11 09:57:20 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Apr 2008 09:57:20 -0400
Subject: [Twisted-Python] why my my twisted program hanged and crash
In-Reply-To: <001001c89bb1$c4c26510$5a22190a@wwei>
Message-ID: <20080411135720.6859.1616964668.divmod.quotient.28093@ohm>

On Fri, 11 Apr 2008 16:55:16 +0800, weiwei <weiwei at baosight.com> wrote:
>hi,all!
>
>Some day ago,I found my twisted program hanged and I try to kill it with "kill -15 mypid",then after some minutes,the program crashed and generated a core file.
>
>So I analyze the core with dbx(my os is AIX 5.3),the following is the result:
>
>Type 'help' for help.
>[using memory image in core]
>reading symbolic information ...
>
>Segmentation fault in extend_brk at 0xd02f97c0 ($t1)
>0xd02f97c0 (extend_brk+0xc8) 90040004        stw   r0,0x4(r4)
>(dbx) where
>extend_brk(internal error: assertion failed at line 3626 in file frame.c
>??, internal error: assertion failed at line 3626 in file frame.c
>??, internal error: assertion failed at line 3626 in file frame.c
>??) at 0xd02f97c0
>(dbx)
>
>I don't know why this happened:
>1) why my twisted program hanged? (I use pollreactor)
>2) why my twisted program crashed and generated a core file?
>
>

This probably isn't enough information to debug the problem (even if I had
any AIX experience).  It would probably be good if you could find out what
the Python process was doing when it was "hung".

Also, note that Twisted developers don't do any regular testing on AIX.
It may be that Twisted doesn't work very well on that platform.

Jean-Paul



From jakamkon at gmail.com  Fri Apr 11 10:33:23 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Fri, 11 Apr 2008 15:33:23 +0100
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
Message-ID: <2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>

Have a look at http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py

2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
> I want to write a custom ssh server and client. the client should
>  authenticate, execute just one command on the server and get back the
>  response. I've been following the examples from the O'reilly book, but
>  I'm kinda lost. Basicaly what I wand to do is use the client from the
>  last example, but a simpler server without a terminal emulator,
>  nothing fancy. Can anyone help?
>



From sol at sr-research.com  Fri Apr 11 10:43:41 2008
From: sol at sr-research.com (Sol Simpson)
Date: Fri, 11 Apr 2008 10:43:41 -0400
Subject: [Twisted-Python] NNTP example with authentication
Message-ID: <00df01c89be2$73667db0$5a337910$@com>

Can anyone point me in the direction of a twisted example using the nntp
client connecting to a news server that requires authentication?

 

Thanks in advance,

 

Sol 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080411/91c169c6/attachment.htm 

From vvangelovski at gmail.com  Fri Apr 11 11:08:05 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 17:08:05 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
Message-ID: <47FF7ED5.9040401@gmail.com>

I did look at that too. In and Ideal situation I'd make a server that 
responds to exec from the client, generates a response for the command 
and sends it back to the client, then drops the connection. But I can't 
find a way to do that.

Kuba Konczyk wrote:
> Have a look at http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
>
> 2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
>   
>> I want to write a custom ssh server and client. the client should
>>  authenticate, execute just one command on the server and get back the
>>  response. I've been following the examples from the O'reilly book, but
>>  I'm kinda lost. Basicaly what I wand to do is use the client from the
>>  last example, but a simpler server without a terminal emulator,
>>  nothing fancy. Can anyone help?
>>
>>     
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From cyli at alum.mit.edu  Fri Apr 11 11:50:29 2008
From: cyli at alum.mit.edu (cyli at alum.mit.edu)
Date: Fri, 11 Apr 2008 15:50:29 -0000
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <47FF7ED5.9040401@gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
	<47FF7ED5.9040401@gmail.com>
Message-ID: <20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>

If I understand you correctly, you want a shelless SSH server but one 
that executes commands.  For instance, it will accept the following 
connection:

ssh server "echo Hello!"

But not:

ssh server

Is this correct?  I'm did something similar, except that I also reject 
the first type of command.  What I did was to overwrite 
session.SSHSession's request_shell command to terminate the connection 
instead of returning a shell.    And then of course I subclassed 
ConchUser to return my own session (rather than session.SSHSession) for 
the channelLookup, and wrote my own realm that returned my user from 
requestAvatar.

There may be a better way to do it, but this is short, and it works. I 
stuck my code up here in case you want to look at it: 
http://cyli.livejournal.com/38382.html


On 03:08 pm, vvangelovski at gmail.com wrote:
>I did look at that too. In and Ideal situation I'd make a server that 
>responds to exec from the client, generates a response for the command 
>and sends it back to the client, then drops the connection. But I can't 
>find a way to do that.
>
>Kuba Konczyk wrote:
>>Have a look at 
>>http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
>>
>>2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
>>>I want to write a custom ssh server and client. the client should
>>>  authenticate, execute just one command on the server and get back 
>>>the
>>>  response. I've been following the examples from the O'reilly book, 
>>>but
>>>  I'm kinda lost. Basicaly what I wand to do is use the client from 
>>>the
>>>  last example, but a simpler server without a terminal emulator,
>>>  nothing fancy. Can anyone help?
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From vvangelovski at gmail.com  Fri Apr 11 16:13:06 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 22:13:06 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
	<47FF7ED5.9040401@gmail.com>
	<20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
Message-ID: <406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>

I guess I may be asking a wrong question. What I need is a
client-server protocol that can be very simple. The client logs on to
the server (user,pass) then the client asks  for something from the
server, or sends a small amount of data, the server then returns data
(up to 200k), the server drops the connection. But I also need maximum
protection against sniffing. Which is the best way to acomplish this?

On Fri, Apr 11, 2008 at 5:50 PM,  <cyli at alum.mit.edu> wrote:
> If I understand you correctly, you want a shelless SSH server but one that
> executes commands.  For instance, it will accept the following connection:
>
>  ssh server "echo Hello!"
>
>  But not:
>
>  ssh server
>
>  Is this correct?  I'm did something similar, except that I also reject the
> first type of command.  What I did was to overwrite session.SSHSession's
> request_shell command to terminate the connection instead of returning a
> shell.    And then of course I subclassed ConchUser to return my own session
> (rather than session.SSHSession) for the channelLookup, and wrote my own
> realm that returned my user from requestAvatar.
>
>  There may be a better way to do it, but this is short, and it works. I
> stuck my code up here in case you want to look at it:
> http://cyli.livejournal.com/38382.html
>
>
>
>
>  On 03:08 pm, vvangelovski at gmail.com wrote:
>
> > I did look at that too. In and Ideal situation I'd make a server that
> responds to exec from the client, generates a response for the command and
> sends it back to the client, then drops the connection. But I can't find a
> way to do that.
> >
> > Kuba Konczyk wrote:
> >
> > > Have a look at
> http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
> > >
> > > 2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
> > >
> > > > I want to write a custom ssh server and client. the client should
> > > >  authenticate, execute just one command on the server and get back the
> > > >  response. I've been following the examples from the O'reilly book,
> but
> > > >  I'm kinda lost. Basicaly what I wand to do is use the client from the
> > > >  last example, but a simpler server without a terminal emulator,
> > > >  nothing fancy. Can anyone help?
> > > >
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Fri Apr 11 17:51:19 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 11 Apr 2008 15:51:19 -0600
Subject: [Twisted-Python] Twisted+setuptools fun ;-)
Message-ID: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>

Now that twisted is easy_installable, I am adding code to our
(ipython1's) setup.py script to declare Twisted as a dependency:

# Declare dependencies only if setuptools is being used
if 'setuptools' in sys.modules:
    setup_args["install_requires"] = [
        "IPython",
        "Twisted>=8.0.1",
    ]

This is simple enough.  But, it doesn't quite work:

[in ipython1 source directory]
> python setup.py install
...
Processing dependencies for ipython1==0.3alpha1
Searching for Twisted>=8.0.1
Reading http://pypi.python.org/simple/Twisted/
Reading http://twistedmatrix.com/
Reading http://www.twistedmatrix.com
Reading http://twistedmatrix.com/products/download
Reading http://twistedmatrix.com/projects/core/
Best match: Twisted 8.0.1
Downloading http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1.tar.bz2
Processing Twisted-8.0.1.tar.bz2
Running Twisted-8.0.1/setup.py -q bdist_egg --dist-dir
/tmp/easy_install-_TNbx3/Twisted-8.0.1/egg-dist-tmp-JztrBh
error: Setup script exited with twisted.python.dist module not found.
Make sure you have installed the Twisted core package before
attempting to install any other Twisted projects.

This message comes from the setup.py scripts in the individual
projects.  They all start with:

try:
    from twisted.python import dist
except ImportError:
    raise SystemExit("twisted.python.dist module not found.  Make sure you "
                     "have installed the Twisted core package before "
                     "attempting to install any other Twisted projects.")

The odd thing is that if I simply easy_install Twisted, all works fine:

> easy_install Twisted
... everything works as expected.

I know that other projects are started to declare their Twisted deps
this way.  Are other people running into this?

Thanks

Brian



From ddwiggins at advpubtech.com  Fri Apr 11 19:37:40 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 11 Apr 2008 16:37:40 -0700
Subject: [Twisted-Python] Using DeferredList with deferredGenerator or
	inlineCallbacks?
Message-ID: <ftoso5$6da$1@ger.gmane.org>

I have some code that uses defer.deferredGenerator (Python 2.4) like so:

>         info1InProgress = defer.waitForDeferred(self.info1Deferred(acctNo))
>         yield info1InProgress
>         info2InProgress = defer.waitForDeferred(self.info2Deferred(acctNo))
>         yield info2InProgress
>         # Both queries have results; process them
>         info1Result = info1InProgress.getResult()
>         info2Result = info2InProgress.getResult()

The "info" functions are two queries using adbapi whose results will be 
combined in subsequent code; they're independent, in that either could 
be run before the other.  My question is, could I use a DeferredList 
somehow in this case, without giving up the convenience of the inline 
style?  If so, could it also be done in 2.5 using inlineCallbacks?

-- 
Don Dwiggins
Advanced Publishing Technology




From maarten at treewalker.org  Fri Apr 11 19:48:45 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 12 Apr 2008 01:48:45 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
	<406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>
Message-ID: <200804120148.53600.maarten@treewalker.org>

On Friday 11 April 2008, Vasil Vangelovski wrote:
> I guess I may be asking a wrong question. What I need is a
> client-server protocol that can be very simple. The client logs on to
> the server (user,pass) then the client asks  for something from the
> server, or sends a small amount of data, the server then returns data
> (up to 200k), the server drops the connection. But I also need maximum
> protection against sniffing. Which is the best way to acomplish this?

HTTPS?

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080412/b2e9cf52/attachment.pgp 

From zooko at zooko.com  Fri Apr 11 22:58:39 2008
From: zooko at zooko.com (zooko)
Date: Fri, 11 Apr 2008 19:58:39 -0700
Subject: [Twisted-Python] Twisted+setuptools fun ;-)
In-Reply-To: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>
References: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>
Message-ID: <C7A7BC2F-269E-4433-83F6-CA88FDB94D99@zooko.com>

On Apr 11, 2008, at 2:51 PM, Brian Granger wrote:
> # Declare dependencies only if setuptools is being used
> if 'setuptools' in sys.modules:
>     setup_args["install_requires"] = [
>         "IPython",
>         "Twisted>=8.0.1",
>     ]
...
> Processing Twisted-8.0.1.tar.bz2
> Running Twisted-8.0.1/setup.py -q bdist_egg --dist-dir
> /tmp/easy_install-_TNbx3/Twisted-8.0.1/egg-dist-tmp-JztrBh
> error: Setup script exited with twisted.python.dist module not found.
> Make sure you have installed the Twisted core package before
> attempting to install any other Twisted projects.

I didn't have this problem when I did this with Twisted 8.0.0.

I am working on a scheme to make our buildbot [1] do this  
automatically, and once I've done I'll post to this list.

Meanwhile, note that what your setup.py did was untar the Twisted  
tarball into a temp dir, cd into it, and run "setup.py -q bdist_egg -- 
dist-dir=$OTHER_TEMP_DIR".

Maybe you should try that by hand and see what happens.

Regards,

Zooko

[1] http://allmydata.org/buildbot/waterfall?show_events=false




From roland.hedberg at adm.umu.se  Sat Apr 12 09:41:40 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 12 Apr 2008 15:41:40 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>
References: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>
Message-ID: <4800BC14.6070100@adm.umu.se>

Jean-Paul Calderone wrote:
> On Fri, 11 Apr 2008 07:54:47 +0200, Roland Hedberg 
> <roland.hedberg at adm.umu.se> wrote:
>> Jean-Paul Calderone wrote:
>>> On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
>>> <roland.hedberg at adm.umu.se> wrote:
>>>>
>>>> [snip]
>>>>
>>>> The error I get is:
>>>>
>>>>  File 
>>>> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>>>> packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>>>  TypeError: Connection() argument 1 must be Context, not instance
>>>>
>>>> So, if it possible to use M2Crypto together with Twisted ?
>>>> If so, can someone tell me what I might have missed ?
>>>
>>> M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
>>> instead of pyOpenSSL, you should use the APIs M2Crypto provides.
>>
>> So, I've studied the wrapper that the Chandler project provides.
>> Unfortunately they don't provide a wrapper for SSLServer which is what 
>> I need. Which made me look at the Twisted code.
>> So what's the correct way to 'wrap' SSLServer, should I wrap 
>> _AbstractServer or is that a no-no ?
> 
> SSLServer implements a very simple set of functionality.  It will be very
> easy to replicate it using the M2Crypto API.  You just need a startService
> (and maybe a privilegedStartService) that calls the M2Crypto server setup
> API and a stopService that calls the M2Crypto server shutdown API (which I
> hope is just IListeningPort.stopListening).
> 
> _AbstractServer is private, so you shouldn't touch it.  You can look at its
> implementation (barely a page) to get some hints about what to write, 
> though.

OK, this wasn't hard to do.

But then I stumble on the next block and that's making a client use 
M2Crypto.
This turned out to be a bit tougher since the choice of SSL 
implementation is buried deep down in internet/tcp.py .
Someone must have thought about allowing for a choice of implementation 
by specifying an abstract definition of functionality (base 
class/interface), right ?
If I would make an attempt at doing this, would that be ok ? And is 
there something I should build on ?

-- Roland



From matt at madebykite.com  Sat Apr 12 16:53:32 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 12 Apr 2008 21:53:32 +0100
Subject: [Twisted-Python] Epoll Memory Issues
Message-ID: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>

Hi All,

First of all, I'd like to offer a belated thanks for Twisted and  
congratulations on releasing version 8.

I posted about a year ago about memory issues I was having with  
Twisted and the epoll reactor. I have recently put a simple proxy  
server based on Twisted in to production and have been running a live  
test on a single host for between 300 and 400 concurrent users. The  
server gradually consumes memory to a point where I have to start  
thinking about the experience of my users (the server starts  
swapping) and restart the process. I have been watching this  
behaviour for the last 10 days and in the meantime have been going  
through my code with a fine tooth comb, looking for and testing for  
possible memory leaks. I found a few minor ones, but the memory leaks  
continue.

Today, out of desperation, I switched the reactor from epoll to  
select. Guess what? No more memory leak.

My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I  
was wondering whether anyone could cast any light on this matter? I  
am pretty sure that this isn't an issue specific to my code but I  
would be interested to hear if anyone else has experienced similar  
problems. I would like to be able to switch back to epoll for obvious  
reasons, but at the moment, I am not confident in running the Twisted  
epoll reactor.

Regards,


Matt

	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From Andy at NewWorldElectric.com  Sat Apr 12 21:54:19 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sat, 12 Apr 2008 21:54:19 -0400
Subject: [Twisted-Python] twisted/persisted/dirdbm -- is this async-safe?
Message-ID: <37d49ed40804121854g21c351dal8f2e4f88930fd47e@mail.gmail.com>

I'm developing a pretty general storage system as part of a larger twisted
project, basically I just need dbm file type storage for now, until I get a
better grip on my actual needs.  I'm expecting to use this as a test of
Amazon SimpleDB, but the polarrose.amazon module apparently needs python 2.5
which my server doesn't have yet.  So I need a somewhat interim solution and
went looking for it, I was thinking twisted.persisted.dirdbm, but when I
went to hook it up I noticed no deffereds at all.  Can anyone elaborate on
how this works?  Is it going to slide my webserver to a halt while it hits
the disk?  Should I be looking at a different module?

Andy Fundinger


-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080412/06fafe9b/attachment.htm 

From itamar at itamarst.org  Sat Apr 12 23:41:15 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 12 Apr 2008 23:41:15 -0400
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
Message-ID: <1208058076.14261.13.camel@localhost.localdomain>


On Sat, 2008-04-12 at 21:53 +0100, Matthew Glubb wrote:

> Today, out of desperation, I switched the reactor from epoll to  
> select. Guess what? No more memory leak.

poll reactor is certainly better than select; epoll ought to be better
than both, of course. As for the epoll issue, if that's what it is - can
you reproduce this with some sort of minimal example? That would help
track down the issue.




From exarkun at twistedmatrix.com  Sun Apr 13 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1208059507.53.1606162200@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080413/d314444b/attachment.htm 

From matusis at yahoo.com  Sun Apr 13 01:50:29 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 12 Apr 2008 22:50:29 -0700 (PDT)
Subject: [Twisted-Python] Epoll Memory Issues
Message-ID: <472936.86742.qm@web81107.mail.mud.yahoo.com>

I suspect it might be your code. On Twisted 2.5 (with patched epoll bug http://twistedmatrix.com/trac/ticket/2809 ) we have reactors that run for 3-4 months without restart, that do not consume more than 150MB RSS with 8000+ concurrent connections.

----- Original Message ----
From: Matthew Glubb <matt at madebykite.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Saturday, April 12, 2008 1:53:32 PM
Subject: [Twisted-Python] Epoll Memory Issues

Hi All,

First of all, I'd like to offer a belated thanks for Twisted and  
congratulations on releasing version 8.

I posted about a year ago about memory issues I was having with  
Twisted and the epoll reactor. I have recently put a simple proxy  
server based on Twisted in to production and have been running a live  
test on a single host for between 300 and 400 concurrent users. The  
server gradually consumes memory to a point where I have to start  
thinking about the experience of my users (the server starts  
swapping) and restart the process. I have been watching this  
behaviour for the last 10 days and in the meantime have been going  
through my code with a fine tooth comb, looking for and testing for  
possible memory leaks. I found a few minor ones, but the memory leaks  
continue.

Today, out of desperation, I switched the reactor from epoll to  
select. Guess what? No more memory leak.

My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I  
was wondering whether anyone could cast any light on this matter? I  
am pretty sure that this isn't an issue specific to my code but I  
would be interested to hear if anyone else has experienced similar  
problems. I would like to be able to switch back to epoll for obvious  
reasons, but at the moment, I am not confident in running the Twisted  
epoll reactor.

Regards,


Matt

    

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080412/2079e7c3/attachment.htm 

From glyph at divmod.com  Sun Apr 13 01:54:25 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 13 Apr 2008 05:54:25 -0000
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
Message-ID: <20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>

On 12 Apr, 08:53 pm, matt at madebykite.com wrote:
>Hi All,
>
>First of all, I'd like to offer a belated thanks for Twisted and 
>congratulations on releasing version 8.

Thanks!
>Today, out of desperation, I switched the reactor from epoll to 
>select. Guess what? No more memory leak.

The fifty thousand dollar question: can you reduce this to a minimal 
example?  It would be a _huge_ help in tracking down the problem.  While 
we can guess what's going on in your production environment, we 
obviously can't watch it happening.  Can you reproduce it in test?

Also (if you haven't done this already) can you file a ticket for this 
issue?
>My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I 
>was wondering whether anyone could cast any light on this matter? I  am 
>pretty sure that this isn't an issue specific to my code but I  would 
>be interested to hear if anyone else has experienced similar  problems. 
>I would like to be able to switch back to epoll for obvious  reasons, 
>but at the moment, I am not confident in running the Twisted  epoll 
>reactor.

That's a bummer.  We fixed a nasty bug in the epoll reactor in 8.0 
(#2809) and I was hoping it would be in better shape for this release. 
However, we're trying to do more regular releases.  I hope that you can 
help us get this leak issue resolved for 8.1!



From matt at madebykite.com  Sun Apr 13 04:28:19 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 13 Apr 2008 09:28:19 +0100
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
	<20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>
Message-ID: <878EBDFF-2AA6-454F-A1A2-5AFD2C9CFF6A@madebykite.com>

Thanks for your responses to my problem. As an imperfect developer, I  
am perfectly willing to accept the possibility of a problem with my  
code :/
	
On 13 Apr 2008, at 06:54, glyph at divmod.com wrote:
> The fifty thousand dollar question: can you reduce this to a  
> minimal example?  It would be a _huge_ help in tracking down the  
> problem.  While we can guess what's going on in your production  
> environment, we obviously can't watch it happening.  Can you  
> reproduce it in test?

I'll do my best to reproduce the problem in a test environment. If  
you haven't had the privilege of using it, web polygraph is a great  
tool for load testing proxies. I should be able to reproduce  
reasonable real world traffic conditions with it. If I have success  
with that, I'll develop a minimal test.

> Also (if you haven't done this already) can you file a ticket for  
> this issue?

I'll file a ticket when I can provide a test.

Thanks again,


Matt



From newptcai at gmail.com  Sun Apr 13 12:33:41 2008
From: newptcai at gmail.com (Peter Cai)
Date: Mon, 14 Apr 2008 00:33:41 +0800
Subject: [Twisted-Python] Performance issues of twisted.
Message-ID: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>

Hi all!

I am preparing to write a server application (you may think of it as an
online game server) with twisted, but I am worrying about it's performance
and how to do it correctly.

For example..

1. UDP or TCP?which should I choose to gain higher performance?

2. Should I catch data in memory instead of write it to db immediately?

3. Could I make it run on cluster if cache data in memory ?? I think it
might be quit hard to exchange data between instances of the server if I
cache data in memory.

4. How to make hot backup?

5. Garbage collection might make the server halt for a moment

6. What is happening in a computer when an IP package received?

7. Could I get some inspiration from how people write web server?

8. If i use an separate physical server to deploy the database, could I gain
some performance improvement?  Or the cost of communication between the db
and the server could hurt the total performance?

??

And so on..

Also, is there any classical books talking about these kind of issues?
Thanks a lot
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080414/d1e5b386/attachment.htm 

From radix at twistedmatrix.com  Sun Apr 13 13:04:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 13 Apr 2008 13:04:27 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <60ed19d40804131004g587ce573ma6efe7fe08570d96@mail.gmail.com>

2008/4/13 Peter Cai <newptcai at gmail.com>:
> Hi all!
>
>  I am preparing to write a server application (you may think of it as an
> online game server) with twisted, but I am worrying about it's performance
> and how to do it correctly.
>
> For example..

[list of questions]

Just for the record, none of these questions are about Twisted's
performance. Given their generality, and without information about
what you actually want to do, they're impossible to answer.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From Andy at NewWorldElectric.com  Sun Apr 13 13:13:45 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sun, 13 Apr 2008 13:13:45 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>

I'm not sure about books, but the questions seemed fun.  I'm curious how my
answers measure up to the rest of the list here.

2008/4/13 Peter Cai <newptcai at gmail.com>:

> Hi all!
>
> I am preparing to write a server application (you may think of it as an
> online game server) with twisted, but I am worrying about it's performance
> and how to do it correctly.
>
> For example..
>
> 1. UDP or TCP?which should I choose to gain higher performance?
>
If you want the data to get there even if it's late use TCP, if late data is
not useful to you or needs to be handled some special way use UDP which will
simply lose packets if they happen to not go through.  It is possible but
rather unlikely that you can implement a strategy for retrying failures
better than TCP unless you relax the constraint of eventually getting the
data through.

2. Should I catch data in memory instead of write it to db immediately?
>
 I wouldn't for local mysql databases.  For a more distributed setup you
might consider memcached.

3. Could I make it run on cluster if cache data in memory ?? I think it
> might be quit hard to exchange data between instances of the server if I
> cache data in memory.
>
that's exactly what memcached will take care of for you.


> 4. How to make hot backup?
>
for maximum performance use a replicated pair of database servers and take
the spare offline for backups.  You could also bring the spare up only to
capture the backup, though it will slow down the primary as it plays
catchup.


> 5. Garbage collection might make the server halt for a moment
>
I think this should be less than the latency of a publicly routed IP
network, anyone have figures for gc and twisted?

6. What is happening in a computer when an IP package received?
>
What do you mean?  What specifically do you need to know?

7. Could I get some inspiration from how people write web server?
>
this one I can suggest a book for, the twisted book
http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
something other than twisted any reasonably thick python book will have an
example web server.


> 8. If i use an separate physical server to deploy the database, could I
> gain some performance improvement?  Or the cost of communication between the
> db and the server could hurt the total performance?
>
could go either way.  With the effects of Python's GIL I'd expect a
multi-core server with database and game server on one box would be fine
until you hit a scaling limit and your server is eating a whole core.  At
that point you need to develop a distributed application model and probably
use multiple servers.  If you hit that before you're running 200 users
recheck your business model, if you hit it before 20 users recheck your
architecture.

Andy Fundinger

-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080413/47ea59c9/attachment.htm 

From newptcai at gmail.com  Sun Apr 13 14:02:36 2008
From: newptcai at gmail.com (Peter Cai)
Date: Mon, 14 Apr 2008 02:02:36 +0800
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
Message-ID: <befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>

Thanks a lot Andy for your explation.  I am sorry for my poor English and I
shall try to make it clearer this time.

1. UDP or TCP ???? I could understood that implementing a strategy for
retrying failures better than TCP is very unlikely.
But I think maintaining about 3000 tcp connections at the same time might be
quite hard too.
That's exactly why we use UDP in the last version written in C.
We have to write a lot of codes to handle retranmission and we have to send
KEEP Alive Message to make sure that if the client program is still working.

Web server doesn't have this problem because they needn't keep every tcp
connections.

2 and 3 ???? memcached looks promising,  I will read more about it.

4.  But if we choose TCP or we cache any data in memory, the bussiness shall
be cut off for a short moment and all clients have to relogin?
All data cached in memory shall be lost any the client might feel like that
they lost some time in the game. Is that true?

5.  Have you heard of BEA?  Which was sold to Oracle in March.   One of
their main products is Java Application Server, WebLogic.   I've talked with
their engineer when considerring using Java to write our server.  He showed
me some diagrams and told me that a sharp performance decrease was
unavoidable when gc happened in any gc enabled system.  (Of course he said
Weblogic could do much better than any other systems ^_^)

6.  I want to know the difference between synchronised and asynchronised,
block and unblocked APIs.  I want to know the differences in fundamental
level.
I know that twisted uses "epoll", but why it's more efficient?

8. Your advice sound very helpful!

Thanks again!

2008/4/14 Andy Fundinger <Andy at newworldelectric.com>:

> I'm not sure about books, but the questions seemed fun.  I'm curious how
> my answers measure up to the rest of the list here.
>
> 2008/4/13 Peter Cai <newptcai at gmail.com>:
>
> > Hi all!
> >
> > I am preparing to write a server application (you may think of it as an
> > online game server) with twisted, but I am worrying about it's performance
> > and how to do it correctly.
> >
> > For example..
> >
> > 1. UDP or TCP??which should I choose to gain higher performance?
> >
> If you want the data to get there even if it's late use TCP, if late data
> is not useful to you or needs to be handled some special way use UDP which
> will simply lose packets if they happen to not go through.  It is possible
> but rather unlikely that you can implement a strategy for retrying failures
> better than TCP unless you relax the constraint of eventually getting the
> data through.
>
> 2. Should I catch data in memory instead of write it to db immediately?
> >
>  I wouldn't for local mysql databases.  For a more distributed setup you
> might consider memcached.
>
> 3. Could I make it run on cluster if cache data in memory ?D?D I think it
> > might be quit hard to exchange data between instances of the server if I
> > cache data in memory.
> >
> that's exactly what memcached will take care of for you.
>
>
> > 4. How to make hot backup?
> >
> for maximum performance use a replicated pair of database servers and take
> the spare offline for backups.  You could also bring the spare up only to
> capture the backup, though it will slow down the primary as it plays
> catchup.
>
>
> > 5. Garbage collection might make the server halt for a moment
> >
> I think this should be less than the latency of a publicly routed IP
> network, anyone have figures for gc and twisted?
>
> 6. What is happening in a computer when an IP package received?
> >
> What do you mean?  What specifically do you need to know?
>
> 7. Could I get some inspiration from how people write web server?
> >
> this one I can suggest a book for, the twisted book
> http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
> something other than twisted any reasonably thick python book will have an
> example web server.
>
>
> > 8. If i use an separate physical server to deploy the database, could I
> > gain some performance improvement?  Or the cost of communication between the
> > db and the server could hurt the total performance?
> >
> could go either way.  With the effects of Python's GIL I'd expect a
> multi-core server with database and game server on one box would be fine
> until you hit a scaling limit and your server is eating a whole core.  At
> that point you need to develop a distributed application model and probably
> use multiple servers.  If you hit that before you're running 200 users
> recheck your business model, if you hit it before 20 users recheck your
> architecture.
>
> Andy Fundinger
>
> --
> Blog: http://channel3b.wordpress.com
> Second Life Name: Ciemaar Flintoff
>
> I am a sig Virus. Please put me in your sig so that I can continue to
> replicate.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
??????????????????????????, ????????????????????????????????????, ????????????????????????
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080414/35dc5264/attachment.htm 

From maarten at treewalker.org  Sun Apr 13 15:34:01 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 13 Apr 2008 21:34:01 +0200
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
Message-ID: <200804132134.07885.maarten@treewalker.org>

On Sunday 13 April 2008, Andy Fundinger wrote:

> > 5. Garbage collection might make the server halt for a moment
>
> I think this should be less than the latency of a publicly routed IP
> network, anyone have figures for gc and twisted?

There are two types of garbage collection in Python:
- reference counting
- mark and sweep

The reference counting is always active and does most of the collection. 
However, it cannot collect objects that are unreachable but have cyclic 
references between them, so the mark and sweep runs once in a while to 
reclaim those.

The mark and sweep has several levels: it will frequently check whether 
recently created objects are still reachable; less frequently it will check 
reachability of all objects.

The reference counting overhead is spread very evenly over time, so there is 
no latency problem there.

The mark and sweep operation locks the entire Python interpreter. The time 
it takes depends on the number of objects allocated. I did some 
measurements once, but unfortunately I haven't kept the numbers. However, 
it went up very quickly and by the time you have a couple of GB of data you 
can expect hickups of multiple seconds. It should be easy to reproduce 
this: just read the documentation of the "gc" module and write a small 
benchmark program that allocates lots of objects and then forces the most 
thorough level of mark and sweep.

What I did for our web app is disable the mark and sweep algorithm 
(gc.disable()) and break reference cycles in our code.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080413/5a59076d/attachment.pgp 

From glyph at divmod.com  Sun Apr 13 20:48:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 14 Apr 2008 00:48:18 -0000
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <20080414004818.21558.1917454001.divmod.xquotient.10710@joule.divmod.com>

On 13 Apr, 04:33 pm, newptcai at gmail.com wrote:
>Hi all!
>
>I am preparing to write a server application (you may think of it as an
>online game server) with twisted, but I am worrying about it's 
>performance
>and how to do it correctly.

If this is the first time you have done such a thing, let me give you a 
friendly piece of advice: think about how to do it correctly first, then 
think about how to speed it up once it works.  This is common wisdom in 
programming, but it is especially important when you think you have 
found an exception to the rule, and stuff needs to go *really fast*, 
*right away*.  If you try to make it perform well before understanding 
what's going on, it will be both slow *and* full of mistakes and 
complexity from misguided implementations.

Ideally, you could work on an existing project, such as MV3d ( 
http://www.mv3d.com/trac ) rather than starting from scratch.
>For example..
>
>1. UDP or TCP?0Cwhich should I choose to gain higher performance?

If you do not already know the answer to this question, choosing UDP is 
very dangerous.  For what TCP does, TCP is higher performance, and a lot 
less buggy, than anything you would likely implement to replace it.

In a few *very specialized* applications, in specific network 
conditions, UDP can provide better performance.  However, performance 
does not usually mean "speed" in those circumstances; it means the 
ability, for example, to drop a bunch of packets and then pick up again 
without catching up to the packets that were lost in the middle.  But 
picking up packets that were lost in the middle is a very useful 
feature, one that most applications rely on without even knowing it.
>2. Should I catch data in memory instead of write it to db immediately?

This question could mean almost anything.  However, writing to the 
database is simpler and less error-prone, so start there, and *only if 
the code is not fast enough*, add a caching optimization.  Caching is 
generally more useful on reads than writes, though, so I don't really 
understand your question.
>3. Could I make it run on cluster if cache data in memory  15 15 I think it
>might be quit hard to exchange data between instances of the server if 
>I
>cache data in memory.

This is why you should
>4. How to make hot backup?

http://www.oracle.com/technology/documentation/berkeley- 
db/db/ref/transapp/archival.html

(This is not a helpful answer, but hints at the complexity of a real 
answer to this question, depending on the specifics of what database 
you're using.  It's not something for a one-liner in an email.)
>5. Garbage collection might make the server halt for a moment

Yep.  Of course, manual memory allocation might make the server halt 
forever, because it segfaulted.  Take your pick.
>6. What is happening in a computer when an IP package received?

Start here, and click on every link:

http://en.wikipedia.org/wiki/Internet_protocol_suite
>7. Could I get some inspiration from how people write web server?

Start here, and click on every link:

http://twistedmatrix.com/trac/browser/trunk/twisted/web/
>8. If i use an separate physical server to deploy the database, could I 
>gain
>some performance improvement?  Or the cost of communication between the 
>db
>and the server could hurt the total performance?

Maybe.  The way that you tell is not by asking a question on a mailing 
list, but by implementing a specific strategy and then measuring it to 
see what its bottlenecks are and where you can improve performance.  If 
your experience is anything like mine, you will discover something 
surprising.  For example, that everything except the server-side 
collision detection is so fast that you don't need to bother to optimize 
it, but the collision detection is so slow that you need to change it 
radically to even have the simulation keep up with wall clock time.
>Also, is there any classical books talking about these kind of issues?

I wrote an article in one once:

http://tinyurl.com/4yy8zx

but this book, nor any other, won't answer all your questions.  The 
field, and the industry, is way too new.



From Andy at NewWorldElectric.com  Mon Apr 14 00:10:52 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 14 Apr 2008 00:10:52 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
	<befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>
Message-ID: <37d49ed40804132110l333832cauef2c61af99e7d7c8@mail.gmail.com>

2008/4/13 Peter Cai <newptcai at gmail.com>:

> Thanks a lot Andy for your explation.  I am sorry for my poor English and
> I shall try to make it clearer this time.
>
> 1. UDP or TCP ???? I could understood that implementing a strategy for
> retrying failures better than TCP is very unlikely.
> But I think maintaining about 3000 tcp connections at the same time might
> be quite hard too.
> That's exactly why we use UDP in the last version written in C.
> We have to write a lot of codes to handle retranmission and we have to
> send KEEP Alive Message to make sure that if the client program is still
> working.
>
> Web server doesn't have this problem because they needn't keep every tcp
> connections.
>

well, at a glance 3000 TCP connections should be similarly resource
intensive than 3000 simulated connection over UDP, but you have a working
app to compare with.  I would however consider adopting the strategy from
web servers and not keeping tcp connections either.  I'd take their whole
strategy and use http wherever possible even, twisted makes that easy.

4.  But if we choose TCP or we cache any data in memory, the bussiness shall
> be cut off for a short moment and all clients have to relogin?
> All data cached in memory shall be lost any the client might feel like
> that they lost some time in the game. Is that true?
>
With the two servers and backing up the mirror you wouldn't interrupt
business.  Similarly, it data shouldn't be particularly affected by backup
operations.


> 5.  Have you heard of BEA?  Which was sold to Oracle in March.   One of
> their main products is Java Application Server, WebLogic.   I've talked with
> their engineer when considerring using Java to write our server.  He showed
> me some diagrams and told me that a sharp performance decrease was
> unavoidable when gc happened in any gc enabled system.  (Of course he said
> Weblogic could do much better than any other systems ^_^)
>
Maarten has spoken more directly to this point, but I cry foul anyway.  Java
GC *can* but shouldn't be run manually, and you can use multiple processes
or servers to ensure that though a process is slowed down the system as a
whole is unaffected.


> 6.  I want to know the difference between synchronised and asynchronised,
> block and unblocked APIs.  I want to know the differences in fundamental
> level.
> I know that twisted uses "epoll", but why it's more efficient?
>
Everything has tradeoffs, and you probably can't get a real answer without
describing your use case in rather more detail, but part of it is about
control and being able to make certain optimizations.  An async server lets
your code explicitly yield control when it's going to be waiting for a I/O
and resume again at a point and time when that I/O is complete.  A threaded
server runs threads in parallel hoping that some of them will not be blocked
and thus the server will be able to cut through the total workload.  I'm
sure someone else can explain further, for my own use I prefer it for a nice
side effect.  Async servers bypass the concept of threadsafe and
synchronized sections since there can't be two live pieces of code in the
whole server at any given time.  Of course waiting for a synchronized
section can be a performance issue too, but I mostly just don't like to
write them.


> 8. Your advice sound very helpful!

consulting rates available upon request :-) seriously, glad I could help, if
you come to any interesting conclusions, won't you write them up in a blog
somewhere?

Andy Fundinger

2008/4/14 Andy Fundinger <Andy at newworldelectric.com>:
>
I'm not sure about books, but the questions seemed fun.  I'm curious how my
> > answers measure up to the rest of the list here.
> >
> > 2008/4/13 Peter Cai <newptcai at gmail.com>:
> >
> > > Hi all!
> > >
> > > I am preparing to write a server application (you may think of it as
> > > an online game server) with twisted, but I am worrying about it's
> > > performance and how to do it correctly.
> > >
> > > For example..
> > >
> > > 1. UDP or TCP??which should I choose to gain higher performance?
> > >
> > If you want the data to get there even if it's late use TCP, if late
> > data is not useful to you or needs to be handled some special way use UDP
> > which will simply lose packets if they happen to not go through.  It is
> > possible but rather unlikely that you can implement a strategy for retrying
> > failures better than TCP unless you relax the constraint of eventually
> > getting the data through.
> >
> > 2. Should I catch data in memory instead of write it to db immediately?
> > >
> >  I wouldn't for local mysql databases.  For a more distributed setup you
> > might consider memcached.
> >
> > 3. Could I make it run on cluster if cache data in memory ?D?D I think it
> > > might be quit hard to exchange data between instances of the server if I
> > > cache data in memory.
> > >
> > that's exactly what memcached will take care of for you.
> >
> >
> > > 4. How to make hot backup?
> > >
> > for maximum performance use a replicated pair of database servers and
> > take the spare offline for backups.  You could also bring the spare up only
> > to capture the backup, though it will slow down the primary as it plays
> > catchup.
> >
> >
> > > 5. Garbage collection might make the server halt for a moment
> > >
> > I think this should be less than the latency of a publicly routed IP
> > network, anyone have figures for gc and twisted?
> >
> > 6. What is happening in a computer when an IP package received?
> > >
> > What do you mean?  What specifically do you need to know?
> >
> > 7. Could I get some inspiration from how people write web server?
> > >
> > this one I can suggest a book for, the twisted book
> > http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
> > something other than twisted any reasonably thick python book will have an
> > example web server.
> >
> >
> > > 8. If i use an separate physical server to deploy the database, could
> > > I gain some performance improvement?  Or the cost of communication between
> > > the db and the server could hurt the total performance?
> > >
> > could go either way.  With the effects of Python's GIL I'd expect a
> > multi-core server with database and game server on one box would be fine
> > until you hit a scaling limit and your server is eating a whole core.  At
> > that point you need to develop a distributed application model and probably
> > use multiple servers.  If you hit that before you're running 200 users
> > recheck your business model, if you hit it before 20 users recheck your
> > architecture.
> >
> > Andy Fundinger
> >
> > --
> > Blog: http://channel3b.wordpress.com
> > Second Life Name: Ciemaar Flintoff
> >
> > I am a sig Virus. Please put me in your sig so that I can continue to
> > replicate.
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
> --
> ??????????????????????????, ????????????????????????????????????, ????????????????????????
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080414/25d7b8d4/attachment.htm 

From mailing_lists at evotex.ch  Mon Apr 14 06:04:07 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 14 Apr 2008 12:04:07 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
Message-ID: <48032C17.9010803@evotex.ch>

Hello,

I have to have a shared list in a server's factory to keep client 
registration info. I had been using python's mutex class to make sure 
only one registration at a time can be done. I just realized that this 
is blocking and that's a no-no with twisted. My question is what would 
be a better way of doing this?

Gabriel



From mailing_lists at evotex.ch  Mon Apr 14 06:35:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 14 Apr 2008 12:35:56 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48032C17.9010803@evotex.ch>
References: <48032C17.9010803@evotex.ch>
Message-ID: <4803338C.8050702@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I have to have a shared list in a server's factory to keep client 
> registration info. I had been using python's mutex class to make sure 
> only one registration at a time can be done. I just realized that this 
> is blocking and that's a no-no with twisted. My question is what would 
> be a better way of doing this?
>
> Gabriel
I'm wondering if maybe I'm misunderstanding something here, when several 
messages arrive, what happens, are they processed in parallel, are they 
put in a queue and processes sequentially? If I receive a message, do 
some heavy processing/io/potentially blocking code in a thread using 
twisted's threading module, and before it's done, I get another 
connection + message that needs the same thing to be done, what happens? 
If I'm going to receive a msg to be put in a queue, and another service 
that needed to retrieve the message from the queue, and I get several 
connections, wanting to access the queue, what happens? (This is a 
producer -consumer problem basically).

Thanks,
Gabriel



From itamar at itamarst.org  Mon Apr 14 09:27:38 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Apr 2008 13:27:38 +0000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <4803338C.8050702@evotex.ch>
References: <48032C17.9010803@evotex.ch>  <4803338C.8050702@evotex.ch>
Message-ID: <1208179659.14261.18.camel@localhost.localdomain>


On Mon, 2008-04-14 at 12:35 +0200, Gabriel Rossetti wrote:
> I'm wondering if maybe I'm misunderstanding something here, when several 
> messages arrive, what happens, are they processed in parallel, are they 
> put in a queue and processes sequentially? 

Sequentially. Twisted does not expose use of threads to user-level
APIs... and Twisted APIs are not thread-safe, other than
reactor.callFromThread.

> If I receive a message, do 
> some heavy processing/io/potentially blocking code in a thread using 
> twisted's threading module, and before it's done, I get another 
> connection + message that needs the same thing to be done, what
> happens? 

reactor.callInThread (and therefore deferToThread) are built on top of a
thread-safe Queue. Just make sure your scheduled tasks are not calling
back into Twisted but are rather self-contained units of work.




From nathan.stocks at gmail.com  Mon Apr 14 12:21:58 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 14 Apr 2008 10:21:58 -0600
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <47F3E11E.4050801@gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
	<47F2931A.5020809@gmail.com>
	<1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
	<47F3E11E.4050801@gmail.com>
Message-ID: <96c9d6a80804140921j34b8801el2ebb227cf22b3e8d@mail.gmail.com>

Just to wrap this thread up, I've settled on psycopg2.  It supports
SSL with server-/client-certificate verification while pygresql does
not.  Also, I've found that though the psycopg2 web site is generally
down (and out-of-date), the author _is_ actively developing psycopg2,
and even released version 2.0.7 _today_, which fixes a good number of
outstanding issues.

~ Nathan



From exarkun at divmod.com  Mon Apr 14 13:26:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Apr 2008 13:26:36 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <4800BC14.6070100@adm.umu.se>
Message-ID: <20080414172636.6859.497038764.divmod.quotient.29601@ohm>

On Sat, 12 Apr 2008 15:41:40 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Jean-Paul Calderone wrote:
>> [snip]
>>
>>_AbstractServer is private, so you shouldn't touch it.  You can look at its
>>implementation (barely a page) to get some hints about what to write, 
>>though.
>
>OK, this wasn't hard to do.
>
>But then I stumble on the next block and that's making a client use 
>M2Crypto.

Hmm.  I assumed M2Crypto had client integration as well.  That's too bad.

>This turned out to be a bit tougher since the choice of SSL implementation 
>is buried deep down in internet/tcp.py .

Yes.  However, this affects the server just as much as a client, so if
M2Crypto managed to do it for servers, it shouldn't be much more work to
do it for clients as well.

>Someone must have thought about allowing for a choice of implementation by 
>specifying an abstract definition of functionality (base class/interface), 
>right ?

Yes, http://twistedmatrix.com/trac/ticket/2706

As far as I know, no one has spent any time on it since the initial
discussion.

Jean-Paul



From exarkun at divmod.com  Mon Apr 14 13:30:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Apr 2008 13:30:15 -0400
Subject: [Twisted-Python] twisted/persisted/dirdbm -- is this async-safe?
In-Reply-To: <37d49ed40804121854g21c351dal8f2e4f88930fd47e@mail.gmail.com>
Message-ID: <20080414173015.6859.1276626864.divmod.quotient.29604@ohm>

On Sat, 12 Apr 2008 21:54:19 -0400, Andy Fundinger <andy at newworldelectric.com> wrote:
>I'm developing a pretty general storage system as part of a larger twisted
>project, basically I just need dbm file type storage for now, until I get a
>better grip on my actual needs.  I'm expecting to use this as a test of
>Amazon SimpleDB, but the polarrose.amazon module apparently needs python 2.5
>which my server doesn't have yet.  So I need a somewhat interim solution and
>went looking for it, I was thinking twisted.persisted.dirdbm, but when I
>went to hook it up I noticed no deffereds at all.  Can anyone elaborate on
>how this works?  Is it going to slide my webserver to a halt while it hits
>the disk?  Should I be looking at a different module?

You shouldn't use anything from twisted.persisted.  None of it provides a
real storage solution.  In any case, none of it does asynchronous disk IO
so none of it will let your server handle network events while it's reading
or writing data.

If you don't need something that actually works while you figure out
what your requirements are, then maybe you don't need a real storage
solution and you can use twisted.persisted.dirdbm.  In this case, do
you really care if it blocks a little bit?  Disks are typically pretty
fast, and OS filesystem caches even faster.

Jean-Paul



From jon at indelible.org  Tue Apr 15 02:05:13 2008
From: jon at indelible.org (Jon Parise)
Date: Mon, 14 Apr 2008 23:05:13 -0700
Subject: [Twisted-Python] twistd plugin documentation
Message-ID: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>

I was just reading through the "Writing a twistd Plugin"[1]
documentation and ran into some confusion.  If you follow the
suggested directory structure (e.g. MyProject/myproject/__init__.py)
and name the plugin file twisted/plugins/myproject.py, any attempt to
"import myproject" from within the plugin file will import the plugin
module and not the myproject module.

I see that Twisted itself prefixes its plugin files (e.g.
twisted_web.py), perhaps to get around this problem.

So does that plugin documentation need a small update, or have I done
something to trip myself up?

[1] http://twistedmatrix.com/projects/core/documentation/howto/tap.html

-- 
Jon Parise (jon of indelible.org) :: "Scientia potentia est"



From miles.chris at gmail.com  Tue Apr 15 02:44:20 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Tue, 15 Apr 2008 16:44:20 +1000
Subject: [Twisted-Python] twistd plugin documentation
In-Reply-To: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
References: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
Message-ID: <8356DED9-CA5E-46D2-BCE8-15D67DD8A473@gmail.com>


On 15/04/2008, at 4:05 PM, Jon Parise wrote:
> I was just reading through the "Writing a twistd Plugin"[1]
> documentation and ran into some confusion.  If you follow the
> suggested directory structure (e.g. MyProject/myproject/__init__.py)
> and name the plugin file twisted/plugins/myproject.py, any attempt to
> "import myproject" from within the plugin file will import the plugin
> module and not the myproject module.
>
> I see that Twisted itself prefixes its plugin files (e.g.
> twisted_web.py), perhaps to get around this problem.
>
> So does that plugin documentation need a small update, or have I done
> something to trip myself up?

I think you're right, I remember it confused me a little too.  I just  
name my plugins like twisted/plugins/myproject_plugin.py

Cheers
CM




From mailing_lists at evotex.ch  Tue Apr 15 03:49:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 09:49:01 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <1208179659.14261.18.camel@localhost.localdomain>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
Message-ID: <48045DED.3000201@evotex.ch>

Itamar Shtull-Trauring wrote:
> On Mon, 2008-04-14 at 12:35 +0200, Gabriel Rossetti wrote:
>   
>> I'm wondering if maybe I'm misunderstanding something here, when several 
>> messages arrive, what happens, are they processed in parallel, are they 
>> put in a queue and processes sequentially? 
>>     
>
> Sequentially. Twisted does not expose use of threads to user-level
> APIs... and Twisted APIs are not thread-safe, other than
> reactor.callFromThread.
>
>   
>> If I receive a message, do 
>> some heavy processing/io/potentially blocking code in a thread using 
>> twisted's threading module, and before it's done, I get another 
>> connection + message that needs the same thing to be done, what
>> happens? 
>>     
>
> reactor.callInThread (and therefore deferToThread) are built on top of a
> thread-safe Queue. Just make sure your scheduled tasks are not calling
> back into Twisted but are rather self-contained units of work.
>
>   
Ok, but if connection1 comes, it does some processing by using a thread 
or a process (with twisted's functions) and connection2 comes, will 
connection2 wait for connection1 to finish, or will connection1 be put 
on the side while it waits for the thread and connection 2 is taken. 
Also, what event makes the next connection be

 think what I don't get is that with thread network code, each thread is 
an individual self-contained unit that does whatever processing it needs 
to do however long it may need to take, and the OS takes care of 
scheduling each thread, but with twisted, the main thread executes each 
connection one by one sequentially and thus if one of them needs to to 
some lengthy processing, it will block all other connections from being 
processed, so you have to use threads to keep it from blocking, but 
somehow the active connection should become inactive while the 
processing thread does it's work, so that another connection can be 
processed in the meantime. Is that how it works? So twisted's event loop 
(reactor) does the same work as the OS's scheduler?

Thanks



From sipickles at hotmail.com  Tue Apr 15 04:25:28 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 15 Apr 2008 09:25:28 +0100
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48045DED.3000201@evotex.ch>
References: <48032C17.9010803@evotex.ch>
	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
Message-ID: <BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>



Gabriel Rossetti wrote:
> each thread is an individual self-contained unit that does whatever 
> processing it needs to do however long it may need to take, and the OS 
> takes care of scheduling each thread, but with twisted, the main 
> thread executes each connection one by one sequentially and thus if 
> one of them needs to to some lengthy processing, it will block all 
> other connections from being processed, so you have to use threads to 
> keep it from blocking, but somehow the active connection should become 
> inactive while the processing thread does it's work, so that another 
> connection can be processed in the meantime.
>
>
Hi Gabriel,

Have you considered implementing Stackless python in partnership with 
Twisted? I am finding it very useful for handling multiple concurrent 
connections in a single thread. (it uses a scheduler which can switch 
between tasklets, in a yield fashion.)

The programmer has complete control over where this tasklet switching 
takes place, vastly simplifying things over multi-threading. If one 
connection involves some heavy processing, I simply add a 
stackless.schedule() in the blocking loop which allows waiting jobs to 
run too. Overhead for this tasklet switching is almost negligible too, 
unlike threads.

Regards

Simon





From andrew-twisted at puzzling.org  Tue Apr 15 04:50:26 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Apr 2008 18:50:26 +1000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48045DED.3000201@evotex.ch>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
Message-ID: <20080415085026.GD15066@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> think what I don't get is that with thread network code, each thread is  
> an individual self-contained unit that does whatever processing it needs  
> to do however long it may need to take, and the OS takes care of  
> scheduling each thread, but with twisted, the main thread executes each  
> connection one by one sequentially and thus if one of them needs to to  
> some lengthy processing, it will block all other connections from being  
> processed, so you have to use threads to keep it from blocking, but  
> somehow the active connection should become inactive while the  
> processing thread does it's work, so that another connection can be  
> processed in the meantime. Is that how it works? So twisted's event loop  
> (reactor) does the same work as the OS's scheduler?

In Twisted, code all runs in the main thread, so the way handling multiple
connections works is that control is frequently returned to the reactor.

So if a new connection is received, a protocol instance is made and its
"connectionMade" method called, and as soon as that is done the reactor goes on
to the next thing.  That might be another connectionMade for a new connection,
or it might be delivering a few bytes to a protocol (via calling dataReceived on
it).  So there a lots of events, but the event handlers (i.e. things like
methods on Protocol subclasses) don't block, so they return control very
quickly.

In threaded network code typically you frequently do "sock.recv()" and similar,
to block.  In Twisted you just omit that; your protocol's dataReceived will be
called whenever there's some data.  This frees up the main thread to be doing
other work when there's nothing happening on an individual connection.  So
that's how multiple connections can be handled concurrently in a single thread
in Twisted.

The only rule is that you cannot block in the main thread.  If you want to do
something blocking, find a different way to do it (or if you have to, do it in a
thread and let the main thread continue, but at least for network I/O that's
never necessary in Twisted).

Does that help?

-Andrew.




From mailing_lists at evotex.ch  Tue Apr 15 05:55:49 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 11:55:49 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <20080415085026.GD15066@steerpike.home.puzzling.org>
References: <48032C17.9010803@evotex.ch>
	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>	<48045DED.3000201@evotex.ch>
	<20080415085026.GD15066@steerpike.home.puzzling.org>
Message-ID: <48047BA5.5020100@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
> [...]
>   
>> think what I don't get is that with thread network code, each thread is  
>> an individual self-contained unit that does whatever processing it needs  
>> to do however long it may need to take, and the OS takes care of  
>> scheduling each thread, but with twisted, the main thread executes each  
>> connection one by one sequentially and thus if one of them needs to to  
>> some lengthy processing, it will block all other connections from being  
>> processed, so you have to use threads to keep it from blocking, but  
>> somehow the active connection should become inactive while the  
>> processing thread does it's work, so that another connection can be  
>> processed in the meantime. Is that how it works? So twisted's event loop  
>> (reactor) does the same work as the OS's scheduler?
>>     
>
> In Twisted, code all runs in the main thread, so the way handling multiple
> connections works is that control is frequently returned to the reactor.
>
> So if a new connection is received, a protocol instance is made and its
> "connectionMade" method called, and as soon as that is done the reactor goes on
> to the next thing.  That might be another connectionMade for a new connection,
> or it might be delivering a few bytes to a protocol (via calling dataReceived on
> it).  So there a lots of events, but the event handlers (i.e. things like
> methods on Protocol subclasses) don't block, so they return control very
> quickly.
>
> In threaded network code typically you frequently do "sock.recv()" and similar,
> to block.  In Twisted you just omit that; your protocol's dataReceived will be
> called whenever there's some data.  This frees up the main thread to be doing
> other work when there's nothing happening on an individual connection.  So
> that's how multiple connections can be handled concurrently in a single thread
> in Twisted.
>
> The only rule is that you cannot block in the main thread.  If you want to do
> something blocking, find a different way to do it (or if you have to, do it in a
> thread and let the main thread continue, but at least for network I/O that's
> never necessary in Twisted).
>
> Does that help?
>
> -Andrew.
>
>   
Yes Andrew, thanks! So keeps a list of all connections around and does 
something with them when there is something to be done. So if I have a 
shared list, only one connection actually access it at a time, thus 
mutexes don't need to be used, but if something needs to be atomic, like 
one message depending on the answer of another, I would use deferred 
objects, If I need to to some heavy I/O (other than network) or lengthy 
processing I would use a thread that returns a deferred, correct? So 
like in code that calls an external program and I need to do something 
when it is done, I would use twisted.internet.utils.getProcessValue(), 
get a deferred and add a callback to do whatever I need to do when it is 
done. Ok, I get it better now :-)

Thanks for all your help (Andrew and others)!!
Gabriel



From andrew-twisted at puzzling.org  Tue Apr 15 06:38:27 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Apr 2008 20:38:27 +1000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48047BA5.5020100@evotex.ch>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
	<20080415085026.GD15066@steerpike.home.puzzling.org>
	<48047BA5.5020100@evotex.ch>
Message-ID: <20080415103827.GF15066@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> Yes Andrew, thanks! So keeps a list of all connections around and does  
> something with them when there is something to be done. So if I have a  
> shared list, only one connection actually access it at a time, thus  
> mutexes don't need to be used, but if something needs to be atomic, like  
> one message depending on the answer of another, I would use deferred  
> objects, If I need to to some heavy I/O (other than network) or lengthy  
> processing I would use a thread that returns a deferred, correct? So  
> like in code that calls an external program and I need to do something  
> when it is done, I would use twisted.internet.utils.getProcessValue(),  
> get a deferred and add a callback to do whatever I need to do when it is  
> done. Ok, I get it better now :-)

Yep, it looks like you've got it :)

-Andrew.




From chris.yan at saybot.com  Tue Apr 15 06:38:28 2008
From: chris.yan at saybot.com (Chris)
Date: Tue, 15 Apr 2008 18:38:28 +0800
Subject: [Twisted-Python] about smtp client auth problem.
Message-ID: <480485A4.6060808@saybot.com>

Hi,
I am trying to use twisted to implement a script to send the email,I got
some problem.here is the script:
####################
import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.python import log
from twisted.internet import defer, reactor
from twisted.mail import smtp

mailFrom = "chris.yan at xxxx.com"
mailTo = ["chrisyan81 at gmail.com",]
mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
From: chris.yan at xxxx.com
To: chrisyan81 at gmail.com
Subject: Tutorate!

Hello, how are you, goodbye.
""")

whenDone = defer.Deferred()

def send(r):
print "message sent:", r

whenDone.addCallbacks(send, log.err)

def done(d):
from twisted.internet import reactor
reactor.callLater(1, reactor.stop)

whenDone.addBoth(done)


sender = smtp.ESMTPSenderFactory(
'chris.yan',
'xxxxxx',
mailFrom,
mailTo,
mail,
whenDone,
requireTransportSecurity=False
)

smtpClientService = internet.TCPClient('smtp.xxxx.com', 25, sender)
smtpClientService.setServiceParent(application)

in fact the script from
http://twistedmatrix.com/pipermail/twisted-python/2006-November/014299.html,and
I didn't modify anything except my own information.Because the smtp
server doesn't support SSL,so I use requireTransportSecurity=False.

here is the output:

2008/04/15 17:56 +0800 [-] Log opened.
2008/04/15 17:56 +0800 [-] twistd 2.5.0 (C:\Python25\python.exe 2.5.2)
starting up
2008/04/15 17:56 +0800 [-] reactor class: <class
'twisted.internet.selectreactor.SelectReactor'>
2008/04/15 17:56 +0800 [-] Loading smtpclient_tls_001.py...
2008/04/15 17:56 +0800 [-] Loaded.
2008/04/15 17:56 +0800 [-] Starting factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x01347878>
2008/04/15 17:56 +0800 [ESMTPSender,client] Unhandled Error
Traceback (most recent call last):
Failure: twisted.mail.smtp.AUTHRequiredError: 502 Server does not
support Client Authentication schemes [CRAM-MD
5, LOGIN, PLAIN]

<<< 250-AUTH
<<< 250-AUTH=PLAIN LOGIN LOGIN
<<< 250-XXXXXXXA
<<< 250 XXXB

2008/04/15 17:56 +0800 [ESMTPSender,client] Stopping factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x0134787
8>
2008/04/15 17:56 +0800 [-] Main loop terminated.
2008/04/15 17:56 +0800 [-] Server Shut Down.

but when I use another script which uses smtplib:
SMTP_server='smtp.xxxx.com'
SMTP_user='chris.yan'
SMTP_passwd='xxxxx'

def
send_email(Subject,From,To,Attachment,Body,SMTP_server,SMTP_user,SMTP_passwd):
msg = MIMEMultipart()
msg['Subject'] = Subject
msg['From'] = From
msg['To'] = To


txt = MIMEText(Body,_charset='utf-8')
msg.attach(txt)

filename = Attachment
if not os.path.isfile(filename):
print 'Can not find file %s,please check!' % filename
sys.exit(1)

fp = open(filename,'rb')
ctype,encoding = mimetypes.guess_type(filename)
if ctype is None or encoding is not None:
ctype = 'application/octet-stream'
maintype,subtype = ctype.split('/',1)
m = MIMEBase(maintype,subtype)
m.set_payload(fp.read())
fp.close()
Encoders.encode_base64(m)
m.add_header('Content-disposition','attachment',filename=filename)
msg.attach(m)

s = smtplib.SMTP(SMTP_server)
s.debuglevel = 5
s.ehlo()
s.esmtp_features["auth"] = "LOGIN"

s.login(SMTP_user,SMTP_passwd)
s.sendmail(From,To,msg.as_string())
s.close()

I can get the output:
send: 'ehlo chris.shuobaotang.com\r\n'
reply: '250-mail.saybot.com Hello chris.shuobaotang.com [218.79.132.2]\r\n'
reply: '250-SIZE 52428800\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-AUTH \r\n'
reply: '250-AUTH=PLAIN LOGIN LOGIN\r\n'
reply: '250-XXXXXXXA\r\n'
reply: '250 XXXB\r\n'
reply: retcode (250); Msg: mail.saybot.com Hello chris.shuobaotang.com
[218.79.132.2]
SIZE 52428800
PIPELINING
AUTH
AUTH=PLAIN LOGIN LOGIN
XXXXXXXA
XXXB
send: 'AUTH LOGIN Y2hyaXMueWFu\r\n'
reply: '334 UGFzc3dvcmQ6\r\n'
reply: retcode (334); Msg: UGFzc3dvcmQ6
send: 'd3JpbHV5Yg==\r\n'
reply: '235 Authentication succeeded\r\n'
reply: retcode (235); Msg: Authentication succeeded
send: 'mail FROM:<chris.yan at saybot.com> size=668\r\n'
reply: '250 OK\r\n'
reply: retcode (250); Msg: OK
send: 'rcpt TO:<chrisyan81 at gmail.com>\r\n'
reply: '250 Accepted\r\n'
reply: retcode (250); Msg: Accepted
send: 'data\r\n'
reply: '354 Enter message, ending with "." on a line by itself\r\n'
reply: retcode (354); Msg: Enter message, ending with "." on a line by
itself
data: (354, 'Enter message, ending with "." on a line by itself')
send: 'Content-Type: multipart/mixed;
boundary="===============1595669237=="\r\nMIME-Version: 1.0\r\nSubject:
scores fro
m saybot rater.\r\nFrom: chris.yan at saybot.com\r\nTo:
chrisyan81 at gmail.com\r\n\r\n--===============1595669237==\r\nConten
t-Type: text/plain; charset="utf-8"\r\nMIME-Version:
1.0\r\nContent-Transfer-Encoding: base64\r\n\r\nSGksCiAgICBUaGlzIGl
zIHRoZSBzY29yZXMgd2hpY2ggZ2VuZXJhdGVkIGJ5IHNheWJvdCByYXRl\r\ncixwbGVhc2UgY2hlY2sgdGhlIGF0dGFjaG1lbnQhCgpCZXN0UmVnYXJkCkN
ocmlzCg==\r\n\r\n--===============1595669237==\r\nContent-Type:
text/plain\r\nMIME-Version: 1.0\r\nContent-Transfer-Enco
ding: base64\r\nContent-disposition: attachment;
filename="scores.txt"\r\n\r\nMTM4MTMwMzE0NzUg17/Hvw0K\r\n\r\n--========
=======1595669237==--\r\n.\r\n'
reply: '250 OK id=1Jlhvl-00071w-1f\r\n'
reply: retcode (250); Msg: OK id=1Jlhvl-00071w-1f
data: (250, 'OK id=1Jlhvl-00071w-1f')
Done.

some guy said,this script force to use the LOGIN auth,because something
wrong with the server,is it true?I don't know very much about the mail
server,does any one can tell me if I can make my twisted script work?I
really like to implement a twisted one.

BestWishes
Chris






From mailing_lists at evotex.ch  Tue Apr 15 07:24:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 13:24:12 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>
References: <48032C17.9010803@evotex.ch>	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>	<48045DED.3000201@evotex.ch>
	<BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>
Message-ID: <4804905C.5030608@evotex.ch>

Simon Pickles wrote:
>
>
> Gabriel Rossetti wrote:
>> each thread is an individual self-contained unit that does whatever 
>> processing it needs to do however long it may need to take, and the 
>> OS takes care of scheduling each thread, but with twisted, the main 
>> thread executes each connection one by one sequentially and thus if 
>> one of them needs to to some lengthy processing, it will block all 
>> other connections from being processed, so you have to use threads to 
>> keep it from blocking, but somehow the active connection should 
>> become inactive while the processing thread does it's work, so that 
>> another connection can be processed in the meantime.
>>
>>
> Hi Gabriel,
>
> Have you considered implementing Stackless python in partnership with 
> Twisted? I am finding it very useful for handling multiple concurrent 
> connections in a single thread. (it uses a scheduler which can switch 
> between tasklets, in a yield fashion.)
>
> The programmer has complete control over where this tasklet switching 
> takes place, vastly simplifying things over multi-threading. If one 
> connection involves some heavy processing, I simply add a 
> stackless.schedule() in the blocking loop which allows waiting jobs to 
> run too. Overhead for this tasklet switching is almost negligible too, 
> unlike threads.
>
> Regards
>
> Simon
>
>
Thanks Simon, I'll look into that, but I think that now that I 
understand better how twisted works, I'll stick with it "purely" :-)

Stackless is a python distrib though, from what I see.

Thanks,
Gabriel



From exarkun at divmod.com  Tue Apr 15 08:01:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Apr 2008 08:01:13 -0400
Subject: [Twisted-Python] about smtp client auth problem.
In-Reply-To: <480485A4.6060808@saybot.com>
Message-ID: <20080415120113.6859.490721552.divmod.quotient.30011@ohm>

On Tue, 15 Apr 2008 18:38:28 +0800, Chris <chris.yan at saybot.com> wrote:
>Hi,
>I am trying to use twisted to implement a script to send the email,I got
>some problem.here is the script:
>####################
> [snip]
>
><<< 250-AUTH
><<< 250-AUTH=PLAIN LOGIN LOGIN
><<< 250-XXXXXXXA
><<< 250 XXXB
>
> [snip]
>
>some guy said,this script force to use the LOGIN auth,because something
>wrong with the server,is it true?I don't know very much about the mail
>server,does any one can tell me if I can make my twisted script work?I
>really like to implement a twisted one.

Indeed, the ESMTP server is not correctly advertising its support for the
AUTH extension.  

You can hack around this by going up to the ESMTP protocol implementation
in Twisted and tweaking its behavior a bit with a subclass (untested):

  from twisted.mail.smtp import ESMTPClient

  class ForceLOGINESMTPClient(ESMTPClient):
      def authenticate(self, code, resp, items):
          if 'AUTH=PLAIN' in items:
              items['AUTH'] = 'PLAIN ' + items['AUTH=PLAIN']
          return ESMTPClient.authenticate(self, code, resp, items)

Then, use this protocol with your ESMTPSenderFactory.  The idea here is
that this subclass notices the particular kind of malformed response this
server sends and adjusts it slightly.  This is a bit better than the other
version you gave which just hard-coded LOGIN, since it should manage to
actually correctly interpret the mechanisms the server is advertising.  Of
course, it may be a bit more fragile too, since it depends on the exact
kind of misformatting the server is doing.  If you want to avoid that,
you can hard-code LOGIN by just setting items['AUTH'] = 'LOGIN'.

Hope this helps,

Jean-Paul



From radix at twistedmatrix.com  Tue Apr 15 09:21:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Apr 2008 09:21:55 -0400
Subject: [Twisted-Python] twistd plugin documentation
In-Reply-To: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
References: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
Message-ID: <60ed19d40804150621i1e0b3b1aw5a43138d546327d3@mail.gmail.com>

On Tue, Apr 15, 2008 at 2:05 AM, Jon Parise <jon at indelible.org> wrote:
> I was just reading through the "Writing a twistd Plugin"[1]
>  documentation and ran into some confusion.  If you follow the
>  suggested directory structure (e.g. MyProject/myproject/__init__.py)
>  and name the plugin file twisted/plugins/myproject.py, any attempt to
>  "import myproject" from within the plugin file will import the plugin
>  module and not the myproject module.

Thanks, I've filed a bug at

http://twistedmatrix.com/trac/ticket/3183




-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From duncan.mcgreggor at gmail.com  Tue Apr 15 11:52:23 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue, 15 Apr 2008 10:52:23 -0500
Subject: [Twisted-Python] Founding Sponsors Window Closes May 15th
Message-ID: <1208274743.5193.6.camel@gondor>

Current Founding Sponsors: You guys rock! Thanks!

Potential Founding sponsors: You too can rock, but you only have a
limited window of opportunity in which to do so :-)

We were going to set the deadline to April 30th, but we've been so busy
working with those of you that have been sponsoring that we didn't get
the chance (just look at those awesome logos on the front page!) to send
out an email. We wanted to provide people and companies with a 30 day
notice, so May 15th it is.

Thanks again, everyone -- you are helping make Twisted a thriving
project that gives you more and more of what you need.

d




From gregtech at wp.pl  Tue Apr 15 14:03:56 2008
From: gregtech at wp.pl (Grzesiek Slusarek)
Date: Tue, 15 Apr 2008 20:03:56 +0200
Subject: [Twisted-Python] Twisted and ZSI
Message-ID: <4804ee0c78cdc@wp.pl>

Hello.
Is there any examples, manuals or tutorials how to use ZSI webservice 
under Twisted?? Thanks for anyone who points me in the right direction. 
I need to write ZSI webservice which can serve about 30 parallel 
connection and as far I know only under Twisted, ZSI can do that.

Thanks for any help
Grzegorz ?lusarek

----------------------------------------------------
Najpi?kniejszy g?os kobiecego jazzu - STACEY KENT 
16.05 20:00 Warszawa, 17.05 20:00 Pozna?
bilety: Ticketonline, Ticketpro, Shortcut, Eventim
http://klik.wp.pl/?adr=http%3A%2F%2Fcorto.www.wp.pl%2Fas%2Fkentwpolsce.html&sid=312





From nathan.stocks at gmail.com  Tue Apr 15 14:55:28 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 15 Apr 2008 12:55:28 -0600
Subject: [Twisted-Python] Is there twisted.enterprise.adbapi support for
	.executemany()?
Message-ID: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>

Does anyone know of any (possibly experimental)
twisted.enterprise.adbapi support for .executemany() ?

(see http://www.python.org/dev/peps/pep-0249/ -- search for ".executemany")

If not, I'll see if I can't add a runOperationMany() to
twisted.enterprise.adbapi.ConnectionPool.  The functionality I want is
simple in theory.  .executemany runs many identical
insert/update/delete operations using a different dictionary in a
supplied list of dictionaries for the input each time, and returns
None on success of all of the queries, or rolls-back the whole
transaction and returns a failure on an error.  Passing it in any
query that returns results would also result in returning a failure.

~ Nathan



From phil at bubblehouse.org  Tue Apr 15 15:08:47 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 15 Apr 2008 15:08:47 -0400
Subject: [Twisted-Python] Is there twisted.enterprise.adbapi support for
	.executemany()?
In-Reply-To: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>
References: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>
Message-ID: <ABE6B556-B56B-4E61-8897-465F11083C64@bubblehouse.org>

On Apr 15, 2008, at 2:55 PM, Nathan wrote:
> Does anyone know of any (possibly experimental)
> twisted.enterprise.adbapi support for .executemany() ?
>
> (see http://www.python.org/dev/peps/pep-0249/ -- search for  
> ".executemany")
>
> If not, I'll see if I can't add a runOperationMany() to
> twisted.enterprise.adbapi.ConnectionPool.  The functionality I want is
> simple in theory.

It definitely wouldn't be hard to create this function. You could add  
it to ConnectionPool, but a subclass would work equally well.

Just take a look at how runOperation works, and create a similar  
function, runOperationMany(trans, *args, **kwargs). This should call  
runInteraction and pass your second function _runOperationMany(trans,  
*args, **kwargs) which uses the `trans` as the cursor object.

Transaction instances like that automatically inherit all the  
attributes of the base cursor class in your particular driver, so you  
should be able to call executemany() without a problem.

Hope that helps,

-phil



From chris.yan at saybot.com  Tue Apr 15 23:09:47 2008
From: chris.yan at saybot.com (Chris)
Date: Wed, 16 Apr 2008 11:09:47 +0800
Subject: [Twisted-Python] Re: about smtp client auth problem.
In-Reply-To: <E1JlnZk-0006P9-Ec@cube.twistedmatrix.com>
References: <E1JlnZk-0006P9-Ec@cube.twistedmatrix.com>
Message-ID: <48056DFB.2070004@saybot.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080416/cb38e419/attachment.htm 

From paulalexwilson at gmail.com  Wed Apr 16 08:22:58 2008
From: paulalexwilson at gmail.com (Paul Wilson)
Date: Wed, 16 Apr 2008 13:22:58 +0100
Subject: [Twisted-Python] Twisted Advice
Message-ID: <3c3d11cf0804160522m3c9bf1b5ubf12959165cdbe61@mail.gmail.com>

Hi!

I am researching technologies for building an application development
framework with Python, and have been interested in Twisted to manage
the network communication side of things. However, I read something
yesterday that appears to undermine the applicability of twisted for
my work. I've done quite a bit of reading around the subject since,
and have ended up confusing myself!

A remote client accesses my server to get instructions on how to
progress a customer "interaction." The remote client is itself a
server driven by a telephone call and keytone input. The remote client
could be servicing N calls (channels) simultaneously, and thus my
server needs to support N simultaneous TCP connections. Pretty
standard stuff.

I would like to provide an environment where developers can write call
servicing applications with no knowledge of the network. I had rested
on a coroutine approach, whereby a developer could write something
like this:

   response, events = (yield getKeyPress(SomePromptAnnouncement))

With the response, the developer can do an undefined number of things,
taking an undefined amount of time. During this time, management
events can arrive on a separate port, to which the developer gets
knowledge of through the yield statement.

On the other side of this generator is a scheduler which takes
instructions such as "getKeyPress" and passes it through twisted to
the remote client, such that it can play the announcement and get a
keypress. The scheduler gets the response and sends to back to the
generator, along with any events that have arrived on this separate
port.

When a call/connection arrives, the client will send an opening
line(s) to which I was specify the correct LineRecieved method. This
will trigger some scheduler code defined elsewhere via a deferred,
which will prompt the developer's code for some instructions, such as
"PlayPrompt". Am I correct in thinking that while a developer's code
is executing, all other connections are paused, and that the twisted
server will not accept new connections until it returns?

My original assumption was that Twisted would spawn a new thread
within which the scheduler would be set to run to manage the
communication for the duration of the customer call/interaction.
However, the approach taken by twisted is that if the developer's code
got itself in a muddle or infinite loop or took a very long time
accessing a database, the rest of the application would just be
frozen.

I wrote a quick test app that defers to a function that sleeps then
returns its response line. During the 20 seconds that the test server
took to return a line, the server would not accept any other requests
until the sleep function ended.

Clearly, I must be missing something; I have designed my application
upon the wrong axis. If so, I have some misunderstanding as to how to
properly structure an application like this upon Twisted. Or, twisted
is a framework whereby the response to a network event is expect to
arrive immediately.

I have seen "deferToThread" mentioned but I cannot find enough
documentation to decide whether it's what I need or not. Or perhaps
callInThread() is what I need?

Any suggestions about this would be very much appreciated. Even
better, if anybody knows of good documentation/tutorials they can
point me to, that would be appreciated also.

Regards,
Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 09:15:12 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 15:15:12 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
Message-ID: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>

Hi out there

Let me tell you about my experience with TM so far ...

Seeing there is doc. available, I digged through it. After all TM seems
worth the effort. From what I see, I love TM.

Links are often broken, though. Often seemingly useful doc. is old, very
old. Even current doc. isn't up to date.

Anyway, I try and I mean I try hard to get on my feet following some
examples and snippets. The problem isn't the
deferreds. I understand them pretty quickly and like them. The problem is
that the docs are like a maze, irritating, frustrating and misleading rather
than helping.

Trying to write a rpy. Of course, it doesn't
work. Looking at all those different docs, I'm bewildered. Somehow
hacking my way through it.
They talk about "resource trees", yet I don't find them in the doc. I find
putchild() but all examples and docs indicate, that you can do it only
within the root resource.
Again browsing, again looking desperately for some docs, that don't mislead
and make things even more fuzzy. Falling over an article with some halfway
useful tap doc.
OK, a little later, I
have my first web server running an my first rpy works, spitting out
"test". Wow.

I'm wondering, why of all things "rpy" ? python won't generate sth. like
"rpyc" for that, which translates in lost speed, I assume. No explanation.

I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
journey begins ...
the py-kqueue in FreeBSD 6.3 and 7.0 is version 1.4. I remember, however,
having read something by Isthmar Trauring Shtull (forgive me, if I didn't
spell that correctly) that I need version 1.3 in order to apply his patch,
which, of course (sorry, that's my disappointment carrying me away ...),
doesn't work. No prob, I do it by
hand. To no avail. That code is old, very old and it doesn't work.
I remember havin seen some version 2 of pykqueue. Setup works nicely but
Python/twisted coughs. The module has another name now. "(%"%?$( !!!
So I fall back to the version 1.4 that comes with FreeBSD ports. It works.
But in no-deamon mode only. As soon as I tell twistd to run web.tap
deamonized it vomitts and breaks.

Intense googleing, and I mean "intense". Reading through years of this
mailing list. No positive result.

What I say is said, because I love python an I consider twisted brilliant
and immensely useful - theoretically. So, don't get me wrong and accept it
as constructive, albeit somewhat pissed off remarks, OK :)

I have the clear impression that twisted is something in between a toy and a
brilliant product. It's hackers, however, leave much to be desired in terms
of usefulness. As it is, it's a great and promising hobby but not a useful
product.

Sorry, but doc strings don't replcae a halfway decent documentation and a
reasonable tutorial, considering the highly complex matter.
Sorry, but documentation that is often enough outdated and sometimes offers
broken links is next to useless.
Sorry, but the most brilliant code is a lot less attractive and useful, if
even "stable versions" are broken, in flux, etc ...

Kqueue seems to be vital to an event driven approach like TM, yet there are
multiple versions of pykqueue floating
around, none of them properly working (and I didn't fumble around. I
plain simply used the FreeBSD port), some of
them with some mor and some with some less "annotations" (I refuse to
call that doc.)

- How about getting 1 version of pykqueue properly running and into TM ?
- How about freezing some TM version (like 8.0) and updating/matching docs?
(Of course, experiments are funny and intriguing, but quite some of us out
here need sth. stable for everydays work)
- How about writing some complete docs and tutorials? Sth. along the lines
of "My first web server wit TM" (instead all those - sometimes seeming to
contradict each other - snippets)

I'm still fascinated by TM and still willingto invest time, efforts and
brains. But I'd love to have some properly working base and docs that
exp?lain rather than confuse.

Looking forward to learn and enjoy.

(Yes, Should someone need sth. tested on FreeBSD, I'll gladly be of service)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080416/5df2105f/attachment.htm 

From jcd at sdf.lonestar.org  Wed Apr 16 09:36:56 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Wed, 16 Apr 2008 09:36:56 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <1208353016.3320.4.camel@aalcdl07.lib.unc.edu>

On Wed, 2008-04-16 at 15:15 +0200, Dr aio wrote:
> Hi out there
> 
> Let me tell you about my experience with TM so far ...
> 
> Seeing there is doc. available, I digged through it. After all TM
> seems worth the effort. From what I see, I love TM.
> 
> Links are often broken, though. Often seemingly useful doc. is old,
> very old. Even current doc. isn't up to date.
> 
> Anyway, I try and I mean I try hard to get on my feet following some
> examples and snippets. The problem isn't the
> deferreds. I understand them pretty quickly and like them. The problem
> is that the docs are like a maze, irritating, frustrating and
> misleading rather than helping.
> 
> Trying to write a rpy. Of course, it doesn't
> work. Looking at all those different docs, I'm bewildered. Somehow hacking my way through it.
> They talk about "resource trees", yet I don't find them in the doc. I
> find putchild() but all examples and docs indicate, that you can do it
> only within the root resource.
> Again browsing, again looking desperately for some docs, that don't
> mislead and make things even more fuzzy. Falling over an article with
> some halfway useful tap doc.
> OK, a little later, I
> have my first web server running an my first rpy works, spitting out "test". Wow.
> 
> I'm wondering, why of all things "rpy" ? python won't generate sth.
> like "rpyc" for that, which translates in lost speed, I assume. No
> explanation. 
> 
> I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
> journey begins ...
> the py-kqueue in FreeBSD 6.3 and 7.0 is version 1.4. I remember,
> however, having read something by Isthmar Trauring Shtull (forgive me,
> if I didn't spell that correctly) that I need version 1.3 in order to
> apply his patch, which, of course (sorry, that's my disappointment
> carrying me away ...), doesn't work. No prob, I do it by
> hand. To no avail. That code is old, very old and it doesn't work.
> I remember havin seen some version 2 of pykqueue. Setup works nicely
> but Python/twisted coughs. The module has another name now. "(%"%?
> $( !!!
> So I fall back to the version 1.4 that comes with FreeBSD ports. It
> works. But in no-deamon mode only. As soon as I tell twistd to run
> web.tap deamonized it vomitts and breaks.
> 
> Intense googleing, and I mean "intense". Reading through years of this
> mailing list. No positive result.
> 
> What I say is said, because I love python an I consider twisted
> brilliant and immensely useful - theoretically. So, don't get me wrong
> and accept it as constructive, albeit somewhat pissed off remarks,
> OK :)
> 
> I have the clear impression that twisted is something in between a toy
> and a brilliant product. It's hackers, however, leave much to be
> desired in terms of usefulness. As it is, it's a great and promising
> hobby but not a useful product.
> 
> Sorry, but doc strings don't replcae a halfway decent documentation
> and a reasonable tutorial, considering the highly complex matter.
> Sorry, but documentation that is often enough outdated and sometimes
> offers broken links is next to useless.
> Sorry, but the most brilliant code is a lot less attractive and
> useful, if even "stable versions" are broken, in flux, etc ...
> 
> Kqueue seems to be vital to an event driven approach like TM, yet
> there are multiple versions of pykqueue floating
> around, none of them properly working (and I didn't fumble around. I plain simply used the FreeBSD port), some of 
> them with some mor and some with some less "annotations" (I refuse to call that doc.)
> 
> - How about getting 1 version of pykqueue properly running and into
> TM ?
> - How about freezing some TM version (like 8.0) and updating/matching
> docs? (Of course, experiments are funny and intriguing, but quite some
> of us out here need sth. stable for everydays work)
> - How about writing some complete docs and tutorials? Sth. along the
> lines of "My first web server wit TM" (instead all those - sometimes
> seeming to contradict each other - snippets)
> 
> I'm still fascinated by TM and still willingto invest time, efforts
> and
> brains. But I'd love to have some properly working base and docs that exp?lain rather than confuse.
> 
> Looking forward to learn and enjoy.
> 
> (Yes, Should someone need sth. tested on FreeBSD, I'll gladly be of
> service)

Dr. Aio,

Have you tried the finger tutorial.
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

It's certainly well more than a snippet, and goes through getting a
finger server up and running quickly, and then refactoring it for
greater robustness.

It doesn't answer all your concerns, but it's worth spending some time
on.  

Cheers,
Cliff





From exarkun at divmod.com  Wed Apr 16 09:47:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 09:47:40 -0400
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <3c3d11cf0804160522m3c9bf1b5ubf12959165cdbe61@mail.gmail.com>
Message-ID: <20080416134740.6859.1236826826.divmod.quotient.30587@ohm>

On Wed, 16 Apr 2008 13:22:58 +0100, Paul Wilson <paulalexwilson at gmail.com> wrote:
>Hi!
>
>I am researching technologies for building an application development
>framework with Python, and have been interested in Twisted to manage
>the network communication side of things. However, I read something
>yesterday that appears to undermine the applicability of twisted for
>my work. I've done quite a bit of reading around the subject since,
>and have ended up confusing myself!
>
>A remote client accesses my server to get instructions on how to
>progress a customer "interaction." The remote client is itself a
>server driven by a telephone call and keytone input. The remote client
>could be servicing N calls (channels) simultaneously, and thus my
>server needs to support N simultaneous TCP connections. Pretty
>standard stuff.
>
>I would like to provide an environment where developers can write call
>servicing applications with no knowledge of the network. I had rested
>on a coroutine approach, whereby a developer could write something
>like this:
>
>   response, events = (yield getKeyPress(SomePromptAnnouncement))
>

Just to clarify - this looks like a generator rather than a coroutine.

>With the response, the developer can do an undefined number of things,
>taking an undefined amount of time. During this time, management
>events can arrive on a separate port, to which the developer gets
>knowledge of through the yield statement.
>
>On the other side of this generator is a scheduler which takes
>instructions such as "getKeyPress" and passes it through twisted to
>the remote client, such that it can play the announcement and get a
>keypress. The scheduler gets the response and sends to back to the
>generator, along with any events that have arrived on this separate
>port.
>
>When a call/connection arrives, the client will send an opening
>line(s) to which I was specify the correct LineRecieved method. This
>will trigger some scheduler code defined elsewhere via a deferred,
>which will prompt the developer's code for some instructions, such as
>"PlayPrompt". Am I correct in thinking that while a developer's code
>is executing, all other connections are paused, and that the twisted
>server will not accept new connections until it returns?

Yes, that's correct.  Twisted is single-threaded - it invokes event
handlers in the same thread it uses to monitor event sources.  As long
as an event handler is running, event sources are not monitored for
events and no other handlers will be invoked.

>
>My original assumption was that Twisted would spawn a new thread
>within which the scheduler would be set to run to manage the
>communication for the duration of the customer call/interaction.
>However, the approach taken by twisted is that if the developer's code
>got itself in a muddle or infinite loop or took a very long time
>accessing a database, the rest of the application would just be
>frozen.

Generally speaking, Twisted will only create a thread when application
code asks it to.

>
>I wrote a quick test app that defers to a function that sleeps then
>returns its response line. During the 20 seconds that the test server
>took to return a line, the server would not accept any other requests
>until the sleep function ended.

The "defers to a function" language is a bit confusing.  However, your
conclusion sounds right.  If you block the reactor thread, nothing else
will happen.

>Clearly, I must be missing something; I have designed my application
>upon the wrong axis. If so, I have some misunderstanding as to how to
>properly structure an application like this upon Twisted. Or, twisted
>is a framework whereby the response to a network event is expect to
>arrive immediately.

It's not necessary for responses to arrive immediately.  Responses just
need to be obtained without blocking.  For example, if getting a response
involves talking to someone else over the network, then Twisted has some
networking APIs that don't block. ;)  Likewise, twisted.enterprise lets
you talk to a rdbm (it actually uses threads, but it mostly doesn't show
that to you).

>I have seen "deferToThread" mentioned but I cannot find enough
>documentation to decide whether it's what I need or not. Or perhaps
>callInThread() is what I need?

One of these may be appropriate.  You could decide that in your application
framework, user code is always run in a non-reactor thread.  This is easily
accomplished: your event handler just needs to invoke user code in a thread
instead of directly.  deferToThread lets you run a function in a thread and
gives you a Deferred which will be called back with the return value of the
function when it returns or which will errback if it raises an exception.  
callInThread is lower level, not exposing the result of the function.

>
>Any suggestions about this would be very much appreciated. Even
>better, if anybody knows of good documentation/tutorials they can
>point me to, that would be appreciated also.

It sounds like you're looking for deferToThread or one of its friends.
Note however that just throwing user code into a thread doesn't mean
programmers can be oblivious to their environment.  It simply trades the
need to pay attention to when you block and for how long for the more
complex task of paying attention to thread safety.  If each task is
isolated from all others, this may be a good trade-off to make, but if
there's shared state it may not be.

Jean-Paul



From therve at free.fr  Wed Apr 16 10:01:44 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 16 Apr 2008 16:01:44 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416160144.l3w06npx8kckcosk@wasabox.wasabout.net>

Quoting Dr aio <dr.pythoniac at googlemail.com>:

> Kqueue seems to be vital to an event driven approach like TM, yet there are
> multiple versions of pykqueue floating
> around, none of them properly working (and I didn't fumble around. I
> plain simply used the FreeBSD port), some of
> them with some mor and some with some less "annotations" (I refuse to
> call that doc.)
>
> - How about getting 1 version of pykqueue properly running and into TM ?

The current one is grossly working, even though there are some  
problems, and that the setup is not triavial. But a new reactor has  
been developed, using Python 2.6 KQueue wrapper, and should be  
available some day. See http://twistedmatrix.com/trac/ticket/1918 for  
the progress on this field. Any tests and feedback would help this  
going further.


-- 
Thomas




From andrewfr_ice at yahoo.com  Wed Apr 16 11:36:45 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 16 Apr 2008 08:36:45 -0700 (PDT)
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <E1Jm6fI-0007Z5-Lj@cube.twistedmatrix.com>
Message-ID: <196245.7166.qm@web34205.mail.mud.yahoo.com>

Hi Paul:

>I would like to provide an environment where
>developers can write call servicing applications with
>no knowledge of the network. I had rested on a
>coroutine approach, whereby a developer could write
>something like this:

I posted some code a little while ago that has WS-BPEL
logic riding on top of Stackless and Twisted. 

>Am I correct in thinking that while a developer's
code
>is executing, all other connections are paused, and
>that the twisted server will not accept new
>connections until it returns?

[From the Schmitt Reactor Pattern Paper]

>Non-preemptive. In a single-threaded application
>process, event handlers are not preempted while they
>are executing. This implies that an event handler
>should not perform blocking I/O on an individual
>handle since this will block the entire process and
>impede the responsiveness for clients connected to
>other handles.

If you accept the Schmitt explanation, I would suggest
that it is convenient to think of Twisted as a
non-preemptive threading system where callbacks and
server protocol instances are user space "threads of
execution" and the reactor is the scheduler. Since a
"thread" cannot be involuntarily be pre-empted, the
reactor will not have a chance to trigger callbacks. 

Moral of the story - you don't want to do long CPU
intensive work in a callback.

>My original assumption was that Twisted would spawn a
>new thread within which the scheduler would be set to
>run to manage the communication for the duration of
>the customer call/interaction.

I think you want reactor.callInThread(). I remember
Philip Mayers telling me about this in a post about a
year ago.

Here is an example - forget the Stackless stuff

http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/TwistedWebserverThreaded.py

(Actually I would rather like to forget that piece of
code altogether)

However you may want to think over your design if you
find you need to extensively use OS threads. 

I would be tempted to ask myself questions like:

1)Is my application CPU or I/O bound"? 
2)Can I encapsulate the message exchange pattern
between the client and the server be done in a single
protocol"?
3)Can I conveniently yield the thread at predictable
points?

>Or, twisted is a framework whereby the response to a
>network event is expect to arrive immediately.

I think the exact opposite is true, that is why the
deferred object exists. 

I would suggest Twisted is ideal for reactive, I/O
bound applications particularly when you can represent
the message exchange pattern in a single protocol.

Cheers,
Andrew




      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From dr.pythoniac at googlemail.com  Wed Apr 16 11:42:08 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 17:42:08 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
Message-ID: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>

First: THANKS for reacting so friendly and civilized :)

Cliff
> Have you tried the finger tutorial.

Sure. When I say, I DID read what's available, then I did. Otherwise I
wouldn't dare to complain.


Thomas Herv? <therve at free.fr> wrote:

> ...
> > - How about getting 1 version of pykqueue properly running and into TM ?
>
> The current one is grossly working, even though there are some
> problems, and that the setup is not triavial. But a new reactor has
> been developed, using Python 2.6 KQueue wrapper, and should be
> available some day. See http://twistedmatrix.com/trac/ticket/1918 for
> the progress on this field. Any tests and feedback would help this
> going further.

Great. Thanks. PLEASE test it properly and prepare a reasonably conmplete
readme at least.
And kindly see below for my current problems.


mike at mkp.ca wrote:

> Feel better now? ;-)
>
> I understand your pain. Twisted is very much written by hackers for
> hackers, with the old school practices of source and oral tradition in
> place of documentation. It took me many attempts before I felt I was
> competent, and I still can't do anything without constantly consulting
> the source code. I confess, I haven't bothered to look at the docs
> for years, and I suspect it is the same with the core Twisted
> developers.
>
> Life is made easier by having a mentor who can look over your work and
> point out misunderstandings and antipatterns. I find the mailing list
> to be a mixed bag as a replacement. Sometimes you get real gems from
> Glyph and company, and sometimes you just get a hard time. I'd be
> happy to help if I can, but any deep thinking will probably have to
> wait for weekends. I'm also a long time FreeBSD user and Python
> developer.
>
> Hope you make it over the curve!

Thanks, Mike, for your friendly welcome.

Yes, I do understand that attitude. I love to have it, too.
BUT: twisted is having and looking for sponsors, that is, twisted is -
gladly ! - meant to be a product and not some hackers private delight
(only).

You see, I argue for using twisted. Possibly some of us argue against other
solutions and, worst case, they risk their ass doing so.
Again, I share your attitude and i understand it so well. But, PLEASE,
understand that I need to get sth. working, that some colleagues put a lot
of trust, valuable trust, into twisted, even taking a risk. That should be
seen and properly respnonded to, too.

I'm not talking about script kiddies. I'm talking about seasoned colleages
with a (couple) dozend years in the job.
We don't need pampering, not even mentoring, practical and welcome as that
might be. We need realiabilty and a _fair_ chance to find our ways in
twisted. A reasonable starting point.

--------

Here's what I tried today:

Using py-kqueue (1.4) in FreeBSDs ports.

'twistd -r kqueue -no -f web.tap' works fine.
'twistd -r kqueue -f web tap' breaks.

Next I checked, wether the changes proposed by IST where in version 1.4.
Nope.
So I edited them into the patch that comes with the port anyway
(patch-kqsyscallmodule).
If anyone is interested, I'll post it.

Same as without, i.e. it works but it breaks if run as daemon.
Here's what I find in the log:

Log opened.
twistd 2.5.0 (/usr/local/bin/python2.5 2.5.2) starting up
reactor class: <class 'twisted.internet.kqreactor.KQueueReactor'>
Loading web.tap...
Loaded.
Changing process name to test
Log opened.
twistd 2.5.0 (/home/www/tm/ 2.5.2) starting up
reactor class: <class 'twisted.internet.kqreactor.KQueueReactor'>
Loading web.tap...
Loaded.
twisted.web.server.Site starting on 80
Starting factory <twisted.web.server.Site instance at 0x85935ec>
Traceback (most recent call last):
File "/usr/local/bin/twistd", line 21, in <module>
run()
File "/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py",
line 27, in run
app.run(runApp, ServerOptions)
File "/usr/local/lib/python2.5/site-packages/twisted/application/app.py",
line 379, in run
runApp(config)
File "/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py",
line 23, in runApp
_SomeApplicationRunner(config).run()
File "/usr/local/lib/python2.5/site-packages/twisted/application/app.py",
line 158, in run
self.postApplication()
File
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py",
line 213, in postApplication
startApplication(self.config, self.application)
File
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py",
line 174, in startApplication
service.IService(application).privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py",
line 228, in privilegedStartService
service.privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py",
line 228, in privilegedStartService
service.privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py",
line 68, in privilegedStartService
self._port = self._getPort()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py",
line 86, in _getPort
return getattr(reactor, 'listen'+self.method)(*self.args, **self.kwargs)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 467, in listenTCP
p.startListening()
File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line
750, in startListening
self.startReading()
File "/usr/local/lib/python2.5/site-packages/twisted/internet/abstract.py",
line 265, in startReading
self.reactor.addReader(self)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py",
line 98, in addReader
self._updateRegistration(fd, EVFILT_READ, EV_ADD)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py",
line 89, in _updateRegistration
kq.kevent([kevent(*args)], 0, 0)
OSError: [Errno 9] Bad file descriptor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080416/9e1cf76d/attachment.htm 

From glyph at divmod.com  Wed Apr 16 11:49:49 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 15:49:49 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>


On 01:15 pm, dr.pythoniac at googlemail.com wrote:
>Seeing there is doc. available, I digged through it. After all TM seems
>worth the effort. From what I see, I love TM.

Great!  The rest definitely doesn't sound like you love it though ... 
;-)
>Links are often broken, though. Often seemingly useful doc. is old, 
>very
>old. Even current doc. isn't up to date.

Since the 8.0 release, we have had quite a few problems with links, 
specifically the links from the core documentation to the API 
documentation on the website.  We are working to fix this.  However, if 
you spot broken links, please feel free to report them in the bug 
tracker: http://twistedmatrix.com/trac/newticket

Saying that there are "often" broken links is just about as pointless as 
saying that you "often" find bugs.  Without specifics, this is not 
useful information; the reason we have not fixed specific problems is 
not because we believe there are no problems anywhere.
>They talk about "resource trees", yet I don't find them in the doc. I 
>find
>putchild() but all examples and docs indicate, that you can do it only
>within the root resource.

You can do putChild to any resource, as long as you understand its 
lifecycle.  A "resource tree" is simply a tree ( 
http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
).

Our documentation assumes, and will continue to assume, a certain level 
of familiarity with basic computer-sciency jargon; if you feel that a 
particular phrase is too obscure, feel free to submit a patch 
elaborating on it.  However, the audience of the bulk of the Twisted 
documentation is fluent Python programmers.  If you want to write 
something for folks who are new to Python or programming in general, a 
separate set of documentation would be better than trying to re-explain 
everything in-line.  For example, explaining that we are referring to a 
directed graph of IResource providers would be fine, but adding an 
explanation of graphs or how python references or dictionaries work 
would not.
>OK, a little later, I
>have my first web server running an my first rpy works, spitting out
>"test". Wow.

Sounds like the docs are doing their job, then :).
>I'm wondering, why of all things "rpy" ? python won't generate sth. 
>like
>"rpyc" for that, which translates in lost speed, I assume. No 
>explanation.

"rpy" to mark the file as a specific kind of python file that needs to 
be run within the web server to produce a resource.  Implemented in this 
manner, python would not generate a "pyc" file even if it were called a 
".py"; it is not a module that you import.

As far as "lost speed" is concerned, it's not entirely clear that that's 
true, because the times when Python would have to check for the .rpyc 
are entirely different than the way that it does when you are importing 
modules.  Twisted could emit .rpycs as an optimization if you did a 
benchmark, discovered it did indeed matter, and submitted a patch.  This 
is, however, hardly the highest priority for twisted.web developers 
right now :).
>I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
>journey begins ...

>Intense googleing, and I mean "intense". Reading through years of this
>mailing list. No positive result.

Fair enough.  The kqueue reactor doesn't work and there's no 
documentation saying that it doesn't, except a failing buildbot: 
http://buildbot.twistedmatrix.com/builders/freebsd-py2.4-kq - also, 
Twisted's support for platforms is not clearly explained.
>I have the clear impression that twisted is something in between a toy 
>and a
>brilliant product. It's hackers, however, leave much to be desired in 
>terms
>of usefulness. As it is, it's a great and promising hobby but not a 
>useful
>product.

Many, many people (including me!) disagree.

I understand that you're frustrated, but this does nothing but serve to 
weaken your position.  You have some valid criticism, but when I read 
"twisted is not useful", I think that you are simply mistaken.
>Sorry, but doc strings don't replcae a halfway decent documentation and 
>a
>reasonable tutorial, considering the highly complex matter.

First google hit for "twisted tutorial":

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

Not perfect, perhaps, but I think it could definitely be described as a 
"reasonable tutorial" to core Twisted concepts.
>Sorry, but documentation that is often enough outdated and sometimes 
>offers
>broken links is next to useless.

If you were truly sorry, you would be contributing patches which fix the 
broken links and updates the documentation to be more recent.
>Kqueue seems to be vital to an event driven approach like TM, yet there 
>are
>multiple versions of pykqueue floating
>around, none of them properly working (and I didn't fumble around. I
>plain simply used the FreeBSD port), some of
>them with some mor and some with some less "annotations" (I refuse to
>call that doc.)

Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
is an optimization of a very specific part of a Twisted application on a 
very specific platform.  *Most* realistic Twisted applications will be 
bottlenecked on application code long before something like kqueue (or 
epoll) will help.  Working from the amount of support from the 
community, most Twisted applications also don't run on FreeBSD.

I apologize if this response seems too harsh, but I am annoyed by people 
seeing a pet feature (variously: good ideas like HTTP/1.1, kqueue, and 
Cocoa GUI support, bad ideas like "block on a Deferred", and core API 
thread safety)  which isn't too important in Twisted and then claiming 
it's "vital" to the project's success.  The project is succeeding, so 
clearly it is not vital: QED.  It may be important to you: that's great. 
Do some work to support it.  Once it's supported, buildbot will listen 
to its tests and it won't break again.

For those projects which really do benefit from high multiplexing volume 
with something like kqueue, Twisted offers an extremely abstract API 
where the multiplexing mechanism is independent of the application code. 
You can, at any moment, replace the reactor and your application will 
keep working.  So even if kqueue support does not exist at all, you can 
add it with Twisted much more easily than if you wrote your own select() 
loop.

You might say, in fact, that Twisted is vital to a platform-specific 
tool like Kqueue, because otherwise almost nothing will use it.
>- How about getting 1 version of pykqueue properly running and into TM 
>?

Yes, how about that?  Maybe you could contribute to one of the numerous 
kqueue tickets already in the tracker.
>- How about freezing some TM version (like 8.0) and updating/matching 
>docs?
>(Of course, experiments are funny and intriguing, but quite some of us 
>out
>here need sth. stable for everydays work)

Twisted is very, very stable.  The next version (8.1) will break only 
code that is using APIs which have been outdated for literally _years_. 
There is no need to "freeze" anything, just update the documentation to 
what is most recent and do a new release including that documentation.
>- How about writing some complete docs and tutorials? Sth. along the 
>lines
>of "My first web server wit TM" (instead all those - sometimes seeming 
>to
>contradict each other - snippets)

Yes, how about that?  You can write documentation on your own site, and 
we will link to it.  Or, you could contribute to the core documentation.

The bottom line: complaining like this is not very useful.  If you have 
time to help, then contributing patches and responding to reviews in the 
tracker is helpful.  If you don't have the time to actually do any work, 
then describing specific problems (in as much detail as possible!) is 
useful.  If you don't have time even for _that_, then cash donations to 
the foundation are useful.

If you are interested in getting stuff in Twisted fixed, though, writing 
rambling complaints serves to do nothing but reduce our developers' 
already scarce motivation, make us think our work is not appreciated, 
and encourage us to spend time writing rambling responses like this one 
rather than fix the problems you're talking about.

(Which is not to say this has been a _complete_ waste of time.  If one 
out of every fifty people I write a message like this to understands 
what I'm saying and becomes a long-time contributor, then it's probably 
worth it.)



From glyph at divmod.com  Wed Apr 16 12:05:34 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 16:05:34 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
Message-ID: <20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>


On 03:42 pm, dr.pythoniac at googlemail.com wrote:
>Yes, I do understand that attitude. I love to have it, too.
>BUT: twisted is having and looking for sponsors, that is, twisted is -
>gladly ! - meant to be a product and not some hackers private delight
>(only).

Twisted is a project, not a product.  The TSF is part of a non-profit. 
We are looking for sponsors to help the project improve, not payments 
from customers for a working product.  If it were already perfect, what 
would we need donations for?

If you want a product based on Twisted, or training based on Twisted, my 
company (http://divmod.org/) might be able to help you.
>You see, I argue for using twisted. Possibly some of us argue against 
>other
>solutions and, worst case, they risk their ass doing so.

Thank you for doing that.
>Again, I share your attitude and i understand it so well. But, PLEASE,
>understand that I need to get sth. working, that some colleagues put a 
>lot
>of trust, valuable trust, into twisted, even taking a risk. That should 
>be
>seen and properly respnonded to, too.

All else being equal, I would prefer that you use Twisted, because I 
like people to use my stuff and like it.  However, if we need to do a 
ton of additional work that we are not really interested in, on a 
timetable that is defined by you... well, that doesn't sound like open 
source work, that sounds like consulting.

If Twisted does not meet your needs at this time, you have two (and a 
half) options:

(1) Fix it yourself,
(1a) pay someone to fix it, or
(2) Use something else.

I suppose if the problem is the documentation, then (1a) becomes "pay 
someone for training".  This is not a roundabout way of saying "go 
away", you really can pay someone for training pretty easily.  I'm sure 
there are others in the community who could help you.  I would certainly 
prefer it if you could buy some training than if you had to walk away.
>I'm not talking about script kiddies. I'm talking about seasoned 
>colleages
>with a (couple) dozend years in the job.

>We don't need pampering, not even mentoring, practical and welcome as 
>that
>might be. We need realiabilty and a _fair_ chance to find our ways in
>twisted. A reasonable starting point.

I am not trying to be rude, or insult you when I say these things.  I am 
just explaining that there are many people who feel that Twisted offers 
something worthwhile and a "fair" and "reasonable starting point", so 
it's inaccurate to say we don't have one at all.  Maybe you and your co- 
workers are all brilliant and understand the underlying concepts 
perfectly, but simply don't have time to get working with it quickly 
enough because of time pressures beyond your control.

That's fine, and if you can't use twisted because of it, I am sorry that 
the docs were not better.  But if you don't have the time to learn it, 
don't have the time to help us fix the docs, and don't have the money to 
pay someone to help you learn it or fix the docs... well, the situation 
just isn't going to improve in a way that you want just because you want 
it to.



From exarkun at divmod.com  Wed Apr 16 12:42:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 12:42:51 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416164251.6859.1487626512.divmod.quotient.30633@ohm>

On Wed, 16 Apr 2008 15:15:12 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Hi out there
>
>Let me tell you about my experience with TM so far ...
>
> [snip]

Hi Dr aio,

Thanks for this feedback.  It's great to know where users are running into
problems.  This is always a welcome contribution.

Jean-Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 13:06:07 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 19:06:07 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
Message-ID: <2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>

Hi Glyph

On 4/16/08, glyph at divmod.com <glyph at divmod.com> wrote:
>
>  Great!  The rest definitely doesn't sound like you love it though ... ;-)

Nope. If I lost my interest and positive attitude towards TM I'd have
left rather than subscribing to this list.
>
> Saying that there are "often" broken links is just about as pointless as saying that you "often" find bugs.  Without specifics, this is not useful information; the reason we have not fixed specific problems is not because we believe there are no problems anywhere.

Sorry. I simply assumed that you know your site and that those broken
links seem "natural" to you as everything is in flux.
>From now on I will report them.
>
>  You can do putChild to any resource, as long as you understand its lifecycle.  A "resource tree" is simply a tree ( http://en.wikipedia.org/wiki/Tree_structure ) of resources ( http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html ).
>
>  Our documentation assumes, and will continue to assume, a certain level of familiarity with basic computer-sciency jargon;

This sounds as if you were to say "You don't fully understand TM ?
Dumbhead ! Learn the basics before opening your mouth."

Thank you, sir.

>  OK, a little later, I
>  have my first web server running an my first rpy works, spitting out
>  "test". Wow.
>

    >  Sounds like the docs are doing their job, then :).

Nope.  Working hours and hours through sometimes confusing
"documentation" to finally have a couple of lines of code working is
not really hot.


>>  ... As it is, it's a great and promising hobby but not a useful
>>  product.
>>
>
> Many, many people (including me!) disagree.
>
> I understand that you're frustrated, but this does nothing but >serve to weaken your position.  You have some valid criticism, but >when I read "twisted is not useful", I think that you are simply >mistaken.

So ? I didn't say that TM is not useful. I said it's not a useful
_product_. An important difference, beause a product is made to be
(more or less) useable out of the box. Lab experiments are immensily
useful but not for production.
Short: I didn't mean to insult or belittle TM but rather to express
that imho it could be more useable.

>  http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.htm
>
> Not perfect, perhaps, but I think it could definitely be described as > a "reasonable tutorial" to core Twisted concepts.

Sorry, half no.
I had no problem to understand TMs core concepts;
that's not the issue. I had the problem to find out how to
use TM.
One problem was that a lot of docs and tutorials (on the web, too) are
simply very old and also using different approaches.
Example: I'm just trying to understand how resources work. Suddenly
they talk about "application" and tap. That is confusing.

> If you were truly sorry, you would be contributing patches which fix the broken links and updates the documentation to be more recent.

Uhum, sir ... Me ? contributing doc. ? Frankly, this does not seem to
be your smartest idea so far * g
I'll gladly do as soon as I can walk more or less alone in TM, OK.


>  Kqueue seems to be vital to an event driven approach like TM, yet there are ...

> Kqueue is most definitely _not_ "vital" to something like Twisted.  It > is an optimization of a very specific part of a Twisted application on > a very specific platform.  *Most* realistic Twisted applications will
> be bottlenecked on application code long before something like
> kqueue (or epoll) will help.

Yes, to me it is vital. Modern AIO implementations haven't been
researched and worked on for thegeeky  fun of it. select() is just not
the answer to many of todays needs.

> Working from the amount of support
> from the community, most Twisted applications also don't run on
> FreeBSD.

Uh ? Means: "Use linux !" ? Irritating to read that.

I apologize if this response seems too harsh, but I am annoyed by
people who deciding for me what's important, what's the OS worth to be
supported and doubting my professional and intellectual capacity
because I dare to offer constructive criticism.

> I apologize if this response seems too harsh, but I am annoyed by > people seeing a pet feature (variously: good ideas like HTTP/1.1,
> kqueue, and Cocoa GUI support, bad ideas like "block on a
> Deferred", and core API thread safety)  which isn't too important in
> Twisted and then claiming it's "vital" to the project's success.  The
> project is succeeding, so clearly it is not vital: QED.  It may be
> important to you: that's great. Do some work to support it.  Once
> it's supported, buildbot will listen to its tests and it won't break
> again.


Glyph, I subscribed to this list, I spent hours and hours trying to
wrap my mind around TM, I read documents, tickets and annotations even
on quite remote sites - short, I invested a lot in TM.
 That *IS* an acknowledgement of your work. That *IS* a whole lot of
trust in your project.
And you tell me more or less bluntly that I'm stupid, unprofessional
and using a minority OS ?
At the same time you suggest that I, the newbie to TM contribute to
docs and even code ? Uhum. Sure.


> You might say, in fact, that Twisted is vital to a platform-specific
> tool like Kqueue, because otherwise almost nothing will use it.

Possibly, but I won't because I'd feel strange doing so, knowing quite
well that kqueue is by many considered to be _the_ AIO implementation
and knowing that kqueue is used - with excellent results - e.g. by
some servers (lighttpd, nginx, ...).

>  - How about getting 1 version of pykqueue properly running and into TM ?

I'll do as soon as I find some spare time. right now I need to get
some product made. Hopefully with TM.

> Twisted is very, very stable.

Great. Love to hear that.

>>  - How about writing some complete docs and tutorials? ...

> Yes, how about that?  You can write documentation on your own
> site, and we will link to it.  Or, you could contribute to the core
> documentation.

IF I can do my project with twisted I'll gladly give back.

> If you are interested in getting stuff in Twisted fixed, though,
> writing rambling complaints serves to do nothing but reduce our
> developers' already scarce motivation, make us think our work is
> not appreciated, and encourage us to spend time writing rambling
> responses like this one rather than fix the problems you're talking
> about.

a) Before fixing sth I should understand it pretty well. As a newbie
with TM I'm not in the position to fix things but to learn them -
ideally with some help.

b) I'm afraid humans tend to care most about the tools they work with.
Frankly, I'm not sure about my involvement with TM if it's big shots
treat newbies like this.

> (Which is not to say this has been a _complete_ waste of time.  If
> one out of every fifty people I write a message like this to
> understands what I'm saying and becomes a long-time contributor,
> then it's probably worth it.)

Which is not to say TM has been a _complete_ waste of time.  If I find
my way into it and get it working in time (Again: This is not my hobby
but my job);  then it's probably worth it.


Thanks so much



From nathan.stocks at gmail.com  Wed Apr 16 13:23:32 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 16 Apr 2008 11:23:32 -0600
Subject: [Twisted-Python] Explicitly closing an AMP connection?
Message-ID: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>

What's the "twisted" way of cleanly closing an AMP connection?  The
closest thing I can find on

http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html

is stopProducing() -- but it's undocumented.  Will that kill the connection?

~ Nathan



From dr.pythoniac at googlemail.com  Wed Apr 16 13:24:56 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 19:24:56 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416164251.6859.1487626512.divmod.quotient.30633@ohm>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416164251.6859.1487626512.divmod.quotient.30633@ohm>
Message-ID: <2337a3d40804161024o71026827xd0cd8e3916427c87@mail.gmail.com>

Thank you, Jean-Paul

That's what I assumed in the beginning and why I wrote.

On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>  Thanks for this feedback.  It's great to know where users are running into
>  problems.  This is always a welcome contribution.



Actually, pykqueue seems to work here but not in deamon mode.
As this prettx much seems to be a TM related problem: Do you have any
idea oder hints why it doesn't work in deamon mode ?



From radix at twistedmatrix.com  Wed Apr 16 13:37:45 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Apr 2008 13:37:45 -0400
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
References: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
Message-ID: <60ed19d40804161037j20aebcaco5c65b06c371571eb@mail.gmail.com>

On Wed, Apr 16, 2008 at 1:23 PM, Nathan <nathan.stocks at gmail.com> wrote:
> What's the "twisted" way of cleanly closing an AMP connection?  The
>  closest thing I can find on
>
>  http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html
>
>  is stopProducing() -- but it's undocumented.  Will that kill the connection?

The way to close the connection is transport.loseConnection. For
future reference, this is the same for any Twisted protocol. The
transport is in the 'transport' attribute of the protocol.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Wed Apr 16 13:40:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 13:40:13 -0400
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
Message-ID: <20080416174013.6859.1536542877.divmod.quotient.30647@ohm>

On Wed, 16 Apr 2008 11:23:32 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>What's the "twisted" way of cleanly closing an AMP connection?  The
>closest thing I can find on
>
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html
>
>is stopProducing() -- but it's undocumented.  Will that kill the connection?
>

Since AMP is an IProtocol implementation, it is given a reference to its
transport via the makeConnection method (commonly inherited from Protocol
and not overridden - the base implementation sets it as an attribute of
itself, `transport?).  The way to close a TCP connection is to call the
transport's loseConnection method.  So if you have a reference to a
connected AMP instance and you want to disconnect it, you can do

    theProto.transport.loseConnection()

Jean-Paul



From exarkun at divmod.com  Wed Apr 16 13:43:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 13:43:46 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161024o71026827xd0cd8e3916427c87@mail.gmail.com>
Message-ID: <20080416174346.6859.1969888562.divmod.quotient.30649@ohm>

On Wed, 16 Apr 2008 19:24:56 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Thank you, Jean-Paul
>
>That's what I assumed in the beginning and why I wrote.
>
>On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>  Thanks for this feedback.  It's great to know where users are running into
>>  problems.  This is always a welcome contribution.
>
>Actually, pykqueue seems to work here but not in deamon mode.
>As this prettx much seems to be a TM related problem: Do you have any
>idea oder hints why it doesn't work in deamon mode ?
>

I don't have much experience with pykqueue (or KQueue at all) since I primarily
target Linux.  I think development effort is being focused on the newer KQueue
bindings which will be available in Python 2.6 and should also be available as
a separate module for older versions of Python (I think the module is named
select26 or something like that).  This will probably be the preferred way to
use KQueue with Twisted.

You can follow Thomas's work on this here:

   http://twistedmatrix.com/trac/ticket/1918

Jean-Paul



From nathan.stocks at gmail.com  Wed Apr 16 13:54:00 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 16 Apr 2008 11:54:00 -0600
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <20080416174013.6859.1536542877.divmod.quotient.30647@ohm>
References: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
	<20080416174013.6859.1536542877.divmod.quotient.30647@ohm>
Message-ID: <96c9d6a80804161054s706ff159i71a9bd240105588f@mail.gmail.com>

>  Since AMP is an IProtocol implementation, it is given a reference to its
>  transport via the makeConnection method (commonly inherited from Protocol
>  and not overridden - the base implementation sets it as an attribute of
>  itself, `transport?).  The way to close a TCP connection is to call the
>  transport's loseConnection method.  So if you have a reference to a
>  connected AMP instance and you want to disconnect it, you can do
>
>    theProto.transport.loseConnection()

Perfect, thanks!

~ Nathan



From glyph at divmod.com  Wed Apr 16 15:21:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 19:21:47 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
Message-ID: <20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>

On 05:06 pm, dr.pythoniac at googlemail.com wrote:
>Sorry. I simply assumed that you know your site and that those broken
>links seem "natural" to you as everything is in flux.
> From now on I will report them.

Thanks.
>>  You can do putChild to any resource, as long as you understand its 
>>lifecycle.  A "resource tree" is simply a tree ( 
>>http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
>>http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
>>).
>>
>>  Our documentation assumes, and will continue to assume, a certain 
>>level of familiarity with basic computer-sciency jargon;
>
>This sounds as if you were to say "You don't fully understand TM ?
>Dumbhead ! Learn the basics before opening your mouth."
>
>Thank you, sir.

If I thought you were a "dumbhead", and didn't know this stuff, I would 
not have provided API links.  If I thought you were ignorant I would 
have provided an explanation, and if I thought you were stupid I would 
not have bothered to reply.  I assume that you understand the concepts 
involved and I was just trying to be as specific as possible, since 
apparently the language that you found in the documentation was 
ambiguous.  (Normally, to communicate this concept, I would just say 
"resource tree" in conversation as well.)

Please note that I never insulted you.  Let me be more specific: I don't 
think you're stupid.  Believe me, if I were calling you an idiot, you'd 
know.  If you look around for rants that I've written, you can find some 
unkind things I have said about other people :).  (Links withheld to 
protect the guilty.)
>Short: I didn't mean to insult or belittle TM but rather to express
>that imho it could be more useable.

I understand.  Perhaps I should have been more specific with my 
comments.  I didn't mean to say that the problems that you were 
encountering were not real, or they should not be fixed.  Merely to 
remind our developers that their work is not "unusable" because of the 
problems you've mentioned, and to ask you to phrase your requests 
differently.

You showed up and said:

    "You guys really need to do X, Y, and Z to make your software 
usable."

The implication being that Twisted is useless to everyone, and therefore 
mostly worthless.  Also, it suggests that you expect us to do additional 
work, which may be relevant only to you, for free.  You can say almost 
exactly the same thing, but phrasing it slightly differently makes all 
the difference.  A better approach:

    "I tried to use Twisted but I can't figure out X, Y, and Z.  Can 
someone help me with that?"

It would also help if you would sprinkle in something about how you 
can't help out with anything until you've learned X, Y, and Z.  If you 
are asking for help so that your team can build a product, then you are 
asking for professional training; but if you're asking for help so that 
you can contribute an improved newbie experience to twisted (perhaps 
after your team builds a product...) then you are asking for the 
community to work together.

You've done that in this message, and I appreciate it.
>One problem was that a lot of docs and tutorials (on the web, too) are
>simply very old and also using different approaches.
>Example: I'm just trying to understand how resources work. Suddenly
>they talk about "application" and tap. That is confusing.

Definitely a problem.  This is probably worth filing a ticket about, but 
can you provide a little more detail, and some links to the relevant 
documents and the order you discovered them in?  The more detail the 
easier the documentation fixer's job will be.  We don't know exactly how 
newbies approach the documentation because we can never approach it 
without knowing it.
>>If you were truly sorry, you would be contributing patches which fix 
>>the broken links and updates the documentation to be more recent.
>
>Uhum, sir ... Me ? contributing doc. ? Frankly, this does not seem to
>be your smartest idea so far * g
>I'll gladly do as soon as I can walk more or less alone in TM, OK.

This is exactly the difference in tone I was talking about :-).  I do 
not mean to suggest that you should write documentation _immediately_. 
Merely that once you have learned enough about Twisted, you will be a 
good person to do these improvements.  For example, I've never had a bad 
Twisted documentation experience; it would be very hard for me to.
>>  Kqueue seems to be vital to an event driven approach like TM, yet 
>>there are ...
>
>>Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
>> > is an optimization of a very specific part of a Twisted application 
>>on > a very specific platform.  *Most* realistic Twisted applications 
>>will
>>be bottlenecked on application code long before something like
>>kqueue (or epoll) will help.
>
>Yes, to me it is vital. Modern AIO implementations haven't been
>researched and worked on for thegeeky  fun of it. select() is just not
>the answer to many of todays needs.

This is of course my point.  To you, perhaps.  Not to Twisted :).  But, 
just because it's not "vital" doesn't mean it's not important.  We do 
need kqueue support.  It is a selling point of Twisted to support 
multiple different multiplexing mechanisms and kqueue is an important 
mechanism.
>>Working from the amount of support
>>from the community, most Twisted applications also don't run on
>>FreeBSD.
>
>Uh ? Means: "Use linux !" ? Irritating to read that.

Let me expand on this.

*PLEASE* do not switch to linux to use Twisted.  We have, like, a 
million developers who use Ubuntu.  Hence, we have very good support for 
linux.  We need more Twisted developers who use FreeBSD (and Windows and 
Solaris and AIX and even distros like Red Hat and SuSE).  Please, please 
stay around and help us with that.

The problem is that FreeBSD people often show up, complain that Twisted 
has problems on FreeBSD, and then go away.  Either that, or they decide 
to give up FreeBSD and just use Linux on their servers, which is great 
for them, but doesn't help us at all.

The amount of work required to fix these problems is relatively small, 
especially compared with what these people sometimes do (write their own 
event loop).  It's even smaller now that some of our mostly-Linux 
developers have now made at least select-on-FreeBSD a fully supported 
platform, so you have only to worry about kqueue issues (which therve 
and others have already done a ton of work on).
>I apologize if this response seems too harsh, but I am annoyed by
>people who deciding for me what's important, what's the OS worth to be
>supported and doubting my professional and intellectual capacity
>because I dare to offer constructive criticism.

I am sorry that you read this as a criticism of your intellectual and 
professional abilities.  I take issue with your tone but, this cannot be 
emphasized enough, I *do not* think you are stupid or even necessarily 
wrong.  Just a little rude :).
>Glyph, I subscribed to this list, I spent hours and hours trying to
>wrap my mind around TM, I read documents, tickets and annotations even
>on quite remote sites - short, I invested a lot in TM.
>That *IS* an acknowledgement of your work. That *IS* a whole lot of
>trust in your project.
>And you tell me more or less bluntly that I'm stupid, unprofessional
>and using a minority OS ?
>At the same time you suggest that I, the newbie to TM contribute to
>docs and even code ? Uhum. Sure.

You are making the same mistake here that you're accusing me of.

I ignore a lot of messages to this list.  Writing a detailed, point-by- 
point reaction to your criticism is also a sign of respect.  Not all of 
what I have said is even disagreement, for example I acknowledged in my 
first reply that we did a very bad job of describing the implementation 
status of the kqueue reactor.
>Possibly, but I won't because I'd feel strange doing so, knowing quite
>well that kqueue is by many considered to be _the_ AIO implementation
>and knowing that kqueue is used - with excellent results - e.g. by
>some servers (lighttpd, nginx, ...).

FWIW, lighttpd's kqueue support does not appear to be perfect either: 
http://trac.lighttpd.net/trac/ticket/66 ;)
>>  - How about getting 1 version of pykqueue properly running and into 
>>TM ?
>
>I'll do as soon as I find some spare time. right now I need to get
>some product made. Hopefully with TM.

Awesome!
>>Twisted is very, very stable.
>
>Great. Love to hear that.

Hooray :)
>>>  - How about writing some complete docs and tutorials? ...
>
>>Yes, how about that?  You can write documentation on your own
>>site, and we will link to it.  Or, you could contribute to the core
>>documentation.
>
>IF I can do my project with twisted I'll gladly give back.

Again, good.
>a) Before fixing sth I should understand it pretty well. As a newbie
>with TM I'm not in the position to fix things but to learn them -
>ideally with some help.

We are _always_ willing to help out someone who is interested in 
contributing to the project.
>b) I'm afraid humans tend to care most about the tools they work with.
>Frankly, I'm not sure about my involvement with TM if it's big shots
>treat newbies like this.

I hope you can see now why I think this is a little unfair.  Your 
initial post was quite blunt, and I didn't do much but respond in kind. 
I did not intend to insult you, as apparently, you did not intend to 
insult me (or Twisted).  But, you started it ;-).
>Which is not to say TM has been a _complete_ waste of time.  If I find
>my way into it and get it working in time (Again: This is not my hobby
>but my job);  then it's probably worth it.

Well, let's move forward trying to make that happen.

Thank you for your feedback.  Overall it has been very helpful, even the 
parts that I didn't necessarily like.



From dr.pythoniac at googlemail.com  Wed Apr 16 16:25:48 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 22:25:48 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
	<20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>
Message-ID: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>

Glyph

Front-up, first thing: As far as I'm concerned, we can talk friendly.
Probably we both "punished" each other for things we did at least not
mean (evil). :-)

>    "You guys really need to do X, Y, and Z to make your software usable."

Just to avoid further misunderstandings: Nope. I showed up and said
"Yuck ! TM seems to be friggin great. Why do you make it
useless~unuseable~difficult and confusing to use ?"

That was a decalaration of love, not war. I remember once telling my
son (then 7) sth along the line "Listen, this is a very, very nice
essay and it damn deserves to be written in a way your teacher can
read it. It deserves not be written barely readable and sloppy".

> > One problem was that a lot of docs and tutorials (on the web, too) are
> > simply very old and also using different approaches.
> > Example: I'm just trying to understand how resources work. Suddenly
> > they talk about "application" and tap. That is confusing.
> >
>
>  Definitely a problem.  This is probably worth filing a ticket about, but
> can you provide a little more detail, and some links to the relevant
> documents and the order you discovered them in?  The more detail the easier
> the documentation fixer's job will be.

I remember that in the section
http://twistedmatrix.com/projects/core/documentation/howto/ there are
sime links to the api (I suppose) that are broken/changed, e.g. in
http://twistedmatrix.com/projects/core/documentation/howto/basics.html
there is a link to "twisted.application.service.Application"
(http://twistedmatrix.com/projects/core/documentation/howto/twisted.application.service.Application)
that's broken.

This immensily disturb when one just discovers a complex thing like TM.


>  We don't know exactly how newbies
> approach the documentation because we can never approach it without knowing
> it.

OK, I'll try.

First I read about TM (here and there) being rudely complex. But then,
it also seemed to be the one that offered what I was looking for.
The bad reputation seemed to be mostly based in deferreds, so I looked
at those first.
Good: There is good documentation and I think anyone with some
experience in IT can understand it.
Bad: That documentation is spread all over the place, sometimes even
just a sentence or two somewhere.
Tip: Put relevant stuff in "getting started" and also offer links to
papers like the one about reactors.

After feeling assured enough about deferreds and actually liking them
and the was TM implements them I wanted to start up by writing a small
webserver.
What disturbed me the most was that whole resource thing and, more
generally, all that "stuff" like application, resource, Iresource tap,
etc.
It felt like having gotten the basic concept but having a thick fat
layer of "sugar", comfort in between the core and myself. Things
didn't have a place, they didn't fit - there was no overview but it
rather felt like trial and error.
There are plenty of snippets and examples but I didn't get the overall picture.

Tip: Publish some graphics, possibly a class tree and have some
introductory essay in "getting started". (e.g. Why would I want and
use "application" ? What does it do an how does it do that ?)

I noticed sth. similar with the API doc.
Sure, you guys know it by heart but I as a newbie can be completely
lost. Be generous and have a sentence or two with each function.

> ...  I do not
> mean to suggest that you should write documentation _immediately_. Merely
> that once you have learned enough about Twisted, you will be a good person
> to do these improvements.

OK, sounds reasonable. Will do once I come along with TM myself.

> "kqueue
>  This is of course my point.  To you, perhaps.  Not to Twisted :).  But,
> just because it's not "vital" doesn't mean it's not important.  We do need
> kqueue support.  It is a selling point of Twisted to support multiple
> different multiplexing mechanisms and kqueue is an important mechanism.

Maybe it's useful to you to consider my perspective. Actually, without
kqueue I would probably not have looked at TM. Python offers asyncore
and httpd so, somewhat more basic, of course, I would have had what I
needed if I were looking for _any_ select/poll based solution.
funny, btw. that for me personally one of the big plus-point of TM,
the whole array of protocolls, is by far less attractive. My approach
was rather "Ah, cool, they offer what plain good Python doesn't have;
a solid high-performance AIO core with usefull stuff on top".
It's probaly not the audience you targetted but I'd bet there are more
like myself looking at TM.

>  *PLEASE* do not switch to linux to use Twisted.  We have, like, a million
> developers who use Ubuntu.  Hence, we have very good support for linux.  We
> need more Twisted developers who use FreeBSD (and Windows and Solaris and
> AIX and even distros like Red Hat and SuSE).  Please, please stay around and
> help us with that.

No worry. I wouldn't switch to Linux even if it came with naked women along * g
Seriously, I'd rather do the whole stuff in C than switch away from BSD.

>  The problem is that FreeBSD people often show up, complain that Twisted has
> problems on FreeBSD, and then go away.  Either that, or they decide to give
> up FreeBSD and just use Linux on their servers, which is great for them, but
> doesn't help us at all.

I'll do neither. As long as I can use TM and get some help when needed
I 'll be around. On FreeBSD :)
I don't worry about the occasional hickup. I only worry about getting
into TM, about getting a good start and sth. done with it.

Again: It's just a very small thing but what I can offer right now is
a patchfile incl. the patches by ITS for the FreeBSD port. I tested it
both on 6.3 and 7.0 and it builds fine.

> (FreeBSD) ... so you
> have only to worry about kqueue issues (which therve and others have already
> done a ton of work on).

Would someone listen, please ?

Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
and it delivered nicely - around 300 connections/s with a payload of
around 2.5 KB delivered by a simple rpy. (with system load of ca.
0.75)

The problem is only, when it's daemonized. then it breaks (see my
earlier post for detailled output)


>  Well, let's move forward trying to make that happen.

Yes, Glyph ;)



From exarkun at divmod.com  Wed Apr 16 17:10:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 17:10:13 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>
Message-ID: <20080416211013.6859.839443112.divmod.quotient.30735@ohm>

On Wed, 16 Apr 2008 22:25:48 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
> [snip]
>
>> (FreeBSD) ... so you
>> have only to worry about kqueue issues (which therve and others have already
>> done a ton of work on).
>
>Would someone listen, please ?
>
>Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
>I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
>and it delivered nicely - around 300 connections/s with a payload of
>around 2.5 KB delivered by a simple rpy. (with system load of ca.
>0.75)
>
>The problem is only, when it's daemonized. then it breaks (see my
>earlier post for detailled output)
>

To clarify what I think is a miscommunication:

When a Twisted developers says something like "KQueue doesn't work" what
that means specifically is that:

    trial --reactor=kqueue twisted

results in some test failures.  It may indeed seem to work for your
application, and it may even *actually* work for your application, but
the way we know if it is working or not is whether it can pass the full
test suite.  We need this so we can judge whether changes are introducing
regressions or not.

Jean-Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 18:17:50 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Thu, 17 Apr 2008 00:17:50 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416211013.6859.839443112.divmod.quotient.30735@ohm>
References: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>
	<20080416211013.6859.839443112.divmod.quotient.30735@ohm>
Message-ID: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>

Oops, me newbie. Sorry for the noise * g

I find it very strange anyway, that the beast breaks as soon as it's
daemonized. Any idea, why ?

And where can  I learn more about trial ?

Thanks


On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 16 Apr 2008 22:25:48 +0200, Dr aio <dr.pythoniac at googlemail.com>
> wrote:
>
> > [snip]
> >
> >
> > > (FreeBSD) ... so you
> > > have only to worry about kqueue issues (which therve and others have
> already
> > > done a ton of work on).
> > >
> >
> > Would someone listen, please ?
> >
> > Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
> > I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
> > and it delivered nicely - around 300 connections/s with a payload of
> > around 2.5 KB delivered by a simple rpy. (with system load of ca.
> > 0.75)
> >
> > The problem is only, when it's daemonized. then it breaks (see my
> > earlier post for detailled output)
> >
> >
>
>  To clarify what I think is a miscommunication:
>
>  When a Twisted developers says something like "KQueue doesn't work" what
>  that means specifically is that:
>
>    trial --reactor=kqueue twisted
>
>  results in some test failures.  It may indeed seem to work for your
>  application, and it may even *actually* work for your application, but
>  the way we know if it is working or not is whether it can pass the full
>  test suite.  We need this so we can judge whether changes are introducing
>  regressions or not.
>
>  Jean-Paul
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Wed Apr 16 18:59:22 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 18:59:22 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
Message-ID: <20080416225922.6859.973778423.divmod.quotient.30818@ohm>

On Thu, 17 Apr 2008 00:17:50 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Oops, me newbie. Sorry for the noise * g

No problem.  I think this is a common misunderstanding. :)

>
>I find it very strange anyway, that the beast breaks as soon as it's
>daemonized. Any idea, why ?

Not really.  Maybe forking is having some unpleasant interaction with
the kqueue state?  This seems like a stretch though.  Oops, actually
maybe that's exactly it?  I only have an OS X machine handy at the
moment, but maybe this is significant:

  The kqueue() system call creates a new kernel event queue and returns
  a descriptor.  The queue is not inherited by a child created with
  fork(2).

>And where can  I learn more about trial ?

There's a wiki page with not much information on it:

  http://twistedmatrix.com/trac/wiki/TwistedTrial

And a howto that's more about testing than about trial:

  http://twistedmatrix.com/projects/core/documentation/howto/testing.html

Jean-Paul



From mailing_lists at evotex.ch  Thu Apr 17 02:49:22 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 08:49:22 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
Message-ID: <4806F2F2.8020203@evotex.ch>

glyph at divmod.com wrote:
>
> On 01:15 pm, dr.pythoniac at googlemail.com wrote:
>> Seeing there is doc. available, I digged through it. After all TM seems
>> worth the effort. From what I see, I love TM.
>
> Great!  The rest definitely doesn't sound like you love it though ... ;-)
>> Links are often broken, though. Often seemingly useful doc. is old, very
>> old. Even current doc. isn't up to date.
>
> Since the 8.0 release, we have had quite a few problems with links, 
> specifically the links from the core documentation to the API 
> documentation on the website.  We are working to fix this.  However, 
> if you spot broken links, please feel free to report them in the bug 
> tracker: http://twistedmatrix.com/trac/newticket
>
> Saying that there are "often" broken links is just about as pointless 
> as saying that you "often" find bugs.  Without specifics, this is not 
> useful information; the reason we have not fixed specific problems is 
> not because we believe there are no problems anywhere.
>> They talk about "resource trees", yet I don't find them in the doc. I 
>> find
>> putchild() but all examples and docs indicate, that you can do it only
>> within the root resource.
>
> You can do putChild to any resource, as long as you understand its 
> lifecycle.  A "resource tree" is simply a tree ( 
> http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
> http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
> ).
>
> Our documentation assumes, and will continue to assume, a certain 
> level of familiarity with basic computer-sciency jargon; if you feel 
> that a particular phrase is too obscure, feel free to submit a patch 
> elaborating on it.  However, the audience of the bulk of the Twisted 
> documentation is fluent Python programmers.  If you want to write 
> something for folks who are new to Python or programming in general, a 
> separate set of documentation would be better than trying to 
> re-explain everything in-line.  For example, explaining that we are 
> referring to a directed graph of IResource providers would be fine, 
> but adding an explanation of graphs or how python references or 
> dictionaries work would not.
>> OK, a little later, I
>> have my first web server running an my first rpy works, spitting out
>> "test". Wow.
>
> Sounds like the docs are doing their job, then :).
>> I'm wondering, why of all things "rpy" ? python won't generate sth. like
>> "rpyc" for that, which translates in lost speed, I assume. No 
>> explanation.
>
> "rpy" to mark the file as a specific kind of python file that needs to 
> be run within the web server to produce a resource.  Implemented in 
> this manner, python would not generate a "pyc" file even if it were 
> called a ".py"; it is not a module that you import.
>
> As far as "lost speed" is concerned, it's not entirely clear that 
> that's true, because the times when Python would have to check for the 
> .rpyc are entirely different than the way that it does when you are 
> importing modules.  Twisted could emit .rpycs as an optimization if 
> you did a benchmark, discovered it did indeed matter, and submitted a 
> patch.  This is, however, hardly the highest priority for twisted.web 
> developers right now :).
>> I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
>> journey begins ...
>
>> Intense googleing, and I mean "intense". Reading through years of this
>> mailing list. No positive result.
>
> Fair enough.  The kqueue reactor doesn't work and there's no 
> documentation saying that it doesn't, except a failing buildbot: 
> http://buildbot.twistedmatrix.com/builders/freebsd-py2.4-kq - also, 
> Twisted's support for platforms is not clearly explained.
>> I have the clear impression that twisted is something in between a 
>> toy and a
>> brilliant product. It's hackers, however, leave much to be desired in 
>> terms
>> of usefulness. As it is, it's a great and promising hobby but not a 
>> useful
>> product.
>
> Many, many people (including me!) disagree.
>
> I understand that you're frustrated, but this does nothing but serve 
> to weaken your position.  You have some valid criticism, but when I 
> read "twisted is not useful", I think that you are simply mistaken.
>> Sorry, but doc strings don't replcae a halfway decent documentation 
>> and a
>> reasonable tutorial, considering the highly complex matter.
>
> First google hit for "twisted tutorial":
>
> http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html 
>
>
> Not perfect, perhaps, but I think it could definitely be described as 
> a "reasonable tutorial" to core Twisted concepts.
>> Sorry, but documentation that is often enough outdated and sometimes 
>> offers
>> broken links is next to useless.
>
> If you were truly sorry, you would be contributing patches which fix 
> the broken links and updates the documentation to be more recent.
>> Kqueue seems to be vital to an event driven approach like TM, yet 
>> there are
>> multiple versions of pykqueue floating
>> around, none of them properly working (and I didn't fumble around. I
>> plain simply used the FreeBSD port), some of
>> them with some mor and some with some less "annotations" (I refuse to
>> call that doc.)
>
> Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
> is an optimization of a very specific part of a Twisted application on 
> a very specific platform.  *Most* realistic Twisted applications will 
> be bottlenecked on application code long before something like kqueue 
> (or epoll) will help.  Working from the amount of support from the 
> community, most Twisted applications also don't run on FreeBSD.
>
> I apologize if this response seems too harsh, but I am annoyed by 
> people seeing a pet feature (variously: good ideas like HTTP/1.1, 
> kqueue, and Cocoa GUI support, bad ideas like "block on a Deferred", 
> and core API thread safety)  which isn't too important in Twisted and 
> then claiming it's "vital" to the project's success.  The project is 
> succeeding, so clearly it is not vital: QED.  It may be important to 
> you: that's great. Do some work to support it.  Once it's supported, 
> buildbot will listen to its tests and it won't break again.
>
> For those projects which really do benefit from high multiplexing 
> volume with something like kqueue, Twisted offers an extremely 
> abstract API where the multiplexing mechanism is independent of the 
> application code. You can, at any moment, replace the reactor and your 
> application will keep working.  So even if kqueue support does not 
> exist at all, you can add it with Twisted much more easily than if you 
> wrote your own select() loop.
>
> You might say, in fact, that Twisted is vital to a platform-specific 
> tool like Kqueue, because otherwise almost nothing will use it.
>> - How about getting 1 version of pykqueue properly running and into TM ?
>
> Yes, how about that?  Maybe you could contribute to one of the 
> numerous kqueue tickets already in the tracker.
>> - How about freezing some TM version (like 8.0) and updating/matching 
>> docs?
>> (Of course, experiments are funny and intriguing, but quite some of 
>> us out
>> here need sth. stable for everydays work)
>
> Twisted is very, very stable.  The next version (8.1) will break only 
> code that is using APIs which have been outdated for literally 
> _years_. There is no need to "freeze" anything, just update the 
> documentation to what is most recent and do a new release including 
> that documentation.
>> - How about writing some complete docs and tutorials? Sth. along the 
>> lines
>> of "My first web server wit TM" (instead all those - sometimes 
>> seeming to
>> contradict each other - snippets)
>
> Yes, how about that?  You can write documentation on your own site, 
> and we will link to it.  Or, you could contribute to the core 
> documentation.
>
> The bottom line: complaining like this is not very useful.  If you 
> have time to help, then contributing patches and responding to reviews 
> in the tracker is helpful.  If you don't have the time to actually do 
> any work, then describing specific problems (in as much detail as 
> possible!) is useful.  If you don't have time even for _that_, then 
> cash donations to the foundation are useful.
>
> If you are interested in getting stuff in Twisted fixed, though, 
> writing rambling complaints serves to do nothing but reduce our 
> developers' already scarce motivation, make us think our work is not 
> appreciated, and encourage us to spend time writing rambling responses 
> like this one rather than fix the problems you're talking about.
>
> (Which is not to say this has been a _complete_ waste of time.  If one 
> out of every fifty people I write a message like this to understands 
> what I'm saying and becomes a long-time contributor, then it's 
> probably worth it.)
>
Hello,

there are links that are always broken, like for example : 
http://twistedmatrix.com/projects/core/documentation/howto/process.html, 
if you look at this line :

"If you only need the final exit code (like 
|commands.getstatusoutput(cmd)[0]|), the 
|twisted.internet.utils.getProcessValue 
<http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue>| 
function is useful."

The link being : 
http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue

All those types of links in the howtos/tutorials are bad. Should I write 
a bugreport? If so, would an explanation like the one above suffice (I 
can't find all the links in the tutorials that are bad)?

Gabriel



From mailing_lists at evotex.ch  Thu Apr 17 03:25:24 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 09:25:24 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
Message-ID: <4806FB64.7080609@evotex.ch>

Hello all,

I was wondering if there is a simple example or a tutorial for the 
Producer-Consumer stuff in twisted?

Thanks,
Gabriel



From nitro at dr-code.org  Thu Apr 17 04:41:01 2008
From: nitro at dr-code.org (Nitro)
Date: Thu, 17 Apr 2008 10:41:01 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <4806F2F2.8020203@evotex.ch>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch>
Message-ID: <op.t9qyenctz3pzfc@nitrogenycs2>

Am 17.04.2008, 08:49 Uhr, schrieb Gabriel Rossetti  
<mailing_lists at evotex.ch>:


> there are links that are always broken, like for example :  
> http://twistedmatrix.com/projects/core/documentation/howto/process.html,  
> if you look at this line :
>
> "If you only need the final exit code (like  
> |commands.getstatusoutput(cmd)[0]|), the  
> |twisted.internet.utils.getProcessValue  
> <http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue>|  
> function is useful."
>
> The link being :  
> http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue
>
> All those types of links in the howtos/tutorials are bad. Should I write  
> a bugreport? If so, would an explanation like the one above suffice (I  
> can't find all the links in the tutorials that are bad)?

Couldn't "find broken links" be automated in some way? Whenever the docs  
are build there would be a simple python script extracting all hrefs out  
of the generated html document then. Then it would try to access each one  
of them and write the failed ones inluding the document they appeared in  
into a log file or something?

-Matthias



From matt at madebykite.com  Thu Apr 17 04:58:55 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Thu, 17 Apr 2008 09:58:55 +0100
Subject: [Twisted-Python] My memory leak, diagnosed
Message-ID: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>

Hi All,

I just wanted to put your minds at rest regarding what I though might  
have been a problem with the epoll reactor. As always, inferring  
anything from a production machine is not desirable and it seems that  
my assumptions about epoll were based on coincidence.

I have since found the leak:

<http://twistedmatrix.com/trac/ticket/3188>

Unfortunately, my workaround involved rewriting my proxy code without  
using twistd.web. I'll happily contribute a patch back to the  
t.w.proxy code in time but for the moment it doesn't support  
persistent connections (I wanted to keep it simple). I also feel that  
t.w.proxy would be better served by making use of a reciprocal  
IProducer / IConsumer arrangement between the ProxyServer protocol  
and the ProxyClient protocol which is something that my workaround  
does not implement.

Thanks again for Twisted,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From sipickles at hotmail.com  Thu Apr 17 06:01:48 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 17 Apr 2008 11:01:48 +0100
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <BAY114-DAV13A40BEB957D24D8859C5FBEE50@phx.gbl>



Dr aio wrote:
>
> - How about writing some complete docs and tutorials? Sth. along the 
> lines of "My first web server wit TM" (instead all those - sometimes 
> seeming to contradict each other - snippets)
>
> I'm still fascinated by TM and still willingto invest time, efforts 
> and 
> brains. But I'd love to have some properly working base and docs that exp?lain rather than confuse.
>

Welcome Aio,

I am new to the Twisted community and had a similar experience to you 
when I started, a kind of excited frustration? :)

I started a very constructive and informative thread on this forum in 
which Daniel Burr and Others helped a great deal.

http://twistedmatrix.com/pipermail/twisted-python/2008-January/016640.html

I _really_ want to write that newbie guide, just an alternative intro to 
twisted. Now my twisted server is working, I might have a go!

Keep the faith - we'll get there!

Best regards



Si

http://www.squirtual-reality.com





From sipickles at hotmail.com  Thu Apr 17 06:06:29 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 17 Apr 2008 11:06:29 +0100
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
	<20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
Message-ID: <BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>

glyph at divmod.com wrote:
>
> If you want a product based on Twisted, or training based on Twisted, 
> my company (http://divmod.org/) might be able to help you.
Thats a very good looking website!

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From paulalexwilson at gmail.com  Thu Apr 17 07:04:13 2008
From: paulalexwilson at gmail.com (Paul Wilson)
Date: Thu, 17 Apr 2008 12:04:13 +0100
Subject: [Twisted-Python] Twisted Advice
Message-ID: <3c3d11cf0804170404k420a42ebr4ca70515f84ed322@mail.gmail.com>

>  >
>  >I would like to provide an environment where developers can write call
>  >servicing applications with no knowledge of the network. I had rested
>  >on a coroutine approach, whereby a developer could write something
>  >like this:
>  >
>  >   response, events = (yield getKeyPress(SomePromptAnnouncement))
>  >
>
>  Just to clarify - this looks like a generator rather than a coroutine.
>
>  >With the response, the developer can do an undefined number of things,
>  >taking an undefined amount of time. During this time, management
>  >events can arrive on a separate port, to which the developer gets
>  >knowledge of through the yield statement.
>  >
>  >On the other side of this generator is a scheduler which takes
>  >instructions such as "getKeyPress" and passes it through twisted to
>  >the remote client, such that it can play the announcement and get a
>  >keypress. The scheduler gets the response and sends to back to the
>  >generator, along with any events that have arrived on this separate
>  >port.
>  >
>  >When a call/connection arrives, the client will send an opening
>  >line(s) to which I was specify the correct LineRecieved method. This
>  >will trigger some scheduler code defined elsewhere via a deferred,
>  >which will prompt the developer's code for some instructions, such as
>  >"PlayPrompt". Am I correct in thinking that while a developer's code
>  >is executing, all other connections are paused, and that the twisted
>  >server will not accept new connections until it returns?
>
>  Yes, that's correct.  Twisted is single-threaded - it invokes event
>  handlers in the same thread it uses to monitor event sources.  As long
>  as an event handler is running, event sources are not monitored for
>  events and no other handlers will be invoked.
>
>  >
>  >My original assumption was that Twisted would spawn a new thread
>  >within which the scheduler would be set to run to manage the
>  >communication for the duration of the customer call/interaction.
>  >However, the approach taken by twisted is that if the developer's code
>  >got itself in a muddle or infinite loop or took a very long time
>  >accessing a database, the rest of the application would just be
>  >frozen.
>
>  Generally speaking, Twisted will only create a thread when application
>  code asks it to.
>
>  >
>  >I wrote a quick test app that defers to a function that sleeps then
>  >returns its response line. During the 20 seconds that the test server
>  >took to return a line, the server would not accept any other requests
>  >until the sleep function ended.
>
>  The "defers to a function" language is a bit confusing.  However, your
>  conclusion sounds right.  If you block the reactor thread, nothing else
>  will happen.
>
>  >Clearly, I must be missing something; I have designed my application
>  >upon the wrong axis. If so, I have some misunderstanding as to how to
>  >properly structure an application like this upon Twisted. Or, twisted
>  >is a framework whereby the response to a network event is expect to
>  >arrive immediately.
>
>  It's not necessary for responses to arrive immediately.  Responses just
>  need to be obtained without blocking.  For example, if getting a response
>  involves talking to someone else over the network, then Twisted has some
>  networking APIs that don't block. ;)  Likewise, twisted.enterprise lets
>  you talk to a rdbm (it actually uses threads, but it mostly doesn't show
>  that to you).

>  >I have seen "deferToThread" mentioned but I cannot find enough
>  >documentation to decide whether it's what I need or not. Or perhaps
>  >callInThread() is what I need?
>
>  One of these may be appropriate.  You could decide that in your application
>  framework, user code is always run in a non-reactor thread.  This is easily
>  accomplished: your event handler just needs to invoke user code in a thread
>  instead of directly.  deferToThread lets you run a function in a thread and
>  gives you a Deferred which will be called back with the return value of the
>  function when it returns or which will errback if it raises an exception.
>  callInThread is lower level, not exposing the result of the function.

Ahh. Okay; thanks for this. deferToThread looks like a good option
here and seems to fit what I'm looking for. From experience, can you
point me towards some good code that uses deferToThread?

>  >
>  >Any suggestions about this would be very much appreciated. Even
>  >better, if anybody knows of good documentation/tutorials they can
>  >point me to, that would be appreciated also.
>
>  It sounds like you're looking for deferToThread or one of its friends.
>  Note however that just throwing user code into a thread doesn't mean
>  programmers can be oblivious to their environment.  It simply trades the
>  need to pay attention to when you block and for how long for the more
>  complex task of paying attention to thread safety.  If each task is
>  isolated from all others, this may be a good trade-off to make, but if
>  there's shared state it may not be.

Thanks for your reply; there are some subtle and difficult questions
to answer here. I'd like each instance of the developer's code to be
isolated with it's own state using threading.local, but ultimately
I'll use deferToThread to set it all up.

I assume that I can use some threadsafe implementation (if the GIL
doesn't enforce that anyway) of a dictionary to store the global
information between each call handling thread.

Thanks again for your time.

>  Jean-Paul



From exarkun at divmod.com  Thu Apr 17 07:19:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Apr 2008 07:19:38 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <4806F2F2.8020203@evotex.ch>
Message-ID: <20080417111938.6859.345440497.divmod.quotient.31110@ohm>

On Thu, 17 Apr 2008 08:49:22 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>All those types of links in the howtos/tutorials are bad. Should I write a 
>bugreport? If so, would an explanation like the one above suffice (I can't 
>find all the links in the tutorials that are bad)?

There's a ticket for this - http://twistedmatrix.com/trac/ticket/3177

Thanks, though.

Someone will probably be fixing this at the sprint on Sunday.

Jean-Paul



From exarkun at divmod.com  Thu Apr 17 07:27:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Apr 2008 07:27:40 -0400
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <3c3d11cf0804170404k420a42ebr4ca70515f84ed322@mail.gmail.com>
Message-ID: <20080417112740.6859.987108239.divmod.quotient.31113@ohm>

On Thu, 17 Apr 2008 12:04:13 +0100, Paul Wilson <paulalexwilson at gmail.com> wrote:
> [snip]
>
>Ahh. Okay; thanks for this. deferToThread looks like a good option
>here and seems to fit what I'm looking for. From experience, can you
>point me towards some good code that uses deferToThread?

Here's some:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/twisted/internet/base.py#L195

It's somewhat complicated by the addition of timeout support on top of an
API which doesn't support timeouts, but it's one of only two uses of the
API in Twisted and I think the other is even more confusing. :)

Jean-Paul




From dr.pythoniac at googlemail.com  Thu Apr 17 08:10:45 2008
From: dr.pythoniac at googlemail.com (Dr Pythoniac)
Date: Thu, 17 Apr 2008 05:10:45 -0700 (PDT)
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416225922.6859.973778423.divmod.quotient.30818@ohm>
References: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
	<20080416225922.6859.973778423.divmod.quotient.30818@ohm>
Message-ID: <20080417141041.0607dca9.dr.pythoniac@googlemail.com>

Hi Jean-Paul

Smarthead :)

You were right. I quickly ripped out the forking code in daemonize in _twistd_unix - et voila: It runs nicely.

Now that's one of the points where it'd be great to know more about the inner workings of TM. If i did, I probably could just open them sockets (fire up the whole event engine) _after_ forking, i.e. in the child process.

As it is, though, (me newbie, gazing unsmartly at TM *g) I'd rather not touch it.

Thanks for having your Synapses fire ;)



Jean-Paul Calderone <exarkun at divmod.com> wrote:

> >I find it very strange anyway, that the beast breaks as soon as it's
> >daemonized. Any idea, why ?
> 
> Not really.  Maybe forking is having some unpleasant interaction with
> the kqueue state?  This seems like a stretch though.  Oops, actually
> maybe that's exactly it?  I only have an OS X machine handy at the
> moment, but maybe this is significant:
> 
>   The kqueue() system call creates a new kernel event queue and returns
>   a descriptor.  The queue is not inherited by a child created with
>   fork(2).
> 



From drew.smathers at gmail.com  Thu Apr 17 09:16:23 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Apr 2008 09:16:23 -0400
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
In-Reply-To: <4806FB64.7080609@evotex.ch>
References: <4806FB64.7080609@evotex.ch>
Message-ID: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>

On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello all,
>
>  I was wondering if there is a simple example or a tutorial for the
> Producer-Consumer stuff in twisted?
>

The only document I'm aware of:
http://twistedmatrix.com/projects/core/documentation/howto/producers.html

The above explains the interfaces and how to use them, but lacks any examples.

Btw ... the last link on the page is broken
(http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From glyph at divmod.com  Thu Apr 17 10:13:06 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:13:06 -0000
Subject: [Twisted-Python] My memory leak, diagnosed
In-Reply-To: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>
References: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>
Message-ID: <20080417141306.21558.512801958.divmod.xquotient.11038@joule.divmod.com>


On 08:58 am, matt at madebykite.com wrote:
>I just wanted to put your minds at rest regarding what I though might 
>have been a problem with the epoll reactor. As always, inferring 
>anything from a production machine is not desirable and it seems that 
>my assumptions about epoll were based on coincidence.

Thanks for the thorough diagnosis and detailed ticket!  And I'm glad to 
hear the issue is not with epoll, I'd like our users to be able to rest 
easy when upgrading to a "good" reactor :).  While twisted.web.proxy 
should really work well, I'm a bit less concerned to hear that it might 
have some issues.  Especially if you're planning on fixing them.

Looking at the ticket, though, it appears that web.proxy might be okay 
too, and the memory growth is just the process reaching its natural 
equilibrium, or the source is somewhere else?
>Unfortunately, my workaround involved rewriting my proxy code without 
>using twistd.web. I'll happily contribute a patch back to the 
>t.w.proxy code in time but for the moment it doesn't support 
>persistent connections (I wanted to keep it simple). I also feel that 
>t.w.proxy would be better served by making use of a reciprocal 
>IProducer / IConsumer arrangement between the ProxyServer protocol  and 
>the ProxyClient protocol which is something that my workaround  does 
>not implement.

Not implementing IProducer/IConsumer will, ironically, lead to more 
memory consumption in the long term, since the producer will overload 
the consumer's buffer if the consumer's not fast enough.



From glyph at divmod.com  Thu Apr 17 10:15:14 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:15:14 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
	<20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
	<BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>
Message-ID: <20080417141514.21558.96579278.divmod.xquotient.11039@joule.divmod.com>




On 10:06 am, sipickles at hotmail.com wrote:
>glyph at divmod.com wrote:
>>
>>If you want a product based on Twisted, or training based on Twisted, 
>>my company (http://divmod.org/) might be able to help you.
>Thats a very good looking website!

Why, thank you!



From glyph at divmod.com  Thu Apr 17 10:17:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:17:08 -0000
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
In-Reply-To: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
References: <4806FB64.7080609@evotex.ch>
	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
Message-ID: <20080417141708.21558.153822769.divmod.xquotient.11041@joule.divmod.com>


On 01:16 pm, drew.smathers at gmail.com wrote:
>On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
><mailing_lists at evotex.ch> wrote:
>>Hello all,
>>
>>  I was wondering if there is a simple example or a tutorial for the
>>Producer-Consumer stuff in twisted?
>
>The only document I'm aware of:
>http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>
>The above explains the interfaces and how to use them, but lacks any 
>examples.
>
>Btw ... the last link on the page is broken
>(http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).

http://twistedmatrix.com/trac/ticket/3177 strikes again...



From glyph at divmod.com  Thu Apr 17 10:19:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:19:15 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <op.t9qyenctz3pzfc@nitrogenycs2>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch> <op.t9qyenctz3pzfc@nitrogenycs2>
Message-ID: <20080417141915.21558.976627358.divmod.xquotient.11045@joule.divmod.com>


On 08:41 am, nitro at dr-code.org wrote:
>Couldn't "find broken links" be automated in some way? Whenever the 
>docs are build there would be a simple python script extracting all 
>hrefs out  of the generated html document then. Then it would try to 
>access each one  of them and write the failed ones inluding the 
>document they appeared in  into a log file or something?

There wouldn't be much of a point until 
http://twistedmatrix.com/trac/ticket/3177 is fixed (this weekend, the 
sprint, bug radix), but if you were interested in addressing this 
problem, the best idea would probably be to look at an existing bit of 
link-checker software (there's a ton of them) and running it on the 
website and posting its results.  Writing new code in Twisted to do 
something as simple as checking hyperlinks is almost certainly a waste 
of time.

Thank you for volunteering to investigate and address this, though, of 
course ;-).



From Marcin.Kasperski at softax.com.pl  Thu Apr 17 10:22:29 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 17 Apr 2008 16:22:29 +0200
Subject: [Twisted-Python] Re: documentation / kqueue / feedback
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch> <op.t9qyenctz3pzfc@nitrogenycs2>
Message-ID: <87zlrsbly2.fsf@softax.com.pl>

> Couldn't "find broken links" be automated in some way?

$ sudo apt-get install linkchecker  # or yum, or whatever

$ linkchecker --output=text --file-output-html \
  --recursion-level=20 \
  --ignore-url='^mailto:' --ignore-url='^ftp:' --ignore-url='^javascript:' \
  --anchors \
  http://twistedmatrix.com

... bzzzzz ....

$ firefox linkchecker-out.html

  (or just read console output)


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | We want to know as early as possible whether
| http://mekk.waw.pl | the project will succeed. Thus we attack the
|                    |        high-risk areas first. (Martin)
----------------------------------------------------------------------




From mailing_lists at evotex.ch  Thu Apr 17 10:22:20 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 16:22:20 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example
	or	tutorial?
In-Reply-To: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
References: <4806FB64.7080609@evotex.ch>
	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
Message-ID: <48075D1C.6000304@evotex.ch>

Drew Smathers wrote:
> On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello all,
>>
>>  I was wondering if there is a simple example or a tutorial for the
>> Producer-Consumer stuff in twisted?
>>
>>     
>
> The only document I'm aware of:
> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>
> The above explains the interfaces and how to use them, but lacks any examples.
>
> Btw ... the last link on the page is broken
> (http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).
>
>
>   
Thanks,

I have a producer sort of working thanks to this :

http://itamarst.org/writings/OSCON03/twisted_internet-0.html

and this post :

http://twistedmatrix.com/pipermail/twisted-python/2007-March/014943.html

I have a question though, I was looking at the way all this works by 
using a debugger, and I noticed that in twisted.internet.abstract.py in 
registerProducer() there is the following :

if not streaming:
    producer.resumeProducing()

Why is this done only for the pull producer? Shouldn't it also be called 
for the push producer since to have the data sent one has to call either 
self.transport.write() or resumeProducing() anyways? If you look at :

http://itamarst.org/writings/OSCON03/twisted_internet-112.html

it does :

transport.registerProducer(self, 1)
        self.produce()

thus starting the writing process and in the pull producer :

http://itamarst.org/writings/OSCON03/twisted_internet-111.html

it doesn't need to start the writing process explicitly since it's 
started when the producer is registered.

Thank you,
Gabriel







From mailing_lists at evotex.ch  Thu Apr 17 10:33:47 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 16:33:47 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example
	or	tutorial?
In-Reply-To: <48075D1C.6000304@evotex.ch>
References: <4806FB64.7080609@evotex.ch>	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
	<48075D1C.6000304@evotex.ch>
Message-ID: <48075FCB.80703@evotex.ch>

Gabriel Rossetti wrote:
> Drew Smathers wrote:
>> On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
>> <mailing_lists at evotex.ch> wrote:
>>  
>>> Hello all,
>>>
>>>  I was wondering if there is a simple example or a tutorial for the
>>> Producer-Consumer stuff in twisted?
>>>
>>>     
>>
>> The only document I'm aware of:
>> http://twistedmatrix.com/projects/core/documentation/howto/producers.html 
>>
>>
>> The above explains the interfaces and how to use them, but lacks any 
>> examples.
>>
>> Btw ... the last link on the page is broken
>> (http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender). 
>>
>>
>>
>>   
> Thanks,
>
> I have a producer sort of working thanks to this :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-0.html
>
> and this post :
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-March/014943.html
>
> I have a question though, I was looking at the way all this works by 
> using a debugger, and I noticed that in twisted.internet.abstract.py 
> in registerProducer() there is the following :
>
> if not streaming:
>    producer.resumeProducing()
>
> Why is this done only for the pull producer? Shouldn't it also be 
> called for the push producer since to have the data sent one has to 
> call either self.transport.write() or resumeProducing() anyways? If 
> you look at :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>
> it does :
>
> transport.registerProducer(self, 1)
>        self.produce()
>
> thus starting the writing process and in the pull producer :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>
> it doesn't need to start the writing process explicitly since it's 
> started when the producer is registered.
>
> Thank you,
> Gabriel
>
>
>
Oh, and I forgot to ask, since from what I see in the code the only 
difference with a push and pull producer is that the push producer is 
paused if the data being written/sent is very large (to let the reactor 
breath and process other things), if it isn't larger than the buffer it 
behaves like a pull producer, correct? If so, then why have both? Am I 
mixed up again?

Gabriel



From mg at daimi.au.dk  Thu Apr 17 16:54:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Thu, 17 Apr 2008 22:54:30 +0200
Subject: [Twisted-Python] Re: documentation / kqueue / feedback
References: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
	<20080416225922.6859.973778423.divmod.quotient.30818@ohm>
Message-ID: <87prso2oe1.fsf@hbox.dyndns.org>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> On Thu, 17 Apr 2008 00:17:50 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>>And where can  I learn more about trial ?
>
> There's a wiki page with not much information on it:
>
>  http://twistedmatrix.com/trac/wiki/TwistedTrial
>
> And a howto that's more about testing than about trial:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/testing.html

I learned a lot about Trial from this tutorial:

  http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml?format=raw

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080417/f45ac8b6/attachment.pgp 

From jml at mumak.net  Fri Apr 18 01:06:10 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 18 Apr 2008 15:06:10 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
Message-ID: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>

Hello everyone,

Now that the release is out[1], I'd like to start work on fixing #1216
-- official deprecation policy.

There's one proposed policy at
http://twistedmatrix.com/trac/wiki/CompatibilityPolicy, there's also
one mentioned in the ticket itself: deprecate in release N, remove in
release N+1. Glyph has at one point expressed a desire for time-based
deprecation.[2]

I think these are all the questions we need to answer:
- Is it time-based or release-based?
- How long for?
- Do we grade deprecations? How?
- Which code is subject to this policy?

CompatibilityPolicy suggests release-based deprecation that is graded
over 4 releases: release N PendingDeprecationWarning, N+1
DeprecationWarning, N+2 DeprecationError, N+3 remove the
functionality.

Ticket #1216 suggests a release-based deprecation policy that is not
graded and over 1 release: release N, add DeprecationWarning, release
N+1, remove the functionality.

Important factors to bear in mind:
- Maintaining deprecated APIs brings a cost to developers when they
maintain code.
- Removing APIs brings a cost to users when they choose to upgrade.
- We will probably always be changing APIs and making mistakes when we
change them.


Now, here's what I think.

* Release-based, not time-based.

Releases are easy to track, dates are less so. This is as true for
Twisted programmers as it is for sysadmins & other Twisted users. I
think that whatever problems are solved by time-based deprecation are
better solved by regular releases.

Our releases should, of course, be time-based. But that's another discussion.

* Two release deprecation length.

That is: release N, DeprecationWarning; release N+1,
DeprecationWarning; release N+2, remove the functionality.

This is enough to allow users to upgrade their version of Twisted
incrementally. Trial has been doing one release for quite a while now,
and I can't recall any complaints about breaking compatibility in
released code.

Micro-releases don't count.

* No grading

I think the DeprecationWarning vs PendingDeprecationWarning vs
DeprecationError is too much hassle. Just say "next release" or "in
two releases time".

* All "public" code and command-line tools should be covered. Things
marked as deprecated at the time of the 8.0 release should be
grandfathered so as to be safe for removal.

Anything else will get too confusing. The removal of the API stability
markers agrees with this. Everything is public unless it starts with
one underscore.[3]

Most importantly, we should have a policy, we should all agree and as
much of the policy as possible should be implemented in Python. This
bug has been open for years now, and it is frustrating for the policy
to change under one's feet or to disagree with other developers on
something so fundamental. "Explicit is better than implicit".

I'm sending this now because the 8.0 release is settling down and we
have a sprint coming up where it might be easier to resolve this
quickly.

jml

[1] I'm so happy.
[2] http://twistedmatrix.com/trac/ticket/2352
[3] This hurts. t.trial.util doesn't begin with an underscore.



From cwellington at ccg.murdoch.edu.au  Fri Apr 18 02:35:50 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 06:35:50 +0000
Subject: [Twisted-Python] Non returning deferred result.
Message-ID: <1208500550.4347.20.camel@wolfwood>

Hey everyone,

Sorry about the subject line, its a difficult problem to sum up in a
single line subject. Give me a little time to explain.

I'm using twisted.web2. I have a generic webservice over http. It
receives a file via standard POST http upload. It saves this to disk
using non blocking stream setup as outlines in web2.static.FileServer.

Now I don't immediately return a response, because another thread then
processes this file and builds an output file. So I return a deferred
from my render() function. When the output file is finished building,
the deferred callback is triggered with the http.Response() object and
the response is finally returned to the waiting http connection.

This DOES work except for a little strange behavoir. When the deferred
callback is triggered, the client doesn't see any response, the
connection just stays open. Then if I connect to the webservices from
anywhere, even a bad URL, I get my response suddenly back.

It's as if the callback is not triggered until some TCP activity cause
the main reactor to pump the pending requests or something. Is there
anyway to get this deferred callback to be recognised and processed
immediately? I could do a kind of hack, where the deferred callback is
called, and then a quick connection is made to the webservice to "pump"
the message through, but it doesn't seem very 'right' to me.

Heres some summary of the approach incase the devil is in the details...

My Resource class:
==================
class UploadFile(resource.PostableResource):
	# 1 gig is max file upload size
	maxSize=1 * 1024 * 1024 * 1024
	
	def render(self, ctx):
		"""Create the job for this upload and return the relevent deferred"""
		request = iweb.IRequest(ctx)
		
		job=Job()
		deferred = job.SubmitInput(request.files)				
		
		return deferred
		

My deferred callback:
=====================
deferred.callback( http.Response(responsecode.OK,
				{'content-type': http_headers.MimeType('text', 'html')},
				"Success!" ) )

My TopLevel:
============
class Toplevel(resource.PostableResource):
	addSlash = True
	def render(self, ctx):
		return http.Response(responsecode.OK,
				{'content-type':
						http_headers.MimeType('text', 'html')},
						"""
<html>
    <form action="http://localhost:8080/uploadfile"
            enctype="multipart/form-data"
            method="post">
        filename: <input type="file" name="filename">
		filename2: <input type="file" name="filename2">
        <input type="submit" value="submit">
    </form>
</html>
""")
	child_upload = UploadFile(jobqueue)


My server startup:
==================
# Create the resource we will be serving
test = Toplevel()

# Setup default common access logging
res = log.LogWrapperResource(test)
log.DefaultCommonAccessLoggingObserver().start()

# Create the site and application objects
site = server.Site(res)
application = service.Application("demo")

# Serve it via standard HTTP on port 8080
s = strports.service('tcp:8080', channel.HTTPFactory(site))
s.setServiceParent(application)




Im running the application as:

twistd -noy server.py



Twisted v8.0.1+, actually, the lastest SVN head.

Any one with more knowledge of twisted's internals have any ideas on
what is happening? Does anyone have any good ideas on how to make the
deferred callback trigger an immediate response (without opening a new
TCP connection to kick it into gear)?


Thanks

Regards
Crispin Wellington
<cwellington at ccg.murdoch.edu.au>






From cwellington at ccg.murdoch.edu.au  Fri Apr 18 02:48:20 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 06:48:20 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208500550.4347.20.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
Message-ID: <1208501300.4347.24.camel@wolfwood>

Just a quick update. Doing a "reactor.iterate()" after the callback
fixed the behavoir. ie.

--------
deferred.callback( http.Response(responsecode.OK,
				{'content-type': http_headers.MimeType('text', 'html')},
				"Success!" ) )
reactor.iterate()
--------

so my new question is, is this the best way to do this? Is there a
better way? Also is reactor.iterate() threadsafe? Are there potential
problems callinf reactor.iterate() from a thread spawned off the running
reactor thread?

Kind Regards

Crispin Wellington
<cwellington at ccg.murdoch.edu.au>


On Fri, 2008-04-18 at 06:35 +0000, Crispin Wellington wrote:
> Hey everyone,
> 
> Sorry about the subject line, its a difficult problem to sum up in a
> single line subject. Give me a little time to explain.
> 
> I'm using twisted.web2. I have a generic webservice over http. It
> receives a file via standard POST http upload. It saves this to disk
> using non blocking stream setup as outlines in web2.static.FileServer.
> 
> Now I don't immediately return a response, because another thread then
> processes this file and builds an output file. So I return a deferred
> from my render() function. When the output file is finished building,
> the deferred callback is triggered with the http.Response() object and
> the response is finally returned to the waiting http connection.
> 
> This DOES work except for a little strange behavoir. When the deferred
> callback is triggered, the client doesn't see any response, the
> connection just stays open. Then if I connect to the webservices from
> anywhere, even a bad URL, I get my response suddenly back.
> 
> It's as if the callback is not triggered until some TCP activity cause
> the main reactor to pump the pending requests or something. Is there
> anyway to get this deferred callback to be recognised and processed
> immediately? I could do a kind of hack, where the deferred callback is
> called, and then a quick connection is made to the webservice to "pump"
> the message through, but it doesn't seem very 'right' to me.
> 
> Heres some summary of the approach incase the devil is in the details...
> 
> My Resource class:
> ==================
> class UploadFile(resource.PostableResource):
> 	# 1 gig is max file upload size
> 	maxSize=1 * 1024 * 1024 * 1024
> 	
> 	def render(self, ctx):
> 		"""Create the job for this upload and return the relevent deferred"""
> 		request = iweb.IRequest(ctx)
> 		
> 		job=Job()
> 		deferred = job.SubmitInput(request.files)				
> 		
> 		return deferred
> 		
> 
> My deferred callback:
> =====================
> deferred.callback( http.Response(responsecode.OK,
> 				{'content-type': http_headers.MimeType('text', 'html')},
> 				"Success!" ) )
> 
> My TopLevel:
> ============
> class Toplevel(resource.PostableResource):
> 	addSlash = True
> 	def render(self, ctx):
> 		return http.Response(responsecode.OK,
> 				{'content-type':
> 						http_headers.MimeType('text', 'html')},
> 						"""
> <html>
>     <form action="http://localhost:8080/uploadfile"
>             enctype="multipart/form-data"
>             method="post">
>         filename: <input type="file" name="filename">
> 		filename2: <input type="file" name="filename2">
>         <input type="submit" value="submit">
>     </form>
> </html>
> """)
> 	child_upload = UploadFile(jobqueue)
> 
> 
> My server startup:
> ==================
> # Create the resource we will be serving
> test = Toplevel()
> 
> # Setup default common access logging
> res = log.LogWrapperResource(test)
> log.DefaultCommonAccessLoggingObserver().start()
> 
> # Create the site and application objects
> site = server.Site(res)
> application = service.Application("demo")
> 
> # Serve it via standard HTTP on port 8080
> s = strports.service('tcp:8080', channel.HTTPFactory(site))
> s.setServiceParent(application)
> 
> 
> 
> 
> Im running the application as:
> 
> twistd -noy server.py
> 
> 
> 
> Twisted v8.0.1+, actually, the lastest SVN head.
> 
> Any one with more knowledge of twisted's internals have any ideas on
> what is happening? Does anyone have any good ideas on how to make the
> deferred callback trigger an immediate response (without opening a new
> TCP connection to kick it into gear)?
> 
> 
> Thanks
> 
> Regards
> Crispin Wellington
> <cwellington at ccg.murdoch.edu.au>
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Fri Apr 18 02:53:24 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Apr 2008 16:53:24 +1000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208500550.4347.20.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
Message-ID: <20080418065324.GD9934@steerpike.home.puzzling.org>

Crispin Wellington wrote:
[...]
> This DOES work except for a little strange behavoir. When the deferred
> callback is triggered, the client doesn't see any response, the
> connection just stays open. Then if I connect to the webservices from
> anywhere, even a bad URL, I get my response suddenly back.
> 
> It's as if the callback is not triggered until some TCP activity cause
> the main reactor to pump the pending requests or something. Is there

I'm betting you are doing "deferred.callback(...)" from the thread.  Twisted's
APIs are in general *not* thread-safe.  You should do
"reactor.callFromThread(deferred.callback, ...)" instead.  I suspect that will
fix your problem.

-Andrew.




From andrew-twisted at puzzling.org  Fri Apr 18 03:37:25 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Apr 2008 17:37:25 +1000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208501300.4347.24.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
	<1208501300.4347.24.camel@wolfwood>
Message-ID: <20080418073725.GG9934@steerpike.home.puzzling.org>

Crispin Wellington wrote:
> Just a quick update. Doing a "reactor.iterate()" after the callback
> fixed the behavoir. ie.
> 
> --------
> deferred.callback( http.Response(responsecode.OK,
> 				{'content-type': http_headers.MimeType('text', 'html')},
> 				"Success!" ) )
> reactor.iterate()
> --------
> 
> so my new question is, is this the best way to do this? Is there a
> better way? Also is reactor.iterate() threadsafe? Are there potential
> problems callinf reactor.iterate() from a thread spawned off the running
> reactor thread?

No, this is definitely not safe.  Two wrongs don't make a right!  See my other
mail :)

-Andrew.




From cwellington at ccg.murdoch.edu.au  Fri Apr 18 03:47:29 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 07:47:29 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <20080418065324.GD9934@steerpike.home.puzzling.org>
References: <1208500550.4347.20.camel@wolfwood>
	<20080418065324.GD9934@steerpike.home.puzzling.org>
Message-ID: <1208504849.4347.26.camel@wolfwood>

Andrew,

I certainly was calling it from the other thread! And that
callFromThread() certainly did fix my problem! :)

Thanks a heap!

Crispin

On Fri, 2008-04-18 at 16:53 +1000, Andrew Bennetts wrote:
> Crispin Wellington wrote:
> [...]
> > This DOES work except for a little strange behavoir. When the deferred
> > callback is triggered, the client doesn't see any response, the
> > connection just stays open. Then if I connect to the webservices from
> > anywhere, even a bad URL, I get my response suddenly back.
> > 
> > It's as if the callback is not triggered until some TCP activity cause
> > the main reactor to pump the pending requests or something. Is there
> 
> I'm betting you are doing "deferred.callback(...)" from the thread.  Twisted's
> APIs are in general *not* thread-safe.  You should do
> "reactor.callFromThread(deferred.callback, ...)" instead.  I suspect that will
> fix your problem.
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From mailing_lists at evotex.ch  Fri Apr 18 03:57:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 18 Apr 2008 09:57:35 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings,
 was : "Is there a simple Producer/Consumer example or tutorial?"
Message-ID: <4808546F.7060109@evotex.ch>

Hello everyone,

I am re-posting these questions with a different title, since they have 
ventured away from the original question

I have a question though, I was looking at the way all this works by 
using a debugger, and I noticed that in twisted.internet.abstract.py in 
registerProducer() there is the following :

if not streaming:
   producer.resumeProducing()

Why is this done only for the pull producer? Shouldn't it also be called 
for the push producer since to have the data sent one has to call either 
self.transport.write() or resumeProducing() anyways? If you look at :

http://itamarst.org/writings/OSCON03/twisted_internet-112.html

it does :

transport.registerProducer(self, 1)
       self.produce()

thus starting the writing process and in the pull producer :

http://itamarst.org/writings/OSCON03/twisted_internet-111.html

it doesn't need to start the writing process explicitly since it's 
started when the producer is registered.

Oh, and also, since from what I see in the code the only difference with 
a push and pull producer is that the push producer is paused if the data 
being written/sent is very large (to let the reactor breath and process 
other things), if it isn't larger than the buffer it behaves like a pull 
producer, correct? If so, then why have both? Am I mixed up again?

Thank you,
Gabriel



From cwellington at ccg.murdoch.edu.au  Fri Apr 18 06:33:05 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 10:33:05 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <20080418073725.GG9934@steerpike.home.puzzling.org>
References: <1208500550.4347.20.camel@wolfwood>
	<1208501300.4347.24.camel@wolfwood>
	<20080418073725.GG9934@steerpike.home.puzzling.org>
Message-ID: <1208514785.4347.34.camel@wolfwood>

Yeah, I replaced this with your thread safe suggestion.

Thanks again

Crispin

On Fri, 2008-04-18 at 17:37 +1000, Andrew Bennetts wrote:
> Crispin Wellington wrote:
> > Just a quick update. Doing a "reactor.iterate()" after the callback
> > fixed the behavoir. ie.
> > 
> > --------
> > deferred.callback( http.Response(responsecode.OK,
> > 				{'content-type': http_headers.MimeType('text', 'html')},
> > 				"Success!" ) )
> > reactor.iterate()
> > --------
> > 
> > so my new question is, is this the best way to do this? Is there a
> > better way? Also is reactor.iterate() threadsafe? Are there potential
> > problems callinf reactor.iterate() from a thread spawned off the running
> > reactor thread?
> 
> No, this is definitely not safe.  Two wrongs don't make a right!  See my other
> mail :)
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dripton at ripton.net  Fri Apr 18 09:13:13 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 18 Apr 2008 06:13:13 -0700
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
Message-ID: <20080418131313.GA20394@vidar.dreamhost.com>

On 2008.04.18 15:06:10 +1000, Jonathan Lange wrote:
> CompatibilityPolicy suggests release-based deprecation that is graded
> over 4 releases: release N PendingDeprecationWarning, N+1
> DeprecationWarning, N+2 DeprecationError, N+3 remove the
> functionality.
> 
> Ticket #1216 suggests a release-based deprecation policy that is not
> graded and over 1 release: release N, add DeprecationWarning, release
> N+1, remove the functionality.

As a user, I don't see much difference between a
PendingDeprecationWarning and a DeprecationWarning.  Or between a
DeprecationError and the code being removed.  Simple is good.

> Now, here's what I think.
> 
> * Release-based, not time-based.

Now that version numbers are based on the year, there's not a big
difference.  For example, if you wanted to guarantee at least a year of
DeprecationWarning before removing a feature, you could implement that
by saying that if the warning goes in in 8.x, then the feature can come
out in 10.0.  Or vice-versa.

-- 
David Ripton    dripton at ripton.net



From mithrandi at mithrandi.net  Fri Apr 18 09:26:16 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 18 Apr 2008 15:26:16 +0200
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080418131313.GA20394@vidar.dreamhost.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080418131313.GA20394@vidar.dreamhost.com>
Message-ID: <20080418132616.GC4988@mithrandi.net>

* David Ripton <dripton at ripton.net> [2008-04-18 06:13:13 -0700]:

> On 2008.04.18 15:06:10 +1000, Jonathan Lange wrote:
> > CompatibilityPolicy suggests release-based deprecation that is graded
> > over 4 releases: release N PendingDeprecationWarning, N+1
> > DeprecationWarning, N+2 DeprecationError, N+3 remove the
> > functionality.
> > 
> > Ticket #1216 suggests a release-based deprecation policy that is not
> > graded and over 1 release: release N, add DeprecationWarning, release
> > N+1, remove the functionality.
> 
> As a user, I don't see much difference between a
> PendingDeprecationWarning and a DeprecationWarning.  Or between a
> DeprecationError and the code being removed.  Simple is good.

A PendingDeprecationWarning is not visible by default, so users of an
application won't be inundated with DeprecationWarning messages they can
do nothing about; but a developer can turn them on in order to check if
his application is using any deprecated APIs.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080418/c22c34ca/attachment.pgp 

From sipickles at hotmail.com  Fri Apr 18 09:27:03 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 18 Apr 2008 14:27:03 +0100
Subject: [Twisted-Python] Twisted.web2 or Nevow?
Message-ID: <BAY114-DAV13679A8849B8C439C02172BEE40@phx.gbl>

Hi,

I want to add a simple http server to my game server to allow monitors 
and GMs to use a web interface to access game state information.

I also want to produce an integrated game web site.

My game server is using a twisted.reactor to handle TCP connections. My 
question is, which two similar technologies should I focus on to provide 
the HTTP angle? twisted.web2 or Nevow?

So far I have mostly research Nevow, and seen how twistd is used to 
launch the application. How would Nevow then be integrated with my own 
app and its own reactor?

Many thanks

Simon

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Fri Apr 18 09:33:02 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 18 Apr 2008 09:33:02 -0400
Subject: [Twisted-Python] Twisted.web2 or Nevow?
In-Reply-To: <BAY114-DAV13679A8849B8C439C02172BEE40@phx.gbl>
Message-ID: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>

On Fri, 18 Apr 2008 14:27:03 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I want to add a simple http server to my game server to allow monitors and 
>GMs to use a web interface to access game state information.
>
>I also want to produce an integrated game web site.
>
>My game server is using a twisted.reactor to handle TCP connections. My 
>question is, which two similar technologies should I focus on to provide the 
>HTTP angle? twisted.web2 or Nevow?
>

See http://twistedmatrix.com/trac/wiki/TwistedWebPlan

There's also a dedicated web mailing list, twisted-web at twistedmatrix.com.

>So far I have mostly research Nevow, and seen how twistd is used to launch 
>the application. How would Nevow then be integrated with my own app and its 
>own reactor?

Nevow supplies you with a protocol factory.  You just set it up on the port
you want like any other factory.  There's nothing that particularly requires
twistd, although as with most Twisted applications, using twistd gives you a
lot of extra features with very little effort.

Jean-Paul



From andrewfr_ice at yahoo.com  Fri Apr 18 10:16:00 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 18 Apr 2008 07:16:00 -0700 (PDT)
Subject: Crossing the Chasm [Twisted-Python] documentation 
In-Reply-To: <E1Jm9hJ-0002Oy-EY@cube.twistedmatrix.com>
Message-ID: <654069.80372.qm@web34204.mail.mud.yahoo.com>

Hello:

>Hi out there
>Let me tell you about my experience with TM so far
...

>Seeing there is doc. available, I digged through it.
>After all TM seems worth the effort. From what I see,
>I >love TM.

I've been following this thread. I have wondered if
the Twisted team are familiar with read Geoffrey
Moore's "Crossing the Chasm"? 

Cheers,
Andrew




      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From sipickles at hotmail.com  Fri Apr 18 12:03:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 18 Apr 2008 17:03:05 +0100
Subject: [Twisted-Python] Twisted.web2 or Nevow?
In-Reply-To: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>
References: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>
Message-ID: <BAY114-DAV11C7487C36FDB543FE0CEBEE40@phx.gbl>

Jean-Paul Calderone wrote:
> On Fri, 18 Apr 2008 14:27:03 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I want to add a simple http server to my game server to allow 
>> monitors and GMs to use a web interface to access game state 
>> information.
>>
>> I also want to produce an integrated game web site.
>>
>> My game server is using a twisted.reactor to handle TCP connections. 
>> My question is, which two similar technologies should I focus on to 
>> provide the HTTP angle? twisted.web2 or Nevow?
>>
>
> See http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
> There's also a dedicated web mailing list, twisted-web at twistedmatrix.com.
>
>> So far I have mostly research Nevow, and seen how twistd is used to 
>> launch the application. How would Nevow then be integrated with my 
>> own app and its own reactor?
>
> Nevow supplies you with a protocol factory.  You just set it up on the 
> port
> you want like any other factory.  There's nothing that particularly 
> requires
> twistd, although as with most Twisted applications, using twistd gives 
> you a
> lot of extra features with very little effort.
>
Thanks, That clears things up for me a lot.


-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From nathan.stocks at gmail.com  Fri Apr 18 13:09:29 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 18 Apr 2008 11:09:29 -0600
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
Message-ID: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>

In my non-twisted scripts, I usually use psycopg2 DictCursors so that
my query results come back in dicts instead of lists.

curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)

Now I'd like to do the same thing in Twisted.  Is there a way to ask
t.e.adbapi to use that DictCursor cursor factory?

Or maybe there's a way to globally configure psycopg2 so that it used
psycopg2.extras.DictCursor by default...

/me is searching...

~ Nathan



From phil at bubblehouse.org  Fri Apr 18 14:05:03 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 18 Apr 2008 14:05:03 -0400
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
Message-ID: <D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>

On Apr 18, 2008, at 1:09 PM, Nathan wrote:
> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
> my query results come back in dicts instead of lists.
>
> curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>
> Now I'd like to do the same thing in Twisted.  Is there a way to ask
> t.e.adbapi to use that DictCursor cursor factory?
>
> Or maybe there's a way to globally configure psycopg2 so that it used
> psycopg2.extras.DictCursor by default...

I think I ran into this while trying to support multiple DB drivers.

The adbapi.ConnectionPool constructor automatically passes any  
additional arguments or keyword params to the DB-API Connection object  
constructor.

I remember having problems setting a default cursor via Connection()  
params, but I thought it was with the other PG driver, not psycopg2.  
In fact, I almost seem to remember pgdb not even directly supporting  
DictCursors at all, but I could easily be mistaken.

In any event, I ended up having the real drivers return a the row as  
sequence (the normal behavior), and made a trivial ConnectionPool  
subclass that contained the following:

     def _runInteraction(self, interaction, *args, **kw):
         conn = adbapi.Connection(self)
         trans = adbapi.Transaction(self, conn)
         try:
             result = interaction(trans, *args, **kw)
             if(result and isinstance(result[0], (list, tuple))):
                 result = [dict(zip([c[0] for c in  
trans._cursor.description], item)) for item in result]
             trans.close()
             conn.commit()
             return result
         except:
             conn.rollback()
             raise

Hacky, I know, but it did the trick. This way if you have a driver  
that does support DictCursors by passing params to the Connection  
constructor, it will use that functionality instead.

-phil



From phil at bubblehouse.org  Fri Apr 18 14:11:46 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 18 Apr 2008 14:11:46 -0400
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>
Message-ID: <C8B819C5-853E-4C22-98B1-1F659E6835FA@bubblehouse.org>


On Apr 18, 2008, at 2:05 PM, Phil Christensen wrote:
> On Apr 18, 2008, at 1:09 PM, Nathan wrote:
>> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
>> my query results come back in dicts instead of lists.
>>
>> curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>>
>> Now I'd like to do the same thing in Twisted.  Is there a way to ask
>> t.e.adbapi to use that DictCursor cursor factory?
>>
>> Or maybe there's a way to globally configure psycopg2 so that it used
>> psycopg2.extras.DictCursor by default...
>
> I think I ran into this while trying to support multiple DB drivers.
>
> The adbapi.ConnectionPool constructor automatically passes any  
> additional arguments or keyword params to the DB-API Connection  
> object constructor.
>
> I remember having problems setting a default cursor via Connection()  
> params, but I thought it was with the other PG driver, not psycopg2.  
> In fact, I almost seem to remember pgdb not even directly supporting  
> DictCursors at all, but I could easily be mistaken.
>
> In any event, I ended up having the real drivers return a the row as  
> sequence (the normal behavior), and made a trivial ConnectionPool  
> subclass that contained the following:
[snip wrong code]
> Hacky, I know, but it did the trick. This way if you have a driver  
> that does support DictCursors by passing params to the Connection  
> constructor, it will use that functionality instead.


Ah yes, this is the right one:

    def _runInteraction(self, interaction, *args, **kw):
        conn = adbapi.Connection(self)
        trans = adbapi.Transaction(self, conn)
        try:
            result = interaction(trans, *args, **kw)
            if(result and isinstance(result[0], (list, tuple))):
                colanmes = [c[0] for c in trans._cursor.description]
                result = [dict(zip(colnames, item)) for item in result]
            trans.close()
            conn.commit()
            return result
        except:
            conn.rollback()
            raise

Small change, but I was feeling some....what's the opposite of shame?  
Pride? No, not that far from shame...less shame?

-phil



From ddwiggins at advpubtech.com  Fri Apr 18 15:36:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 18 Apr 2008 12:36:26 -0700
Subject: [Twisted-Python] Howto: use Trial to unit test an XML-RPC server
Message-ID: <fuat7s$eo2$1@ger.gmane.org>

I'm offering the following as an experience report and a draft of a 
howto article:
-----------------------------
I've been developing an XML-RPC server using Twisted, and unit testing 
it with the distribution unittest, with each test connecting as a client 
and exercising a particular method.  I ran into a problem, however:

My server is essentially a special-purpose front end to a database, 
providing limited access to it.  Some of the server methods modify the 
database (I'm using adbapi for DB access).  For unit testing purposes, I 
want each test to leave the test database unchanged when it's done.  In 
unit testing stored procedures, for example, I create a connection in 
SetUp, use it in the test function to send a SQL "exec", and do a 
rollback in TearDown.  Nice and easy, since I'm using the same 
connection throughout.  In testing my server, however, I don't have 
access to the connection it used to access the database (and in fact 
shouldn't have, since my unit test functions are just clients to the 
server, and know nothing of the database itself).

This led me to the following approach, using Twisted's Trial extension 
of unittest.  I converted my unittest module to be run under Trial, as 
follows: rather than running the server, the test module imports the 
server module, giving it access to the XMLRPC class itself, and the 
ability to directly call its methods.  Since the server's methods return 
Deferreds, it's easy enough to call a method, then attach a callback to 
it that does the checking of its results.  Here's an example:
-------------
import MyServer

class MyServerTests(unittest.TestCase)
     def setUp(self):
         # Instantiate object to be tested here
         self.srvr = MyServer.XMLRPCServer()

     def testFrobulate(self):
         d = self.srvr.xmlrpc_frobulate(theFrobulatee)
         def checkResult(info):
	    # Test that the frobulation occurred correctly
             pass
         d.addCallback(checkFrobulation)

     def checkFrobulation(self, resultOfFrobulation):
         # Test whether it turned out OK
--------------
This works beautifully when frobulate doesn't modify the database; when 
it does, however, I have the same problem as before: the actual 
connection used is hidden in the guts of adbapi.

For this case, I changed the coding a bit to allow testing.  Rather than 
ConnectionPool.runQuery(), I use .runInteraction(), passing a function 
that expects a DBAPI cursor as its first argument (when running in the 
server, the function will be called in the context of a subthread).  The 
code in the server module then looks like this (I'm running on Py 2.4):
-------------
     @defer.deferredGenerator
     def xmlrpc_frobulate(theVictim):
         frobInProgress = defer.waitForDeferred(
             self._dbpool.runInteraction(
                 self.frobulateInteraction, theVictim) )
         yield frobInProgress
         didItWork = frobInProgress.getResult()
         yield didItWork
         return

     def frobulateInteraction(self, cursor, theVictim):
         cursor.execute("exec FrobulateOn " + theVictim)
         # Check the results, return True or False
--------------
Now, in the unit test, I can call self.srvr.frobulateInteraction like this:
-------------
     def testFrobulate(self):
         self.cursor = self.connection.cursor()
         d = self.srvr.frobulateInteraction(self.cursor,
                                            self.theFrobulatee)
         def checkResult(info):
	    # Test that the frobulation occurred correctly
             pass
         d.addCallback(checkFrobulation)
-------------
Now, since frobulateInteraction is using the connection from SetUp, the 
rollback in TearDown will restore the state of the DB.

In effect, by going "under the covers" of the server, I'm bypassing the 
parts of the server that are supplied by Twisted, and focusing on the 
code that I've written, which is exactly what I wanted to test.

Feedback solicited...

-- 
Don Dwiggins
Advanced Publishing Technology




From handzisk at tkn.tu-berlin.de  Fri Apr 18 16:12:36 2008
From: handzisk at tkn.tu-berlin.de (Vlado Handziski)
Date: Fri, 18 Apr 2008 22:12:36 +0200
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
Message-ID: <697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>

On Fri, Apr 18, 2008 at 7:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
>  my query results come back in dicts instead of lists.
>
>  curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>
>  Now I'd like to do the same thing in Twisted.  Is there a way to ask
>  t.e.adbapi to use that DictCursor cursor factory?
>
>  Or maybe there's a way to globally configure psycopg2 so that it used
>  psycopg2.extras.DictCursor by default...
>

I am using the hack below from Federico Di Gregorio to force a
RealDictCursor in my adbapi stores:

#module twistedpg.py
#Author: Federico Di Gregorio

from psycopg2 import *
from psycopg2 import _psycopg as _2psycopg
from psycopg2.extensions import register_type, UNICODE, connection as
_2connection
from psycopg2.extras import RealDictCursor

del connect
def connect(*args, **kwargs):
    kwargs['connection_factory'] = connection
    return _2psycopg.connect(*args, **kwargs)

class connection(_2connection):
    def cursor(self):
        return _2connection.cursor(self, cursor_factory=RealDictCursor)

register_type(UNICODE)

and then:

        self.dbpool = adbapi.ConnectionPool('twistedpg',
                                            database=dname,
                                            user=duser,
                                            password=dpasswd,
                                            host=dhost,
                                            cp_reconnect=True)

etc...

Vlado



From drew.smathers at gmail.com  Fri Apr 18 16:19:22 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 18 Apr 2008 16:19:22 -0400
Subject: [Twisted-Python] Howto: use Trial to unit test an XML-RPC server
In-Reply-To: <fuat7s$eo2$1@ger.gmane.org>
References: <fuat7s$eo2$1@ger.gmane.org>
Message-ID: <368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>

On Fri, Apr 18, 2008 at 3:36 PM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> I'm offering the following as an experience report and a draft of a howto
> article:
>  -----------------------------
>  I've been developing an XML-RPC server using Twisted, and unit testing it
> with the distribution unittest, with each test connecting as a client and
> exercising a particular method.  I ran into a problem, however:
>
>  My server is essentially a special-purpose front end to a database,
> providing limited access to it.  Some of the server methods modify the
> database (I'm using adbapi for DB access).  For unit testing purposes, I
> want each test to leave the test database unchanged when it's done.  In unit
> testing stored procedures, for example, I create a connection in SetUp, use
> it in the test function to send a SQL "exec", and do a rollback in TearDown.
> Nice and easy, since I'm using the same connection throughout.  In testing
> my server, however, I don't have access to the connection it used to access
> the database (and in fact shouldn't have, since my unit test functions are
> just clients to the server, and know nothing of the database itself).
>
>  This led me to the following approach, using Twisted's Trial extension of
> unittest.  I converted my unittest module to be run under Trial, as follows:
> rather than running the server, the test module imports the server module,
> giving it access to the XMLRPC class itself, and the ability to directly
> call its methods.  Since the server's methods return Deferreds, it's easy
> enough to call a method, then attach a callback to it that does the checking
> of its results.  Here's an example:
>  -------------
>  import MyServer
>
>  class MyServerTests(unittest.TestCase)
>     def setUp(self):
>         # Instantiate object to be tested here
>         self.srvr = MyServer.XMLRPCServer()
>
>     def testFrobulate(self):
>         d = self.srvr.xmlrpc_frobulate(theFrobulatee)
>         def checkResult(info):
>             # Test that the frobulation occurred correctly
>             pass
>         d.addCallback(checkFrobulation)
>
>     def checkFrobulation(self, resultOfFrobulation):
>         # Test whether it turned out OK
>  --------------
>  This works beautifully when frobulate doesn't modify the database; when it
> does, however, I have the same problem as before: the actual connection used
> is hidden in the guts of adbapi.
>
>  For this case, I changed the coding a bit to allow testing.  Rather than
> ConnectionPool.runQuery(), I use .runInteraction(), passing a function that
> expects a DBAPI cursor as its first argument (when running in the server,
> the function will be called in the context of a subthread).  The code in the
> server module then looks like this (I'm running on Py 2.4):
>  -------------
>     @defer.deferredGenerator
>     def xmlrpc_frobulate(theVictim):
>         frobInProgress = defer.waitForDeferred(
>             self._dbpool.runInteraction(
>                 self.frobulateInteraction, theVictim) )
>         yield frobInProgress
>         didItWork = frobInProgress.getResult()
>         yield didItWork
>         return
>
>     def frobulateInteraction(self, cursor, theVictim):
>         cursor.execute("exec FrobulateOn " + theVictim)
>         # Check the results, return True or False
>  --------------
>  Now, in the unit test, I can call self.srvr.frobulateInteraction like this:
>  -------------
>     def testFrobulate(self):
>         self.cursor = self.connection.cursor()
>         d = self.srvr.frobulateInteraction(self.cursor,
>                                            self.theFrobulatee)
>         def checkResult(info):
>             # Test that the frobulation occurred correctly
>             pass
>         d.addCallback(checkFrobulation)
>  -------------
>  Now, since frobulateInteraction is using the connection from SetUp, the
> rollback in TearDown will restore the state of the DB.
>
>  In effect, by going "under the covers" of the server, I'm bypassing the
> parts of the server that are supplied by Twisted, and focusing on the code
> that I've written, which is exactly what I wanted to test.
>
>  Feedback solicited...
>
>  --
>  Don Dwiggins
>  Advanced Publishing Technology
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

One question: are you really not returning each Deferred from your
test methods, or was this a typo in the above?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From nathan.stocks at gmail.com  Fri Apr 18 16:38:30 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 18 Apr 2008 14:38:30 -0600
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
Message-ID: <96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>

On Fri, Apr 18, 2008 at 2:12 PM, Vlado Handziski
<handzisk at tkn.tu-berlin.de> wrote:
>  I am using the hack below from Federico Di Gregorio to force a
>  RealDictCursor in my adbapi stores:
>
>  #module twistedpg.py
>  #Author: Federico Di Gregorio
>
>  from psycopg2 import *
>  from psycopg2 import _psycopg as _2psycopg
>  from psycopg2.extensions import register_type, UNICODE, connection as
>  _2connection
>  from psycopg2.extras import RealDictCursor
>
>  del connect
>  def connect(*args, **kwargs):
>     kwargs['connection_factory'] = connection
>     return _2psycopg.connect(*args, **kwargs)
>
>  class connection(_2connection):
>     def cursor(self):
>         return _2connection.cursor(self, cursor_factory=RealDictCursor)
>
>  register_type(UNICODE)
>
>  and then:
>
>         self.dbpool = adbapi.ConnectionPool('twistedpg',
>                                             database=dname,
>                                             user=duser,
>                                             password=dpasswd,
>                                             host=dhost,
>                                             cp_reconnect=True)

Oh, ok!  That makes sense.  So since twisted just calls the underlying
db module's connect() function, you just (in essence) sub-classed the
whole psycopg2 module and overrode connect() to use the DictCursor.

I don't understand what the "UNICODE" stuff is about, though.  Do you
know what that is?

~ Nathan



From handzisk at tkn.tu-berlin.de  Fri Apr 18 18:17:46 2008
From: handzisk at tkn.tu-berlin.de (Vlado Handziski)
Date: Sat, 19 Apr 2008 00:17:46 +0200
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
	<96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>
Message-ID: <697986ec0804181517m28e781f2w64640b87361f15eb@mail.gmail.com>

On Fri, Apr 18, 2008 at 10:38 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Fri, Apr 18, 2008 at 2:12 PM, Vlado Handziski
>  <handzisk at tkn.tu-berlin.de> wrote:
>  >  I am using the hack below from Federico Di Gregorio to force a
>  >  RealDictCursor in my adbapi stores:
>  >
>  >  #module twistedpg.py
>  >  #Author: Federico Di Gregorio
>  >
>  >  from psycopg2 import *
>  >  from psycopg2 import _psycopg as _2psycopg
>  >  from psycopg2.extensions import register_type, UNICODE, connection as
>  >  _2connection
>  >  from psycopg2.extras import RealDictCursor
>  >
>  >  del connect
>  >  def connect(*args, **kwargs):
>  >     kwargs['connection_factory'] = connection
>  >     return _2psycopg.connect(*args, **kwargs)
>  >
>  >  class connection(_2connection):
>  >     def cursor(self):
>  >         return _2connection.cursor(self, cursor_factory=RealDictCursor)
>  >
>  >  register_type(UNICODE)
>  >
>  >  and then:
>  >
>  >         self.dbpool = adbapi.ConnectionPool('twistedpg',
>  >                                             database=dname,
>  >                                             user=duser,
>  >                                             password=dpasswd,
>  >                                             host=dhost,
>  >                                             cp_reconnect=True)
>
>  Oh, ok!  That makes sense.  So since twisted just calls the underlying
>  db module's connect() function, you just (in essence) sub-classed the
>  whole psycopg2 module and overrode connect() to use the DictCursor.
>
>  I don't understand what the "UNICODE" stuff is about, though.  Do you
>  know what that is?
>

Effectively it is forcing psycopg2 to convert the results to unicode.
I am using it so that unicode form data can be transparently
read/written in the DB.

Vlado



From pittipatti at web.de  Sat Apr 19 07:06:14 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Sat, 19 Apr 2008 13:06:14 +0200
Subject: [Twisted-Python] feeding-worker-loop problem
Message-ID: <4809D226.20903@web.de>

Hi!

I've been thinking for some time now about the following problem, but
can't find a solution.

I have a queue with a fluctuant number of tasks. This queue might be
empty at some time but might also become such full, that all workers
have work to do and we have to wait until one becomes free again.

I'd like to have a number of workers which process these tasks from the
queue.

What I've got:
- the worker, which returns a deferred for further processing
- a worker-pool class, which hands out the workers with an attached
callback to re-queue them to the "available-pool"

My problem:
- the connection between the queue and the worker-pool and integrating
this into the main reactor-loop

My first thought was a twisted.internet.task.LoopingCall, trying to get
a worker and on success giving it a task, but that's not very
asynchronous, isn't it? Especially no when the queue is empty.

I've no clue how to implement this.

I've read something about producer-consumer in twisted, but the
documentation here is very rare and I think it's not what I'm looking for.


Can someone please give me a hint, if twisted offers some techniques to
implement this, or point me in the right direction?


Thanks
Patrick



From p.mayers at imperial.ac.uk  Sat Apr 19 09:06:25 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 19 Apr 2008 14:06:25 +0100
Subject: [Twisted-Python] feeding-worker-loop problem
In-Reply-To: <4809D226.20903@web.de>
References: <4809D226.20903@web.de>
Message-ID: <4809EE51.8080906@imperial.ac.uk>

> I'd like to have a number of workers which process these tasks from the
> queue.
> 
> What I've got:
> - the worker, which returns a deferred for further processing
> - a worker-pool class, which hands out the workers with an attached
> callback to re-queue them to the "available-pool"

I don't understand that terminology.

What kind of objects are these workers? Threads? Sub-processes? Python 
generators? Long-lived functions (these would block the reactor)

> 
> My problem:
> - the connection between the queue and the worker-pool and integrating
> this into the main reactor-loop
> 
> My first thought was a twisted.internet.task.LoopingCall, trying to get
> a worker and on success giving it a task, but that's not very
> asynchronous, isn't it? Especially no when the queue is empty.
> 
> I've no clue how to implement this.

I would suggest looking at this:

http://foss.eepatents.com/AsynQueue



From exarkun at divmod.com  Sat Apr 19 09:33:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 Apr 2008 09:33:55 -0400
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <4808546F.7060109@evotex.ch>
Message-ID: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>

On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello everyone,
>
>I am re-posting these questions with a different title, since they have 
>ventured away from the original question
>
>I have a question though, I was looking at the way all this works by using a 
>debugger, and I noticed that in twisted.internet.abstract.py in 
>registerProducer() there is the following :
>
>if not streaming:
>   producer.resumeProducing()
>
>Why is this done only for the pull producer? Shouldn't it also be called for 
>the push producer since to have the data sent one has to call either 
>self.transport.write() or resumeProducing() anyways? If you look at :
>
>http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>
>it does :
>
>transport.registerProducer(self, 1)
>       self.produce()

So, this is a streaming producer.  It starts producing right away without
having resumeProducing called on it.

>
>thus starting the writing process and in the pull producer :
>
>http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>
>it doesn't need to start the writing process explicitly since it's started 
>when the producer is registered.

This is a non-streaming producer.  It doesn't do anything until something
calls resumeProducing on it.

>
>Oh, and also, since from what I see in the code the only difference with a 
>push and pull producer is that the push producer is paused if the data being 
>written/sent is very large (to let the reactor breath and process other 
>things), if it isn't larger than the buffer it behaves like a pull producer, 
>correct? If so, then why have both? Am I mixed up again?

As you say, they behave differently when there is a large amount of data.
However, this is more about the source of the data than where it ends up.
For example, if you have a large string and you want to producer it to a
transport, you probably want a pull producer, because there's no events
which will signal that you can send some more of the string *except* for
the reactor deciding that it is ready for some more.  So that's how you
should decide which of these you want to write - if the consumer is the
only event source involved, as in the large string case, then you want a
pull producer (streaming = False); if the producer itself is event-driven
in its ability to provide data, then you want a push producer.

Jean-Paul



From dr.pythoniac at googlemail.com  Sat Apr 19 11:24:48 2008
From: dr.pythoniac at googlemail.com (Dr Pythoniac)
Date: Sat, 19 Apr 2008 08:24:48 -0700 (PDT)
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <4809EE51.8080906@imperial.ac.uk>
References: <4809D226.20903@web.de>
	<4809EE51.8080906@imperial.ac.uk>
Message-ID: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>

Hi all

concerning twisted.web:

How do I run once-per-application stuff ?

Assume, I want to put sth into the static.Registry or  I want to read in some application data from a file, so that every resource can use it.

My main problem can be split in two:

- where do it do it (using twistd) ? 
Please no complicated plugin (or alike) suggestions. I'm seeing red just hearing 'zope' ...


- how can resource scripts use it ?

Probably this is an idiots question but I have sth. like 8 Browsertabs open with twisted "docu" and getting more and more confused by hunting pieces of information that are just splattered all over the site.

Additional: Is there any docu about twistd ? How can I use all its miracles rather than just dumbly guess and try an err and try and err and ... ?

Yes, I'm demotivated and pissed far over the edge. Forgive me.

Thanks



From maarten at treewalker.org  Sat Apr 19 11:59:28 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 19 Apr 2008 17:59:28 +0200
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
References: <4809D226.20903@web.de> <4809EE51.8080906@imperial.ac.uk>
	<20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
Message-ID: <200804191759.33486.maarten@treewalker.org>

On Saturday 19 April 2008, Dr Pythoniac wrote:

> How do I run once-per-application stuff ?
>
> Assume, I want to put sth into the static.Registry or  I want to read in
> some application data from a file, so that every resource can use it.
>
> My main problem can be split in two:
>
> - where do it do it (using twistd) ?

For our webapp, we load lots of data, so I made a "startup in progress" page 
which both does the loading and serves a page that shows how much is loaded 
so far. The loading itself is done by loading small chunks of data and then 
returning control back to the reactor, so it can actually serve the 
progress page. When loading is done, the progress page resource is replaced 
by the root page of the webapp.

If you only want to load a small amount of data, maybe subclass Application? 
I haven't tried this though.

Our webapp loads from a Python file (using "twistd -y"), so that first 
Python file could also load data. If I recall correctly, that initial file 
is run as the same user that started twistd (root, in our case), while the 
started application runs as the user selected from the twistd --uid 
and --gid options. So it is safer to do as little as possible at this stage 
of startup.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080419/14895fcc/attachment.pgp 

From p.mayers at imperial.ac.uk  Sat Apr 19 13:19:44 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 19 Apr 2008 18:19:44 +0100
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
References: <4809D226.20903@web.de>	<4809EE51.8080906@imperial.ac.uk>
	<20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
Message-ID: <480A29B0.1070500@imperial.ac.uk>

Dr Pythoniac wrote:
> Hi all

When posting a new topic, please don't use reply-to on a previous
different topic, it breaks threading.

> 
> concerning twisted.web:
> 
> How do I run once-per-application stuff ?
> 
> Assume, I want to put sth into the static.Registry or  I want to read
> in some application data from a file, so that every resource can use
> it.
> 
> My main problem can be split in two:
> 
> - where do it do it (using twistd) ? Please no complicated plugin (or
> alike) suggestions. I'm seeing red just hearing 'zope' ...

Assuming you are using a .tac file, you might do something like this in
"application.tac":

from twisted.application import service, strports

import mycode

application = service.Application('myapp')
services = service.IServiceCollection(application)

# do startup code here
mycode.doStartupStuff()

site = mycode.site()
web = strports.service('tcp:80', site)
web.setServiceParent(services)

...then run the "tac" file with:

twistd -oy application.tac

...this is such a simple solution that I guess you are having more basic
misunderstandings.


> 
> 
> - how can resource scripts use it ?

What does this mean?

> 
> Probably this is an idiots question but I have sth. like 8
> Browsertabs open with twisted "docu" and getting more and more
> confused by hunting pieces of information that are just splattered
> all over the site.

Have you read the finger tutorial from start to end, and understood it?

> 
> Additional: Is there any docu about twistd ? How can I use all its
> miracles rather than just dumbly guess and try an err and try and err
> and ... ?

http://twistedmatrix.com/projects/core/documentation/howto/application.html

...describes the contents of a ".tac" file, the recommended way to use 
twistd. If you could be more specific about *what* you don't understand, 
what you've tried already, why it didn't work and with what error 
messages, I can perhaps be more helpful.



From andrewfr_ice at yahoo.com  Sat Apr 19 14:29:14 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 19 Apr 2008 11:29:14 -0700 (PDT)
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <E1JnFTv-0000El-Cc@cube.twistedmatrix.com>
Message-ID: <609105.7987.qm@web34204.mail.mud.yahoo.com>


Hello Dr. Pythoniac:

>Additional: Is there any docu about twistd ? How can
I >use all its miracles rather than just dumbly guess
and >try an err and try and err and

Get the Abe Fettig book. There is a section on twistd.


>Assume, I want to put sth into the static.Registry 

what does 'sth' mean?

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Sat Apr 19 14:47:38 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 19 Apr 2008 11:47:38 -0700 (PDT)
Subject: [Twisted-Python] Stackless Python Examples Re: InlineCallback
	Friendly ? 
Message-ID: <882470.36243.qm@web34201.mail.mud.yahoo.com>

Hi Folks:

--- Andrew Francis <andrewfr_ice at yahoo.com> wrote:

[J-P Calderone]
>The only kind of dispatcher which is really hostile
>towards inlineCallbacks is the kind which is
>hostile towards Deferreds in general - ie, one which
>requires a return value and does not support 
>Deferreds.

[A Francis] 
>Once again Jean-Paul, I find your explanation super
>helpful and save me time going down the wrong path. 

Based on Jean-Paul's explanation, here are some code
snippets showing how to handle other protocols with
Stackless Python and Twisted. This is a continuation
of the technique I used in "Adventures" to prevent the
reactor from deadlocking.

Currently I am rethinking the techniques - I believe
there is a way to reduce spawning tasklets - not that
tasklets are all that expensive....

Here is an example with resources adapted from the Abe
Fettig example on page 48 of "Twisted Network
Programming Essentials." I am still getting my feet
wet with resources. I intend to use this to help
prototype REST support in WS-BPEL.

class HomePage(resource.Resource):
    
    def doWork(self):
        message = """
        <html>
        <head>
        </head>
        <body>
        Hello World    
        </body>
        </html>
        """
        self.request.write(message)
        self.request.finish()
        
        
    def render(self, request):
        self.request = request
        stackless.tasklet(self.doWork)()
        return server.NOT_DONE_YET


and here is one with PyAMF .2

(I remember sketching this one out on a napkin at
PyCon 2008)

class EchoServer(TwistedGateway):
    def __init__(self):
        super(EchoServer, self).__init__()
        self.request = None
        return
        
    def __echo__(self, request, deferred, y):
        print "=>", request, deferred, y
        deferred.callback(y)
        
    
    def echo(self, request, y):
        print "=>", request, y
        deferred = defer.Deferred()
        stackless.tasklet(self.__echo__)(request,
deferred, y)
        return deferred

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From exarkun at twistedmatrix.com  Sun Apr 20 00:05:10 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Apr 2008 04:05:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1208664311.0.644723372@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080420/991b6c50/attachment.htm 

From pittipatti at web.de  Sun Apr 20 12:54:05 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Sun, 20 Apr 2008 18:54:05 +0200
Subject: [Twisted-Python] feeding-worker-loop problem
In-Reply-To: <4809EE51.8080906@imperial.ac.uk>
References: <4809D226.20903@web.de> <4809EE51.8080906@imperial.ac.uk>
Message-ID: <480B752D.5020601@web.de>

Hi!

> I would suggest looking at this:
> 
> http://foss.eepatents.com/AsynQueue


That looks very promising. I'll take a deeper look at that tomorrow.
Thanks!

Patrick



From radix at twistedmatrix.com  Sun Apr 20 19:00:24 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 20 Apr 2008 19:00:24 -0400
Subject: [Twisted-Python] Twisted 8.1.0 prerelease 1
Message-ID: <60ed19d40804201600y1bb7371eq6fdb4b6ed3317454@mail.gmail.com>

Hey all. I've built a prerelease for Twisted 8.1.0. I'd appreciate if
some people would download it and check it out. We've fixed a few
important regressions in this release:

 * some reactor re-entrancy problems have been fixed (#3146, #3168)
 * Constructing failures of Pyrex-raised exceptions works again
 * User Guide API links now point to twistedmatrix.com instead of to
invalid locations (although this prerelease contains API links to the
8.1.0 docs on twistedmatrix.com, which aren't yet there :)

There are also a few very minor features and miscellaneous improvements.

You can get the prerelease tar.bz2 files from
http://twistedmatrix.com/users/radix/8.1.0pre1/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Mon Apr 21 03:52:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 21 Apr 2008 09:52:56 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>
References: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>
Message-ID: <480C47D8.7020006@evotex.ch>

Jean-Paul Calderone wrote:
> On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello everyone,
>>
>> I am re-posting these questions with a different title, since they 
>> have ventured away from the original question
>>
>> I have a question though, I was looking at the way all this works by 
>> using a debugger, and I noticed that in twisted.internet.abstract.py 
>> in registerProducer() there is the following :
>>
>> if not streaming:
>>   producer.resumeProducing()
>>
>> Why is this done only for the pull producer? Shouldn't it also be 
>> called for the push producer since to have the data sent one has to 
>> call either self.transport.write() or resumeProducing() anyways? If 
>> you look at :
>>
>> http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>>
>> it does :
>>
>> transport.registerProducer(self, 1)
>>       self.produce()
>
> So, this is a streaming producer.  It starts producing right away without
> having resumeProducing called on it.
>
>>
>> thus starting the writing process and in the pull producer :
>>
>> http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>>
>> it doesn't need to start the writing process explicitly since it's 
>> started when the producer is registered.
>
> This is a non-streaming producer.  It doesn't do anything until something
> calls resumeProducing on it.
>
>>
>> Oh, and also, since from what I see in the code the only difference 
>> with a push and pull producer is that the push producer is paused if 
>> the data being written/sent is very large (to let the reactor breath 
>> and process other things), if it isn't larger than the buffer it 
>> behaves like a pull producer, correct? If so, then why have both? Am 
>> I mixed up again?
>
> As you say, they behave differently when there is a large amount of data.
> However, this is more about the source of the data than where it ends up.
> For example, if you have a large string and you want to producer it to a
> transport, you probably want a pull producer, because there's no events
> which will signal that you can send some more of the string *except* for
> the reactor deciding that it is ready for some more.  
What exactly do you mean by :

"there's no events which will signal that you can send some more of the 
string *except* for
the reactor deciding that it is ready for some more"?

When I looked at Twisted's code, the difference that I saw was that if a 
push producer is used, and if the data to be sent is bigger than a 
certain length, it calls producer.pauseProducing()

> So that's how you
> should decide which of these you want to write - if the consumer is the
> only event source involved, as in the large string case, then you want a
> pull producer (streaming = False); 
How can the consumer be an event source? The producer is the one sending 
the data, maybe I don't get what you mean by "event source".
> if the producer itself is event-driven
> in its ability to provide data, then you want a push producer.
>
> Jean-Paul
I thought the push producer worked like this : if the data is too big, 
send part of it and pause the rest, let the reactor breath some, and 
repeat. I thought the pull producer was basically like if no producer 
was used, one has to take care of any data splitting and send small 
parts when the consumer is ready. Is this not correct?

Gabriel



From inhahe at gmail.com  Mon Apr 21 08:20:18 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 08:20:18 -0400
Subject: [Twisted-Python] question about twisted web2
Message-ID: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>

i may not understand all this very well, but,
if i remember correctly, http 1.1 supports multiple requests over the same
connection to speed things up.. but
http://twistedmatrix.com/projects/web/documentation/howto/web-overview.htmlleads
me to believe it closes the connection after each request.. but
twisted web2, otoh, is supposed to have full 1.1 support.. does this mean it
won't close the connection after each request?  if so, i'd like to use it
for that reason, but then, according to
http://twistedmatrix.com/trac/wiki/TwistedWeb2 web2 isn't very fast. i don't
know if their benchmarks take under consideration realistic conditions in
which multiple requests can be made over a single tcp connection.
so should i use web2, and if not, is there any way to do what i want using
twisted.web, and if not, what python web framework can i use that does do
what i want and is otherwise as fast as twisted web?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/f76d0c68/attachment.htm 

From exarkun at divmod.com  Mon Apr 21 10:41:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 10:41:19 -0400
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <480C47D8.7020006@evotex.ch>
Message-ID: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>

On Mon, 21 Apr 2008 09:52:56 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Jean-Paul Calderone wrote:
>>On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
> [snip]
>What exactly do you mean by :
>
>"there's no events which will signal that you can send some more of the 
>string *except* for
>the reactor deciding that it is ready for some more"?
>
>When I looked at Twisted's code, the difference that I saw was that if a 
>push producer is used, and if the data to be sent is bigger than a certain 
>length, it calls producer.pauseProducing()

This is true.  Let's back up for a moment, though.

A pull producer is one which only produces data when it is asked for data.
The ask-for-data API is resumeProducing.  This means that a consumer which
is given a pull producer must ask it for data repeatedly until there is
none left.  The consumer is free to do this in its own pace, and a typical
efficient way to do this is to ask for more data each time the application
buffer is empty.

A push producer produces data all the time, until it is asked to stop.  It
does this at whatever pace it wishes; it might produce a byte each second
or it might produce a chunk of bytes each time a user interacts with a UI
somehow or it might produce whatever it reads out of some socket whenever
it happens to do that.  The consumer is free to ask it to stop at any time
though.  The API for that is pauseProducing, and in this circumstance,
resumeProducing delivers the opposite message: it tells the producer that
it can go back to whatever it was doing.

Does it make sense why only the push producer case has a pauseProducing
call in it?

>>So that's how you
>>should decide which of these you want to write - if the consumer is the
>>only event source involved, as in the large string case, then you want a
>>pull producer (streaming = False);
>
>How can the consumer be an event source? The producer is the one sending the 
>data, maybe I don't get what you mean by "event source".

For example, if the consumer is a socket, then there are at least two events
which it can generate which are potentially interesting: application-level
buffer empty and application-level buffer full.  These are good indicators
that more data should be produced and that no more data should be produced
(for a while), respectively.

>>if the producer itself is event-driven
>>in its ability to provide data, then you want a push producer.
>>
>
>I thought the push producer worked like this : if the data is too big, send 
>part of it and pause the rest, let the reactor breath some, and repeat. I 
>thought the pull producer was basically like if no producer was used, one 
>has to take care of any data splitting and send small parts when the 
>consumer is ready. Is this not correct?

It's often the case that a producer doesn't have all of the data it is going
to produce when it is first registered with the consumer.  In these cases,
it is less a matter if splitting up the data and more a matter of knowing
whether to keep trying to gather more data to give to the consumer.  If the
consumer has indicated that it wants no more data (via pauseProducing), then
the producer can chill out for a while.  Only when the consumer issues the
resumeProducing call does the producer need to start getting data again.  For
TCP connections, this is a pretty good reflection of what goes on at a lower
level.  If you stop reading from a TCP socket, the remote side has to stop
sending shortly afterwards.  This is more efficient than letting an unbounded
amount of data pile up in memory.

If you _do_ already have all of the data that is going to be produced (that
is, in-memory and as a Python string or other byte buffer object which can
be used with socket.send), then the only reasons to use a producer are that
some object that you want to give the data to only supports the producer/
consumer API so you have no choice but to use a producer, or that you want
to know when the data has been cleared out of the application-level buffer
(not necessarily sent over the network, and certainly not necessarily
received by the peer, but at least no longer buffered in your userspace
process).  If neither of these apply, you may as well just write the one
string to the transport all at once.  Since you already had all the data
in memory, you already payed the resource allocation penalty, so there's
not really much lost by ignoring P/C.

Hope this helps,

Jean-Paul



From exarkun at divmod.com  Mon Apr 21 11:03:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 11:03:46 -0400
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: 0
Message-ID: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>

Hello all,

The first TSF sponsored Twisted sprint is done.  Here's a quick rundown of
some of the things that happened.

  * Glyph Lefkowitz made a huge dent in the current review queue, dealing
    with more than half of the outstanding tickets.

  * After some discussion about the value of a bugfix-only release vs a
    normal bugfix and feature enhancement release, Christopher Armstrong
    got the wheels rolling on 8.1.0 (which will be of the latter type).
    You probably already saw the pre1 announcement.  Give it a spin!

  * Paul Swartz continued to strive towards the goal of Twisted Conch
    being as soft and cuddly as a little bunny rabbit.

  * Ying Li worked on permission and ownership features for FilePath.

  * Jeff Mancuso came by for a while and talked about Twisted Conch
    performance (and did some benchmarks) and SFTP access control
    issues.

  * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
    an API to get arbitrary X509v3 extensions.

  * Itamar Shtull-Trauring helped out all around.

  * I finished fixing some reactor startup and shutdown issues introduced
    in 8.0.

We also discussed Twisted's backwards compatibility policy, guided
mostly by Jonathan Lange's email of the 18th to this list, with the
goal of creating an official document.

The next sprint is tentatively scheduled for May 18th at the Divmod office.

Jean-Paul



From nebpro at gmail.com  Mon Apr 21 11:07:05 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 11:07:05 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
Message-ID: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>

Hi,

I am having problem compiling twisted sample codes. It gives me "Import
Error" errors (i.e. ImportError: No module named web.client). I really
appreciate any suggestions. Thank you.

Below is the sample codes that I tried from the tutorial

*from twisted.web.client import getPage
from twisted.internet import reactor

def printContents (contents):
    '''
    This is the 'callback' function, added to the Deferred and called by
    it when the promised data is available
    '''

    print "The Deferred has called printContents with the following
contents:"
    print contents

    # Stop the Twisted event handling system -- this is usually handled
    # in higher level ways

    reactor.stop()

# call getPage, which returns immediately with a Deferred, promising to
# pass the page contents onto our callbacks when the contents are available
deferred = getPage ("http://twistedmatrix.com/")

# add a callback to the deferred -- request that it run printContents when
# the page content has been downloaded
deferred.addCallback (printContents)

reactor.run()*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/65234be4/attachment.htm 

From radix at twistedmatrix.com  Mon Apr 21 11:16:20 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Apr 2008 11:16:20 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
Message-ID: <60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> Hi,
>
> I am having problem compiling twisted sample codes. It gives me "Import
> Error" errors (i.e. ImportError: No module named web.client). I really
> appreciate any suggestions. Thank you.

How did you install Twisted? What platform are you running this on?



-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Mon Apr 21 12:06:58 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 21 Apr 2008 18:06:58 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>
References: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>
Message-ID: <480CBBA2.1020709@evotex.ch>

Jean-Paul Calderone wrote:
> On Mon, 21 Apr 2008 09:52:56 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Jean-Paul Calderone wrote:
>>> On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
>> [snip]
>> What exactly do you mean by :
>>
>> "there's no events which will signal that you can send some more of 
>> the string *except* for
>> the reactor deciding that it is ready for some more"?
>>
>> When I looked at Twisted's code, the difference that I saw was that 
>> if a push producer is used, and if the data to be sent is bigger than 
>> a certain length, it calls producer.pauseProducing()
>
> This is true.  Let's back up for a moment, though.
>
> A pull producer is one which only produces data when it is asked for 
> data.
> The ask-for-data API is resumeProducing.  This means that a consumer 
> which
> is given a pull producer must ask it for data repeatedly until there is
> none left.  The consumer is free to do this in its own pace, and a 
> typical
> efficient way to do this is to ask for more data each time the 
> application
> buffer is empty.
>
> A push producer produces data all the time, until it is asked to 
> stop.  It
> does this at whatever pace it wishes; it might produce a byte each second
> or it might produce a chunk of bytes each time a user interacts with a UI
> somehow or it might produce whatever it reads out of some socket whenever
> it happens to do that.  The consumer is free to ask it to stop at any 
> time
> though.  The API for that is pauseProducing, and in this circumstance,
> resumeProducing delivers the opposite message: it tells the producer that
> it can go back to whatever it was doing.
>
> Does it make sense why only the push producer case has a pauseProducing
> call in it?
yes
>
>>> So that's how you
>>> should decide which of these you want to write - if the consumer is the
>>> only event source involved, as in the large string case, then you 
>>> want a
>>> pull producer (streaming = False);
>>
>> How can the consumer be an event source? The producer is the one 
>> sending the data, maybe I don't get what you mean by "event source".
>
> For example, if the consumer is a socket, then there are at least two 
> events
> which it can generate which are potentially interesting: 
> application-level
> buffer empty and application-level buffer full.  These are good 
> indicators
> that more data should be produced and that no more data should be 
> produced
> (for a while), respectively.
>
>>> if the producer itself is event-driven
>>> in its ability to provide data, then you want a push producer.
>>>
>>
>> I thought the push producer worked like this : if the data is too 
>> big, send part of it and pause the rest, let the reactor breath some, 
>> and repeat. I thought the pull producer was basically like if no 
>> producer was used, one has to take care of any data splitting and 
>> send small parts when the consumer is ready. Is this not correct?
>
> It's often the case that a producer doesn't have all of the data it is 
> going
> to produce when it is first registered with the consumer.  In these 
> cases,
> it is less a matter if splitting up the data and more a matter of knowing
> whether to keep trying to gather more data to give to the consumer.  
> If the
> consumer has indicated that it wants no more data (via 
> pauseProducing), then
> the producer can chill out for a while.  Only when the consumer issues 
> the
> resumeProducing call does the producer need to start getting data 
> again.  For
> TCP connections, this is a pretty good reflection of what goes on at a 
> lower
> level.  If you stop reading from a TCP socket, the remote side has to 
> stop
> sending shortly afterwards.  This is more efficient than letting an 
> unbounded
> amount of data pile up in memory.
>
> If you _do_ already have all of the data that is going to be produced 
> (that
> is, in-memory and as a Python string or other byte buffer object which 
> can
> be used with socket.send), then the only reasons to use a producer are 
> that
> some object that you want to give the data to only supports the producer/
> consumer API so you have no choice but to use a producer, or that you 
> want
> to know when the data has been cleared out of the application-level 
> buffer
> (not necessarily sent over the network, and certainly not necessarily
> received by the peer, but at least no longer buffered in your userspace
> process).  If neither of these apply, you may as well just write the one
> string to the transport all at once.  Since you already had all the data
> in memory, you already payed the resource allocation penalty, so there's
> not really much lost by ignoring P/C.
>
> Hope this helps,
>
> Jean-Paul
>
Thank you Jean-Paul, yes it helps a lot.

In my application, I send xml strings through a server, some may have 
rather large data embedded in them, so the idea for using the 
producer/consumer paradigm was to not congest the server as it acts like 
a proxy if you wish. I though that if I did that, then other clients may 
send data through it while the producer pauses. The server and the 
clients are both using server factories (see 
http://twistedmatrix.com/pipermail/twisted-python/2008-February/016879.html), 
since the client-to-client communication isn't direct, the server needs 
to be able to connect to the end/destination client. To send data, I use 
single-use clients, like described in the twisted documentation. In this 
case, my producer was supposed to be the single-use client and the 
consumer the server factory's protocol instance's (whether it being the 
server or the clients), transport (tcp/ip).

I guess the problem is that like you said, I already have all the data 
in the source client and thus there is no need to use the p/c paradigm. 
I must ask though, when I do transfer large amounts of data, if I 
understood correctly the reactor is busy doing that, and thus no other 
clients can send data until it is done, correct? How must one correctly 
deal with this problem? What happens to the other clients' data that 
they try to send?

Thank you,
Gabriel



From ddwiggins at advpubtech.com  Mon Apr 21 13:10:24 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 21 Apr 2008 10:10:24 -0700
Subject: [Twisted-Python] Re: Howto: use Trial to unit test an XML-RPC server
In-Reply-To: <368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>
References: <fuat7s$eo2$1@ger.gmane.org>
	<368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>
Message-ID: <fuihq1$f9j$1@ger.gmane.org>

Drew Smathers wrote:
> One question: are you really not returning each Deferred from your
> test methods, or was this a typo in the above?

Ahhh!  Good catch; yes, I do return the deferreds -- I just forgot to 
copy the "return d" line to the example; thanks!

-- 
Don Dwiggins
Advanced Publishing Technology




From nebpro at gmail.com  Mon Apr 21 14:14:59 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:14:59 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
	<60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>
Message-ID: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>

I used the installer from the http://twistedmatrix.com/trac/., and I am
running on Windows XP platform.
On Mon, Apr 21, 2008 at 11:16 AM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> > Hi,
> >
> > I am having problem compiling twisted sample codes. It gives me "Import
> > Error" errors (i.e. ImportError: No module named web.client). I really
> > appreciate any suggestions. Thank you.
>
> How did you install Twisted? What platform are you running this on?
>
>
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/9bd8c15d/attachment.htm 

From exarkun at divmod.com  Mon Apr 21 14:22:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 14:22:11 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>
Message-ID: <20080421182211.6859.1153655145.divmod.quotient.33154@ohm>

On Mon, 21 Apr 2008 14:14:59 -0400, Ben <nebpro at gmail.com> wrote:
>I used the installer from the http://twistedmatrix.com/trac/., and I am
>running on Windows XP platform.

Which installer?  There's more than one.  If you used the Twisted Core
installer, then you don't have such things as twisted.web.  Try the full
Twisted installer instead, which includes all of Twisted instead of only
some of Twisted.  The subproject installers, such as the one for Twisted
Core, are only useful if you know exactly which subset of Twisted you're
using and have a low-storage environment, where you can't afford to have
all of Twisted.

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 21 14:34:49 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Apr 2008 14:34:49 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
Message-ID: <60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> Hi,
>
> I am having problem compiling twisted sample codes. It gives me "Import
> Error" errors (i.e. ImportError: No module named web.client). I really
> appreciate any suggestions. Thank you.

If it's "No module named web.client", it sounds a lot like you named a
file "twisted.py". That's a bad idea; it will conflict with the
toplevel "twisted" package. Is this what you did? If you did, make
sure you delete twisted.py and twisted.pyc.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From nebpro at gmail.com  Mon Apr 21 14:40:45 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:40:45 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <20080421182211.6859.1153655145.divmod.quotient.33154@ohm>
References: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>
	<20080421182211.6859.1153655145.divmod.quotient.33154@ohm>
Message-ID: <e5f41cb30804211140g20e7acdajc7e49e5f061b1c62@mail.gmail.com>

Here is the installer that i used: Twisted 8.0.1 for Python
2.5<http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted_NoDocs-8.0.1.win32-py2.5.exe>(for
Windows). I browse through the "C:\Python25\Lib\site-packages" folder
to make sure that the twisted library is installed. And they are. I can go
to "C:\Python25\Lib\site-packages\twisted\web" and find client.py file. It
seems that Python unable to find the path for importing the twisted module
when it is compiling. So I double check the PATH on the environment
variables to make sure the path is correctly in there (i.e. ; C:\Python25),
and it is set correctly there. So I am pretty confused. Any suggestions are
welcomed.

-Ben

On Mon, Apr 21, 2008 at 2:22 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Mon, 21 Apr 2008 14:14:59 -0400, Ben <nebpro at gmail.com> wrote:
>
> > I used the installer from the http://twistedmatrix.com/trac/., and I am
> > running on Windows XP platform.
> >
>
> Which installer?  There's more than one.  If you used the Twisted Core
> installer, then you don't have such things as twisted.web.  Try the full
> Twisted installer instead, which includes all of Twisted instead of only
> some of Twisted.  The subproject installers, such as the one for Twisted
> Core, are only useful if you know exactly which subset of Twisted you're
> using and have a low-storage environment, where you can't afford to have
> all of Twisted.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/488c0dba/attachment.htm 

From nebpro at gmail.com  Mon Apr 21 14:53:38 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:53:38 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
	<60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>
Message-ID: <e5f41cb30804211153v36a263ddi2bf8729b6f52dcc3@mail.gmail.com>

No. But that is what I thought too. I named my file something like
twisted_indie.py to make sure there is no conflict with names.

On Mon, Apr 21, 2008 at 2:34 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> > Hi,
> >
> > I am having problem compiling twisted sample codes. It gives me "Import
> > Error" errors (i.e. ImportError: No module named web.client). I really
> > appreciate any suggestions. Thank you.
>
> If it's "No module named web.client", it sounds a lot like you named a
> file "twisted.py". That's a bad idea; it will conflict with the
> toplevel "twisted" package. Is this what you did? If you did, make
> sure you delete twisted.py and twisted.pyc.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/1c08b533/attachment.htm 

From inhahe at gmail.com  Mon Apr 21 17:47:16 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 17:47:16 -0400
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
Message-ID: <da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>

i gather that twisted web is http 1.0, and http 1.0 doesn't support http
pipelining, so i assume twisted web doesn't support it
twisted web2 says it fully supports 1.1, and 1.1 servers are required to
support http pipelining, so i assume twisted web2 supports it
so with a client that supports pipelining, wouldn't twisted web2 be much
faster (for pages that have a lot of small images)?
also, does twisted web2 support pipelining responses or only requests?

On Mon, Apr 21, 2008 at 8:20 AM, inhahe <inhahe at gmail.com> wrote:

> i may not understand all this very well, but,
> if i remember correctly, http 1.1 supports multiple requests over the same
> connection to speed things up.. but
> http://twistedmatrix.com/projects/web/documentation/howto/web-overview.htmlleads me to believe it closes the connection after each request.. but
> twisted web2, otoh, is supposed to have full 1.1 support.. does this mean it
> won't close the connection after each request?  if so, i'd like to use it
> for that reason, but then, according to
> http://twistedmatrix.com/trac/wiki/TwistedWeb2 web2 isn't very fast. i
> don't know if their benchmarks take under consideration realistic conditions
> in which multiple requests can be made over a single tcp connection.
> so should i use web2, and if not, is there any way to do what i want using
> twisted.web, and if not, what python web framework can i use that does do
> what i want and is otherwise as fast as twisted web?
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/4eedc9a6/attachment.htm 

From maarten at treewalker.org  Mon Apr 21 20:25:15 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 22 Apr 2008 02:25:15 +0200
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
	<da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
Message-ID: <200804220225.20228.maarten@treewalker.org>

On Monday 21 April 2008, inhahe wrote:
> i gather that twisted web is http 1.0, and http 1.0 doesn't support http
> pipelining, so i assume twisted web doesn't support it

Actually, twisted.web does support some HTTP 1.1 features. Looking at 
twisted/web/http.py, I think pipelining is supported.

> twisted web2 says it fully supports 1.1, and 1.1 servers are required to
> support http pipelining, so i assume twisted web2 supports it
> so with a client that supports pipelining, wouldn't twisted web2 be much
> faster (for pages that have a lot of small images)?

In our setup, we use Apache to serve all static data. For dynamic data, 
Apache acts as a reverse proxy and forwards requests to twistd.

> also, does twisted web2 support pipelining responses or only requests?

As far as I know, pipelining means re-using the same TCP connection for 
multiple request/response cycles. If the requests are pipelined, there is 
only a single TCP socket open through which responses can be sent, so they 
must be pipelined as well.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080422/27cc1219/attachment.pgp 

From inhahe at gmail.com  Mon Apr 21 23:42:12 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 23:42:12 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
Message-ID: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>

What is the best (fastest) way to serve static files with Twisted?  Or would
using Apache or lighttpd for static files significantly speed it up (i don't
know how to do this, btw)?
Thx.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080421/d963ef1f/attachment.htm 

From duncan.mcgreggor at gmail.com  Tue Apr 22 00:52:48 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 21 Apr 2008 23:52:48 -0500
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
References: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
Message-ID: <1208839968.4882.326.camel@gondor>


On Mon, 2008-04-21 at 11:03 -0400, Jean-Paul Calderone wrote:
> Hello all,
> 
> The first TSF sponsored Twisted sprint is done.  Here's a quick rundown of
> some of the things that happened.
> 
>   * Glyph Lefkowitz made a huge dent in the current review queue, dealing
>     with more than half of the outstanding tickets.
> 
>   * After some discussion about the value of a bugfix-only release vs a
>     normal bugfix and feature enhancement release, Christopher Armstrong
>     got the wheels rolling on 8.1.0 (which will be of the latter type).
>     You probably already saw the pre1 announcement.  Give it a spin!
> 
>   * Paul Swartz continued to strive towards the goal of Twisted Conch
>     being as soft and cuddly as a little bunny rabbit.
> 
>   * Ying Li worked on permission and ownership features for FilePath.
> 
>   * Jeff Mancuso came by for a while and talked about Twisted Conch
>     performance (and did some benchmarks) and SFTP access control
>     issues.
> 
>   * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
>     an API to get arbitrary X509v3 extensions.
> 
>   * Itamar Shtull-Trauring helped out all around.
> 
>   * I finished fixing some reactor startup and shutdown issues introduced
>     in 8.0.
> 
> We also discussed Twisted's backwards compatibility policy, guided
> mostly by Jonathan Lange's email of the 18th to this list, with the
> goal of creating an official document.
> 
> The next sprint is tentatively scheduled for May 18th at the Divmod office.
> 
> Jean-Paul

JP,

Thanks for writing this up! And thanks to the Twisted folks who were
able to sprint, either virtually or in meatspace. I was off the nets
this weekend, so this was really great to read :-)

d




From mailing_lists at evotex.ch  Tue Apr 22 02:17:54 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 08:17:54 +0200
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
References: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
Message-ID: <480D8312.2060003@evotex.ch>

Jean-Paul Calderone wrote:
> Hello all,
>
> The first TSF sponsored Twisted sprint is done.  Here's a quick 
> rundown of
> some of the things that happened.
>
>  * Glyph Lefkowitz made a huge dent in the current review queue, dealing
>    with more than half of the outstanding tickets.
>
>  * After some discussion about the value of a bugfix-only release vs a
>    normal bugfix and feature enhancement release, Christopher Armstrong
>    got the wheels rolling on 8.1.0 (which will be of the latter type).
>    You probably already saw the pre1 announcement.  Give it a spin!
>
>  * Paul Swartz continued to strive towards the goal of Twisted Conch
>    being as soft and cuddly as a little bunny rabbit.
>
>  * Ying Li worked on permission and ownership features for FilePath.
>
>  * Jeff Mancuso came by for a while and talked about Twisted Conch
>    performance (and did some benchmarks) and SFTP access control
>    issues.
>
>  * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
>    an API to get arbitrary X509v3 extensions.
>
>  * Itamar Shtull-Trauring helped out all around.
>
>  * I finished fixing some reactor startup and shutdown issues introduced
>    in 8.0.
>
> We also discussed Twisted's backwards compatibility policy, guided
> mostly by Jonathan Lange's email of the 18th to this list, with the
> goal of creating an official document.
>
> The next sprint is tentatively scheduled for May 18th at the Divmod 
> office.
>
> Jean-Paul
Thanks to all of you for your commitment to great software and a great 
community!

Gabriel



From mailing_lists at evotex.ch  Tue Apr 22 05:02:19 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 11:02:19 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
Message-ID: <480DA99B.9090404@evotex.ch>

Hello,

I keep on getting stopProducing()  called on my push producer (yes, I'm 
going to try it anyways). From what I read, that means that the consumer 
died, correct? What can make the consumer die? My consumer is a TCP/IP 
transport and all my tests are done through the loopback interface, thus 
the network can't be down, any ideas?

Gabriel



From mailing_lists at evotex.ch  Tue Apr 22 05:42:32 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 11:42:32 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <480DA99B.9090404@evotex.ch>
References: <480DA99B.9090404@evotex.ch>
Message-ID: <480DB308.9080900@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I keep on getting stopProducing()  called on my push producer (yes, 
> I'm going to try it anyways). From what I read, that means that the 
> consumer died, correct? What can make the consumer die? My consumer is 
> a TCP/IP transport and all my tests are done through the loopback 
> interface, thus the network can't be down, any ideas?
>
> Gabriel
>
Is there a way to log the execution of twisted? I'm getting a connection 
loss and I don't know where it comes from and why. I'm not explicitly 
calling looseConnection.

Thanks



From mithrandi at mithrandi.net  Tue Apr 22 06:48:15 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 22 Apr 2008 12:48:15 +0200
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <200804220225.20228.maarten@treewalker.org>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
	<da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
	<200804220225.20228.maarten@treewalker.org>
Message-ID: <20080422104815.GA8550@mithrandi.net>

* Maarten ter Huurne <maarten at treewalker.org> [2008-04-22 02:25:15 +0200]:

> > also, does twisted web2 support pipelining responses or only requests?
> 
> As far as I know, pipelining means re-using the same TCP connection for 
> multiple request/response cycles.

Pipelining refers to sending another request before the previous
response has been received; connection reuse is a separate feature,
although obviously pipelining relies on connection reuse.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080422/faecff36/attachment.pgp 

From sipickles at hotmail.com  Tue Apr 22 09:11:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 14:11:02 +0100
Subject: [Twisted-Python] Location of remote errors with PB
Message-ID: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>

Hello,

my app uses twisted.pb to communicate across its parts.

Is there any way a caller can find out the whole traceback rather than 
just the description( eg "*global name 'true' is not defined*"?)

This is so I can have help debugging.

Thanks

Si


-- 
Linux Counter: User# 424693 






From drew.smathers at gmail.com  Tue Apr 22 10:28:42 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 22 Apr 2008 10:28:42 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
In-Reply-To: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
References: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
Message-ID: <368574aa0804220728r44e178f5qa95fe7b6e18aea97@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:42 PM, inhahe <inhahe at gmail.com> wrote:
> What is the best (fastest) way to serve static files with Twisted?

twisted.web.static.StaticFile

> Or would using Apache or lighttpd for static files significantly speed it up (i don't
> know how to do this, btw)?
> Thx.

Both apache and lighttpd, of course, are going to beet Twisted in
terms of static file-serving speed.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From andrewfr_ice at yahoo.com  Tue Apr 22 10:40:22 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 22 Apr 2008 07:40:22 -0700 (PDT)
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <E1JoIHn-0002ju-S3@cube.twistedmatrix.com>
Message-ID: <743985.24485.qm@web34205.mail.mud.yahoo.com>

Hi Gabriel:

>Is there a way to log the execution of twisted? I'm
>getting a connection loss and I don't know where it
>comes from and why. I'm not explicitly calling
>looseConnection.

I think the easiest way to do logging is

from   twisted.python                              
import log

...

log.startLogging(a file descriptor - i.e., sys.stdout)

Twisted will start emitting log messages. You can use
log.msg() for additional messages.

I also found using a debugger is a slow but good way
to trace through what Twisted is doing.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From phil at bubblehouse.org  Tue Apr 22 10:51:18 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 22 Apr 2008 10:51:18 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
In-Reply-To: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
References: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
Message-ID: <52799C28-82FF-4D96-967C-B90861A740D2@bubblehouse.org>


On Apr 21, 2008, at 11:42 PM, inhahe wrote:
> What is the best (fastest) way to serve static files with Twisted?   
> Or would using Apache or lighttpd for static files significantly  
> speed it up (i don't know how to do this, btw)?
> Thx.

If you want to serve your static files with apache, you'll want to  
look into the ReverseProxy directive. Then you can just define Alias  
directives that override your various asset URLs.

I like having my Twisted web app setup so it can serve static files,  
using the same URLs I have aliased in Apache. Then I can omit Apache  
for development, but use it for production without changing any paths.

-phil



From mailing_lists at evotex.ch  Tue Apr 22 10:55:16 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 16:55:16 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <743985.24485.qm@web34205.mail.mud.yahoo.com>
References: <743985.24485.qm@web34205.mail.mud.yahoo.com>
Message-ID: <480DFC54.4010702@evotex.ch>

Andrew Francis wrote:
> Hi Gabriel:
>
>   
>> Is there a way to log the execution of twisted? I'm
>> getting a connection loss and I don't know where it
>> comes from and why. I'm not explicitly calling
>> looseConnection.
>>     
>
> I think the easiest way to do logging is
>
> from   twisted.python                              
> import log
>
> ...
>
> log.startLogging(a file descriptor - i.e., sys.stdout)
>
> Twisted will start emitting log messages. You can use
> log.msg() for additional messages.
>
> I also found using a debugger is a slow but good way
> to trace through what Twisted is doing.
>
> Cheers,
> Andrew
>
>
>   
Thank you Andrew!

Gabriel



From yqiang at gmail.com  Tue Apr 22 11:08:08 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Tue, 22 Apr 2008 08:08:08 -0700
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
Message-ID: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>

When you create your server factory, you can optionally pass in a
parameter called unsafeTracebacks=True. This will give the client the
whole traceback I believe.

    client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)

I think it's called unsafe because it can potentially reveal quite a
bit information about your server, someone correct me if I'm wrong
though :-)

Cheers,
Yi

http://yiqiang.org	

On Tue, Apr 22, 2008 at 6:11 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hello,
>
>  my app uses twisted.pb to communicate across its parts.
>
>  Is there any way a caller can find out the whole traceback rather than just
> the description( eg "*global name 'true' is not defined*"?)
>
>  This is so I can have help debugging.
>
>  Thanks
>
>  Si
>
>
>  --
>  Linux Counter: User# 424693
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From sipickles at hotmail.com  Tue Apr 22 13:48:43 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 18:48:43 +0100
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
	<3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
Message-ID: <BAY114-DAV29E1FE64EEE87DC7483CABEE00@phx.gbl>

Yi Qiang wrote:
> When you create your server factory, you can optionally pass in a
> parameter called unsafeTracebacks=True. This will give the client the
> whole traceback I believe.
>
>     client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)
>
>
>   
Thanks Yi, I hadn't clocked that.

After it ran with PBServerFactory, I checked the docs for 
PBClientFactory which claim to have a similar parameter for __init__

So I did this with my inherited class:

class pbFactory(pb.PBClientFactory):
    def __init__(self, name, signOn):
        self.name = name
        self.DoSignOn = signOn
        pb.PBClientFactory.__init__(self, unsafeTracebacks = True)

But got this:

    pb.PBClientFactory.__init__(self, unsafeTracebacks = True)
exceptions.TypeError: __init__() got an unexpected keyword argument 
'unsafeTracebacks'

I guess I should post a ticket about this?

First time for everything!

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Tue Apr 22 13:58:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 22 Apr 2008 13:58:21 -0400
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <BAY114-DAV29E1FE64EEE87DC7483CABEE00@phx.gbl>
Message-ID: <20080422175821.6859.133687420.divmod.quotient.33620@ohm>

On Tue, 22 Apr 2008 18:48:43 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
> [snip]
>
>But got this:
>
>    pb.PBClientFactory.__init__(self, unsafeTracebacks = True)
>exceptions.TypeError: __init__() got an unexpected keyword argument 
>'unsafeTracebacks'
>
>I guess I should post a ticket about this?
>
>First time for everything!

Are you using Twisted 2.5?  unsafeTracebacks wasn't a parameter to
PBClientFactory.__init__ in 2.5, though you can still set it as an
attribute on an instance to achieve that effect.  Twisted 8.0 adds
that parameter to __init__, and the API documentation currently on
the website is for Twisted 8.0.

Jean-Paul



From sipickles at hotmail.com  Tue Apr 22 14:08:13 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 19:08:13 +0100
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
Message-ID: <BAY114-DAV2EA04B5FD8BE631DE4BF8BEE00@phx.gbl>

Hi,

Out of curiosity, are there plans to update the Ubuntu Repositories with 
v8? It is still at 2.5.0

I was having trouble building the latest version since Hardy is missing 
the python-dev package at present.

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Tue Apr 22 14:26:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 22 Apr 2008 14:26:06 -0400
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <BAY114-DAV2EA04B5FD8BE631DE4BF8BEE00@phx.gbl>
Message-ID: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>

On Tue, 22 Apr 2008 19:08:13 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>Out of curiosity, are there plans to update the Ubuntu Repositories with v8? 
>It is still at 2.5.0
>
>I was having trouble building the latest version since Hardy is missing the 
>python-dev package at present.
>

We don't build the Debian/Ubuntu packages for Twisted.  You probably need
to ask the Debian maintainer.

Jean-Paul



From mailing_lists at evotex.ch  Tue Apr 22 15:07:39 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 21:07:39 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
Message-ID: <480E377B.9080903@evotex.ch>

Hello,

I have been trying to use the producer/consumer paradigm to transfer 
large strings. I've been having trouble because I have strange things 
going on, but I now suspect it isn't the P/C that's not working, because 
it works fine with smaller strings than the ones I'm having trouble 
with, so I suspect the problem comes from elsewhere. What happens is it 
starts off fine, but then the destination at some point only gets part 
of the string but the source has already sent everything, closed it's 
transport and called stopProducing(). Could there be some internal 
buffering problem, like I'm sending too much data at too high of a 
throughput, or maybe something like some sort of max time a socket can 
stay open or something? If I tell it to split the string up into smaller 
parts, it doesn't change anything, if I make the string smaller, 
whatever the size of each chunk, it transfers fine.

Thanks,
Gabriel



From george at ringdevelopment.com  Tue Apr 22 16:24:25 2008
From: george at ringdevelopment.com (George Pauly)
Date: Tue, 22 Apr 2008 16:24:25 -0400
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
	<3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
Message-ID: <1208895865.27701.48.camel@localhost.localdomain>

On Tue, 2008-04-22 at 08:08 -0700, Yi Qiang wrote:
> When you create your server factory, you can optionally pass in a
> parameter called unsafeTracebacks=True. This will give the client the
> whole traceback I believe.
> 
>     client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)
> 
> I think it's called unsafe because it can potentially reveal quite a
> bit information about your server, someone correct me if I'm wrong
> though :-)
> 
> Cheers,
> Yi
> 
> http://yiqiang.org	
> 
> On Tue, Apr 22, 2008 at 6:11 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> > Hello,
> >
> >  my app uses twisted.pb to communicate across its parts.
> >
> >  Is there any way a caller can find out the whole traceback rather than just
> > the description( eg "*global name 'true' is not defined*"?)
> >
> >  This is so I can have help debugging.
> >
> >  Thanks
> >
> >  Si
> >
> >
> >  --
> >  Linux Counter: User# 424693
> >
> >
> >
> >  _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From hoganxian at gmail.com  Tue Apr 22 19:32:14 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Wed, 23 Apr 2008 07:32:14 +0800
Subject: [Twisted-Python] Big/Little-endian problem
Message-ID: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>

Hi All,

I am newbie to Twisted.

In Twisted, do the user need to take care of the big/little-endian issues?

For example, I receive a buffer via UDP which actually represents a unsinged
int value. So, how can i convert this buffer[0:1] to unsigned int ?

Thanks,
Xian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080423/8184cdab/attachment.htm 

From radix at twistedmatrix.com  Tue Apr 22 19:41:08 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 22 Apr 2008 19:41:08 -0400
Subject: [Twisted-Python] Big/Little-endian problem
In-Reply-To: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
References: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
Message-ID: <60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>

On Tue, Apr 22, 2008 at 7:32 PM, Xian Chen <hoganxian at gmail.com> wrote:
> In Twisted, do the user need to take care of the big/little-endian issues?

The basic Twisted protocol system is purely in terms of bytes,
represented by the Python 'str' type.

> For example, I receive a buffer via UDP which actually represents a unsinged
> int value. So, how can i convert this buffer[0:1] to unsigned int ?

Check out the 'struct' Python module,
http://docs.python.org/lib/module-struct.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From hoganxian at gmail.com  Tue Apr 22 19:57:17 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Wed, 23 Apr 2008 07:57:17 +0800
Subject: [Twisted-Python] Big/Little-endian problem
In-Reply-To: <60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>
References: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
	<60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>
Message-ID: <a2dd20fc0804221657s52fe1265k537dde8f2a740809@mail.gmail.com>

Thanks~~

On Wed, Apr 23, 2008 at 7:41 AM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Tue, Apr 22, 2008 at 7:32 PM, Xian Chen <hoganxian at gmail.com> wrote:
> > In Twisted, do the user need to take care of the big/little-endian
> issues?
>
> The basic Twisted protocol system is purely in terms of bytes,
> represented by the Python 'str' type.
>
> > For example, I receive a buffer via UDP which actually represents a
> unsinged
> > int value. So, how can i convert this buffer[0:1] to unsigned int ?
>
> Check out the 'struct' Python module,
> http://docs.python.org/lib/module-struct.html
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080423/9ff78d04/attachment.htm 

From kim at hawtin.net.au  Wed Apr 23 02:48:49 2008
From: kim at hawtin.net.au (Kim Hawtin)
Date: Wed, 23 Apr 2008 16:18:49 +0930
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>
References: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>
Message-ID: <480EDBD1.6040904@hawtin.net.au>

Jean-Paul Calderone wrote:
> On Tue, 22 Apr 2008 19:08:13 +0100, Simon Pickles
> <sipickles at hotmail.com> wrote:
>> Out of curiosity, are there plans to update the Ubuntu Repositories
>> with v8? It is still at 2.5.0
>>
>> I was having trouble building the latest version since Hardy is
>> missing the python-dev package at present.
> 
> We don't build the Debian/Ubuntu packages for Twisted.  You probably need
> to ask the Debian maintainer.

Perhaps the easiest way to find these folks is to check the Maintainer and
Original-Maintainer fields;

$ apt-cache search twisted
python-twisted - Event-based framework for internet applications (transitional
package)
python-twisted-bin - Event-based framework for internet applications
...
...

$ apt-cache show python-twisted
Package: python-twisted
Priority: extra
Section: python
Installed-Size: 60
Maintainer: Ubuntu Core Developers <ubuntu-devel-discuss at lists.ubuntu.com>
Original-Maintainer: Matthias Klose <doko at debian.org>
Architecture: all
Source: twisted
Version: 2.5.0-2build1
Depends: python-twisted-core (>= 2.5), python-twisted-conch (>= 1:0.8),
python-twisted-mail (>= 0.4), python-twisted-lore (>= 0.2),
python-twisted-names (>= 0.4), python-twisted-news (>= 0.3),
python-twisted-runner (>= 0.2), python-twisted-web (>= 0.7),
python-twisted-words (>= 0.5)
Filename: pool/main/t/twisted/python-twisted_2.5.0-2build1_all.deb
Size: 8958
MD5sum: e97b408484713fc1692b623824f61117
SHA1: 4f329a3c9bd020044ca64bb7d0b5f5fbe8ed34b9
SHA256: d7bb08cba2978d4aafea6a0822b9d7b7abcaf74ce6cdf011b54d34d52f322bac
Description: Event-based framework for internet applications (transitional
package)
 This is a transitional package that depends on the twisted core library and
 all the libraries split out to separate packages starting with Twisted-2.0.1.
Python-Version: all
Bugs: mailto:ubuntu-users at lists.ubuntu.com
Origin: Ubuntu

regards,

Kim



From mailing_lists at evotex.ch  Wed Apr 23 03:23:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 09:23:01 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480E377B.9080903@evotex.ch>
References: <480E377B.9080903@evotex.ch>
Message-ID: <480EE3D5.8060101@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I have been trying to use the producer/consumer paradigm to transfer 
> large strings. I've been having trouble because I have strange things 
> going on, but I now suspect it isn't the P/C that's not working, 
> because it works fine with smaller strings than the ones I'm having 
> trouble with, so I suspect the problem comes from elsewhere. What 
> happens is it starts off fine, but then the destination at some point 
> only gets part of the string but the source has already sent 
> everything, closed it's transport and called stopProducing(). Could 
> there be some internal buffering problem, like I'm sending too much 
> data at too high of a throughput, or maybe something like some sort of 
> max time a socket can stay open or something? If I tell it to split 
> the string up into smaller parts, it doesn't change anything, if I 
> make the string smaller, whatever the size of each chunk, it transfers 
> fine.
>
> Thanks,
> Gabriel
>
I removed the P/C code and used the previous version and the problem 
persists, if I send a XML msg (very small XML part) with a data payload 
containing a string generated like this :

    initialMsg = "".join([str(x) for x in range(5000)])


which is 10374 bytes of data (including the XML), this makes me suspect 
that there is maybe some sort of buffer or something that is full and 
doesn't have the time to empty and twisted stops working or something. 
I'm using the 2.5 version since Ubuntu hasn't upgraded (and apparently 
won't upgrade until the lenny) their version yet and I can't get it to 
compile from source (yes, I installed python-dev and build-essentials), 
so maybe it's a problem only to this version. Does anyone have an Idea 
of what the problem is? I'm using the following code to send messages, I 
don't think that's the problem but you never know :

    def sendMessage(address, port, message, needAnswer=False):

        d = defer.Deferred() if needAnswer else None
       
        class MessageSender(Protocol):

            def sendMessage(self, msg):
                if domish.IElement.providedBy(msg):
                    msg = msg.toXml()
        
                if isinstance(msg, unicode):
                    msg = msg.encode('utf-8')
                   
                self.transport.write(msg)
               
            def dataReceived(self, data):
                d.callback(data)
           
        def gotProtocol(proto):
            proto.sendMessage(message)
            if(not needAnswer):
                proto.transport.loseConnection()

        c = ClientCreator(reactor, MessageSender)
        c.connectTCP(address, port).addCallback(gotProtocol)
        return d

   
Gabriel





From mailing_lists at evotex.ch  Wed Apr 23 04:41:29 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 10:41:29 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EE3D5.8060101@evotex.ch>
References: <480E377B.9080903@evotex.ch> <480EE3D5.8060101@evotex.ch>
Message-ID: <480EF639.3010008@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> I have been trying to use the producer/consumer paradigm to transfer 
>> large strings. I've been having trouble because I have strange things 
>> going on, but I now suspect it isn't the P/C that's not working, 
>> because it works fine with smaller strings than the ones I'm having 
>> trouble with, so I suspect the problem comes from elsewhere. What 
>> happens is it starts off fine, but then the destination at some point 
>> only gets part of the string but the source has already sent 
>> everything, closed it's transport and called stopProducing(). Could 
>> there be some internal buffering problem, like I'm sending too much 
>> data at too high of a throughput, or maybe something like some sort 
>> of max time a socket can stay open or something? If I tell it to 
>> split the string up into smaller parts, it doesn't change anything, 
>> if I make the string smaller, whatever the size of each chunk, it 
>> transfers fine.
>>
>> Thanks,
>> Gabriel
>>
> I removed the P/C code and used the previous version and the problem 
> persists, if I send a XML msg (very small XML part) with a data 
> payload containing a string generated like this :
>
>    initialMsg = "".join([str(x) for x in range(5000)])
>
>
> which is 10374 bytes of data (including the XML), this makes me 
> suspect that there is maybe some sort of buffer or something that is 
> full and doesn't have the time to empty and twisted stops working or 
> something. I'm using the 2.5 version since Ubuntu hasn't upgraded (and 
> apparently won't upgrade until the lenny) their version yet and I 
> can't get it to compile from source (yes, I installed python-dev and 
> build-essentials), so maybe it's a problem only to this version. Does 
> anyone have an Idea of what the problem is? I'm using the following 
> code to send messages, I don't think that's the problem but you never 
> know :
>
>    def sendMessage(address, port, message, needAnswer=False):
>
>        d = defer.Deferred() if needAnswer else None
>              class MessageSender(Protocol):
>
>            def sendMessage(self, msg):
>                if domish.IElement.providedBy(msg):
>                    msg = msg.toXml()
>                       if isinstance(msg, unicode):
>                    msg = msg.encode('utf-8')
>                                  self.transport.write(msg)
>                          def dataReceived(self, data):
>                d.callback(data)
>                  def gotProtocol(proto):
>            proto.sendMessage(message)
>            if(not needAnswer):
>                proto.transport.loseConnection()
>
>        c = ClientCreator(reactor, MessageSender)
>        c.connectTCP(address, port).addCallback(gotProtocol)
>        return d
>
>   Gabriel
>
>
Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up 
to 16k, after that it splits the message up, thus this would explain the 
lockup, since the app expects a whole XML message and can't process the 
second part correctly. So if I understand it correctly, even when I use 
the P/C paradigm, it waits until the buffer is full before sending the 
message, so when I get the message on the other side, I only get part of 
it, the other half is a new message/data arrival, and thus like I said 
above, the XML is not correct.

Does anyone have an idea of how to solve this?

Thanks,
Gabriel



From chris.yan at saybot.com  Wed Apr 23 06:20:59 2008
From: chris.yan at saybot.com (Chris)
Date: Wed, 23 Apr 2008 18:20:59 +0800
Subject: [Twisted-Python] about using twisted to write a RT server.
Message-ID: <480F0D8B.7070109@saybot.com>

Hi everyone,
I want to write a server,it works just like this:
1.client will connect to the server,maybe with some auth information.
2.the server verify the client,if it's ok,accept the connection.
3.the client starts to sent some binary data to server buffer by buffer
,the server will use it to calculate in real time.
4.when all the data is sent,the client will tell the server no data any
more.
5.the server gets a result from the data,and sends the result to the
client(the client is ASCII code)
6.server shuts down the connection.

first,I want to know which protocol I should use?the LineReceiver is ok
for this?

second,I know the LineReceiver protocol can switch between line mode and
row mode,I think I will use line mode to send the control command,and
use raw mode to sent the data,but how the client can inform the server
which mode should use?because sometimes the data which is received in
raw mode is exactly a legal command,but it is just only a part of the data.

third,I don't know very much about how to send the binary data,I heard I
should use struct modul,is it right?

any hint is helpful,please just give me a direction,I hope my question
will not take too much time to answer,thanks a lot.

Regards
Chris




From exarkun at divmod.com  Wed Apr 23 06:26:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 06:26:27 -0400
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EF639.3010008@evotex.ch>
Message-ID: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>

On Wed, 23 Apr 2008 10:41:29 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up to 
>16k, after that it splits the message up, thus this would explain the 
>lockup, since the app expects a whole XML message and can't process the 
>second part correctly. So if I understand it correctly, even when I use the 
>P/C paradigm, it waits until the buffer is full before sending the message, 
>so when I get the message on the other side, I only get part of it, the 
>other half is a new message/data arrival, and thus like I said above, the 
>XML is not correct.
>
>Does anyone have an idea of how to solve this?

This can't be solved.  From the way you describe it, the software on the
receiving end is simply broken.  TCP provides no guarantees about how much
data will be delivered to the recipient at a time, regardless of how much
is sent at a time.  Every participant along the delivery path between the
sender and the recipient is allowed to break packets into smaller pieces
or coalesce packets into larger pieces.  The recipient *must* be able to
handle incomplete messages by waiting for more bytes.  It must also be able
to handle packets which contain bytes from more than one message.

There are a number of ways to address this.  Almost all of them involve
changing the software running on the peer you're sending messages to and
the protocol the two programs are using to talk to each other.  For
example, you can send a length prefix before each message allowing the
recipient to buffer up the correct number of bytes before trying to deal
with them.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 07:11:21 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 13:11:21 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>
References: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>
Message-ID: <480F1959.2060003@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 10:41:29 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send 
>> up to 16k, after that it splits the message up, thus this would 
>> explain the lockup, since the app expects a whole XML message and 
>> can't process the second part correctly. So if I understand it 
>> correctly, even when I use the P/C paradigm, it waits until the 
>> buffer is full before sending the message, so when I get the message 
>> on the other side, I only get part of it, the other half is a new 
>> message/data arrival, and thus like I said above, the XML is not 
>> correct.
>>
>> Does anyone have an idea of how to solve this?
>
> This can't be solved.  From the way you describe it, the software on the
> receiving end is simply broken.  TCP provides no guarantees about how 
> much
> data will be delivered to the recipient at a time, regardless of how much
> is sent at a time.  Every participant along the delivery path between the
> sender and the recipient is allowed to break packets into smaller pieces
> or coalesce packets into larger pieces.  The recipient *must* be able to
> handle incomplete messages by waiting for more bytes.  It must also be 
> able
> to handle packets which contain bytes from more than one message.
>
> There are a number of ways to address this.  Almost all of them involve
> changing the software running on the peer you're sending messages to and
> the protocol the two programs are using to talk to each other.  For
> example, you can send a length prefix before each message allowing the
> recipient to buffer up the correct number of bytes before trying to deal
> with them.
>
> Jean-Paul
>
Thank you Jean-Paul, I'll do something like that then and fix the peer, 
I didn't realize that and thought I could get the message as a whole 
somehow. At lease I know my P/C is working :-)

Gabriel



From roland.hedberg at adm.umu.se  Wed Apr 23 07:50:27 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 23 Apr 2008 13:50:27 +0200
Subject: [Twisted-Python] Re: therve changed u'Changes to TwistedNames to
 make it support NAPTR records'
In-Reply-To: <E1JoaiB-0002yw-9S@cube.twistedmatrix.com>
References: <E1JoaiB-0002yw-9S@cube.twistedmatrix.com>
Message-ID: <480F2283.2010702@adm.umu.se>

trac at twistedmatrix.com wrote:
> Ticket u'Changes to TwistedNames to make it support NAPTR records'
> changed by therve <therve at free.fr>:
> 
> First, thanks a lot for your contribution. I'm sorry we lost some
> much time handling it. I think it's already in pretty good shape, but
> it would need more documentation and tests to land in trunk. Are you
> willing to help on these topics? 

Could do that!

What would the process be ?

-- Roland



From mailing_lists at evotex.ch  Wed Apr 23 09:31:08 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 15:31:08 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
Message-ID: <480F3A1C.2020403@evotex.ch>

Hello,

I was looking at pcp.py and I noticed this :

    def resumeProducing(self):
        self.paused = False
        if self._buffer:
            data = ''.join(self._buffer)
            bytesSent = self._writeSomeData(data)
            if bytesSent < len(data):
                unsent = data[bytesSent:]
                assert not self.iAmStreaming, (
                    "Streaming producer did not write all its data.")
                self._buffer[:] = [unsent]
            else:
                self._buffer[:] = []
        else:
            bytesSent = 0
...


in the ProducerConsumerProxy class, self._writeSomeData(data) returns 
the length of what was written, but in the test right afterwards 
bytesSent is compared to len(data), but they both have the same value, 
shouldn't it be "if bytesSent < len(self._buffer):" instead?

Gabriel



From maarten at treewalker.org  Wed Apr 23 10:02:37 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 23 Apr 2008 16:02:37 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EF639.3010008@evotex.ch>
References: <480E377B.9080903@evotex.ch> <480EE3D5.8060101@evotex.ch>
	<480EF639.3010008@evotex.ch>
Message-ID: <200804231602.43214.maarten@treewalker.org>

On Wednesday 23 April 2008, Gabriel Rossetti wrote:

> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up
> to 16k, after that it splits the message up, thus this would explain the
> lockup, since the app expects a whole XML message and can't process the
> second part correctly.

If you use an event-based XML parser (like something that implements SAX), 
you can simply feed it the bytes as they come in from the network. The XML 
tag nesting will tell you when the entire message has been received, which 
is when you receive the "close tag" callback for the root tag.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080423/b85b53be/attachment.pgp 

From exarkun at divmod.com  Wed Apr 23 10:29:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 10:29:57 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F3A1C.2020403@evotex.ch>
Message-ID: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>

On Wed, 23 Apr 2008 15:31:08 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I was looking at pcp.py and I noticed this :
>
>    def resumeProducing(self):
>        self.paused = False
>        if self._buffer:
>            data = ''.join(self._buffer)
>            bytesSent = self._writeSomeData(data)
>            if bytesSent < len(data):
>                unsent = data[bytesSent:]
>                assert not self.iAmStreaming, (
>                    "Streaming producer did not write all its data.")
>                self._buffer[:] = [unsent]
>            else:
>                self._buffer[:] = []
>        else:
>            bytesSent = 0
>...
>
>
>in the ProducerConsumerProxy class, self._writeSomeData(data) returns the 
>length of what was written, but in the test right afterwards bytesSent is 
>compared to len(data), but they both have the same value, shouldn't it be 
>"if bytesSent < len(self._buffer):" instead?

`self._buffer? is a list of strings (hence the join call to create `data?)
so comparing the number of bytes sent to its length wouldn't make sense.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 10:48:26 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 16:48:26 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>
References: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>
Message-ID: <480F4C3A.7000002@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 15:31:08 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello,
>>
>> I was looking at pcp.py and I noticed this :
>>
>>    def resumeProducing(self):
>>        self.paused = False
>>        if self._buffer:
>>            data = ''.join(self._buffer)
>>            bytesSent = self._writeSomeData(data)
>>            if bytesSent < len(data):
>>                unsent = data[bytesSent:]
>>                assert not self.iAmStreaming, (
>>                    "Streaming producer did not write all its data.")
>>                self._buffer[:] = [unsent]
>>            else:
>>                self._buffer[:] = []
>>        else:
>>            bytesSent = 0
>> ...
>>
>>
>> in the ProducerConsumerProxy class, self._writeSomeData(data) returns 
>> the length of what was written, but in the test right afterwards 
>> bytesSent is compared to len(data), but they both have the same 
>> value, shouldn't it be "if bytesSent < len(self._buffer):" instead?
>
> `self._buffer? is a list of strings (hence the join call to create 
> `data?)
> so comparing the number of bytes sent to its length wouldn't make sense.
>
> Jean-Paul
>
Ok, yes, true, but there is still the fact that bytesSent == len(data) 
and thus the test will never be true, or did I miss something? From my 
tests self.transport.write(data) doesn't modify the data, and so it 
still has the same size as it had before being sent.

Gabriel



From exarkun at divmod.com  Wed Apr 23 11:07:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 11:07:03 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F4C3A.7000002@evotex.ch>
Message-ID: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>

On Wed, 23 Apr 2008 16:48:26 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Jean-Paul Calderone wrote:
> [snip]
>>
>>`self._buffer? is a list of strings (hence the join call to create `data?)
>>so comparing the number of bytes sent to its length wouldn't make sense.
>>
>>Jean-Paul
>Ok, yes, true, but there is still the fact that bytesSent == len(data) and 
>thus the test will never be true, or did I miss something? From my tests 
>self.transport.write(data) doesn't modify the data, and so it still has the 
>same size as it had before being sent.

If bytesSent == len(data), then the else case is taken and the buffer is
empty.  I'm not really sure what you're getting at.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 11:30:17 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 17:30:17 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>
References: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>
Message-ID: <480F5609.1090406@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 16:48:26 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Jean-Paul Calderone wrote:
>> [snip]
>>>
>>> `self._buffer? is a list of strings (hence the join call to create 
>>> `data?)
>>> so comparing the number of bytes sent to its length wouldn't make 
>>> sense.
>>>
>>> Jean-Paul
>> Ok, yes, true, but there is still the fact that bytesSent == 
>> len(data) and thus the test will never be true, or did I miss 
>> something? From my tests self.transport.write(data) doesn't modify 
>> the data, and so it still has the same size as it had before being sent.
>
> If bytesSent == len(data), then the else case is taken and the buffer is
> empty.  I'm not really sure what you're getting at.
>
> Jean-Paul
>
Ok, I must be way off, because as I see it bytesSent < len(data) is 
never true.

Gabriel



From exarkun at divmod.com  Wed Apr 23 11:59:54 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 11:59:54 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F5609.1090406@evotex.ch>
Message-ID: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>

On Wed, 23 Apr 2008 17:30:17 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>>
>>If bytesSent == len(data), then the else case is taken and the buffer is
>>empty.  I'm not really sure what you're getting at.
>>
>>Jean-Paul
>Ok, I must be way off, because as I see it bytesSent < len(data) is never 
>true.

Ah.  Yes, you're right.  I'm not sure why this code is written this way.  It's
pretty old and I haven't used it much myself.  I don't know if this means there
is a bug or not.  If you think there is one, the next step is to write a unit
test. :)

Jean-Paul



From mailing_lists at evotex.ch  Thu Apr 24 02:25:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 24 Apr 2008 08:25:35 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>
References: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>
Message-ID: <481027DF.6060005@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 17:30:17 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>>>
>>> If bytesSent == len(data), then the else case is taken and the 
>>> buffer is
>>> empty.  I'm not really sure what you're getting at.
>>>
>>> Jean-Paul
>> Ok, I must be way off, because as I see it bytesSent < len(data) is 
>> never true.
>
> Ah.  Yes, you're right.  I'm not sure why this code is written this 
> way.  It's
> pretty old and I haven't used it much myself.  I don't know if this 
> means there
> is a bug or not.  If you think there is one, the next step is to write 
> a unit
> test. :)
>
> Jean-Paul
Ok, I'll do that as soon as possible :-)

Gabriel



From inhahe at gmail.com  Thu Apr 24 04:33:37 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:33:37 -0400
Subject: [Twisted-Python] pipelining with FireFox and twisted.web2
Message-ID: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>

it wasn't easy to find, but i finally found something that states directly
that Twisted
http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080424/85d1292c/attachment.htm 

From inhahe at gmail.com  Thu Apr 24 04:46:09 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:46:09 -0400
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
Message-ID: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>

It took some searching, but I found something that states directly that
Twisted doesn't support pipelining (
http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html-
". Twisted doesn't support HTTP/1.1 pipelining and neither does
urllib.")
I think I read elsewhere that web2 does support pipelining, but I'm not sure
if FireFox is using pipelining with twisted.web2; it uses heuristics to
determine whether to use pipelining or not (provided you enabled pipelining)
based on the server type.  Wikipedia says most servers support pipelining so
I assume Apache does, so I was thinking I could make web2 pose as an Apache
server by doing setHeader("Server", "Apache/2.2.8(Unix)"), but I get this
error..

            ctx.setHeader("Server", "Apache/2.2.8(Unix)")
        exceptions.AttributeError: 'Request' object has no attribute
'setHeader'

so how do I set a header using web2?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080424/7feaedb3/attachment.htm 

From inhahe at gmail.com  Thu Apr 24 04:47:05 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:47:05 -0400
Subject: [Twisted-Python] Re: pipelining with FireFox and twisted.web2
In-Reply-To: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>
References: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>
Message-ID: <da776a8c0804240147x620e2c23t81206d58830c7740@mail.gmail.com>

disregard this message..gmail sent it while i was in the middle of it

On Thu, Apr 24, 2008 at 4:33 AM, inhahe <inhahe at gmail.com> wrote:

> it wasn't easy to find, but i finally found something that states directly
> that Twisted
>
> http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080424/be954346/attachment.htm 

From mailing_lists at evotex.ch  Thu Apr 24 07:40:40 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 24 Apr 2008 13:40:40 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <200804231602.43214.maarten@treewalker.org>
References: <480E377B.9080903@evotex.ch>
	<480EE3D5.8060101@evotex.ch>	<480EF639.3010008@evotex.ch>
	<200804231602.43214.maarten@treewalker.org>
Message-ID: <481071B8.80901@evotex.ch>

Maarten ter Huurne wrote:
> On Wednesday 23 April 2008, Gabriel Rossetti wrote:
>
>   
>> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up
>> to 16k, after that it splits the message up, thus this would explain the
>> lockup, since the app expects a whole XML message and can't process the
>> second part correctly.
>>     
>
> If you use an event-based XML parser (like something that implements SAX), 
> you can simply feed it the bytes as they come in from the network. The XML 
> tag nesting will tell you when the entire message has been received, which 
> is when you receive the "close tag" callback for the root tag.
>
> Bye,
> 		Maarten
>   
Yes, that's what I ended up doing :-) It works great! Thanks

Gabriel



From itamar at itamarst.org  Thu Apr 24 08:48:52 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Apr 2008 08:48:52 -0400
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
In-Reply-To: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
References: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
Message-ID: <1209041332.16249.13.camel@localhost.localdomain>

1. You probably want to use twisted-web mailing list for these
questions.

2. twisted.web *server* does support pipelining, if I remember
correctly. The client doesn't.




From camrdale at gmail.com  Thu Apr 24 11:20:48 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 24 Apr 2008 08:20:48 -0700
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
In-Reply-To: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
References: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
Message-ID: <f4438a6a0804240820q17e71cc0y8e7c8955fc42155e@mail.gmail.com>

On 4/24/08, inhahe <inhahe at gmail.com> wrote:
>             ctx.setHeader("Server", "Apache/2.2.8(Unix)")
>         exceptions.AttributeError: 'Request' object has no attribute
> 'setHeader'
>
> so how do I set a header using web2?

Try ctx.headers.setHeader(). web2 requests have a headers attribute of
this class:

http://twistedmatrix.com/documents/2.5.0/api/twisted.web2.http_headers.Headers.html

Cameron



From bschmer at yahoo.com  Thu Apr 24 14:54:41 2008
From: bschmer at yahoo.com (Bryan Schmersal)
Date: Thu, 24 Apr 2008 11:54:41 -0700 (PDT)
Subject: [Twisted-Python] Forcing telnet connections to character mode using
	twisted.conch.telnet.Telnet
Message-ID: <62929.3048.qm@web32107.mail.mud.yahoo.com>

I've been using twisted for about 36 hours now and have an application put together, but in order to get it working just the way I want it to, I want to force the other end of the telnet connection to go into character-at-a-time mode.  I haven't seen any examples of setting IAC options, but perhaps I haven't been looking in the proper places.

Does anyone have any hints?

Bryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080424/98e99b47/attachment.htm 

From exarkun at divmod.com  Thu Apr 24 15:24:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Apr 2008 15:24:25 -0400
Subject: [Twisted-Python] Forcing telnet connections to character mode
	using twisted.conch.telnet.Telnet
In-Reply-To: <62929.3048.qm@web32107.mail.mud.yahoo.com>
Message-ID: <20080424192425.6859.1809263100.divmod.quotient.34548@ohm>

On Thu, 24 Apr 2008 11:54:41 -0700 (PDT), Bryan Schmersal <bschmer at yahoo.com> wrote:
>I've been using twisted for about 36 hours now and have an application put together, but in order to get it working just the way I want it to, I want to force the other end of the telnet connection to go into character-at-a-time mode.  I haven't seen any examples of setting IAC options, but perhaps I haven't been looking in the proper places.
>
>Does anyone have any hints?

twisted.conch.telnet.Telnet has four methods for option negotiation:
do, dont, will, and wont.  These correspond to IAC DO, IAC DONT, IAC
WILL, and IAC WONT, respectively.  You probably want to do something
with the LINEMODE option, but I forget what exactly.  Once you enable
LINEMODE, you'll probably want to do some subnegotiation about it.
Telnet has a requestNegotiate method for this.  A quick look at RFC
1184 suggests that what you want is roughly IAC DO LINEMODE and,
assuming that succeeds, IAC SB LINEMODE MODE (~EDIT & other) IAC SE.
This is easy enough to do with the Telnet class:

    d = self.do(LINEMODE)
    def cbLinemode(ignored):
        self.requestNegotiate(LINEMODE, LINEMODE_MODE + '\0')

You'll also need an enableRemote implementation which allows LINEMODE
to be enabled (it just needs to return True for that option).

Hope this helps, let me know how it turns out. :)

Jean-Paul



From exarkun at divmod.com  Thu Apr 24 15:30:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Apr 2008 15:30:51 -0400
Subject: [Twisted-Python] Forcing telnet connections to character mode
	using twisted.conch.telnet.Telnet
In-Reply-To: <20080424192425.6859.1809263100.divmod.quotient.34548@ohm>
Message-ID: <20080424193051.6859.315542258.divmod.quotient.34552@ohm>

On Thu, 24 Apr 2008 15:24:25 -0400, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>
>    d = self.do(LINEMODE)
>    def cbLinemode(ignored):
>        self.requestNegotiate(LINEMODE, LINEMODE_MODE + '\0')

Of course, cbLinemode should have been added as a callback to d.

Jean-Paul



From terry at jon.es  Fri Apr 25 04:53:17 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 25 Apr 2008 10:53:17 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func returning
	a called deferred
Message-ID: <18449.39933.404142.47145@jon.es>

>From searching and reading the list archives, I know the following comes up
under various guises, and although I think I understand what's going on, I
don't see a nice solution.

I'm trying to write a standalone script. It calls externalFunc, a function
someone else wrote that returns a deferred. My script could look something
like this:

    from twisted.internet import reactor
    from twisted.python import log

    if __name__ == '__main__':
        def ok(result):
            print "ok called with", result
        def nok(failure):
            print "nok called with", failure
            return failure
        def stop(x):
            reactor.stop()

        d = externalFunc()
        d.addCallback(ok)
        d.addErrback(nok)
        d.addBoth(stop)
        d.addErrback(log.err)
        reactor.run()

And that works fine.

Now suppose I want to do some testing in which I swap out the external
function for a library I wrote myself (or for another implementation).  In
the testing library, externalFunc is simplified and uses defer.success() to
return its result.

In this case the script raises RuntimeError, "can't stop reactor that isn't
running" because the deferred that comes back from externalFunc has already
been called. So when I add the call/errbacks, they are fired right away and
the reactor isn't running when the stop function tries to stop it.

And script never exits because it then starts the reactor.

At this point there are various contortions I can try. Catching the
RuntimeError works, but the script never exits. Catching the RuntimeError
and then calling sys.exit doesn't work because sys.exit raises SystemExit
and that is caught in twisted/internet/defer.py _runCallbacks.

Supposing I had more control, the calling function could create the
deferred, pause it, pass it to externalFunc, add callbacks, then unpause.
But that doesn't work either as the callbacks fire as soon as unpause is
called, and you get the reactor not started error, followed by no exit as
you then start the reactor.

Testing reactor.running before trying to stop it in stop gets rid of the
error, but the reactor is then started and not stopped.

The only bulletproof way to deal with this that I've come up with is to
call self.fireSystemEvent("shutdown") but that feels wrong.

Several solutions seem possible with changes to Twisted: don't catch
SystemExit; give reactor.stop a (default False) keyword arg to tell it to
ignore a stopped reactor; stop deferreds from firing call/err backs if they
are paused (IMO it's a bit non-paradigmatic to have call/errback events
firing when the reactor isn't even running), etc.

I suppose I'm just not doing things right. Can someone tell me how I should
be doing this?

Terry



From amauryfa at gmail.com  Fri Apr 25 05:27:58 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Fri, 25 Apr 2008 11:27:58 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func
	returning a called deferred
In-Reply-To: <18449.39933.404142.47145@jon.es>
References: <18449.39933.404142.47145@jon.es>
Message-ID: <e27efe130804250227w59733764r703f7e3351309aed@mail.gmail.com>

Hello,

Terry Jones wrote:
> >From searching and reading the list archives, I know the following comes up
>  under various guises, and although I think I understand what's going on, I
>  don't see a nice solution.
>
>  I'm trying to write a standalone script. It calls externalFunc, a function
>  someone else wrote that returns a deferred. My script could look something
>  like this:
>
>     from twisted.internet import reactor
>     from twisted.python import log
>
>     if __name__ == '__main__':
>         def ok(result):
>             print "ok called with", result
>         def nok(failure):
>             print "nok called with", failure
>             return failure
>         def stop(x):
>             reactor.stop()
>
>         d = externalFunc()
>         d.addCallback(ok)
>         d.addErrback(nok)
>         d.addBoth(stop)
>         d.addErrback(log.err)
>         reactor.run()
>
>  And that works fine.
>
>  Now suppose I want to do some testing in which I swap out the external
>  function for a library I wrote myself (or for another implementation).  In
>  the testing library, externalFunc is simplified and uses defer.success() to
>  return its result.
>
>  In this case the script raises RuntimeError, "can't stop reactor that isn't
>  running" because the deferred that comes back from externalFunc has already
>  been called. So when I add the call/errbacks, they are fired right away and
>  the reactor isn't running when the stop function tries to stop it.
>
>  And script never exits because it then starts the reactor.

did you try something like:

       def stop(x):
           reactor.callLater(0, reactor.stop)

This ensures that the reactor is started before you tell it to stop.

-- 
Amaury Forgeot d'Arc



From terry at jon.es  Fri Apr 25 06:04:43 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 25 Apr 2008 12:04:43 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func
	returning a called deferred
In-Reply-To: Your message at 11:27:58 on Friday, 25 April 2008
References: <18449.39933.404142.47145@jon.es>
	<e27efe130804250227w59733764r703f7e3351309aed@mail.gmail.com>
Message-ID: <18449.44219.107770.944150@jon.es>

Hi Amaury

> did you try something like:
> 
>        def stop(x):
>            reactor.callLater(0, reactor.stop)
> 
> This ensures that the reactor is started before you tell it to stop.

That's perfect, thanks.

Terry



From jmp at MIT.EDU  Fri Apr 25 07:42:41 2008
From: jmp at MIT.EDU (Justin Mazzola Paluska)
Date: Fri, 25 Apr 2008 07:42:41 -0400
Subject: [Twisted-Python] Moving from PB to other RPC protocols
Message-ID: <20080425114241.GA28232@mit.edu>

Hi,

I?m using PB to connect together various servers in my application.
In the application clients connect to a ?master? server, which then
farms out work to ?worker? servers.  The master server exports PB
objects with two types of functions: (1) accessors that return PB
Cacheables and (2) mutators that change the state of the server (and
consquently alter any outstanding Cacheables).  In the past all of our
client programs (some wx, a GTK client, and some command line tools)
were all written in Python.

Now, however, we want to integrate two new applications with our
system.  One is a web application with a developer who?d rather write
a WSGI application and use some blocking RPC method and the other is a
large C++ application that can?t be re-written in Python.

How do we get everyone to communicate?  In order to support these new
applications, it looks like our master server will need to offer two
interfaces: one PB and one something else.

- I imagine that we can choose any old RPC method (XML-RPC, json-rpc,
  random protocol over HTTP) to implement our mutator functions.  In
  the Twisted mailing list archives, most people recommend XML-RPC,
  though json-rpc looks intruiging (especially for the web stuff).
  
- Is there any common RPC mechanism with anything like Cacheables?  I
  loathe to have these new applications polling the server all the
  time when they could just be waiting for something.

Thanks,
	?Justin



From sipickles at hotmail.com  Sat Apr 26 15:10:13 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Apr 2008 20:10:13 +0100
Subject: [Twisted-Python] Problem with Jelly
Message-ID: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>

Hi,

I thought I was following the doc 'Passing Complex Types' but am still 
getting unsecure Jellies.

I've got a file, imported by both pb.Client and pb.Server:

#------------------------------------------------
#jellyable.gameObject.py

class GameObject:
    # full of stuff
   pass
 
class PortableGameObject(GameObject, pb.Copyable):
    pass

class GameObjectReceiver(GameObject, pb.RemoteCopy):
    pass

pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)

#------------------------------------------------

The client is trying to send an instance of a PortableGameObject thru 
PB, but the server spits out:

twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
allowed (in type jellyable.gameObject.PortableGameObject).


Why does it refer to 'Module jellyable.gameObject'? I know I am sending 
this thru the pipe:

Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, msg: 
OBJECT_CHANGESECTOR, data: (<jellyable.gameObject.PortableGameObject 
instance at 0x87bab4c>,)

I remember reading that it is crucial to get the naming right on send 
and receive. How have I got it wrong?

Thanks

Simon


-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From radix at twistedmatrix.com  Sat Apr 26 17:45:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 26 Apr 2008 17:45:55 -0400
Subject: [Twisted-Python] Twisted 8.1.0pre2
Message-ID: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>

Hey all. I just put together Twisted 8.1.0pre2, because pre1 had a
regression in IOCP. It's been fixed now along with some other updates.
Please download it and test your software, especially if you use a
non-select-on-unix platform! There have been some reactor changes in
this release.

http://twistedmatrix.com/users/radix/8.1.0pre2/

Note that many of the files are still 'pre1', because they didn't need
any updates. Only the main Twisted distribution, Core, Conch, and
Words were updated.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sun Apr 27 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1209269107.86.109221577@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080427/6bc1cc01/attachment.htm 

From sipickles at hotmail.com  Sun Apr 27 05:19:56 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 10:19:56 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
Message-ID: <BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>

Simon Pickles wrote:
> Hi,
>
> I thought I was following the doc 'Passing Complex Types' but am still 
> getting unsecure Jellies.
>
> I've got a file, imported by both pb.Client and pb.Server:
>
> #------------------------------------------------
> #jellyable.gameObject.py
>
> class GameObject:
>    # full of stuff
>   pass
>
> class PortableGameObject(GameObject, pb.Copyable):
>    pass
>
> class GameObjectReceiver(GameObject, pb.RemoteCopy):
>    pass
>
> pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)
>
> #------------------------------------------------
>
> The client is trying to send an instance of a PortableGameObject thru 
> PB, but the server spits out:
>
> twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
> allowed (in type jellyable.gameObject.PortableGameObject).
>
>
> Why does it refer to 'Module jellyable.gameObject'? I know I am 
> sending this thru the pipe:
>
> Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, msg: 
> OBJECT_CHANGESECTOR, data: (<jellyable.gameObject.PortableGameObject 
> instance at 0x87bab4c>,)
>
> I remember reading that it is crucial to get the naming right on send 
> and receive. How have I got it wrong?
>
> Thanks
>
> Simon
>
>
Okay, well I think my first issue was I wasn't importing 
jellyable.gameObject into the server.

After doing this, I now get this slightly vague error:

twisted.spread.jelly.InsecureJelly: method

I think this may be because GameObject is a compound class, including 
instance of Mobile, Selectable, Intelligent and Container component 
classes.

Is it possible to send Compound classes? or should I distil my 
GameObject for transportation? (i'd rather not, obviously!)

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sun Apr 27 07:07:37 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 12:07:37 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
Message-ID: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>

Simon Pickles wrote:
> Simon Pickles wrote:
>> Hi,
>>
>> I thought I was following the doc 'Passing Complex Types' but am 
>> still getting unsecure Jellies.
>>
>> I've got a file, imported by both pb.Client and pb.Server:
>>
>> #------------------------------------------------
>> #jellyable.gameObject.py
>>
>> class GameObject:
>>    # full of stuff
>>   pass
>>
>> class PortableGameObject(GameObject, pb.Copyable):
>>    pass
>>
>> class GameObjectReceiver(GameObject, pb.RemoteCopy):
>>    pass
>>
>> pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)
>>
>> #------------------------------------------------
>>
>> The client is trying to send an instance of a PortableGameObject thru 
>> PB, but the server spits out:
>>
>> twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
>> allowed (in type jellyable.gameObject.PortableGameObject).
>>
>>
>> Why does it refer to 'Module jellyable.gameObject'? I know I am 
>> sending this thru the pipe:
>>
>> Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, 
>> msg: OBJECT_CHANGESECTOR, data: 
>> (<jellyable.gameObject.PortableGameObject instance at 0x87bab4c>,)
>>
>> I remember reading that it is crucial to get the naming right on send 
>> and receive. How have I got it wrong?
>>
>> Thanks
>>
>> Simon
>>
>>
> Okay, well I think my first issue was I wasn't importing 
> jellyable.gameObject into the server.
>
> After doing this, I now get this slightly vague error:
>
> twisted.spread.jelly.InsecureJelly: method
>
> I think this may be because GameObject is a compound class, including 
> instance of Mobile, Selectable, Intelligent and Container component 
> classes.
>
> Is it possible to send Compound classes? or should I distil my 
> GameObject for transportation? (i'd rather not, obviously!)
>
> Thanks
>
> Si
>
Update #3

Using a simple test class, TestJelly, I was able to succeed in 
transferring the instance. It was fairly trivial to also make those 
component classes jellyable in the same manner as their owner.

I kept adding complexity to TestJelly, approaching the structure of my 
GameObject class. It failed (with the InsecureJelly:method error) when I 
needed to make the passed class type an inherited one.

I realised that GameObject is a subclass of Actor, and calls 
Actor.__init__() in its own __init__.

So I tried making the actor jellyable too by doing this:
----------------------
#actor.py
import stackless
from log import logger
from twisted.spread import pb

class Actor:
    def __init__(self, ch, logFunction):
        self.rx = ch
        self.logger = logFunction
        self.processMessageMethod = self.MessageHandler
        self.logger("rx: %s" % self.rx)
        stackless.tasklet(self.ProcessMessage)()

    def ProcessMessage(self):
        while 1:
            self.logger("...... waiting for event message ......")
            self.processMessageMethod(self.rx.receive())

    def MessageHandler(self,args):
        # Overridden by subclasses
        self.logger("ERROR - Unhandled Message: %s" % args)
     

class PortableActor(Actor, pb.Copyable):
    pass

class ActorReceiver(pb.RemoteCopy, Actor):
    pass

pb.setUnjellyableForClass(PortableActor, ActorReceiver)
----------------------
# testJelly.py
# An instance of which I am trying to pass

from twisted.spread import pb
import stackless

from actor import PortableActor
from log import logger

class TestJelly(PortableActor):
    def __init__(self):
        PortableActor.__init__(self, stackless.channel(), logger.SYS)

class PortableTestJelly(TestJelly, pb.Copyable):
    pass

class TestJellyReceiver(pb.RemoteCopy, TestJelly):
    pass

pb.setUnjellyableForClass(PortableTestJelly, TestJellyReceiver)

------------------

No good! Something about the PortableActor.__init__ is breaking it.

Advice gratefully received.

Thanks
Si



-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Sun Apr 27 09:34:47 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 27 Apr 2008 09:34:47 -0400
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
Message-ID: <20080427133447.6859.1301914948.divmod.quotient.55640@ohm>

On Sun, 27 Apr 2008 12:07:37 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>
> [snip]
>
>I kept adding complexity to TestJelly, approaching the structure of my 
>GameObject class. It failed (with the InsecureJelly:method error) when I 
>needed to make the passed class type an inherited one.
>
>I realised that GameObject is a subclass of Actor, and calls 
>Actor.__init__() in its own __init__.
>
>So I tried making the actor jellyable too by doing this:
>----------------------
>#actor.py
>import stackless
>from log import logger
>from twisted.spread import pb
>
>class Actor:
>    def __init__(self, ch, logFunction):
>        self.rx = ch
>        self.logger = logFunction
>        self.processMessageMethod = self.MessageHandler

What are these three attributes?  `self.rx?, `self.logger?, and
`self.processMessageMethod? have to be jellyable if you want to
mix `Actor? into a class that you are going to jelly.  If these
attributes aren't supposed to be sent to the peer, then you need
to provide custom jellying logic to exclude them.

Jean-Paul



From sipickles at hotmail.com  Sun Apr 27 09:45:20 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 14:45:20 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
	<BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
Message-ID: <BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>

The solution seems to be to use pb.Copyable.getStateToCopy() to control 
which members to send.

I am then replacing problem ones (stackless channels and tasklets 
mainly) with new local references at the receiving end.

(As Jean says I notice!)

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sun Apr 27 11:22:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 16:22:02 +0100
Subject: [Twisted-Python] Bending Jelly
In-Reply-To: <BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>	<BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
	<BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>
Message-ID: <BAY114-DAV171F6FFD8DE3C19C67FEBBEDF0@phx.gbl>

So.... what are the ramifications of doing this:

class PortableGameObject(GameObject, pb.Copyable, pb.RemoteCopy):
    def getStateToCopy(self):
        d = self.__dict__.copy()
        return d
    def setCopyableState(self, state):
        #newDict = { 'newness' : 1 }
        self.__dict__ = state

pb.setUnjellyableForClass(PortableGameObject, PortableGameObject)


I only ask since I want to make the objects transmittable and receivable.

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From kozneb at gmail.com  Sun Apr 27 11:23:08 2008
From: kozneb at gmail.com (=?UTF-8?Q?Harald_Bl=C3=A5tand?=)
Date: Sun, 27 Apr 2008 17:23:08 +0200
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
Message-ID: <1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>

Apologies for cross-posting; don't seem to have any luck with twisted-web.



---------- Forwarded message ----------
From: Harald Bl?tand <kozneb at gmail.com>
Date: Sun, Apr 27, 2008 at 2:58 PM
Subject: Athena onbeforeunload ?
To: Twisted Web World <twisted-web at twistedmatrix.com>


Hi all,

Trying to have the server know at once when a client goes away.
Seemed like function bindEvents of Nevow.Athena.PageWidget would do the
trick, but...
Checking with alert's in bindEvents()  (ok), and function onbeforeunload;
however, the latter doesn't seem to get called??

Please, what am I missing here?
k
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080427/649206d5/attachment.htm 

From foom at fuhm.net  Sun Apr 27 12:18:50 2008
From: foom at fuhm.net (James Y Knight)
Date: Sun, 27 Apr 2008 12:18:50 -0400
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
	<1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
Message-ID: <0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>

On Apr 27, 2008, at 11:23 AM, Harald Bl?tand wrote:
> Apologies for cross-posting; don't seem to have any luck with  
> twisted-web.

That's rather rude, please don't do that.

You only waited 3 hours before complaining about not getting a reply.  
You should wait for a reply for at least for a couple of days before  
sending a follow-up ping.

James


From kozneb at gmail.com  Sun Apr 27 12:43:16 2008
From: kozneb at gmail.com (=?UTF-8?Q?Harald_Bl=C3=A5tand?=)
Date: Sun, 27 Apr 2008 18:43:16 +0200
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
	<1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
	<0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>
Message-ID: <1ff309e60804270943j4085cc9ehb0fa4137f8a6d425@mail.gmail.com>

On Sun, Apr 27, 2008 at 6:18 PM, James Y Knight <foom at fuhm.net> wrote:

> On Apr 27, 2008, at 11:23 AM, Harald Bl?tand wrote:
>
> > Apologies for cross-posting; don't seem to have any luck with
> > twisted-web.
> >
>
> That's rather rude, please don't do that.
>
> You only waited 3 hours before complaining about not getting a reply. You
> should wait for a reply for at least for a couple of days before sending a
> follow-up ping.
>
> James


Sorry.
I wasn't complaining about not getting a reply. I just thought I would
receive my own question back from the mailing-list (which made me think
twisted-web wasn't up or something), but that's obviously not how it works.

Sorry again.
k


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080427/701fd90c/attachment.htm 

From glyph at divmod.com  Mon Apr 28 02:50:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 06:50:59 -0000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
Message-ID: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>

On 18 Apr, 05:06 am, jml at mumak.net wrote:
>Hello everyone,
>
>Now that the release is out[1], I'd like to start work on fixing #1216
>-- official deprecation policy.

Sorry for the delay.  Due to a miscommunication, I thought that Chris 
would be the one writing up our meeting notes and announcing this. 
After I realized I was the one who was supposed to be doing it, I wanted 
to write up something official-sounding on the wiki first, but of 
course, there's never enough time.  So here's a rough cut at the policy 
that we (the current "TSF board", such as it is: chris, me, JP, and 
itamar) agreed on at the sprint in Cambridge.

Thanks, Jonathan, for motivating this; we've needed a clear statement 
for a long time.  Someone (and this will probably be me) needs to make a 
complete and unambiguous index of official Twisted policy and put it 
together somewhere, probably on the wiki, at least at first.
>I think these are all the questions we need to answer:

The proposed policy does break down as a list of answers to these 
questions, so one point at a time:
>- Is it time-based or release-based?

Both.  There will be a minimum amount of time and a minimum number of 
releases before a deprecated feature may be removed.
>- How long for?

Every deprecation must last for a minimum of 2 releases and a minimum of 
one year.  Of course, anyone who wants to keep maintaining deprecated 
APIs for longer than that may do so.

I know this is somewhat longer than you've suggested, but at the meeting 
we ran down a laundry list of real-world usages of Twisted and pretty 
much nobody upgrades Twisted more than once per year.  In fact, once per 
2 years seems to be the average, and that's a fairly ambitious estimate. 
The objective of providing a year-long deprecation period is to allow a 
user who is performing their bi-yearly Twisted upgrade to do so with no 
more than 2 intermediary upgrades.
>- Do we grade deprecations? How?

There will be three phases of deprecation.  When a deprecation is first 
introduced (in trunk) the "deprecation counter" will be at 3.  When that 
deprecation sees its first release, it decrements to 2.  Deprecations at 
levels 3 and 2 will be PendingDeprecationWarning.  When that same 
deprecation sees its second release after a 6-month period, the counter 
decrements to 1, and finally, after a second 6-month period, it 
decrements to 0 and can be removed.  Deprecations with a counter at 1 
and at 0 (if they still exist) should emit a DeprecationWarning.

The counter may not move down past 2 until *all instances of the emitted 
warning* have been removed from the Twisted test suite, with the 
exception of tests specifically for the deprecated functionality itself 
(i.e. tests that call assertWarns).

The reason that this is described as a counter rather than primarily in 
terms of (Pending)DeprecationWarning is that this was a subject of 
intense debate during the meeting.  There is definitely a consensus that 
the Python warnings system is not a sufficient tool we have to deal with 
the kind of notifications that we want to provide.  There is also a 
consensus that it is the only tool available.  So, let me provide some 
more detail on the desired behavior here.

The idea behind using PendingDeprecationWarning is that *users* of a 
piece of software which depends on Twisted should, in principle, be able 
to upgrade Twisted by one version without seeing any error output. 
However, *maintainers* of that software should immediately see all the 
warnings when they test with a new release.  Trial should change to show 
all PendingDeprecationWarnings by default.  However, this might be 
impractical due to other uses of PendingDeprecationWarning - if that is 
the case, Twisted should include its own warning class.  It may be 
helpful to do that in order to include the additional metadata required 
for an automated deprecation workflow, however.  The desired deprecation 
workflow is:

  * Twisted developer deprecates functionality, by adding a 
warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the 
code.

  * The release process automatically runs "update-deprecations" over the 
codebase, updating the deprecation counters in the developer-supplied 
metadata appropriately.  The release goes out.  (Ideally this would be 
done without actually having to modify the whole codebase, updating a 
central deprecation / release index.)

  * Another release happens that sets some counters to zero.

  * A developer drops support for some deprecated functionality, 
confident in their ability to do so by observing the zero (or negative) 
value for the counter.

An obvious remaining piece of work to implement this final policy is to 
define some temporary manual things that we can do until such a tool is 
implemented, and implement the tool itself as soon as possible.  I don't 
believe any tickets have yet been filed for this, and *that* I am 
leaving in our venerable release manager's court, since this is all a 
part of the release process except for the fairly minor change to trial.

However, in the absence of any tools, this policy does apply now, it 
will just be a bit of a pain to work out where the counter stands on any 
particular deprecation until we've got some more metadata to help us.
>- Which code is subject to this policy?

All Python code released in Twisted, with the exceptions of private 
modules and test modules.

Only code which has been present in a release needs to be deprecated. 
Anything which was added after the last release and has not yet been 
present in any other release may be modified at will.  (We try to keep 
trunk stable, but this only applies to code that was relying on features 
in previous releases.)  I think that CompatibilityPolicy's explanation 
of an "incompatible change" explains this.

Users: do not import anything from a package named "test", or any name 
(module, class, or function) which begins with "_"; bears will eat you. 
This code may change at any time.

(Not a part of the policy: I personally want to add some caveats here, 
where users of Twisted can ask for a grace period on private APIs that 
people actually needed to use, but I think for now let's err on the side 
of allowing the deprecation - I don't want to encourage people to use 
private APIs.  Users: if you find that there are things you can't do 
with the public APIs and you really need a grace period to upgrade your 
applications, please speak up.  Eventually, I'd like to have a very 
aggressive "you can't even import (or invoke) this if it's private" 
regime where users can't accidentally use private functionality without 
first seeing a runtime error of some kind that they have to explicitly 
silence, as with my "pyexport" hack.  Once we've done *that* we should 
definitely have a zero-tolerance policy on supporting private stuff, 
though...)

There's obviously some work to do here to make this policy easy and 
convenient to follow.  This needs to be edited, CompatibilityPolicy 
updated, and prominently linked.  We need someone to write up at least 
two different summaries: one for maintainers of projects using Twisted 
("What kind of compatibility should I expect from Twisted releases?") 
one for Twisted contributors ("How do I add a deprecation?  When can I 
remove it?") and maybe one for users and one for packagers, too.  We 
need some tools to help us update deprecations.  We need trial to change 
so that developers are notified earlier than their users.

Do I hear any volunteers...? :)



From glyph at divmod.com  Mon Apr 28 02:59:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 06:59:43 -0000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
Message-ID: <20080428065943.25821.1880039352.divmod.xquotient.1136@joule.divmod.com>


On 06:50 am, glyph at divmod.com wrote:
>All Python code released in Twisted, with the exceptions of private 
>modules and test modules.

To be specific, this means code actually present in the Twisted release, 
which does not, for example, include web2.  I guess that's still be an 
exception.  So this doesn't just mean "everything in the repository".

(Maybe we should do a release of web2 and just admit people are actually 
using it.  But that's a totally separate discussion; please let's not 
start it here.)



From jml at mumak.net  Mon Apr 28 03:36:00 2008
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 28 Apr 2008 17:36:00 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
Message-ID: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>

On Mon, Apr 28, 2008 at 4:50 PM,  <glyph at divmod.com> wrote:
> On 18 Apr, 05:06 am, jml at mumak.net wrote:
>
> > Hello everyone,
> >
> > Now that the release is out[1], I'd like to start work on fixing #1216
> > -- official deprecation policy.
> >
>
>  Sorry for the delay.  Due to a miscommunication, I thought that Chris would
> be the one writing up our meeting notes and announcing this. After I
> realized I was the one who was supposed to be doing it, I wanted to write up
> something official-sounding on the wiki first, but of course, there's never
> enough time.  So here's a rough cut at the policy that we (the current "TSF
> board", such as it is: chris, me, JP, and itamar) agreed on at the sprint in
> Cambridge.
>
>  Thanks, Jonathan, for motivating this; we've needed a clear statement for a
> long time.  Someone (and this will probably be me) needs to make a complete
> and unambiguous index of official Twisted policy and put it together
> somewhere, probably on the wiki, at least at first.
>

I'm glad I could help and I'm glad that this is being worked on.

Although I'm happy to leave the decision in your hands, there are a
couple of things I'd like to comment on (disagree with).

Also, I'd be happy to start the work of collating policy.

>
> > - Is it time-based or release-based?
> >
>
>  Both.  There will be a minimum amount of time and a minimum number of
> releases before a deprecated feature may be removed.
>

I dislike this. I think that deprecations should be release-based and
that we should commit to time-based releases. I think this is simpler
for users and for developers.

This complaint would be largely solved by automation.

> > - How long for?
> >
>
>  Every deprecation must last for a minimum of 2 releases and a minimum of
> one year.  Of course, anyone who wants to keep maintaining deprecated APIs
> for longer than that may do so.
>

Presumably the timer starts at a release and only increments at a release?

So, for example:

T - 1 month: deprecate feature in trunk
T: Release N
T + 7 months: Release N+1
T + 14 months: Release N+2, feature removed.

Is this understanding correct?

(The fact that I need to ask is largely why I don't like "both time &
release based".)

>  I know this is somewhat longer than you've suggested, but at the meeting we
> ran down a laundry list of real-world usages of Twisted and pretty much
> nobody upgrades Twisted more than once per year.

I think the data on this is skewed, since there was about a 1.4 year
gap between the last 2 releases of Twisted. If we released each month,
I can imagine this would change.

Nevertheless, I'm content with this sort of time frame for now, as
long as the support for it is well automated.

>  The idea behind using PendingDeprecationWarning is that *users* of a piece
> of software which depends on Twisted should, in principle, be able to
> upgrade Twisted by one version without seeing any error output.

I think that this is a nice feature, but not worth breaking our backs
over. (It might be really easy to do though).

> However,
> *maintainers* of that software should immediately see all the warnings when
> they test with a new release.  Trial should change to show all
> PendingDeprecationWarnings by default.  However, this might be impractical
> due to other uses of PendingDeprecationWarning - if that is the case,
> Twisted should include its own warning class.  It may be helpful to do that
> in order to include the additional metadata required for an automated
> deprecation workflow, however.  The desired deprecation workflow is:
>
>   * Twisted developer deprecates functionality, by adding a
> warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the code.
>

I disagree very strongly on this detail. The deprecation API should be
higher level than that.

Specifically, even we implement it with the warnings system, I don't
think we should litter that decision all over our code base.

>  An obvious remaining piece of work to implement this final policy is to
> define some temporary manual things that we can do until such a tool is
> implemented, and implement the tool itself as soon as possible.  I don't
> believe any tickets have yet been filed for this, and *that* I am leaving in
> our venerable release manager's court, since this is all a part of the
> release process except for the fairly minor change to trial.
>

I think this is wasted effort. Let's just build the damn tool.

> > - Which code is subject to this policy?
> >
>
>  All Python code released in Twisted, with the exceptions of private modules
> and test modules.
>

What about code currently marked as deprecated?

>  There's obviously some work to do here to make this policy easy and
> convenient to follow.  This needs to be edited, CompatibilityPolicy updated,
> and prominently linked.  We need someone to write up at least two different
> summaries: one for maintainers of projects using Twisted ("What kind of
> compatibility should I expect from Twisted releases?") one for Twisted
> contributors ("How do I add a deprecation?  When can I remove it?") and
> maybe one for users and one for packagers, too.  We need some tools to help
> us update deprecations.  We need trial to change so that developers are
> notified earlier than their users.
>
>  Do I hear any volunteers...? :)
>

Me. I wouldn't have raised the issue if I wasn't willing.

jml



From jml at mumak.net  Mon Apr 28 03:50:33 2008
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 28 Apr 2008 17:50:33 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
Message-ID: <d06a5cd30804280050t3b36ff8ei4feae1bc758e61fd@mail.gmail.com>

On Mon, Apr 28, 2008 at 5:36 PM, Jonathan Lange <jml at mumak.net> wrote:
> On Mon, Apr 28, 2008 at 4:50 PM,  <glyph at divmod.com> wrote:
>  >  There's obviously some work to do here to make this policy easy and
>  > convenient to follow.  This needs to be edited, CompatibilityPolicy updated,
>  > and prominently linked.  We need someone to write up at least two different
>  > summaries: one for maintainers of projects using Twisted ("What kind of
>  > compatibility should I expect from Twisted releases?") one for Twisted
>  > contributors ("How do I add a deprecation?  When can I remove it?") and
>  > maybe one for users and one for packagers, too.  We need some tools to help
>  > us update deprecations.  We need trial to change so that developers are
>  > notified earlier than their users.
>  >
>  >  Do I hear any volunteers...? :)
>  >
>
>  Me. I wouldn't have raised the issue if I wasn't willing.
>

That said, I would be greatly surprised if you guys *didn't* have
opinions about implementation beyond what Glyph has already mentioned.

If you have opinions, either mention them now or out-volunteer me, so
I don't end up wasting my time.

jml



From miguel.filho at gmail.com  Mon Apr 28 08:38:00 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 09:38:00 -0300
Subject: [Twisted-Python] Aplication process uid/gid
Message-ID: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>

Hello list,

The code:
===============================
import pwd
from apolicy.config import config
...
from twisted.protocols import basic
from twisted.internet import reactor, protocol, task
from twisted.application import internet, service
...
user = pwd.getpwnam(config.get("main","user"))
application = service.Application('apolicy', uid=user[2], gid=user[3])
serviceCollection = service.IServiceCollection(application)

address, port = config.get("main", "listen").split(":")

internet.TCPServer(int(port), ACLPolicyDaemonFactory(),
interface=address).setServiceParent(serviceCollection)
===============================

I'm using twistd to start my daemon, the process starts normally and
the owner is the user nobody.

# ps uaxf | grep nobody
nobody   29052  0.1  0.6  13140  6440 ?        S    09:11   0:01
/usr/bin/python /usr/bin/twistd -y
/usr/lib/python2.4/site-packages/apolicy/server.py -q --logfile
/var/log/twistd.log --pidfile=/var/run/twistd.pid

My class ACLPolicyDaemonFactory() tries to write a file to test if the
path given to my application is writable and has no problems, but the
file is created as root. What is the point where the process is
already running as nobody?

Regards,

Miguel



From exarkun at divmod.com  Mon Apr 28 08:46:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 08:46:57 -0400
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>
Message-ID: <20080428124657.6859.422762456.divmod.quotient.56137@ohm>

On Mon, 28 Apr 2008 09:38:00 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>Hello list,
>
>The code:
>===============================
> [snip]
>application = service.Application('apolicy', uid=user[2], gid=user[3])
>serviceCollection = service.IServiceCollection(application)
>
>address, port = config.get("main", "listen").split(":")
>
>internet.TCPServer(int(port), ACLPolicyDaemonFactory(),
>interface=address).setServiceParent(serviceCollection)
>===============================
>
>I'm using twistd to start my daemon, the process starts normally and
>the owner is the user nobody.
>
># ps uaxf | grep nobody
>nobody   29052  0.1  0.6  13140  6440 ?        S    09:11   0:01
>/usr/bin/python /usr/bin/twistd -y
>/usr/lib/python2.4/site-packages/apolicy/server.py -q --logfile
>/var/log/twistd.log --pidfile=/var/run/twistd.pid
>
>My class ACLPolicyDaemonFactory() tries to write a file to test if the
>path given to my application is writable and has no problems, but the
>file is created as root. What is the point where the process is
>already running as nobody?

Privileges aren't shed immediately when Application is created.  They're
shed after privilegedStartService and before startService.  You should
delay any potentially sensitive operations until startService (ie, don't
do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
meant you were opening that file).

Jean-Paul



From itamar at itamarst.org  Mon Apr 28 09:00:59 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Apr 2008 09:00:59 -0400
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
Message-ID: <1209387659.6476.10.camel@localhost.localdomain>



> I'm glad I could help and I'm glad that this is being worked on.
> 
> Although I'm happy to leave the decision in your hands, there are a
> couple of things I'd like to comment on (disagree with).

Of course! This wasn't meant to be a dictate.

> Also, I'd be happy to start the work of collating policy.
> 
> >
> > > - Is it time-based or release-based?
> > >
> >
> >  Both.  There will be a minimum amount of time and a minimum number of
> > releases before a deprecated feature may be removed.
> >
> 
> I dislike this. I think that deprecations should be release-based and
> that we should commit to time-based releases. I think this is simpler
> for users and for developers.

The hope is that this will be the effective end result. But our release
process is not *yet* (though it is the goal) completely automated, so
having fall back position of minimum time is handy. Also, what happens
if we decide to switch to more (or less frequent releases)?


> Presumably the timer starts at a release and only increments at a release?
> 
> So, for example:
> 
> T - 1 month: deprecate feature in trunk
> T: Release N
> T + 7 months: Release N+1
> T + 14 months: Release N+2, feature removed.
> 
> Is this understanding correct?

I think so.

> I think the data on this is skewed, since there was about a 1.4 year
> gap between the last 2 releases of Twisted. If we released each month,
> I can imagine this would change.

At ITA we've been using 2.4 for quite a while... though someone recently
switched us to 2.5.

> >   * Twisted developer deprecates functionality, by adding a
> > warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the code.
> >
> 
> I disagree very strongly on this detail. The deprecation API should be
> higher level than that.
> 
> Specifically, even we implement it with the warnings system, I don't
> think we should litter that decision all over our code base.

I agree. We actually talked about high level API at the meeting,
possibly glyph forgot, disagrees, or just took inaccurate notes :)





From miguel.filho at gmail.com  Mon Apr 28 09:40:23 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 10:40:23 -0300
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <20080428124657.6859.422762456.divmod.quotient.56137@ohm>
References: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>
	<20080428124657.6859.422762456.divmod.quotient.56137@ohm>
Message-ID: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>

On Mon, Apr 28, 2008 at 9:46 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>  Privileges aren't shed immediately when Application is created.  They're
>  shed after privilegedStartService and before startService.  You should
>  delay any potentially sensitive operations until startService (ie, don't
>  do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
>  meant you were opening that file).

Indeed,  I'm doing it from ACLPolicyDaemonFactory.__init__.  Should I
implement startService in my Factory class or somewhere else?

Miguel



From exarkun at divmod.com  Mon Apr 28 09:52:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 09:52:58 -0400
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>
Message-ID: <20080428135258.6859.683821717.divmod.quotient.56160@ohm>

On Mon, 28 Apr 2008 10:40:23 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>On Mon, Apr 28, 2008 at 9:46 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>
>>  Privileges aren't shed immediately when Application is created.  They're
>>  shed after privilegedStartService and before startService.  You should
>>  delay any potentially sensitive operations until startService (ie, don't
>>  do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
>>  meant you were opening that file).
>
>Indeed,  I'm doing it from ACLPolicyDaemonFactory.__init__.  Should I
>implement startService in my Factory class or somewhere else?

Only services which are children of the application get startService called
on them.  So to do it this way, you'll need a service in that situation.
Factories get startFactory called on them when they're bound to their first
port (and stopFactory when they're unbound from their last).  If you're
binding a privileged port, though, then this will happen while the process
is still running as root, so it's not as reliable as using startService.

To make a service, you need to implement IService:

http://twistedmatrix.com/documents/current/api/twisted.application.service.IService.html

You may also want to give the service a reference to your factory, or vice
versa, so that they can share state or call methods on each other or
whatever else is necessary.

Jean-Paul



From miguel.filho at gmail.com  Mon Apr 28 11:09:01 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 12:09:01 -0300
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <20080428135258.6859.683821717.divmod.quotient.56160@ohm>
References: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>
	<20080428135258.6859.683821717.divmod.quotient.56160@ohm>
Message-ID: <394cf6840804280809l11a6ca09ta600c6ea4aa82530@mail.gmail.com>

On Mon, Apr 28, 2008 at 10:52 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
>
>  Only services which are children of the application get startService called
>  on them.  So to do it this way, you'll need a service in that situation.
>  Factories get startFactory called on them when they're bound to their first
>  port (and stopFactory when they're unbound from their last).  If you're
>  binding a privileged port, though, then this will happen while the process
>  is still running as root, so it's not as reliable as using startService.
>

There we go:

class ACLPolicyDaemonService(service.Service):
    def __init__(self):
        self.factory = ACLPolicyDaemonFactory()

    def startService(self):
        self.factory.configure()
        service.Service.startService(self)

I borrowed the code and ideas from the tutorial[1] and it is working
fine, I call my configure() method inside the service, and the file is
created as nobody as needed. Thank you very much for the help.

Regards,

Miguel

[1] http://twistedmatrix.com/projects/core/documentation/howto/tutorial/protocol.html#auto2



From klok000 at gmail.com  Mon Apr 28 15:23:47 2008
From: klok000 at gmail.com (klok000 at gmail.com)
Date: Mon, 28 Apr 2008 15:23:47 -0400
Subject: [Twisted-Python] cannot get simple example to run
Message-ID: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>

Hello everyone.  Try as I might I cannot get a very simple example to run.
I basically want a server that accepts connections, and periodically issues
messages to all clients.  The docs for twisted.word says things are in flux
so I would rather avoid that and just use a LineReceiver.  However right now
I can't get anything to work.

I start the server and it seems to be happy to sit around and accept
connections.  However when I run the client it quits (without saying why)
and no connection is made.  Any help would be very much appreciated.  Here's
the code, log messages below that.  Thanks!

       Kevin

##################################################
# server.py
##################################################
import sys
from twisted.internet.protocol import log
from twisted.internet.protocol import Factory
from twisted.internet.protocol import Protocol
from twisted.internet import reactor

class Echo(Protocol):

    def connectionMade(self):
        sys.stderr.write('Server connectionMade\n')
        self.factory.numProtocols = self.factory.numProtocols+1
        if self.factory.numProtocols > 100:
            self.transport.write("Too many connections, try later")
            self.transport.loseConnection()

    def connectionLost(self, reason):
        sys.stderr.write('Server connectionLost\n')
        self.factory.numProtocols = self.factory.numProtocols-1

    def dataReceived(self, data):
        sys.stderr.write('Server dataReceived\n')
        self.transport.write(data)


factory = Factory()
factory.protocol = Echo

log.startLogging(file('server.log', 'w'))

sys.stderr.write('Server starting...\n')
# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(9010, factory)
reactor.run()
sys.stderr.write('Server done\n')





##################################################
# client.py
##################################################
import sys
from twisted.internet import reactor
from twisted.internet.protocol import log
from twisted.internet.protocol import Protocol
from twisted.internet.protocol import ClientCreator
from twisted.internet.protocol import ClientFactory

class Greeter(Protocol):
    def sendMessage(self, msg):
        sys.stderr.write('Client sendMessage\n')
        self.transport.write("MESSAGE %s\n" % msg)


class GreeterClientFactory(ClientFactory):
    def startedConnecting(self, connector):
        sys.stderr.write('Client startedConnecting\n')

    def buildProtocol(self, addr):
        sys.stderr.write('Client connected\n')
        g = Greeter()
        reactor.callLater(1, g.sendMessage, "This is sent in 1 second")
        reactor.callLater(2, g.sendMessage, "This is sent in 2 second")
        reactor.callLater(3, g.sendMessage, "This is sent in 3 second")
        return Greeter()

    def clientConnectionLost(self, connector, reason):
        sys.stderr.write('Client connectionLost: ' + reason + '\n')

    def clientConnectionFailed(self, connector, reason):
        sys.stderr.write('Client connectionFailed: ' + reason + '\n')


log.startLogging(file('client.log', 'w'))

sys.stderr.write('Client connecting...\n')

f = GreeterClientFactory()
reactor.connectTCP("localhost", 9010, f)

sys.stderr.write('Client done\n')




##################################################
# client.log
##################################################
2008/04/28 12:38 -0400 [-] Log opened.
2008/04/28 12:38 -0400 [-] Client connecting...
2008/04/28 12:38 -0400 [-] Starting factory <__main__.GreeterClientFactory
instance at 0x8354d8c>
2008/04/28 12:38 -0400 [-] Client startedConnecting
2008/04/28 12:38 -0400 [-] Client done





##################################################
# server.log
##################################################
2008/04/28 14:41 -0400 [-] Log opened.
2008/04/28 14:41 -0400 [-] Server starting...
2008/04/28 14:41 -0400 [-] twisted.internet.protocol.Factory starting on
9010
2008/04/28 14:41 -0400 [-] Starting factory
<twisted.internet.protocol.Factory instance at 0xb7cc18cc>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080428/8a8aa965/attachment.htm 

From exarkun at divmod.com  Mon Apr 28 15:33:30 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 15:33:30 -0400
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <20080428193330.6859.561461447.divmod.quotient.56272@ohm>

On Mon, 28 Apr 2008 15:23:47 -0400, klok000 at gmail.com wrote:
>Hello everyone.  Try as I might I cannot get a very simple example to run.
>I basically want a server that accepts connections, and periodically issues
>messages to all clients.  The docs for twisted.word says things are in flux
>so I would rather avoid that and just use a LineReceiver.  However right now
>I can't get anything to work.
>
>I start the server and it seems to be happy to sit around and accept
>connections.  However when I run the client it quits (without saying why)
>and no connection is made.  Any help would be very much appreciated.  Here's
>the code, log messages below that.  Thanks!
>
> [snip]

>##################################################
># client.py
>##################################################
> [snip]
>sys.stderr.write('Client connecting...\n')
>
>f = GreeterClientFactory()
>reactor.connectTCP("localhost", 9010, f)
>
>sys.stderr.write('Client done\n')
>

After reactor.connectTCP, you may want to call reactor.run. :)

>##################################################
># client.log
>##################################################
>2008/04/28 12:38 -0400 [-] Log opened.
>2008/04/28 12:38 -0400 [-] Client connecting...
>2008/04/28 12:38 -0400 [-] Starting factory <__main__.GreeterClientFactory
>instance at 0x8354d8c>
>2008/04/28 12:38 -0400 [-] Client startedConnecting
>2008/04/28 12:38 -0400 [-] Client done

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 28 15:36:05 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 28 Apr 2008 15:36:05 -0400
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
References: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <60ed19d40804281236o7607c3fet3f19ab56f9009042@mail.gmail.com>

On Mon, Apr 28, 2008 at 3:23 PM,  <klok000 at gmail.com> wrote:
> Hello everyone.  Try as I might I cannot get a very simple example to run.
> I basically want a server that accepts connections, and periodically issues
> messages to all clients.  The docs for twisted.word says things are in flux
> so I would rather avoid that and just use a LineReceiver.  However right now
> I can't get anything to work.
>
> I start the server and it seems to be happy to sit around and accept
> connections.  However when I run the client it quits (without saying why)
> and no connection is made.  Any help would be very much appreciated.  Here's
> the code, log messages below that.  Thanks!

You're not running the reactor in the client example.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Mon Apr 28 15:38:54 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 19:38:54 -0000
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
References: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <20080428193854.25821.1900888453.divmod.xquotient.1174@joule.divmod.com>


On 07:23 pm, klok000 at gmail.com wrote:
>I start the server and it seems to be happy to sit around and accept
>connections.  However when I run the client it quits (without saying 
>why)
>and no connection is made.  Any help would be very much appreciated. 
>Here's
>the code, log messages below that.  Thanks!

You forgot "reactor.run()", so effectively the program never starts :).



From miguel.filho at gmail.com  Tue Apr 29 07:56:04 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Tue, 29 Apr 2008 08:56:04 -0300
Subject: [Twisted-Python] Exit code using twistd
Message-ID: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>

Hello list,

I'm calling my program using twistd, like this:
# twistd -y /usr/lib/python2.4/site-packages/apolicy/server.py -q
--logfile /var/log/twistd.log --pidfile=/var/run/twistd.pid

All right, no problem. But my program makes some tests while starting
the service, like loading configuration files, etc.
If there is any exception twistd keeps running, so I tried calling
reactor.stop(), but I get an RuntimeError saying that it is not
possible to stop the reactor because it is not running. So I tried
calling sys.exit(1). twistd exits, but the code I'm passing is not
returned by twistd, witch returns 0. This messes with my init scripts,
so if my user calls 'service mydaemon start' the system will print an
'OK', but twistd will not be running in case of any errors.

How can I proceed to avoid this behavior?

Regards,

Miguel



From therve at free.fr  Tue Apr 29 16:44:31 2008
From: therve at free.fr (Thomas =?utf-8?q?Herv=C3=A9?=)
Date: Tue, 29 Apr 2008 22:44:31 +0200
Subject: [Twisted-Python] Twisted 8.1.0pre2
In-Reply-To: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>
References: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>
Message-ID: <200804292244.31888.therve@free.fr>

Le Saturday 26 April 2008 23:45:55 Christopher Armstrong, vous avez ?crit?:
> Hey all. I just put together Twisted 8.1.0pre2, because pre1 had a
> regression in IOCP. It's been fixed now along with some other updates.
> Please download it and test your software, especially if you use a
> non-select-on-unix platform! There have been some reactor changes in
> this release.
>
> http://twistedmatrix.com/users/radix/8.1.0pre2/
>
> Note that many of the files are still 'pre1', because they didn't need
> any updates. Only the main Twisted distribution, Core, Conch, and
> Words were updated.

The windows installers for Python 2.4 and 2.5 have just been uploaded. In 
particular, these installers should include zope.interface correctly. Also, 
uninstall has been slightly improved: any feedback is welcome.

Thanks!

-- 
Thomas



From miles.chris at gmail.com  Tue Apr 29 21:54:39 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 30 Apr 2008 11:54:39 +1000
Subject: [Twisted-Python] Exit code using twistd
In-Reply-To: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
References: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
Message-ID: <32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>


On 29/04/2008, at 9:56 PM, Miguel Filho wrote:
> Hello list,
>
> I'm calling my program using twistd, like this:
> # twistd -y /usr/lib/python2.4/site-packages/apolicy/server.py -q
> --logfile /var/log/twistd.log --pidfile=/var/run/twistd.pid
>
> All right, no problem. But my program makes some tests while starting
> the service, like loading configuration files, etc.
> If there is any exception twistd keeps running, so I tried calling
> reactor.stop(), but I get an RuntimeError saying that it is not
> possible to stop the reactor because it is not running. So I tried
> calling sys.exit(1). twistd exits, but the code I'm passing is not
> returned by twistd, witch returns 0. This messes with my init scripts,
> so if my user calls 'service mydaemon start' the system will print an
> 'OK', but twistd will not be running in case of any errors.
>
> How can I proceed to avoid this behavior?

Are you using the Twisted Application Framework to initialise your app?
http://twistedmatrix.com/projects/core/documentation/howto/application.html

If I try to replicate what you describe with one my apps, forcing an  
error during configuration file parsing I get a startup failure with  
non-0 status. e.g.:

$ twistd -y vencoderd.tac -q
Failed to load application: invalid literal for int(): asdf
$ echo $?
1

I actually deploy my apps as a Twisted Plugin, http://twistedmatrix.com/projects/core/documentation/howto/tap.html 
, which makes life a little easier, but gives the same behaviour as  
above. e.g.

$ twistd vencoderd -c configuration.ini
$ echo $?
1
$ tail -2 twistd.log
2008/04/30 12:47 +1100 [-]     self.options[option_name] =  
int(self.options[option_name])
2008/04/30 12:47 +1100 [-] ValueError: invalid literal for int(): asdf

In this case, the error ended up in the log file.

In my application, I parse the configuration file and set everything  
up before creating the service.Application and adding services.

Cheers,
Chris Miles





From miguel.filho at gmail.com  Wed Apr 30 00:30:32 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 30 Apr 2008 01:30:32 -0300
Subject: [Twisted-Python] Exit code using twistd
In-Reply-To: <32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>
References: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
	<32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>
Message-ID: <394cf6840804292130v2a82f43cva85f6d81ba387a3d@mail.gmail.com>

On Tue, Apr 29, 2008 at 10:54 PM, Chris Miles <miles.chris at gmail.com> wrote:
>
>  Are you using the Twisted Application Framework to initialise your app?
>  http://twistedmatrix.com/projects/core/documentation/howto/application.html

Yes, I am.

>  In my application, I parse the configuration file and set everything up
> before creating the service.Application and adding services.

All right, the code was much further in the process, running inside
startService and then calling sys.exit(1).

I was looking inside the code, and the service creation is executed
AFTER calling daemonize() I suppose, so my code was calling
sys.exit(1) while the process was already forked and has returned 0 to
the script.

I have moved all code to be loaded before creating any service at all
as you suggested and raising the proper exceptions. It's working fine,
thanks for the input.

Regards,

Miguel



From corydodt+twisted_spams at gmail.com  Tue Apr  1 00:18:13 2008
From: corydodt+twisted_spams at gmail.com (Cory Dodt)
Date: Mon, 31 Mar 2008 23:18:13 -0700
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F1CA26.3010207@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
Message-ID: <c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:37 PM, James Mansion
<james at mansionfamily.plus.com> wrote:
> > glyph at divmod.com wrote:
> > Patches which rectify this situation for any reactor, either from the
> > perspective of docs or code, would of course be appreciated.
> There's no point giving a commitment to doing more than discussing
> implementation approaches. With the
> best will in the world its unlikely to get to the top of my pile and
> there's no point living a fantasy.
>  [...]
> > And, if you're going to file a ticket, be prepared to actually follow
> > up with an implementation.
> Hmm - that's a crap attitude unless you want to deter any concensus
> formation during design.
> I know its quite common in open source. :-(

Twisted developers' time is as limited as yours is.  They're not
living in a fantasy either.

Resolving a bug includes gathering requirements and building
consensus, but building
consensus goes much faster if there's an implementation handy to
discuss.  Even a
quick hack is useful as a discussion point.  A very common scenario is
that a quick
hack is eventually refined into a unit tested, UQDS-vetted
implementation.  However,
a hand-waving discussion never is.

I certainly understand your frustrations (I've been there myself, many
times over, with
pretty much every piece of software I've ever developed with).  I
agree heartily with the
point that there is a bug if the software doesn't behave according to
documentation,
and there is even an argument to be made that the documentation should
note known
limitations--particularly when, as in this case, they are not secret
black knowledge but
common knowledge, and doubly when this non-secret non-black knowledge is a
stumbling block for so many newbies.

Still, things get fixed when someone fixes them.  It falls on the
person who needs them
fixed to do so, no matter whether you're talking about software or rain gutters.



From glyph at divmod.com  Tue Apr  1 00:29:11 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 06:29:11 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F1CA26.3010207@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
Message-ID: <20080401062911.21558.470848820.divmod.xquotient.9535@joule.divmod.com>

On 05:37 am, james at mansionfamily.plus.com wrote:
>glyph at divmod.com wrote:

>There's no point giving a commitment to doing more than discussing 
>implementation approaches. With the
>best will in the world its unlikely to get to the top of my pile and 
>there's no point living a fantasy.

I know the feeling.
>I do need to understand how limited the current implementation is 
>though.

It seems you've figured out the limitations at this point.
>The curse of volunteer-ware, I guess.  Understandable, but a shame in 
>some ways.

A few months ago, I would have just said "Oh well", but now, you can do 
something about it!  If you don't have the spare time to contribute an 
implementation, the Twisted project can now accept tax-deductible 
donations by way of the Software Freedom Conservancy: you'll notice a 
Google Checkout link on the front page of twistedmatrix.com.  We plan to 
have most of this money go directly to funding development, so not 
everything will necessarily be volunteer effort after that.



From mailing_lists at evotex.ch  Tue Apr  1 00:36:05 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 08:36:05 +0200
Subject: [Twisted-Python] Event dispatcher
Message-ID: <47F1D7D5.3090009@evotex.ch>

Hello,

I was searching for an event dispatching mechanism in twisted and I cam 
upon this :

http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py

but apparently it's being depreciated. There is no mention of what 
replaces it though, does someone know? Is there no replacement? If so, 
that must mean that there is a better way of doing things, can someone 
please tell me how?

Thank you,
Gabriel



From sipickles at hotmail.com  Tue Apr  1 00:45:24 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 01 Apr 2008 07:45:24 +0100
Subject: [Twisted-Python] Correct way to handle errors of connectTCP
In-Reply-To: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>
References: <20080331191406.6859.651055450.divmod.quotient.24809@ohm>
Message-ID: <BAY114-DAV1103403AA0062FDCEF399CBEF50@phx.gbl>



Jean-Paul Calderone wrote:
> On Mon, 31 Mar 2008 19:59:46 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I expected reactor.connectTCP to return a deferred. That would have 
>> been nice, since callbacks would have handled the outcome.
>>
>> So how to I handle failure with it?
>
> ClientFactory.clientConnectionFailed will be called if the connection
> attempt fails for some reason.
>
> Jean-Paul
Doh! :)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

-- 
Linux Counter: User# 424693 






From tdickenson at geminidataloggers.com  Tue Apr  1 01:08:31 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Tue, 01 Apr 2008 08:08:31 +0100
Subject: [Twisted-Python] Re: win 32 reactor
References: <47F11119.3040501@evotex.ch>
	<20080331165542.6859.849658278.divmod.quotient.24782@ohm>
Message-ID: <fssn1g$492$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> Gabriel Rossetti wrote:
>>Is there a way to use
>>the supplied win32 reactors (there are three I think) or do I have to
>>write one myself? Could someone please point me in the right direction?
> 
> The three reactors you're probably referring to are selectreactor,
> win32er, and IOCP reactor.

The problem on Windows is that there can only be one event loop running at
one time, but every library wants supply its own. This seem to be true for
the code Gabriel posted, and is certainly true of the reactors JP
mentioned, plus anything as ordinary as COM, the win32 MessageBox function,
or resizing a window!

This leads to a problem where your application will receive no twisted
events while your window is being resized, or a message box is visible.

IMO the best way to integrate twisted on win32 involves one of the threaded
reactors. This runs the select loop (or WFMO loop) in a separate thread,
then uses PostMessage to wake up your main thread for it to handle the
network events inside a message handler. For your application code this all
still looks like a single threaded model.

I hope this helps,




From mailing_lists at evotex.ch  Tue Apr  1 01:10:31 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:10:31 +0200
Subject: [Twisted-Python] no more zope.interface in the current windows
	release of twisted?
Message-ID: <47F1DFE7.1030209@evotex.ch>

Hello,

I wanted to test my app in windows, but twisted can't find 
zope.interface. I searched, and it isn't installed, is this an error or 
is it wanted? Can I just download the needed zope stuff without having 
to get all of zope?

Thanks,
Gabriel



From mailing_lists at evotex.ch  Tue Apr  1 01:12:34 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:12:34 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1D7D5.3090009@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>
Message-ID: <47F1E062.3020302@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I was searching for an event dispatching mechanism in twisted and I 
> cam upon this :
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>
> but apparently it's being depreciated. There is no mention of what 
> replaces it though, does someone know? Is there no replacement? If so, 
> that must mean that there is a better way of doing things, can someone 
> please tell me how?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Oh, I just saw that we should create our own event dispatcher mechanism. 
Why was it removed? Isn't it better that we all share one than recreate 
on every time?

Gabriel



From mailing_lists at evotex.ch  Tue Apr  1 01:22:49 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:22:49 +0200
Subject: [Twisted-Python] no more zope.interface in the current windows
	release of twisted?
In-Reply-To: <47F1DFE7.1030209@evotex.ch>
References: <47F1DFE7.1030209@evotex.ch>
Message-ID: <47F1E2C9.6000509@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I wanted to test my app in windows, but twisted can't find 
> zope.interface. I searched, and it isn't installed, is this an error 
> or is it wanted? Can I just download the needed zope stuff without 
> having to get all of zope?
>
> Thanks,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Ok, I just got an earlier post concerning this, sorry (and thanks for 
the answer weizi)



From andrew-twisted at puzzling.org  Tue Apr  1 01:40:05 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 Apr 2008 18:40:05 +1100
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1E062.3020302@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
Message-ID: <20080401074005.GN6245@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> Oh, I just saw that we should create our own event dispatcher mechanism. 
> Why was it removed? Isn't it better that we all share one than recreate on 
> every time?

The short answer is that we're sharing one already, and it's called "Python" ;)

-Andrew.




From mailing_lists at evotex.ch  Tue Apr  1 01:54:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 01 Apr 2008 09:54:12 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <20080401074005.GN6245@steerpike.home.puzzling.org>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
	<20080401074005.GN6245@steerpike.home.puzzling.org>
Message-ID: <47F1EA24.4020200@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
> [...]
>   
>> Oh, I just saw that we should create our own event dispatcher mechanism. 
>> Why was it removed? Isn't it better that we all share one than recreate on 
>> every time?
>>     
>
> The short answer is that we're sharing one already, and it's called "Python" ;)
>
> -Andrew.
>
>
>
>   
fair enough :-)

Gabriel




From twisted at ralphm.ik.nu  Tue Apr  1 01:55:12 2008
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 01 Apr 2008 09:55:12 +0200
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1E062.3020302@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>  <47F1E062.3020302@evotex.ch>
Message-ID: <1207036512.6825.1.camel@localhost>


On Tue, 2008-04-01 at 09:12 +0200, Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
> > Hello,
> >
> > I was searching for an event dispatching mechanism in twisted and I 
> > cam upon this :
> >
> > http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
> >
> > but apparently it's being depreciated. There is no mention of what 
> > replaces it though, does someone know? Is there no replacement? If so, 
> > that must mean that there is a better way of doing things, can someone 
> > please tell me how?

There is also an event dispatcher in twisted.words.xish.utility that
might be useful.

-- 
Groetjes,

ralphm




From glyph at divmod.com  Tue Apr  1 03:20:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 01 Apr 2008 09:20:15 -0000
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <47F1D7D5.3090009@evotex.ch>
References: <47F1D7D5.3090009@evotex.ch>
Message-ID: <20080401092015.21558.1926506092.divmod.xquotient.9547@joule.divmod.com>

On 06:36 am, mailing_lists at evotex.ch wrote:
>Hello,
>
>I was searching for an event dispatching mechanism in twisted and I cam 
>upon this :
>
>http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>
>but apparently it's being depreciated. There is no mention of what 
>replaces it though, does someone know? Is there no replacement? If so, 
>that must mean that there is a better way of doing things, can someone 
>please tell me how?

While various other ad-hoc event dispatchers exist throughout Twisted, 
the suggested replacement for t.p.dispatch is just writing your own 
function that calls functions.  Personally, I've found that attempting 
to write a totally generic event dispatch system inevitably results in 
extremely complex code whose purpose is unclear.

The one in xish which Ralph mentioned, for example, deals in part with 
XPath events; this is not a requirement that almost anything except the 
code for which it was written (twisted.words.protocols.jabber) will 
have.

That said, there are other packages which provide very, very flexible 
dispatch mechanisms, if you like that sort of thing.  One that I have 
heard a bunch of good things about is http://pylouie.org/ - again, I 
wouldn't recommend this personally, I'd look at your application and see 
what kind of events need dispatching and why, and write something geared 
towards that.  After all, the core of an "event dispatcher" is simply a 
dictionary lookup and a for loop, not something that's particularly 
onerous to repeat every so often.



From pbastov at gmail.com  Tue Apr  1 03:56:14 2008
From: pbastov at gmail.com (Pavel)
Date: Tue, 1 Apr 2008 15:56:14 +0600
Subject: [Twisted-Python] What is backlog?
Message-ID: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>

What is backlog parameter in twisted.application.internet.TCPServer constructor?

-- 
Good luck,

Pavel Bastov



From andreas at kostyrka.org  Tue Apr  1 04:05:43 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 12:05:43 +0200
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
Message-ID: <1207044343.8299.67.camel@localhost>

Just guessing it's the parameter that gets passed to the listen system
call. And that again tells the kernel how many connections to allow to
backlog.

Citing the listen manpage on Linux:

       The  backlog  argument  defines  the  maximum length to which the
queue of pending connections for sockd may grow.  If a connection
request arrives when the queue is full, the client may receive an
       error with an indication of ECONNREFUSED or, if the underlying
protocol supports retransmission, the request may be ignored so that a
later reattempt at connection succeeds.

Andreas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080401/5a18628b/attachment.sig>

From pbastov at gmail.com  Tue Apr  1 04:22:08 2008
From: pbastov at gmail.com (Pavel)
Date: Tue, 1 Apr 2008 16:22:08 +0600
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <1207044343.8299.67.camel@localhost>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
Message-ID: <eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>

Thanks for the info.

Do you have any ideas on what value to use under small, medium, and high load?

On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> Just guessing it's the parameter that gets passed to the listen system
>  call. And that again tells the kernel how many connections to allow to
>  backlog.
>
>  Citing the listen manpage on Linux:
>
>        The  backlog  argument  defines  the  maximum length to which the
>  queue of pending connections for sockd may grow.  If a connection
>  request arrives when the queue is full, the client may receive an
>        error with an indication of ECONNREFUSED or, if the underlying
>  protocol supports retransmission, the request may be ignored so that a
>  later reattempt at connection succeeds.
>
>  Andreas
>
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From sipickles at hotmail.com  Tue Apr  1 04:31:54 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 01 Apr 2008 11:31:54 +0100
Subject: [Twisted-Python] Event dispatcher
In-Reply-To: <1207036512.6825.1.camel@localhost>
References: <47F1D7D5.3090009@evotex.ch> <47F1E062.3020302@evotex.ch>
	<1207036512.6825.1.camel@localhost>
Message-ID: <BAY114-DAV54064FC33B3C9B2954928BEF50@phx.gbl>



Ralph Meijer wrote:
> On Tue, 2008-04-01 at 09:12 +0200, Gabriel Rossetti wrote:
>   
>> Gabriel Rossetti wrote:
>>     
>>> Hello,
>>>
>>> I was searching for an event dispatching mechanism in twisted and I 
>>> cam upon this :
>>>
>>> http://twistedmatrix.com/trac/browser/trunk/twisted/python/dispatch.py
>>>
>>> but apparently it's being depreciated. There is no mention of what 
>>> replaces it though, does someone know? Is there no replacement? If so, 
>>> that must mean that there is a better way of doing things, can someone 
>>> please tell me how?
>>>       
>
> There is also an event dispatcher in twisted.words.xish.utility that
> might be useful.
>
>   

I'm using twisted.words.xish.utility.EventDispatcher. Really easy, once 
I got the syntax right (to ignore all the xpath stuff):

ed = EventDispatcher()
ed.addObserver("//event/objectEvent", callbackFunc)

ed.dispatch("event message", "//event/objectEvent")

ed.removeObserver("//event/objectEvent", callbackFunc)


Si

-- 
Linux Counter: User# 424693 






From lists at collab.nl  Tue Apr  1 05:42:03 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Tue, 1 Apr 2008 13:42:03 +0200
Subject: =?GB2312?Q?Re:_=B4=F0=B8=B4:_[Twisted-Python]_Twisted_8.0.1_for_?=
	=?GB2312?Q?Python_2.5_for_Windows_is=09missing_Zope?=
In-Reply-To: <018601c893bb$9198b250$b4ca16f0$@com>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
Message-ID: <B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>

Shouldn't this be installed automatically now that Twisted is  
easy_installable?

Thijs

On Apr 1, 2008, at 7:45 AM, weizi wrote:

> Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents
>
>
>
>> -----邮件原件-----
>> 发件人: twisted-python-bounces at twistedmatrix.com
>> [mailto:twisted-python-bounces at twistedmatrix.com] 代表 Sergey A.
>> Lipnevich
>> 发送时间: 2008年4月1日 11:03
>> 收件人: twisted-python at twistedmatrix.com
>> 主题: [Twisted-Python] Twisted 8.0.1  
>> for Python 2.5 for Windows is missing
>> Zope
>>
>> Hi,
>>
>> I'm sorry if I'm posting to the wrong list. I tried upgrading  
>> Twisted from
> 2.5.0
>> to 8.0.1 on Windows with Python 2.5.2, but it doesn't work due to  
>> missing
>> dependency: zope.interface (I'm trying to run Buildbot on it, if that
> matters).
>> Upon checking into this 2.5.0 installer for Windows had Zope modules
>> included, but 8.0.1 doesn't. I also can't find relatively recent  
>> pre-built
>> zope.interface for Windows, and don't have Visual Studio 2003  
>> installed to
>> build from source, to check if installing zope.interface would fix  
>> the
> problem.
>> Is it possible to include relevant Zope modules back into Windows
> installer?
>> Thank you!
>>
>> Sergey.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080401/ad58f978/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20080401/ad58f978/attachment.sig>

From christopher.zorn at gmail.com  Tue Apr  1 07:09:56 2008
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Tue, 1 Apr 2008 09:09:56 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
Message-ID: <149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>

On Mon, Mar 31, 2008 at 12:32 PM, Nathan <nathan.stocks at gmail.com> wrote:

> Is there any noticeable difference between psycopg (version 2) or
> pygresql (version 3.8.1) when used with twisted.enterprise to connect
> to postgresql?
>

I have found psycopg 2 to be faster. I do not have the data anymore but I
use it in production and works great.


>
> Pygresql hasn't been updated since June 2006, but maybe that's just
> because it's stable (?) -- I haven't used it at all, ever.
>
> Psycopg2 has had more recent releases, but I've experience some bugs
> with it in (non-twisted) threaded code and the web site has been down
> for weeks (months?), so I thought it wise to explore alternatives...


What bugs are you experiencing? What version are you using? We use
psycopg2-2.0.6svn in production and has been fine.


>
>
> Or is there a better third alternative???
>
> Also, we're considering turning on SSL client-certificate verification
> on our postgresql installation -- does anyone know whether either of
> the above support SSL client certificates?
>

I do not know if psycopg supports this.


>
> Opinions?
>


If you run psycopg you may want to use the patch in ticket #2488 it helps
performance.

http://twistedmatrix.com/trac/ticket/2488


> ~ Nathan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080401/846f28a2/attachment.html>

From andreas at kostyrka.org  Tue Apr  1 07:11:11 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 15:11:11 +0200
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
	<eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
Message-ID: <1207055471.8299.73.camel@localhost>

Benchmark/Test/Google? Sorry, no idea ;)

Andreas

Am Dienstag, den 01.04.2008, 16:22 +0600 schrieb Pavel:
> Thanks for the info.
> 
> Do you have any ideas on what value to use under small, medium, and high load?
> 
> On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> > Just guessing it's the parameter that gets passed to the listen system
> >  call. And that again tells the kernel how many connections to allow to
> >  backlog.
> >
> >  Citing the listen manpage on Linux:
> >
> >        The  backlog  argument  defines  the  maximum length to which the
> >  queue of pending connections for sockd may grow.  If a connection
> >  request arrives when the queue is full, the client may receive an
> >        error with an indication of ECONNREFUSED or, if the underlying
> >  protocol supports retransmission, the request may be ignored so that a
> >  later reattempt at connection succeeds.
> >
> >  Andreas
> >
> >
> > _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> 
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080401/fb440edd/attachment.sig>

From andreas at kostyrka.org  Tue Apr  1 13:02:18 2008
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 01 Apr 2008 21:02:18 +0200
Subject: [Twisted-Python] Re: [Stackless] That darn GIL rant again...
In-Reply-To: <47F239C7.7030103@vintech.bg>
References: <BAY114-DAV71A467FB6616EE38B39C3BEF90@phx.gbl>
	<9BD690EC-A169-4B8D-8C12-9B65E7D7A005@maya.com>
	<47F239C7.7030103@vintech.bg>
Message-ID: <1207076538.8299.81.camel@localhost>


Am Dienstag, den 01.04.2008, 16:33 +0300 schrieb niki:

> I disagree with point 2. "Explicit is better than implicit".
> Programmer must know where thread/process boundaries are and convey this 
> to the system. This knowledge very important in order to make all kind 
> of algorithmic decisions.

While explicit is usually better then implicit, in the area of threading
Python follows the fully implicit path. The GIL is nothing else but a
completely magic way to make Python threadsafe. Furthermore, any
solution around this must take this automatic safety into account.

Andreas

> 
> Niki Spahiev
> 
> 
> _______________________________________________
> Stackless mailing list
> Stackless at stackless.com
> http://www.stackless.com/mailman/listinfo/stackless
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
URL: </pipermail/twisted-python/attachments/20080401/bd9c8a65/attachment.sig>

From eburus at gmail.com  Tue Apr  1 13:55:06 2008
From: eburus at gmail.com (Burus Gmail)
Date: Tue, 01 Apr 2008 23:55:06 +0400
Subject: [Twisted-Python] Is psycopg or pygresql better
	with	twisted.enterprise?
In-Reply-To: <149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
Message-ID: <47F2931A.5020809@gmail.com>

We using psycopg1 for the data synchronization between MySQL\PostgreSQL,
MSSQL\PostgreSQL and etc...

psycopg2 is "faster" but very buggy in the 256/24/7 systems. We use
older version and it better choose for us,
stability is in the priority.

Christopher Zorn wrote:
> On Mon, Mar 31, 2008 at 12:32 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
>   
>> Is there any noticeable difference between psycopg (version 2) or
>> pygresql (version 3.8.1) when used with twisted.enterprise to connect
>> to postgresql?
>>
>>     
>
> I have found psycopg 2 to be faster. I do not have the data anymore but I
> use it in production and works great.
>
>
>   
>> Pygresql hasn't been updated since June 2006, but maybe that's just
>> because it's stable (?) -- I haven't used it at all, ever.
>>
>> Psycopg2 has had more recent releases, but I've experience some bugs
>> with it in (non-twisted) threaded code and the web site has been down
>> for weeks (months?), so I thought it wise to explore alternatives...
>>     
>
>
> What bugs are you experiencing? What version are you using? We use
> psycopg2-2.0.6svn in production and has been fine.
>
>
>   
>> Or is there a better third alternative???
>>
>> Also, we're considering turning on SSL client-certificate verification
>> on our postgresql installation -- does anyone know whether either of
>> the above support SSL client certificates?
>>
>>     
>
> I do not know if psycopg supports this.
>
>
>   
>> Opinions?
>>
>>     
>
>
> If you run psycopg you may want to use the patch in ticket #2488 it helps
> performance.
>
> http://twistedmatrix.com/trac/ticket/2488
>
>
>   
>> ~ Nathan
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>     
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080401/d57b2d1c/attachment.html>

From nathan.stocks at gmail.com  Tue Apr  1 16:00:39 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 16:00:39 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<368574aa0803312118k27940ccxe2369eea95aa0551@mail.gmail.com>
Message-ID: <96c9d6a80804011500i3893bf51t7d7b610f9071487c@mail.gmail.com>

On Mon, Mar 31, 2008 at 10:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  Yeah, I've experienced some performance issues with pyglet's
>  app.runtime (maybe Linux-specific or something).  Given the time, I'll
>  submit a meaningful bug report concerning this.  Regarding integration
>  with Twisted, though, I think the best thing to do (for now) is to
>  just ignore pyglet.app.runtime and write a pump function, roughly:
>
>  def pump():
>     dt = clock.tick(True) # polling tick
>     w.clear()
>     w.dispatch_events()
>     ...
>     w.flip()
>     if w.has_exit and reactor.running:
>         reactor.stop()
>
>  Be sure to call clock.tick(True) - since clock.tick will otherwise
>  block.  The next thing to do is customize clock where appropriate -
>  that is, to used Twisted's scheduling functions.  Coincidentally, I
>  did this about 45 minutes ago for a project I'm working on:
>
>  http://hg.enterthefoo.com/roboto/file/db931f29b98e/roboto/clock.py
>
>  Beware - the above is half-baked and written under the influence of
>  Hobgoblin Dark English Ale.
>
>  Finally, you need schedule the pump function.  To do it as fast as possible:
>
>     from twisted.internet import task
>     gameLoop = task.LoopingCall(pump)
>     gameLoop.start(0., True)
>     reactor.run()
>
>  Or with a set framerate:
>    ...
>    gameLoop.start(1/60., True)

Thanks for the great advice.  I implemented it all and it runs, but
unfortunately there was no noticeable change (for better or worse) to
pyglet's performance.  I'm currently working on setting up a
stripped-down twisted+pyglet example that reproduces the problem.
I'll post it when I get it up and running.

~ Nathan



From nathan.stocks at gmail.com  Tue Apr  1 16:08:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 16:08:35 -0600
Subject: [Twisted-Python] Other ways to integrate foreign event loops?
In-Reply-To: <20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
Message-ID: <96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>

On Mon, Mar 31, 2008 at 8:17 PM,  <glyph at divmod.com> wrote:
>  Twisted's job is to run the main loop; it's best just to let it do that.
>  If Pyglet slowed down, it would be best to examine what's gone wrong
>  with Pyglet and simply submit a fix for that.

Understood.  Thanks for the guidance.  I'm working on example code
that reproduces the problem.

>  We spoke to Richard Jones about Pyglet/Twisted integration at Chris
>  Armstrong's excellent gaming+twisted openspace at PyCon, and I believe
>  that some future version of Pyglet will include Twisted integration.  Of
>  course, this is just a plan right now, not code, so perhaps your time
>  would be better spent contributing this feature to Pyglet, rather than
>  turning Twisted inside-out :).

I'm jealous.  I would have loved to go to PyCon.  I'm glad the
communication lines are open.

~ Nathan



From nathan.stocks at gmail.com  Tue Apr  1 17:19:42 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 1 Apr 2008 17:19:42 -0600
Subject: [Twisted-Python] Example code for problem with twisted+pyglet
Message-ID: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>

(I'm cross-posting this to the twisted and pyglet mailing lists, as
I've been actively discussing this with people on both lists)
----------------------------------

Problem:  When I add AMP with SSL with SSL-client certificates to
Pyglet 1.1 (svn trunk, actually) on OS X 10.5.2, pyglet goes from
drawing at a smooth 60fps (which is the limit I set) to an extremely
choppy low fps.  The problem started when I upgraded from Pyglet from
1.0 to 1.1.

Hardware:

MacBook Pro, Intel Core 2 Duo, 2.2Ghz, 2GB RAM, GeForce 8600M GT w/128MB VRAM

Software:

OS X 10.5.2 with Graphics Update
Apple-installed python 2.5.
Twisted 8.0.1 (installed package from
http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1_py2.5_osx10.5.pkg
-- export PYTHONPATH=/Library/Python/2.5/site-packages )
pyglet trunk (revision 1990, http://pyglet.googlecode.com/svn/trunk -
installed with 'sudo python setup.py install' )

To duplicate:

1) Download http://stocksfam.com/example.tar.bz2 and untar it with
"tar jxvf example.tar.bz2" which creates an example directory.
2) Open two terminals and change to the example directory.
3) Run "./server.py" in one terminal.  This sets up an AMP+SSL server.
4) Run "./client.py" in the other terminal.  The Pyglet+AMP+SSL client
will launch, and a Pyglet 1200x800 window will pop up with a gray log
window.
5) Click and drag the gray log window around.  Notice how extremely
choppy it is.  I don't know how to debug it!  Under Pyglet 1.0, there
was no choppiness -- it stayed a smooth 60.0fps.

What can be done to debug this?  If I knew where to start, I'd try to
find the problem myself, but I'm not very familiar with the internals
of twisted or pyglet, and I'm also not very familiar with debugging
python code beyond using print statements and common sense...

~ Nathan



From sergey at optimaltec.com  Tue Apr  1 20:46:03 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Tue, 01 Apr 2008 22:46:03 -0400
Subject: =?GB2312?B?tPC4tDogW1R3aXN0ZWQtUHl0aG9uXSBUd2lzdGVkIDguMC4xIA==?=
	=?GB2312?B?Zm9yIFB5dGhvbiAyLjUgZm9yIFdpbmRvd3MgaXMgbWlzc2luZyBab3Bl?=
In-Reply-To: <018601c893bb$9198b250$b4ca16f0$@com>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
Message-ID: <fsus19$ll2$1@ger.gmane.org>

weizi wrote:
> Down from http://www.zope.org/Members/saffe/zope_interface/folder_contents

Thank you! I couldn't find that via search. Is there going to be 3.4.1
there too :-)?

Sergey.




From sergey at optimaltec.com  Tue Apr  1 20:48:07 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Tue, 01 Apr 2008 22:48:07 -0400
Subject: [Twisted-Python] Re:
 ??:  Twisted 8.0.1 for Python 2.5 for Windows is missing Zope
In-Reply-To: <B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
Message-ID: <fsus55$ll2$2@ger.gmane.org>

Thijs Triemstra | Collab wrote:
> Shouldn't this be installed automatically now that Twisted is
> easy_installable? 

Most likely, but zope.interface on Windows would require Visual Studio
2003. I tried easy_install but couldn't complete it.
Thank you,

Sergey.




From pbastov at gmail.com  Tue Apr  1 21:48:38 2008
From: pbastov at gmail.com (Pavel)
Date: Wed, 2 Apr 2008 09:48:38 +0600
Subject: [Twisted-Python] What is backlog?
In-Reply-To: <1207055471.8299.73.camel@localhost>
References: <eaf39e680804010256j4e810cfeu2efb51fb019525ec@mail.gmail.com>
	<1207044343.8299.67.camel@localhost>
	<eaf39e680804010322k3d403e47yf1ee0483c481b4a0@mail.gmail.com>
	<1207055471.8299.73.camel@localhost>
Message-ID: <eaf39e680804012048o53c2c860v148f2a31313a2e1f@mail.gmail.com>

Thanks anyway :)

On Tue, Apr 1, 2008 at 7:11 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
> Benchmark/Test/Google? Sorry, no idea ;)
>
>  Andreas
>
>  Am Dienstag, den 01.04.2008, 16:22 +0600 schrieb Pavel:
>
>
> > Thanks for the info.
>  >
>  > Do you have any ideas on what value to use under small, medium, and high load?
>  >
>  > On Tue, Apr 1, 2008 at 4:05 PM, Andreas Kostyrka <andreas at kostyrka.org> wrote:
>  > > Just guessing it's the parameter that gets passed to the listen system
>  > >  call. And that again tells the kernel how many connections to allow to
>  > >  backlog.
>  > >
>  > >  Citing the listen manpage on Linux:
>  > >
>  > >        The  backlog  argument  defines  the  maximum length to which the
>  > >  queue of pending connections for sockd may grow.  If a connection
>  > >  request arrives when the queue is full, the client may receive an
>  > >        error with an indication of ECONNREFUSED or, if the underlying
>  > >  protocol supports retransmission, the request may be ignored so that a
>  > >  later reattempt at connection succeeds.
>  > >
>  > >  Andreas
>  > >
>  > >
>  > > _______________________________________________
>  > >  Twisted-Python mailing list
>  > >  Twisted-Python at twistedmatrix.com
>  > >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  > >
>  > >
>  >
>  >
>  >
>
> _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Good luck,

Pavel Bastov
xooChat Team Leader
http://www.xoochat.com/



From zooko at zooko.com  Wed Apr  2 05:38:43 2008
From: zooko at zooko.com (zooko)
Date: Wed, 2 Apr 2008 05:38:43 -0600
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <fsus55$ll2$2@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
Message-ID: <93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>

> Most likely, but zope.interface on Windows would require Visual Studio
> 2003. I tried easy_install but couldn't complete it.

The error message that says "Python was built with Visual Studio  
version 7.1, and extensions need to be built with the same version of  
the compiler" isn't true.

Install gcc (I recommend cygwin, but mingw will also work), and put  
the following stanza into your distutils config file:

[build]
compiler=mingw32

(You put "compiler=mingw32" regardless of whether you've installed  
the cygwin version of gcc or the mingw version of gcc.)

After that, builds will just work.  In particular "easy_install  
zope.interface" works, and if you don't have zope.interface then when  
you "easy_install twisted" it will automatically install zope.interface.

By the way, building extensions with mingw32 can in theory cause  
crashes if the extensions pass C++ iostreams back and forth with the  
main interpreter.  I've never experienced such a thing myself and I'm  
not entirely sure that it is even possible, since I doubt that the  
main interpreter uses iostreams.  Nonetheless, this is apparently one  
of the reasons why the Python people don't standardize on gcc, as  
described in this message:

http://mail.python.org/pipermail/distutils-sig/2007-September/ 
008255.html

Regards,

Zooko




From sipickles at hotmail.com  Wed Apr  2 06:33:58 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 02 Apr 2008 13:33:58 +0100
Subject: [Twisted-Python] Lost connection on PbServerFactory
Message-ID: <BAY114-DAV7EE355697E38ACA1DC737BEF40@phx.gbl>

Hi,

I notice PbServerFactory has a clientConnectionMade method, but no 
clientConnectionLost.

What is the correct way for a pb server to know a connection is down?

Many thanks

Simon

-- 
Linux Counter: User# 424693 






From exarkun at divmod.com  Wed Apr  2 06:50:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Apr 2008 07:50:08 -0500
Subject: [Twisted-Python] Lost connection on PbServerFactory
In-Reply-To: <BAY114-DAV7EE355697E38ACA1DC737BEF40@phx.gbl>
Message-ID: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>

On Wed, 02 Apr 2008 13:33:58 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I notice PbServerFactory has a clientConnectionMade method, but no 
>clientConnectionLost.
>
>What is the correct way for a pb server to know a connection is down?
>
>Many thanks

Broker and RemoteReference both have a `notifyOnDisconnect´ method which can
be used for this.

Jean-Paul



From sipickles at hotmail.com  Wed Apr  2 06:58:15 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 02 Apr 2008 13:58:15 +0100
Subject: [Twisted-Python] Lost connection on PbServerFactory
In-Reply-To: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>
References: <20080402125008.6859.1777380769.divmod.quotient.25167@ohm>
Message-ID: <BAY114-DAV18F075AFF7A4166421E8BBEF40@phx.gbl>



Jean-Paul Calderone wrote:
> On Wed, 02 Apr 2008 13:33:58 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I notice PbServerFactory has a clientConnectionMade method, but no 
>> clientConnectionLost.
>>
>> What is the correct way for a pb server to know a connection is down?
>>
>> Many thanks
>
> Broker and RemoteReference both have a `notifyOnDisconnect´ method 
> which can
> be used for this.
>
> Jean-Paul
Aww, you beat me to the reply - I'd _actually_ worked it out for myself 
- a milestone in my twisted journey!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

-- 
Linux Counter: User# 424693 






From nathan.stocks at gmail.com  Wed Apr  2 10:26:54 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 10:26:54 -0600
Subject: [Twisted-Python] Fwd: Example code for problem with twisted+pyglet
In-Reply-To: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>
References: <96c9d6a80804011619r617aafb7ve0275a1997f15723@mail.gmail.com>
Message-ID: <96c9d6a80804020926i33dde9c7w6b5e94979ba3f408@mail.gmail.com>

Oh, and despite the date on the original message, this is NOT an April
Fool's day joke.  Just thought I should clarify that!

I should also mention that a separate (personal) project of mine that
uses twisted/AMP+pyglet but NOT SSL does not display any performance
degradation.  Weird.

~ Nathan


---------- Forwarded message ----------
From: Nathan <nathan.stocks at gmail.com>
Date: Tue, Apr 1, 2008 at 5:19 PM
Subject: Example code for problem with twisted+pyglet
To: Twisted general discussion <twisted-python at twistedmatrix.com>,
pyglet-users at googlegroups.com


(I'm cross-posting this to the twisted and pyglet mailing lists, as
 I've been actively discussing this with people on both lists)
 ----------------------------------

 Problem:  When I add AMP with SSL with SSL-client certificates to
 Pyglet 1.1 (svn trunk, actually) on OS X 10.5.2, pyglet goes from
 drawing at a smooth 60fps (which is the limit I set) to an extremely
 choppy low fps.  The problem started when I upgraded from Pyglet from
 1.0 to 1.1.

 Hardware:

 MacBook Pro, Intel Core 2 Duo, 2.2Ghz, 2GB RAM, GeForce 8600M GT w/128MB VRAM

 Software:

 OS X 10.5.2 with Graphics Update
 Apple-installed python 2.5.
 Twisted 8.0.1 (installed package from
 http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1_py2.5_osx10.5.pkg
 -- export PYTHONPATH=/Library/Python/2.5/site-packages )
 pyglet trunk (revision 1990, http://pyglet.googlecode.com/svn/trunk -
 installed with 'sudo python setup.py install' )

 To duplicate:

 1) Download http://stocksfam.com/example.tar.bz2 and untar it with
 "tar jxvf example.tar.bz2" which creates an example directory.
 2) Open two terminals and change to the example directory.
 3) Run "./server.py" in one terminal.  This sets up an AMP+SSL server.
 4) Run "./client.py" in the other terminal.  The Pyglet+AMP+SSL client
 will launch, and a Pyglet 1200x800 window will pop up with a gray log
 window.
 5) Click and drag the gray log window around.  Notice how extremely
 choppy it is.  I don't know how to debug it!  Under Pyglet 1.0, there
 was no choppiness -- it stayed a smooth 60.0fps.

 What can be done to debug this?  If I knew where to start, I'd try to
 find the problem myself, but I'm not very familiar with the internals
 of twisted or pyglet, and I'm also not very familiar with debugging
 python code beyond using print statements and common sense...

 ~ Nathan



From dschein at fsinnovations.net  Wed Apr  2 11:58:17 2008
From: dschein at fsinnovations.net (David S.)
Date: Wed, 02 Apr 2008 13:58:17 -0400
Subject: [Twisted-Python] ldaptor with Twisted 8.0.1
Message-ID: <47F3C939.2050300@fsinnovations.net>

To get ldaptor running with Twisted 8.0.1, I edited 
ldaptor/interfaces.py and replaced references to 
twisted.python.components.Interface with zope.interface.Interface and 
everything seems fine.

Any gotchas I might be missing?  Anyone else using ldaptor with the 
latest Twisted release?

Thanks for any help.

Peace,
David S.



From jcd at sdf.lonestar.org  Wed Apr  2 12:49:28 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Wed, 02 Apr 2008 14:49:28 -0400
Subject: [Twisted-Python] Is psycopg or pygresql better
	with	twisted.enterprise?
In-Reply-To: <47F2931A.5020809@gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
	<47F2931A.5020809@gmail.com>
Message-ID: <1207162168.7981.21.camel@aalcdl07.lib.unc.edu>

On Tue, 2008-04-01 at 23:55 +0400, Burus Gmail wrote:
> We using psycopg1 for the data synchronization between MySQL
> \PostgreSQL, MSSQL\PostgreSQL and etc...
> 
> psycopg2 is "faster" but very buggy in the 256/24/7 systems. 

You mean in systems that are down 109 days out of the year? :)






From nathan.stocks at gmail.com  Wed Apr  2 13:05:49 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 13:05:49 -0600
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
Message-ID: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>

On my AMP server I'm using twisted.enterprise to query a postgres
database and do inserts.  I'd like to return whether the insert
succeeded or failed as the response to the AMP responder function --
is there an established pattern for doing things like that?

So basically, with the amp command:

class MyInsert(amp.Command):
   arguments = [('an_int',amp.Integer())]
   response = [('succeeded',amp.Boolean())]

....on the client I do:

amp_client.callRemote(MyInsert, an_int)

...on the server:

@MyInsert.responder
def my_insert(self, an_int):
   qry_def = self.dbpool.runOperation("insert into mytable the_number
values (%d);" % an_int)
   qry_def.addCallback(self._my_insert_ok)
   qry_def.addErrback(self._my_insert_err)
# Here's the AMP response...but I don't KNOW whether it succeeded yet!
# ...but I've _got_ to return a response dict  from this function or
AMP gives an error!
   return {'succeeded':True}

def _my_insert_ok(self, none_object):
   print "It succeeded"

def _my_insert_err(self, failure_object):
   print "It failed with: %s" % failure_object.getErrorMessage()

~ Nathan



From exarkun at divmod.com  Wed Apr  2 13:10:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Apr 2008 14:10:05 -0500
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
In-Reply-To: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>
Message-ID: <20080402191005.6859.551757623.divmod.quotient.25237@ohm>

On Wed, 2 Apr 2008 13:05:49 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>On my AMP server I'm using twisted.enterprise to query a postgres
>database and do inserts.  I'd like to return whether the insert
>succeeded or failed as the response to the AMP responder function --
>is there an established pattern for doing things like that?

If a responder returns a Deferred, then the result of the Deferred is
taken as the response to the request.

>
>So basically, with the amp command:
>
>class MyInsert(amp.Command):
>   arguments = [('an_int',amp.Integer())]
>   response = [('succeeded',amp.Boolean())]
>
>....on the client I do:
>
>amp_client.callRemote(MyInsert, an_int)
>
>...on the server:
>
>@MyInsert.responder
>def my_insert(self, an_int):
>   qry_def = self.dbpool.runOperation("insert into mytable the_number
>values (%d);" % an_int)
>   qry_def.addCallback(self._my_insert_ok)
>   qry_def.addErrback(self._my_insert_err)
># Here's the AMP response...but I don't KNOW whether it succeeded yet!
># ...but I've _got_ to return a response dict  from this function or
>AMP gives an error!
>   return {'succeeded':True}

Don't return that dict here.  Return qry_def, instead.  Make your callbacks
return dicts or raise exceptions to indicate the result.

Jean-Paul



From nathan.stocks at gmail.com  Wed Apr  2 13:24:45 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 2 Apr 2008 13:24:45 -0600
Subject: [Twisted-Python] How to return a meaningful response to an AMP
	command when deferreds are involved?
In-Reply-To: <20080402191005.6859.551757623.divmod.quotient.25237@ohm>
References: <96c9d6a80804021205o73d0d8c7p1904472daf124bb9@mail.gmail.com>
	<20080402191005.6859.551757623.divmod.quotient.25237@ohm>
Message-ID: <96c9d6a80804021224p4ebe3a35w4191d62b8c490383@mail.gmail.com>

On Wed, Apr 2, 2008 at 1:10 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 2 Apr 2008 13:05:49 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>
> > On my AMP server I'm using twisted.enterprise to query a postgres
> > database and do inserts.  I'd like to return whether the insert
> > succeeded or failed as the response to the AMP responder function --
> > is there an established pattern for doing things like that?
> >
>
>  If a responder returns a Deferred, then the result of the Deferred is
>  taken as the response to the request.

Aha!  Things are falling into place.  I've run into this problems
several times, and that's the piece that I had missed.  Thanks a
million!

/me needs to go read the docs on deferreds for a fourth time...

~ Nathan



From eburus at gmail.com  Wed Apr  2 13:40:14 2008
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 02 Apr 2008 23:40:14 +0400
Subject: [Twisted-Python] Is psycopg or pygresql
	better	with	twisted.enterprise?
In-Reply-To: <1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>	<47F2931A.5020809@gmail.com>
	<1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
Message-ID: <47F3E11E.4050801@gmail.com>

Yeap! It's from my favorite jokes. =)
With psycopg2 it's may be true.

J. Cliff Dyer wrote:
> On Tue, 2008-04-01 at 23:55 +0400, Burus Gmail wrote:
>   
>> We using psycopg1 for the data synchronization between MySQL
>> \PostgreSQL, MSSQL\PostgreSQL and etc...
>>
>> psycopg2 is "faster" but very buggy in the 256/24/7 systems. 
>>     
>
> You mean in systems that are down 109 days out of the year? :)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   

-- 
"""
Best regards, Alexander Burtsev. 
Web Development Department, TV Channel 'Sport'

http://sportbox.ru
http://burus.org
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080402/eef780c4/attachment.html>

From james at mansionfamily.plus.com  Wed Apr  2 16:24:32 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Wed, 02 Apr 2008 23:24:32 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
Message-ID: <47F407A0.6090209@mansionfamily.plus.com>

Cory Dodt wrote:
> Resolving a bug includes gathering requirements and building
> consensus, but building
> consensus goes much faster if there's an implementation handy to
> discuss.  Even a
> quick hack is useful as a discussion point.  A very common scenario is
> that a quick
> hack is eventually refined into a unit tested, UQDS-vetted
> implementation.  However,
> a hand-waving discussion never is.
>   
Call me old-fashioned, but what you are describing is the difference 
between design-free-hacking
followed by iteration, and actually designing something.  You know, all 
that waterfall stuff. I know,
its not fashionable right now.

Seriously, though, its too late at the review-of-nearly-working-code. 
There's too much
pressure to incrementally fix it, and at least one participant will have 
a sense of ownership
in something that might be a country mile from the best solution.

I know its easier to design when you can meet each other and use a white 
board or
just scribble on paper, but its still entirely possible to use words.

So - I disagree.  I'm quite happy to hand-wave, and to listen to my 
colleagues'
hand-waving. If it communicates design ideas - and requirements - before 
any wasteful
coding, that's good. Honest.

> Still, things get fixed when someone fixes them.  It falls on the
> person who needs them
> fixed to do so, no matter whether you're talking about software or rain gutters.
>   
Hmm.  You sure it doesn't happen after the prioritisation meeting and we 
all get our
steer?

James




From phil at bubblehouse.org  Wed Apr  2 17:15:37 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 02 Apr 2008 19:15:37 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F407A0.6090209@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
Message-ID: <7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>


On Apr 2, 2008, at 6:24 PM, James Mansion wrote:
> Cory Dodt wrote:
>> Resolving a bug includes gathering requirements and building
>> consensus, but building
>> consensus goes much faster if there's an implementation handy to
>> discuss.  Even a
>> quick hack is useful as a discussion point.  A very common  
>> scenario is
>> that a quick
>> hack is eventually refined into a unit tested, UQDS-vetted
>> implementation.  However,
>> a hand-waving discussion never is.
>>
> Call me old-fashioned, but what you are describing is the  
> difference between design-free-hacking
> followed by iteration, and actually designing something.  You know,  
> all that waterfall stuff. I know,
> its not fashionable right now.
>
> Seriously, though, its too late at the review-of-nearly-working- 
> code. There's too much
> pressure to incrementally fix it, and at least one participant will  
> have a sense of ownership
> in something that might be a country mile from the best solution.
>
> I know its easier to design when you can meet each other and use a  
> white board or
> just scribble on paper, but its still entirely possible to use words.
>
> So - I disagree.  I'm quite happy to hand-wave, and to listen to my  
> colleagues'
> hand-waving. If it communicates design ideas - and requirements -  
> before any wasteful
> coding, that's good. Honest.
>
>> Still, things get fixed when someone fixes them.  It falls on the
>> person who needs them
>> fixed to do so, no matter whether you're talking about software or  
>> rain gutters.
>>
> Hmm.  You sure it doesn't happen after the prioritisation meeting  
> and we all get our
> steer?

Perhaps I'm misinterpreting your meaning, but I think your attitude  
is way out of line.

Free software is possibly the only scenario where you truly get more  
than you pay for, but that doesn't mean it comes without a cost.

One cost is that the project and its community dictate their own  
development process, and one person has little or no ability to  
change that inertia. It is the right, possibly even the purpose of  
the community to grow however it will.

I get just as frustrated as the next guy when I need something fixed  
RFN, but that's the price you pay in exchange for a huge library of  
high-quality code. For every time I've run into an issue with Twisted  
that the core devs were too busy to fix, there's 50 other times when  
Twisted has saved my ass.

Wasteful coding? Who do you think you're talking to here?

-phil



From glyph at divmod.com  Wed Apr  2 18:04:26 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 00:04:26 -0000
Subject: [Twisted-Python] win32 reactors
Message-ID: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>

On 10:24 pm, james at mansionfamily.plus.com wrote:
>Call me old-fashioned, but what you are describing is the difference 
>between design-free-hacking
>followed by iteration, and actually designing something.  You know, all 
>that waterfall stuff. I know,
>its not fashionable right now.

This argument is kind of pointless.  You can insult us by saying what 
we're doing isn't "real" design, or you can talk about what they do 
where you work, but the fact is that we do have some consensus around 
doing things a certain way here (iteratively).

Regardless of fashion, we do things a certain way when we work on 
Twisted; we'll continue to do something that way unless a major 
contributor has some serious suggestions about how things might be done 
better.  You're not going to become a major contributor and get that 
kind of influence just by complaining; since, by the fact that you're 
around and talking about Twisted here, *something* we did with our 
iterative process worked out right :).



From steve at holdenweb.com  Wed Apr  2 18:21:54 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 02 Apr 2008 20:21:54 -0400
Subject: [Twisted-Python] Re: win32 reactors
In-Reply-To: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>
References: <20080403000426.21558.1233410561.divmod.xquotient.9627@joule.divmod.com>
Message-ID: <ft17v7$p7v$2@ger.gmane.org>

glyph at divmod.com wrote:
> On 10:24 pm, james at mansionfamily.plus.com wrote:
>> Call me old-fashioned, but what you are describing is the difference 
>> between design-free-hacking
>> followed by iteration, and actually designing something.  You know, 
>> all that waterfall stuff. I know,
>> its not fashionable right now.
> 
> This argument is kind of pointless.  You can insult us by saying what 
> we're doing isn't "real" design, or you can talk about what they do 
> where you work, but the fact is that we do have some consensus around 
> doing things a certain way here (iteratively).
> 
> Regardless of fashion, we do things a certain way when we work on 
> Twisted; we'll continue to do something that way unless a major 
> contributor has some serious suggestions about how things might be done 
> better.  You're not going to become a major contributor and get that 
> kind of influence just by complaining; since, by the fact that you're 
> around and talking about Twisted here, *something* we did with our 
> iterative process worked out right :).

Yeah, but you were just lucky - it's not like you guys are clever or 
anything ... ;-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From sergey at optimaltec.com  Thu Apr  3 04:50:52 2008
From: sergey at optimaltec.com (Sergey A. Lipnevich)
Date: Thu, 03 Apr 2008 06:50:52 -0400
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
References: <fss8lj$uvs$1@ger.gmane.org>
	<018601c893bb$9198b250$b4ca16f0$@com>	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
Message-ID: <ft2cqb$ueh$1@ger.gmane.org>

zooko wrote:
>> Most likely, but zope.interface on Windows would require Visual Studio
>> 2003. I tried easy_install but couldn't complete it.
> 
> The error message that says "Python was built with Visual Studio version
> 7.1, and extensions need to be built with the same version of the
> compiler" isn't true.

My console message was explicitly about Visual Studio 2003 (probably
because it's Python 2.5), and the machine had Visual Studio 2005 (and
2008) installed so the message was not without merit ;-).

> Install gcc (I recommend cygwin, but mingw will also work), and put the
> following stanza into your distutils config file:

Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
extensions in the same process?

> 
> [build]
> compiler=mingw32
> 
> (You put "compiler=mingw32" regardless of whether you've installed the
> cygwin version of gcc or the mingw version of gcc.)

I can do "python setup.py build -c mingw32," even better :-).

Thank you!

Sergey.




From amauryfa at gmail.com  Thu Apr  3 06:15:39 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 3 Apr 2008 14:15:39 +0200
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <e27efe130804030515w716ab99ejd6f04d7618b2000f@mail.gmail.com>

On Thu, Apr 3, 2008 at 12:50 PM, Sergey A. Lipnevich
<sergey at optimaltec.com> wrote:
> zooko wrote:
>  >> Most likely, but zope.interface on Windows would require Visual Studio
>  >> 2003. I tried easy_install but couldn't complete it.
>  >
>  > The error message that says "Python was built with Visual Studio version
>  > 7.1, and extensions need to be built with the same version of the
>  > compiler" isn't true.
>
>  My console message was explicitly about Visual Studio 2003 (probably
>  because it's Python 2.5), and the machine had Visual Studio 2005 (and
>  2008) installed so the message was not without merit ;-).
>
>
>  > Install gcc (I recommend cygwin, but mingw will also work), and put the
>  > following stanza into your distutils config file:
>
>  Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
>  extensions in the same process?

In this particular case, it's OK:
this extension does not use system resources (memory, files...) from
the C runtime library.

-- 
Amaury Forgeot d'Arc



From mike at mkp.ca  Thu Apr  3 07:03:44 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 3 Apr 2008 09:03:44 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F407A0.6090209@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
Message-ID: <273093d80804030603t42db5221gc5639805482ab3f@mail.gmail.com>

On Wed, Apr 2, 2008 at 6:24 PM, James Mansion
<james at mansionfamily.plus.com> wrote:
>  So - I disagree.  I'm quite happy to hand-wave, and to listen to my
> colleagues'
>  hand-waving. If it communicates design ideas - and requirements - before
> any wasteful
>  coding, that's good. Honest.

"90% code" is cheap and more expressive for communicating design ideas.



From zooko at zooko.com  Thu Apr  3 07:07:26 2008
From: zooko at zooko.com (zooko)
Date: Thu, 3 Apr 2008 07:07:26 -0600
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org>
	<018601c893bb$9198b250$b4ca16f0$@com>	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <7926CA7F-4866-40E6-9B13-B6511A2EE7CD@zooko.com>

On Apr 3, 2008, at 4:50 AM, Sergey A. Lipnevich wrote:
>>
>> Install gcc (I recommend cygwin, but mingw will also work), and  
>> put the
>> following stanza into your distutils config file:
>
> Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
> extensions in the same process?

As I mentioned in letter to which you replied (above), there are some  
cases where this is a bad idea, but they appear to be vanishingly  
rare in practice.

>> [build]
>> compiler=mingw32

> I can do "python setup.py build -c mingw32," even better :-).

Yes, but if you want to use easy_install, you would have to edit your  
distutils config file.

Regards,

Zooko




From glyph at divmod.com  Thu Apr  3 08:32:23 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 14:32:23 -0000
Subject: [Twisted-Python] Re: ??: Twisted 8.0.1 for Python 2.5 for Windows
	is missing Zope
In-Reply-To: <ft2cqb$ueh$1@ger.gmane.org>
References: <fss8lj$uvs$1@ger.gmane.org> <018601c893bb$9198b250$b4ca16f0$@com>
	<B2C1CE42-819D-49F4-90C0-0BFDFC0D2E1E@collab.nl>
	<fsus55$ll2$2@ger.gmane.org>
	<93CFBBF6-3CFD-4D6A-B21D-4F03A9F7A068@zooko.com>
	<ft2cqb$ueh$1@ger.gmane.org>
Message-ID: <20080403143223.21558.1594999209.divmod.xquotient.9975@joule.divmod.com>


On 10:50 am, sergey at optimaltec.com wrote:
>Isn't it a bad idea to mix MSVC-built Python and Cygwin GCC-built
>extensions in the same process?

I believe this is outdated advice.  There was a time that Cygwin GCC 
could not build "normal" windows Python extensions at all; nowadays, 
however, it can effectively masquerade as a particular version of the 
regular Microsoft compiler for linking purposes.  MinGW's GCC has been 
able to do this for even longer.

I don't quite understand the mechanics of this, but from your 
perspective it's simple: just do what zooko says ;-).



From andrewfr_ice at yahoo.com  Thu Apr  3 09:21:25 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 3 Apr 2008 08:21:25 -0700 (PDT)
Subject: Stackless Python/Twisted example Re: [Twisted-Python] Advice sought
	on application evolution
In-Reply-To: <E1JeVim-0002C5-VM@cube.twistedmatrix.com>
Message-ID: <845783.90078.qm@web34204.mail.mud.yahoo.com>

Hi Don and Colleagues:

>I'll be very interested to learn more about the
>melding of the two paradigms.

...

>One question: I had the impression that Stackless is
>mostly an academic exercise, sort of a proof of
>concept.  Is this wrong?  How stable, portable, etc.
is Stackless at this point?  Is it a reasonable choice

>for a commercial application?

Sorry for the wait - I have been very busy. I will
probably update my blog on the weekend. Meanwhile, I
have enclosed an example of a Toy WS-BPEL processor
prototype that more or less implements the I/O parts
of WS-BPEL specification: invoke, reply, receive,
wait, event handlers, and daemons!

In the process, the programme shows all the
integration techniques in action.

The main thing I want readers to take away is how
*little* Stackless Python and Twisted are needed to
implement something complex. To me, this is what
Python is all about.

In your case Don, I try to show how layering helps
model business logic. In the example, think of the
Process and AlarmProcess belonging to the business
logic layer.

I have tried my best to strip away the WS-BPEL
specific parts to show how I integrate Stackless with
Twisted. Still the architecture is influenced by my
need to prototype. I am still experimenting.

That said, this little prototype starts up 1001
tasklets. If a web client does a HTTP GET on
http://localhost:8080/[0-999],
the tasklet will wake up, call a web server (in my
case Apache), and return a result. Another tasklets
simply ticks.

Give me a while, and I will show another example with
process serialization (at Pycon 2008 - I demonstrated
process serialization to a few folks after my talk -
hint Twisted does not like to be pickled).

Unfortunately I have not had time to set up stress
tests. I really don't have access to large computers.

That said, the integration techniques reflect my
thinking about November/December 2007. I am eager to
find the time to try out Christopher Armstrong's
coroutine package.

If you have any questions, please don't hesitate to
ask.

Cheers,
Andrew





      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ToyProcessor5.py
Type: text/x-python
Size: 13003 bytes
Desc: 1310978246-ToyProcessor5.py
URL: </pipermail/twisted-python/attachments/20080403/b2046098/attachment-0002.py>

From ddwiggins at advpubtech.com  Thu Apr  3 10:32:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 03 Apr 2008 09:32:26 -0700
Subject: [Twisted-Python] Re: Stackless Python/Twisted example Re: Advice
 sought on application evolution
In-Reply-To: <845783.90078.qm@web34204.mail.mud.yahoo.com>
References: <E1JeVim-0002C5-VM@cube.twistedmatrix.com>
	<845783.90078.qm@web34204.mail.mud.yahoo.com>
Message-ID: <ft30qr$d63$1@ger.gmane.org>

Andrew Francis wrote:
> In your case Don, I try to show how layering helps
> model business logic. In the example, think of the
> Process and AlarmProcess belonging to the business
> logic layer.
> 
> I have tried my best to strip away the WS-BPEL
> specific parts to show how I integrate Stackless with
> Twisted. Still the architecture is influenced by my
> need to prototype. I am still experimenting.

Thanks much for the example.  At a quick scan, it looks like it'll take 
some digesting to get my head around.  I'll give it a closer look when I 
get the chance.

-- 
Don Dwiggins
Advanced Publishing Technology




From db3l.net at gmail.com  Thu Apr  3 13:35:36 2008
From: db3l.net at gmail.com (David Bolen)
Date: Thu, 03 Apr 2008 15:35:36 -0400
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
Message-ID: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>

Nathan <nathan.stocks at gmail.com> writes:

> On Mon, Mar 31, 2008 at 8:17 PM,  <glyph at divmod.com> wrote:
>>  Twisted's job is to run the main loop; it's best just to let it do that.
>>  If Pyglet slowed down, it would be best to examine what's gone wrong
>>  with Pyglet and simply submit a fix for that.
>
> Understood.  Thanks for the guidance.  I'm working on example code
> that reproduces the problem.

While in general I'm always in favor of letting Twisted own the main
loop, I've also had quite good success in the past not doing so, even
without multiple threads, primarily in cases where networking was a
secondary function (e.g., GUI applications) and less time crucial than
the primary UI interaction.

In our case, with wxPython based applications, things worked great
just having wxPython handle a timer that triggered reactor iterations.
It involved:

* During initialization, start reactor with reactor.startRunning()
* At some periodic frequency, run reactor.iterate(0)
* During termination, set up a reactor.callLater for reactor.stop, and
  then call reactor.mainLoop().  This was the cleanest way we found to
  permit all reactor finalization (events, final I/O, etc...).

Note that the first point violates the IReactorCore interface
(startRunning() should only be accessed through run()).  I don't
consider running mainLoop() at the end a violation since it's the only
time it is called.

Yes, the above means that Twisted's loop might incur higher latency
(we ran the timer at about 150ms) than it might be if in control, but
it worked very well for us, including during times when the
win32/wxPython reactors weren't particularly stable, and
_threadedselect wasn't yet an option.  And even if in control, once
Twisted calls out to pump GUI messages, large latency is still
theoretically possible until it regains control.

So while I wouldn't usually suggest making Twisted's main loop
subservient to some other loop (and trying to identify the issue in
Pyglet would be a good thing), it's also something I'm not averse to
doing when needed.

It might be worth experimenting with using Pyglet's main loop, and
pyglet.clock.schedule or pyglet.clock.schedule_interval to iterate
Twisted's reactor.

-- David




From nathan.stocks at gmail.com  Thu Apr  3 14:32:23 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 3 Apr 2008 14:32:23 -0600
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
	<m2bq4qoho7.fsf@valheru.db3l.homeip.net>
Message-ID: <96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>

On Thu, Apr 3, 2008 at 1:35 PM, David Bolen <db3l.net at gmail.com> wrote:
>  * During initialization, start reactor with reactor.startRunning()
>  * At some periodic frequency, run reactor.iterate(0)
>  * During termination, set up a reactor.callLater for reactor.stop, and
>   then call reactor.mainLoop().  This was the cleanest way we found to
>   permit all reactor finalization (events, final I/O, etc...).

That's exactly what I was looking for, thanks!  I'll save this as the
technique to try if all else fails and the time comes that I've got to
deploy.  Hopefully we'll just be able to figure out what's going on
and fix it before then.

~ Nathan



From glyph at divmod.com  Thu Apr  3 15:41:45 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 Apr 2008 21:41:45 -0000
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>
References: <96c9d6a80803311545s1bb003daya57e2bbbe9ab667d@mail.gmail.com>
	<20080401021742.21558.975550297.divmod.xquotient.9499@joule.divmod.com>
	<96c9d6a80804011508t3eedd4afkd2b0aa7900564c63@mail.gmail.com>
	<m2bq4qoho7.fsf@valheru.db3l.homeip.net>
	<96c9d6a80804031332q776400aaq6d0a36f93cec5a3d@mail.gmail.com>
Message-ID: <20080403214145.21558.436454877.divmod.xquotient.10148@joule.divmod.com>


On 08:32 pm, nathan.stocks at gmail.com wrote:
>On Thu, Apr 3, 2008 at 1:35 PM, David Bolen <db3l.net at gmail.com> wrote:
>>  * During initialization, start reactor with reactor.startRunning()
>>  * At some periodic frequency, run reactor.iterate(0)
>>  * During termination, set up a reactor.callLater for reactor.stop, 
>>and
>>   then call reactor.mainLoop().  This was the cleanest way we found to
>>   permit all reactor finalization (events, final I/O, etc...).
>
>That's exactly what I was looking for, thanks!  I'll save this as the
>technique to try if all else fails and the time comes that I've got to
>deploy.  Hopefully we'll just be able to figure out what's going on
>and fix it before then.

Definitely for an "if all else fails" scenario, this should work well 
enough :).  But definitely reserve it for that.

For PyGame, there aren't too many other considerations which will 
practically cause problems, since you're spinning at full-throttle all 
the time and you are unlikely to want to integrate with too much other 
code.  (And if everything's written to just expect a normal, running 
reactor anyway, you can easily fix it later.)

For a regular GUI app though, waking up every 150ms or so can be more 
serious than the apparently negligible CPU usage it causes.  Try, for 
example, running your program under 
http://en.wikipedia.org/wiki/PowerTOP to see if this reactor integration 
mechanism is running down your laptop users' battery :).

(This message written from a laptop whose battery is no longer being 
devoured by Firefox's too-frequent wakeups...)



From exarkun at divmod.com  Thu Apr  3 16:35:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 3 Apr 2008 17:35:06 -0500
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <m2bq4qoho7.fsf@valheru.db3l.homeip.net>
Message-ID: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>

On Thu, 03 Apr 2008 15:35:36 -0400, David Bolen <db3l.net at gmail.com> wrote:
> [snip]
>
>In our case, with wxPython based applications, things worked great
>just having wxPython handle a timer that triggered reactor iterations.
>It involved:
>
>* During initialization, start reactor with reactor.startRunning()
>* At some periodic frequency, run reactor.iterate(0)
>* During termination, set up a reactor.callLater for reactor.stop, and
>  then call reactor.mainLoop().  This was the cleanest way we found to
>  permit all reactor finalization (events, final I/O, etc...).
>
>Note that the first point violates the IReactorCore interface

Let me emphasize this.  The above relies on implementation details and may
be broken by any subsequent release (assuming it works now, which I won't
comment on).

Jean-Paul



From glenn at tarbox.org  Thu Apr  3 19:01:45 2008
From: glenn at tarbox.org (Glenn H Tarbox, PhD)
Date: Thu, 03 Apr 2008 18:01:45 -0700
Subject: [Twisted-Python] Re: Other ways to integrate foreign event loops?
In-Reply-To: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>
References: <20080403223506.6859.595128692.divmod.quotient.25551@ohm>
Message-ID: <1207270905.6244.79.camel@ghtmyth.hq.tarbox.org>

The Qt reactor, http://code.tarbox.org/qtreactor, inverts the
"ownership" of the callback loop as well.  However, Qt provides well
behaved callbacks for timers as well as socket activity so the reactor
behaves properly.  

The qt reactor design allows for the conventional reactor.run() at the
end of the script as well as a call to reactor.runReturn() which starts
up the reactor, nails up the timers and socket IO but returns to the
calling application.  Hence, you can startup twisted sometime after your
gui app is running.  Obviously, you need to "behave" properly and make
sure that any user code doesn't hang onto the thread but this is
required for proper gui handling code anyway...

Twisted's current wx reactor uses another thread due to difficulties
experienced with an earlier version of wx not behaving well.  There are
complexities WRT integrating those threads which lie at the heart of the
testing failures for the current wx reactor.  It might be easy to fix...

However, I've been thinking about taking the qtreactor approach and (re)
trying to fix the wx reactor by first evaluating whether wx is "better
behaved".  If it isn't, perhaps its straightforward to fix wx (???)

Thing is, once you get the logic down... and (I think) its all correct
in the qtreactor, it should be straightforward to use the wx calls to
get servicing for timing and socket IO.

-glenn


On Thu, 2008-04-03 at 17:35 -0500, Jean-Paul Calderone wrote:
> On Thu, 03 Apr 2008 15:35:36 -0400, David Bolen <db3l.net at gmail.com> wrote:
> > [snip]
> >
> >In our case, with wxPython based applications, things worked great
> >just having wxPython handle a timer that triggered reactor iterations.
> >It involved:
> >
> >* During initialization, start reactor with reactor.startRunning()
> >* At some periodic frequency, run reactor.iterate(0)
> >* During termination, set up a reactor.callLater for reactor.stop, and
> >  then call reactor.mainLoop().  This was the cleanest way we found to
> >  permit all reactor finalization (events, final I/O, etc...).
> >
> >Note that the first point violates the IReactorCore interface
> 
> Let me emphasize this.  The above relies on implementation details and may
> be broken by any subsequent release (assuming it works now, which I won't
> comment on).
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Glenn H. Tarbox, PhD    | Don’t worry about people stealing your ideas. If your ideas
206-494-0819            | are any good, you’ll have to ram them down people’s throats
glenn at tarbox.org (gtalk) + ghtdak on aim/freenode     | ^ Howard Aiken, IBM engineer





From theatilla at gmail.com  Fri Apr  4 09:01:40 2008
From: theatilla at gmail.com (Atilla)
Date: Fri, 4 Apr 2008 17:01:40 +0200
Subject: [Twisted-Python] adbapi, transactions and threading
Message-ID: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>

I hope it won't be too confusing. I'm basically trying to make sure
I've grasped the concept - do correct me on anything I am wrong about
or my way of thinking confuses you, please.

I'm not used to running blocking calls and deferToThread a lot, so I
wanted to make sure I understand that correctly.

Basically, the way I understand it - adbapi is just a deferToThread
wrapper around the normal python API, correct? As in - if I used
something different to access my database, for example - sqlalchemy, I
would only need to appropriately wrap that functionality with
deferToThread, just as adbapi does?

That's one thing. Now - what I'm trying to do in essence is to load
some big chunk of data out of the DB, process it, and save it back.
I'd use a nice chain of deffered calls - one runQuery, one for the
processing, and one runOperation. However, I need transaction
functionality, so unless I'm mistaken, my only choice is
runInteraction.

Since that's automatically ran in a separate thread, I see it as a
monolithic piece of code -> query, processing call, saving query -> no
deffereds can take place there. Am I wrong on that one? Even if so -
it won't be that bad for me, since good part of the processing will be
handled by an external library (GIL released - says so, more cores
used, makes me happy).

That leads me to the next question - when I've got long code to run
and it happens to use an external, thread-safe, C library, releasing
the GIL, I should probably always take care to defer it to thread, if
I wanted to take advantage of multiple cores, correct? Otherwise, I
wouldn't have any parallelism gains, which I can get, because of the
GIL release. And let's say that my processing code can take a while
sometimes.

Which leads me to the other question - what should I do in the case
where I need to occasionally run big chunks of code. No blocking
calls, just crunch something down. Is deferToThread the only solution
for that? Is the idea to compose that as big deffered chains so other
processing might run normally, instead of wait for the big function to
exit? Because deferToThread will only get me anything, if there's a
blocking call inside, or if I mange to get parallelism out of it, if
it's something handled by GIL-released code.

Sorry if I sound too confusing, I'm trying to wrap it all in my head
before I dive in handling the service.



From waterbug at pangalactic.us  Fri Apr  4 09:07:56 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 04 Apr 2008 11:07:56 -0400
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
References: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
Message-ID: <47F6444C.8090603@pangalactic.us>

Atilla wrote:
> Basically, the way I understand it - adbapi is just a deferToThread
> wrapper around the normal python API, correct? As in - if I used
> something different to access my database, for example - sqlalchemy, I
> would only need to appropriately wrap that functionality with
> deferToThread, just as adbapi does?

If a twisted integration for sqlalchemy is specifically what you
want, that is already available:

http://foss.eepatents.com/sAsync/

(or do a pypi search on 'sasync').

Steve



From exarkun at divmod.com  Fri Apr  4 10:09:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 4 Apr 2008 11:09:15 -0500
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
Message-ID: <20080404160915.6859.614315558.divmod.quotient.25695@ohm>

On Fri, 4 Apr 2008 17:01:40 +0200, Atilla <theatilla at gmail.com> wrote:
>I hope it won't be too confusing. I'm basically trying to make sure
>I've grasped the concept - do correct me on anything I am wrong about
>or my way of thinking confuses you, please.
>
>I'm not used to running blocking calls and deferToThread a lot, so I
>wanted to make sure I understand that correctly.
>
>Basically, the way I understand it - adbapi is just a deferToThread
>wrapper around the normal python API, correct? As in - if I used
>something different to access my database, for example - sqlalchemy, I
>would only need to appropriately wrap that functionality with
>deferToThread, just as adbapi does?

Yes.

>
>That's one thing. Now - what I'm trying to do in essence is to load
>some big chunk of data out of the DB, process it, and save it back.
>I'd use a nice chain of deffered calls - one runQuery, one for the
>processing, and one runOperation. However, I need transaction
>functionality, so unless I'm mistaken, my only choice is
>runInteraction.

Right.

>
>Since that's automatically ran in a separate thread, I see it as a
>monolithic piece of code -> query, processing call, saving query -> no
>deffereds can take place there. Am I wrong on that one? Even if so -
>it won't be that bad for me, since good part of the processing will be
>handled by an external library (GIL released - says so, more cores
>used, makes me happy).

Correct.

>
>That leads me to the next question - when I've got long code to run
>and it happens to use an external, thread-safe, C library, releasing
>the GIL, I should probably always take care to defer it to thread, if
>I wanted to take advantage of multiple cores, correct? Otherwise, I
>wouldn't have any parallelism gains, which I can get, because of the
>GIL release. And let's say that my processing code can take a while
>sometimes.

Yep.

>
>Which leads me to the other question - what should I do in the case
>where I need to occasionally run big chunks of code. No blocking
>calls, just crunch something down. Is deferToThread the only solution
>for that? Is the idea to compose that as big deffered chains so other
>processing might run normally, instead of wait for the big function to
>exit? Because deferToThread will only get me anything, if there's a
>blocking call inside, or if I mange to get parallelism out of it, if
>it's something handled by GIL-released code.

deferToThread is one solution (you can use processes instead of threads,
but that's roughly the same idea).  Deferred aren't sensible for CPU-bound
tasks.  They just make the implementation slower and more complex, and they
probably _don't_ allow other tasks to run, since a Deferred is just a way
to track results, it doesn't imply any special scheduling.  This means the
different chunks of your computation will still run all at once and block
other tasks from running unless you explicitly insert scheduling logic.  If
that is interesting, then twisted.internet.task.coiterate may be interesting.
However, having a thread-safe CPU-bound task (preferably one which is all
self-contained and doesn't need to talk to other APIs, certainly not Twisted
APIs) and running it in a thread with deferToThread is sensible.

>
>Sorry if I sound too confusing, I'm trying to wrap it all in my head
>before I dive in handling the service.
>

Not very confusing at all. :)

Jean-Paul



From rlott at evertz.com  Fri Apr  4 10:27:59 2008
From: rlott at evertz.com (Rodney Lott)
Date: Fri, 4 Apr 2008 12:27:59 -0400
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
Message-ID: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>

Hi, there.

I was wondering if there is any information or examples on how to use Twisted to perform a SSM operation.  I am new to Twisted and to Python.

In C, I believe one would use the setsocketopt() to specify the joining to a multicast group (G) to a specific source (S):

	setsockopt(sock,..., IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), ...)

I believe that Python itself has analogous socket calls and could do this using a UDP socket.  

I read the Multicast UDP example on Twisted here: http://stderr.org/doc/twisted-doc/howto/udp.html#auto3

This shows how to do a normal multicast UDP situation with Twisted (i.e. a process will receive UDP traffic from ALL sources registered to the IGMP group).  

So, if there were UDP three sources (e.g. A, B, and C) registered to the IGMP group, I would like to find a way for my client to only receive data from source B.

I believe that I can get information using a SDP/SAP using a simple UDP server listening on the appropriate port.  So, the only thing that I am missing is how to register to a group for a specific source.  I am not sure if the joinGroup() method will allow for this.  

Thanks.

-Rodney Lott

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080404/6429a580/attachment.html>

From p.mayers at imperial.ac.uk  Fri Apr  4 10:41:12 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 04 Apr 2008 17:41:12 +0100
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>
References: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2B@otis.burlington.evertz.tv>
Message-ID: <47F65A28.2080409@imperial.ac.uk>

Rodney Lott wrote:
> Hi, there.
> 
> I was wondering if there is any information or examples on how to use 
> Twisted to perform a SSM operation.  I am new to Twisted and to Python.
> 
> In C, I believe one would use the setsocketopt() to specify the joining 
> to a multicast group (G) to a specific source (S):
> 
>         setsockopt(sock,…, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), …)

...provided your OS has IGMPv3 support (and the underlying network has 
IGMPv3 and PIM-SSM setup).

> 
> I believe that Python itself has analogous socket calls and could do 
> this using a UDP socket. 

At least on my version of Python (2.5.1, Fedora 8) there's no constant 
in the "socket" module for that:

 >>> [x for x in dir(socket) if 'member' in x.lower()]
['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']

Google for "python igmpv3" does not look promising... It seems as if 
this support isn't there yet.

> 
> I read the Multicast UDP example on Twisted here: 
> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
> 
> This shows how to do a normal multicast UDP situation with Twisted (i.e. 
> a process will receive UDP traffic from ALL sources registered to the 
> IGMP group). 
> 
> So, if there were UDP three sources (e.g. A, B, and C) registered to the 
> IGMP group, I would like to find a way for my client to only receive 
> data from source B.
> 
> I believe that I can get information using a SDP/SAP using a simple UDP 
> server listening on the appropriate port.  So, the only thing that I am 
> missing is how to register to a group for a specific source.  I am not 
> sure if the joinGroup() method will allow for this. 
> 
> Thanks.
> 
> -Rodney Lott
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From rlott at evertz.com  Fri Apr  4 11:49:50 2008
From: rlott at evertz.com (Rodney Lott)
Date: Fri, 4 Apr 2008 13:49:50 -0400
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <47F65A28.2080409@imperial.ac.uk>
Message-ID: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>

Thanks for the information, Phil.

I believe the 2.6 kernels are supposed to have IGMP setup.  Not sure about the PIM-SSM, though.

My Python setup (Debian etch, python 2.4.4-2) shows similar to yours re. the socket module.

Yeah.  I sent a post here because my Googling for this stuff wasn't going anywhere.  Oh, well.  Not the end of the world.  I will just use separate IGMP groups and switch on the separate addresses.

-Rodney Lott

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Phil
Mayers
Sent: Friday, April 04, 2008 12:41 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Source specific multicasting (SSM)
example?


Rodney Lott wrote:
> Hi, there.
> 
> I was wondering if there is any information or examples on how to use 
> Twisted to perform a SSM operation.  I am new to Twisted and to Python.
> 
> In C, I believe one would use the setsocketopt() to specify the joining 
> to a multicast group (G) to a specific source (S):
> 
>         setsockopt(sock,…, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), …)

...provided your OS has IGMPv3 support (and the underlying network has 
IGMPv3 and PIM-SSM setup).

> 
> I believe that Python itself has analogous socket calls and could do 
> this using a UDP socket. 

At least on my version of Python (2.5.1, Fedora 8) there's no constant 
in the "socket" module for that:

 >>> [x for x in dir(socket) if 'member' in x.lower()]
['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']

Google for "python igmpv3" does not look promising... It seems as if 
this support isn't there yet.

> 
> I read the Multicast UDP example on Twisted here: 
> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
> 
> This shows how to do a normal multicast UDP situation with Twisted (i.e. 
> a process will receive UDP traffic from ALL sources registered to the 
> IGMP group). 
> 
> So, if there were UDP three sources (e.g. A, B, and C) registered to the 
> IGMP group, I would like to find a way for my client to only receive 
> data from source B.
> 
> I believe that I can get information using a SDP/SAP using a simple UDP 
> server listening on the appropriate port.  So, the only thing that I am 
> missing is how to register to a group for a specific source.  I am not 
> sure if the joinGroup() method will allow for this. 
> 
> Thanks.
> 
> -Rodney Lott
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From matt at madebykite.com  Fri Apr  4 12:35:43 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Fri, 4 Apr 2008 19:35:43 +0100
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
Message-ID: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>

Hi All,

Apologies if this has been covered before. I am looking to package a  
twisted application that relies on twistd as an egg but I am  
concerned as to how twistd will be aware of the my package.

How do I make twistd aware of my application if it is packaged as an  
egg? Is this possible? Do I just create my own stub to twistd that  
takes care of ensuring that twisted/plugins/myapp.py is in Python's  
path?

Thanks a lot,


Matt
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From vince6 at offshore.ai  Fri Apr  4 12:56:32 2008
From: vince6 at offshore.ai (Vince Cate)
Date: Fri, 04 Apr 2008 14:56:32 -0400
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
Message-ID: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>


I would like a library that I can use from Twisted to help with
peer-to-peer communication.  I have looked at and tried Vertex:

  http://divmod.org/trac/wiki/UsingVertex

This is the kind of thing I want.  But I am having some problems with
it.  Are there other similar libraries out there?  What are people
using?

The problem we have with Vertex is sending from Windows to Linux.  We
can do Linux to Windows.

The error we get is in file ptcp.py
in class PTCP
def connect(self, factory, host, port, pseudoPort=1)
with factory <vertex.q2q.RPTCPConnectionAttempt instance at 0x010CEBE8>

Any help appreciated.

   -- Vince Cate







From zooko at zooko.com  Fri Apr  4 19:57:49 2008
From: zooko at zooko.com (zooko)
Date: Fri, 4 Apr 2008 19:57:49 -0600
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
In-Reply-To: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
References: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
Message-ID: <58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>


On Apr 4, 2008, at 12:35 PM, Matthew Glubb wrote:
> I am looking to package a twisted application that relies on twistd  
> as an egg but I am concerned as to how twistd will be aware of the  
> my package.
>
> How do I make twistd aware of my application if it is packaged as  
> an egg? Is this possible? Do I just create my own stub to twistd  
> that takes care of ensuring that twisted/plugins/myapp.py is in  
> Python's path?

I'm not sure if this solves your problem (because I don't know why  
the twistd script doesn't already succeed at importing twisted from  
the egg), but one option is to use the setuptools "console scripts"  
hook.

Get the Twisted 8 source code and apply the following patch.  Then  
whenever you install this patched version of twisted, it will install  
a twistd that imports the associated version of Twisted, even from an  
egg.  As an added bonus, it will make a twistd executable for the  
local platform, including Windows, although I haven't tested that  
behavior.

Regards,

Zooko


Index: setup.py
===================================================================
--- setup.py	(revision 23203)
+++ setup.py	(working copy)
@@ -86,6 +86,7 @@
              setup_args['install_requires'] = requirements
          setup_args['include_package_data'] = True
          setup_args['zip_safe'] = False
+        setup_args['entry_points'] = { 'console_scripts': [ 'twistd  
= twisted.scripts.twistd:run' ] }
      setup(**setup_args)






From glyph at divmod.com  Fri Apr  4 22:24:19 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 05 Apr 2008 04:24:19 -0000
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
Message-ID: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>

On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>I would like a library that I can use from Twisted to help with
>peer-to-peer communication.  I have looked at and tried Vertex:
>
>  http://divmod.org/trac/wiki/UsingVertex
>
>This is the kind of thing I want.  But I am having some problems with
>it.  Are there other similar libraries out there?  What are people
>using?

Hi!  I'm the main author of Vertex.

As far as I know, there's nothing really similar to Vertex, especially 
not for Twisted.  I'm really glad you're looking at it though!  As 
you've noticed, it's got some bugs, and it needs maintenance.  However, 
to sustain maintenance there has to be some interest, and with bugs it's 
difficult to attract interest ;-).

Vertex is a very interesting proof of concept though, and a lot of work 
has gone into it; it wouldn't be a huge amount of work to turn it into 
something really robust (and awesome).  In any event, it would be a lot 
less work than doing it over from scratch :).
>The problem we have with Vertex is sending from Windows to Linux.  We
>can do Linux to Windows.

A few other users have reported issues with Windows.  Is it this? 
http://divmod.org/trac/ticket/1369
>The error we get is in file ptcp.py
>in class PTCP
>def connect(self, factory, host, port, pseudoPort=1)
>with factory <vertex.q2q.RPTCPConnectionAttempt instance at 0x010CEBE8>

Can you be a bit more specific?  Is there a traceback?  Is there an 
exception?  Please provide as much information as possible.  You may 
want to sign up for the divmod-dev list, which might be more appropriate 
for discussing Vertex.  On the other hand Twisted users might be 
interested in hearing about semi-transparent NAT traversal and federated 
authentication...



From matt at madebykite.com  Sat Apr  5 04:47:53 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 5 Apr 2008 11:47:53 +0100
Subject: [Twisted-Python] Packaging a Twisted app as an Egg
In-Reply-To: <58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>
References: <92FB8874-4051-421D-9DF8-7B9A195B58D8@madebykite.com>
	<58492DE8-1516-470B-B858-1EBDB1442BC4@zooko.com>
Message-ID: <ABE3DDD6-70FD-4A5C-950C-350644B303AA@madebykite.com>

Hi Zooko,

Thanks for your comments. I fixed it. The solution was very simple.  
Just include twisted/plugins/... in my egg. It gets picked up  
automatically because PYTHONPATH includes the path to my egg.

Regards,


Matt

On 5 Apr 2008, at 02:57, zooko wrote:
>
> On Apr 4, 2008, at 12:35 PM, Matthew Glubb wrote:
>> I am looking to package a twisted application that relies on  
>> twistd as an egg but I am concerned as to how twistd will be aware  
>> of the my package.
>>
>> How do I make twistd aware of my application if it is packaged as  
>> an egg? Is this possible? Do I just create my own stub to twistd  
>> that takes care of ensuring that twisted/plugins/myapp.py is in  
>> Python's path?
>
> I'm not sure if this solves your problem (because I don't know why  
> the twistd script doesn't already succeed at importing twisted from  
> the egg), but one option is to use the setuptools "console scripts"  
> hook.
>
> Get the Twisted 8 source code and apply the following patch.  Then  
> whenever you install this patched version of twisted, it will  
> install a twistd that imports the associated version of Twisted,  
> even from an egg.  As an added bonus, it will make a twistd  
> executable for the local platform, including Windows, although I  
> haven't tested that behavior.
>
> Regards,
>
> Zooko
>
>
> Index: setup.py
> ===================================================================
> --- setup.py	(revision 23203)
> +++ setup.py	(working copy)
> @@ -86,6 +86,7 @@
>              setup_args['install_requires'] = requirements
>          setup_args['include_package_data'] = True
>          setup_args['zip_safe'] = False
> +        setup_args['entry_points'] = { 'console_scripts':  
> [ 'twistd = twisted.scripts.twistd:run' ] }
>      setup(**setup_args)
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From makkalot at gmail.com  Sat Apr  5 04:50:50 2008
From: makkalot at gmail.com (makkalot at gmail.com)
Date: Sat, 5 Apr 2008 13:50:50 +0300
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <200804051350.51765.makkalot@gmail.com>

 >On the other hand Twisted users might be
> interested in hearing about semi-transparent NAT traversal and federated
> authentication...

Hi, i want to know what the vertex actually is. Because i had in my mind to 
develop a NAT traversal software that other applications can use easily. Is 
vertex a STUN server what is it :) And you mentioned about authentication 
which is another exciting part i want to add.



From manlio_perillo at libero.it  Sat Apr  5 05:20:49 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 05 Apr 2008 13:20:49 +0200
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <47F76091.5090201@libero.it>

glyph at divmod.com ha scritto:
> On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>> I would like a library that I can use from Twisted to help with
>> peer-to-peer communication.  I have looked at and tried Vertex:
>>
>>  http://divmod.org/trac/wiki/UsingVertex
>>
>> This is the kind of thing I want.  But I am having some problems with
>> it.  Are there other similar libraries out there?  What are people
>> using?
> 
> Hi!  I'm the main author of Vertex.
> 
> As far as I know, there's nothing really similar to Vertex, especially 
> not for Twisted.  I'm really glad you're looking at it though!  As 
> you've noticed, it's got some bugs, and it needs maintenance.  However, 
> to sustain maintenance there has to be some interest, and with bugs it's 
> difficult to attract interest ;-).
> 

Sorry for the intromission, what about SCPT?



Thanks  Manlio Perillo



From p.mayers at imperial.ac.uk  Sat Apr  5 06:15:02 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 05 Apr 2008 13:15:02 +0100
Subject: [Twisted-Python] Source specific multicasting (SSM) example?
In-Reply-To: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>
References: <069B6B31F6201B4389D7EEB9AD827BCA039E9C2C@otis.burlington.evertz.tv>
Message-ID: <47F76D46.50905@imperial.ac.uk>

Rodney Lott wrote:
> Thanks for the information, Phil.
> 
> I believe the 2.6 kernels are supposed to have IGMP setup.  Not sure
> about the PIM-SSM, though.

I don't think Linux 2.6 has IGMPv3 yes (necessary for SSM). I think it 
just has IGMPv2/1

PIM-SSM is a routing protocol and is only necessary on the routers in 
your or your providers network

Even if your network is plain ASM (any-source multicast) capable, 
there's a good chance it's not enabled for SSM. Of course, it may be 
e.g. ours is.

> 
> My Python setup (Debian etch, python 2.4.4-2) shows similar to yours
> re. the socket module.
> 
> Yeah.  I sent a post here because my Googling for this stuff wasn't
> going anywhere.  Oh, well.  Not the end of the world.  I will just
> use separate IGMP groups and switch on the separate addresses.
> 
> -Rodney Lott
> 
> -----Original Message----- From:
> twisted-python-bounces at twistedmatrix.com 
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Phil 
> Mayers Sent: Friday, April 04, 2008 12:41 PM To: Twisted general
> discussion Subject: Re: [Twisted-Python] Source specific multicasting
> (SSM) example?
> 
> 
> Rodney Lott wrote:
>> Hi, there.
>> 
>> I was wondering if there is any information or examples on how to
>> use Twisted to perform a SSM operation.  I am new to Twisted and to
>> Python.
>> 
>> In C, I believe one would use the setsocketopt() to specify the
>> joining to a multicast group (G) to a specific source (S):
>> 
>> setsockopt(sock,…, IP_ADD_SOURCE_MEMBERSHIP, (S, G, iface), …)
> 
> ...provided your OS has IGMPv3 support (and the underlying network
> has IGMPv3 and PIM-SSM setup).
> 
>> I believe that Python itself has analogous socket calls and could
>> do this using a UDP socket.
> 
> At least on my version of Python (2.5.1, Fedora 8) there's no
> constant in the "socket" module for that:
> 
>>>> [x for x in dir(socket) if 'member' in x.lower()]
> ['IP_ADD_MEMBERSHIP', 'IP_DROP_MEMBERSHIP', 'IP_MAX_MEMBERSHIPS']
> 
> Google for "python igmpv3" does not look promising... It seems as if
>  this support isn't there yet.
> 
>> I read the Multicast UDP example on Twisted here: 
>> http://stderr.org/doc/twisted-doc/howto/udp.html#auto3
>> 
>> This shows how to do a normal multicast UDP situation with Twisted
>> (i.e. a process will receive UDP traffic from ALL sources
>> registered to the IGMP group).
>> 
>> So, if there were UDP three sources (e.g. A, B, and C) registered
>> to the IGMP group, I would like to find a way for my client to only
>> receive data from source B.
>> 
>> I believe that I can get information using a SDP/SAP using a simple
>> UDP server listening on the appropriate port.  So, the only thing
>> that I am missing is how to register to a group for a specific
>> source.  I am not sure if the joinGroup() method will allow for
>> this.
>> 
>> Thanks.
>> 
>> -Rodney Lott
>> 
>> 
>> ------------------------------------------------------------------------
>> 
>> 
>> _______________________________________________ Twisted-Python
>> mailing list Twisted-Python at twistedmatrix.com 
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Sat Apr  5 16:39:05 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 5 Apr 2008 15:39:05 -0700 (PDT)
Subject: [Twisted-Python] Re: Stackless Python/Twisted example 
In-Reply-To: <E1JhoKj-0008Am-EJ@cube.twistedmatrix.com>
Message-ID: <600515.97227.qm@web34206.mail.mud.yahoo.com>

Hi Don and Colleagues:

>Thanks much for the example.  At a quick scan, it
>looks like it'll take some digesting to get my head
>around.  I'll give it a closer look when I 
>get the chance.

Don, you need to read the code along side the slides.
I will probably be giving a revisted version of the
talk in early May.

I will annotate the example in the week to follow.
However I need to change the code somewhat so it is a
wee less confusing to a newbie and gets rid of a
design flaw concerning daemonisation. 

With the current programme, if you hit the processor
fast enough, you will get back 404s. These really
should be 500s. This is not a problem with the
technique but with my simple minded implementation of
the WS-BPEL specification that warns of race
conditions associated with certain activities.

Although fine for my purposes, I should conduct two
sets of tests

1) More feature torture tests where I test non-trivial
message exchange patterns.

2) Performance tests. Test against
- Apache ODE
- A Stackless /Twisted solution that does not spawn a
server instance in a tasklet
- A pure Twisted solution
- A Twisted solution that uses inlineCallbacks.

Cheers,
Andrew


      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From glyph at divmod.com  Sat Apr  5 21:47:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 06 Apr 2008 03:47:47 -0000
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <200804051350.51765.makkalot@gmail.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
	<200804051350.51765.makkalot@gmail.com>
Message-ID: <20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>


On 5 Apr, 10:50 am, makkalot at gmail.com wrote:
> >On the other hand Twisted users might be
>>interested in hearing about semi-transparent NAT traversal and 
>>federated
>>authentication...
>
>Hi, i want to know what the vertex actually is. Because i had in my 
>mind to
>develop a NAT traversal software that other applications can use 
>easily. Is
>vertex a STUN server what is it :) And you mentioned about 
>authentication
>which is another exciting part i want to add.

Part of it is nat traversal layer, but it's not a STUN server, no :).

Vertex is an implementation of a protocol, Q2Q, which allows you to 
connect to a program that a user is running.  This is not entirely about 
traversing NAT.

The idea is you have a server, foo.example.com, and you want to connect 
to a user who has an account on that server, bob.  Q2Q enables you to 
say "I want a connection to bob at foo.example.com" and you don't have to 
care about how that connection is established, or, for example, whether 
bob is using his desktop or laptop computer.  One of the pieces of code 
it includes is a TCP-over-UDP implementation, which allows you to tunnel 
through almost all NAT implementations, but you don't use that code 
directly; you just ask for a Q2Q connection.

(It also allows Bob to know who is trying to connect to him before 
accepting the connection.  TCP allows you to ask this too, of course, 
but "jethro at bar.example.com" and an SSL certificate fingerprint is a lot 
more descriptive and secure than "probably 98.76.54.32 port 30487, but 
maybe not".



From exarkun at twistedmatrix.com  Sat Apr  5 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1207454707.65.694290446@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080406/57ad78d7/attachment.html>

From jml at mumak.net  Sat Apr  5 23:02:40 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 6 Apr 2008 15:02:40 +1000
Subject: [Divmod-dev] Re: [Twisted-Python] Vertex or other P2P libraries
	for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <d06a5cd30804052202y3303628cm31dacfd421e02547@mail.gmail.com>

On Sat, Apr 5, 2008 at 2:24 PM,  <glyph at divmod.com> wrote:
> On 4 Apr, 06:56 pm, vince6 at offshore.ai wrote:
>
> > I would like a library that I can use from Twisted to help with
> > peer-to-peer communication.  I have looked at and tried Vertex:
> >
> >  http://divmod.org/trac/wiki/UsingVertex
> >
> > This is the kind of thing I want.  But I am having some problems with
> > it.  Are there other similar libraries out there?  What are people
> > using?
> >
>
>  Hi!  I'm the main author of Vertex.
>
>  As far as I know, there's nothing really similar to Vertex, especially not
> for Twisted.

AIUI, Telepathy tubes are very similar in intent.

jml



From sipickles at hotmail.com  Sun Apr  6 03:39:08 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 10:39:08 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
Message-ID: <BAY114-DAV5C0E672D405358DAA1B1EBEF00@phx.gbl>

I was interested in Andrews Paper on this subject. I note he recommends 
running a twisted server as a tasklet.

Is there a problem doing this?

factory = pb.PBClientFactory
reactor.connectTCP('127.0.0.1', 1234, Factory)
# Load other tasklets here
stackless.tasklet(reactor.iterate)(1)

or should I perhaps do this?

factory = pb.PBClientFactory
reactor.connectTCP('127.0.0.1', 1234, Factory)
# Load other tasklets here
while 1:
    stackless.tasklet(reactor.iterate)(1)
    stackless.schedule()

What does the delay in reactor.iterate(delay=0) do? Is there a 
reactor.run_once() call?

I want to make the reactor a tasklet so it is included in the scheduler. 
Seems to be working but have I opened a can of worms?

Thanks

Simon

-- 
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Sun Apr  6 09:08:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 6 Apr 2008 11:08:13 -0400
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <BAY114-DAV5C0E672D405358DAA1B1EBEF00@phx.gbl>
Message-ID: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>

On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>I was interested in Andrews Paper on this subject. I note he recommends 
>running a twisted server as a tasklet.
>
>Is there a problem doing this?
>
>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>stackless.tasklet(reactor.iterate)(1)
>
>or should I perhaps do this?
>
>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>while 1:
>    stackless.tasklet(reactor.iterate)(1)
>    stackless.schedule()
>
>What does the delay in reactor.iterate(delay=0) do? Is there a 
>reactor.run_once() call?
>
>I want to make the reactor a tasklet so it is included in the scheduler. 
>Seems to be working but have I opened a can of worms?
>

Most or all uses of reactor.iterate() are wrong.  I don't think Andrew's
paper suggested doing this.  Why did you decide to?

Jean-Paul



From sipickles at hotmail.com  Sun Apr  6 09:48:48 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 16:48:48 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
References: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
Message-ID: <BAY114-DAV18F6396397799D3BCF388BEF00@phx.gbl>



Jean-Paul Calderone wrote:
> On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> I was interested in Andrews Paper on this subject. I note he 
>> recommends running a twisted server as a tasklet.
>>
>> Is there a problem doing this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> stackless.tasklet(reactor.iterate)(1)
>>
>> or should I perhaps do this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> while 1:
>>    stackless.tasklet(reactor.iterate)(1)
>>    stackless.schedule()
>>
>> What does the delay in reactor.iterate(delay=0) do? Is there a 
>> reactor.run_once() call?
>>
>> I want to make the reactor a tasklet so it is included in the 
>> scheduler. Seems to be working but have I opened a can of worms?
>>
>
> Most or all uses of reactor.iterate() are wrong.
How should it be used? It looks to be working very successfully so far. 
The docs say "All pending |IDelayedCall| 
<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html>s 
will be called."

Does this not mean the reactor will process its queue and return? I 
imagine the delay argument specifies a maximum duration before the 
return. The docs do not describe this yet.
> I don't think Andrew's paper suggested doing this.  Why did you decide 
> to?
>
I want a way to let twisted.reactor yield to the stackless scheduler.

Thanks for any advice

Simon





From sipickles at hotmail.com  Sun Apr  6 09:49:37 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 16:49:37 +0100
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
References: <20080406150813.6859.214570462.divmod.quotient.26144@ohm>
Message-ID: <BAY114-DAV11408696470EA8E3296D67BEF00@phx.gbl>



Jean-Paul Calderone wrote:
> On Sun, 06 Apr 2008 10:39:08 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> I was interested in Andrews Paper on this subject. I note he 
>> recommends running a twisted server as a tasklet.
>>
>> Is there a problem doing this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> stackless.tasklet(reactor.iterate)(1)
>>
>> or should I perhaps do this?
>>
>> factory = pb.PBClientFactory
>> reactor.connectTCP('127.0.0.1', 1234, Factory)
>> # Load other tasklets here
>> while 1:
>>    stackless.tasklet(reactor.iterate)(1)
>>    stackless.schedule()
>>
>> What does the delay in reactor.iterate(delay=0) do? Is there a 
>> reactor.run_once() call?
>>
>> I want to make the reactor a tasklet so it is included in the 
>> scheduler. Seems to be working but have I opened a can of worms?
>>
>
> Most or all uses of reactor.iterate() are wrong.
How should it be used? It looks to be working very successfully so far. 
The docs say "All pending |IDelayedCall| 
<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html>s 
will be called."

Does this not mean the reactor will process its queue and return? I 
imagine the delay argument specifies a maximum duration before the 
return. The docs do not describe this yet.
> I don't think Andrew's paper suggested doing this.  Why did you decide 
> to?
>
I want a way to let twisted.reactor yield to the stackless scheduler.

Thanks for any advice

Simon





From sipickles at hotmail.com  Sun Apr  6 10:42:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 06 Apr 2008 17:42:02 +0100
Subject: [Twisted-Python] Deferreds and Tasklets
Message-ID: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>

So I am still fiddling with interesting ways to combine stackless and 
twisted. Its fun, but I am probably naively hacking! (I always seem to 
want to use the deprecated code!- probably says a lot about me?)

I'm using Perspective Broker to do remote calls to an app running 
Twisted-Stackless. PB is positively brilliant, btw.

So say the a remote caller wants to get data from my app. It calls 
remote_GetData() in my PB app, which uses the actor model(each object 
has a channel.receive() running in its own tasklet).

remote_GetData() has to send a message thru a stackless.channel() to get 
the required data, then it must stackless.schedule()

Now it waits for the result to arrive at its own channel.receive(), 
which then needs to be passed back as the return value of remote_GetData().

Is this possible?

Perhaps like this:

from twisted.spread import pb
from twisted.internet import reactor
import stackless

dbRx = stackless.channel()
pbRx = stackless.channel()

class DataSource:
   def Listen(self):
       while 1:
           msg = dbrx.receive() # a channel will arrive here
           msg.send(42)
           stackless.schedule()
   def __init__(self):
       stackless.tasklet(self.Listen)()


class pbBroker(pb.Referenceable):
   def remote_GetData(self):
       dbRx.send(pbRx)
       result = pbRx.receive()
       # return 42 to remote caller thru pb
       return result    

This isn't ideal since I don't want pbBroker to block during the 
receive. I'd like it to closer resemble the Listen loop of the first 
class, so other objects can talk to pbBroker while it is waiting. Maybe 
like this:

class pbBroker(pb.Referenceable):
   def Listen(self):
       while 1:
           msg = self.rx.receive()
           # do stuff with msg from other local objects
           stackless.schedule()
   def __init__(self):
       self.rx = stackless.channel()
       stackless.tasklet(self.Listen)()
   def remote_GetData(self):
       ch = stackless.channel()
       dbRx.send(ch)
       # can block since its a dedicated channel
       result = ch.receive()
       # return 42 to remote caller thru pb
       return result    
I guess the same problem arise when remote_GetData() has to use a 
deferred too.

from twisted.enterprise import adbapi
dbPool = adbapi.ConnectionPool("MySQLdb", db="db", user="user", 
passwd="pw")

class pbBroker(pb.Referenceable):
   def remote_GetDeferredData(self):
       d = dbPool.runInteraction(DoQuery, "SELECT * FROM users") # 
DoQuery just wraps a query with try/except
       d.addCallback(self.GetDeferredData_Success)

   def GetDeferredData_Success(self, result):
       # return to remote caller thru pb
       return result   ## WRONG

How can I return a value for a remote_* call when I only get that value 
thru another callback?

Sorry its a long and confusing one!

Simon


-- 
Linux user #458601 - http://counter.li.org.





-- 
Linux user #458601 - http://counter.li.org.






From radix at twistedmatrix.com  Sun Apr  6 11:16:51 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 6 Apr 2008 13:16:51 -0400
Subject: [Twisted-Python] Deferreds and Tasklets
In-Reply-To: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
References: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
Message-ID: <60ed19d40804061016o6dbe938ds1104b2885aa6779a@mail.gmail.com>

On Sun, Apr 6, 2008 at 12:42 PM, Simon Pickles <sipickles at hotmail.com> wrote:
> So I am still fiddling with interesting ways to combine stackless and
> twisted. Its fun, but I am probably naively hacking! (I always seem to want
> to use the deprecated code!- probably says a lot about me?)

I've solved some of these problems in Corotwine, which uses Greenlet.
You may want to take a look at least to see how it can be done.
Specifically relating to Deferreds, corotwine.defer will probably be
helpful.

http://launchpad.net/corotwine/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Sun Apr  6 12:23:48 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 6 Apr 2008 11:23:48 -0700 (PDT)
Subject: [Twisted-Python] Stackless/Twisted integration again
In-Reply-To: <E1JiRLl-00087T-Vk@cube.twistedmatrix.com>
Message-ID: <715951.52196.qm@web34201.mail.mud.yahoo.com>

Hi Simon and Colleages: 

>I note he recommends running a twisted server as a
>tasklet.

I do this so both the Twisted reactor and the
Stackless scheduler can run without blocking each
other....

The Twisted Reactor and the Stackless Schedule start
their respective systems. Both the Stackless and
Twisted run() method assume that the application has
finished once the run() method returns.

Here is simple example

import stackless
from   twisted.internet    import reactor

def hello():
    print "hello mom"

stackless.tasklet(hello)()
reactor.run()
stackless.run()

This programme will hang. Why? The Twisted reactor is
running in the main tasklet and returns only after it
has been stopped (which is never in this example).
Only after the reactor has finished, will the
stackless scheduler start. Of course, this is not the
behaviour we want.

>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>stackless.tasklet(reactor.iterate)(1)

I have never used iterate(). I am having a hard time
finding an example of iterate() in action. Perhaps I
am wrong but I would assume iterate() is used in
conjunction with something like reactor.interleave()
so that something like a GUI can function properly.

>From my understanding, your example would produce
something because in the iteration followed by a one
second delay, the client can actually complete a call.
However this seems accidental.

>factory = pb.PBClientFactory
>reactor.connectTCP('127.0.0.1', 1234, Factory)
># Load other tasklets here
>while 1:
>    stackless.tasklet(reactor.iterate)(1)
>    stackless.schedule()

I don't understand iterate() well enough but I think
this will accidentally work sometimes. I don't have
time to run your programme but off hand, this is what
I think is happening:

1) Reactor tasklet is created. Since other tasklets
are ahead of it, it is not running.

2) stackless.schedule() kicks off the scheduling,
yielding the main tasklet and allowing the next
schedulable tasklet to run

3) Eventually the Twisted reactor runs. It does stuff.
You get results. However I don't believe it will yield
after that.

>I want to make the reactor a tasklet so it is
included >in the scheduler. 

Simon, stackless.tasklet(reactor.run)() will make the
Twisted reactor into a tasklet. However you need a way
to make it yield occasionally. That is why I use
task.LoopingCall(stackless.schedule). One nice feature
of this approach is that I do not have to alter the
Reactor.

I remember playing with PB a while ago. Here is the
post:

http://twistedmatrix.com/pipermail/twisted-python/2007-September/016000.html

I am enclosing some sample code so you can play with
it. The code may be a bit clunky because I was still
learning. Heck I am still learning :-)

Cheers,
Andrew

P.S - You may want to take out the 61 second sleep in
the PBServer. And it was neat to actually meet Bruce
Eckel at PyCon.




      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBExample.py
Type: text/x-python
Size: 2814 bytes
Desc: 3974082329-PBExample.py
URL: </pipermail/twisted-python/attachments/20080406/2e4b8211/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBServer.py
Type: text/x-python
Size: 662 bytes
Desc: 2825570039-PBServer.py
URL: </pipermail/twisted-python/attachments/20080406/2e4b8211/attachment-0005.py>

From makkalot at gmail.com  Sun Apr  6 14:10:15 2008
From: makkalot at gmail.com (makkalot at gmail.com)
Date: Sun, 6 Apr 2008 23:10:15 +0300
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<200804051350.51765.makkalot@gmail.com>
	<20080406034747.21558.141083910.divmod.xquotient.10366@joule.divmod.com>
Message-ID: <200804062310.15744.makkalot@gmail.com>

> Vertex is an implementation of a protocol, Q2Q, which allows you to
> connect to a program that a user is running.  This is not entirely about
> traversing NAT.
>
> The idea is you have a server, foo.example.com, and you want to connect
> to a user who has an account on that server, bob.  Q2Q enables you to
> say "I want a connection to bob at foo.example.com" and you don't have to
> care about how that connection is established, or, for example, whether
> bob is using his desktop or laptop computer.  One of the pieces of code
> it includes is a TCP-over-UDP implementation, which allows you to tunnel
> through almost all NAT implementations, but you don't use that code
> directly; you just ask for a Q2Q connection.
Ah I got the idea,actually i also read the slides in your site. I may look at 
your nat traversal code it may give me some idea about what i'm planning todo
thanks for the description :) 



From james at mansionfamily.plus.com  Sun Apr  6 14:53:00 2008
From: james at mansionfamily.plus.com (James Mansion)
Date: Sun, 06 Apr 2008 21:53:00 +0100
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
Message-ID: <47F9382C.5070600@mansionfamily.plus.com>

Phil Christensen wrote:
> Wasteful coding? Who do you think you're talking to here?
I am suggesting that the '90% coding' suggests to me that design 
discussion starts when
most of a concrete implementation is available.  It wasn't your term but 
you have taken
offence at what I said.

Well, I disagree. I find it strange that there should be such a 
rejection of the idea
that one can achieve some degree of concensus on a design approach before
coding starts. It seems to me very wasteful if someone should expend time
getting an implementation 'mostly there' if in fact there is a devil in 
the detail that
will come up and bite it and invalidate the whole thing - and the only 
way to
do that is to be prepared to discuss abstract design approaches *before* 
coding.

Even if there is no resource available to code it, it can leave a documented
concencus that can be used to bootstrap implementation when resource
becomes available.

There are some aspects of system design relating to distributed and 
asynchronous
systems that are *not* amenable to iterative refinement and refactoring 
- you
can't generally test and refactor your way out of a design that is 
fundamentally
deadlock prone, for example.

It may be that the way that people like to 'collaborate' in open source 
does not
generally extend to design review, but that's wasteful and ultimately 
foolish for
exactly the same reasons it is in everyday work, and it suggests a 
particularly
limited view of what 'collaboration' and 'teamwork' means in the context
of software development. You can't force wouldbe contributors to do
differently, and ultimately you may get results that work, but its very 
inefficient
and there have been some high-profile attempted contributions to (say) 
the Linux
kernel that have been bounced after huge amounts of work, when it would have
been apparent that the design approach would never be accepted if it had 
been
reviewed up front. In some respects the BSD projects' approaches (or at 
least
aspirations) make them more attractive.  Sometimes, anyway.

It would just be nice to find a project where design is welcomed rather than
some macho 'code is king' bullshit. Would you be happy to work on a team
at work that spends so little time on design? Why should working on a
distributed volunteer team be materially different?

The question really is whether you want to encourage collaboration of
design and design review, or not?




From exarkun at divmod.com  Sun Apr  6 15:04:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 6 Apr 2008 17:04:15 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <20080406210415.6859.2078849761.divmod.quotient.26196@ohm>

Can we please drop this line of discussion?  It's not going to lead anywhere
productive.

If you want to continue to discuss how Twisted can work better on Windows,
*please* do.  No one is rejecting that discussion.  However, discussions
about how free software is a failure or whatever serve no useful purpose.

Thank you,

Jean-Paul



From itamar at itamarst.org  Sun Apr  6 16:35:49 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 06 Apr 2008 18:35:49 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
	<47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <1207521350.15231.75.camel@localhost.localdomain>


On Sun, 2008-04-06 at 21:53 +0100, James Mansion wrote:

> Well, I disagree. I find it strange that there should be such a 
> rejection of the idea
> that one can achieve some degree of concensus on a design approach before
> coding starts.

It depends how complex the problem being solved is. Many of our features
start as code-free tickets in the issue tracker. So please do open
tickets with suggestions/bug reports even if you don't have code:
http://twistedmatrix.com/





From glyph at divmod.com  Sun Apr  6 23:32:19 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 05:32:19 -0000
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <47F9382C.5070600@mansionfamily.plus.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>
	<1206711598.21090.90.camel@localhost.localdomain>
	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>
	<47F16292.8060705@mansionfamily.plus.com>
	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>
	<47F1CA26.3010207@mansionfamily.plus.com>
	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>
	<47F407A0.6090209@mansionfamily.plus.com>
	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>
	<47F9382C.5070600@mansionfamily.plus.com>
Message-ID: <20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>


On 6 Apr, 08:53 pm, james at mansionfamily.plus.com wrote:
>It may be that the way that people like to 'collaborate' in open source 
>does  not
>generally extend to design review, but that's wasteful and ultimately 
>foolish

If you really insist on continuing this debate (I recommend not; I don't 
see a way it could come to a useful conclusion), I would really 
appreciate some links to software engineering research which 
conclusively verifies this claim.

As it is, all I've got here is the fact that your experience and 
knowledge of the field does not overlap mine at all.  Design review is, 
in fact, a waste of time _if you are including people who have not been 
involved in and thoroughly understand the implementation_.

Perhaps putting this in more familiar terms will help you understand why 
your wisdom is not being met with respect.  There is definitely a 
culture clash here.

In most companies, this is reflected in a hierarchy; junior developers 
are not given senior architect positions and are not included in high- 
level design reviews.  People may be hired directly at senior-level 
positions, of course, but they are _invited_ to do so; they don't just 
start showing up one day.  And junior developers do sometimes provide 
design input, but potential hires never do.

In Twisted-land, people like myself, JP Calderone, Thomas Herve, and 
Chris Armstrong can engage in this sort of high-level discussion and 
review.  We frequently do, often in the context of comments on tickets, 
sometimes at in-person meetings (PyCon was great for this kind of 
thing).  However, we do this because we have "high ranking" positions on 
the project.  We earned these ranks by contributing code.  To be blunt, 
you haven't.  Not only that: you specifically began this conversation by 
saying that you never would.  So the analogue in the world of business 
is: you're not just a guy we haven't "hired" for this project, you're a 
guy who has already said "I will never work for you under any 
circumstances".  You may understand why we don't invite you to our 
design meetings, from this perspective.

Despite how it may sound, this isn't any insult to you personally.  In 
fact, the decision to spend your Sunday nights doing something 
worthwhile rather than correcting errors in the finer points of 
Twisted's recv() error handling on win32 might be an endorsement of your 
generally sound judgment.  I know that sometimes I'd rather have been 
working out, watching a movie, spending time with my friends, or at 
least doing something billable during those hours.  But, if what you 
want is people to listen to you on our humble little project, you need 
to acquire some of the reputation currency that we trade around here.

This is compounded by the fact that Twisted, organizationally, has a 
very wary attitude towards design reviews.  Speaking from my own 
experiences: once one has reached a certain level of abstraction, it is 
*very* easy to delude oneself into believing that further consideration 
and discussion is useful work, when in fact all of the assumptions in 
the discussion are based on a subtly flawed or impossible-to-implement 
decision.  We discuss design and we think about it, but every discussion 
is followed by a prototype.

A design discussion is an unverified hypothesis.  There's no point in 
developing it into a theory until you have some further indication that 
it might be implemented.  And unless you have resources available (i.e. 
developers, ready and waiting to do more work) to perform the 
experiment, than brainstorming more hypotheses is a waste of time.



From waterbug at pangalactic.us  Sun Apr  6 23:56:44 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 07 Apr 2008 01:56:44 -0400
Subject: [Twisted-Python] win32 reactors
In-Reply-To: <20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>
References: <47EC8ECC.9020606@mansionfamily.plus.com>	<1206711598.21090.90.camel@localhost.localdomain>	<20080328224911.21558.1960895888.divmod.xquotient.9080@joule.divmod.com>	<47F16292.8060705@mansionfamily.plus.com>	<20080401012137.21558.1405590991.divmod.xquotient.9391@joule.divmod.com>	<47F1CA26.3010207@mansionfamily.plus.com>	<c16a94ff0803312318h674a7e84s764274f77bb4e96d@mail.gmail.com>	<47F407A0.6090209@mansionfamily.plus.com>	<7A05434D-3F00-43CD-8866-0153D62A0EBD@bubblehouse.org>	<47F9382C.5070600@mansionfamily.plus.com>
	<20080407053219.21558.1222974673.divmod.xquotient.10421@joule.divmod.com>
Message-ID: <47F9B79C.2010909@pangalactic.us>

glyph at divmod.com wrote:
> A design discussion is an unverified hypothesis.  There's no point in 
> developing it into a theory until you have some further indication that 
> it might be implemented.  And unless you have resources available (i.e. 
> developers, ready and waiting to do more work) to perform the 
> experiment, than brainstorming more hypotheses is a waste of time.

Well said.  Or as I like to put it "not everyone appreciates that computer
science is an experimental science."  :)

Steve



From glyph at divmod.com  Mon Apr  7 01:07:21 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 07:07:21 -0000
Subject: [Twisted-Python] April 20 Sprint
Message-ID: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>


We're planning on having a sprint at the Divmod and Synthesis Studios 
offices in Cambridge, MA on April 20.

While I know that some people who might be there will probably be 
working on twisted.conch, twisted.words, and twisted.web, the main 
purpose of these sprints is to help facilitate the expansion of the 
Twisted community.

This sprint will have a little more planning than the last 3, which is 
to say "some, but not much".  I'd like to get a feel for how many people 
would like to come, and maybe even get the foundation to buy us a pizza 
or something.

I, for one, will definitely be there, of course.  If you will be too, 
please reply to this message.  I have specifically avoided mentioning 
any probable attendees by name so that you will all chime in and 
hopefully attract some more people :).

Also, if you want to host a parallel sprint in a different city, it 
would be great to keep the momentum rolling all the way across the 
globe; we could reduce review latency by having reviews taking place at 
the sprints as well, after the earlier ones have ended.  Sydney and the 
Bay Area, I'm talking to you.  The sun never sets on the Twisted empire, 
after all.  And that is why we must destroy it, so we can all get some 
rest.



From dialtone at gmail.com  Mon Apr  7 01:32:25 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Mon, 7 Apr 2008 00:32:25 -0700
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>

On Mon, Apr 7, 2008 at 12:07 AM,  <glyph at divmod.com> wrote:

>  Also, if you want to host a parallel sprint in a different city, it would
> be great to keep the momentum rolling all the way across the globe; we could
> reduce review latency by having reviews taking place at the sprints as well,
> after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
> you.  The sun never sets on the Twisted empire, after all.  And that is why
> we must destroy it, so we can all get some rest.

Sunday 20 wouldn't be bad for me. I have spare time sunday and sprinting
on twisted.web is a nice thing to do, maybe implementing HTTP 1.1 for
real rather
than simply chunking (which I still need to finish)?

If no-one wants to join me I'll sprint alone :)

-- 
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it



From theatilla at gmail.com  Mon Apr  7 02:43:53 2008
From: theatilla at gmail.com (Atilla)
Date: Mon, 7 Apr 2008 10:43:53 +0200
Subject: [Twisted-Python] adbapi, transactions and threading
In-Reply-To: <20080404160915.6859.614315558.divmod.quotient.25695@ohm>
References: <b53c932d0804040801x2e417d57red0884f6b41265ea@mail.gmail.com>
	<20080404160915.6859.614315558.divmod.quotient.25695@ohm>
Message-ID: <b53c932d0804070143o5d4f9912rd7333a6f25b9df9c@mail.gmail.com>

Thanks a lot for your comments. I'm starting work on my service today
and looks like i've got everything cleared up. Let's hope it'll work
just as well as I think it should.

Yes, I remember coiterate from some questions I asked a while back.
However in this case I think I'll rely on deferToThread and the
external processing and see how that's going to go. I will probabbly
not run into performance issues for a while.

I'll take a look at the sqlalchemy thing as well, but maybe I'll just
go for simple adbapi, since I need to only run 2-3 simple queries.

Cheers.



From paulswartz at gmail.com  Mon Apr  7 05:13:51 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 7 Apr 2008 07:13:51 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <324cfb540804070413m511278d0i9586d2ff7cd2914a@mail.gmail.com>

On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>  I, for one, will definitely be there, of course.  If you will be too,
> please reply to this message.  I have specifically avoided mentioning any
> probable attendees by name so that you will all chime in and hopefully
> attract some more people :).

I too, barring some freak incident, will be in attendance.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin



From vince6 at offshore.ai  Mon Apr  7 06:13:18 2008
From: vince6 at offshore.ai (Vince Cate)
Date: Mon, 07 Apr 2008 08:13:18 -0400
Subject: [Twisted-Python] Vertex or other P2P libraries for twisted?
In-Reply-To: <20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
References: <1207335393.15653.760.camel@vinceworkstation.offshore.ai>
	<20080405042419.21558.739698501.divmod.xquotient.10347@joule.divmod.com>
Message-ID: <1207570398.20910.249.camel@vinceworkstation.offshore.ai>

glyph
> Hi!  I'm the main author of Vertex.

Cool!   I will take bug reports off the list then.

  -- Vince





From radix at twistedmatrix.com  Mon Apr  7 08:08:25 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 7 Apr 2008 10:08:25 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <60ed19d40804070708v57a71559u13f50a1ebdd96c2e@mail.gmail.com>

On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>  I, for one, will definitely be there, of course.  If you will be too,
> please reply to this message.  I have specifically avoided mentioning any
> probable attendees by name so that you will all chime in and hopefully
> attract some more people :).

Count me in.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Mon Apr  7 09:22:44 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 7 Apr 2008 08:22:44 -0700 (PDT)
Subject: [Twisted-Python] Deferreds and Tasklets
In-Reply-To: <E1Jijxw-0006ai-RI@cube.twistedmatrix.com>
Message-ID: <595302.42430.qm@web34204.mail.mud.yahoo.com>

Hi Simon:

[quote]
So I am still fiddling with interesting ways to
combine stackless and twisted. Its fun, but I am
probably naively hacking! (I always seem to want to
use the deprecated code!- probably says a lot about
me?)
[/quote]

Simon I am all for fiddling! I was lucky to be around
some great fiddlers. "Adventures in Stackless Python /
Twisted Integration" is about my fiddling. One of the
things I tried to do with "Adventures" was show the
how and why's of the basic techniques. 

If there is something you don't understand, please
ask. That way I can improve the explanations. 

Some additional comments.

1) I try to learn from what others have done
concerning Stackless and Twisted - i.e., Richard Tew
and Christopher Armstrong. I found Richard's TinyMud
easier to follow than blockOn but got that both were
variations of the same approach. The main thing I took
away from there was learning how
deferred/callbacks/channels/tasklets interacted. 

Learning things on your own is cool. However sometimes
you are just re-inventing the wheel....

2) My knowledge increased when I understand more about
what Twisted and Stackless did under the hood. One
needs a descriptive model. Without that I would not
have been able to solve the deadlock/starvation issue
when making what is essentially a nested call. 

I am not sure if we are entirely out of the woods yet
there (in part I want people to punch holes in the
techniques). And there is much about Twisted that I
need to learn.

Take away, a deeper understanding prevents you from
spinning your wheels.

3) I try to combine 1 & 2, with literature surveys to
create a predictive model - how can we test? How can
we improve things? I believe there is considerable
room for improvement.

Take away, you don't want your wheels stuck in a rut.

Cheers,
Andrew








      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From exarkun at divmod.com  Mon Apr  7 10:45:23 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Apr 2008 12:45:23 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <60ed19d40804070708v57a71559u13f50a1ebdd96c2e@mail.gmail.com>
Message-ID: <20080407164523.6859.1656917669.divmod.quotient.26438@ohm>

On Mon, 7 Apr 2008 10:08:25 -0400, Christopher Armstrong <radix at twistedmatrix.com> wrote:
>On Mon, Apr 7, 2008 at 3:07 AM,  <glyph at divmod.com> wrote:
>>  I, for one, will definitely be there, of course.  If you will be too,
>> please reply to this message.  I have specifically avoided mentioning any
>> probable attendees by name so that you will all chime in and hopefully
>> attract some more people :).
>
>Count me in.
>

Me too.

Jean-Paul



From andrewfr_ice at yahoo.com  Mon Apr  7 14:44:39 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 7 Apr 2008 13:44:39 -0700 (PDT)
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <E1JitlM-0000Aw-Sp@cube.twistedmatrix.com>
Message-ID: <79253.81418.qm@web34205.mail.mud.yahoo.com>

Hi Glyph and Colleagues:


>We're planning on having a sprint at the Divmod and
>Synthesis Studios  offices in Cambridge, MA on April
>20.

Boston is close and I have never been there. Not sure
how busy I am that week. Also I am not sure what a
sprint entails. Off the bat, stuff that would interest
me is writing protocols (I am interested in MySQL),
corotwine/stackless, SOA and Twisted.

Cheers,
Andrew


      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com



From clemesha at gmail.com  Mon Apr  7 15:07:23 2008
From: clemesha at gmail.com (alex clemesha)
Date: Mon, 7 Apr 2008 14:07:23 -0700
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
Message-ID: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>

On Mon, Apr 7, 2008 at 12:32 AM, Valentino Volonghi <dialtone at gmail.com> wrote:
> On Mon, Apr 7, 2008 at 12:07 AM,  <glyph at divmod.com> wrote:
>
>  >  Also, if you want to host a parallel sprint in a different city, it would
>  > be great to keep the momentum rolling all the way across the globe; we could
>  > reduce review latency by having reviews taking place at the sprints as well,
>  > after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
>  > you.  The sun never sets on the Twisted empire, after all.  And that is why
>  > we must destroy it, so we can all get some rest.
>
>  Sunday 20 wouldn't be bad for me. I have spare time sunday and sprinting
>  on twisted.web is a nice thing to do, maybe implementing HTTP 1.1 for
>  real rather
>  than simply chunking (which I still need to finish)?


Hi,
Would it be possible for someone to give a high level over-view
of the current state of the web/web2 code in Twisted?

I know that even pretty recently there was a thread
discussing web/web2, but it looks like (from our view, the regular users :)
that things are changing again.  In particular this ticket:

http://twistedmatrix.com/trac/ticket/3142

Which contains this comment from a core developer:
"twisted.web2 is being phased out in favor of twisted.web."

For those who have been following the web/web2 state for
some time now, they might be a little confused as this point.

I myself having been using twisted.web2 for a while now,
and I also know of several other projects that are doing the same.
I also have done a good amount of diving into the source code,
trying to maybe someday understand enough to contribute back,
and I hope to keep up with the current status as best as possible.

Any comments that point towards the current state of any of the parts
of web/web2 (what's "good", what's "bad", in the developers' opinion),
would be very appreciated.


Thanks for the great code,
Alex


>
>  If no-one wants to join me I'll sprint alone :)
>
>  --
>  Valentino Volonghi aka Dialtone
>  Now running MacOS X 10.5
>  Home Page: http://www.twisted.it
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Mon Apr  7 15:26:29 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 15:26:29 -0600
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
Message-ID: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>

>  I myself having been using twisted.web2 for a while now,
>  and I also know of several other projects that are doing the same.
>  I also have done a good amount of diving into the source code,
>  trying to maybe someday understand enough to contribute back,
>  and I hope to keep up with the current status as best as possible.
>
>  Any comments that point towards the current state of any of the parts
>  of web/web2 (what's "good", what's "bad", in the developers' opinion),
>  would be very appreciated.

Wow, we have been using web2 in ipython and this it is news to us as
well that web2 is being phased out.

Brian

>
>  Thanks for the great code,
>  Alex
>
>
>
>
>  >
>  >  If no-one wants to join me I'll sprint alone :)
>  >
>  >  --
>  >  Valentino Volonghi aka Dialtone
>  >  Now running MacOS X 10.5
>  >  Home Page: http://www.twisted.it
>  >
>  >
>  >
>  >  _______________________________________________
>  >  Twisted-Python mailing list
>  >  Twisted-Python at twistedmatrix.com
>  >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  >
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From foom at fuhm.net  Mon Apr  7 16:52:33 2008
From: foom at fuhm.net (James Y Knight)
Date: Mon, 7 Apr 2008 18:52:33 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
Message-ID: <B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>

On Apr 7, 2008, at 5:26 PM, Brian Granger wrote:
>> I myself having been using twisted.web2 for a while now,
>> and I also know of several other projects that are doing the same.
>> I also have done a good amount of diving into the source code,
>> trying to maybe someday understand enough to contribute back,
>> and I hope to keep up with the current status as best as possible.
>>
>> Any comments that point towards the current state of any of the parts
>> of web/web2 (what's "good", what's "bad", in the developers'  
>> opinion),
>> would be very appreciated.
>
> Wow, we have been using web2 in ipython and this it is news to us as
> well that web2 is being phased out.

I wish that people hadn't said that at this point, but since it's been  
said...

The problem, basically, is that I started the web2 and never finished  
it. At the current rate of development (really slow), there's a real  
fear that it'll never be finished. So, some (who actually are doing  
development on twisted...) feel that it would be better to take the  
more finished parts of web2 and re-integrate them into web, piece by  
piece.

I'm wary of this scheme, and I can't say I can see it being  
successful, but perhaps it's worth the shot.

My goal with web2 was to provide 99% compatibility with web1  
*resources*, but forgo compatibility at the other integration points.  
I still think this is a feasible goal to accomplish. The goal with the  
"phase-out" plan is to provide complete compatibility with all web1  
integration points *and* add the new features from web2 to web1. If  
this can be accomplished, great; I just can't say I see it being that  
feasible, and I certainly am having trouble thinking that it can get  
done *faster*.

But in any case, the take-home message of this alternate plan should  
not be "web2 is being phased out", but rather, "web2's improvements  
are being absorbed back into web." IMO, it remains to be seen whether  
or not that can actually happen, but I don't think current users have  
any serious reason for alarm at that prospect.

James



From waterbug at pangalactic.us  Mon Apr  7 17:26:46 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Mon, 07 Apr 2008 19:26:46 -0400
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
Message-ID: <47FAADB6.9000505@pangalactic.us>

[cross-posting to twisted-web, as this is probably of interest there ...]

James Y Knight wrote:
> On Apr 7, 2008, at 5:26 PM, Brian Granger wrote:
>>> I myself having been using twisted.web2 for a while now,
>>> and I also know of several other projects that are doing the same.
>>> I also have done a good amount of diving into the source code,
>>> trying to maybe someday understand enough to contribute back,
>>> and I hope to keep up with the current status as best as possible.
>>>
>>> Any comments that point towards the current state of any of the parts
>>> of web/web2 (what's "good", what's "bad", in the developers' opinion),
>>> would be very appreciated.
>>
>> Wow, we have been using web2 in ipython and this it is news to us as
>> well that web2 is being phased out.
> 
> I wish that people hadn't said that at this point, but since it's been 
> said...
> 
> The problem, basically, is that I started the web2 and never finished 
> it. At the current rate of development (really slow), there's a real 
> fear that it'll never be finished. So, some (who actually are doing 
> development on twisted...) feel that it would be better to take the more 
> finished parts of web2 and re-integrate them into web, piece by piece.
> 
> I'm wary of this scheme, and I can't say I can see it being successful, 
> but perhaps it's worth the shot.
> 
> My goal with web2 was to provide 99% compatibility with web1 
> *resources*, but forgo compatibility at the other integration points. I 
> still think this is a feasible goal to accomplish. The goal with the 
> "phase-out" plan is to provide complete compatibility with all web1 
> integration points *and* add the new features from web2 to web1. If this 
> can be accomplished, great; I just can't say I see it being that 
> feasible, and I certainly am having trouble thinking that it can get 
> done *faster*.
> 
> But in any case, the take-home message of this alternate plan should not 
> be "web2 is being phased out", but rather, "web2's improvements are 
> being absorbed back into web." IMO, it remains to be seen whether or not 
> that can actually happen, but I don't think current users have any 
> serious reason for alarm at that prospect.

The most important overall message would seem to be:  use web[1], since
even if web2 is not phased out, as much as possible of web2 is being
"back-ported" to web[1], and there will probably be a relatively easy
migration path to web2 if/when it is completed at some point in the
future.

No?

Steve



From glyph at divmod.com  Mon Apr  7 17:49:09 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 23:49:09 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
Message-ID: <20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>

On 09:07 pm, clemesha at gmail.com wrote:
>Would it be possible for someone to give a high level over-view
>of the current state of the web/web2 code in Twisted?

I don't have time to do a full overview of what's good, what's bad, and 
what's ugly in every module in web, web2, and nevow, but we did make 
some decisions about where things are going in the *future* at PyCon.

I should have done this already, but I just did a brief overview of the 
write-up on the wiki: http://twistedmatrix.com/trac/wiki/TwistedWebPlan

Wiki editors, please add links in the appropriate places.

Users, what do you think?  If you would like clarifications and edits to 
this plan, please ask.  More developers than just me should know what's 
going on and I hope we can all keep expanding that page to give the best 
picture of what's going on ...



From glyph at divmod.com  Mon Apr  7 17:52:13 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 07 Apr 2008 23:52:13 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
Message-ID: <20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>


On 09:26 pm, ellisonbg.net at gmail.com wrote:
>Wow, we have been using web2 in ipython and this it is news to us as
>well that web2 is being phased out.

We are not going to be removing any functionality that is present in 
web2.  See the link I posted in my last response - 
http://twistedmatrix.com/trac/wiki/TwistedWebPlan - for more details.

The general idea is that all the good / new stuff in twisted.web2 will 
be made available somewhere in twisted.web.  All the bad, broken, or 
unfinished stuff will be removed - but it's doubtful you even would have 
been able to use this stuff in ipython; and if you did, then I'm sure 
you'll be happy to have a version that actually works :).

The thing that is being phased out is the twisted.web2 *namespace*, not 
all of the code.



From jml at mumak.net  Mon Apr  7 19:15:57 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Apr 2008 11:15:57 +1000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
Message-ID: <d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>

On Mon, Apr 7, 2008 at 5:07 PM,  <glyph at divmod.com> wrote:
>
>  We're planning on having a sprint at the Divmod and Synthesis Studios
> offices in Cambridge, MA on April 20.
>
>  While I know that some people who might be there will probably be working
> on twisted.conch, twisted.words, and twisted.web, the main purpose of these
> sprints is to help facilitate the expansion of the Twisted community.
>

As usual, I'd like to work on Trial and maybe Conch.

Advance planning would be good so we can get those pesky design /
I-have-fundamental-issues-with-your-implementation discussions out of
the way. Well, as much as is possible.

>  Also, if you want to host a parallel sprint in a different city, it would
> be great to keep the momentum rolling all the way across the globe; we could
> reduce review latency by having reviews taking place at the sprints as well,
> after the earlier ones have ended.  Sydney and the Bay Area, I'm talking to
> you.  The sun never sets on the Twisted empire, after all.  And that is why
> we must destroy it, so we can all get some rest.
>

A parallel sprint is unlikely, it'll be a slightly-skewed sprint at
best, given the timezones:
http://www.timeanddate.com/worldclock/meetingtime.html?day=20&month=4&year=2008&p1=43&p2=240

I could be persuaded to host / attend a Sydney sprint on April 19th.
Any chance of the foundation buying *us* pizza?

jml



From ellisonbg.net at gmail.com  Mon Apr  7 20:38:40 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 20:38:40 -0600
Subject: [Twisted-web] Re: [Twisted-Python] April 20 Sprint
In-Reply-To: <47FAADB6.9000505@pangalactic.us>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<B3DA5A16-4BF4-49A6-81E9-1FC851D9840F@fuhm.net>
	<47FAADB6.9000505@pangalactic.us>
Message-ID: <6ce0ac130804071938g4499f152qc66bd2b0a45398be@mail.gmail.com>

>  The most important overall message would seem to be:  use web[1], since
>  even if web2 is not phased out, as much as possible of web2 is being
>  "back-ported" to web[1], and there will probably be a relatively easy
>  migration path to web2 if/when it is completed at some point in the
>  future.

For us the only reason we moved to web2 was the http1.1 support.
Until web has that implemented, we will have a tough time moing back
to web2.  But at least we know the direction things are headed.

Brian

>  No?
>
>  Steve
>
>  _______________________________________________
>  Twisted-web mailing list
>  Twisted-web at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From ellisonbg.net at gmail.com  Mon Apr  7 20:47:34 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Mon, 7 Apr 2008 20:47:34 -0600
Subject: [Twisted-web] Re: [Twisted-Python] April 20 Sprint
In-Reply-To: <20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<20080407234909.21558.427605568.divmod.xquotient.10491@joule.divmod.com>
Message-ID: <6ce0ac130804071947t294d3f5dq86ad69f07091cb62@mail.gmail.com>

>  I don't have time to do a full overview of what's good, what's bad, and
> what's ugly in every module in web, web2, and nevow, but we did make some
> decisions about where things are going in the *future* at PyCon.

This is great news.  I think the decision to merge things in web2 back
into web is a good one as well.

>  I should have done this already, but I just did a brief overview of the
> write-up on the wiki: http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
>  Wiki editors, please add links in the appropriate places.
>
>  Users, what do you think?  If you would like clarifications and edits to
> this plan, please ask.  More developers than just me should know what's
> going on and I hope we can all keep expanding that page to give the best
> picture of what's going on ...
>
>  _______________________________________________
>  Twisted-web mailing list
>  Twisted-web at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>



From glyph at divmod.com  Mon Apr  7 21:57:48 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Apr 2008 03:57:48 -0000
Subject: [Twisted-Python] April 20 Sprint
In-Reply-To: <d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<d06a5cd30804071815o2ea9123ax89e7840a114d8f37@mail.gmail.com>
Message-ID: <20080408035748.21558.1434515203.divmod.xquotient.10501@joule.divmod.com>

On 01:15 am, jml at mumak.net wrote:
>I could be persuaded to host / attend a Sydney sprint on April 19th.
>Any chance of the foundation buying *us* pizza?

We'll see.  I'll be happy if I can figure out how to get food on *one* 
continent, though. ;-).



From teemu.harju at gmail.com  Tue Apr  8 05:28:45 2008
From: teemu.harju at gmail.com (Teemu Harju)
Date: Tue, 8 Apr 2008 14:28:45 +0300
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
Message-ID: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>

Hi,
I'm kind of a newbie in what comes to using Twisted and I'm stuck with a
problem that I cannot seem to solve.

My problem is that I'm experimenting with "trial" to be able to test my
code. (I've heard that it is a wise thing to do ;-)). What I have is a
simple HTTP resource that allows POSTing data. I made this example to
illustrate my problem...

import urllib

from twisted.internet import reactor
from twisted.web import resource, server, client, error
from twisted.trial import unittest

class TestResource(resource.Resource):

    def render_POST(self, request):
        return str(request.args)


class SimpleResourceTest(unittest.TestCase):

    def _listen(self, site):
        return reactor.listenTCP(0, site, interface="127.0.0.1")

    def setUp(self):
        r = resource.Resource()
        r.putChild("test", TestResource())
        site = server.Site(r, timeout=None)
        self.port = self._listen(site)
        self.portno = self.port.getHost().port

    def tearDown(self):
        if self.port:
            return self.port.stopListening()

    def getURL(self, path):
        return "http://127.0.0.1:%d/%s" % (self.portno, path)

    def test_postdata(self):
        d = client.getPage(self.getURL("test"), method="POST",
                           postdata=urllib.urlencode({"test": "data"}))
        d.addCallback(self.failIfEqual, "{}")
        return d


I used some of the unittests in Twisted Web as an example and at least I
think I've got this right. However, as you can see if you run this, the test
fails. Which means that the request.args dictionary is empty. However, there
should be something since I've set the postdata parameter on the
client.getPage() method. I would really appreciate all the help here since I
cannot figure out where the postdata disappears.

Regards,

Teemu

-- 
Teemu Harju

email/jabber: teemu.harju at gmail.com
blog: http://www.teemuharju.net

~~ "A computer is like air conditioning: it becomes useless when you open
windows." ~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080408/e20d9ec3/attachment.html>

From wthie at thiengineering.ch  Tue Apr  8 07:29:47 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 08 Apr 2008 15:29:47 +0200
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
Message-ID: <47FB734B.6000007@thiengineering.ch>

Just read your TwistedWebPlan and it sounds better than what I was able 
to dream up during my sufferings.

I know that without all the foundation work going into twisted and nevow 
I would never have been able to build a stable running production game 
server. So it's good to know in what direction things evolve!

A big 'thank you' (drawing my hat and bowing)!

Werner

glyph at divmod.com wrote:
...snip
> http://twistedmatrix.com/trac/wiki/TwistedWebPlan - for more details.
snip...



From theatilla at gmail.com  Tue Apr  8 12:40:17 2008
From: theatilla at gmail.com (Atilla)
Date: Tue, 8 Apr 2008 20:40:17 +0200
Subject: [Twisted-Python] failures, errbacks and exception handling
Message-ID: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>

Im a little confused when it comes to handling some errors in twisted.
More specifically - when it comes to processing failures that are
raised in adbapi.

Now - when runInteraction succeeds, all is ok and things are commited,
that's nice and clean. When it raises an error, I can do two things -
either wrap my calls inside the callable passes to runInteraction in
Try:Except, or attach an errback.

I'm not exactly sure which one to take. I only need to catch specific
exceptions - Mysql OperationalError (timeouts and such, in case I want
to retry). Everything else is critical and should log & abort.

The way I understood it, I should attach an errback where I call
trap() on the passed Failure. So I'd do like

handleError(falure):
  error = failure.trap(OperationalError)
  if error:
    log.err(error)

myCall.addErrback(handleError)

As far as I get it, if the error is different (say, syntax one) it'll
be propagated. However afteri add the trap call() nothing else gets
past that handleError, no Unhandled Errors are logged, and my error
object contains nothing. I wonder what am I missing here.



From drew.smathers at gmail.com  Tue Apr  8 14:18:30 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 8 Apr 2008 16:18:30 -0400
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
Message-ID: <368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:40 PM, Atilla <theatilla at gmail.com> wrote:
> Im a little confused when it comes to handling some errors in twisted.
>  More specifically - when it comes to processing failures that are
>  raised in adbapi.
>
>  Now - when runInteraction succeeds, all is ok and things are commited,
>  that's nice and clean. When it raises an error, I can do two things -
>  either wrap my calls inside the callable passes to runInteraction in
>  Try:Except, or attach an errback.
>
>  I'm not exactly sure which one to take. I only need to catch specific
>  exceptions - Mysql OperationalError (timeouts and such, in case I want
>  to retry). Everything else is critical and should log & abort.
>
>  The way I understood it, I should attach an errback where I call
>  trap() on the passed Failure. So I'd do like
>
>  handleError(falure):
>   error = failure.trap(OperationalError)
>   if error:
>     log.err(error)
>
>  myCall.addErrback(handleError)
>
>  As far as I get it, if the error is different (say, syntax one) it'll
>  be propagated. However afteri add the trap call() nothing else gets
>  past that handleError, no Unhandled Errors are logged, and my error
>  object contains nothing. I wonder what am I missing here.
>

That really depends on what you want to do.  If you just want to log
the exception (IndexError, etc) that you're not trapping, consider
creating a last ditch error handler like:

def crash(reason):
    log.err('ERROR: %s' % reason)
    ... Do the rollback or whatever else ...
    reason.printTraceback()

And add the above to your errback chain:

myCall.addErrback(handleError).addErrback(crash)


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From glyph at divmod.com  Tue Apr  8 15:01:02 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Apr 2008 21:01:02 -0000
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <47FB734B.6000007@thiengineering.ch>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
Message-ID: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>


On 01:29 pm, wthie at thiengineering.ch wrote:
>Just read your TwistedWebPlan and it sounds better than what I was able 
>to dream up during my sufferings.
>
>I know that without all the foundation work going into twisted and 
>nevow I would never have been able to build a stable running production 
>game server. So it's good to know in what direction things evolve!
>
>A big 'thank you' (drawing my hat and bowing)!

No problem!  We should have done this a long time ago.

The biggest thanks, of course, would be simply to submit patches for 
twisted.web and help us migrate web2's "greatest hits" back into the 
twisted.web server :).



From grant at osafoundation.org  Tue Apr  8 15:12:18 2008
From: grant at osafoundation.org (Grant Baillie)
Date: Tue, 8 Apr 2008 14:12:18 -0700
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
In-Reply-To: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
References: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
Message-ID: <C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>

On 8 Apr, 2008, at 04:28, Teemu Harju wrote:

> ...
>

> My problem is that I'm experimenting with "trial" to be able to test  
> my code. (I've heard that it is a wise thing to do ;-)). What I have  
> is a simple HTTP resource that allows POSTing data. I made this  
> example to illustrate my problem...
>
> ...

>

>     def test_postdata(self):
>         d = client.getPage(self.getURL("test"), method="POST",
>                            postdata=urllib.urlencode({"test":  
> "data"}))
>         d.addCallback(self.failIfEqual, "{}")
>         return d
>

You need to specify a Content-Type in your POST request, e.g.:

         d = client.getPage(self.getURL("test"), method="POST",
                            postdata=urllib.urlencode({"test": "data"}),
                            headers={"Content-Type": "application/x- 
www-form-urlencoded"})

Otherwise, your POST request is sent as text/html, and the HTTP server  
code won't know to parse args out of the request body.

(Probably this should have gone to twisted-web rather than twisted- 
python, since in the end it wasn't really about trial, but http ;).

--Grant





From clemesha at gmail.com  Tue Apr  8 16:03:08 2008
From: clemesha at gmail.com (alex clemesha)
Date: Tue, 8 Apr 2008 15:03:08 -0700
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <d272f0690804081503u2c0d82fbs892668336a162e26@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:01 PM,  <glyph at divmod.com> wrote:
>
>  On 01:29 pm, wthie at thiengineering.ch wrote:
>
> > Just read your TwistedWebPlan and it sounds better than what I was able to
> dream up during my sufferings.
> >
> > I know that without all the foundation work going into twisted and nevow I
> would never have been able to build a stable running production game server.
> So it's good to know in what direction things evolve!
> >
> > A big 'thank you' (drawing my hat and bowing)!
> >
>
>  No problem!  We should have done this a long time ago.
>
>  The biggest thanks, of course, would be simply to submit patches for
> twisted.web and help us migrate web2's "greatest hits" back into the
> twisted.web server :).
>
Yes, the TwistedWebPlan looks like a Good Thing.

One question though, what are the "greatest hits" of web2 in the
developers opinions?
I think this is an important step in making it possible for people (non experts)
to efficiently target what is "good", so that they might have a chance
to contribute patches efficiently.

I've looked through the web/web2 source code and all the unittests enough to
know that mostly the "issues" are a  "problem of perception" (see
http://twistedmatrix.com/trac/wiki/TwistedWebPlan).
So I bet more communication (on the wiki) would help prevent further
problems of this nature.

A quick "brain dump" of these "good" and "bad" pieces on some wiki page
 would probably get some momentum going!

Thanks,
Alex



>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From phil at bubblehouse.org  Tue Apr  8 18:03:40 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 08 Apr 2008 20:03:40 -0400
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>
	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>
	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>
	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>
	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>
	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <188188A4-C4EE-4999-96E7-26C7E4E009CC@bubblehouse.org>

On Apr 8, 2008, at 5:01 PM, glyph at divmod.com wrote:
> On 01:29 pm, wthie at thiengineering.ch wrote:
>> A big 'thank you' (drawing my hat and bowing)!
>
> No problem!  We should have done this a long time ago.
>
> The biggest thanks, of course, would be simply to submit patches  
> for twisted.web and help us migrate web2's "greatest hits" back  
> into the twisted.web server :).

Since we're, you know, talking about it...

I'd really love it if someone could help me with my web1 port of  
web2's WSGI module. It's completely functional, and no longer has any  
dependencies on web2, but it needs unit tests.

	http://twistedmatrix.com/trac/ticket/2753

I started working on imitating the test for the web2 version (twisted/ 
web2/test/test_wsgi.py), but it's been idling in my workspace for  
some time, so I thought I'd just put a feeler out for anyone willing  
to give it a try, or even (gasp!) write some tests. ;-)

I am using this in a production site, so I have great faith in it at  
least not having any show-stopper issues, but I just haven't gotten a  
chance to finish the tests.

-phil



From jml at mumak.net  Tue Apr  8 18:09:23 2008
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 9 Apr 2008 10:09:23 +1000
Subject: Proposed tracker tag (was Re: [Twisted-web] Re: [Twisted-Python]
	Thumbs up for TwistedWebPlan)
Message-ID: <d06a5cd30804081709k507f850ay12d4bae06881deb0@mail.gmail.com>

On Wed, Apr 9, 2008 at 10:03 AM, Phil Christensen <phil at bubblehouse.org> wrote:
>  I'd really love it if someone could help me with my web1 port of web2's
> WSGI module. It's completely functional, and no longer has any dependencies
> on web2, but it needs unit tests.
>
>         http://twistedmatrix.com/trac/ticket/2753
>
>  I started working on imitating the test for the web2 version
> (twisted/web2/test/test_wsgi.py), but it's been idling in my workspace for
> some time, so I thought I'd just put a feeler out for anyone willing to give
> it a try, or even (gasp!) write some tests. ;-)
>

I think a few tickets fall into this category. They have patches that
fix code, but for one reason or another they lack tests.

Could we, as a policy, add a 'patch' tag to such tickets when we see them?

jml



From teemu.harju at gmail.com  Tue Apr  8 20:15:36 2008
From: teemu.harju at gmail.com (Teemu Harju)
Date: Wed, 9 Apr 2008 05:15:36 +0300
Subject: [Twisted-Python] Problem with unittesting HTTP POST resource
In-Reply-To: <C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>
References: <96274d630804080428o55fde27clb9f289f622b41713@mail.gmail.com>
	<C508C88B-2051-48DE-BD71-37AC1EE76692@osafoundation.org>
Message-ID: <96274d630804081915p35ddebd4q48bb216e96cc38a8@mail.gmail.com>

Thanks a lot for the quick reply!
I was kind of struggling in my mind about whether to post to twisted-python
or twisted-web list and I guess I chose the wrong one because I assumed that
the problem was in they way I was using trial. Anyways, thanks again and
Twisted is awesome. ;-)

- Teemu

On Wed, Apr 9, 2008 at 12:12 AM, Grant Baillie <grant at osafoundation.org>
wrote:

> On 8 Apr, 2008, at 04:28, Teemu Harju wrote:
>
>  ...
> >
> >
>  My problem is that I'm experimenting with "trial" to be able to test my
> > code. (I've heard that it is a wise thing to do ;-)). What I have is a
> > simple HTTP resource that allows POSTing data. I made this example to
> > illustrate my problem...
> >
> > ...
> >
>
>
> >
>     def test_postdata(self):
> >        d = client.getPage(self.getURL("test"), method="POST",
> >                           postdata=urllib.urlencode({"test": "data"}))
> >        d.addCallback(self.failIfEqual, "{}")
> >        return d
> >
> >
> You need to specify a Content-Type in your POST request, e.g.:
>
>        d = client.getPage(self.getURL("test"), method="POST",
>                           postdata=urllib.urlencode({"test": "data"}),
>                           headers={"Content-Type":
> "application/x-www-form-urlencoded"})
>
> Otherwise, your POST request is sent as text/html, and the HTTP server
> code won't know to parse args out of the request body.
>
> (Probably this should have gone to twisted-web rather than twisted-python,
> since in the end it wasn't really about trial, but http ;).
>
> --Grant
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Teemu Harju

email/jabber: teemu.harju at gmail.com
blog: http://www.teemuharju.net

~~ "A computer is like air conditioning: it becomes useless when you open
windows." ~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080409/12fb6e03/attachment.html>

From nathan.stocks at gmail.com  Tue Apr  8 23:42:51 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 8 Apr 2008 23:42:51 -0600
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
Message-ID: <96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>

On Tue, Apr 8, 2008 at 2:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  def crash(reason):
>     log.err('ERROR: %s' % reason)
>     ... Do the rollback or whatever else ...
>     reason.printTraceback()

Just a note on the rollback: if there's an error, the adbapi run*
methods roll the transaction back before sending the error to the
errback -- so I don't know of anything left to rollback in the
errback.

~ Nathan



From theatilla at gmail.com  Wed Apr  9 02:20:07 2008
From: theatilla at gmail.com (Atilla)
Date: Wed, 9 Apr 2008 10:20:07 +0200
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
	<96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
Message-ID: <b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>

On 09/04/2008, Nathan <nathan.stocks at gmail.com> wrote:
> On Tue, Apr 8, 2008 at 2:18 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
>  >  def crash(reason):
>  >     log.err('ERROR: %s' % reason)
>  >     ... Do the rollback or whatever else ...
>  >     reason.printTraceback()
>
>
> Just a note on the rollback: if there's an error, the adbapi run*
>  methods roll the transaction back before sending the error to the
>  errback -- so I don't know of anything left to rollback in the
>  errback.
>
>
>  ~ Nathan

Yes, there's no need to rollback anything. I just want to attempt a
retry on the transaction, in cases of lock timeouts or deadlocks,
since there'll be the possibility of running clashing transactions at
the same time.

I still can't figure out how to make failure.trap() to work correctly
for me however. I'm trying to trap a mysqldb Operational exception,
but although the error is not further propagated after the trap call,
I get nothng in the return value.



From p.mayers at imperial.ac.uk  Wed Apr  9 03:42:22 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 09 Apr 2008 10:42:22 +0100
Subject: [Twisted-Python] Thumbs up for TwistedWebPlan
In-Reply-To: <20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
References: <20080407070721.21558.329553668.divmod.xquotient.10463@joule.divmod.com>	<c893b8530804070032o2814d833id4adad3727562d7d@mail.gmail.com>	<d272f0690804071407j46e71269n9f62eb98326e0e8a@mail.gmail.com>	<6ce0ac130804071426n316edea2wb530e479e229facf@mail.gmail.com>	<20080407235213.21558.1593247924.divmod.xquotient.10497@joule.divmod.com>	<47FB734B.6000007@thiengineering.ch>
	<20080408210102.21558.1384524367.divmod.xquotient.10522@joule.divmod.com>
Message-ID: <47FC8F7E.1010304@imperial.ac.uk>

glyph at divmod.com wrote:
> 
> On 01:29 pm, wthie at thiengineering.ch wrote:
>> Just read your TwistedWebPlan and it sounds better than what I was 
>> able to dream up during my sufferings.
>>
>> I know that without all the foundation work going into twisted and 
>> nevow I would never have been able to build a stable running 
>> production game server. So it's good to know in what direction things 
>> evolve!
>>
>> A big 'thank you' (drawing my hat and bowing)!
> 
> No problem!  We should have done this a long time ago.
> 
> The biggest thanks, of course, would be simply to submit patches for 
> twisted.web and help us migrate web2's "greatest hits" back into the 
> twisted.web server :).

Is there a trac report with tickets for the desired work(s)? Or a list 
of things that we can open trac tickets on?



From sipickles at hotmail.com  Wed Apr  9 09:13:34 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 09 Apr 2008 16:13:34 +0100
Subject: [Twisted-Python] Re: [Stackless] Deferreds and Tasklets
In-Reply-To: <E84ABA78-F84E-4235-807C-794EA564072A@gmail.com>
References: <BAY114-DAV356F62F28A687BC24A512BEF00@phx.gbl>
	<E84ABA78-F84E-4235-807C-794EA564072A@gmail.com>
Message-ID: <BAY114-DAV59164D5437691FC2E6001BEED0@phx.gbl>



Carlos Eduardo de Paula wrote:
> Hi Simon,
>
> Have you looked at the examples project? I made a small example using 
> PB in a producer/consumer demo where the producers and consumers 
> access a shared pool in a server using PB.
>
> You can see it here:
>
> http://code.google.com/p/stacklessexamples/wiki/StacklessTwisted

Oh yeah! This is really great. I'd seen this a while back, but forget it 
was combining stackless/twisted so nicely!

Thanks!
>
> http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/twistedProdCon-Server.py 
>
> http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/twistedProdCon-Client.py 
>
>
> Regards,
>
> Carlos
>
>
> On 06/04/2008, at 13:42, Simon Pickles wrote:
>
>> So I am still fiddling with interesting ways to combine stackless and
>> twisted. Its fun, but I am probably naively hacking! (I always seem to
>> want to use the deprecated code!- probably says a lot about me?)
>>
>> I'm using Perspective Broker to do remote calls to an app running
>> Twisted-Stackless. PB is positively brilliant, btw.
>>
>> So say the a remote caller wants to get data from my app. It calls
>> remote_GetData() in my PB app, which uses the actor model(each object
>> has a channel.receive() running in its own tasklet).
>>
>> remote_GetData() has to send a message thru a stackless.channel() to get
>> the required data, then it must stackless.schedule()
>>
>> Now it waits for the result to arrive at its own channel.receive(),
>> which then needs to be passed back as the return value of 
>> remote_GetData().
>>
>> Is this possible?
>>
>> Perhaps like this:
>>
>> from twisted.spread import pb
>> from twisted.internet import reactor
>> import stackless
>>
>> dbRx = stackless.channel()
>> pbRx = stackless.channel()
>>
>> class DataSource:
>>   def Listen(self):
>>       while 1:
>>           msg = dbrx.receive() # a channel will arrive here
>>           msg.send(42)
>>           stackless.schedule()
>>   def __init__(self):
>>       stackless.tasklet(self.Listen)()
>>
>>
>> class pbBroker(pb.Referenceable):
>>   def remote_GetData(self):
>>       dbRx.send(pbRx)
>>       result = pbRx.receive()
>>       # return 42 to remote caller thru pb
>>       return result
>>
>> This isn't ideal since I don't want pbBroker to block during the
>> receive. I'd like it to closer resemble the Listen loop of the first
>> class, so other objects can talk to pbBroker while it is waiting. Maybe
>> like this:
>>
>> class pbBroker(pb.Referenceable):
>>   def Listen(self):
>>       while 1:
>>           msg = self.rx.receive()
>>           # do stuff with msg from other local objects
>>           stackless.schedule()
>>   def __init__(self):
>>       self.rx = stackless.channel()
>>       stackless.tasklet(self.Listen)()
>>   def remote_GetData(self):
>>       ch = stackless.channel()
>>       dbRx.send(ch)
>>       # can block since its a dedicated channel
>>       result = ch.receive()
>>       # return 42 to remote caller thru pb
>>       return result
>> I guess the same problem arise when remote_GetData() has to use a
>> deferred too.
>>
>> from twisted.enterprise import adbapi
>> dbPool = adbapi.ConnectionPool("MySQLdb", db="db", user="user",
>> passwd="pw")
>>
>> class pbBroker(pb.Referenceable):
>>   def remote_GetDeferredData(self):
>>       d = dbPool.runInteraction(DoQuery, "SELECT * FROM users") #
>> DoQuery just wraps a query with try/except
>>       d.addCallback(self.GetDeferredData_Success)
>>
>>   def GetDeferredData_Success(self, result):
>>       # return to remote caller thru pb
>>       return result   ## WRONG
>>
>> How can I return a value for a remote_* call when I only get that value
>> thru another callback?
>>
>> Sorry its a long and confusing one!
>>
>> Simon
>>
>>
>> -- 
>> Linux user #458601 - http://counter.li.org.
>>
>>
>>
>>
>>
>> -- 
>> Linux user #458601 - http://counter.li.org.
>>
>>
>>
>>
>> _______________________________________________
>> Stackless mailing list
>> Stackless at stackless.com
>> http://www.stackless.com/mailman/listinfo/stackless
>
>
>

-- 
Linux Counter: User# 424693 






From nathan.stocks at gmail.com  Wed Apr  9 10:30:33 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 9 Apr 2008 10:30:33 -0600
Subject: [Twisted-Python] failures, errbacks and exception handling
In-Reply-To: <b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>
References: <b53c932d0804081140x647360fdqa85903ebff7025dd@mail.gmail.com>
	<368574aa0804081318y5f2b4d8bj965806858236d812@mail.gmail.com>
	<96c9d6a80804082242w1737f95q496d6025e4af7ae7@mail.gmail.com>
	<b53c932d0804090120r4e59fc48v259b1a5de150006a@mail.gmail.com>
Message-ID: <96c9d6a80804090930q6bef76co37ef694af384d32b@mail.gmail.com>

On Wed, Apr 9, 2008 at 2:20 AM, Atilla <theatilla at gmail.com> wrote:
>  I still can't figure out how to make failure.trap() to work correctly
>  for me however. I'm trying to trap a mysqldb Operational exception,
>  but although the error is not further propagated after the trap call,
>  I get nothng in the return value.

I'm only two-months into twisted myself, and have never used trap(),
but from reading the api docs here:

http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html#trap

...it would seem that calling trap causes it to immediately
raise-to-the-next-errback anything you _don't_ trap.  Perhaps that's
the problem you're experiencing?  (Just a stab in the dark)

~ Nathan



From weiwei at baosight.com  Wed Apr  9 21:20:23 2008
From: weiwei at baosight.com (weiwei)
Date: Thu, 10 Apr 2008 11:20:23 +0800
Subject: [Twisted-Python] how to choose reactor in unix?
Message-ID: <001a01c89ab9$d0cd6c90$5a22190a@wwei>

hi,all!

When I develop a twisted program,which reactor is the best? 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080410/f62baf45/attachment.html>

From adelagon at gmail.com  Wed Apr  9 21:32:23 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Thu, 10 Apr 2008 11:32:23 +0800
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
References: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
Message-ID: <7a01f6c00804092032v5b6b3e16u7b4dd7bd259b71ea@mail.gmail.com>

Read about the epollreactor

On Thu, Apr 10, 2008 at 11:20 AM, weiwei <weiwei at baosight.com> wrote:

>  hi,all!
>
> When I develop a twisted program,which reactor is the best?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080410/576f3426/attachment.html>

From exarkun at divmod.com  Thu Apr 10 05:53:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 07:53:19 -0400
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
Message-ID: <20080410115319.6859.382014641.divmod.quotient.27515@ohm>

On Thu, 10 Apr 2008 11:20:23 +0800, weiwei <weiwei at baosight.com> wrote:
>hi,all!
>
>When I develop a twisted program,which reactor is the best?
>

Reactors present a uniform interface.  When you develop a Twisted program,
it rarely makes any difference which reactor you use.  When you deploy a
Twisted program, the target platform and scalability concerns should
to the choice.  If you use `twistd´, then all you have to do to use a
different reactor is pass a different value for the `--reactor´ option.
In most cases, your actual application shouldn't know or care which reactor
is being used.

Jean-Paul



From roland.hedberg at adm.umu.se  Thu Apr 10 11:37:33 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Thu, 10 Apr 2008 19:37:33 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
Message-ID: <47FE505D.1030806@adm.umu.se>

Hi!

I'm building a Twisted based system where the basic components are 
nodes. Information flows between these nodes and one of the transport 
protocols that can be used are HTTP/HTTPS.

Now, both servers and clients has certificates and hostname verification 
is a must. Because of that I'd love to be able to access the 
subjectAltName extension.

I started with pyOpenSSL and I was very happy with that until I realized 
that there is no support for the subjectAltName (SAN) extension in 
pyOpenSSL.

Over to M2Crypto, which has support for SAN, but now I can not get 
anything to work. I guess there is some mismatch between the interfaces 
to the Context class provided by M2Crypto and pyOpenSSL. Because I just 
imported SSL from M2Crypto instead of OpenSSL and left the rest of the 
code more or less intact.

The error I get is:

  File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/internet/ssl.py", 
line 169, in createInternetSocket
  return SSL.Connection(self.ctxFactory.getContext(), sock)
  TypeError: Connection() argument 1 must be Context, not instance

So, if it possible to use M2Crypto together with Twisted ?
If so, can someone tell me what I might have missed ?

-- Roland



From exarkun at divmod.com  Thu Apr 10 11:46:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 13:46:25 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <47FE505D.1030806@adm.umu.se>
Message-ID: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>

On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>
> [snip]
>
>The error I get is:
>
>  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>  TypeError: Connection() argument 1 must be Context, not instance
>
>So, if it possible to use M2Crypto together with Twisted ?
>If so, can someone tell me what I might have missed ?
>

M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
instead of pyOpenSSL, you should use the APIs M2Crypto provides.

I can't find the M2Crypto documentation in 15 seconds of googling, but
here's some random internet stuff that seems to use the APIs you are
looking for:

  https://bosshog.lbl.gov/repos/benchmarks/perfcounter/cfg/m2crypto-server-config.tac

Jean-Paul



From ellisonbg.net at gmail.com  Thu Apr 10 12:37:59 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 12:37:59 -0600
Subject: [Twisted-Python] Problems with trial in 8.0.1
Message-ID: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>

Hi,

I just got around to installing twisted 8.0.1 (from the tarball) and I
see the following when I run

trial twisted

Traceback (most recent call last):
  File "/usr/local/bin/trial", line 5, in <module>
    pkg_resources.run_script('Twisted==8.0.1', 'trial')
  File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
line 448, in run_script

  File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
line 1160, in run_script
    execfile(script_filename, namespace, namespace)
pkg_resources.ResolutionError: No script named 'trial'

I did not use setuptools to install twisted (just plain old python
setup.py install).  Any ideas?

Brian



From warner at lothar.com  Thu Apr 10 13:57:24 2008
From: warner at lothar.com (Brian Warner)
Date: Thu, 10 Apr 2008 12:57:24 -0700
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon Twisted?
Message-ID: <20080410125724.5d3bdd43@fluxx.allmydata.com>

We've hit a problem in the Tahoe packaging scheme: we kind of want to use the
setuptools install_requires= feature to declare that Tahoe depends upon
Twisted (as well as other things). This allows someone to type "easy_install
allmydata-tahoe" and get everything built for them. It also allows our build
process to download and build anything that the user doesn't already have on
their system, making the build process much easier.

The trouble that we've run into is that various flavors of linux have made
different decisions about which setuptools "distribution" names to use. (Note
that these "distribution names" are the name= arguments to setup(), as
opposed to the python package names like or module names. Distribution names
tend to map to debian package names.)

http://allmydata.org/trac/tahoe/ticket/378 has more details, but basically
Ubuntu is shipping .egg_info data that declares that the "Twisted"
distribution is installed, whereas debian sid is shipping data that says
"Twisted-Core" is installed. Since the setuptools dependency syntax is not
rich enough to provide alternatives, the Tahoe setup.py is forced to choose
between depending upon "Twisted" or upon "Twisted-Core".

The drawback for choosing the opposite of the target platform is that users
on that platform will find their tahoe builds downloading and building the
whole Twisted-8.0.1 tarball, despite having a perfectly functional
twisted-2.5.0 installation already present. This is annoying.

We haven't figured out a good resolution to this problem yet. The best answer
I can think of would be to change the tahoe setup.py script to change the
dependencies that it declares based upon what is currently installed. This
would be a bit wonky but might avoid spurious download+builds. Another answer
might be for the debian 'python-twisted' metapackage (which depends upon
python-twisted-core, python-twisted-web, etc) to provide an .egg-info that
claims to represent the 'Twisted' distribution, but I can imagine problems
with that. Another possibility would be for the Ubuntu python-twisted-core
package to install two .egg-info files, the one for 'Twisted' that they're
already doing, and another for 'Twisted-Core'.. if that were the case, we
could have Tahoe depend upon 'Twisted-Core ' and 'Twisted-Web' and be done
with it.

So, no answers, but we're bringing up the issue in case anyone else has run
into a similar problem, or has some bright ideas on the subject.

cheers,
 -Brian



From radix at twistedmatrix.com  Thu Apr 10 14:17:04 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 Apr 2008 16:17:04 -0400
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon
	Twisted?
In-Reply-To: <20080410125724.5d3bdd43@fluxx.allmydata.com>
References: <20080410125724.5d3bdd43@fluxx.allmydata.com>
Message-ID: <60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>

On Thu, Apr 10, 2008 at 3:57 PM, Brian Warner <warner at lothar.com> wrote:

>  http://allmydata.org/trac/tahoe/ticket/378 has more details, but basically
>  Ubuntu is shipping .egg_info data that declares that the "Twisted"
>  distribution is installed, whereas debian sid is shipping data that says
>  "Twisted-Core" is installed. Since the setuptools dependency syntax is not
>  rich enough to provide alternatives, the Tahoe setup.py is forced to choose
>  between depending upon "Twisted" or upon "Twisted-Core".

[stuff about how somebody distributes an .egg for Twisted-Core]

This may not be helpful, but it is additional data: Twisted
subprojects are not easy_installable in any reasonable way. The only
thing that it makes sense to easy_install right now is "Twisted". This
has to do with the way easy_install attempts to install non-root
packages. Anyway, maybe it makes sense to depend on "Twisted Core"
sometimes to workaround buggy Debian cruft, but bad things will happen
if this results in easy_install ever attempting to download Twisted
Core as opposed to Twisted.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Thu Apr 10 14:19:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 Apr 2008 16:19:02 -0400
Subject: [Twisted-Python] Problems with trial in 8.0.1
In-Reply-To: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
References: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
Message-ID: <60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>

On Thu, Apr 10, 2008 at 2:37 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
>  trial twisted
>
>  Traceback (most recent call last):
>   File "/usr/local/bin/trial", line 5, in <module>
>     pkg_resources.run_script('Twisted==8.0.1', 'trial')
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  line 448, in run_script
>
>   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  line 1160, in run_script
>     execfile(script_filename, namespace, namespace)
>  pkg_resources.ResolutionError: No script named 'trial'
>
>  I did not use setuptools to install twisted (just plain old python
>  setup.py install).  Any ideas?

I have the feeling that this has something to do with the broken
half-Twisted that Apple included in their OS. I can't offer any more
help than that off the bat, though.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From ellisonbg.net at gmail.com  Thu Apr 10 14:44:45 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 14:44:45 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
Message-ID: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>

Hi,

Earlier today I posted about a problem with trial.  I reinstalled
8.0.1 and the origianl problem has gone away.  Now I get the following
error.  It appears that trial is trying to write something to the
plugins directory.  But that doesn't (and shouldn't) have the correct
write permissions.  I can run trial with as sudo, but not as a regular
user.  Isn't it bad practice to rely on being able to write to
site-packages at runtime.  Shouldn't such things do into a .twisted
directory or something like that?

Brian

Here is what I get

vpn14:~ bgranger$ trial ipython1
Traceback (most recent call last):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/scripts/trial.py",
line 293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/scripts/trial.py",
line 279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugin.py",
line 200, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugin.py",
line 179, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/filepath.py",
line 540, in setContent
    sib.open('w').write(content)
  File "/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/python/filepath.py",
line 369, in open
    return open(self.path, mode+'b')
exceptions.IOError: [Errno 13] Permission denied:
'/Library/Python/2.5/site-packages/Twisted-8.0.1-py2.5-macosx-10.5-i386.egg/twisted/plugins/dropin.cache.new'



From ellisonbg.net at gmail.com  Thu Apr 10 14:46:33 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 14:46:33 -0600
Subject: [Twisted-Python] Problems with trial in 8.0.1
In-Reply-To: <60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>
References: <6ce0ac130804101137j61b4090ch1282da78c8ac54d0@mail.gmail.com>
	<60ed19d40804101319x6d9e5ea8s84e85b907efaa169@mail.gmail.com>
Message-ID: <6ce0ac130804101346y6ebff2c5qad7f7fdc287a13eb@mail.gmail.com>

I cleaned things out and did a complete reinstall (of twisted 8.0.1)
and this problem went away.  But there is another problem with trial
trying to write to my site-packages dir.  The details of this are in a
new post i just sent off.

Brian

On Thu, Apr 10, 2008 at 2:19 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> On Thu, Apr 10, 2008 at 2:37 PM, Brian Granger <ellisonbg.net at gmail.com> wrote:
>  >  trial twisted
>  >
>  >  Traceback (most recent call last):
>  >   File "/usr/local/bin/trial", line 5, in <module>
>  >     pkg_resources.run_script('Twisted==8.0.1', 'trial')
>  >   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  >  line 448, in run_script
>  >
>  >   File "/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/pkg_resources.py",
>  >  line 1160, in run_script
>  >     execfile(script_filename, namespace, namespace)
>  >  pkg_resources.ResolutionError: No script named 'trial'
>  >
>  >  I did not use setuptools to install twisted (just plain old python
>  >  setup.py install).  Any ideas?
>
>  I have the feeling that this has something to do with the broken
>  half-Twisted that Apple included in their OS. I can't offer any more
>  help than that off the bat, though.
>
>  --
>  Christopher Armstrong
>  International Man of Twistery
>  http://radix.twistedmatrix.com/
>  http://twistedmatrix.com/
>  http://canonical.com/
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Thu Apr 10 14:49:24 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 10 Apr 2008 16:49:24 -0400
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
Message-ID: <20080410204924.6859.1140123273.divmod.quotient.27685@ohm>

On Thu, 10 Apr 2008 14:44:45 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>Earlier today I posted about a problem with trial.  I reinstalled
>8.0.1 and the origianl problem has gone away.  Now I get the following
>error.  It appears that trial is trying to write something to the
>plugins directory.  But that doesn't (and shouldn't) have the correct
>write permissions.  I can run trial with as sudo, but not as a regular
>user.  Isn't it bad practice to rely on being able to write to
>site-packages at runtime.  Shouldn't such things do into a .twisted
>directory or something like that?

See the plugin cache section of the plugin howto documentation:

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3

Specifically, the paragraph about site-wide installations.

Jean-Paul



From ellisonbg.net at gmail.com  Thu Apr 10 15:23:58 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 15:23:58 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
Message-ID: <6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>

On Thu, Apr 10, 2008 at 2:49 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 10 Apr 2008 14:44:45 -0600, Brian Granger <ellisonbg.net at gmail.com>
> wrote:
>
> > Hi,
> >
> > Earlier today I posted about a problem with trial.  I reinstalled
> > 8.0.1 and the origianl problem has gone away.  Now I get the following
> > error.  It appears that trial is trying to write something to the
> > plugins directory.  But that doesn't (and shouldn't) have the correct
> > write permissions.  I can run trial with as sudo, but not as a regular
> > user.  Isn't it bad practice to rely on being able to write to
> > site-packages at runtime.  Shouldn't such things do into a .twisted
> > directory or something like that?
> >
>
>  See the plugin cache section of the plugin howto documentation:
>
>
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
>
>  Specifically, the paragraph about site-wide installations.
>
>  Jean-Paul

OK, there is documentation, but I still don't think it is a good idea
to rely on write permissions in this way.  Examples:

1) User downloads the Mac OS X installer for twisted from the twisted
web site.  They install it and run trial and get this nasty exception
about write permissions.  This installer installs into the system-wide
sitepackages and user will basically _always_ get this problem.

2)  User installed twisted by doing "sudo easy_install Twisted"  They
too get the exception anytime they run trial.

3) User installs using the tarball and installs using the standard
"sudo python setup.py install."  They get it too, unless they add an
optional argument to have twisted installed in their home directory
some place.

The bottom line is that these installation routes are not exceptional,
they are the most common ones.  This approach almost ensures that
almost all of our users will observe this exception when they run our
(ipython1's) test suite.  The same will be true of any twisted using
project that relies on trial or (likely) the plugin architecture.

This behavior may be documented, but I still think it is a bad idea.

Am I misunderstanding something?

Thanks,

Brian



>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From glyph at divmod.com  Thu Apr 10 16:17:05 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 Apr 2008 22:17:05 -0000
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
	<6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
Message-ID: <20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>


On 09:23 pm, ellisonbg.net at gmail.com wrote:
>OK, there is documentation, but I still don't think it is a good idea
>to rely on write permissions in this way.  Examples:

You're right, insofar as the person who should have read that 
documentation was the author of the installer, and not you.  As a post- 
installation action, the installer should load plugins and thereby write 
all of the appropriate cache files.

You're correct in saying that end-users should not have to deal with 
this edge-case.  However, that doesn't mean that the right fix is to 
write the files somewhere else; the right fix is to have installers that 
finish installation.



From ellisonbg.net at gmail.com  Thu Apr 10 16:33:14 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 10 Apr 2008 16:33:14 -0600
Subject: [Twisted-Python] More trial problems with 8.0.1
In-Reply-To: <20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>
References: <6ce0ac130804101344m2e91909bg8a9ebb92305b3019@mail.gmail.com>
	<20080410204924.6859.1140123273.divmod.quotient.27685@ohm>
	<6ce0ac130804101423m34d100dat420504e9013cfb42@mail.gmail.com>
	<20080410221705.21558.1475630839.divmod.xquotient.10558@joule.divmod.com>
Message-ID: <6ce0ac130804101533y753ba79ax4e322e6fa25a2172@mail.gmail.com>

> > OK, there is documentation, but I still don't think it is a good idea
> > to rely on write permissions in this way.  Examples:
> >
>
>  You're right, insofar as the person who should have read that documentation
> was the author of the installer, and not you.  As a post- installation
> action, the installer should load plugins and thereby write all of the
> appropriate cache files.
>
>  You're correct in saying that end-users should not have to deal with this
> edge-case.  However, that doesn't mean that the right fix is to write the
> files somewhere else; the right fix is to have installers that finish
> installation.

Either way sounds good to me.

Brian

>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From zooko at zooko.com  Thu Apr 10 19:18:58 2008
From: zooko at zooko.com (zooko)
Date: Thu, 10 Apr 2008 18:18:58 -0700
Subject: [Twisted-Python] how to depend (in a setuptools sense) upon
	Twisted?
In-Reply-To: <60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>
References: <20080410125724.5d3bdd43@fluxx.allmydata.com>
	<60ed19d40804101317s68f9476na9a6f0812b43250f@mail.gmail.com>
Message-ID: <F18E180B-8418-4232-9013-A07459BA0A41@zooko.com>

On Apr 10, 2008, at 1:17 PM, Christopher Armstrong wrote:
>
> This may not be helpful, but it is additional data: Twisted
> subprojects are not easy_installable in any reasonable way.

This is relevant; thanks for the information.


  Brian Warner wrote:
>
> Another answer
> might be for the debian 'python-twisted' metapackage (which depends  
> upon
> python-twisted-core, python-twisted-web, etc) to provide an .egg- 
> info that
> claims to represent the 'Twisted' distribution, but I can imagine  
> problems
> with that.

What problems?  That's what Ubuntu Hardy currently does.  The "python- 
twisted" Debian package currently provides the "Twisted" distutils  
distribution, but it doesn't currently declare that it does so in a  
machine-readable way.


Regards,

Zooko



From roland.hedberg at adm.umu.se  Thu Apr 10 23:54:47 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Fri, 11 Apr 2008 07:54:47 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>
References: <20080410174625.6859.69786575.divmod.quotient.27630@ohm>
Message-ID: <47FEFD27.8020107@adm.umu.se>

Jean-Paul Calderone wrote:
> On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
> <roland.hedberg at adm.umu.se> wrote:
>>
>> [snip]
>>
>> The error I get is:
>>
>>  File 
>> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>> packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>  TypeError: Connection() argument 1 must be Context, not instance
>>
>> So, if it possible to use M2Crypto together with Twisted ?
>> If so, can someone tell me what I might have missed ?
>>
> 
> M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
> instead of pyOpenSSL, you should use the APIs M2Crypto provides.
> 

So, I've studied the wrapper that the Chandler project provides.
Unfortunately they don't provide a wrapper for SSLServer which is what I 
need. Which made me look at the Twisted code.
So what's the correct way to 'wrap' SSLServer, should I wrap 
_AbstractServer or is that a no-no ?

-- Roland




From weiwei at baosight.com  Fri Apr 11 02:55:16 2008
From: weiwei at baosight.com (weiwei)
Date: Fri, 11 Apr 2008 16:55:16 +0800
Subject: [Twisted-Python] why my my twisted program hanged and crash
Message-ID: <001001c89bb1$c4c26510$5a22190a@wwei>

hi,all!

Some day ago,I found my twisted program hanged and I try to kill it with "kill -15 mypid",then after some minutes,the program crashed and generated a core file.

So I analyze the core with dbx(my os is AIX 5.3),the following is the result:

Type 'help' for help.
[using memory image in core]
reading symbolic information ...

Segmentation fault in extend_brk at 0xd02f97c0 ($t1)
0xd02f97c0 (extend_brk+0xc8) 90040004        stw   r0,0x4(r4)
(dbx) where
extend_brk(internal error: assertion failed at line 3626 in file frame.c
??, internal error: assertion failed at line 3626 in file frame.c
??, internal error: assertion failed at line 3626 in file frame.c
??) at 0xd02f97c0
(dbx) 

I don't know why this happened:
1) why my twisted program hanged? (I use pollreactor)
2) why my twisted program crashed and generated a core file?



weiwei
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080411/a6197fe4/attachment.html>

From theatilla at gmail.com  Fri Apr 11 04:29:15 2008
From: theatilla at gmail.com (Atilla)
Date: Fri, 11 Apr 2008 12:29:15 +0200
Subject: [Twisted-Python] how to choose reactor in unix?
In-Reply-To: <20080410115319.6859.382014641.divmod.quotient.27515@ohm>
References: <001a01c89ab9$d0cd6c90$5a22190a@wwei>
	<20080410115319.6859.382014641.divmod.quotient.27515@ohm>
Message-ID: <b53c932d0804110329l21a64c52le941e760f353583f@mail.gmail.com>

If the number of connections is expected to be significant, you should
take a look at the difference between select and poll in therms of
their limits and read on the epoll interface. The page of libevent has
some useful explanations and graphs.



From exarkun at divmod.com  Fri Apr 11 07:15:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Apr 2008 09:15:08 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <47FEFD27.8020107@adm.umu.se>
Message-ID: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>

On Fri, 11 Apr 2008 07:54:47 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Jean-Paul Calderone wrote:
>>On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
>><roland.hedberg at adm.umu.se> wrote:
>>>
>>>[snip]
>>>
>>>The error I get is:
>>>
>>>  File 
>>>"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>>>packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>>  TypeError: Connection() argument 1 must be Context, not instance
>>>
>>>So, if it possible to use M2Crypto together with Twisted ?
>>>If so, can someone tell me what I might have missed ?
>>
>>M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
>>instead of pyOpenSSL, you should use the APIs M2Crypto provides.
>
>So, I've studied the wrapper that the Chandler project provides.
>Unfortunately they don't provide a wrapper for SSLServer which is what I 
>need. Which made me look at the Twisted code.
>So what's the correct way to 'wrap' SSLServer, should I wrap _AbstractServer 
>or is that a no-no ?

SSLServer implements a very simple set of functionality.  It will be very
easy to replicate it using the M2Crypto API.  You just need a startService
(and maybe a privilegedStartService) that calls the M2Crypto server setup
API and a stopService that calls the M2Crypto server shutdown API (which I
hope is just IListeningPort.stopListening).

_AbstractServer is private, so you shouldn't touch it.  You can look at its
implementation (barely a page) to get some hints about what to write, though.

Jean-Paul



From vvangelovski at gmail.com  Fri Apr 11 07:32:22 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 15:32:22 +0200
Subject: [Twisted-Python] ssh client and server
Message-ID: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>

I want to write a custom ssh server and client. the client should
authenticate, execute just one command on the server and get back the
response. I've been following the examples from the O'reilly book, but
I'm kinda lost. Basicaly what I wand to do is use the client from the
last example, but a simpler server without a terminal emulator,
nothing fancy. Can anyone help?



From exarkun at divmod.com  Fri Apr 11 07:57:20 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Apr 2008 09:57:20 -0400
Subject: [Twisted-Python] why my my twisted program hanged and crash
In-Reply-To: <001001c89bb1$c4c26510$5a22190a@wwei>
Message-ID: <20080411135720.6859.1616964668.divmod.quotient.28093@ohm>

On Fri, 11 Apr 2008 16:55:16 +0800, weiwei <weiwei at baosight.com> wrote:
>hi,all!
>
>Some day ago,I found my twisted program hanged and I try to kill it with "kill -15 mypid",then after some minutes,the program crashed and generated a core file.
>
>So I analyze the core with dbx(my os is AIX 5.3),the following is the result:
>
>Type 'help' for help.
>[using memory image in core]
>reading symbolic information ...
>
>Segmentation fault in extend_brk at 0xd02f97c0 ($t1)
>0xd02f97c0 (extend_brk+0xc8) 90040004        stw   r0,0x4(r4)
>(dbx) where
>extend_brk(internal error: assertion failed at line 3626 in file frame.c
>??, internal error: assertion failed at line 3626 in file frame.c
>??, internal error: assertion failed at line 3626 in file frame.c
>??) at 0xd02f97c0
>(dbx)
>
>I don't know why this happened:
>1) why my twisted program hanged? (I use pollreactor)
>2) why my twisted program crashed and generated a core file?
>
>

This probably isn't enough information to debug the problem (even if I had
any AIX experience).  It would probably be good if you could find out what
the Python process was doing when it was "hung".

Also, note that Twisted developers don't do any regular testing on AIX.
It may be that Twisted doesn't work very well on that platform.

Jean-Paul



From jakamkon at gmail.com  Fri Apr 11 08:33:23 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Fri, 11 Apr 2008 15:33:23 +0100
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
Message-ID: <2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>

Have a look at http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py

2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
> I want to write a custom ssh server and client. the client should
>  authenticate, execute just one command on the server and get back the
>  response. I've been following the examples from the O'reilly book, but
>  I'm kinda lost. Basicaly what I wand to do is use the client from the
>  last example, but a simpler server without a terminal emulator,
>  nothing fancy. Can anyone help?
>



From sol at sr-research.com  Fri Apr 11 08:43:41 2008
From: sol at sr-research.com (Sol Simpson)
Date: Fri, 11 Apr 2008 10:43:41 -0400
Subject: [Twisted-Python] NNTP example with authentication
Message-ID: <00df01c89be2$73667db0$5a337910$@com>

Can anyone point me in the direction of a twisted example using the nntp
client connecting to a news server that requires authentication?

 

Thanks in advance,

 

Sol 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080411/91c169c6/attachment.html>

From vvangelovski at gmail.com  Fri Apr 11 09:08:05 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 17:08:05 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
Message-ID: <47FF7ED5.9040401@gmail.com>

I did look at that too. In and Ideal situation I'd make a server that 
responds to exec from the client, generates a response for the command 
and sends it back to the client, then drops the connection. But I can't 
find a way to do that.

Kuba Konczyk wrote:
> Have a look at http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
>
> 2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
>   
>> I want to write a custom ssh server and client. the client should
>>  authenticate, execute just one command on the server and get back the
>>  response. I've been following the examples from the O'reilly book, but
>>  I'm kinda lost. Basicaly what I wand to do is use the client from the
>>  last example, but a simpler server without a terminal emulator,
>>  nothing fancy. Can anyone help?
>>
>>     
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From cyli at alum.mit.edu  Fri Apr 11 09:50:29 2008
From: cyli at alum.mit.edu (cyli at alum.mit.edu)
Date: Fri, 11 Apr 2008 15:50:29 -0000
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <47FF7ED5.9040401@gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
	<47FF7ED5.9040401@gmail.com>
Message-ID: <20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>

If I understand you correctly, you want a shelless SSH server but one 
that executes commands.  For instance, it will accept the following 
connection:

ssh server "echo Hello!"

But not:

ssh server

Is this correct?  I'm did something similar, except that I also reject 
the first type of command.  What I did was to overwrite 
session.SSHSession's request_shell command to terminate the connection 
instead of returning a shell.    And then of course I subclassed 
ConchUser to return my own session (rather than session.SSHSession) for 
the channelLookup, and wrote my own realm that returned my user from 
requestAvatar.

There may be a better way to do it, but this is short, and it works. I 
stuck my code up here in case you want to look at it: 
http://cyli.livejournal.com/38382.html


On 03:08 pm, vvangelovski at gmail.com wrote:
>I did look at that too. In and Ideal situation I'd make a server that 
>responds to exec from the client, generates a response for the command 
>and sends it back to the client, then drops the connection. But I can't 
>find a way to do that.
>
>Kuba Konczyk wrote:
>>Have a look at 
>>http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
>>
>>2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
>>>I want to write a custom ssh server and client. the client should
>>>  authenticate, execute just one command on the server and get back 
>>>the
>>>  response. I've been following the examples from the O'reilly book, 
>>>but
>>>  I'm kinda lost. Basicaly what I wand to do is use the client from 
>>>the
>>>  last example, but a simpler server without a terminal emulator,
>>>  nothing fancy. Can anyone help?
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From vvangelovski at gmail.com  Fri Apr 11 14:13:06 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Fri, 11 Apr 2008 22:13:06 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<2e947fbb0804110733u2ab690dcqbeeb2465591172fd@mail.gmail.com>
	<47FF7ED5.9040401@gmail.com>
	<20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
Message-ID: <406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>

I guess I may be asking a wrong question. What I need is a
client-server protocol that can be very simple. The client logs on to
the server (user,pass) then the client asks  for something from the
server, or sends a small amount of data, the server then returns data
(up to 200k), the server drops the connection. But I also need maximum
protection against sniffing. Which is the best way to acomplish this?

On Fri, Apr 11, 2008 at 5:50 PM,  <cyli at alum.mit.edu> wrote:
> If I understand you correctly, you want a shelless SSH server but one that
> executes commands.  For instance, it will accept the following connection:
>
>  ssh server "echo Hello!"
>
>  But not:
>
>  ssh server
>
>  Is this correct?  I'm did something similar, except that I also reject the
> first type of command.  What I did was to overwrite session.SSHSession's
> request_shell command to terminate the connection instead of returning a
> shell.    And then of course I subclassed ConchUser to return my own session
> (rather than session.SSHSession) for the channelLookup, and wrote my own
> realm that returned my user from requestAvatar.
>
>  There may be a better way to do it, but this is short, and it works. I
> stuck my code up here in case you want to look at it:
> http://cyli.livejournal.com/38382.html
>
>
>
>
>  On 03:08 pm, vvangelovski at gmail.com wrote:
>
> > I did look at that too. In and Ideal situation I'd make a server that
> responds to exec from the client, generates a response for the command and
> sends it back to the client, then drops the connection. But I can't find a
> way to do that.
> >
> > Kuba Konczyk wrote:
> >
> > > Have a look at
> http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/sshsimpleserver.py
> > >
> > > 2008/4/11, Vasil Vangelovski <vvangelovski at gmail.com>:
> > >
> > > > I want to write a custom ssh server and client. the client should
> > > >  authenticate, execute just one command on the server and get back the
> > > >  response. I've been following the examples from the O'reilly book,
> but
> > > >  I'm kinda lost. Basicaly what I wand to do is use the client from the
> > > >  last example, but a simpler server without a terminal emulator,
> > > >  nothing fancy. Can anyone help?
> > > >
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Fri Apr 11 15:51:19 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 11 Apr 2008 15:51:19 -0600
Subject: [Twisted-Python] Twisted+setuptools fun ;-)
Message-ID: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>

Now that twisted is easy_installable, I am adding code to our
(ipython1's) setup.py script to declare Twisted as a dependency:

# Declare dependencies only if setuptools is being used
if 'setuptools' in sys.modules:
    setup_args["install_requires"] = [
        "IPython",
        "Twisted>=8.0.1",
    ]

This is simple enough.  But, it doesn't quite work:

[in ipython1 source directory]
> python setup.py install
...
Processing dependencies for ipython1==0.3alpha1
Searching for Twisted>=8.0.1
Reading http://pypi.python.org/simple/Twisted/
Reading http://twistedmatrix.com/
Reading http://www.twistedmatrix.com
Reading http://twistedmatrix.com/products/download
Reading http://twistedmatrix.com/projects/core/
Best match: Twisted 8.0.1
Downloading http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted-8.0.1.tar.bz2
Processing Twisted-8.0.1.tar.bz2
Running Twisted-8.0.1/setup.py -q bdist_egg --dist-dir
/tmp/easy_install-_TNbx3/Twisted-8.0.1/egg-dist-tmp-JztrBh
error: Setup script exited with twisted.python.dist module not found.
Make sure you have installed the Twisted core package before
attempting to install any other Twisted projects.

This message comes from the setup.py scripts in the individual
projects.  They all start with:

try:
    from twisted.python import dist
except ImportError:
    raise SystemExit("twisted.python.dist module not found.  Make sure you "
                     "have installed the Twisted core package before "
                     "attempting to install any other Twisted projects.")

The odd thing is that if I simply easy_install Twisted, all works fine:

> easy_install Twisted
... everything works as expected.

I know that other projects are started to declare their Twisted deps
this way.  Are other people running into this?

Thanks

Brian



From ddwiggins at advpubtech.com  Fri Apr 11 17:37:40 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 11 Apr 2008 16:37:40 -0700
Subject: [Twisted-Python] Using DeferredList with deferredGenerator or
	inlineCallbacks?
Message-ID: <ftoso5$6da$1@ger.gmane.org>

I have some code that uses defer.deferredGenerator (Python 2.4) like so:

>         info1InProgress = defer.waitForDeferred(self.info1Deferred(acctNo))
>         yield info1InProgress
>         info2InProgress = defer.waitForDeferred(self.info2Deferred(acctNo))
>         yield info2InProgress
>         # Both queries have results; process them
>         info1Result = info1InProgress.getResult()
>         info2Result = info2InProgress.getResult()

The "info" functions are two queries using adbapi whose results will be 
combined in subsequent code; they're independent, in that either could 
be run before the other.  My question is, could I use a DeferredList 
somehow in this case, without giving up the convenience of the inline 
style?  If so, could it also be done in 2.5 using inlineCallbacks?

-- 
Don Dwiggins
Advanced Publishing Technology




From maarten at treewalker.org  Fri Apr 11 17:48:45 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 12 Apr 2008 01:48:45 +0200
Subject: [Twisted-Python] ssh client and server
In-Reply-To: <406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>
References: <406b9fda0804110632m19f925b6x2f4bcda03953bb80@mail.gmail.com>
	<20080411155029.21558.380699968.divmod.xquotient.10604@joule.divmod.com>
	<406b9fda0804111313w56b7367fk829fe2c5626ea3a5@mail.gmail.com>
Message-ID: <200804120148.53600.maarten@treewalker.org>

On Friday 11 April 2008, Vasil Vangelovski wrote:
> I guess I may be asking a wrong question. What I need is a
> client-server protocol that can be very simple. The client logs on to
> the server (user,pass) then the client asks  for something from the
> server, or sends a small amount of data, the server then returns data
> (up to 200k), the server drops the connection. But I also need maximum
> protection against sniffing. Which is the best way to acomplish this?

HTTPS?

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080412/b2e9cf52/attachment.sig>

From zooko at zooko.com  Fri Apr 11 20:58:39 2008
From: zooko at zooko.com (zooko)
Date: Fri, 11 Apr 2008 19:58:39 -0700
Subject: [Twisted-Python] Twisted+setuptools fun ;-)
In-Reply-To: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>
References: <6ce0ac130804111451y794bec5dsc601513c12541b09@mail.gmail.com>
Message-ID: <C7A7BC2F-269E-4433-83F6-CA88FDB94D99@zooko.com>

On Apr 11, 2008, at 2:51 PM, Brian Granger wrote:
> # Declare dependencies only if setuptools is being used
> if 'setuptools' in sys.modules:
>     setup_args["install_requires"] = [
>         "IPython",
>         "Twisted>=8.0.1",
>     ]
...
> Processing Twisted-8.0.1.tar.bz2
> Running Twisted-8.0.1/setup.py -q bdist_egg --dist-dir
> /tmp/easy_install-_TNbx3/Twisted-8.0.1/egg-dist-tmp-JztrBh
> error: Setup script exited with twisted.python.dist module not found.
> Make sure you have installed the Twisted core package before
> attempting to install any other Twisted projects.

I didn't have this problem when I did this with Twisted 8.0.0.

I am working on a scheme to make our buildbot [1] do this  
automatically, and once I've done I'll post to this list.

Meanwhile, note that what your setup.py did was untar the Twisted  
tarball into a temp dir, cd into it, and run "setup.py -q bdist_egg -- 
dist-dir=$OTHER_TEMP_DIR".

Maybe you should try that by hand and see what happens.

Regards,

Zooko

[1] http://allmydata.org/buildbot/waterfall?show_events=false




From roland.hedberg at adm.umu.se  Sat Apr 12 07:41:40 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Sat, 12 Apr 2008 15:41:40 +0200
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>
References: <20080411131508.6859.1070488770.divmod.quotient.28077@ohm>
Message-ID: <4800BC14.6070100@adm.umu.se>

Jean-Paul Calderone wrote:
> On Fri, 11 Apr 2008 07:54:47 +0200, Roland Hedberg 
> <roland.hedberg at adm.umu.se> wrote:
>> Jean-Paul Calderone wrote:
>>> On Thu, 10 Apr 2008 19:37:33 +0200, Roland Hedberg 
>>> <roland.hedberg at adm.umu.se> wrote:
>>>>
>>>> [snip]
>>>>
>>>> The error I get is:
>>>>
>>>>  File 
>>>> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>>>> packages/twisted/internet/ssl.py", line 169, in createInternetSocket
>>>>  return SSL.Connection(self.ctxFactory.getContext(), sock)
>>>>  TypeError: Connection() argument 1 must be Context, not instance
>>>>
>>>> So, if it possible to use M2Crypto together with Twisted ?
>>>> If so, can someone tell me what I might have missed ?
>>>
>>> M2Crypto includes support for Twisted.  So, if you want to use M2Crypto
>>> instead of pyOpenSSL, you should use the APIs M2Crypto provides.
>>
>> So, I've studied the wrapper that the Chandler project provides.
>> Unfortunately they don't provide a wrapper for SSLServer which is what 
>> I need. Which made me look at the Twisted code.
>> So what's the correct way to 'wrap' SSLServer, should I wrap 
>> _AbstractServer or is that a no-no ?
> 
> SSLServer implements a very simple set of functionality.  It will be very
> easy to replicate it using the M2Crypto API.  You just need a startService
> (and maybe a privilegedStartService) that calls the M2Crypto server setup
> API and a stopService that calls the M2Crypto server shutdown API (which I
> hope is just IListeningPort.stopListening).
> 
> _AbstractServer is private, so you shouldn't touch it.  You can look at its
> implementation (barely a page) to get some hints about what to write, 
> though.

OK, this wasn't hard to do.

But then I stumble on the next block and that's making a client use 
M2Crypto.
This turned out to be a bit tougher since the choice of SSL 
implementation is buried deep down in internet/tcp.py .
Someone must have thought about allowing for a choice of implementation 
by specifying an abstract definition of functionality (base 
class/interface), right ?
If I would make an attempt at doing this, would that be ok ? And is 
there something I should build on ?

-- Roland



From matt at madebykite.com  Sat Apr 12 14:53:32 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sat, 12 Apr 2008 21:53:32 +0100
Subject: [Twisted-Python] Epoll Memory Issues
Message-ID: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>

Hi All,

First of all, I'd like to offer a belated thanks for Twisted and  
congratulations on releasing version 8.

I posted about a year ago about memory issues I was having with  
Twisted and the epoll reactor. I have recently put a simple proxy  
server based on Twisted in to production and have been running a live  
test on a single host for between 300 and 400 concurrent users. The  
server gradually consumes memory to a point where I have to start  
thinking about the experience of my users (the server starts  
swapping) and restart the process. I have been watching this  
behaviour for the last 10 days and in the meantime have been going  
through my code with a fine tooth comb, looking for and testing for  
possible memory leaks. I found a few minor ones, but the memory leaks  
continue.

Today, out of desperation, I switched the reactor from epoll to  
select. Guess what? No more memory leak.

My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I  
was wondering whether anyone could cast any light on this matter? I  
am pretty sure that this isn't an issue specific to my code but I  
would be interested to hear if anyone else has experienced similar  
problems. I would like to be able to switch back to epoll for obvious  
reasons, but at the moment, I am not confident in running the Twisted  
epoll reactor.

Regards,


Matt

	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From Andy at NewWorldElectric.com  Sat Apr 12 19:54:19 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sat, 12 Apr 2008 21:54:19 -0400
Subject: [Twisted-Python] twisted/persisted/dirdbm -- is this async-safe?
Message-ID: <37d49ed40804121854g21c351dal8f2e4f88930fd47e@mail.gmail.com>

I'm developing a pretty general storage system as part of a larger twisted
project, basically I just need dbm file type storage for now, until I get a
better grip on my actual needs.  I'm expecting to use this as a test of
Amazon SimpleDB, but the polarrose.amazon module apparently needs python 2.5
which my server doesn't have yet.  So I need a somewhat interim solution and
went looking for it, I was thinking twisted.persisted.dirdbm, but when I
went to hook it up I noticed no deffereds at all.  Can anyone elaborate on
how this works?  Is it going to slide my webserver to a halt while it hits
the disk?  Should I be looking at a different module?

Andy Fundinger


-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080412/06fafe9b/attachment.html>

From itamar at itamarst.org  Sat Apr 12 21:41:15 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 12 Apr 2008 23:41:15 -0400
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
Message-ID: <1208058076.14261.13.camel@localhost.localdomain>


On Sat, 2008-04-12 at 21:53 +0100, Matthew Glubb wrote:

> Today, out of desperation, I switched the reactor from epoll to  
> select. Guess what? No more memory leak.

poll reactor is certainly better than select; epoll ought to be better
than both, of course. As for the epoll issue, if that's what it is - can
you reproduce this with some sort of minimal example? That would help
track down the issue.




From exarkun at twistedmatrix.com  Sat Apr 12 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1208059507.53.1606162200@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080413/d314444b/attachment.html>

From matusis at yahoo.com  Sat Apr 12 23:50:29 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 12 Apr 2008 22:50:29 -0700 (PDT)
Subject: [Twisted-Python] Epoll Memory Issues
Message-ID: <472936.86742.qm@web81107.mail.mud.yahoo.com>

I suspect it might be your code. On Twisted 2.5 (with patched epoll bug http://twistedmatrix.com/trac/ticket/2809 ) we have reactors that run for 3-4 months without restart, that do not consume more than 150MB RSS with 8000+ concurrent connections.

----- Original Message ----
From: Matthew Glubb <matt at madebykite.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Saturday, April 12, 2008 1:53:32 PM
Subject: [Twisted-Python] Epoll Memory Issues

Hi All,

First of all, I'd like to offer a belated thanks for Twisted and  
congratulations on releasing version 8.

I posted about a year ago about memory issues I was having with  
Twisted and the epoll reactor. I have recently put a simple proxy  
server based on Twisted in to production and have been running a live  
test on a single host for between 300 and 400 concurrent users. The  
server gradually consumes memory to a point where I have to start  
thinking about the experience of my users (the server starts  
swapping) and restart the process. I have been watching this  
behaviour for the last 10 days and in the meantime have been going  
through my code with a fine tooth comb, looking for and testing for  
possible memory leaks. I found a few minor ones, but the memory leaks  
continue.

Today, out of desperation, I switched the reactor from epoll to  
select. Guess what? No more memory leak.

My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I  
was wondering whether anyone could cast any light on this matter? I  
am pretty sure that this isn't an issue specific to my code but I  
would be interested to hear if anyone else has experienced similar  
problems. I would like to be able to switch back to epoll for obvious  
reasons, but at the moment, I am not confident in running the Twisted  
epoll reactor.

Regards,


Matt

    

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080412/2079e7c3/attachment.html>

From glyph at divmod.com  Sat Apr 12 23:54:25 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 13 Apr 2008 05:54:25 -0000
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
Message-ID: <20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>

On 12 Apr, 08:53 pm, matt at madebykite.com wrote:
>Hi All,
>
>First of all, I'd like to offer a belated thanks for Twisted and 
>congratulations on releasing version 8.

Thanks!
>Today, out of desperation, I switched the reactor from epoll to 
>select. Guess what? No more memory leak.

The fifty thousand dollar question: can you reduce this to a minimal 
example?  It would be a _huge_ help in tracking down the problem.  While 
we can guess what's going on in your production environment, we 
obviously can't watch it happening.  Can you reproduce it in test?

Also (if you haven't done this already) can you file a ticket for this 
issue?
>My environment is Linux 2.6, Python 2.5.2, Twisted 8.0.1, twistd. I 
>was wondering whether anyone could cast any light on this matter? I  am 
>pretty sure that this isn't an issue specific to my code but I  would 
>be interested to hear if anyone else has experienced similar  problems. 
>I would like to be able to switch back to epoll for obvious  reasons, 
>but at the moment, I am not confident in running the Twisted  epoll 
>reactor.

That's a bummer.  We fixed a nasty bug in the epoll reactor in 8.0 
(#2809) and I was hoping it would be in better shape for this release. 
However, we're trying to do more regular releases.  I hope that you can 
help us get this leak issue resolved for 8.1!



From matt at madebykite.com  Sun Apr 13 02:28:19 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Sun, 13 Apr 2008 09:28:19 +0100
Subject: [Twisted-Python] Epoll Memory Issues
In-Reply-To: <20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>
References: <D9089781-1678-4E6A-A786-9EE01D6A69E4@madebykite.com>
	<20080413055425.21558.616003925.divmod.xquotient.10677@joule.divmod.com>
Message-ID: <878EBDFF-2AA6-454F-A1A2-5AFD2C9CFF6A@madebykite.com>

Thanks for your responses to my problem. As an imperfect developer, I  
am perfectly willing to accept the possibility of a problem with my  
code :/
	
On 13 Apr 2008, at 06:54, glyph at divmod.com wrote:
> The fifty thousand dollar question: can you reduce this to a  
> minimal example?  It would be a _huge_ help in tracking down the  
> problem.  While we can guess what's going on in your production  
> environment, we obviously can't watch it happening.  Can you  
> reproduce it in test?

I'll do my best to reproduce the problem in a test environment. If  
you haven't had the privilege of using it, web polygraph is a great  
tool for load testing proxies. I should be able to reproduce  
reasonable real world traffic conditions with it. If I have success  
with that, I'll develop a minimal test.

> Also (if you haven't done this already) can you file a ticket for  
> this issue?

I'll file a ticket when I can provide a test.

Thanks again,


Matt



From newptcai at gmail.com  Sun Apr 13 10:33:41 2008
From: newptcai at gmail.com (Peter Cai)
Date: Mon, 14 Apr 2008 00:33:41 +0800
Subject: [Twisted-Python] Performance issues of twisted.
Message-ID: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>

Hi all!

I am preparing to write a server application (you may think of it as an
online game server) with twisted, but I am worrying about it's performance
and how to do it correctly.

For example..

1. UDP or TCP，which should I choose to gain higher performance?

2. Should I catch data in memory instead of write it to db immediately?

3. Could I make it run on cluster if cache data in memory ―― I think it
might be quit hard to exchange data between instances of the server if I
cache data in memory.

4. How to make hot backup?

5. Garbage collection might make the server halt for a moment

6. What is happening in a computer when an IP package received?

7. Could I get some inspiration from how people write web server?

8. If i use an separate physical server to deploy the database, could I gain
some performance improvement?  Or the cost of communication between the db
and the server could hurt the total performance?

……

And so on..

Also, is there any classical books talking about these kind of issues?
Thanks a lot
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080414/d1e5b386/attachment.html>

From radix at twistedmatrix.com  Sun Apr 13 11:04:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 13 Apr 2008 13:04:27 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <60ed19d40804131004g587ce573ma6efe7fe08570d96@mail.gmail.com>

2008/4/13 Peter Cai <newptcai at gmail.com>:
> Hi all!
>
>  I am preparing to write a server application (you may think of it as an
> online game server) with twisted, but I am worrying about it's performance
> and how to do it correctly.
>
> For example..

[list of questions]

Just for the record, none of these questions are about Twisted's
performance. Given their generality, and without information about
what you actually want to do, they're impossible to answer.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From Andy at NewWorldElectric.com  Sun Apr 13 11:13:45 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sun, 13 Apr 2008 13:13:45 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>

I'm not sure about books, but the questions seemed fun.  I'm curious how my
answers measure up to the rest of the list here.

2008/4/13 Peter Cai <newptcai at gmail.com>:

> Hi all!
>
> I am preparing to write a server application (you may think of it as an
> online game server) with twisted, but I am worrying about it's performance
> and how to do it correctly.
>
> For example..
>
> 1. UDP or TCP，which should I choose to gain higher performance?
>
If you want the data to get there even if it's late use TCP, if late data is
not useful to you or needs to be handled some special way use UDP which will
simply lose packets if they happen to not go through.  It is possible but
rather unlikely that you can implement a strategy for retrying failures
better than TCP unless you relax the constraint of eventually getting the
data through.

2. Should I catch data in memory instead of write it to db immediately?
>
 I wouldn't for local mysql databases.  For a more distributed setup you
might consider memcached.

3. Could I make it run on cluster if cache data in memory ―― I think it
> might be quit hard to exchange data between instances of the server if I
> cache data in memory.
>
that's exactly what memcached will take care of for you.


> 4. How to make hot backup?
>
for maximum performance use a replicated pair of database servers and take
the spare offline for backups.  You could also bring the spare up only to
capture the backup, though it will slow down the primary as it plays
catchup.


> 5. Garbage collection might make the server halt for a moment
>
I think this should be less than the latency of a publicly routed IP
network, anyone have figures for gc and twisted?

6. What is happening in a computer when an IP package received?
>
What do you mean?  What specifically do you need to know?

7. Could I get some inspiration from how people write web server?
>
this one I can suggest a book for, the twisted book
http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
something other than twisted any reasonably thick python book will have an
example web server.


> 8. If i use an separate physical server to deploy the database, could I
> gain some performance improvement?  Or the cost of communication between the
> db and the server could hurt the total performance?
>
could go either way.  With the effects of Python's GIL I'd expect a
multi-core server with database and game server on one box would be fine
until you hit a scaling limit and your server is eating a whole core.  At
that point you need to develop a distributed application model and probably
use multiple servers.  If you hit that before you're running 200 users
recheck your business model, if you hit it before 20 users recheck your
architecture.

Andy Fundinger

-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080413/47ea59c9/attachment.html>

From newptcai at gmail.com  Sun Apr 13 12:02:36 2008
From: newptcai at gmail.com (Peter Cai)
Date: Mon, 14 Apr 2008 02:02:36 +0800
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
Message-ID: <befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>

Thanks a lot Andy for your explation.  I am sorry for my poor English and I
shall try to make it clearer this time.

1. UDP or TCP ���� I could understood that implementing a strategy for
retrying failures better than TCP is very unlikely.
But I think maintaining about 3000 tcp connections at the same time might be
quite hard too.
That's exactly why we use UDP in the last version written in C.
We have to write a lot of codes to handle retranmission and we have to send
KEEP Alive Message to make sure that if the client program is still working.

Web server doesn't have this problem because they needn't keep every tcp
connections.

2 and 3 ���� memcached looks promising,  I will read more about it.

4.  But if we choose TCP or we cache any data in memory, the bussiness shall
be cut off for a short moment and all clients have to relogin?
All data cached in memory shall be lost any the client might feel like that
they lost some time in the game. Is that true?

5.  Have you heard of BEA?  Which was sold to Oracle in March.   One of
their main products is Java Application Server, WebLogic.   I've talked with
their engineer when considerring using Java to write our server.  He showed
me some diagrams and told me that a sharp performance decrease was
unavoidable when gc happened in any gc enabled system.  (Of course he said
Weblogic could do much better than any other systems ^_^)

6.  I want to know the difference between synchronised and asynchronised,
block and unblocked APIs.  I want to know the differences in fundamental
level.
I know that twisted uses "epoll", but why it's more efficient?

8. Your advice sound very helpful!

Thanks again!

2008/4/14 Andy Fundinger <Andy at newworldelectric.com>:

> I'm not sure about books, but the questions seemed fun.  I'm curious how
> my answers measure up to the rest of the list here.
>
> 2008/4/13 Peter Cai <newptcai at gmail.com>:
>
> > Hi all!
> >
> > I am preparing to write a server application (you may think of it as an
> > online game server) with twisted, but I am worrying about it's performance
> > and how to do it correctly.
> >
> > For example..
> >
> > 1. UDP or TCP��which should I choose to gain higher performance?
> >
> If you want the data to get there even if it's late use TCP, if late data
> is not useful to you or needs to be handled some special way use UDP which
> will simply lose packets if they happen to not go through.  It is possible
> but rather unlikely that you can implement a strategy for retrying failures
> better than TCP unless you relax the constraint of eventually getting the
> data through.
>
> 2. Should I catch data in memory instead of write it to db immediately?
> >
>  I wouldn't for local mysql databases.  For a more distributed setup you
> might consider memcached.
>
> 3. Could I make it run on cluster if cache data in memory �D�D I think it
> > might be quit hard to exchange data between instances of the server if I
> > cache data in memory.
> >
> that's exactly what memcached will take care of for you.
>
>
> > 4. How to make hot backup?
> >
> for maximum performance use a replicated pair of database servers and take
> the spare offline for backups.  You could also bring the spare up only to
> capture the backup, though it will slow down the primary as it plays
> catchup.
>
>
> > 5. Garbage collection might make the server halt for a moment
> >
> I think this should be less than the latency of a publicly routed IP
> network, anyone have figures for gc and twisted?
>
> 6. What is happening in a computer when an IP package received?
> >
> What do you mean?  What specifically do you need to know?
>
> 7. Could I get some inspiration from how people write web server?
> >
> this one I can suggest a book for, the twisted book
> http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
> something other than twisted any reasonably thick python book will have an
> example web server.
>
>
> > 8. If i use an separate physical server to deploy the database, could I
> > gain some performance improvement?  Or the cost of communication between the
> > db and the server could hurt the total performance?
> >
> could go either way.  With the effects of Python's GIL I'd expect a
> multi-core server with database and game server on one box would be fine
> until you hit a scaling limit and your server is eating a whole core.  At
> that point you need to develop a distributed application model and probably
> use multiple servers.  If you hit that before you're running 200 users
> recheck your business model, if you hit it before 20 users recheck your
> architecture.
>
> Andy Fundinger
>
> --
> Blog: http://channel3b.wordpress.com
> Second Life Name: Ciemaar Flintoff
>
> I am a sig Virus. Please put me in your sig so that I can continue to
> replicate.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
��ֻ��һ��ֽ��һ֧�ʵ�ʱ��, ��������д�µĶ���������˵������ʵ��, �������ǵ����ǲ�����ġ�
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080414/35dc5264/attachment.html>

From maarten at treewalker.org  Sun Apr 13 13:34:01 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 13 Apr 2008 21:34:01 +0200
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
Message-ID: <200804132134.07885.maarten@treewalker.org>

On Sunday 13 April 2008, Andy Fundinger wrote:

> > 5. Garbage collection might make the server halt for a moment
>
> I think this should be less than the latency of a publicly routed IP
> network, anyone have figures for gc and twisted?

There are two types of garbage collection in Python:
- reference counting
- mark and sweep

The reference counting is always active and does most of the collection. 
However, it cannot collect objects that are unreachable but have cyclic 
references between them, so the mark and sweep runs once in a while to 
reclaim those.

The mark and sweep has several levels: it will frequently check whether 
recently created objects are still reachable; less frequently it will check 
reachability of all objects.

The reference counting overhead is spread very evenly over time, so there is 
no latency problem there.

The mark and sweep operation locks the entire Python interpreter. The time 
it takes depends on the number of objects allocated. I did some 
measurements once, but unfortunately I haven't kept the numbers. However, 
it went up very quickly and by the time you have a couple of GB of data you 
can expect hickups of multiple seconds. It should be easy to reproduce 
this: just read the documentation of the "gc" module and write a small 
benchmark program that allocates lots of objects and then forces the most 
thorough level of mark and sweep.

What I did for our web app is disable the mark and sweep algorithm 
(gc.disable()) and break reference cycles in our code.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080413/5a59076d/attachment.sig>

From glyph at divmod.com  Sun Apr 13 18:48:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 14 Apr 2008 00:48:18 -0000
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
Message-ID: <20080414004818.21558.1917454001.divmod.xquotient.10710@joule.divmod.com>

On 13 Apr, 04:33 pm, newptcai at gmail.com wrote:
>Hi all!
>
>I am preparing to write a server application (you may think of it as an
>online game server) with twisted, but I am worrying about it's 
>performance
>and how to do it correctly.

If this is the first time you have done such a thing, let me give you a 
friendly piece of advice: think about how to do it correctly first, then 
think about how to speed it up once it works.  This is common wisdom in 
programming, but it is especially important when you think you have 
found an exception to the rule, and stuff needs to go *really fast*, 
*right away*.  If you try to make it perform well before understanding 
what's going on, it will be both slow *and* full of mistakes and 
complexity from misguided implementations.

Ideally, you could work on an existing project, such as MV3d ( 
http://www.mv3d.com/trac ) rather than starting from scratch.
>For example..
>
>1. UDP or TCP�0Cwhich should I choose to gain higher performance?

If you do not already know the answer to this question, choosing UDP is 
very dangerous.  For what TCP does, TCP is higher performance, and a lot 
less buggy, than anything you would likely implement to replace it.

In a few *very specialized* applications, in specific network 
conditions, UDP can provide better performance.  However, performance 
does not usually mean "speed" in those circumstances; it means the 
ability, for example, to drop a bunch of packets and then pick up again 
without catching up to the packets that were lost in the middle.  But 
picking up packets that were lost in the middle is a very useful 
feature, one that most applications rely on without even knowing it.
>2. Should I catch data in memory instead of write it to db immediately?

This question could mean almost anything.  However, writing to the 
database is simpler and less error-prone, so start there, and *only if 
the code is not fast enough*, add a caching optimization.  Caching is 
generally more useful on reads than writes, though, so I don't really 
understand your question.
>3. Could I make it run on cluster if cache data in memory  15 15 I think it
>might be quit hard to exchange data between instances of the server if 
>I
>cache data in memory.

This is why you should
>4. How to make hot backup?

http://www.oracle.com/technology/documentation/berkeley- 
db/db/ref/transapp/archival.html

(This is not a helpful answer, but hints at the complexity of a real 
answer to this question, depending on the specifics of what database 
you're using.  It's not something for a one-liner in an email.)
>5. Garbage collection might make the server halt for a moment

Yep.  Of course, manual memory allocation might make the server halt 
forever, because it segfaulted.  Take your pick.
>6. What is happening in a computer when an IP package received?

Start here, and click on every link:

http://en.wikipedia.org/wiki/Internet_protocol_suite
>7. Could I get some inspiration from how people write web server?

Start here, and click on every link:

http://twistedmatrix.com/trac/browser/trunk/twisted/web/
>8. If i use an separate physical server to deploy the database, could I 
>gain
>some performance improvement?  Or the cost of communication between the 
>db
>and the server could hurt the total performance?

Maybe.  The way that you tell is not by asking a question on a mailing 
list, but by implementing a specific strategy and then measuring it to 
see what its bottlenecks are and where you can improve performance.  If 
your experience is anything like mine, you will discover something 
surprising.  For example, that everything except the server-side 
collision detection is so fast that you don't need to bother to optimize 
it, but the collision detection is so slow that you need to change it 
radically to even have the simulation keep up with wall clock time.
>Also, is there any classical books talking about these kind of issues?

I wrote an article in one once:

http://tinyurl.com/4yy8zx

but this book, nor any other, won't answer all your questions.  The 
field, and the industry, is way too new.



From Andy at NewWorldElectric.com  Sun Apr 13 22:10:52 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Mon, 14 Apr 2008 00:10:52 -0400
Subject: [Twisted-Python] Performance issues of twisted.
In-Reply-To: <befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>
References: <befee6d80804130933t6b700308oadbd63d3ceec6b8c@mail.gmail.com>
	<37d49ed40804131013g9df5e65sb703baa04a41dd35@mail.gmail.com>
	<befee6d80804131102u6c5ffe6as567a0645c437c972@mail.gmail.com>
Message-ID: <37d49ed40804132110l333832cauef2c61af99e7d7c8@mail.gmail.com>

2008/4/13 Peter Cai <newptcai at gmail.com>:

> Thanks a lot Andy for your explation.  I am sorry for my poor English and
> I shall try to make it clearer this time.
>
> 1. UDP or TCP ���� I could understood that implementing a strategy for
> retrying failures better than TCP is very unlikely.
> But I think maintaining about 3000 tcp connections at the same time might
> be quite hard too.
> That's exactly why we use UDP in the last version written in C.
> We have to write a lot of codes to handle retranmission and we have to
> send KEEP Alive Message to make sure that if the client program is still
> working.
>
> Web server doesn't have this problem because they needn't keep every tcp
> connections.
>

well, at a glance 3000 TCP connections should be similarly resource
intensive than 3000 simulated connection over UDP, but you have a working
app to compare with.  I would however consider adopting the strategy from
web servers and not keeping tcp connections either.  I'd take their whole
strategy and use http wherever possible even, twisted makes that easy.

4.  But if we choose TCP or we cache any data in memory, the bussiness shall
> be cut off for a short moment and all clients have to relogin?
> All data cached in memory shall be lost any the client might feel like
> that they lost some time in the game. Is that true?
>
With the two servers and backing up the mirror you wouldn't interrupt
business.  Similarly, it data shouldn't be particularly affected by backup
operations.


> 5.  Have you heard of BEA?  Which was sold to Oracle in March.   One of
> their main products is Java Application Server, WebLogic.   I've talked with
> their engineer when considerring using Java to write our server.  He showed
> me some diagrams and told me that a sharp performance decrease was
> unavoidable when gc happened in any gc enabled system.  (Of course he said
> Weblogic could do much better than any other systems ^_^)
>
Maarten has spoken more directly to this point, but I cry foul anyway.  Java
GC *can* but shouldn't be run manually, and you can use multiple processes
or servers to ensure that though a process is slowed down the system as a
whole is unaffected.


> 6.  I want to know the difference between synchronised and asynchronised,
> block and unblocked APIs.  I want to know the differences in fundamental
> level.
> I know that twisted uses "epoll", but why it's more efficient?
>
Everything has tradeoffs, and you probably can't get a real answer without
describing your use case in rather more detail, but part of it is about
control and being able to make certain optimizations.  An async server lets
your code explicitly yield control when it's going to be waiting for a I/O
and resume again at a point and time when that I/O is complete.  A threaded
server runs threads in parallel hoping that some of them will not be blocked
and thus the server will be able to cut through the total workload.  I'm
sure someone else can explain further, for my own use I prefer it for a nice
side effect.  Async servers bypass the concept of threadsafe and
synchronized sections since there can't be two live pieces of code in the
whole server at any given time.  Of course waiting for a synchronized
section can be a performance issue too, but I mostly just don't like to
write them.


> 8. Your advice sound very helpful!

consulting rates available upon request :-) seriously, glad I could help, if
you come to any interesting conclusions, won't you write them up in a blog
somewhere?

Andy Fundinger

2008/4/14 Andy Fundinger <Andy at newworldelectric.com>:
>
I'm not sure about books, but the questions seemed fun.  I'm curious how my
> > answers measure up to the rest of the list here.
> >
> > 2008/4/13 Peter Cai <newptcai at gmail.com>:
> >
> > > Hi all!
> > >
> > > I am preparing to write a server application (you may think of it as
> > > an online game server) with twisted, but I am worrying about it's
> > > performance and how to do it correctly.
> > >
> > > For example..
> > >
> > > 1. UDP or TCP��which should I choose to gain higher performance?
> > >
> > If you want the data to get there even if it's late use TCP, if late
> > data is not useful to you or needs to be handled some special way use UDP
> > which will simply lose packets if they happen to not go through.  It is
> > possible but rather unlikely that you can implement a strategy for retrying
> > failures better than TCP unless you relax the constraint of eventually
> > getting the data through.
> >
> > 2. Should I catch data in memory instead of write it to db immediately?
> > >
> >  I wouldn't for local mysql databases.  For a more distributed setup you
> > might consider memcached.
> >
> > 3. Could I make it run on cluster if cache data in memory �D�D I think it
> > > might be quit hard to exchange data between instances of the server if I
> > > cache data in memory.
> > >
> > that's exactly what memcached will take care of for you.
> >
> >
> > > 4. How to make hot backup?
> > >
> > for maximum performance use a replicated pair of database servers and
> > take the spare offline for backups.  You could also bring the spare up only
> > to capture the backup, though it will slow down the primary as it plays
> > catchup.
> >
> >
> > > 5. Garbage collection might make the server halt for a moment
> > >
> > I think this should be less than the latency of a publicly routed IP
> > network, anyone have figures for gc and twisted?
> >
> > 6. What is happening in a computer when an IP package received?
> > >
> > What do you mean?  What specifically do you need to know?
> >
> > 7. Could I get some inspiration from how people write web server?
> > >
> > this one I can suggest a book for, the twisted book
> > http://www.oreilly.com/catalog/twistedadn/ , or if you're considering
> > something other than twisted any reasonably thick python book will have an
> > example web server.
> >
> >
> > > 8. If i use an separate physical server to deploy the database, could
> > > I gain some performance improvement?  Or the cost of communication between
> > > the db and the server could hurt the total performance?
> > >
> > could go either way.  With the effects of Python's GIL I'd expect a
> > multi-core server with database and game server on one box would be fine
> > until you hit a scaling limit and your server is eating a whole core.  At
> > that point you need to develop a distributed application model and probably
> > use multiple servers.  If you hit that before you're running 200 users
> > recheck your business model, if you hit it before 20 users recheck your
> > architecture.
> >
> > Andy Fundinger
> >
> > --
> > Blog: http://channel3b.wordpress.com
> > Second Life Name: Ciemaar Flintoff
> >
> > I am a sig Virus. Please put me in your sig so that I can continue to
> > replicate.
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
> --
> ��ֻ��һ��ֽ��һ֧�ʵ�ʱ��, ��������д�µĶ���������˵������ʵ��, �������ǵ����ǲ�����ġ�
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080414/25d7b8d4/attachment.html>

From mailing_lists at evotex.ch  Mon Apr 14 04:04:07 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 14 Apr 2008 12:04:07 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
Message-ID: <48032C17.9010803@evotex.ch>

Hello,

I have to have a shared list in a server's factory to keep client 
registration info. I had been using python's mutex class to make sure 
only one registration at a time can be done. I just realized that this 
is blocking and that's a no-no with twisted. My question is what would 
be a better way of doing this?

Gabriel



From mailing_lists at evotex.ch  Mon Apr 14 04:35:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 14 Apr 2008 12:35:56 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48032C17.9010803@evotex.ch>
References: <48032C17.9010803@evotex.ch>
Message-ID: <4803338C.8050702@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I have to have a shared list in a server's factory to keep client 
> registration info. I had been using python's mutex class to make sure 
> only one registration at a time can be done. I just realized that this 
> is blocking and that's a no-no with twisted. My question is what would 
> be a better way of doing this?
>
> Gabriel
I'm wondering if maybe I'm misunderstanding something here, when several 
messages arrive, what happens, are they processed in parallel, are they 
put in a queue and processes sequentially? If I receive a message, do 
some heavy processing/io/potentially blocking code in a thread using 
twisted's threading module, and before it's done, I get another 
connection + message that needs the same thing to be done, what happens? 
If I'm going to receive a msg to be put in a queue, and another service 
that needed to retrieve the message from the queue, and I get several 
connections, wanting to access the queue, what happens? (This is a 
producer -consumer problem basically).

Thanks,
Gabriel



From itamar at itamarst.org  Mon Apr 14 07:27:38 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Apr 2008 13:27:38 +0000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <4803338C.8050702@evotex.ch>
References: <48032C17.9010803@evotex.ch>  <4803338C.8050702@evotex.ch>
Message-ID: <1208179659.14261.18.camel@localhost.localdomain>


On Mon, 2008-04-14 at 12:35 +0200, Gabriel Rossetti wrote:
> I'm wondering if maybe I'm misunderstanding something here, when several 
> messages arrive, what happens, are they processed in parallel, are they 
> put in a queue and processes sequentially? 

Sequentially. Twisted does not expose use of threads to user-level
APIs... and Twisted APIs are not thread-safe, other than
reactor.callFromThread.

> If I receive a message, do 
> some heavy processing/io/potentially blocking code in a thread using 
> twisted's threading module, and before it's done, I get another 
> connection + message that needs the same thing to be done, what
> happens? 

reactor.callInThread (and therefore deferToThread) are built on top of a
thread-safe Queue. Just make sure your scheduled tasks are not calling
back into Twisted but are rather self-contained units of work.




From nathan.stocks at gmail.com  Mon Apr 14 10:21:58 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 14 Apr 2008 10:21:58 -0600
Subject: [Twisted-Python] Is psycopg or pygresql better with
	twisted.enterprise?
In-Reply-To: <47F3E11E.4050801@gmail.com>
References: <96c9d6a80803310932r5baa1d2dk5c99fe86aff6543d@mail.gmail.com>
	<149014b90804010609k60cd6b9al68708c22336c6a85@mail.gmail.com>
	<47F2931A.5020809@gmail.com>
	<1207162168.7981.21.camel@aalcdl07.lib.unc.edu>
	<47F3E11E.4050801@gmail.com>
Message-ID: <96c9d6a80804140921j34b8801el2ebb227cf22b3e8d@mail.gmail.com>

Just to wrap this thread up, I've settled on psycopg2.  It supports
SSL with server-/client-certificate verification while pygresql does
not.  Also, I've found that though the psycopg2 web site is generally
down (and out-of-date), the author _is_ actively developing psycopg2,
and even released version 2.0.7 _today_, which fixes a good number of
outstanding issues.

~ Nathan



From exarkun at divmod.com  Mon Apr 14 11:26:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Apr 2008 13:26:36 -0400
Subject: [Twisted-Python] HTTPS and subjectAltName
In-Reply-To: <4800BC14.6070100@adm.umu.se>
Message-ID: <20080414172636.6859.497038764.divmod.quotient.29601@ohm>

On Sat, 12 Apr 2008 15:41:40 +0200, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Jean-Paul Calderone wrote:
>> [snip]
>>
>>_AbstractServer is private, so you shouldn't touch it.  You can look at its
>>implementation (barely a page) to get some hints about what to write, 
>>though.
>
>OK, this wasn't hard to do.
>
>But then I stumble on the next block and that's making a client use 
>M2Crypto.

Hmm.  I assumed M2Crypto had client integration as well.  That's too bad.

>This turned out to be a bit tougher since the choice of SSL implementation 
>is buried deep down in internet/tcp.py .

Yes.  However, this affects the server just as much as a client, so if
M2Crypto managed to do it for servers, it shouldn't be much more work to
do it for clients as well.

>Someone must have thought about allowing for a choice of implementation by 
>specifying an abstract definition of functionality (base class/interface), 
>right ?

Yes, http://twistedmatrix.com/trac/ticket/2706

As far as I know, no one has spent any time on it since the initial
discussion.

Jean-Paul



From exarkun at divmod.com  Mon Apr 14 11:30:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Apr 2008 13:30:15 -0400
Subject: [Twisted-Python] twisted/persisted/dirdbm -- is this async-safe?
In-Reply-To: <37d49ed40804121854g21c351dal8f2e4f88930fd47e@mail.gmail.com>
Message-ID: <20080414173015.6859.1276626864.divmod.quotient.29604@ohm>

On Sat, 12 Apr 2008 21:54:19 -0400, Andy Fundinger <andy at newworldelectric.com> wrote:
>I'm developing a pretty general storage system as part of a larger twisted
>project, basically I just need dbm file type storage for now, until I get a
>better grip on my actual needs.  I'm expecting to use this as a test of
>Amazon SimpleDB, but the polarrose.amazon module apparently needs python 2.5
>which my server doesn't have yet.  So I need a somewhat interim solution and
>went looking for it, I was thinking twisted.persisted.dirdbm, but when I
>went to hook it up I noticed no deffereds at all.  Can anyone elaborate on
>how this works?  Is it going to slide my webserver to a halt while it hits
>the disk?  Should I be looking at a different module?

You shouldn't use anything from twisted.persisted.  None of it provides a
real storage solution.  In any case, none of it does asynchronous disk IO
so none of it will let your server handle network events while it's reading
or writing data.

If you don't need something that actually works while you figure out
what your requirements are, then maybe you don't need a real storage
solution and you can use twisted.persisted.dirdbm.  In this case, do
you really care if it blocks a little bit?  Disks are typically pretty
fast, and OS filesystem caches even faster.

Jean-Paul



From jon at indelible.org  Tue Apr 15 00:05:13 2008
From: jon at indelible.org (Jon Parise)
Date: Mon, 14 Apr 2008 23:05:13 -0700
Subject: [Twisted-Python] twistd plugin documentation
Message-ID: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>

I was just reading through the "Writing a twistd Plugin"[1]
documentation and ran into some confusion.  If you follow the
suggested directory structure (e.g. MyProject/myproject/__init__.py)
and name the plugin file twisted/plugins/myproject.py, any attempt to
"import myproject" from within the plugin file will import the plugin
module and not the myproject module.

I see that Twisted itself prefixes its plugin files (e.g.
twisted_web.py), perhaps to get around this problem.

So does that plugin documentation need a small update, or have I done
something to trip myself up?

[1] http://twistedmatrix.com/projects/core/documentation/howto/tap.html

-- 
Jon Parise (jon of indelible.org) :: "Scientia potentia est"



From miles.chris at gmail.com  Tue Apr 15 00:44:20 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Tue, 15 Apr 2008 16:44:20 +1000
Subject: [Twisted-Python] twistd plugin documentation
In-Reply-To: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
References: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
Message-ID: <8356DED9-CA5E-46D2-BCE8-15D67DD8A473@gmail.com>


On 15/04/2008, at 4:05 PM, Jon Parise wrote:
> I was just reading through the "Writing a twistd Plugin"[1]
> documentation and ran into some confusion.  If you follow the
> suggested directory structure (e.g. MyProject/myproject/__init__.py)
> and name the plugin file twisted/plugins/myproject.py, any attempt to
> "import myproject" from within the plugin file will import the plugin
> module and not the myproject module.
>
> I see that Twisted itself prefixes its plugin files (e.g.
> twisted_web.py), perhaps to get around this problem.
>
> So does that plugin documentation need a small update, or have I done
> something to trip myself up?

I think you're right, I remember it confused me a little too.  I just  
name my plugins like twisted/plugins/myproject_plugin.py

Cheers
CM




From mailing_lists at evotex.ch  Tue Apr 15 01:49:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 09:49:01 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <1208179659.14261.18.camel@localhost.localdomain>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
Message-ID: <48045DED.3000201@evotex.ch>

Itamar Shtull-Trauring wrote:
> On Mon, 2008-04-14 at 12:35 +0200, Gabriel Rossetti wrote:
>   
>> I'm wondering if maybe I'm misunderstanding something here, when several 
>> messages arrive, what happens, are they processed in parallel, are they 
>> put in a queue and processes sequentially? 
>>     
>
> Sequentially. Twisted does not expose use of threads to user-level
> APIs... and Twisted APIs are not thread-safe, other than
> reactor.callFromThread.
>
>   
>> If I receive a message, do 
>> some heavy processing/io/potentially blocking code in a thread using 
>> twisted's threading module, and before it's done, I get another 
>> connection + message that needs the same thing to be done, what
>> happens? 
>>     
>
> reactor.callInThread (and therefore deferToThread) are built on top of a
> thread-safe Queue. Just make sure your scheduled tasks are not calling
> back into Twisted but are rather self-contained units of work.
>
>   
Ok, but if connection1 comes, it does some processing by using a thread 
or a process (with twisted's functions) and connection2 comes, will 
connection2 wait for connection1 to finish, or will connection1 be put 
on the side while it waits for the thread and connection 2 is taken. 
Also, what event makes the next connection be

 think what I don't get is that with thread network code, each thread is 
an individual self-contained unit that does whatever processing it needs 
to do however long it may need to take, and the OS takes care of 
scheduling each thread, but with twisted, the main thread executes each 
connection one by one sequentially and thus if one of them needs to to 
some lengthy processing, it will block all other connections from being 
processed, so you have to use threads to keep it from blocking, but 
somehow the active connection should become inactive while the 
processing thread does it's work, so that another connection can be 
processed in the meantime. Is that how it works? So twisted's event loop 
(reactor) does the same work as the OS's scheduler?

Thanks



From sipickles at hotmail.com  Tue Apr 15 02:25:28 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 15 Apr 2008 09:25:28 +0100
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48045DED.3000201@evotex.ch>
References: <48032C17.9010803@evotex.ch>
	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
Message-ID: <BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>



Gabriel Rossetti wrote:
> each thread is an individual self-contained unit that does whatever 
> processing it needs to do however long it may need to take, and the OS 
> takes care of scheduling each thread, but with twisted, the main 
> thread executes each connection one by one sequentially and thus if 
> one of them needs to to some lengthy processing, it will block all 
> other connections from being processed, so you have to use threads to 
> keep it from blocking, but somehow the active connection should become 
> inactive while the processing thread does it's work, so that another 
> connection can be processed in the meantime.
>
>
Hi Gabriel,

Have you considered implementing Stackless python in partnership with 
Twisted? I am finding it very useful for handling multiple concurrent 
connections in a single thread. (it uses a scheduler which can switch 
between tasklets, in a yield fashion.)

The programmer has complete control over where this tasklet switching 
takes place, vastly simplifying things over multi-threading. If one 
connection involves some heavy processing, I simply add a 
stackless.schedule() in the blocking loop which allows waiting jobs to 
run too. Overhead for this tasklet switching is almost negligible too, 
unlike threads.

Regards

Simon





From andrew-twisted at puzzling.org  Tue Apr 15 02:50:26 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Apr 2008 18:50:26 +1000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48045DED.3000201@evotex.ch>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
Message-ID: <20080415085026.GD15066@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> think what I don't get is that with thread network code, each thread is  
> an individual self-contained unit that does whatever processing it needs  
> to do however long it may need to take, and the OS takes care of  
> scheduling each thread, but with twisted, the main thread executes each  
> connection one by one sequentially and thus if one of them needs to to  
> some lengthy processing, it will block all other connections from being  
> processed, so you have to use threads to keep it from blocking, but  
> somehow the active connection should become inactive while the  
> processing thread does it's work, so that another connection can be  
> processed in the meantime. Is that how it works? So twisted's event loop  
> (reactor) does the same work as the OS's scheduler?

In Twisted, code all runs in the main thread, so the way handling multiple
connections works is that control is frequently returned to the reactor.

So if a new connection is received, a protocol instance is made and its
"connectionMade" method called, and as soon as that is done the reactor goes on
to the next thing.  That might be another connectionMade for a new connection,
or it might be delivering a few bytes to a protocol (via calling dataReceived on
it).  So there a lots of events, but the event handlers (i.e. things like
methods on Protocol subclasses) don't block, so they return control very
quickly.

In threaded network code typically you frequently do "sock.recv()" and similar,
to block.  In Twisted you just omit that; your protocol's dataReceived will be
called whenever there's some data.  This frees up the main thread to be doing
other work when there's nothing happening on an individual connection.  So
that's how multiple connections can be handled concurrently in a single thread
in Twisted.

The only rule is that you cannot block in the main thread.  If you want to do
something blocking, find a different way to do it (or if you have to, do it in a
thread and let the main thread continue, but at least for network I/O that's
never necessary in Twisted).

Does that help?

-Andrew.




From mailing_lists at evotex.ch  Tue Apr 15 03:55:49 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 11:55:49 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <20080415085026.GD15066@steerpike.home.puzzling.org>
References: <48032C17.9010803@evotex.ch>
	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>	<48045DED.3000201@evotex.ch>
	<20080415085026.GD15066@steerpike.home.puzzling.org>
Message-ID: <48047BA5.5020100@evotex.ch>

Andrew Bennetts wrote:
> Gabriel Rossetti wrote:
> [...]
>   
>> think what I don't get is that with thread network code, each thread is  
>> an individual self-contained unit that does whatever processing it needs  
>> to do however long it may need to take, and the OS takes care of  
>> scheduling each thread, but with twisted, the main thread executes each  
>> connection one by one sequentially and thus if one of them needs to to  
>> some lengthy processing, it will block all other connections from being  
>> processed, so you have to use threads to keep it from blocking, but  
>> somehow the active connection should become inactive while the  
>> processing thread does it's work, so that another connection can be  
>> processed in the meantime. Is that how it works? So twisted's event loop  
>> (reactor) does the same work as the OS's scheduler?
>>     
>
> In Twisted, code all runs in the main thread, so the way handling multiple
> connections works is that control is frequently returned to the reactor.
>
> So if a new connection is received, a protocol instance is made and its
> "connectionMade" method called, and as soon as that is done the reactor goes on
> to the next thing.  That might be another connectionMade for a new connection,
> or it might be delivering a few bytes to a protocol (via calling dataReceived on
> it).  So there a lots of events, but the event handlers (i.e. things like
> methods on Protocol subclasses) don't block, so they return control very
> quickly.
>
> In threaded network code typically you frequently do "sock.recv()" and similar,
> to block.  In Twisted you just omit that; your protocol's dataReceived will be
> called whenever there's some data.  This frees up the main thread to be doing
> other work when there's nothing happening on an individual connection.  So
> that's how multiple connections can be handled concurrently in a single thread
> in Twisted.
>
> The only rule is that you cannot block in the main thread.  If you want to do
> something blocking, find a different way to do it (or if you have to, do it in a
> thread and let the main thread continue, but at least for network I/O that's
> never necessary in Twisted).
>
> Does that help?
>
> -Andrew.
>
>   
Yes Andrew, thanks! So keeps a list of all connections around and does 
something with them when there is something to be done. So if I have a 
shared list, only one connection actually access it at a time, thus 
mutexes don't need to be used, but if something needs to be atomic, like 
one message depending on the answer of another, I would use deferred 
objects, If I need to to some heavy I/O (other than network) or lengthy 
processing I would use a thread that returns a deferred, correct? So 
like in code that calls an external program and I need to do something 
when it is done, I would use twisted.internet.utils.getProcessValue(), 
get a deferred and add a callback to do whatever I need to do when it is 
done. Ok, I get it better now :-)

Thanks for all your help (Andrew and others)!!
Gabriel



From andrew-twisted at puzzling.org  Tue Apr 15 04:38:27 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Apr 2008 20:38:27 +1000
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <48047BA5.5020100@evotex.ch>
References: <48032C17.9010803@evotex.ch> <4803338C.8050702@evotex.ch>
	<1208179659.14261.18.camel@localhost.localdomain>
	<48045DED.3000201@evotex.ch>
	<20080415085026.GD15066@steerpike.home.puzzling.org>
	<48047BA5.5020100@evotex.ch>
Message-ID: <20080415103827.GF15066@steerpike.home.puzzling.org>

Gabriel Rossetti wrote:
[...]
> Yes Andrew, thanks! So keeps a list of all connections around and does  
> something with them when there is something to be done. So if I have a  
> shared list, only one connection actually access it at a time, thus  
> mutexes don't need to be used, but if something needs to be atomic, like  
> one message depending on the answer of another, I would use deferred  
> objects, If I need to to some heavy I/O (other than network) or lengthy  
> processing I would use a thread that returns a deferred, correct? So  
> like in code that calls an external program and I need to do something  
> when it is done, I would use twisted.internet.utils.getProcessValue(),  
> get a deferred and add a callback to do whatever I need to do when it is  
> done. Ok, I get it better now :-)

Yep, it looks like you've got it :)

-Andrew.




From chris.yan at saybot.com  Tue Apr 15 04:38:28 2008
From: chris.yan at saybot.com (Chris)
Date: Tue, 15 Apr 2008 18:38:28 +0800
Subject: [Twisted-Python] about smtp client auth problem.
Message-ID: <480485A4.6060808@saybot.com>

Hi,
I am trying to use twisted to implement a script to send the email,I got
some problem.here is the script:
####################
import StringIO

from twisted.application import service

application = service.Application("SMTP Client Tutorial")

from twisted.application import internet
from twisted.python import log
from twisted.internet import defer, reactor
from twisted.mail import smtp

mailFrom = "chris.yan at xxxx.com"
mailTo = ["chrisyan81 at gmail.com",]
mail = StringIO.StringIO("""Date: Fri, 3 Nov 2006 230:14:39 +0000
From: chris.yan at xxxx.com
To: chrisyan81 at gmail.com
Subject: Tutorate!

Hello, how are you, goodbye.
""")

whenDone = defer.Deferred()

def send(r):
print "message sent:", r

whenDone.addCallbacks(send, log.err)

def done(d):
from twisted.internet import reactor
reactor.callLater(1, reactor.stop)

whenDone.addBoth(done)


sender = smtp.ESMTPSenderFactory(
'chris.yan',
'xxxxxx',
mailFrom,
mailTo,
mail,
whenDone,
requireTransportSecurity=False
)

smtpClientService = internet.TCPClient('smtp.xxxx.com', 25, sender)
smtpClientService.setServiceParent(application)

in fact the script from
http://twistedmatrix.com/pipermail/twisted-python/2006-November/014299.html,and
I didn't modify anything except my own information.Because the smtp
server doesn't support SSL,so I use requireTransportSecurity=False.

here is the output:

2008/04/15 17:56 +0800 [-] Log opened.
2008/04/15 17:56 +0800 [-] twistd 2.5.0 (C:\Python25\python.exe 2.5.2)
starting up
2008/04/15 17:56 +0800 [-] reactor class: <class
'twisted.internet.selectreactor.SelectReactor'>
2008/04/15 17:56 +0800 [-] Loading smtpclient_tls_001.py...
2008/04/15 17:56 +0800 [-] Loaded.
2008/04/15 17:56 +0800 [-] Starting factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x01347878>
2008/04/15 17:56 +0800 [ESMTPSender,client] Unhandled Error
Traceback (most recent call last):
Failure: twisted.mail.smtp.AUTHRequiredError: 502 Server does not
support Client Authentication schemes [CRAM-MD
5, LOGIN, PLAIN]

<<< 250-AUTH
<<< 250-AUTH=PLAIN LOGIN LOGIN
<<< 250-XXXXXXXA
<<< 250 XXXB

2008/04/15 17:56 +0800 [ESMTPSender,client] Stopping factory
<twisted.mail.smtp.ESMTPSenderFactory instance at 0x0134787
8>
2008/04/15 17:56 +0800 [-] Main loop terminated.
2008/04/15 17:56 +0800 [-] Server Shut Down.

but when I use another script which uses smtplib:
SMTP_server='smtp.xxxx.com'
SMTP_user='chris.yan'
SMTP_passwd='xxxxx'

def
send_email(Subject,From,To,Attachment,Body,SMTP_server,SMTP_user,SMTP_passwd):
msg = MIMEMultipart()
msg['Subject'] = Subject
msg['From'] = From
msg['To'] = To


txt = MIMEText(Body,_charset='utf-8')
msg.attach(txt)

filename = Attachment
if not os.path.isfile(filename):
print 'Can not find file %s,please check!' % filename
sys.exit(1)

fp = open(filename,'rb')
ctype,encoding = mimetypes.guess_type(filename)
if ctype is None or encoding is not None:
ctype = 'application/octet-stream'
maintype,subtype = ctype.split('/',1)
m = MIMEBase(maintype,subtype)
m.set_payload(fp.read())
fp.close()
Encoders.encode_base64(m)
m.add_header('Content-disposition','attachment',filename=filename)
msg.attach(m)

s = smtplib.SMTP(SMTP_server)
s.debuglevel = 5
s.ehlo()
s.esmtp_features["auth"] = "LOGIN"

s.login(SMTP_user,SMTP_passwd)
s.sendmail(From,To,msg.as_string())
s.close()

I can get the output:
send: 'ehlo chris.shuobaotang.com\r\n'
reply: '250-mail.saybot.com Hello chris.shuobaotang.com [218.79.132.2]\r\n'
reply: '250-SIZE 52428800\r\n'
reply: '250-PIPELINING\r\n'
reply: '250-AUTH \r\n'
reply: '250-AUTH=PLAIN LOGIN LOGIN\r\n'
reply: '250-XXXXXXXA\r\n'
reply: '250 XXXB\r\n'
reply: retcode (250); Msg: mail.saybot.com Hello chris.shuobaotang.com
[218.79.132.2]
SIZE 52428800
PIPELINING
AUTH
AUTH=PLAIN LOGIN LOGIN
XXXXXXXA
XXXB
send: 'AUTH LOGIN Y2hyaXMueWFu\r\n'
reply: '334 UGFzc3dvcmQ6\r\n'
reply: retcode (334); Msg: UGFzc3dvcmQ6
send: 'd3JpbHV5Yg==\r\n'
reply: '235 Authentication succeeded\r\n'
reply: retcode (235); Msg: Authentication succeeded
send: 'mail FROM:<chris.yan at saybot.com> size=668\r\n'
reply: '250 OK\r\n'
reply: retcode (250); Msg: OK
send: 'rcpt TO:<chrisyan81 at gmail.com>\r\n'
reply: '250 Accepted\r\n'
reply: retcode (250); Msg: Accepted
send: 'data\r\n'
reply: '354 Enter message, ending with "." on a line by itself\r\n'
reply: retcode (354); Msg: Enter message, ending with "." on a line by
itself
data: (354, 'Enter message, ending with "." on a line by itself')
send: 'Content-Type: multipart/mixed;
boundary="===============1595669237=="\r\nMIME-Version: 1.0\r\nSubject:
scores fro
m saybot rater.\r\nFrom: chris.yan at saybot.com\r\nTo:
chrisyan81 at gmail.com\r\n\r\n--===============1595669237==\r\nConten
t-Type: text/plain; charset="utf-8"\r\nMIME-Version:
1.0\r\nContent-Transfer-Encoding: base64\r\n\r\nSGksCiAgICBUaGlzIGl
zIHRoZSBzY29yZXMgd2hpY2ggZ2VuZXJhdGVkIGJ5IHNheWJvdCByYXRl\r\ncixwbGVhc2UgY2hlY2sgdGhlIGF0dGFjaG1lbnQhCgpCZXN0UmVnYXJkCkN
ocmlzCg==\r\n\r\n--===============1595669237==\r\nContent-Type:
text/plain\r\nMIME-Version: 1.0\r\nContent-Transfer-Enco
ding: base64\r\nContent-disposition: attachment;
filename="scores.txt"\r\n\r\nMTM4MTMwMzE0NzUg17/Hvw0K\r\n\r\n--========
=======1595669237==--\r\n.\r\n'
reply: '250 OK id=1Jlhvl-00071w-1f\r\n'
reply: retcode (250); Msg: OK id=1Jlhvl-00071w-1f
data: (250, 'OK id=1Jlhvl-00071w-1f')
Done.

some guy said,this script force to use the LOGIN auth,because something
wrong with the server,is it true?I don't know very much about the mail
server,does any one can tell me if I can make my twisted script work?I
really like to implement a twisted one.

BestWishes
Chris






From mailing_lists at evotex.ch  Tue Apr 15 05:24:12 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 15 Apr 2008 13:24:12 +0200
Subject: [Twisted-Python] shared list in factory, mutexes?
In-Reply-To: <BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>
References: <48032C17.9010803@evotex.ch>	<4803338C.8050702@evotex.ch>	<1208179659.14261.18.camel@localhost.localdomain>	<48045DED.3000201@evotex.ch>
	<BAY114-DAV86F5F012F61A1229C92BDBEEB0@phx.gbl>
Message-ID: <4804905C.5030608@evotex.ch>

Simon Pickles wrote:
>
>
> Gabriel Rossetti wrote:
>> each thread is an individual self-contained unit that does whatever 
>> processing it needs to do however long it may need to take, and the 
>> OS takes care of scheduling each thread, but with twisted, the main 
>> thread executes each connection one by one sequentially and thus if 
>> one of them needs to to some lengthy processing, it will block all 
>> other connections from being processed, so you have to use threads to 
>> keep it from blocking, but somehow the active connection should 
>> become inactive while the processing thread does it's work, so that 
>> another connection can be processed in the meantime.
>>
>>
> Hi Gabriel,
>
> Have you considered implementing Stackless python in partnership with 
> Twisted? I am finding it very useful for handling multiple concurrent 
> connections in a single thread. (it uses a scheduler which can switch 
> between tasklets, in a yield fashion.)
>
> The programmer has complete control over where this tasklet switching 
> takes place, vastly simplifying things over multi-threading. If one 
> connection involves some heavy processing, I simply add a 
> stackless.schedule() in the blocking loop which allows waiting jobs to 
> run too. Overhead for this tasklet switching is almost negligible too, 
> unlike threads.
>
> Regards
>
> Simon
>
>
Thanks Simon, I'll look into that, but I think that now that I 
understand better how twisted works, I'll stick with it "purely" :-)

Stackless is a python distrib though, from what I see.

Thanks,
Gabriel



From exarkun at divmod.com  Tue Apr 15 06:01:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Apr 2008 08:01:13 -0400
Subject: [Twisted-Python] about smtp client auth problem.
In-Reply-To: <480485A4.6060808@saybot.com>
Message-ID: <20080415120113.6859.490721552.divmod.quotient.30011@ohm>

On Tue, 15 Apr 2008 18:38:28 +0800, Chris <chris.yan at saybot.com> wrote:
>Hi,
>I am trying to use twisted to implement a script to send the email,I got
>some problem.here is the script:
>####################
> [snip]
>
><<< 250-AUTH
><<< 250-AUTH=PLAIN LOGIN LOGIN
><<< 250-XXXXXXXA
><<< 250 XXXB
>
> [snip]
>
>some guy said,this script force to use the LOGIN auth,because something
>wrong with the server,is it true?I don't know very much about the mail
>server,does any one can tell me if I can make my twisted script work?I
>really like to implement a twisted one.

Indeed, the ESMTP server is not correctly advertising its support for the
AUTH extension.  

You can hack around this by going up to the ESMTP protocol implementation
in Twisted and tweaking its behavior a bit with a subclass (untested):

  from twisted.mail.smtp import ESMTPClient

  class ForceLOGINESMTPClient(ESMTPClient):
      def authenticate(self, code, resp, items):
          if 'AUTH=PLAIN' in items:
              items['AUTH'] = 'PLAIN ' + items['AUTH=PLAIN']
          return ESMTPClient.authenticate(self, code, resp, items)

Then, use this protocol with your ESMTPSenderFactory.  The idea here is
that this subclass notices the particular kind of malformed response this
server sends and adjusts it slightly.  This is a bit better than the other
version you gave which just hard-coded LOGIN, since it should manage to
actually correctly interpret the mechanisms the server is advertising.  Of
course, it may be a bit more fragile too, since it depends on the exact
kind of misformatting the server is doing.  If you want to avoid that,
you can hard-code LOGIN by just setting items['AUTH'] = 'LOGIN'.

Hope this helps,

Jean-Paul



From radix at twistedmatrix.com  Tue Apr 15 07:21:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Apr 2008 09:21:55 -0400
Subject: [Twisted-Python] twistd plugin documentation
In-Reply-To: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
References: <1aff89d70804142305j763ed141r5d0b15886a3dc667@mail.gmail.com>
Message-ID: <60ed19d40804150621i1e0b3b1aw5a43138d546327d3@mail.gmail.com>

On Tue, Apr 15, 2008 at 2:05 AM, Jon Parise <jon at indelible.org> wrote:
> I was just reading through the "Writing a twistd Plugin"[1]
>  documentation and ran into some confusion.  If you follow the
>  suggested directory structure (e.g. MyProject/myproject/__init__.py)
>  and name the plugin file twisted/plugins/myproject.py, any attempt to
>  "import myproject" from within the plugin file will import the plugin
>  module and not the myproject module.

Thanks, I've filed a bug at

http://twistedmatrix.com/trac/ticket/3183




-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From duncan.mcgreggor at gmail.com  Tue Apr 15 09:52:23 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Tue, 15 Apr 2008 10:52:23 -0500
Subject: [Twisted-Python] Founding Sponsors Window Closes May 15th
Message-ID: <1208274743.5193.6.camel@gondor>

Current Founding Sponsors: You guys rock! Thanks!

Potential Founding sponsors: You too can rock, but you only have a
limited window of opportunity in which to do so :-)

We were going to set the deadline to April 30th, but we've been so busy
working with those of you that have been sponsoring that we didn't get
the chance (just look at those awesome logos on the front page!) to send
out an email. We wanted to provide people and companies with a 30 day
notice, so May 15th it is.

Thanks again, everyone -- you are helping make Twisted a thriving
project that gives you more and more of what you need.

d




From gregtech at wp.pl  Tue Apr 15 12:03:56 2008
From: gregtech at wp.pl (Grzesiek Slusarek)
Date: Tue, 15 Apr 2008 20:03:56 +0200
Subject: [Twisted-Python] Twisted and ZSI
Message-ID: <4804ee0c78cdc@wp.pl>

Hello.
Is there any examples, manuals or tutorials how to use ZSI webservice 
under Twisted?? Thanks for anyone who points me in the right direction. 
I need to write ZSI webservice which can serve about 30 parallel 
connection and as far I know only under Twisted, ZSI can do that.

Thanks for any help
Grzegorz Ślusarek

----------------------------------------------------
Najpiękniejszy głos kobiecego jazzu - STACEY KENT 
16.05 20:00 Warszawa, 17.05 20:00 Poznań
bilety: Ticketonline, Ticketpro, Shortcut, Eventim
http://klik.wp.pl/?adr=http%3A%2F%2Fcorto.www.wp.pl%2Fas%2Fkentwpolsce.html&sid=312





From nathan.stocks at gmail.com  Tue Apr 15 12:55:28 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 15 Apr 2008 12:55:28 -0600
Subject: [Twisted-Python] Is there twisted.enterprise.adbapi support for
	.executemany()?
Message-ID: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>

Does anyone know of any (possibly experimental)
twisted.enterprise.adbapi support for .executemany() ?

(see http://www.python.org/dev/peps/pep-0249/ -- search for ".executemany")

If not, I'll see if I can't add a runOperationMany() to
twisted.enterprise.adbapi.ConnectionPool.  The functionality I want is
simple in theory.  .executemany runs many identical
insert/update/delete operations using a different dictionary in a
supplied list of dictionaries for the input each time, and returns
None on success of all of the queries, or rolls-back the whole
transaction and returns a failure on an error.  Passing it in any
query that returns results would also result in returning a failure.

~ Nathan



From phil at bubblehouse.org  Tue Apr 15 13:08:47 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 15 Apr 2008 15:08:47 -0400
Subject: [Twisted-Python] Is there twisted.enterprise.adbapi support for
	.executemany()?
In-Reply-To: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>
References: <96c9d6a80804151155u21ce52cbq50215ab6891b1365@mail.gmail.com>
Message-ID: <ABE6B556-B56B-4E61-8897-465F11083C64@bubblehouse.org>

On Apr 15, 2008, at 2:55 PM, Nathan wrote:
> Does anyone know of any (possibly experimental)
> twisted.enterprise.adbapi support for .executemany() ?
>
> (see http://www.python.org/dev/peps/pep-0249/ -- search for  
> ".executemany")
>
> If not, I'll see if I can't add a runOperationMany() to
> twisted.enterprise.adbapi.ConnectionPool.  The functionality I want is
> simple in theory.

It definitely wouldn't be hard to create this function. You could add  
it to ConnectionPool, but a subclass would work equally well.

Just take a look at how runOperation works, and create a similar  
function, runOperationMany(trans, *args, **kwargs). This should call  
runInteraction and pass your second function _runOperationMany(trans,  
*args, **kwargs) which uses the `trans` as the cursor object.

Transaction instances like that automatically inherit all the  
attributes of the base cursor class in your particular driver, so you  
should be able to call executemany() without a problem.

Hope that helps,

-phil



From chris.yan at saybot.com  Tue Apr 15 21:09:47 2008
From: chris.yan at saybot.com (Chris)
Date: Wed, 16 Apr 2008 11:09:47 +0800
Subject: [Twisted-Python] Re: about smtp client auth problem.
In-Reply-To: <E1JlnZk-0006P9-Ec@cube.twistedmatrix.com>
References: <E1JlnZk-0006P9-Ec@cube.twistedmatrix.com>
Message-ID: <48056DFB.2070004@saybot.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080416/cb38e419/attachment.html>

From paulalexwilson at gmail.com  Wed Apr 16 06:22:58 2008
From: paulalexwilson at gmail.com (Paul Wilson)
Date: Wed, 16 Apr 2008 13:22:58 +0100
Subject: [Twisted-Python] Twisted Advice
Message-ID: <3c3d11cf0804160522m3c9bf1b5ubf12959165cdbe61@mail.gmail.com>

Hi!

I am researching technologies for building an application development
framework with Python, and have been interested in Twisted to manage
the network communication side of things. However, I read something
yesterday that appears to undermine the applicability of twisted for
my work. I've done quite a bit of reading around the subject since,
and have ended up confusing myself!

A remote client accesses my server to get instructions on how to
progress a customer "interaction." The remote client is itself a
server driven by a telephone call and keytone input. The remote client
could be servicing N calls (channels) simultaneously, and thus my
server needs to support N simultaneous TCP connections. Pretty
standard stuff.

I would like to provide an environment where developers can write call
servicing applications with no knowledge of the network. I had rested
on a coroutine approach, whereby a developer could write something
like this:

   response, events = (yield getKeyPress(SomePromptAnnouncement))

With the response, the developer can do an undefined number of things,
taking an undefined amount of time. During this time, management
events can arrive on a separate port, to which the developer gets
knowledge of through the yield statement.

On the other side of this generator is a scheduler which takes
instructions such as "getKeyPress" and passes it through twisted to
the remote client, such that it can play the announcement and get a
keypress. The scheduler gets the response and sends to back to the
generator, along with any events that have arrived on this separate
port.

When a call/connection arrives, the client will send an opening
line(s) to which I was specify the correct LineRecieved method. This
will trigger some scheduler code defined elsewhere via a deferred,
which will prompt the developer's code for some instructions, such as
"PlayPrompt". Am I correct in thinking that while a developer's code
is executing, all other connections are paused, and that the twisted
server will not accept new connections until it returns?

My original assumption was that Twisted would spawn a new thread
within which the scheduler would be set to run to manage the
communication for the duration of the customer call/interaction.
However, the approach taken by twisted is that if the developer's code
got itself in a muddle or infinite loop or took a very long time
accessing a database, the rest of the application would just be
frozen.

I wrote a quick test app that defers to a function that sleeps then
returns its response line. During the 20 seconds that the test server
took to return a line, the server would not accept any other requests
until the sleep function ended.

Clearly, I must be missing something; I have designed my application
upon the wrong axis. If so, I have some misunderstanding as to how to
properly structure an application like this upon Twisted. Or, twisted
is a framework whereby the response to a network event is expect to
arrive immediately.

I have seen "deferToThread" mentioned but I cannot find enough
documentation to decide whether it's what I need or not. Or perhaps
callInThread() is what I need?

Any suggestions about this would be very much appreciated. Even
better, if anybody knows of good documentation/tutorials they can
point me to, that would be appreciated also.

Regards,
Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 07:15:12 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 15:15:12 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
Message-ID: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>

Hi out there

Let me tell you about my experience with TM so far ...

Seeing there is doc. available, I digged through it. After all TM seems
worth the effort. From what I see, I love TM.

Links are often broken, though. Often seemingly useful doc. is old, very
old. Even current doc. isn't up to date.

Anyway, I try and I mean I try hard to get on my feet following some
examples and snippets. The problem isn't the
deferreds. I understand them pretty quickly and like them. The problem is
that the docs are like a maze, irritating, frustrating and misleading rather
than helping.

Trying to write a rpy. Of course, it doesn't
work. Looking at all those different docs, I'm bewildered. Somehow
hacking my way through it.
They talk about "resource trees", yet I don't find them in the doc. I find
putchild() but all examples and docs indicate, that you can do it only
within the root resource.
Again browsing, again looking desperately for some docs, that don't mislead
and make things even more fuzzy. Falling over an article with some halfway
useful tap doc.
OK, a little later, I
have my first web server running an my first rpy works, spitting out
"test". Wow.

I'm wondering, why of all things "rpy" ? python won't generate sth. like
"rpyc" for that, which translates in lost speed, I assume. No explanation.

I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
journey begins ...
the py-kqueue in FreeBSD 6.3 and 7.0 is version 1.4. I remember, however,
having read something by Isthmar Trauring Shtull (forgive me, if I didn't
spell that correctly) that I need version 1.3 in order to apply his patch,
which, of course (sorry, that's my disappointment carrying me away ...),
doesn't work. No prob, I do it by
hand. To no avail. That code is old, very old and it doesn't work.
I remember havin seen some version 2 of pykqueue. Setup works nicely but
Python/twisted coughs. The module has another name now. "(%"%§$( !!!
So I fall back to the version 1.4 that comes with FreeBSD ports. It works.
But in no-deamon mode only. As soon as I tell twistd to run web.tap
deamonized it vomitts and breaks.

Intense googleing, and I mean "intense". Reading through years of this
mailing list. No positive result.

What I say is said, because I love python an I consider twisted brilliant
and immensely useful - theoretically. So, don't get me wrong and accept it
as constructive, albeit somewhat pissed off remarks, OK :)

I have the clear impression that twisted is something in between a toy and a
brilliant product. It's hackers, however, leave much to be desired in terms
of usefulness. As it is, it's a great and promising hobby but not a useful
product.

Sorry, but doc strings don't replcae a halfway decent documentation and a
reasonable tutorial, considering the highly complex matter.
Sorry, but documentation that is often enough outdated and sometimes offers
broken links is next to useless.
Sorry, but the most brilliant code is a lot less attractive and useful, if
even "stable versions" are broken, in flux, etc ...

Kqueue seems to be vital to an event driven approach like TM, yet there are
multiple versions of pykqueue floating
around, none of them properly working (and I didn't fumble around. I
plain simply used the FreeBSD port), some of
them with some mor and some with some less "annotations" (I refuse to
call that doc.)

- How about getting 1 version of pykqueue properly running and into TM ?
- How about freezing some TM version (like 8.0) and updating/matching docs?
(Of course, experiments are funny and intriguing, but quite some of us out
here need sth. stable for everydays work)
- How about writing some complete docs and tutorials? Sth. along the lines
of "My first web server wit TM" (instead all those - sometimes seeming to
contradict each other - snippets)

I'm still fascinated by TM and still willingto invest time, efforts and
brains. But I'd love to have some properly working base and docs that
expßlain rather than confuse.

Looking forward to learn and enjoy.

(Yes, Should someone need sth. tested on FreeBSD, I'll gladly be of service)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080416/5df2105f/attachment.html>

From jcd at sdf.lonestar.org  Wed Apr 16 07:36:56 2008
From: jcd at sdf.lonestar.org (J. Cliff Dyer)
Date: Wed, 16 Apr 2008 09:36:56 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <1208353016.3320.4.camel@aalcdl07.lib.unc.edu>

On Wed, 2008-04-16 at 15:15 +0200, Dr aio wrote:
> Hi out there
> 
> Let me tell you about my experience with TM so far ...
> 
> Seeing there is doc. available, I digged through it. After all TM
> seems worth the effort. From what I see, I love TM.
> 
> Links are often broken, though. Often seemingly useful doc. is old,
> very old. Even current doc. isn't up to date.
> 
> Anyway, I try and I mean I try hard to get on my feet following some
> examples and snippets. The problem isn't the
> deferreds. I understand them pretty quickly and like them. The problem
> is that the docs are like a maze, irritating, frustrating and
> misleading rather than helping.
> 
> Trying to write a rpy. Of course, it doesn't
> work. Looking at all those different docs, I'm bewildered. Somehow hacking my way through it.
> They talk about "resource trees", yet I don't find them in the doc. I
> find putchild() but all examples and docs indicate, that you can do it
> only within the root resource.
> Again browsing, again looking desperately for some docs, that don't
> mislead and make things even more fuzzy. Falling over an article with
> some halfway useful tap doc.
> OK, a little later, I
> have my first web server running an my first rpy works, spitting out "test". Wow.
> 
> I'm wondering, why of all things "rpy" ? python won't generate sth.
> like "rpyc" for that, which translates in lost speed, I assume. No
> explanation. 
> 
> I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
> journey begins ...
> the py-kqueue in FreeBSD 6.3 and 7.0 is version 1.4. I remember,
> however, having read something by Isthmar Trauring Shtull (forgive me,
> if I didn't spell that correctly) that I need version 1.3 in order to
> apply his patch, which, of course (sorry, that's my disappointment
> carrying me away ...), doesn't work. No prob, I do it by
> hand. To no avail. That code is old, very old and it doesn't work.
> I remember havin seen some version 2 of pykqueue. Setup works nicely
> but Python/twisted coughs. The module has another name now. "(%"%§
> $( !!!
> So I fall back to the version 1.4 that comes with FreeBSD ports. It
> works. But in no-deamon mode only. As soon as I tell twistd to run
> web.tap deamonized it vomitts and breaks.
> 
> Intense googleing, and I mean "intense". Reading through years of this
> mailing list. No positive result.
> 
> What I say is said, because I love python an I consider twisted
> brilliant and immensely useful - theoretically. So, don't get me wrong
> and accept it as constructive, albeit somewhat pissed off remarks,
> OK :)
> 
> I have the clear impression that twisted is something in between a toy
> and a brilliant product. It's hackers, however, leave much to be
> desired in terms of usefulness. As it is, it's a great and promising
> hobby but not a useful product.
> 
> Sorry, but doc strings don't replcae a halfway decent documentation
> and a reasonable tutorial, considering the highly complex matter.
> Sorry, but documentation that is often enough outdated and sometimes
> offers broken links is next to useless.
> Sorry, but the most brilliant code is a lot less attractive and
> useful, if even "stable versions" are broken, in flux, etc ...
> 
> Kqueue seems to be vital to an event driven approach like TM, yet
> there are multiple versions of pykqueue floating
> around, none of them properly working (and I didn't fumble around. I plain simply used the FreeBSD port), some of 
> them with some mor and some with some less "annotations" (I refuse to call that doc.)
> 
> - How about getting 1 version of pykqueue properly running and into
> TM ?
> - How about freezing some TM version (like 8.0) and updating/matching
> docs? (Of course, experiments are funny and intriguing, but quite some
> of us out here need sth. stable for everydays work)
> - How about writing some complete docs and tutorials? Sth. along the
> lines of "My first web server wit TM" (instead all those - sometimes
> seeming to contradict each other - snippets)
> 
> I'm still fascinated by TM and still willingto invest time, efforts
> and
> brains. But I'd love to have some properly working base and docs that expßlain rather than confuse.
> 
> Looking forward to learn and enjoy.
> 
> (Yes, Should someone need sth. tested on FreeBSD, I'll gladly be of
> service)

Dr. Aio,

Have you tried the finger tutorial.
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

It's certainly well more than a snippet, and goes through getting a
finger server up and running quickly, and then refactoring it for
greater robustness.

It doesn't answer all your concerns, but it's worth spending some time
on.  

Cheers,
Cliff





From exarkun at divmod.com  Wed Apr 16 07:47:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 09:47:40 -0400
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <3c3d11cf0804160522m3c9bf1b5ubf12959165cdbe61@mail.gmail.com>
Message-ID: <20080416134740.6859.1236826826.divmod.quotient.30587@ohm>

On Wed, 16 Apr 2008 13:22:58 +0100, Paul Wilson <paulalexwilson at gmail.com> wrote:
>Hi!
>
>I am researching technologies for building an application development
>framework with Python, and have been interested in Twisted to manage
>the network communication side of things. However, I read something
>yesterday that appears to undermine the applicability of twisted for
>my work. I've done quite a bit of reading around the subject since,
>and have ended up confusing myself!
>
>A remote client accesses my server to get instructions on how to
>progress a customer "interaction." The remote client is itself a
>server driven by a telephone call and keytone input. The remote client
>could be servicing N calls (channels) simultaneously, and thus my
>server needs to support N simultaneous TCP connections. Pretty
>standard stuff.
>
>I would like to provide an environment where developers can write call
>servicing applications with no knowledge of the network. I had rested
>on a coroutine approach, whereby a developer could write something
>like this:
>
>   response, events = (yield getKeyPress(SomePromptAnnouncement))
>

Just to clarify - this looks like a generator rather than a coroutine.

>With the response, the developer can do an undefined number of things,
>taking an undefined amount of time. During this time, management
>events can arrive on a separate port, to which the developer gets
>knowledge of through the yield statement.
>
>On the other side of this generator is a scheduler which takes
>instructions such as "getKeyPress" and passes it through twisted to
>the remote client, such that it can play the announcement and get a
>keypress. The scheduler gets the response and sends to back to the
>generator, along with any events that have arrived on this separate
>port.
>
>When a call/connection arrives, the client will send an opening
>line(s) to which I was specify the correct LineRecieved method. This
>will trigger some scheduler code defined elsewhere via a deferred,
>which will prompt the developer's code for some instructions, such as
>"PlayPrompt". Am I correct in thinking that while a developer's code
>is executing, all other connections are paused, and that the twisted
>server will not accept new connections until it returns?

Yes, that's correct.  Twisted is single-threaded - it invokes event
handlers in the same thread it uses to monitor event sources.  As long
as an event handler is running, event sources are not monitored for
events and no other handlers will be invoked.

>
>My original assumption was that Twisted would spawn a new thread
>within which the scheduler would be set to run to manage the
>communication for the duration of the customer call/interaction.
>However, the approach taken by twisted is that if the developer's code
>got itself in a muddle or infinite loop or took a very long time
>accessing a database, the rest of the application would just be
>frozen.

Generally speaking, Twisted will only create a thread when application
code asks it to.

>
>I wrote a quick test app that defers to a function that sleeps then
>returns its response line. During the 20 seconds that the test server
>took to return a line, the server would not accept any other requests
>until the sleep function ended.

The "defers to a function" language is a bit confusing.  However, your
conclusion sounds right.  If you block the reactor thread, nothing else
will happen.

>Clearly, I must be missing something; I have designed my application
>upon the wrong axis. If so, I have some misunderstanding as to how to
>properly structure an application like this upon Twisted. Or, twisted
>is a framework whereby the response to a network event is expect to
>arrive immediately.

It's not necessary for responses to arrive immediately.  Responses just
need to be obtained without blocking.  For example, if getting a response
involves talking to someone else over the network, then Twisted has some
networking APIs that don't block. ;)  Likewise, twisted.enterprise lets
you talk to a rdbm (it actually uses threads, but it mostly doesn't show
that to you).

>I have seen "deferToThread" mentioned but I cannot find enough
>documentation to decide whether it's what I need or not. Or perhaps
>callInThread() is what I need?

One of these may be appropriate.  You could decide that in your application
framework, user code is always run in a non-reactor thread.  This is easily
accomplished: your event handler just needs to invoke user code in a thread
instead of directly.  deferToThread lets you run a function in a thread and
gives you a Deferred which will be called back with the return value of the
function when it returns or which will errback if it raises an exception.  
callInThread is lower level, not exposing the result of the function.

>
>Any suggestions about this would be very much appreciated. Even
>better, if anybody knows of good documentation/tutorials they can
>point me to, that would be appreciated also.

It sounds like you're looking for deferToThread or one of its friends.
Note however that just throwing user code into a thread doesn't mean
programmers can be oblivious to their environment.  It simply trades the
need to pay attention to when you block and for how long for the more
complex task of paying attention to thread safety.  If each task is
isolated from all others, this may be a good trade-off to make, but if
there's shared state it may not be.

Jean-Paul



From therve at free.fr  Wed Apr 16 08:01:44 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 16 Apr 2008 16:01:44 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416160144.l3w06npx8kckcosk@wasabox.wasabout.net>

Quoting Dr aio <dr.pythoniac at googlemail.com>:

> Kqueue seems to be vital to an event driven approach like TM, yet there are
> multiple versions of pykqueue floating
> around, none of them properly working (and I didn't fumble around. I
> plain simply used the FreeBSD port), some of
> them with some mor and some with some less "annotations" (I refuse to
> call that doc.)
>
> - How about getting 1 version of pykqueue properly running and into TM ?

The current one is grossly working, even though there are some  
problems, and that the setup is not triavial. But a new reactor has  
been developed, using Python 2.6 KQueue wrapper, and should be  
available some day. See http://twistedmatrix.com/trac/ticket/1918 for  
the progress on this field. Any tests and feedback would help this  
going further.


-- 
Thomas




From andrewfr_ice at yahoo.com  Wed Apr 16 09:36:45 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 16 Apr 2008 08:36:45 -0700 (PDT)
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <E1Jm6fI-0007Z5-Lj@cube.twistedmatrix.com>
Message-ID: <196245.7166.qm@web34205.mail.mud.yahoo.com>

Hi Paul:

>I would like to provide an environment where
>developers can write call servicing applications with
>no knowledge of the network. I had rested on a
>coroutine approach, whereby a developer could write
>something like this:

I posted some code a little while ago that has WS-BPEL
logic riding on top of Stackless and Twisted. 

>Am I correct in thinking that while a developer's
code
>is executing, all other connections are paused, and
>that the twisted server will not accept new
>connections until it returns?

[From the Schmitt Reactor Pattern Paper]

>Non-preemptive. In a single-threaded application
>process, event handlers are not preempted while they
>are executing. This implies that an event handler
>should not perform blocking I/O on an individual
>handle since this will block the entire process and
>impede the responsiveness for clients connected to
>other handles.

If you accept the Schmitt explanation, I would suggest
that it is convenient to think of Twisted as a
non-preemptive threading system where callbacks and
server protocol instances are user space "threads of
execution" and the reactor is the scheduler. Since a
"thread" cannot be involuntarily be pre-empted, the
reactor will not have a chance to trigger callbacks. 

Moral of the story - you don't want to do long CPU
intensive work in a callback.

>My original assumption was that Twisted would spawn a
>new thread within which the scheduler would be set to
>run to manage the communication for the duration of
>the customer call/interaction.

I think you want reactor.callInThread(). I remember
Philip Mayers telling me about this in a post about a
year ago.

Here is an example - forget the Stackless stuff

http://stacklessexamples.googlecode.com/svn/trunk/examples/twisted/TwistedWebserverThreaded.py

(Actually I would rather like to forget that piece of
code altogether)

However you may want to think over your design if you
find you need to extensively use OS threads. 

I would be tempted to ask myself questions like:

1)Is my application CPU or I/O bound"? 
2)Can I encapsulate the message exchange pattern
between the client and the server be done in a single
protocol"?
3)Can I conveniently yield the thread at predictable
points?

>Or, twisted is a framework whereby the response to a
>network event is expect to arrive immediately.

I think the exact opposite is true, that is why the
deferred object exists. 

I would suggest Twisted is ideal for reactive, I/O
bound applications particularly when you can represent
the message exchange pattern in a single protocol.

Cheers,
Andrew




      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From dr.pythoniac at googlemail.com  Wed Apr 16 09:42:08 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 17:42:08 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
Message-ID: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>

First: THANKS for reacting so friendly and civilized :)

Cliff
> Have you tried the finger tutorial.

Sure. When I say, I DID read what's available, then I did. Otherwise I
wouldn't dare to complain.


Thomas Hervé <therve at free.fr> wrote:

> ...
> > - How about getting 1 version of pykqueue properly running and into TM ?
>
> The current one is grossly working, even though there are some
> problems, and that the setup is not triavial. But a new reactor has
> been developed, using Python 2.6 KQueue wrapper, and should be
> available some day. See http://twistedmatrix.com/trac/ticket/1918 for
> the progress on this field. Any tests and feedback would help this
> going further.

Great. Thanks. PLEASE test it properly and prepare a reasonably conmplete
readme at least.
And kindly see below for my current problems.


mike at mkp.ca wrote:

> Feel better now? ;-)
>
> I understand your pain. Twisted is very much written by hackers for
> hackers, with the old school practices of source and oral tradition in
> place of documentation. It took me many attempts before I felt I was
> competent, and I still can't do anything without constantly consulting
> the source code. I confess, I haven't bothered to look at the docs
> for years, and I suspect it is the same with the core Twisted
> developers.
>
> Life is made easier by having a mentor who can look over your work and
> point out misunderstandings and antipatterns. I find the mailing list
> to be a mixed bag as a replacement. Sometimes you get real gems from
> Glyph and company, and sometimes you just get a hard time. I'd be
> happy to help if I can, but any deep thinking will probably have to
> wait for weekends. I'm also a long time FreeBSD user and Python
> developer.
>
> Hope you make it over the curve!

Thanks, Mike, for your friendly welcome.

Yes, I do understand that attitude. I love to have it, too.
BUT: twisted is having and looking for sponsors, that is, twisted is -
gladly ! - meant to be a product and not some hackers private delight
(only).

You see, I argue for using twisted. Possibly some of us argue against other
solutions and, worst case, they risk their ass doing so.
Again, I share your attitude and i understand it so well. But, PLEASE,
understand that I need to get sth. working, that some colleagues put a lot
of trust, valuable trust, into twisted, even taking a risk. That should be
seen and properly respnonded to, too.

I'm not talking about script kiddies. I'm talking about seasoned colleages
with a (couple) dozend years in the job.
We don't need pampering, not even mentoring, practical and welcome as that
might be. We need realiabilty and a _fair_ chance to find our ways in
twisted. A reasonable starting point.

--------

Here's what I tried today:

Using py-kqueue (1.4) in FreeBSDs ports.

'twistd -r kqueue -no -f web.tap' works fine.
'twistd -r kqueue -f web tap' breaks.

Next I checked, wether the changes proposed by IST where in version 1.4.
Nope.
So I edited them into the patch that comes with the port anyway
(patch-kqsyscallmodule).
If anyone is interested, I'll post it.

Same as without, i.e. it works but it breaks if run as daemon.
Here's what I find in the log:

Log opened.
twistd 2.5.0 (/usr/local/bin/python2.5 2.5.2) starting up
reactor class: <class 'twisted.internet.kqreactor.KQueueReactor'>
Loading web.tap...
Loaded.
Changing process name to test
Log opened.
twistd 2.5.0 (/home/www/tm/ 2.5.2) starting up
reactor class: <class 'twisted.internet.kqreactor.KQueueReactor'>
Loading web.tap...
Loaded.
twisted.web.server.Site starting on 80
Starting factory <twisted.web.server.Site instance at 0x85935ec>
Traceback (most recent call last):
File "/usr/local/bin/twistd", line 21, in <module>
run()
File "/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py",
line 27, in run
app.run(runApp, ServerOptions)
File "/usr/local/lib/python2.5/site-packages/twisted/application/app.py",
line 379, in run
runApp(config)
File "/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py",
line 23, in runApp
_SomeApplicationRunner(config).run()
File "/usr/local/lib/python2.5/site-packages/twisted/application/app.py",
line 158, in run
self.postApplication()
File
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py",
line 213, in postApplication
startApplication(self.config, self.application)
File
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py",
line 174, in startApplication
service.IService(application).privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py",
line 228, in privilegedStartService
service.privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py",
line 228, in privilegedStartService
service.privilegedStartService()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py",
line 68, in privilegedStartService
self._port = self._getPort()
File
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py",
line 86, in _getPort
return getattr(reactor, 'listen'+self.method)(*self.args, **self.kwargs)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 467, in listenTCP
p.startListening()
File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line
750, in startListening
self.startReading()
File "/usr/local/lib/python2.5/site-packages/twisted/internet/abstract.py",
line 265, in startReading
self.reactor.addReader(self)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py",
line 98, in addReader
self._updateRegistration(fd, EVFILT_READ, EV_ADD)
File "/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py",
line 89, in _updateRegistration
kq.kevent([kevent(*args)], 0, 0)
OSError: [Errno 9] Bad file descriptor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080416/9e1cf76d/attachment.html>

From glyph at divmod.com  Wed Apr 16 09:49:49 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 15:49:49 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>


On 01:15 pm, dr.pythoniac at googlemail.com wrote:
>Seeing there is doc. available, I digged through it. After all TM seems
>worth the effort. From what I see, I love TM.

Great!  The rest definitely doesn't sound like you love it though ... 
;-)
>Links are often broken, though. Often seemingly useful doc. is old, 
>very
>old. Even current doc. isn't up to date.

Since the 8.0 release, we have had quite a few problems with links, 
specifically the links from the core documentation to the API 
documentation on the website.  We are working to fix this.  However, if 
you spot broken links, please feel free to report them in the bug 
tracker: http://twistedmatrix.com/trac/newticket

Saying that there are "often" broken links is just about as pointless as 
saying that you "often" find bugs.  Without specifics, this is not 
useful information; the reason we have not fixed specific problems is 
not because we believe there are no problems anywhere.
>They talk about "resource trees", yet I don't find them in the doc. I 
>find
>putchild() but all examples and docs indicate, that you can do it only
>within the root resource.

You can do putChild to any resource, as long as you understand its 
lifecycle.  A "resource tree" is simply a tree ( 
http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
).

Our documentation assumes, and will continue to assume, a certain level 
of familiarity with basic computer-sciency jargon; if you feel that a 
particular phrase is too obscure, feel free to submit a patch 
elaborating on it.  However, the audience of the bulk of the Twisted 
documentation is fluent Python programmers.  If you want to write 
something for folks who are new to Python or programming in general, a 
separate set of documentation would be better than trying to re-explain 
everything in-line.  For example, explaining that we are referring to a 
directed graph of IResource providers would be fine, but adding an 
explanation of graphs or how python references or dictionaries work 
would not.
>OK, a little later, I
>have my first web server running an my first rpy works, spitting out
>"test". Wow.

Sounds like the docs are doing their job, then :).
>I'm wondering, why of all things "rpy" ? python won't generate sth. 
>like
>"rpyc" for that, which translates in lost speed, I assume. No 
>explanation.

"rpy" to mark the file as a specific kind of python file that needs to 
be run within the web server to produce a resource.  Implemented in this 
manner, python would not generate a "pyc" file even if it were called a 
".py"; it is not a module that you import.

As far as "lost speed" is concerned, it's not entirely clear that that's 
true, because the times when Python would have to check for the .rpyc 
are entirely different than the way that it does when you are importing 
modules.  Twisted could emit .rpycs as an optimization if you did a 
benchmark, discovered it did indeed matter, and submitted a patch.  This 
is, however, hardly the highest priority for twisted.web developers 
right now :).
>I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
>journey begins ...

>Intense googleing, and I mean "intense". Reading through years of this
>mailing list. No positive result.

Fair enough.  The kqueue reactor doesn't work and there's no 
documentation saying that it doesn't, except a failing buildbot: 
http://buildbot.twistedmatrix.com/builders/freebsd-py2.4-kq - also, 
Twisted's support for platforms is not clearly explained.
>I have the clear impression that twisted is something in between a toy 
>and a
>brilliant product. It's hackers, however, leave much to be desired in 
>terms
>of usefulness. As it is, it's a great and promising hobby but not a 
>useful
>product.

Many, many people (including me!) disagree.

I understand that you're frustrated, but this does nothing but serve to 
weaken your position.  You have some valid criticism, but when I read 
"twisted is not useful", I think that you are simply mistaken.
>Sorry, but doc strings don't replcae a halfway decent documentation and 
>a
>reasonable tutorial, considering the highly complex matter.

First google hit for "twisted tutorial":

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

Not perfect, perhaps, but I think it could definitely be described as a 
"reasonable tutorial" to core Twisted concepts.
>Sorry, but documentation that is often enough outdated and sometimes 
>offers
>broken links is next to useless.

If you were truly sorry, you would be contributing patches which fix the 
broken links and updates the documentation to be more recent.
>Kqueue seems to be vital to an event driven approach like TM, yet there 
>are
>multiple versions of pykqueue floating
>around, none of them properly working (and I didn't fumble around. I
>plain simply used the FreeBSD port), some of
>them with some mor and some with some less "annotations" (I refuse to
>call that doc.)

Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
is an optimization of a very specific part of a Twisted application on a 
very specific platform.  *Most* realistic Twisted applications will be 
bottlenecked on application code long before something like kqueue (or 
epoll) will help.  Working from the amount of support from the 
community, most Twisted applications also don't run on FreeBSD.

I apologize if this response seems too harsh, but I am annoyed by people 
seeing a pet feature (variously: good ideas like HTTP/1.1, kqueue, and 
Cocoa GUI support, bad ideas like "block on a Deferred", and core API 
thread safety)  which isn't too important in Twisted and then claiming 
it's "vital" to the project's success.  The project is succeeding, so 
clearly it is not vital: QED.  It may be important to you: that's great. 
Do some work to support it.  Once it's supported, buildbot will listen 
to its tests and it won't break again.

For those projects which really do benefit from high multiplexing volume 
with something like kqueue, Twisted offers an extremely abstract API 
where the multiplexing mechanism is independent of the application code. 
You can, at any moment, replace the reactor and your application will 
keep working.  So even if kqueue support does not exist at all, you can 
add it with Twisted much more easily than if you wrote your own select() 
loop.

You might say, in fact, that Twisted is vital to a platform-specific 
tool like Kqueue, because otherwise almost nothing will use it.
>- How about getting 1 version of pykqueue properly running and into TM 
>?

Yes, how about that?  Maybe you could contribute to one of the numerous 
kqueue tickets already in the tracker.
>- How about freezing some TM version (like 8.0) and updating/matching 
>docs?
>(Of course, experiments are funny and intriguing, but quite some of us 
>out
>here need sth. stable for everydays work)

Twisted is very, very stable.  The next version (8.1) will break only 
code that is using APIs which have been outdated for literally _years_. 
There is no need to "freeze" anything, just update the documentation to 
what is most recent and do a new release including that documentation.
>- How about writing some complete docs and tutorials? Sth. along the 
>lines
>of "My first web server wit TM" (instead all those - sometimes seeming 
>to
>contradict each other - snippets)

Yes, how about that?  You can write documentation on your own site, and 
we will link to it.  Or, you could contribute to the core documentation.

The bottom line: complaining like this is not very useful.  If you have 
time to help, then contributing patches and responding to reviews in the 
tracker is helpful.  If you don't have the time to actually do any work, 
then describing specific problems (in as much detail as possible!) is 
useful.  If you don't have time even for _that_, then cash donations to 
the foundation are useful.

If you are interested in getting stuff in Twisted fixed, though, writing 
rambling complaints serves to do nothing but reduce our developers' 
already scarce motivation, make us think our work is not appreciated, 
and encourage us to spend time writing rambling responses like this one 
rather than fix the problems you're talking about.

(Which is not to say this has been a _complete_ waste of time.  If one 
out of every fifty people I write a message like this to understands 
what I'm saying and becomes a long-time contributor, then it's probably 
worth it.)



From glyph at divmod.com  Wed Apr 16 10:05:34 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 16:05:34 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
Message-ID: <20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>


On 03:42 pm, dr.pythoniac at googlemail.com wrote:
>Yes, I do understand that attitude. I love to have it, too.
>BUT: twisted is having and looking for sponsors, that is, twisted is -
>gladly ! - meant to be a product and not some hackers private delight
>(only).

Twisted is a project, not a product.  The TSF is part of a non-profit. 
We are looking for sponsors to help the project improve, not payments 
from customers for a working product.  If it were already perfect, what 
would we need donations for?

If you want a product based on Twisted, or training based on Twisted, my 
company (http://divmod.org/) might be able to help you.
>You see, I argue for using twisted. Possibly some of us argue against 
>other
>solutions and, worst case, they risk their ass doing so.

Thank you for doing that.
>Again, I share your attitude and i understand it so well. But, PLEASE,
>understand that I need to get sth. working, that some colleagues put a 
>lot
>of trust, valuable trust, into twisted, even taking a risk. That should 
>be
>seen and properly respnonded to, too.

All else being equal, I would prefer that you use Twisted, because I 
like people to use my stuff and like it.  However, if we need to do a 
ton of additional work that we are not really interested in, on a 
timetable that is defined by you... well, that doesn't sound like open 
source work, that sounds like consulting.

If Twisted does not meet your needs at this time, you have two (and a 
half) options:

(1) Fix it yourself,
(1a) pay someone to fix it, or
(2) Use something else.

I suppose if the problem is the documentation, then (1a) becomes "pay 
someone for training".  This is not a roundabout way of saying "go 
away", you really can pay someone for training pretty easily.  I'm sure 
there are others in the community who could help you.  I would certainly 
prefer it if you could buy some training than if you had to walk away.
>I'm not talking about script kiddies. I'm talking about seasoned 
>colleages
>with a (couple) dozend years in the job.

>We don't need pampering, not even mentoring, practical and welcome as 
>that
>might be. We need realiabilty and a _fair_ chance to find our ways in
>twisted. A reasonable starting point.

I am not trying to be rude, or insult you when I say these things.  I am 
just explaining that there are many people who feel that Twisted offers 
something worthwhile and a "fair" and "reasonable starting point", so 
it's inaccurate to say we don't have one at all.  Maybe you and your co- 
workers are all brilliant and understand the underlying concepts 
perfectly, but simply don't have time to get working with it quickly 
enough because of time pressures beyond your control.

That's fine, and if you can't use twisted because of it, I am sorry that 
the docs were not better.  But if you don't have the time to learn it, 
don't have the time to help us fix the docs, and don't have the money to 
pay someone to help you learn it or fix the docs... well, the situation 
just isn't going to improve in a way that you want just because you want 
it to.



From exarkun at divmod.com  Wed Apr 16 10:42:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 12:42:51 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <20080416164251.6859.1487626512.divmod.quotient.30633@ohm>

On Wed, 16 Apr 2008 15:15:12 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Hi out there
>
>Let me tell you about my experience with TM so far ...
>
> [snip]

Hi Dr aio,

Thanks for this feedback.  It's great to know where users are running into
problems.  This is always a welcome contribution.

Jean-Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 11:06:07 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 19:06:07 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
Message-ID: <2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>

Hi Glyph

On 4/16/08, glyph at divmod.com <glyph at divmod.com> wrote:
>
>  Great!  The rest definitely doesn't sound like you love it though ... ;-)

Nope. If I lost my interest and positive attitude towards TM I'd have
left rather than subscribing to this list.
>
> Saying that there are "often" broken links is just about as pointless as saying that you "often" find bugs.  Without specifics, this is not useful information; the reason we have not fixed specific problems is not because we believe there are no problems anywhere.

Sorry. I simply assumed that you know your site and that those broken
links seem "natural" to you as everything is in flux.
>From now on I will report them.
>
>  You can do putChild to any resource, as long as you understand its lifecycle.  A "resource tree" is simply a tree ( http://en.wikipedia.org/wiki/Tree_structure ) of resources ( http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html ).
>
>  Our documentation assumes, and will continue to assume, a certain level of familiarity with basic computer-sciency jargon;

This sounds as if you were to say "You don't fully understand TM ?
Dumbhead ! Learn the basics before opening your mouth."

Thank you, sir.

>  OK, a little later, I
>  have my first web server running an my first rpy works, spitting out
>  "test". Wow.
>

    >  Sounds like the docs are doing their job, then :).

Nope.  Working hours and hours through sometimes confusing
"documentation" to finally have a couple of lines of code working is
not really hot.


>>  ... As it is, it's a great and promising hobby but not a useful
>>  product.
>>
>
> Many, many people (including me!) disagree.
>
> I understand that you're frustrated, but this does nothing but >serve to weaken your position.  You have some valid criticism, but >when I read "twisted is not useful", I think that you are simply >mistaken.

So ? I didn't say that TM is not useful. I said it's not a useful
_product_. An important difference, beause a product is made to be
(more or less) useable out of the box. Lab experiments are immensily
useful but not for production.
Short: I didn't mean to insult or belittle TM but rather to express
that imho it could be more useable.

>  http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.htm
>
> Not perfect, perhaps, but I think it could definitely be described as > a "reasonable tutorial" to core Twisted concepts.

Sorry, half no.
I had no problem to understand TMs core concepts;
that's not the issue. I had the problem to find out how to
use TM.
One problem was that a lot of docs and tutorials (on the web, too) are
simply very old and also using different approaches.
Example: I'm just trying to understand how resources work. Suddenly
they talk about "application" and tap. That is confusing.

> If you were truly sorry, you would be contributing patches which fix the broken links and updates the documentation to be more recent.

Uhum, sir ... Me ? contributing doc. ? Frankly, this does not seem to
be your smartest idea so far * g
I'll gladly do as soon as I can walk more or less alone in TM, OK.


>  Kqueue seems to be vital to an event driven approach like TM, yet there are ...

> Kqueue is most definitely _not_ "vital" to something like Twisted.  It > is an optimization of a very specific part of a Twisted application on > a very specific platform.  *Most* realistic Twisted applications will
> be bottlenecked on application code long before something like
> kqueue (or epoll) will help.

Yes, to me it is vital. Modern AIO implementations haven't been
researched and worked on for thegeeky  fun of it. select() is just not
the answer to many of todays needs.

> Working from the amount of support
> from the community, most Twisted applications also don't run on
> FreeBSD.

Uh ? Means: "Use linux !" ? Irritating to read that.

I apologize if this response seems too harsh, but I am annoyed by
people who deciding for me what's important, what's the OS worth to be
supported and doubting my professional and intellectual capacity
because I dare to offer constructive criticism.

> I apologize if this response seems too harsh, but I am annoyed by > people seeing a pet feature (variously: good ideas like HTTP/1.1,
> kqueue, and Cocoa GUI support, bad ideas like "block on a
> Deferred", and core API thread safety)  which isn't too important in
> Twisted and then claiming it's "vital" to the project's success.  The
> project is succeeding, so clearly it is not vital: QED.  It may be
> important to you: that's great. Do some work to support it.  Once
> it's supported, buildbot will listen to its tests and it won't break
> again.


Glyph, I subscribed to this list, I spent hours and hours trying to
wrap my mind around TM, I read documents, tickets and annotations even
on quite remote sites - short, I invested a lot in TM.
 That *IS* an acknowledgement of your work. That *IS* a whole lot of
trust in your project.
And you tell me more or less bluntly that I'm stupid, unprofessional
and using a minority OS ?
At the same time you suggest that I, the newbie to TM contribute to
docs and even code ? Uhum. Sure.


> You might say, in fact, that Twisted is vital to a platform-specific
> tool like Kqueue, because otherwise almost nothing will use it.

Possibly, but I won't because I'd feel strange doing so, knowing quite
well that kqueue is by many considered to be _the_ AIO implementation
and knowing that kqueue is used - with excellent results - e.g. by
some servers (lighttpd, nginx, ...).

>  - How about getting 1 version of pykqueue properly running and into TM ?

I'll do as soon as I find some spare time. right now I need to get
some product made. Hopefully with TM.

> Twisted is very, very stable.

Great. Love to hear that.

>>  - How about writing some complete docs and tutorials? ...

> Yes, how about that?  You can write documentation on your own
> site, and we will link to it.  Or, you could contribute to the core
> documentation.

IF I can do my project with twisted I'll gladly give back.

> If you are interested in getting stuff in Twisted fixed, though,
> writing rambling complaints serves to do nothing but reduce our
> developers' already scarce motivation, make us think our work is
> not appreciated, and encourage us to spend time writing rambling
> responses like this one rather than fix the problems you're talking
> about.

a) Before fixing sth I should understand it pretty well. As a newbie
with TM I'm not in the position to fix things but to learn them -
ideally with some help.

b) I'm afraid humans tend to care most about the tools they work with.
Frankly, I'm not sure about my involvement with TM if it's big shots
treat newbies like this.

> (Which is not to say this has been a _complete_ waste of time.  If
> one out of every fifty people I write a message like this to
> understands what I'm saying and becomes a long-time contributor,
> then it's probably worth it.)

Which is not to say TM has been a _complete_ waste of time.  If I find
my way into it and get it working in time (Again: This is not my hobby
but my job);  then it's probably worth it.


Thanks so much



From nathan.stocks at gmail.com  Wed Apr 16 11:23:32 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 16 Apr 2008 11:23:32 -0600
Subject: [Twisted-Python] Explicitly closing an AMP connection?
Message-ID: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>

What's the "twisted" way of cleanly closing an AMP connection?  The
closest thing I can find on

http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html

is stopProducing() -- but it's undocumented.  Will that kill the connection?

~ Nathan



From dr.pythoniac at googlemail.com  Wed Apr 16 11:24:56 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 19:24:56 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416164251.6859.1487626512.divmod.quotient.30633@ohm>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416164251.6859.1487626512.divmod.quotient.30633@ohm>
Message-ID: <2337a3d40804161024o71026827xd0cd8e3916427c87@mail.gmail.com>

Thank you, Jean-Paul

That's what I assumed in the beginning and why I wrote.

On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>  Thanks for this feedback.  It's great to know where users are running into
>  problems.  This is always a welcome contribution.



Actually, pykqueue seems to work here but not in deamon mode.
As this prettx much seems to be a TM related problem: Do you have any
idea oder hints why it doesn't work in deamon mode ?



From radix at twistedmatrix.com  Wed Apr 16 11:37:45 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 16 Apr 2008 13:37:45 -0400
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
References: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
Message-ID: <60ed19d40804161037j20aebcaco5c65b06c371571eb@mail.gmail.com>

On Wed, Apr 16, 2008 at 1:23 PM, Nathan <nathan.stocks at gmail.com> wrote:
> What's the "twisted" way of cleanly closing an AMP connection?  The
>  closest thing I can find on
>
>  http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html
>
>  is stopProducing() -- but it's undocumented.  Will that kill the connection?

The way to close the connection is transport.loseConnection. For
future reference, this is the same for any Twisted protocol. The
transport is in the 'transport' attribute of the protocol.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Wed Apr 16 11:40:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 13:40:13 -0400
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
Message-ID: <20080416174013.6859.1536542877.divmod.quotient.30647@ohm>

On Wed, 16 Apr 2008 11:23:32 -0600, Nathan <nathan.stocks at gmail.com> wrote:
>What's the "twisted" way of cleanly closing an AMP connection?  The
>closest thing I can find on
>
>http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.AMP.html
>
>is stopProducing() -- but it's undocumented.  Will that kill the connection?
>

Since AMP is an IProtocol implementation, it is given a reference to its
transport via the makeConnection method (commonly inherited from Protocol
and not overridden - the base implementation sets it as an attribute of
itself, `transport´).  The way to close a TCP connection is to call the
transport's loseConnection method.  So if you have a reference to a
connected AMP instance and you want to disconnect it, you can do

    theProto.transport.loseConnection()

Jean-Paul



From exarkun at divmod.com  Wed Apr 16 11:43:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 13:43:46 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161024o71026827xd0cd8e3916427c87@mail.gmail.com>
Message-ID: <20080416174346.6859.1969888562.divmod.quotient.30649@ohm>

On Wed, 16 Apr 2008 19:24:56 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Thank you, Jean-Paul
>
>That's what I assumed in the beginning and why I wrote.
>
>On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>  Thanks for this feedback.  It's great to know where users are running into
>>  problems.  This is always a welcome contribution.
>
>Actually, pykqueue seems to work here but not in deamon mode.
>As this prettx much seems to be a TM related problem: Do you have any
>idea oder hints why it doesn't work in deamon mode ?
>

I don't have much experience with pykqueue (or KQueue at all) since I primarily
target Linux.  I think development effort is being focused on the newer KQueue
bindings which will be available in Python 2.6 and should also be available as
a separate module for older versions of Python (I think the module is named
select26 or something like that).  This will probably be the preferred way to
use KQueue with Twisted.

You can follow Thomas's work on this here:

   http://twistedmatrix.com/trac/ticket/1918

Jean-Paul



From nathan.stocks at gmail.com  Wed Apr 16 11:54:00 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 16 Apr 2008 11:54:00 -0600
Subject: [Twisted-Python] Explicitly closing an AMP connection?
In-Reply-To: <20080416174013.6859.1536542877.divmod.quotient.30647@ohm>
References: <96c9d6a80804161023x4d1ff938p9f6a45d06ec1a88f@mail.gmail.com>
	<20080416174013.6859.1536542877.divmod.quotient.30647@ohm>
Message-ID: <96c9d6a80804161054s706ff159i71a9bd240105588f@mail.gmail.com>

>  Since AMP is an IProtocol implementation, it is given a reference to its
>  transport via the makeConnection method (commonly inherited from Protocol
>  and not overridden - the base implementation sets it as an attribute of
>  itself, `transport´).  The way to close a TCP connection is to call the
>  transport's loseConnection method.  So if you have a reference to a
>  connected AMP instance and you want to disconnect it, you can do
>
>    theProto.transport.loseConnection()

Perfect, thanks!

~ Nathan



From glyph at divmod.com  Wed Apr 16 13:21:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 16 Apr 2008 19:21:47 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
Message-ID: <20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>

On 05:06 pm, dr.pythoniac at googlemail.com wrote:
>Sorry. I simply assumed that you know your site and that those broken
>links seem "natural" to you as everything is in flux.
> From now on I will report them.

Thanks.
>>  You can do putChild to any resource, as long as you understand its 
>>lifecycle.  A "resource tree" is simply a tree ( 
>>http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
>>http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
>>).
>>
>>  Our documentation assumes, and will continue to assume, a certain 
>>level of familiarity with basic computer-sciency jargon;
>
>This sounds as if you were to say "You don't fully understand TM ?
>Dumbhead ! Learn the basics before opening your mouth."
>
>Thank you, sir.

If I thought you were a "dumbhead", and didn't know this stuff, I would 
not have provided API links.  If I thought you were ignorant I would 
have provided an explanation, and if I thought you were stupid I would 
not have bothered to reply.  I assume that you understand the concepts 
involved and I was just trying to be as specific as possible, since 
apparently the language that you found in the documentation was 
ambiguous.  (Normally, to communicate this concept, I would just say 
"resource tree" in conversation as well.)

Please note that I never insulted you.  Let me be more specific: I don't 
think you're stupid.  Believe me, if I were calling you an idiot, you'd 
know.  If you look around for rants that I've written, you can find some 
unkind things I have said about other people :).  (Links withheld to 
protect the guilty.)
>Short: I didn't mean to insult or belittle TM but rather to express
>that imho it could be more useable.

I understand.  Perhaps I should have been more specific with my 
comments.  I didn't mean to say that the problems that you were 
encountering were not real, or they should not be fixed.  Merely to 
remind our developers that their work is not "unusable" because of the 
problems you've mentioned, and to ask you to phrase your requests 
differently.

You showed up and said:

    "You guys really need to do X, Y, and Z to make your software 
usable."

The implication being that Twisted is useless to everyone, and therefore 
mostly worthless.  Also, it suggests that you expect us to do additional 
work, which may be relevant only to you, for free.  You can say almost 
exactly the same thing, but phrasing it slightly differently makes all 
the difference.  A better approach:

    "I tried to use Twisted but I can't figure out X, Y, and Z.  Can 
someone help me with that?"

It would also help if you would sprinkle in something about how you 
can't help out with anything until you've learned X, Y, and Z.  If you 
are asking for help so that your team can build a product, then you are 
asking for professional training; but if you're asking for help so that 
you can contribute an improved newbie experience to twisted (perhaps 
after your team builds a product...) then you are asking for the 
community to work together.

You've done that in this message, and I appreciate it.
>One problem was that a lot of docs and tutorials (on the web, too) are
>simply very old and also using different approaches.
>Example: I'm just trying to understand how resources work. Suddenly
>they talk about "application" and tap. That is confusing.

Definitely a problem.  This is probably worth filing a ticket about, but 
can you provide a little more detail, and some links to the relevant 
documents and the order you discovered them in?  The more detail the 
easier the documentation fixer's job will be.  We don't know exactly how 
newbies approach the documentation because we can never approach it 
without knowing it.
>>If you were truly sorry, you would be contributing patches which fix 
>>the broken links and updates the documentation to be more recent.
>
>Uhum, sir ... Me ? contributing doc. ? Frankly, this does not seem to
>be your smartest idea so far * g
>I'll gladly do as soon as I can walk more or less alone in TM, OK.

This is exactly the difference in tone I was talking about :-).  I do 
not mean to suggest that you should write documentation _immediately_. 
Merely that once you have learned enough about Twisted, you will be a 
good person to do these improvements.  For example, I've never had a bad 
Twisted documentation experience; it would be very hard for me to.
>>  Kqueue seems to be vital to an event driven approach like TM, yet 
>>there are ...
>
>>Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
>> > is an optimization of a very specific part of a Twisted application 
>>on > a very specific platform.  *Most* realistic Twisted applications 
>>will
>>be bottlenecked on application code long before something like
>>kqueue (or epoll) will help.
>
>Yes, to me it is vital. Modern AIO implementations haven't been
>researched and worked on for thegeeky  fun of it. select() is just not
>the answer to many of todays needs.

This is of course my point.  To you, perhaps.  Not to Twisted :).  But, 
just because it's not "vital" doesn't mean it's not important.  We do 
need kqueue support.  It is a selling point of Twisted to support 
multiple different multiplexing mechanisms and kqueue is an important 
mechanism.
>>Working from the amount of support
>>from the community, most Twisted applications also don't run on
>>FreeBSD.
>
>Uh ? Means: "Use linux !" ? Irritating to read that.

Let me expand on this.

*PLEASE* do not switch to linux to use Twisted.  We have, like, a 
million developers who use Ubuntu.  Hence, we have very good support for 
linux.  We need more Twisted developers who use FreeBSD (and Windows and 
Solaris and AIX and even distros like Red Hat and SuSE).  Please, please 
stay around and help us with that.

The problem is that FreeBSD people often show up, complain that Twisted 
has problems on FreeBSD, and then go away.  Either that, or they decide 
to give up FreeBSD and just use Linux on their servers, which is great 
for them, but doesn't help us at all.

The amount of work required to fix these problems is relatively small, 
especially compared with what these people sometimes do (write their own 
event loop).  It's even smaller now that some of our mostly-Linux 
developers have now made at least select-on-FreeBSD a fully supported 
platform, so you have only to worry about kqueue issues (which therve 
and others have already done a ton of work on).
>I apologize if this response seems too harsh, but I am annoyed by
>people who deciding for me what's important, what's the OS worth to be
>supported and doubting my professional and intellectual capacity
>because I dare to offer constructive criticism.

I am sorry that you read this as a criticism of your intellectual and 
professional abilities.  I take issue with your tone but, this cannot be 
emphasized enough, I *do not* think you are stupid or even necessarily 
wrong.  Just a little rude :).
>Glyph, I subscribed to this list, I spent hours and hours trying to
>wrap my mind around TM, I read documents, tickets and annotations even
>on quite remote sites - short, I invested a lot in TM.
>That *IS* an acknowledgement of your work. That *IS* a whole lot of
>trust in your project.
>And you tell me more or less bluntly that I'm stupid, unprofessional
>and using a minority OS ?
>At the same time you suggest that I, the newbie to TM contribute to
>docs and even code ? Uhum. Sure.

You are making the same mistake here that you're accusing me of.

I ignore a lot of messages to this list.  Writing a detailed, point-by- 
point reaction to your criticism is also a sign of respect.  Not all of 
what I have said is even disagreement, for example I acknowledged in my 
first reply that we did a very bad job of describing the implementation 
status of the kqueue reactor.
>Possibly, but I won't because I'd feel strange doing so, knowing quite
>well that kqueue is by many considered to be _the_ AIO implementation
>and knowing that kqueue is used - with excellent results - e.g. by
>some servers (lighttpd, nginx, ...).

FWIW, lighttpd's kqueue support does not appear to be perfect either: 
http://trac.lighttpd.net/trac/ticket/66 ;)
>>  - How about getting 1 version of pykqueue properly running and into 
>>TM ?
>
>I'll do as soon as I find some spare time. right now I need to get
>some product made. Hopefully with TM.

Awesome!
>>Twisted is very, very stable.
>
>Great. Love to hear that.

Hooray :)
>>>  - How about writing some complete docs and tutorials? ...
>
>>Yes, how about that?  You can write documentation on your own
>>site, and we will link to it.  Or, you could contribute to the core
>>documentation.
>
>IF I can do my project with twisted I'll gladly give back.

Again, good.
>a) Before fixing sth I should understand it pretty well. As a newbie
>with TM I'm not in the position to fix things but to learn them -
>ideally with some help.

We are _always_ willing to help out someone who is interested in 
contributing to the project.
>b) I'm afraid humans tend to care most about the tools they work with.
>Frankly, I'm not sure about my involvement with TM if it's big shots
>treat newbies like this.

I hope you can see now why I think this is a little unfair.  Your 
initial post was quite blunt, and I didn't do much but respond in kind. 
I did not intend to insult you, as apparently, you did not intend to 
insult me (or Twisted).  But, you started it ;-).
>Which is not to say TM has been a _complete_ waste of time.  If I find
>my way into it and get it working in time (Again: This is not my hobby
>but my job);  then it's probably worth it.

Well, let's move forward trying to make that happen.

Thank you for your feedback.  Overall it has been very helpful, even the 
parts that I didn't necessarily like.



From dr.pythoniac at googlemail.com  Wed Apr 16 14:25:48 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Wed, 16 Apr 2008 22:25:48 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<2337a3d40804161006l6d29f638m98a91b9ef6560145@mail.gmail.com>
	<20080416192147.21558.603100987.divmod.xquotient.10957@joule.divmod.com>
Message-ID: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>

Glyph

Front-up, first thing: As far as I'm concerned, we can talk friendly.
Probably we both "punished" each other for things we did at least not
mean (evil). :-)

>    "You guys really need to do X, Y, and Z to make your software usable."

Just to avoid further misunderstandings: Nope. I showed up and said
"Yuck ! TM seems to be friggin great. Why do you make it
useless~unuseable~difficult and confusing to use ?"

That was a decalaration of love, not war. I remember once telling my
son (then 7) sth along the line "Listen, this is a very, very nice
essay and it damn deserves to be written in a way your teacher can
read it. It deserves not be written barely readable and sloppy".

> > One problem was that a lot of docs and tutorials (on the web, too) are
> > simply very old and also using different approaches.
> > Example: I'm just trying to understand how resources work. Suddenly
> > they talk about "application" and tap. That is confusing.
> >
>
>  Definitely a problem.  This is probably worth filing a ticket about, but
> can you provide a little more detail, and some links to the relevant
> documents and the order you discovered them in?  The more detail the easier
> the documentation fixer's job will be.

I remember that in the section
http://twistedmatrix.com/projects/core/documentation/howto/ there are
sime links to the api (I suppose) that are broken/changed, e.g. in
http://twistedmatrix.com/projects/core/documentation/howto/basics.html
there is a link to "twisted.application.service.Application"
(http://twistedmatrix.com/projects/core/documentation/howto/twisted.application.service.Application)
that's broken.

This immensily disturb when one just discovers a complex thing like TM.


>  We don't know exactly how newbies
> approach the documentation because we can never approach it without knowing
> it.

OK, I'll try.

First I read about TM (here and there) being rudely complex. But then,
it also seemed to be the one that offered what I was looking for.
The bad reputation seemed to be mostly based in deferreds, so I looked
at those first.
Good: There is good documentation and I think anyone with some
experience in IT can understand it.
Bad: That documentation is spread all over the place, sometimes even
just a sentence or two somewhere.
Tip: Put relevant stuff in "getting started" and also offer links to
papers like the one about reactors.

After feeling assured enough about deferreds and actually liking them
and the was TM implements them I wanted to start up by writing a small
webserver.
What disturbed me the most was that whole resource thing and, more
generally, all that "stuff" like application, resource, Iresource tap,
etc.
It felt like having gotten the basic concept but having a thick fat
layer of "sugar", comfort in between the core and myself. Things
didn't have a place, they didn't fit - there was no overview but it
rather felt like trial and error.
There are plenty of snippets and examples but I didn't get the overall picture.

Tip: Publish some graphics, possibly a class tree and have some
introductory essay in "getting started". (e.g. Why would I want and
use "application" ? What does it do an how does it do that ?)

I noticed sth. similar with the API doc.
Sure, you guys know it by heart but I as a newbie can be completely
lost. Be generous and have a sentence or two with each function.

> ...  I do not
> mean to suggest that you should write documentation _immediately_. Merely
> that once you have learned enough about Twisted, you will be a good person
> to do these improvements.

OK, sounds reasonable. Will do once I come along with TM myself.

> "kqueue
>  This is of course my point.  To you, perhaps.  Not to Twisted :).  But,
> just because it's not "vital" doesn't mean it's not important.  We do need
> kqueue support.  It is a selling point of Twisted to support multiple
> different multiplexing mechanisms and kqueue is an important mechanism.

Maybe it's useful to you to consider my perspective. Actually, without
kqueue I would probably not have looked at TM. Python offers asyncore
and httpd so, somewhat more basic, of course, I would have had what I
needed if I were looking for _any_ select/poll based solution.
funny, btw. that for me personally one of the big plus-point of TM,
the whole array of protocolls, is by far less attractive. My approach
was rather "Ah, cool, they offer what plain good Python doesn't have;
a solid high-performance AIO core with usefull stuff on top".
It's probaly not the audience you targetted but I'd bet there are more
like myself looking at TM.

>  *PLEASE* do not switch to linux to use Twisted.  We have, like, a million
> developers who use Ubuntu.  Hence, we have very good support for linux.  We
> need more Twisted developers who use FreeBSD (and Windows and Solaris and
> AIX and even distros like Red Hat and SuSE).  Please, please stay around and
> help us with that.

No worry. I wouldn't switch to Linux even if it came with naked women along * g
Seriously, I'd rather do the whole stuff in C than switch away from BSD.

>  The problem is that FreeBSD people often show up, complain that Twisted has
> problems on FreeBSD, and then go away.  Either that, or they decide to give
> up FreeBSD and just use Linux on their servers, which is great for them, but
> doesn't help us at all.

I'll do neither. As long as I can use TM and get some help when needed
I 'll be around. On FreeBSD :)
I don't worry about the occasional hickup. I only worry about getting
into TM, about getting a good start and sth. done with it.

Again: It's just a very small thing but what I can offer right now is
a patchfile incl. the patches by ITS for the FreeBSD port. I tested it
both on 6.3 and 7.0 and it builds fine.

> (FreeBSD) ... so you
> have only to worry about kqueue issues (which therve and others have already
> done a ton of work on).

Would someone listen, please ?

Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
and it delivered nicely - around 300 connections/s with a payload of
around 2.5 KB delivered by a simple rpy. (with system load of ca.
0.75)

The problem is only, when it's daemonized. then it breaks (see my
earlier post for detailled output)


>  Well, let's move forward trying to make that happen.

Yes, Glyph ;)



From exarkun at divmod.com  Wed Apr 16 15:10:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 17:10:13 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>
Message-ID: <20080416211013.6859.839443112.divmod.quotient.30735@ohm>

On Wed, 16 Apr 2008 22:25:48 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
> [snip]
>
>> (FreeBSD) ... so you
>> have only to worry about kqueue issues (which therve and others have already
>> done a ton of work on).
>
>Would someone listen, please ?
>
>Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
>I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
>and it delivered nicely - around 300 connections/s with a payload of
>around 2.5 KB delivered by a simple rpy. (with system load of ca.
>0.75)
>
>The problem is only, when it's daemonized. then it breaks (see my
>earlier post for detailled output)
>

To clarify what I think is a miscommunication:

When a Twisted developers says something like "KQueue doesn't work" what
that means specifically is that:

    trial --reactor=kqueue twisted

results in some test failures.  It may indeed seem to work for your
application, and it may even *actually* work for your application, but
the way we know if it is working or not is whether it can pass the full
test suite.  We need this so we can judge whether changes are introducing
regressions or not.

Jean-Paul



From dr.pythoniac at googlemail.com  Wed Apr 16 16:17:50 2008
From: dr.pythoniac at googlemail.com (Dr aio)
Date: Thu, 17 Apr 2008 00:17:50 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416211013.6859.839443112.divmod.quotient.30735@ohm>
References: <2337a3d40804161325h2b2c1d0ao7e84ff3658bd284d@mail.gmail.com>
	<20080416211013.6859.839443112.divmod.quotient.30735@ohm>
Message-ID: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>

Oops, me newbie. Sorry for the noise * g

I find it very strange anyway, that the beast breaks as soon as it's
daemonized. Any idea, why ?

And where can  I learn more about trial ?

Thanks


On 4/16/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 16 Apr 2008 22:25:48 +0200, Dr aio <dr.pythoniac at googlemail.com>
> wrote:
>
> > [snip]
> >
> >
> > > (FreeBSD) ... so you
> > > have only to worry about kqueue issues (which therve and others have
> already
> > > done a ton of work on).
> > >
> >
> > Would someone listen, please ?
> >
> > Actually py-kqueue 1.4 IS WORKING on my FreeBSD.
> > I stressed it a little bit on my devel box, a P4, 1.8GHz, 768MB box
> > and it delivered nicely - around 300 connections/s with a payload of
> > around 2.5 KB delivered by a simple rpy. (with system load of ca.
> > 0.75)
> >
> > The problem is only, when it's daemonized. then it breaks (see my
> > earlier post for detailled output)
> >
> >
>
>  To clarify what I think is a miscommunication:
>
>  When a Twisted developers says something like "KQueue doesn't work" what
>  that means specifically is that:
>
>    trial --reactor=kqueue twisted
>
>  results in some test failures.  It may indeed seem to work for your
>  application, and it may even *actually* work for your application, but
>  the way we know if it is working or not is whether it can pass the full
>  test suite.  We need this so we can judge whether changes are introducing
>  regressions or not.
>
>  Jean-Paul
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Wed Apr 16 16:59:22 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 16 Apr 2008 18:59:22 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
Message-ID: <20080416225922.6859.973778423.divmod.quotient.30818@ohm>

On Thu, 17 Apr 2008 00:17:50 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>Oops, me newbie. Sorry for the noise * g

No problem.  I think this is a common misunderstanding. :)

>
>I find it very strange anyway, that the beast breaks as soon as it's
>daemonized. Any idea, why ?

Not really.  Maybe forking is having some unpleasant interaction with
the kqueue state?  This seems like a stretch though.  Oops, actually
maybe that's exactly it?  I only have an OS X machine handy at the
moment, but maybe this is significant:

  The kqueue() system call creates a new kernel event queue and returns
  a descriptor.  The queue is not inherited by a child created with
  fork(2).

>And where can  I learn more about trial ?

There's a wiki page with not much information on it:

  http://twistedmatrix.com/trac/wiki/TwistedTrial

And a howto that's more about testing than about trial:

  http://twistedmatrix.com/projects/core/documentation/howto/testing.html

Jean-Paul



From mailing_lists at evotex.ch  Thu Apr 17 00:49:22 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 08:49:22 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
Message-ID: <4806F2F2.8020203@evotex.ch>

glyph at divmod.com wrote:
>
> On 01:15 pm, dr.pythoniac at googlemail.com wrote:
>> Seeing there is doc. available, I digged through it. After all TM seems
>> worth the effort. From what I see, I love TM.
>
> Great!  The rest definitely doesn't sound like you love it though ... ;-)
>> Links are often broken, though. Often seemingly useful doc. is old, very
>> old. Even current doc. isn't up to date.
>
> Since the 8.0 release, we have had quite a few problems with links, 
> specifically the links from the core documentation to the API 
> documentation on the website.  We are working to fix this.  However, 
> if you spot broken links, please feel free to report them in the bug 
> tracker: http://twistedmatrix.com/trac/newticket
>
> Saying that there are "often" broken links is just about as pointless 
> as saying that you "often" find bugs.  Without specifics, this is not 
> useful information; the reason we have not fixed specific problems is 
> not because we believe there are no problems anywhere.
>> They talk about "resource trees", yet I don't find them in the doc. I 
>> find
>> putchild() but all examples and docs indicate, that you can do it only
>> within the root resource.
>
> You can do putChild to any resource, as long as you understand its 
> lifecycle.  A "resource tree" is simply a tree ( 
> http://en.wikipedia.org/wiki/Tree_structure ) of resources ( 
> http://twistedmatrix.com/documents/current/api/twisted.web.resource.IResource.html 
> ).
>
> Our documentation assumes, and will continue to assume, a certain 
> level of familiarity with basic computer-sciency jargon; if you feel 
> that a particular phrase is too obscure, feel free to submit a patch 
> elaborating on it.  However, the audience of the bulk of the Twisted 
> documentation is fluent Python programmers.  If you want to write 
> something for folks who are new to Python or programming in general, a 
> separate set of documentation would be better than trying to 
> re-explain everything in-line.  For example, explaining that we are 
> referring to a directed graph of IResource providers would be fine, 
> but adding an explanation of graphs or how python references or 
> dictionaries work would not.
>> OK, a little later, I
>> have my first web server running an my first rpy works, spitting out
>> "test". Wow.
>
> Sounds like the docs are doing their job, then :).
>> I'm wondering, why of all things "rpy" ? python won't generate sth. like
>> "rpyc" for that, which translates in lost speed, I assume. No 
>> explanation.
>
> "rpy" to mark the file as a specific kind of python file that needs to 
> be run within the web server to produce a resource.  Implemented in 
> this manner, python would not generate a "pyc" file even if it were 
> called a ".py"; it is not a module that you import.
>
> As far as "lost speed" is concerned, it's not entirely clear that 
> that's true, because the times when Python would have to check for the 
> .rpyc are entirely different than the way that it does when you are 
> importing modules.  Twisted could emit .rpycs as an optimization if 
> you did a benchmark, discovered it did indeed matter, and submitted a 
> patch.  This is, however, hardly the highest priority for twisted.web 
> developers right now :).
>> I'm on FreeBSD. Of course, I want to use kqueue. Now, another "funny"
>> journey begins ...
>
>> Intense googleing, and I mean "intense". Reading through years of this
>> mailing list. No positive result.
>
> Fair enough.  The kqueue reactor doesn't work and there's no 
> documentation saying that it doesn't, except a failing buildbot: 
> http://buildbot.twistedmatrix.com/builders/freebsd-py2.4-kq - also, 
> Twisted's support for platforms is not clearly explained.
>> I have the clear impression that twisted is something in between a 
>> toy and a
>> brilliant product. It's hackers, however, leave much to be desired in 
>> terms
>> of usefulness. As it is, it's a great and promising hobby but not a 
>> useful
>> product.
>
> Many, many people (including me!) disagree.
>
> I understand that you're frustrated, but this does nothing but serve 
> to weaken your position.  You have some valid criticism, but when I 
> read "twisted is not useful", I think that you are simply mistaken.
>> Sorry, but doc strings don't replcae a halfway decent documentation 
>> and a
>> reasonable tutorial, considering the highly complex matter.
>
> First google hit for "twisted tutorial":
>
> http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html 
>
>
> Not perfect, perhaps, but I think it could definitely be described as 
> a "reasonable tutorial" to core Twisted concepts.
>> Sorry, but documentation that is often enough outdated and sometimes 
>> offers
>> broken links is next to useless.
>
> If you were truly sorry, you would be contributing patches which fix 
> the broken links and updates the documentation to be more recent.
>> Kqueue seems to be vital to an event driven approach like TM, yet 
>> there are
>> multiple versions of pykqueue floating
>> around, none of them properly working (and I didn't fumble around. I
>> plain simply used the FreeBSD port), some of
>> them with some mor and some with some less "annotations" (I refuse to
>> call that doc.)
>
> Kqueue is most definitely _not_ "vital" to something like Twisted.  It 
> is an optimization of a very specific part of a Twisted application on 
> a very specific platform.  *Most* realistic Twisted applications will 
> be bottlenecked on application code long before something like kqueue 
> (or epoll) will help.  Working from the amount of support from the 
> community, most Twisted applications also don't run on FreeBSD.
>
> I apologize if this response seems too harsh, but I am annoyed by 
> people seeing a pet feature (variously: good ideas like HTTP/1.1, 
> kqueue, and Cocoa GUI support, bad ideas like "block on a Deferred", 
> and core API thread safety)  which isn't too important in Twisted and 
> then claiming it's "vital" to the project's success.  The project is 
> succeeding, so clearly it is not vital: QED.  It may be important to 
> you: that's great. Do some work to support it.  Once it's supported, 
> buildbot will listen to its tests and it won't break again.
>
> For those projects which really do benefit from high multiplexing 
> volume with something like kqueue, Twisted offers an extremely 
> abstract API where the multiplexing mechanism is independent of the 
> application code. You can, at any moment, replace the reactor and your 
> application will keep working.  So even if kqueue support does not 
> exist at all, you can add it with Twisted much more easily than if you 
> wrote your own select() loop.
>
> You might say, in fact, that Twisted is vital to a platform-specific 
> tool like Kqueue, because otherwise almost nothing will use it.
>> - How about getting 1 version of pykqueue properly running and into TM ?
>
> Yes, how about that?  Maybe you could contribute to one of the 
> numerous kqueue tickets already in the tracker.
>> - How about freezing some TM version (like 8.0) and updating/matching 
>> docs?
>> (Of course, experiments are funny and intriguing, but quite some of 
>> us out
>> here need sth. stable for everydays work)
>
> Twisted is very, very stable.  The next version (8.1) will break only 
> code that is using APIs which have been outdated for literally 
> _years_. There is no need to "freeze" anything, just update the 
> documentation to what is most recent and do a new release including 
> that documentation.
>> - How about writing some complete docs and tutorials? Sth. along the 
>> lines
>> of "My first web server wit TM" (instead all those - sometimes 
>> seeming to
>> contradict each other - snippets)
>
> Yes, how about that?  You can write documentation on your own site, 
> and we will link to it.  Or, you could contribute to the core 
> documentation.
>
> The bottom line: complaining like this is not very useful.  If you 
> have time to help, then contributing patches and responding to reviews 
> in the tracker is helpful.  If you don't have the time to actually do 
> any work, then describing specific problems (in as much detail as 
> possible!) is useful.  If you don't have time even for _that_, then 
> cash donations to the foundation are useful.
>
> If you are interested in getting stuff in Twisted fixed, though, 
> writing rambling complaints serves to do nothing but reduce our 
> developers' already scarce motivation, make us think our work is not 
> appreciated, and encourage us to spend time writing rambling responses 
> like this one rather than fix the problems you're talking about.
>
> (Which is not to say this has been a _complete_ waste of time.  If one 
> out of every fifty people I write a message like this to understands 
> what I'm saying and becomes a long-time contributor, then it's 
> probably worth it.)
>
Hello,

there are links that are always broken, like for example : 
http://twistedmatrix.com/projects/core/documentation/howto/process.html, 
if you look at this line :

"If you only need the final exit code (like 
|commands.getstatusoutput(cmd)[0]|), the 
|twisted.internet.utils.getProcessValue 
<http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue>| 
function is useful."

The link being : 
http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue

All those types of links in the howtos/tutorials are bad. Should I write 
a bugreport? If so, would an explanation like the one above suffice (I 
can't find all the links in the tutorials that are bad)?

Gabriel



From mailing_lists at evotex.ch  Thu Apr 17 01:25:24 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 09:25:24 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
Message-ID: <4806FB64.7080609@evotex.ch>

Hello all,

I was wondering if there is a simple example or a tutorial for the 
Producer-Consumer stuff in twisted?

Thanks,
Gabriel



From nitro at dr-code.org  Thu Apr 17 02:41:01 2008
From: nitro at dr-code.org (Nitro)
Date: Thu, 17 Apr 2008 10:41:01 +0200
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <4806F2F2.8020203@evotex.ch>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch>
Message-ID: <op.t9qyenctz3pzfc@nitrogenycs2>

Am 17.04.2008, 08:49 Uhr, schrieb Gabriel Rossetti  
<mailing_lists at evotex.ch>:


> there are links that are always broken, like for example :  
> http://twistedmatrix.com/projects/core/documentation/howto/process.html,  
> if you look at this line :
>
> "If you only need the final exit code (like  
> |commands.getstatusoutput(cmd)[0]|), the  
> |twisted.internet.utils.getProcessValue  
> <http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue>|  
> function is useful."
>
> The link being :  
> http://twistedmatrix.com/projects/core/documentation/howto/twisted.internet.utils.getProcessValue
>
> All those types of links in the howtos/tutorials are bad. Should I write  
> a bugreport? If so, would an explanation like the one above suffice (I  
> can't find all the links in the tutorials that are bad)?

Couldn't "find broken links" be automated in some way? Whenever the docs  
are build there would be a simple python script extracting all hrefs out  
of the generated html document then. Then it would try to access each one  
of them and write the failed ones inluding the document they appeared in  
into a log file or something?

-Matthias



From matt at madebykite.com  Thu Apr 17 02:58:55 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Thu, 17 Apr 2008 09:58:55 +0100
Subject: [Twisted-Python] My memory leak, diagnosed
Message-ID: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>

Hi All,

I just wanted to put your minds at rest regarding what I though might  
have been a problem with the epoll reactor. As always, inferring  
anything from a production machine is not desirable and it seems that  
my assumptions about epoll were based on coincidence.

I have since found the leak:

<http://twistedmatrix.com/trac/ticket/3188>

Unfortunately, my workaround involved rewriting my proxy code without  
using twistd.web. I'll happily contribute a patch back to the  
t.w.proxy code in time but for the moment it doesn't support  
persistent connections (I wanted to keep it simple). I also feel that  
t.w.proxy would be better served by making use of a reciprocal  
IProducer / IConsumer arrangement between the ProxyServer protocol  
and the ProxyClient protocol which is something that my workaround  
does not implement.

Thanks again for Twisted,


Matt	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244




From sipickles at hotmail.com  Thu Apr 17 04:01:48 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 17 Apr 2008 11:01:48 +0100
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
Message-ID: <BAY114-DAV13A40BEB957D24D8859C5FBEE50@phx.gbl>



Dr aio wrote:
>
> - How about writing some complete docs and tutorials? Sth. along the 
> lines of "My first web server wit TM" (instead all those - sometimes 
> seeming to contradict each other - snippets)
>
> I'm still fascinated by TM and still willingto invest time, efforts 
> and 
> brains. But I'd love to have some properly working base and docs that expßlain rather than confuse.
>

Welcome Aio,

I am new to the Twisted community and had a similar experience to you 
when I started, a kind of excited frustration? :)

I started a very constructive and informative thread on this forum in 
which Daniel Burr and Others helped a great deal.

http://twistedmatrix.com/pipermail/twisted-python/2008-January/016640.html

I _really_ want to write that newbie guide, just an alternative intro to 
twisted. Now my twisted server is working, I might have a go!

Keep the faith - we'll get there!

Best regards



Si

http://www.squirtual-reality.com





From sipickles at hotmail.com  Thu Apr 17 04:06:29 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 17 Apr 2008 11:06:29 +0100
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
	<20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
Message-ID: <BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>

glyph at divmod.com wrote:
>
> If you want a product based on Twisted, or training based on Twisted, 
> my company (http://divmod.org/) might be able to help you.
Thats a very good looking website!

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From paulalexwilson at gmail.com  Thu Apr 17 05:04:13 2008
From: paulalexwilson at gmail.com (Paul Wilson)
Date: Thu, 17 Apr 2008 12:04:13 +0100
Subject: [Twisted-Python] Twisted Advice
Message-ID: <3c3d11cf0804170404k420a42ebr4ca70515f84ed322@mail.gmail.com>

>  >
>  >I would like to provide an environment where developers can write call
>  >servicing applications with no knowledge of the network. I had rested
>  >on a coroutine approach, whereby a developer could write something
>  >like this:
>  >
>  >   response, events = (yield getKeyPress(SomePromptAnnouncement))
>  >
>
>  Just to clarify - this looks like a generator rather than a coroutine.
>
>  >With the response, the developer can do an undefined number of things,
>  >taking an undefined amount of time. During this time, management
>  >events can arrive on a separate port, to which the developer gets
>  >knowledge of through the yield statement.
>  >
>  >On the other side of this generator is a scheduler which takes
>  >instructions such as "getKeyPress" and passes it through twisted to
>  >the remote client, such that it can play the announcement and get a
>  >keypress. The scheduler gets the response and sends to back to the
>  >generator, along with any events that have arrived on this separate
>  >port.
>  >
>  >When a call/connection arrives, the client will send an opening
>  >line(s) to which I was specify the correct LineRecieved method. This
>  >will trigger some scheduler code defined elsewhere via a deferred,
>  >which will prompt the developer's code for some instructions, such as
>  >"PlayPrompt". Am I correct in thinking that while a developer's code
>  >is executing, all other connections are paused, and that the twisted
>  >server will not accept new connections until it returns?
>
>  Yes, that's correct.  Twisted is single-threaded - it invokes event
>  handlers in the same thread it uses to monitor event sources.  As long
>  as an event handler is running, event sources are not monitored for
>  events and no other handlers will be invoked.
>
>  >
>  >My original assumption was that Twisted would spawn a new thread
>  >within which the scheduler would be set to run to manage the
>  >communication for the duration of the customer call/interaction.
>  >However, the approach taken by twisted is that if the developer's code
>  >got itself in a muddle or infinite loop or took a very long time
>  >accessing a database, the rest of the application would just be
>  >frozen.
>
>  Generally speaking, Twisted will only create a thread when application
>  code asks it to.
>
>  >
>  >I wrote a quick test app that defers to a function that sleeps then
>  >returns its response line. During the 20 seconds that the test server
>  >took to return a line, the server would not accept any other requests
>  >until the sleep function ended.
>
>  The "defers to a function" language is a bit confusing.  However, your
>  conclusion sounds right.  If you block the reactor thread, nothing else
>  will happen.
>
>  >Clearly, I must be missing something; I have designed my application
>  >upon the wrong axis. If so, I have some misunderstanding as to how to
>  >properly structure an application like this upon Twisted. Or, twisted
>  >is a framework whereby the response to a network event is expect to
>  >arrive immediately.
>
>  It's not necessary for responses to arrive immediately.  Responses just
>  need to be obtained without blocking.  For example, if getting a response
>  involves talking to someone else over the network, then Twisted has some
>  networking APIs that don't block. ;)  Likewise, twisted.enterprise lets
>  you talk to a rdbm (it actually uses threads, but it mostly doesn't show
>  that to you).

>  >I have seen "deferToThread" mentioned but I cannot find enough
>  >documentation to decide whether it's what I need or not. Or perhaps
>  >callInThread() is what I need?
>
>  One of these may be appropriate.  You could decide that in your application
>  framework, user code is always run in a non-reactor thread.  This is easily
>  accomplished: your event handler just needs to invoke user code in a thread
>  instead of directly.  deferToThread lets you run a function in a thread and
>  gives you a Deferred which will be called back with the return value of the
>  function when it returns or which will errback if it raises an exception.
>  callInThread is lower level, not exposing the result of the function.

Ahh. Okay; thanks for this. deferToThread looks like a good option
here and seems to fit what I'm looking for. From experience, can you
point me towards some good code that uses deferToThread?

>  >
>  >Any suggestions about this would be very much appreciated. Even
>  >better, if anybody knows of good documentation/tutorials they can
>  >point me to, that would be appreciated also.
>
>  It sounds like you're looking for deferToThread or one of its friends.
>  Note however that just throwing user code into a thread doesn't mean
>  programmers can be oblivious to their environment.  It simply trades the
>  need to pay attention to when you block and for how long for the more
>  complex task of paying attention to thread safety.  If each task is
>  isolated from all others, this may be a good trade-off to make, but if
>  there's shared state it may not be.

Thanks for your reply; there are some subtle and difficult questions
to answer here. I'd like each instance of the developer's code to be
isolated with it's own state using threading.local, but ultimately
I'll use deferToThread to set it all up.

I assume that I can use some threadsafe implementation (if the GIL
doesn't enforce that anyway) of a dictionary to store the global
information between each call handling thread.

Thanks again for your time.

>  Jean-Paul



From exarkun at divmod.com  Thu Apr 17 05:19:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Apr 2008 07:19:38 -0400
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <4806F2F2.8020203@evotex.ch>
Message-ID: <20080417111938.6859.345440497.divmod.quotient.31110@ohm>

On Thu, 17 Apr 2008 08:49:22 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>All those types of links in the howtos/tutorials are bad. Should I write a 
>bugreport? If so, would an explanation like the one above suffice (I can't 
>find all the links in the tutorials that are bad)?

There's a ticket for this - http://twistedmatrix.com/trac/ticket/3177

Thanks, though.

Someone will probably be fixing this at the sprint on Sunday.

Jean-Paul



From exarkun at divmod.com  Thu Apr 17 05:27:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Apr 2008 07:27:40 -0400
Subject: [Twisted-Python] Twisted Advice
In-Reply-To: <3c3d11cf0804170404k420a42ebr4ca70515f84ed322@mail.gmail.com>
Message-ID: <20080417112740.6859.987108239.divmod.quotient.31113@ohm>

On Thu, 17 Apr 2008 12:04:13 +0100, Paul Wilson <paulalexwilson at gmail.com> wrote:
> [snip]
>
>Ahh. Okay; thanks for this. deferToThread looks like a good option
>here and seems to fit what I'm looking for. From experience, can you
>point me towards some good code that uses deferToThread?

Here's some:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.0.1/twisted/internet/base.py#L195

It's somewhat complicated by the addition of timeout support on top of an
API which doesn't support timeouts, but it's one of only two uses of the
API in Twisted and I think the other is even more confusing. :)

Jean-Paul




From dr.pythoniac at googlemail.com  Thu Apr 17 06:10:45 2008
From: dr.pythoniac at googlemail.com (Dr Pythoniac)
Date: Thu, 17 Apr 2008 05:10:45 -0700 (PDT)
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <20080416225922.6859.973778423.divmod.quotient.30818@ohm>
References: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
	<20080416225922.6859.973778423.divmod.quotient.30818@ohm>
Message-ID: <20080417141041.0607dca9.dr.pythoniac@googlemail.com>

Hi Jean-Paul

Smarthead :)

You were right. I quickly ripped out the forking code in daemonize in _twistd_unix - et voila: It runs nicely.

Now that's one of the points where it'd be great to know more about the inner workings of TM. If i did, I probably could just open them sockets (fire up the whole event engine) _after_ forking, i.e. in the child process.

As it is, though, (me newbie, gazing unsmartly at TM *g) I'd rather not touch it.

Thanks for having your Synapses fire ;)



Jean-Paul Calderone <exarkun at divmod.com> wrote:

> >I find it very strange anyway, that the beast breaks as soon as it's
> >daemonized. Any idea, why ?
> 
> Not really.  Maybe forking is having some unpleasant interaction with
> the kqueue state?  This seems like a stretch though.  Oops, actually
> maybe that's exactly it?  I only have an OS X machine handy at the
> moment, but maybe this is significant:
> 
>   The kqueue() system call creates a new kernel event queue and returns
>   a descriptor.  The queue is not inherited by a child created with
>   fork(2).
> 



From drew.smathers at gmail.com  Thu Apr 17 07:16:23 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Apr 2008 09:16:23 -0400
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
In-Reply-To: <4806FB64.7080609@evotex.ch>
References: <4806FB64.7080609@evotex.ch>
Message-ID: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>

On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
<mailing_lists at evotex.ch> wrote:
> Hello all,
>
>  I was wondering if there is a simple example or a tutorial for the
> Producer-Consumer stuff in twisted?
>

The only document I'm aware of:
http://twistedmatrix.com/projects/core/documentation/howto/producers.html

The above explains the interfaces and how to use them, but lacks any examples.

Btw ... the last link on the page is broken
(http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From glyph at divmod.com  Thu Apr 17 08:13:06 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:13:06 -0000
Subject: [Twisted-Python] My memory leak, diagnosed
In-Reply-To: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>
References: <76FBA9D6-6663-41C1-9CBF-65E24520C4B3@madebykite.com>
Message-ID: <20080417141306.21558.512801958.divmod.xquotient.11038@joule.divmod.com>


On 08:58 am, matt at madebykite.com wrote:
>I just wanted to put your minds at rest regarding what I though might 
>have been a problem with the epoll reactor. As always, inferring 
>anything from a production machine is not desirable and it seems that 
>my assumptions about epoll were based on coincidence.

Thanks for the thorough diagnosis and detailed ticket!  And I'm glad to 
hear the issue is not with epoll, I'd like our users to be able to rest 
easy when upgrading to a "good" reactor :).  While twisted.web.proxy 
should really work well, I'm a bit less concerned to hear that it might 
have some issues.  Especially if you're planning on fixing them.

Looking at the ticket, though, it appears that web.proxy might be okay 
too, and the memory growth is just the process reaching its natural 
equilibrium, or the source is somewhere else?
>Unfortunately, my workaround involved rewriting my proxy code without 
>using twistd.web. I'll happily contribute a patch back to the 
>t.w.proxy code in time but for the moment it doesn't support 
>persistent connections (I wanted to keep it simple). I also feel that 
>t.w.proxy would be better served by making use of a reciprocal 
>IProducer / IConsumer arrangement between the ProxyServer protocol  and 
>the ProxyClient protocol which is something that my workaround  does 
>not implement.

Not implementing IProducer/IConsumer will, ironically, lead to more 
memory consumption in the long term, since the producer will overload 
the consumer's buffer if the consumer's not fast enough.



From glyph at divmod.com  Thu Apr 17 08:15:14 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:15:14 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>
References: <2337a3d40804160842m24b7b2b6wa5a5c536a35a8899@mail.gmail.com>
	<20080416160534.21558.441975808.divmod.xquotient.10897@joule.divmod.com>
	<BAY114-DAV70D3F40F2198A17AA766ABEE50@phx.gbl>
Message-ID: <20080417141514.21558.96579278.divmod.xquotient.11039@joule.divmod.com>




On 10:06 am, sipickles at hotmail.com wrote:
>glyph at divmod.com wrote:
>>
>>If you want a product based on Twisted, or training based on Twisted, 
>>my company (http://divmod.org/) might be able to help you.
>Thats a very good looking website!

Why, thank you!



From glyph at divmod.com  Thu Apr 17 08:17:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:17:08 -0000
Subject: [Twisted-Python] Is there a simple Producer/Consumer example or
	tutorial?
In-Reply-To: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
References: <4806FB64.7080609@evotex.ch>
	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
Message-ID: <20080417141708.21558.153822769.divmod.xquotient.11041@joule.divmod.com>


On 01:16 pm, drew.smathers at gmail.com wrote:
>On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
><mailing_lists at evotex.ch> wrote:
>>Hello all,
>>
>>  I was wondering if there is a simple example or a tutorial for the
>>Producer-Consumer stuff in twisted?
>
>The only document I'm aware of:
>http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>
>The above explains the interfaces and how to use them, but lacks any 
>examples.
>
>Btw ... the last link on the page is broken
>(http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).

http://twistedmatrix.com/trac/ticket/3177 strikes again...



From glyph at divmod.com  Thu Apr 17 08:19:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 17 Apr 2008 14:19:15 -0000
Subject: [Twisted-Python] documentation / kqueue / feedback
In-Reply-To: <op.t9qyenctz3pzfc@nitrogenycs2>
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch> <op.t9qyenctz3pzfc@nitrogenycs2>
Message-ID: <20080417141915.21558.976627358.divmod.xquotient.11045@joule.divmod.com>


On 08:41 am, nitro at dr-code.org wrote:
>Couldn't "find broken links" be automated in some way? Whenever the 
>docs are build there would be a simple python script extracting all 
>hrefs out  of the generated html document then. Then it would try to 
>access each one  of them and write the failed ones inluding the 
>document they appeared in  into a log file or something?

There wouldn't be much of a point until 
http://twistedmatrix.com/trac/ticket/3177 is fixed (this weekend, the 
sprint, bug radix), but if you were interested in addressing this 
problem, the best idea would probably be to look at an existing bit of 
link-checker software (there's a ton of them) and running it on the 
website and posting its results.  Writing new code in Twisted to do 
something as simple as checking hyperlinks is almost certainly a waste 
of time.

Thank you for volunteering to investigate and address this, though, of 
course ;-).



From Marcin.Kasperski at softax.com.pl  Thu Apr 17 08:22:29 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 17 Apr 2008 16:22:29 +0200
Subject: [Twisted-Python] Re: documentation / kqueue / feedback
References: <2337a3d40804160615s4ada64eeo8d1f55835f783890@mail.gmail.com>
	<20080416154949.21558.144665518.divmod.xquotient.10870@joule.divmod.com>
	<4806F2F2.8020203@evotex.ch> <op.t9qyenctz3pzfc@nitrogenycs2>
Message-ID: <87zlrsbly2.fsf@softax.com.pl>

> Couldn't "find broken links" be automated in some way?

$ sudo apt-get install linkchecker  # or yum, or whatever

$ linkchecker --output=text --file-output-html \
  --recursion-level=20 \
  --ignore-url='^mailto:' --ignore-url='^ftp:' --ignore-url='^javascript:' \
  --anchors \
  http://twistedmatrix.com

... bzzzzz ....

$ firefox linkchecker-out.html

  (or just read console output)


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | We want to know as early as possible whether
| http://mekk.waw.pl | the project will succeed. Thus we attack the
|                    |        high-risk areas first. (Martin)
----------------------------------------------------------------------




From mailing_lists at evotex.ch  Thu Apr 17 08:22:20 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 16:22:20 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example
	or	tutorial?
In-Reply-To: <368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
References: <4806FB64.7080609@evotex.ch>
	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
Message-ID: <48075D1C.6000304@evotex.ch>

Drew Smathers wrote:
> On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
> <mailing_lists at evotex.ch> wrote:
>   
>> Hello all,
>>
>>  I was wondering if there is a simple example or a tutorial for the
>> Producer-Consumer stuff in twisted?
>>
>>     
>
> The only document I'm aware of:
> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>
> The above explains the interfaces and how to use them, but lacks any examples.
>
> Btw ... the last link on the page is broken
> (http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender).
>
>
>   
Thanks,

I have a producer sort of working thanks to this :

http://itamarst.org/writings/OSCON03/twisted_internet-0.html

and this post :

http://twistedmatrix.com/pipermail/twisted-python/2007-March/014943.html

I have a question though, I was looking at the way all this works by 
using a debugger, and I noticed that in twisted.internet.abstract.py in 
registerProducer() there is the following :

if not streaming:
    producer.resumeProducing()

Why is this done only for the pull producer? Shouldn't it also be called 
for the push producer since to have the data sent one has to call either 
self.transport.write() or resumeProducing() anyways? If you look at :

http://itamarst.org/writings/OSCON03/twisted_internet-112.html

it does :

transport.registerProducer(self, 1)
        self.produce()

thus starting the writing process and in the pull producer :

http://itamarst.org/writings/OSCON03/twisted_internet-111.html

it doesn't need to start the writing process explicitly since it's 
started when the producer is registered.

Thank you,
Gabriel







From mailing_lists at evotex.ch  Thu Apr 17 08:33:47 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 17 Apr 2008 16:33:47 +0200
Subject: [Twisted-Python] Is there a simple Producer/Consumer example
	or	tutorial?
In-Reply-To: <48075D1C.6000304@evotex.ch>
References: <4806FB64.7080609@evotex.ch>	<368574aa0804170616p7bb107b2gd7e0ac8ada8adc54@mail.gmail.com>
	<48075D1C.6000304@evotex.ch>
Message-ID: <48075FCB.80703@evotex.ch>

Gabriel Rossetti wrote:
> Drew Smathers wrote:
>> On Thu, Apr 17, 2008 at 3:25 AM, Gabriel Rossetti
>> <mailing_lists at evotex.ch> wrote:
>>  
>>> Hello all,
>>>
>>>  I was wondering if there is a simple example or a tutorial for the
>>> Producer-Consumer stuff in twisted?
>>>
>>>     
>>
>> The only document I'm aware of:
>> http://twistedmatrix.com/projects/core/documentation/howto/producers.html 
>>
>>
>> The above explains the interfaces and how to use them, but lacks any 
>> examples.
>>
>> Btw ... the last link on the page is broken
>> (http://twistedmatrix.com/projects/core/documentation/howto/twisted.protocols.basic.FileSender). 
>>
>>
>>
>>   
> Thanks,
>
> I have a producer sort of working thanks to this :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-0.html
>
> and this post :
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-March/014943.html
>
> I have a question though, I was looking at the way all this works by 
> using a debugger, and I noticed that in twisted.internet.abstract.py 
> in registerProducer() there is the following :
>
> if not streaming:
>    producer.resumeProducing()
>
> Why is this done only for the pull producer? Shouldn't it also be 
> called for the push producer since to have the data sent one has to 
> call either self.transport.write() or resumeProducing() anyways? If 
> you look at :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>
> it does :
>
> transport.registerProducer(self, 1)
>        self.produce()
>
> thus starting the writing process and in the pull producer :
>
> http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>
> it doesn't need to start the writing process explicitly since it's 
> started when the producer is registered.
>
> Thank you,
> Gabriel
>
>
>
Oh, and I forgot to ask, since from what I see in the code the only 
difference with a push and pull producer is that the push producer is 
paused if the data being written/sent is very large (to let the reactor 
breath and process other things), if it isn't larger than the buffer it 
behaves like a pull producer, correct? If so, then why have both? Am I 
mixed up again?

Gabriel



From mg at daimi.au.dk  Thu Apr 17 14:54:30 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Thu, 17 Apr 2008 22:54:30 +0200
Subject: [Twisted-Python] Re: documentation / kqueue / feedback
References: <2337a3d40804161517m2c87801ap6533573ed1557a66@mail.gmail.com>
	<20080416225922.6859.973778423.divmod.quotient.30818@ohm>
Message-ID: <87prso2oe1.fsf@hbox.dyndns.org>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> On Thu, 17 Apr 2008 00:17:50 +0200, Dr aio <dr.pythoniac at googlemail.com> wrote:
>>And where can  I learn more about trial ?
>
> There's a wiki page with not much information on it:
>
>  http://twistedmatrix.com/trac/wiki/TwistedTrial
>
> And a howto that's more about testing than about trial:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/testing.html

I learned a lot about Trial from this tutorial:

  http://twistedmatrix.com/trac/browser/branches/trial-tutorial-2443/doc/core/howto/trial.xhtml?format=raw

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multi-Party Computation) to Python. See: http://viff.dk/.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 188 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080417/f45ac8b6/attachment.sig>

From jml at mumak.net  Thu Apr 17 23:06:10 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 18 Apr 2008 15:06:10 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
Message-ID: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>

Hello everyone,

Now that the release is out[1], I'd like to start work on fixing #1216
-- official deprecation policy.

There's one proposed policy at
http://twistedmatrix.com/trac/wiki/CompatibilityPolicy, there's also
one mentioned in the ticket itself: deprecate in release N, remove in
release N+1. Glyph has at one point expressed a desire for time-based
deprecation.[2]

I think these are all the questions we need to answer:
- Is it time-based or release-based?
- How long for?
- Do we grade deprecations? How?
- Which code is subject to this policy?

CompatibilityPolicy suggests release-based deprecation that is graded
over 4 releases: release N PendingDeprecationWarning, N+1
DeprecationWarning, N+2 DeprecationError, N+3 remove the
functionality.

Ticket #1216 suggests a release-based deprecation policy that is not
graded and over 1 release: release N, add DeprecationWarning, release
N+1, remove the functionality.

Important factors to bear in mind:
- Maintaining deprecated APIs brings a cost to developers when they
maintain code.
- Removing APIs brings a cost to users when they choose to upgrade.
- We will probably always be changing APIs and making mistakes when we
change them.


Now, here's what I think.

* Release-based, not time-based.

Releases are easy to track, dates are less so. This is as true for
Twisted programmers as it is for sysadmins & other Twisted users. I
think that whatever problems are solved by time-based deprecation are
better solved by regular releases.

Our releases should, of course, be time-based. But that's another discussion.

* Two release deprecation length.

That is: release N, DeprecationWarning; release N+1,
DeprecationWarning; release N+2, remove the functionality.

This is enough to allow users to upgrade their version of Twisted
incrementally. Trial has been doing one release for quite a while now,
and I can't recall any complaints about breaking compatibility in
released code.

Micro-releases don't count.

* No grading

I think the DeprecationWarning vs PendingDeprecationWarning vs
DeprecationError is too much hassle. Just say "next release" or "in
two releases time".

* All "public" code and command-line tools should be covered. Things
marked as deprecated at the time of the 8.0 release should be
grandfathered so as to be safe for removal.

Anything else will get too confusing. The removal of the API stability
markers agrees with this. Everything is public unless it starts with
one underscore.[3]

Most importantly, we should have a policy, we should all agree and as
much of the policy as possible should be implemented in Python. This
bug has been open for years now, and it is frustrating for the policy
to change under one's feet or to disagree with other developers on
something so fundamental. "Explicit is better than implicit".

I'm sending this now because the 8.0 release is settling down and we
have a sprint coming up where it might be easier to resolve this
quickly.

jml

[1] I'm so happy.
[2] http://twistedmatrix.com/trac/ticket/2352
[3] This hurts. t.trial.util doesn't begin with an underscore.



From cwellington at ccg.murdoch.edu.au  Fri Apr 18 00:35:50 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 06:35:50 +0000
Subject: [Twisted-Python] Non returning deferred result.
Message-ID: <1208500550.4347.20.camel@wolfwood>

Hey everyone,

Sorry about the subject line, its a difficult problem to sum up in a
single line subject. Give me a little time to explain.

I'm using twisted.web2. I have a generic webservice over http. It
receives a file via standard POST http upload. It saves this to disk
using non blocking stream setup as outlines in web2.static.FileServer.

Now I don't immediately return a response, because another thread then
processes this file and builds an output file. So I return a deferred
from my render() function. When the output file is finished building,
the deferred callback is triggered with the http.Response() object and
the response is finally returned to the waiting http connection.

This DOES work except for a little strange behavoir. When the deferred
callback is triggered, the client doesn't see any response, the
connection just stays open. Then if I connect to the webservices from
anywhere, even a bad URL, I get my response suddenly back.

It's as if the callback is not triggered until some TCP activity cause
the main reactor to pump the pending requests or something. Is there
anyway to get this deferred callback to be recognised and processed
immediately? I could do a kind of hack, where the deferred callback is
called, and then a quick connection is made to the webservice to "pump"
the message through, but it doesn't seem very 'right' to me.

Heres some summary of the approach incase the devil is in the details...

My Resource class:
==================
class UploadFile(resource.PostableResource):
	# 1 gig is max file upload size
	maxSize=1 * 1024 * 1024 * 1024
	
	def render(self, ctx):
		"""Create the job for this upload and return the relevent deferred"""
		request = iweb.IRequest(ctx)
		
		job=Job()
		deferred = job.SubmitInput(request.files)				
		
		return deferred
		

My deferred callback:
=====================
deferred.callback( http.Response(responsecode.OK,
				{'content-type': http_headers.MimeType('text', 'html')},
				"Success!" ) )

My TopLevel:
============
class Toplevel(resource.PostableResource):
	addSlash = True
	def render(self, ctx):
		return http.Response(responsecode.OK,
				{'content-type':
						http_headers.MimeType('text', 'html')},
						"""
<html>
    <form action="http://localhost:8080/uploadfile"
            enctype="multipart/form-data"
            method="post">
        filename: <input type="file" name="filename">
		filename2: <input type="file" name="filename2">
        <input type="submit" value="submit">
    </form>
</html>
""")
	child_upload = UploadFile(jobqueue)


My server startup:
==================
# Create the resource we will be serving
test = Toplevel()

# Setup default common access logging
res = log.LogWrapperResource(test)
log.DefaultCommonAccessLoggingObserver().start()

# Create the site and application objects
site = server.Site(res)
application = service.Application("demo")

# Serve it via standard HTTP on port 8080
s = strports.service('tcp:8080', channel.HTTPFactory(site))
s.setServiceParent(application)




Im running the application as:

twistd -noy server.py



Twisted v8.0.1+, actually, the lastest SVN head.

Any one with more knowledge of twisted's internals have any ideas on
what is happening? Does anyone have any good ideas on how to make the
deferred callback trigger an immediate response (without opening a new
TCP connection to kick it into gear)?


Thanks

Regards
Crispin Wellington
<cwellington at ccg.murdoch.edu.au>






From cwellington at ccg.murdoch.edu.au  Fri Apr 18 00:48:20 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 06:48:20 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208500550.4347.20.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
Message-ID: <1208501300.4347.24.camel@wolfwood>

Just a quick update. Doing a "reactor.iterate()" after the callback
fixed the behavoir. ie.

--------
deferred.callback( http.Response(responsecode.OK,
				{'content-type': http_headers.MimeType('text', 'html')},
				"Success!" ) )
reactor.iterate()
--------

so my new question is, is this the best way to do this? Is there a
better way? Also is reactor.iterate() threadsafe? Are there potential
problems callinf reactor.iterate() from a thread spawned off the running
reactor thread?

Kind Regards

Crispin Wellington
<cwellington at ccg.murdoch.edu.au>


On Fri, 2008-04-18 at 06:35 +0000, Crispin Wellington wrote:
> Hey everyone,
> 
> Sorry about the subject line, its a difficult problem to sum up in a
> single line subject. Give me a little time to explain.
> 
> I'm using twisted.web2. I have a generic webservice over http. It
> receives a file via standard POST http upload. It saves this to disk
> using non blocking stream setup as outlines in web2.static.FileServer.
> 
> Now I don't immediately return a response, because another thread then
> processes this file and builds an output file. So I return a deferred
> from my render() function. When the output file is finished building,
> the deferred callback is triggered with the http.Response() object and
> the response is finally returned to the waiting http connection.
> 
> This DOES work except for a little strange behavoir. When the deferred
> callback is triggered, the client doesn't see any response, the
> connection just stays open. Then if I connect to the webservices from
> anywhere, even a bad URL, I get my response suddenly back.
> 
> It's as if the callback is not triggered until some TCP activity cause
> the main reactor to pump the pending requests or something. Is there
> anyway to get this deferred callback to be recognised and processed
> immediately? I could do a kind of hack, where the deferred callback is
> called, and then a quick connection is made to the webservice to "pump"
> the message through, but it doesn't seem very 'right' to me.
> 
> Heres some summary of the approach incase the devil is in the details...
> 
> My Resource class:
> ==================
> class UploadFile(resource.PostableResource):
> 	# 1 gig is max file upload size
> 	maxSize=1 * 1024 * 1024 * 1024
> 	
> 	def render(self, ctx):
> 		"""Create the job for this upload and return the relevent deferred"""
> 		request = iweb.IRequest(ctx)
> 		
> 		job=Job()
> 		deferred = job.SubmitInput(request.files)				
> 		
> 		return deferred
> 		
> 
> My deferred callback:
> =====================
> deferred.callback( http.Response(responsecode.OK,
> 				{'content-type': http_headers.MimeType('text', 'html')},
> 				"Success!" ) )
> 
> My TopLevel:
> ============
> class Toplevel(resource.PostableResource):
> 	addSlash = True
> 	def render(self, ctx):
> 		return http.Response(responsecode.OK,
> 				{'content-type':
> 						http_headers.MimeType('text', 'html')},
> 						"""
> <html>
>     <form action="http://localhost:8080/uploadfile"
>             enctype="multipart/form-data"
>             method="post">
>         filename: <input type="file" name="filename">
> 		filename2: <input type="file" name="filename2">
>         <input type="submit" value="submit">
>     </form>
> </html>
> """)
> 	child_upload = UploadFile(jobqueue)
> 
> 
> My server startup:
> ==================
> # Create the resource we will be serving
> test = Toplevel()
> 
> # Setup default common access logging
> res = log.LogWrapperResource(test)
> log.DefaultCommonAccessLoggingObserver().start()
> 
> # Create the site and application objects
> site = server.Site(res)
> application = service.Application("demo")
> 
> # Serve it via standard HTTP on port 8080
> s = strports.service('tcp:8080', channel.HTTPFactory(site))
> s.setServiceParent(application)
> 
> 
> 
> 
> Im running the application as:
> 
> twistd -noy server.py
> 
> 
> 
> Twisted v8.0.1+, actually, the lastest SVN head.
> 
> Any one with more knowledge of twisted's internals have any ideas on
> what is happening? Does anyone have any good ideas on how to make the
> deferred callback trigger an immediate response (without opening a new
> TCP connection to kick it into gear)?
> 
> 
> Thanks
> 
> Regards
> Crispin Wellington
> <cwellington at ccg.murdoch.edu.au>
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Fri Apr 18 00:53:24 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Apr 2008 16:53:24 +1000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208500550.4347.20.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
Message-ID: <20080418065324.GD9934@steerpike.home.puzzling.org>

Crispin Wellington wrote:
[...]
> This DOES work except for a little strange behavoir. When the deferred
> callback is triggered, the client doesn't see any response, the
> connection just stays open. Then if I connect to the webservices from
> anywhere, even a bad URL, I get my response suddenly back.
> 
> It's as if the callback is not triggered until some TCP activity cause
> the main reactor to pump the pending requests or something. Is there

I'm betting you are doing "deferred.callback(...)" from the thread.  Twisted's
APIs are in general *not* thread-safe.  You should do
"reactor.callFromThread(deferred.callback, ...)" instead.  I suspect that will
fix your problem.

-Andrew.




From andrew-twisted at puzzling.org  Fri Apr 18 01:37:25 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Apr 2008 17:37:25 +1000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <1208501300.4347.24.camel@wolfwood>
References: <1208500550.4347.20.camel@wolfwood>
	<1208501300.4347.24.camel@wolfwood>
Message-ID: <20080418073725.GG9934@steerpike.home.puzzling.org>

Crispin Wellington wrote:
> Just a quick update. Doing a "reactor.iterate()" after the callback
> fixed the behavoir. ie.
> 
> --------
> deferred.callback( http.Response(responsecode.OK,
> 				{'content-type': http_headers.MimeType('text', 'html')},
> 				"Success!" ) )
> reactor.iterate()
> --------
> 
> so my new question is, is this the best way to do this? Is there a
> better way? Also is reactor.iterate() threadsafe? Are there potential
> problems callinf reactor.iterate() from a thread spawned off the running
> reactor thread?

No, this is definitely not safe.  Two wrongs don't make a right!  See my other
mail :)

-Andrew.




From cwellington at ccg.murdoch.edu.au  Fri Apr 18 01:47:29 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 07:47:29 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <20080418065324.GD9934@steerpike.home.puzzling.org>
References: <1208500550.4347.20.camel@wolfwood>
	<20080418065324.GD9934@steerpike.home.puzzling.org>
Message-ID: <1208504849.4347.26.camel@wolfwood>

Andrew,

I certainly was calling it from the other thread! And that
callFromThread() certainly did fix my problem! :)

Thanks a heap!

Crispin

On Fri, 2008-04-18 at 16:53 +1000, Andrew Bennetts wrote:
> Crispin Wellington wrote:
> [...]
> > This DOES work except for a little strange behavoir. When the deferred
> > callback is triggered, the client doesn't see any response, the
> > connection just stays open. Then if I connect to the webservices from
> > anywhere, even a bad URL, I get my response suddenly back.
> > 
> > It's as if the callback is not triggered until some TCP activity cause
> > the main reactor to pump the pending requests or something. Is there
> 
> I'm betting you are doing "deferred.callback(...)" from the thread.  Twisted's
> APIs are in general *not* thread-safe.  You should do
> "reactor.callFromThread(deferred.callback, ...)" instead.  I suspect that will
> fix your problem.
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From mailing_lists at evotex.ch  Fri Apr 18 01:57:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Fri, 18 Apr 2008 09:57:35 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings,
 was : "Is there a simple Producer/Consumer example or tutorial?"
Message-ID: <4808546F.7060109@evotex.ch>

Hello everyone,

I am re-posting these questions with a different title, since they have 
ventured away from the original question

I have a question though, I was looking at the way all this works by 
using a debugger, and I noticed that in twisted.internet.abstract.py in 
registerProducer() there is the following :

if not streaming:
   producer.resumeProducing()

Why is this done only for the pull producer? Shouldn't it also be called 
for the push producer since to have the data sent one has to call either 
self.transport.write() or resumeProducing() anyways? If you look at :

http://itamarst.org/writings/OSCON03/twisted_internet-112.html

it does :

transport.registerProducer(self, 1)
       self.produce()

thus starting the writing process and in the pull producer :

http://itamarst.org/writings/OSCON03/twisted_internet-111.html

it doesn't need to start the writing process explicitly since it's 
started when the producer is registered.

Oh, and also, since from what I see in the code the only difference with 
a push and pull producer is that the push producer is paused if the data 
being written/sent is very large (to let the reactor breath and process 
other things), if it isn't larger than the buffer it behaves like a pull 
producer, correct? If so, then why have both? Am I mixed up again?

Thank you,
Gabriel



From cwellington at ccg.murdoch.edu.au  Fri Apr 18 04:33:05 2008
From: cwellington at ccg.murdoch.edu.au (Crispin Wellington)
Date: Fri, 18 Apr 2008 10:33:05 +0000
Subject: [Twisted-Python] Non returning deferred result.
In-Reply-To: <20080418073725.GG9934@steerpike.home.puzzling.org>
References: <1208500550.4347.20.camel@wolfwood>
	<1208501300.4347.24.camel@wolfwood>
	<20080418073725.GG9934@steerpike.home.puzzling.org>
Message-ID: <1208514785.4347.34.camel@wolfwood>

Yeah, I replaced this with your thread safe suggestion.

Thanks again

Crispin

On Fri, 2008-04-18 at 17:37 +1000, Andrew Bennetts wrote:
> Crispin Wellington wrote:
> > Just a quick update. Doing a "reactor.iterate()" after the callback
> > fixed the behavoir. ie.
> > 
> > --------
> > deferred.callback( http.Response(responsecode.OK,
> > 				{'content-type': http_headers.MimeType('text', 'html')},
> > 				"Success!" ) )
> > reactor.iterate()
> > --------
> > 
> > so my new question is, is this the best way to do this? Is there a
> > better way? Also is reactor.iterate() threadsafe? Are there potential
> > problems callinf reactor.iterate() from a thread spawned off the running
> > reactor thread?
> 
> No, this is definitely not safe.  Two wrongs don't make a right!  See my other
> mail :)
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dripton at ripton.net  Fri Apr 18 07:13:13 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 18 Apr 2008 06:13:13 -0700
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
Message-ID: <20080418131313.GA20394@vidar.dreamhost.com>

On 2008.04.18 15:06:10 +1000, Jonathan Lange wrote:
> CompatibilityPolicy suggests release-based deprecation that is graded
> over 4 releases: release N PendingDeprecationWarning, N+1
> DeprecationWarning, N+2 DeprecationError, N+3 remove the
> functionality.
> 
> Ticket #1216 suggests a release-based deprecation policy that is not
> graded and over 1 release: release N, add DeprecationWarning, release
> N+1, remove the functionality.

As a user, I don't see much difference between a
PendingDeprecationWarning and a DeprecationWarning.  Or between a
DeprecationError and the code being removed.  Simple is good.

> Now, here's what I think.
> 
> * Release-based, not time-based.

Now that version numbers are based on the year, there's not a big
difference.  For example, if you wanted to guarantee at least a year of
DeprecationWarning before removing a feature, you could implement that
by saying that if the warning goes in in 8.x, then the feature can come
out in 10.0.  Or vice-versa.

-- 
David Ripton    dripton at ripton.net



From mithrandi at mithrandi.net  Fri Apr 18 07:26:16 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 18 Apr 2008 15:26:16 +0200
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080418131313.GA20394@vidar.dreamhost.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080418131313.GA20394@vidar.dreamhost.com>
Message-ID: <20080418132616.GC4988@mithrandi.net>

* David Ripton <dripton at ripton.net> [2008-04-18 06:13:13 -0700]:

> On 2008.04.18 15:06:10 +1000, Jonathan Lange wrote:
> > CompatibilityPolicy suggests release-based deprecation that is graded
> > over 4 releases: release N PendingDeprecationWarning, N+1
> > DeprecationWarning, N+2 DeprecationError, N+3 remove the
> > functionality.
> > 
> > Ticket #1216 suggests a release-based deprecation policy that is not
> > graded and over 1 release: release N, add DeprecationWarning, release
> > N+1, remove the functionality.
> 
> As a user, I don't see much difference between a
> PendingDeprecationWarning and a DeprecationWarning.  Or between a
> DeprecationError and the code being removed.  Simple is good.

A PendingDeprecationWarning is not visible by default, so users of an
application won't be inundated with DeprecationWarning messages they can
do nothing about; but a developer can turn them on in order to check if
his application is using any deprecated APIs.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080418/c22c34ca/attachment.sig>

From sipickles at hotmail.com  Fri Apr 18 07:27:03 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 18 Apr 2008 14:27:03 +0100
Subject: [Twisted-Python] Twisted.web2 or Nevow?
Message-ID: <BAY114-DAV13679A8849B8C439C02172BEE40@phx.gbl>

Hi,

I want to add a simple http server to my game server to allow monitors 
and GMs to use a web interface to access game state information.

I also want to produce an integrated game web site.

My game server is using a twisted.reactor to handle TCP connections. My 
question is, which two similar technologies should I focus on to provide 
the HTTP angle? twisted.web2 or Nevow?

So far I have mostly research Nevow, and seen how twistd is used to 
launch the application. How would Nevow then be integrated with my own 
app and its own reactor?

Many thanks

Simon

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Fri Apr 18 07:33:02 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 18 Apr 2008 09:33:02 -0400
Subject: [Twisted-Python] Twisted.web2 or Nevow?
In-Reply-To: <BAY114-DAV13679A8849B8C439C02172BEE40@phx.gbl>
Message-ID: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>

On Fri, 18 Apr 2008 14:27:03 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>I want to add a simple http server to my game server to allow monitors and 
>GMs to use a web interface to access game state information.
>
>I also want to produce an integrated game web site.
>
>My game server is using a twisted.reactor to handle TCP connections. My 
>question is, which two similar technologies should I focus on to provide the 
>HTTP angle? twisted.web2 or Nevow?
>

See http://twistedmatrix.com/trac/wiki/TwistedWebPlan

There's also a dedicated web mailing list, twisted-web at twistedmatrix.com.

>So far I have mostly research Nevow, and seen how twistd is used to launch 
>the application. How would Nevow then be integrated with my own app and its 
>own reactor?

Nevow supplies you with a protocol factory.  You just set it up on the port
you want like any other factory.  There's nothing that particularly requires
twistd, although as with most Twisted applications, using twistd gives you a
lot of extra features with very little effort.

Jean-Paul



From andrewfr_ice at yahoo.com  Fri Apr 18 08:16:00 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 18 Apr 2008 07:16:00 -0700 (PDT)
Subject: Crossing the Chasm [Twisted-Python] documentation 
In-Reply-To: <E1Jm9hJ-0002Oy-EY@cube.twistedmatrix.com>
Message-ID: <654069.80372.qm@web34204.mail.mud.yahoo.com>

Hello:

>Hi out there
>Let me tell you about my experience with TM so far
...

>Seeing there is doc. available, I digged through it.
>After all TM seems worth the effort. From what I see,
>I >love TM.

I've been following this thread. I have wondered if
the Twisted team are familiar with read Geoffrey
Moore's "Crossing the Chasm"? 

Cheers,
Andrew




      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From sipickles at hotmail.com  Fri Apr 18 10:03:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 18 Apr 2008 17:03:05 +0100
Subject: [Twisted-Python] Twisted.web2 or Nevow?
In-Reply-To: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>
References: <20080418133302.6859.2081994102.divmod.quotient.31728@ohm>
Message-ID: <BAY114-DAV11C7487C36FDB543FE0CEBEE40@phx.gbl>

Jean-Paul Calderone wrote:
> On Fri, 18 Apr 2008 14:27:03 +0100, Simon Pickles 
> <sipickles at hotmail.com> wrote:
>> Hi,
>>
>> I want to add a simple http server to my game server to allow 
>> monitors and GMs to use a web interface to access game state 
>> information.
>>
>> I also want to produce an integrated game web site.
>>
>> My game server is using a twisted.reactor to handle TCP connections. 
>> My question is, which two similar technologies should I focus on to 
>> provide the HTTP angle? twisted.web2 or Nevow?
>>
>
> See http://twistedmatrix.com/trac/wiki/TwistedWebPlan
>
> There's also a dedicated web mailing list, twisted-web at twistedmatrix.com.
>
>> So far I have mostly research Nevow, and seen how twistd is used to 
>> launch the application. How would Nevow then be integrated with my 
>> own app and its own reactor?
>
> Nevow supplies you with a protocol factory.  You just set it up on the 
> port
> you want like any other factory.  There's nothing that particularly 
> requires
> twistd, although as with most Twisted applications, using twistd gives 
> you a
> lot of extra features with very little effort.
>
Thanks, That clears things up for me a lot.


-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From nathan.stocks at gmail.com  Fri Apr 18 11:09:29 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 18 Apr 2008 11:09:29 -0600
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
Message-ID: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>

In my non-twisted scripts, I usually use psycopg2 DictCursors so that
my query results come back in dicts instead of lists.

curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)

Now I'd like to do the same thing in Twisted.  Is there a way to ask
t.e.adbapi to use that DictCursor cursor factory?

Or maybe there's a way to globally configure psycopg2 so that it used
psycopg2.extras.DictCursor by default...

/me is searching...

~ Nathan



From phil at bubblehouse.org  Fri Apr 18 12:05:03 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 18 Apr 2008 14:05:03 -0400
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
Message-ID: <D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>

On Apr 18, 2008, at 1:09 PM, Nathan wrote:
> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
> my query results come back in dicts instead of lists.
>
> curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>
> Now I'd like to do the same thing in Twisted.  Is there a way to ask
> t.e.adbapi to use that DictCursor cursor factory?
>
> Or maybe there's a way to globally configure psycopg2 so that it used
> psycopg2.extras.DictCursor by default...

I think I ran into this while trying to support multiple DB drivers.

The adbapi.ConnectionPool constructor automatically passes any  
additional arguments or keyword params to the DB-API Connection object  
constructor.

I remember having problems setting a default cursor via Connection()  
params, but I thought it was with the other PG driver, not psycopg2.  
In fact, I almost seem to remember pgdb not even directly supporting  
DictCursors at all, but I could easily be mistaken.

In any event, I ended up having the real drivers return a the row as  
sequence (the normal behavior), and made a trivial ConnectionPool  
subclass that contained the following:

     def _runInteraction(self, interaction, *args, **kw):
         conn = adbapi.Connection(self)
         trans = adbapi.Transaction(self, conn)
         try:
             result = interaction(trans, *args, **kw)
             if(result and isinstance(result[0], (list, tuple))):
                 result = [dict(zip([c[0] for c in  
trans._cursor.description], item)) for item in result]
             trans.close()
             conn.commit()
             return result
         except:
             conn.rollback()
             raise

Hacky, I know, but it did the trick. This way if you have a driver  
that does support DictCursors by passing params to the Connection  
constructor, it will use that functionality instead.

-phil



From phil at bubblehouse.org  Fri Apr 18 12:11:46 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 18 Apr 2008 14:11:46 -0400
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<D1DCD8E6-9F58-4348-B0A6-1A11E094473C@bubblehouse.org>
Message-ID: <C8B819C5-853E-4C22-98B1-1F659E6835FA@bubblehouse.org>


On Apr 18, 2008, at 2:05 PM, Phil Christensen wrote:
> On Apr 18, 2008, at 1:09 PM, Nathan wrote:
>> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
>> my query results come back in dicts instead of lists.
>>
>> curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>>
>> Now I'd like to do the same thing in Twisted.  Is there a way to ask
>> t.e.adbapi to use that DictCursor cursor factory?
>>
>> Or maybe there's a way to globally configure psycopg2 so that it used
>> psycopg2.extras.DictCursor by default...
>
> I think I ran into this while trying to support multiple DB drivers.
>
> The adbapi.ConnectionPool constructor automatically passes any  
> additional arguments or keyword params to the DB-API Connection  
> object constructor.
>
> I remember having problems setting a default cursor via Connection()  
> params, but I thought it was with the other PG driver, not psycopg2.  
> In fact, I almost seem to remember pgdb not even directly supporting  
> DictCursors at all, but I could easily be mistaken.
>
> In any event, I ended up having the real drivers return a the row as  
> sequence (the normal behavior), and made a trivial ConnectionPool  
> subclass that contained the following:
[snip wrong code]
> Hacky, I know, but it did the trick. This way if you have a driver  
> that does support DictCursors by passing params to the Connection  
> constructor, it will use that functionality instead.


Ah yes, this is the right one:

    def _runInteraction(self, interaction, *args, **kw):
        conn = adbapi.Connection(self)
        trans = adbapi.Transaction(self, conn)
        try:
            result = interaction(trans, *args, **kw)
            if(result and isinstance(result[0], (list, tuple))):
                colanmes = [c[0] for c in trans._cursor.description]
                result = [dict(zip(colnames, item)) for item in result]
            trans.close()
            conn.commit()
            return result
        except:
            conn.rollback()
            raise

Small change, but I was feeling some....what's the opposite of shame?  
Pride? No, not that far from shame...less shame?

-phil



From ddwiggins at advpubtech.com  Fri Apr 18 13:36:26 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 18 Apr 2008 12:36:26 -0700
Subject: [Twisted-Python] Howto: use Trial to unit test an XML-RPC server
Message-ID: <fuat7s$eo2$1@ger.gmane.org>

I'm offering the following as an experience report and a draft of a 
howto article:
-----------------------------
I've been developing an XML-RPC server using Twisted, and unit testing 
it with the distribution unittest, with each test connecting as a client 
and exercising a particular method.  I ran into a problem, however:

My server is essentially a special-purpose front end to a database, 
providing limited access to it.  Some of the server methods modify the 
database (I'm using adbapi for DB access).  For unit testing purposes, I 
want each test to leave the test database unchanged when it's done.  In 
unit testing stored procedures, for example, I create a connection in 
SetUp, use it in the test function to send a SQL "exec", and do a 
rollback in TearDown.  Nice and easy, since I'm using the same 
connection throughout.  In testing my server, however, I don't have 
access to the connection it used to access the database (and in fact 
shouldn't have, since my unit test functions are just clients to the 
server, and know nothing of the database itself).

This led me to the following approach, using Twisted's Trial extension 
of unittest.  I converted my unittest module to be run under Trial, as 
follows: rather than running the server, the test module imports the 
server module, giving it access to the XMLRPC class itself, and the 
ability to directly call its methods.  Since the server's methods return 
Deferreds, it's easy enough to call a method, then attach a callback to 
it that does the checking of its results.  Here's an example:
-------------
import MyServer

class MyServerTests(unittest.TestCase)
     def setUp(self):
         # Instantiate object to be tested here
         self.srvr = MyServer.XMLRPCServer()

     def testFrobulate(self):
         d = self.srvr.xmlrpc_frobulate(theFrobulatee)
         def checkResult(info):
	    # Test that the frobulation occurred correctly
             pass
         d.addCallback(checkFrobulation)

     def checkFrobulation(self, resultOfFrobulation):
         # Test whether it turned out OK
--------------
This works beautifully when frobulate doesn't modify the database; when 
it does, however, I have the same problem as before: the actual 
connection used is hidden in the guts of adbapi.

For this case, I changed the coding a bit to allow testing.  Rather than 
ConnectionPool.runQuery(), I use .runInteraction(), passing a function 
that expects a DBAPI cursor as its first argument (when running in the 
server, the function will be called in the context of a subthread).  The 
code in the server module then looks like this (I'm running on Py 2.4):
-------------
     @defer.deferredGenerator
     def xmlrpc_frobulate(theVictim):
         frobInProgress = defer.waitForDeferred(
             self._dbpool.runInteraction(
                 self.frobulateInteraction, theVictim) )
         yield frobInProgress
         didItWork = frobInProgress.getResult()
         yield didItWork
         return

     def frobulateInteraction(self, cursor, theVictim):
         cursor.execute("exec FrobulateOn " + theVictim)
         # Check the results, return True or False
--------------
Now, in the unit test, I can call self.srvr.frobulateInteraction like this:
-------------
     def testFrobulate(self):
         self.cursor = self.connection.cursor()
         d = self.srvr.frobulateInteraction(self.cursor,
                                            self.theFrobulatee)
         def checkResult(info):
	    # Test that the frobulation occurred correctly
             pass
         d.addCallback(checkFrobulation)
-------------
Now, since frobulateInteraction is using the connection from SetUp, the 
rollback in TearDown will restore the state of the DB.

In effect, by going "under the covers" of the server, I'm bypassing the 
parts of the server that are supplied by Twisted, and focusing on the 
code that I've written, which is exactly what I wanted to test.

Feedback solicited...

-- 
Don Dwiggins
Advanced Publishing Technology




From handzisk at tkn.tu-berlin.de  Fri Apr 18 14:12:36 2008
From: handzisk at tkn.tu-berlin.de (Vlado Handziski)
Date: Fri, 18 Apr 2008 22:12:36 +0200
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
Message-ID: <697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>

On Fri, Apr 18, 2008 at 7:09 PM, Nathan <nathan.stocks at gmail.com> wrote:
> In my non-twisted scripts, I usually use psycopg2 DictCursors so that
>  my query results come back in dicts instead of lists.
>
>  curs = db.cursor(cursor_factory = psycopg2.extras.DictCursor)
>
>  Now I'd like to do the same thing in Twisted.  Is there a way to ask
>  t.e.adbapi to use that DictCursor cursor factory?
>
>  Or maybe there's a way to globally configure psycopg2 so that it used
>  psycopg2.extras.DictCursor by default...
>

I am using the hack below from Federico Di Gregorio to force a
RealDictCursor in my adbapi stores:

#module twistedpg.py
#Author: Federico Di Gregorio

from psycopg2 import *
from psycopg2 import _psycopg as _2psycopg
from psycopg2.extensions import register_type, UNICODE, connection as
_2connection
from psycopg2.extras import RealDictCursor

del connect
def connect(*args, **kwargs):
    kwargs['connection_factory'] = connection
    return _2psycopg.connect(*args, **kwargs)

class connection(_2connection):
    def cursor(self):
        return _2connection.cursor(self, cursor_factory=RealDictCursor)

register_type(UNICODE)

and then:

        self.dbpool = adbapi.ConnectionPool('twistedpg',
                                            database=dname,
                                            user=duser,
                                            password=dpasswd,
                                            host=dhost,
                                            cp_reconnect=True)

etc...

Vlado



From drew.smathers at gmail.com  Fri Apr 18 14:19:22 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 18 Apr 2008 16:19:22 -0400
Subject: [Twisted-Python] Howto: use Trial to unit test an XML-RPC server
In-Reply-To: <fuat7s$eo2$1@ger.gmane.org>
References: <fuat7s$eo2$1@ger.gmane.org>
Message-ID: <368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>

On Fri, Apr 18, 2008 at 3:36 PM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> I'm offering the following as an experience report and a draft of a howto
> article:
>  -----------------------------
>  I've been developing an XML-RPC server using Twisted, and unit testing it
> with the distribution unittest, with each test connecting as a client and
> exercising a particular method.  I ran into a problem, however:
>
>  My server is essentially a special-purpose front end to a database,
> providing limited access to it.  Some of the server methods modify the
> database (I'm using adbapi for DB access).  For unit testing purposes, I
> want each test to leave the test database unchanged when it's done.  In unit
> testing stored procedures, for example, I create a connection in SetUp, use
> it in the test function to send a SQL "exec", and do a rollback in TearDown.
> Nice and easy, since I'm using the same connection throughout.  In testing
> my server, however, I don't have access to the connection it used to access
> the database (and in fact shouldn't have, since my unit test functions are
> just clients to the server, and know nothing of the database itself).
>
>  This led me to the following approach, using Twisted's Trial extension of
> unittest.  I converted my unittest module to be run under Trial, as follows:
> rather than running the server, the test module imports the server module,
> giving it access to the XMLRPC class itself, and the ability to directly
> call its methods.  Since the server's methods return Deferreds, it's easy
> enough to call a method, then attach a callback to it that does the checking
> of its results.  Here's an example:
>  -------------
>  import MyServer
>
>  class MyServerTests(unittest.TestCase)
>     def setUp(self):
>         # Instantiate object to be tested here
>         self.srvr = MyServer.XMLRPCServer()
>
>     def testFrobulate(self):
>         d = self.srvr.xmlrpc_frobulate(theFrobulatee)
>         def checkResult(info):
>             # Test that the frobulation occurred correctly
>             pass
>         d.addCallback(checkFrobulation)
>
>     def checkFrobulation(self, resultOfFrobulation):
>         # Test whether it turned out OK
>  --------------
>  This works beautifully when frobulate doesn't modify the database; when it
> does, however, I have the same problem as before: the actual connection used
> is hidden in the guts of adbapi.
>
>  For this case, I changed the coding a bit to allow testing.  Rather than
> ConnectionPool.runQuery(), I use .runInteraction(), passing a function that
> expects a DBAPI cursor as its first argument (when running in the server,
> the function will be called in the context of a subthread).  The code in the
> server module then looks like this (I'm running on Py 2.4):
>  -------------
>     @defer.deferredGenerator
>     def xmlrpc_frobulate(theVictim):
>         frobInProgress = defer.waitForDeferred(
>             self._dbpool.runInteraction(
>                 self.frobulateInteraction, theVictim) )
>         yield frobInProgress
>         didItWork = frobInProgress.getResult()
>         yield didItWork
>         return
>
>     def frobulateInteraction(self, cursor, theVictim):
>         cursor.execute("exec FrobulateOn " + theVictim)
>         # Check the results, return True or False
>  --------------
>  Now, in the unit test, I can call self.srvr.frobulateInteraction like this:
>  -------------
>     def testFrobulate(self):
>         self.cursor = self.connection.cursor()
>         d = self.srvr.frobulateInteraction(self.cursor,
>                                            self.theFrobulatee)
>         def checkResult(info):
>             # Test that the frobulation occurred correctly
>             pass
>         d.addCallback(checkFrobulation)
>  -------------
>  Now, since frobulateInteraction is using the connection from SetUp, the
> rollback in TearDown will restore the state of the DB.
>
>  In effect, by going "under the covers" of the server, I'm bypassing the
> parts of the server that are supplied by Twisted, and focusing on the code
> that I've written, which is exactly what I wanted to test.
>
>  Feedback solicited...
>
>  --
>  Don Dwiggins
>  Advanced Publishing Technology
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

One question: are you really not returning each Deferred from your
test methods, or was this a typo in the above?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From nathan.stocks at gmail.com  Fri Apr 18 14:38:30 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 18 Apr 2008 14:38:30 -0600
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
Message-ID: <96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>

On Fri, Apr 18, 2008 at 2:12 PM, Vlado Handziski
<handzisk at tkn.tu-berlin.de> wrote:
>  I am using the hack below from Federico Di Gregorio to force a
>  RealDictCursor in my adbapi stores:
>
>  #module twistedpg.py
>  #Author: Federico Di Gregorio
>
>  from psycopg2 import *
>  from psycopg2 import _psycopg as _2psycopg
>  from psycopg2.extensions import register_type, UNICODE, connection as
>  _2connection
>  from psycopg2.extras import RealDictCursor
>
>  del connect
>  def connect(*args, **kwargs):
>     kwargs['connection_factory'] = connection
>     return _2psycopg.connect(*args, **kwargs)
>
>  class connection(_2connection):
>     def cursor(self):
>         return _2connection.cursor(self, cursor_factory=RealDictCursor)
>
>  register_type(UNICODE)
>
>  and then:
>
>         self.dbpool = adbapi.ConnectionPool('twistedpg',
>                                             database=dname,
>                                             user=duser,
>                                             password=dpasswd,
>                                             host=dhost,
>                                             cp_reconnect=True)

Oh, ok!  That makes sense.  So since twisted just calls the underlying
db module's connect() function, you just (in essence) sub-classed the
whole psycopg2 module and overrode connect() to use the DictCursor.

I don't understand what the "UNICODE" stuff is about, though.  Do you
know what that is?

~ Nathan



From handzisk at tkn.tu-berlin.de  Fri Apr 18 16:17:46 2008
From: handzisk at tkn.tu-berlin.de (Vlado Handziski)
Date: Sat, 19 Apr 2008 00:17:46 +0200
Subject: [Twisted-Python] Using different cursor types with
	psycopg+twisted.enterprise.adbapi?
In-Reply-To: <96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>
References: <96c9d6a80804181009t776184cbsd838f01032300585@mail.gmail.com>
	<697986ec0804181312g37ff077cscab9e03f374987a6@mail.gmail.com>
	<96c9d6a80804181338i29af0a37ocfc0a7619cd22e4d@mail.gmail.com>
Message-ID: <697986ec0804181517m28e781f2w64640b87361f15eb@mail.gmail.com>

On Fri, Apr 18, 2008 at 10:38 PM, Nathan <nathan.stocks at gmail.com> wrote:
>
> On Fri, Apr 18, 2008 at 2:12 PM, Vlado Handziski
>  <handzisk at tkn.tu-berlin.de> wrote:
>  >  I am using the hack below from Federico Di Gregorio to force a
>  >  RealDictCursor in my adbapi stores:
>  >
>  >  #module twistedpg.py
>  >  #Author: Federico Di Gregorio
>  >
>  >  from psycopg2 import *
>  >  from psycopg2 import _psycopg as _2psycopg
>  >  from psycopg2.extensions import register_type, UNICODE, connection as
>  >  _2connection
>  >  from psycopg2.extras import RealDictCursor
>  >
>  >  del connect
>  >  def connect(*args, **kwargs):
>  >     kwargs['connection_factory'] = connection
>  >     return _2psycopg.connect(*args, **kwargs)
>  >
>  >  class connection(_2connection):
>  >     def cursor(self):
>  >         return _2connection.cursor(self, cursor_factory=RealDictCursor)
>  >
>  >  register_type(UNICODE)
>  >
>  >  and then:
>  >
>  >         self.dbpool = adbapi.ConnectionPool('twistedpg',
>  >                                             database=dname,
>  >                                             user=duser,
>  >                                             password=dpasswd,
>  >                                             host=dhost,
>  >                                             cp_reconnect=True)
>
>  Oh, ok!  That makes sense.  So since twisted just calls the underlying
>  db module's connect() function, you just (in essence) sub-classed the
>  whole psycopg2 module and overrode connect() to use the DictCursor.
>
>  I don't understand what the "UNICODE" stuff is about, though.  Do you
>  know what that is?
>

Effectively it is forcing psycopg2 to convert the results to unicode.
I am using it so that unicode form data can be transparently
read/written in the DB.

Vlado



From pittipatti at web.de  Sat Apr 19 05:06:14 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Sat, 19 Apr 2008 13:06:14 +0200
Subject: [Twisted-Python] feeding-worker-loop problem
Message-ID: <4809D226.20903@web.de>

Hi!

I've been thinking for some time now about the following problem, but
can't find a solution.

I have a queue with a fluctuant number of tasks. This queue might be
empty at some time but might also become such full, that all workers
have work to do and we have to wait until one becomes free again.

I'd like to have a number of workers which process these tasks from the
queue.

What I've got:
- the worker, which returns a deferred for further processing
- a worker-pool class, which hands out the workers with an attached
callback to re-queue them to the "available-pool"

My problem:
- the connection between the queue and the worker-pool and integrating
this into the main reactor-loop

My first thought was a twisted.internet.task.LoopingCall, trying to get
a worker and on success giving it a task, but that's not very
asynchronous, isn't it? Especially no when the queue is empty.

I've no clue how to implement this.

I've read something about producer-consumer in twisted, but the
documentation here is very rare and I think it's not what I'm looking for.


Can someone please give me a hint, if twisted offers some techniques to
implement this, or point me in the right direction?


Thanks
Patrick



From p.mayers at imperial.ac.uk  Sat Apr 19 07:06:25 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 19 Apr 2008 14:06:25 +0100
Subject: [Twisted-Python] feeding-worker-loop problem
In-Reply-To: <4809D226.20903@web.de>
References: <4809D226.20903@web.de>
Message-ID: <4809EE51.8080906@imperial.ac.uk>

> I'd like to have a number of workers which process these tasks from the
> queue.
> 
> What I've got:
> - the worker, which returns a deferred for further processing
> - a worker-pool class, which hands out the workers with an attached
> callback to re-queue them to the "available-pool"

I don't understand that terminology.

What kind of objects are these workers? Threads? Sub-processes? Python 
generators? Long-lived functions (these would block the reactor)

> 
> My problem:
> - the connection between the queue and the worker-pool and integrating
> this into the main reactor-loop
> 
> My first thought was a twisted.internet.task.LoopingCall, trying to get
> a worker and on success giving it a task, but that's not very
> asynchronous, isn't it? Especially no when the queue is empty.
> 
> I've no clue how to implement this.

I would suggest looking at this:

http://foss.eepatents.com/AsynQueue



From exarkun at divmod.com  Sat Apr 19 07:33:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 Apr 2008 09:33:55 -0400
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <4808546F.7060109@evotex.ch>
Message-ID: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>

On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello everyone,
>
>I am re-posting these questions with a different title, since they have 
>ventured away from the original question
>
>I have a question though, I was looking at the way all this works by using a 
>debugger, and I noticed that in twisted.internet.abstract.py in 
>registerProducer() there is the following :
>
>if not streaming:
>   producer.resumeProducing()
>
>Why is this done only for the pull producer? Shouldn't it also be called for 
>the push producer since to have the data sent one has to call either 
>self.transport.write() or resumeProducing() anyways? If you look at :
>
>http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>
>it does :
>
>transport.registerProducer(self, 1)
>       self.produce()

So, this is a streaming producer.  It starts producing right away without
having resumeProducing called on it.

>
>thus starting the writing process and in the pull producer :
>
>http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>
>it doesn't need to start the writing process explicitly since it's started 
>when the producer is registered.

This is a non-streaming producer.  It doesn't do anything until something
calls resumeProducing on it.

>
>Oh, and also, since from what I see in the code the only difference with a 
>push and pull producer is that the push producer is paused if the data being 
>written/sent is very large (to let the reactor breath and process other 
>things), if it isn't larger than the buffer it behaves like a pull producer, 
>correct? If so, then why have both? Am I mixed up again?

As you say, they behave differently when there is a large amount of data.
However, this is more about the source of the data than where it ends up.
For example, if you have a large string and you want to producer it to a
transport, you probably want a pull producer, because there's no events
which will signal that you can send some more of the string *except* for
the reactor deciding that it is ready for some more.  So that's how you
should decide which of these you want to write - if the consumer is the
only event source involved, as in the large string case, then you want a
pull producer (streaming = False); if the producer itself is event-driven
in its ability to provide data, then you want a push producer.

Jean-Paul



From dr.pythoniac at googlemail.com  Sat Apr 19 09:24:48 2008
From: dr.pythoniac at googlemail.com (Dr Pythoniac)
Date: Sat, 19 Apr 2008 08:24:48 -0700 (PDT)
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <4809EE51.8080906@imperial.ac.uk>
References: <4809D226.20903@web.de>
	<4809EE51.8080906@imperial.ac.uk>
Message-ID: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>

Hi all

concerning twisted.web:

How do I run once-per-application stuff ?

Assume, I want to put sth into the static.Registry or  I want to read in some application data from a file, so that every resource can use it.

My main problem can be split in two:

- where do it do it (using twistd) ? 
Please no complicated plugin (or alike) suggestions. I'm seeing red just hearing 'zope' ...


- how can resource scripts use it ?

Probably this is an idiots question but I have sth. like 8 Browsertabs open with twisted "docu" and getting more and more confused by hunting pieces of information that are just splattered all over the site.

Additional: Is there any docu about twistd ? How can I use all its miracles rather than just dumbly guess and try an err and try and err and ... ?

Yes, I'm demotivated and pissed far over the edge. Forgive me.

Thanks



From maarten at treewalker.org  Sat Apr 19 09:59:28 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 19 Apr 2008 17:59:28 +0200
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
References: <4809D226.20903@web.de> <4809EE51.8080906@imperial.ac.uk>
	<20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
Message-ID: <200804191759.33486.maarten@treewalker.org>

On Saturday 19 April 2008, Dr Pythoniac wrote:

> How do I run once-per-application stuff ?
>
> Assume, I want to put sth into the static.Registry or  I want to read in
> some application data from a file, so that every resource can use it.
>
> My main problem can be split in two:
>
> - where do it do it (using twistd) ?

For our webapp, we load lots of data, so I made a "startup in progress" page 
which both does the loading and serves a page that shows how much is loaded 
so far. The loading itself is done by loading small chunks of data and then 
returning control back to the reactor, so it can actually serve the 
progress page. When loading is done, the progress page resource is replaced 
by the root page of the webapp.

If you only want to load a small amount of data, maybe subclass Application? 
I haven't tried this though.

Our webapp loads from a Python file (using "twistd -y"), so that first 
Python file could also load data. If I recall correctly, that initial file 
is run as the same user that started twistd (root, in our case), while the 
started application runs as the user selected from the twistd --uid 
and --gid options. So it is safer to do as little as possible at this stage 
of startup.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080419/14895fcc/attachment.sig>

From p.mayers at imperial.ac.uk  Sat Apr 19 11:19:44 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 19 Apr 2008 18:19:44 +0100
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
References: <4809D226.20903@web.de>	<4809EE51.8080906@imperial.ac.uk>
	<20080419172445.2ebdc86f.dr.pythoniac@googlemail.com>
Message-ID: <480A29B0.1070500@imperial.ac.uk>

Dr Pythoniac wrote:
> Hi all

When posting a new topic, please don't use reply-to on a previous
different topic, it breaks threading.

> 
> concerning twisted.web:
> 
> How do I run once-per-application stuff ?
> 
> Assume, I want to put sth into the static.Registry or  I want to read
> in some application data from a file, so that every resource can use
> it.
> 
> My main problem can be split in two:
> 
> - where do it do it (using twistd) ? Please no complicated plugin (or
> alike) suggestions. I'm seeing red just hearing 'zope' ...

Assuming you are using a .tac file, you might do something like this in
"application.tac":

from twisted.application import service, strports

import mycode

application = service.Application('myapp')
services = service.IServiceCollection(application)

# do startup code here
mycode.doStartupStuff()

site = mycode.site()
web = strports.service('tcp:80', site)
web.setServiceParent(services)

...then run the "tac" file with:

twistd -oy application.tac

...this is such a simple solution that I guess you are having more basic
misunderstandings.


> 
> 
> - how can resource scripts use it ?

What does this mean?

> 
> Probably this is an idiots question but I have sth. like 8
> Browsertabs open with twisted "docu" and getting more and more
> confused by hunting pieces of information that are just splattered
> all over the site.

Have you read the finger tutorial from start to end, and understood it?

> 
> Additional: Is there any docu about twistd ? How can I use all its
> miracles rather than just dumbly guess and try an err and try and err
> and ... ?

http://twistedmatrix.com/projects/core/documentation/howto/application.html

...describes the contents of a ".tac" file, the recommended way to use 
twistd. If you could be more specific about *what* you don't understand, 
what you've tried already, why it didn't work and with what error 
messages, I can perhaps be more helpful.



From andrewfr_ice at yahoo.com  Sat Apr 19 12:29:14 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 19 Apr 2008 11:29:14 -0700 (PDT)
Subject: [Twisted-Python] "glue" problem
In-Reply-To: <E1JnFTv-0000El-Cc@cube.twistedmatrix.com>
Message-ID: <609105.7987.qm@web34204.mail.mud.yahoo.com>


Hello Dr. Pythoniac:

>Additional: Is there any docu about twistd ? How can
I >use all its miracles rather than just dumbly guess
and >try an err and try and err and

Get the Abe Fettig book. There is a section on twistd.


>Assume, I want to put sth into the static.Registry 

what does 'sth' mean?

Cheers,
Andrew


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From andrewfr_ice at yahoo.com  Sat Apr 19 12:47:38 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 19 Apr 2008 11:47:38 -0700 (PDT)
Subject: [Twisted-Python] Stackless Python Examples Re: InlineCallback
	Friendly ? 
Message-ID: <882470.36243.qm@web34201.mail.mud.yahoo.com>

Hi Folks:

--- Andrew Francis <andrewfr_ice at yahoo.com> wrote:

[J-P Calderone]
>The only kind of dispatcher which is really hostile
>towards inlineCallbacks is the kind which is
>hostile towards Deferreds in general - ie, one which
>requires a return value and does not support 
>Deferreds.

[A Francis] 
>Once again Jean-Paul, I find your explanation super
>helpful and save me time going down the wrong path. 

Based on Jean-Paul's explanation, here are some code
snippets showing how to handle other protocols with
Stackless Python and Twisted. This is a continuation
of the technique I used in "Adventures" to prevent the
reactor from deadlocking.

Currently I am rethinking the techniques - I believe
there is a way to reduce spawning tasklets - not that
tasklets are all that expensive....

Here is an example with resources adapted from the Abe
Fettig example on page 48 of "Twisted Network
Programming Essentials." I am still getting my feet
wet with resources. I intend to use this to help
prototype REST support in WS-BPEL.

class HomePage(resource.Resource):
    
    def doWork(self):
        message = """
        <html>
        <head>
        </head>
        <body>
        Hello World    
        </body>
        </html>
        """
        self.request.write(message)
        self.request.finish()
        
        
    def render(self, request):
        self.request = request
        stackless.tasklet(self.doWork)()
        return server.NOT_DONE_YET


and here is one with PyAMF .2

(I remember sketching this one out on a napkin at
PyCon 2008)

class EchoServer(TwistedGateway):
    def __init__(self):
        super(EchoServer, self).__init__()
        self.request = None
        return
        
    def __echo__(self, request, deferred, y):
        print "=>", request, deferred, y
        deferred.callback(y)
        
    
    def echo(self, request, y):
        print "=>", request, y
        deferred = defer.Deferred()
        stackless.tasklet(self.__echo__)(request,
deferred, y)
        return deferred

Cheers,
Andrew



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From exarkun at twistedmatrix.com  Sat Apr 19 22:05:10 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Apr 2008 04:05:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1208664311.0.644723372@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080420/991b6c50/attachment.html>

From pittipatti at web.de  Sun Apr 20 10:54:05 2008
From: pittipatti at web.de (Patrick Scharrenberg)
Date: Sun, 20 Apr 2008 18:54:05 +0200
Subject: [Twisted-Python] feeding-worker-loop problem
In-Reply-To: <4809EE51.8080906@imperial.ac.uk>
References: <4809D226.20903@web.de> <4809EE51.8080906@imperial.ac.uk>
Message-ID: <480B752D.5020601@web.de>

Hi!

> I would suggest looking at this:
> 
> http://foss.eepatents.com/AsynQueue


That looks very promising. I'll take a deeper look at that tomorrow.
Thanks!

Patrick



From radix at twistedmatrix.com  Sun Apr 20 17:00:24 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 20 Apr 2008 19:00:24 -0400
Subject: [Twisted-Python] Twisted 8.1.0 prerelease 1
Message-ID: <60ed19d40804201600y1bb7371eq6fdb4b6ed3317454@mail.gmail.com>

Hey all. I've built a prerelease for Twisted 8.1.0. I'd appreciate if
some people would download it and check it out. We've fixed a few
important regressions in this release:

 * some reactor re-entrancy problems have been fixed (#3146, #3168)
 * Constructing failures of Pyrex-raised exceptions works again
 * User Guide API links now point to twistedmatrix.com instead of to
invalid locations (although this prerelease contains API links to the
8.1.0 docs on twistedmatrix.com, which aren't yet there :)

There are also a few very minor features and miscellaneous improvements.

You can get the prerelease tar.bz2 files from
http://twistedmatrix.com/users/radix/8.1.0pre1/

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Mon Apr 21 01:52:56 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 21 Apr 2008 09:52:56 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>
References: <20080419133355.6859.1386718943.divmod.quotient.32196@ohm>
Message-ID: <480C47D8.7020006@evotex.ch>

Jean-Paul Calderone wrote:
> On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello everyone,
>>
>> I am re-posting these questions with a different title, since they 
>> have ventured away from the original question
>>
>> I have a question though, I was looking at the way all this works by 
>> using a debugger, and I noticed that in twisted.internet.abstract.py 
>> in registerProducer() there is the following :
>>
>> if not streaming:
>>   producer.resumeProducing()
>>
>> Why is this done only for the pull producer? Shouldn't it also be 
>> called for the push producer since to have the data sent one has to 
>> call either self.transport.write() or resumeProducing() anyways? If 
>> you look at :
>>
>> http://itamarst.org/writings/OSCON03/twisted_internet-112.html
>>
>> it does :
>>
>> transport.registerProducer(self, 1)
>>       self.produce()
>
> So, this is a streaming producer.  It starts producing right away without
> having resumeProducing called on it.
>
>>
>> thus starting the writing process and in the pull producer :
>>
>> http://itamarst.org/writings/OSCON03/twisted_internet-111.html
>>
>> it doesn't need to start the writing process explicitly since it's 
>> started when the producer is registered.
>
> This is a non-streaming producer.  It doesn't do anything until something
> calls resumeProducing on it.
>
>>
>> Oh, and also, since from what I see in the code the only difference 
>> with a push and pull producer is that the push producer is paused if 
>> the data being written/sent is very large (to let the reactor breath 
>> and process other things), if it isn't larger than the buffer it 
>> behaves like a pull producer, correct? If so, then why have both? Am 
>> I mixed up again?
>
> As you say, they behave differently when there is a large amount of data.
> However, this is more about the source of the data than where it ends up.
> For example, if you have a large string and you want to producer it to a
> transport, you probably want a pull producer, because there's no events
> which will signal that you can send some more of the string *except* for
> the reactor deciding that it is ready for some more.  
What exactly do you mean by :

"there's no events which will signal that you can send some more of the 
string *except* for
the reactor deciding that it is ready for some more"?

When I looked at Twisted's code, the difference that I saw was that if a 
push producer is used, and if the data to be sent is bigger than a 
certain length, it calls producer.pauseProducing()

> So that's how you
> should decide which of these you want to write - if the consumer is the
> only event source involved, as in the large string case, then you want a
> pull producer (streaming = False); 
How can the consumer be an event source? The producer is the one sending 
the data, maybe I don't get what you mean by "event source".
> if the producer itself is event-driven
> in its ability to provide data, then you want a push producer.
>
> Jean-Paul
I thought the push producer worked like this : if the data is too big, 
send part of it and pause the rest, let the reactor breath some, and 
repeat. I thought the pull producer was basically like if no producer 
was used, one has to take care of any data splitting and send small 
parts when the consumer is ready. Is this not correct?

Gabriel



From inhahe at gmail.com  Mon Apr 21 06:20:18 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 08:20:18 -0400
Subject: [Twisted-Python] question about twisted web2
Message-ID: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>

i may not understand all this very well, but,
if i remember correctly, http 1.1 supports multiple requests over the same
connection to speed things up.. but
http://twistedmatrix.com/projects/web/documentation/howto/web-overview.htmlleads
me to believe it closes the connection after each request.. but
twisted web2, otoh, is supposed to have full 1.1 support.. does this mean it
won't close the connection after each request?  if so, i'd like to use it
for that reason, but then, according to
http://twistedmatrix.com/trac/wiki/TwistedWeb2 web2 isn't very fast. i don't
know if their benchmarks take under consideration realistic conditions in
which multiple requests can be made over a single tcp connection.
so should i use web2, and if not, is there any way to do what i want using
twisted.web, and if not, what python web framework can i use that does do
what i want and is otherwise as fast as twisted web?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/f76d0c68/attachment.html>

From exarkun at divmod.com  Mon Apr 21 08:41:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 10:41:19 -0400
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <480C47D8.7020006@evotex.ch>
Message-ID: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>

On Mon, 21 Apr 2008 09:52:56 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Jean-Paul Calderone wrote:
>>On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
> [snip]
>What exactly do you mean by :
>
>"there's no events which will signal that you can send some more of the 
>string *except* for
>the reactor deciding that it is ready for some more"?
>
>When I looked at Twisted's code, the difference that I saw was that if a 
>push producer is used, and if the data to be sent is bigger than a certain 
>length, it calls producer.pauseProducing()

This is true.  Let's back up for a moment, though.

A pull producer is one which only produces data when it is asked for data.
The ask-for-data API is resumeProducing.  This means that a consumer which
is given a pull producer must ask it for data repeatedly until there is
none left.  The consumer is free to do this in its own pace, and a typical
efficient way to do this is to ask for more data each time the application
buffer is empty.

A push producer produces data all the time, until it is asked to stop.  It
does this at whatever pace it wishes; it might produce a byte each second
or it might produce a chunk of bytes each time a user interacts with a UI
somehow or it might produce whatever it reads out of some socket whenever
it happens to do that.  The consumer is free to ask it to stop at any time
though.  The API for that is pauseProducing, and in this circumstance,
resumeProducing delivers the opposite message: it tells the producer that
it can go back to whatever it was doing.

Does it make sense why only the push producer case has a pauseProducing
call in it?

>>So that's how you
>>should decide which of these you want to write - if the consumer is the
>>only event source involved, as in the large string case, then you want a
>>pull producer (streaming = False);
>
>How can the consumer be an event source? The producer is the one sending the 
>data, maybe I don't get what you mean by "event source".

For example, if the consumer is a socket, then there are at least two events
which it can generate which are potentially interesting: application-level
buffer empty and application-level buffer full.  These are good indicators
that more data should be produced and that no more data should be produced
(for a while), respectively.

>>if the producer itself is event-driven
>>in its ability to provide data, then you want a push producer.
>>
>
>I thought the push producer worked like this : if the data is too big, send 
>part of it and pause the rest, let the reactor breath some, and repeat. I 
>thought the pull producer was basically like if no producer was used, one 
>has to take care of any data splitting and send small parts when the 
>consumer is ready. Is this not correct?

It's often the case that a producer doesn't have all of the data it is going
to produce when it is first registered with the consumer.  In these cases,
it is less a matter if splitting up the data and more a matter of knowing
whether to keep trying to gather more data to give to the consumer.  If the
consumer has indicated that it wants no more data (via pauseProducing), then
the producer can chill out for a while.  Only when the consumer issues the
resumeProducing call does the producer need to start getting data again.  For
TCP connections, this is a pretty good reflection of what goes on at a lower
level.  If you stop reading from a TCP socket, the remote side has to stop
sending shortly afterwards.  This is more efficient than letting an unbounded
amount of data pile up in memory.

If you _do_ already have all of the data that is going to be produced (that
is, in-memory and as a Python string or other byte buffer object which can
be used with socket.send), then the only reasons to use a producer are that
some object that you want to give the data to only supports the producer/
consumer API so you have no choice but to use a producer, or that you want
to know when the data has been cleared out of the application-level buffer
(not necessarily sent over the network, and certainly not necessarily
received by the peer, but at least no longer buffered in your userspace
process).  If neither of these apply, you may as well just write the one
string to the transport all at once.  Since you already had all the data
in memory, you already payed the resource allocation penalty, so there's
not really much lost by ignoring P/C.

Hope this helps,

Jean-Paul



From exarkun at divmod.com  Mon Apr 21 09:03:46 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 11:03:46 -0400
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: 0
Message-ID: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>

Hello all,

The first TSF sponsored Twisted sprint is done.  Here's a quick rundown of
some of the things that happened.

  * Glyph Lefkowitz made a huge dent in the current review queue, dealing
    with more than half of the outstanding tickets.

  * After some discussion about the value of a bugfix-only release vs a
    normal bugfix and feature enhancement release, Christopher Armstrong
    got the wheels rolling on 8.1.0 (which will be of the latter type).
    You probably already saw the pre1 announcement.  Give it a spin!

  * Paul Swartz continued to strive towards the goal of Twisted Conch
    being as soft and cuddly as a little bunny rabbit.

  * Ying Li worked on permission and ownership features for FilePath.

  * Jeff Mancuso came by for a while and talked about Twisted Conch
    performance (and did some benchmarks) and SFTP access control
    issues.

  * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
    an API to get arbitrary X509v3 extensions.

  * Itamar Shtull-Trauring helped out all around.

  * I finished fixing some reactor startup and shutdown issues introduced
    in 8.0.

We also discussed Twisted's backwards compatibility policy, guided
mostly by Jonathan Lange's email of the 18th to this list, with the
goal of creating an official document.

The next sprint is tentatively scheduled for May 18th at the Divmod office.

Jean-Paul



From nebpro at gmail.com  Mon Apr 21 09:07:05 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 11:07:05 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
Message-ID: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>

Hi,

I am having problem compiling twisted sample codes. It gives me "Import
Error" errors (i.e. ImportError: No module named web.client). I really
appreciate any suggestions. Thank you.

Below is the sample codes that I tried from the tutorial

*from twisted.web.client import getPage
from twisted.internet import reactor

def printContents (contents):
    '''
    This is the 'callback' function, added to the Deferred and called by
    it when the promised data is available
    '''

    print "The Deferred has called printContents with the following
contents:"
    print contents

    # Stop the Twisted event handling system -- this is usually handled
    # in higher level ways

    reactor.stop()

# call getPage, which returns immediately with a Deferred, promising to
# pass the page contents onto our callbacks when the contents are available
deferred = getPage ("http://twistedmatrix.com/")

# add a callback to the deferred -- request that it run printContents when
# the page content has been downloaded
deferred.addCallback (printContents)

reactor.run()*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/65234be4/attachment.html>

From radix at twistedmatrix.com  Mon Apr 21 09:16:20 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Apr 2008 11:16:20 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
Message-ID: <60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> Hi,
>
> I am having problem compiling twisted sample codes. It gives me "Import
> Error" errors (i.e. ImportError: No module named web.client). I really
> appreciate any suggestions. Thank you.

How did you install Twisted? What platform are you running this on?



-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From mailing_lists at evotex.ch  Mon Apr 21 10:06:58 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Mon, 21 Apr 2008 18:06:58 +0200
Subject: [Twisted-Python] Question on push/pull producers inter-workings, 
	was : "Is there a simple Producer/Consumer example or tutorial?"
In-Reply-To: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>
References: <20080421144119.6859.1707401578.divmod.quotient.33112@ohm>
Message-ID: <480CBBA2.1020709@evotex.ch>

Jean-Paul Calderone wrote:
> On Mon, 21 Apr 2008 09:52:56 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Jean-Paul Calderone wrote:
>>> On Fri, 18 Apr 2008 09:57:35 +0200, Gabriel Rossetti 
>> [snip]
>> What exactly do you mean by :
>>
>> "there's no events which will signal that you can send some more of 
>> the string *except* for
>> the reactor deciding that it is ready for some more"?
>>
>> When I looked at Twisted's code, the difference that I saw was that 
>> if a push producer is used, and if the data to be sent is bigger than 
>> a certain length, it calls producer.pauseProducing()
>
> This is true.  Let's back up for a moment, though.
>
> A pull producer is one which only produces data when it is asked for 
> data.
> The ask-for-data API is resumeProducing.  This means that a consumer 
> which
> is given a pull producer must ask it for data repeatedly until there is
> none left.  The consumer is free to do this in its own pace, and a 
> typical
> efficient way to do this is to ask for more data each time the 
> application
> buffer is empty.
>
> A push producer produces data all the time, until it is asked to 
> stop.  It
> does this at whatever pace it wishes; it might produce a byte each second
> or it might produce a chunk of bytes each time a user interacts with a UI
> somehow or it might produce whatever it reads out of some socket whenever
> it happens to do that.  The consumer is free to ask it to stop at any 
> time
> though.  The API for that is pauseProducing, and in this circumstance,
> resumeProducing delivers the opposite message: it tells the producer that
> it can go back to whatever it was doing.
>
> Does it make sense why only the push producer case has a pauseProducing
> call in it?
yes
>
>>> So that's how you
>>> should decide which of these you want to write - if the consumer is the
>>> only event source involved, as in the large string case, then you 
>>> want a
>>> pull producer (streaming = False);
>>
>> How can the consumer be an event source? The producer is the one 
>> sending the data, maybe I don't get what you mean by "event source".
>
> For example, if the consumer is a socket, then there are at least two 
> events
> which it can generate which are potentially interesting: 
> application-level
> buffer empty and application-level buffer full.  These are good 
> indicators
> that more data should be produced and that no more data should be 
> produced
> (for a while), respectively.
>
>>> if the producer itself is event-driven
>>> in its ability to provide data, then you want a push producer.
>>>
>>
>> I thought the push producer worked like this : if the data is too 
>> big, send part of it and pause the rest, let the reactor breath some, 
>> and repeat. I thought the pull producer was basically like if no 
>> producer was used, one has to take care of any data splitting and 
>> send small parts when the consumer is ready. Is this not correct?
>
> It's often the case that a producer doesn't have all of the data it is 
> going
> to produce when it is first registered with the consumer.  In these 
> cases,
> it is less a matter if splitting up the data and more a matter of knowing
> whether to keep trying to gather more data to give to the consumer.  
> If the
> consumer has indicated that it wants no more data (via 
> pauseProducing), then
> the producer can chill out for a while.  Only when the consumer issues 
> the
> resumeProducing call does the producer need to start getting data 
> again.  For
> TCP connections, this is a pretty good reflection of what goes on at a 
> lower
> level.  If you stop reading from a TCP socket, the remote side has to 
> stop
> sending shortly afterwards.  This is more efficient than letting an 
> unbounded
> amount of data pile up in memory.
>
> If you _do_ already have all of the data that is going to be produced 
> (that
> is, in-memory and as a Python string or other byte buffer object which 
> can
> be used with socket.send), then the only reasons to use a producer are 
> that
> some object that you want to give the data to only supports the producer/
> consumer API so you have no choice but to use a producer, or that you 
> want
> to know when the data has been cleared out of the application-level 
> buffer
> (not necessarily sent over the network, and certainly not necessarily
> received by the peer, but at least no longer buffered in your userspace
> process).  If neither of these apply, you may as well just write the one
> string to the transport all at once.  Since you already had all the data
> in memory, you already payed the resource allocation penalty, so there's
> not really much lost by ignoring P/C.
>
> Hope this helps,
>
> Jean-Paul
>
Thank you Jean-Paul, yes it helps a lot.

In my application, I send xml strings through a server, some may have 
rather large data embedded in them, so the idea for using the 
producer/consumer paradigm was to not congest the server as it acts like 
a proxy if you wish. I though that if I did that, then other clients may 
send data through it while the producer pauses. The server and the 
clients are both using server factories (see 
http://twistedmatrix.com/pipermail/twisted-python/2008-February/016879.html), 
since the client-to-client communication isn't direct, the server needs 
to be able to connect to the end/destination client. To send data, I use 
single-use clients, like described in the twisted documentation. In this 
case, my producer was supposed to be the single-use client and the 
consumer the server factory's protocol instance's (whether it being the 
server or the clients), transport (tcp/ip).

I guess the problem is that like you said, I already have all the data 
in the source client and thus there is no need to use the p/c paradigm. 
I must ask though, when I do transfer large amounts of data, if I 
understood correctly the reactor is busy doing that, and thus no other 
clients can send data until it is done, correct? How must one correctly 
deal with this problem? What happens to the other clients' data that 
they try to send?

Thank you,
Gabriel



From ddwiggins at advpubtech.com  Mon Apr 21 11:10:24 2008
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 21 Apr 2008 10:10:24 -0700
Subject: [Twisted-Python] Re: Howto: use Trial to unit test an XML-RPC server
In-Reply-To: <368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>
References: <fuat7s$eo2$1@ger.gmane.org>
	<368574aa0804181319u13e4d5b6p1f362a308bb74fa8@mail.gmail.com>
Message-ID: <fuihq1$f9j$1@ger.gmane.org>

Drew Smathers wrote:
> One question: are you really not returning each Deferred from your
> test methods, or was this a typo in the above?

Ahhh!  Good catch; yes, I do return the deferreds -- I just forgot to 
copy the "return d" line to the example; thanks!

-- 
Don Dwiggins
Advanced Publishing Technology




From nebpro at gmail.com  Mon Apr 21 12:14:59 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:14:59 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
	<60ed19d40804210816o11287487ydc973c6002b6229f@mail.gmail.com>
Message-ID: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>

I used the installer from the http://twistedmatrix.com/trac/., and I am
running on Windows XP platform.
On Mon, Apr 21, 2008 at 11:16 AM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> > Hi,
> >
> > I am having problem compiling twisted sample codes. It gives me "Import
> > Error" errors (i.e. ImportError: No module named web.client). I really
> > appreciate any suggestions. Thank you.
>
> How did you install Twisted? What platform are you running this on?
>
>
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/9bd8c15d/attachment.html>

From exarkun at divmod.com  Mon Apr 21 12:22:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Apr 2008 14:22:11 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>
Message-ID: <20080421182211.6859.1153655145.divmod.quotient.33154@ohm>

On Mon, 21 Apr 2008 14:14:59 -0400, Ben <nebpro at gmail.com> wrote:
>I used the installer from the http://twistedmatrix.com/trac/., and I am
>running on Windows XP platform.

Which installer?  There's more than one.  If you used the Twisted Core
installer, then you don't have such things as twisted.web.  Try the full
Twisted installer instead, which includes all of Twisted instead of only
some of Twisted.  The subproject installers, such as the one for Twisted
Core, are only useful if you know exactly which subset of Twisted you're
using and have a low-storage environment, where you can't afford to have
all of Twisted.

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 21 12:34:49 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 21 Apr 2008 14:34:49 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
Message-ID: <60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> Hi,
>
> I am having problem compiling twisted sample codes. It gives me "Import
> Error" errors (i.e. ImportError: No module named web.client). I really
> appreciate any suggestions. Thank you.

If it's "No module named web.client", it sounds a lot like you named a
file "twisted.py". That's a bad idea; it will conflict with the
toplevel "twisted" package. Is this what you did? If you did, make
sure you delete twisted.py and twisted.pyc.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From nebpro at gmail.com  Mon Apr 21 12:40:45 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:40:45 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <20080421182211.6859.1153655145.divmod.quotient.33154@ohm>
References: <e5f41cb30804211114i7ab4742ct1335044e65c5459c@mail.gmail.com>
	<20080421182211.6859.1153655145.divmod.quotient.33154@ohm>
Message-ID: <e5f41cb30804211140g20e7acdajc7e49e5f061b1c62@mail.gmail.com>

Here is the installer that i used: Twisted 8.0.1 for Python
2.5<http://tmrc.mit.edu/mirror/twisted/Twisted/8.0/Twisted_NoDocs-8.0.1.win32-py2.5.exe>(for
Windows). I browse through the "C:\Python25\Lib\site-packages" folder
to make sure that the twisted library is installed. And they are. I can go
to "C:\Python25\Lib\site-packages\twisted\web" and find client.py file. It
seems that Python unable to find the path for importing the twisted module
when it is compiling. So I double check the PATH on the environment
variables to make sure the path is correctly in there (i.e. ; C:\Python25),
and it is set correctly there. So I am pretty confused. Any suggestions are
welcomed.

-Ben

On Mon, Apr 21, 2008 at 2:22 PM, Jean-Paul Calderone <exarkun at divmod.com>
wrote:

> On Mon, 21 Apr 2008 14:14:59 -0400, Ben <nebpro at gmail.com> wrote:
>
> > I used the installer from the http://twistedmatrix.com/trac/., and I am
> > running on Windows XP platform.
> >
>
> Which installer?  There's more than one.  If you used the Twisted Core
> installer, then you don't have such things as twisted.web.  Try the full
> Twisted installer instead, which includes all of Twisted instead of only
> some of Twisted.  The subproject installers, such as the one for Twisted
> Core, are only useful if you know exactly which subset of Twisted you're
> using and have a low-storage environment, where you can't afford to have
> all of Twisted.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/488c0dba/attachment.html>

From nebpro at gmail.com  Mon Apr 21 12:53:38 2008
From: nebpro at gmail.com (Ben)
Date: Mon, 21 Apr 2008 14:53:38 -0400
Subject: [Twisted-Python] "Import Error" after installing twisted matrix
In-Reply-To: <60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>
References: <e5f41cb30804210807i6042c519ye93e1b1c26ae4449@mail.gmail.com>
	<60ed19d40804211134g8c4b507l7421cc84b944b890@mail.gmail.com>
Message-ID: <e5f41cb30804211153v36a263ddi2bf8729b6f52dcc3@mail.gmail.com>

No. But that is what I thought too. I named my file something like
twisted_indie.py to make sure there is no conflict with names.

On Mon, Apr 21, 2008 at 2:34 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Mon, Apr 21, 2008 at 11:07 AM, Ben <nebpro at gmail.com> wrote:
> > Hi,
> >
> > I am having problem compiling twisted sample codes. It gives me "Import
> > Error" errors (i.e. ImportError: No module named web.client). I really
> > appreciate any suggestions. Thank you.
>
> If it's "No module named web.client", it sounds a lot like you named a
> file "twisted.py". That's a bad idea; it will conflict with the
> toplevel "twisted" package. Is this what you did? If you did, make
> sure you delete twisted.py and twisted.pyc.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/1c08b533/attachment.html>

From inhahe at gmail.com  Mon Apr 21 15:47:16 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 17:47:16 -0400
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
Message-ID: <da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>

i gather that twisted web is http 1.0, and http 1.0 doesn't support http
pipelining, so i assume twisted web doesn't support it
twisted web2 says it fully supports 1.1, and 1.1 servers are required to
support http pipelining, so i assume twisted web2 supports it
so with a client that supports pipelining, wouldn't twisted web2 be much
faster (for pages that have a lot of small images)?
also, does twisted web2 support pipelining responses or only requests?

On Mon, Apr 21, 2008 at 8:20 AM, inhahe <inhahe at gmail.com> wrote:

> i may not understand all this very well, but,
> if i remember correctly, http 1.1 supports multiple requests over the same
> connection to speed things up.. but
> http://twistedmatrix.com/projects/web/documentation/howto/web-overview.htmlleads me to believe it closes the connection after each request.. but
> twisted web2, otoh, is supposed to have full 1.1 support.. does this mean it
> won't close the connection after each request?  if so, i'd like to use it
> for that reason, but then, according to
> http://twistedmatrix.com/trac/wiki/TwistedWeb2 web2 isn't very fast. i
> don't know if their benchmarks take under consideration realistic conditions
> in which multiple requests can be made over a single tcp connection.
> so should i use web2, and if not, is there any way to do what i want using
> twisted.web, and if not, what python web framework can i use that does do
> what i want and is otherwise as fast as twisted web?
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/4eedc9a6/attachment.html>

From maarten at treewalker.org  Mon Apr 21 18:25:15 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 22 Apr 2008 02:25:15 +0200
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
	<da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
Message-ID: <200804220225.20228.maarten@treewalker.org>

On Monday 21 April 2008, inhahe wrote:
> i gather that twisted web is http 1.0, and http 1.0 doesn't support http
> pipelining, so i assume twisted web doesn't support it

Actually, twisted.web does support some HTTP 1.1 features. Looking at 
twisted/web/http.py, I think pipelining is supported.

> twisted web2 says it fully supports 1.1, and 1.1 servers are required to
> support http pipelining, so i assume twisted web2 supports it
> so with a client that supports pipelining, wouldn't twisted web2 be much
> faster (for pages that have a lot of small images)?

In our setup, we use Apache to serve all static data. For dynamic data, 
Apache acts as a reverse proxy and forwards requests to twistd.

> also, does twisted web2 support pipelining responses or only requests?

As far as I know, pipelining means re-using the same TCP connection for 
multiple request/response cycles. If the requests are pipelined, there is 
only a single TCP socket open through which responses can be sent, so they 
must be pipelined as well.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080422/27cc1219/attachment.sig>

From inhahe at gmail.com  Mon Apr 21 21:42:12 2008
From: inhahe at gmail.com (inhahe)
Date: Mon, 21 Apr 2008 23:42:12 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
Message-ID: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>

What is the best (fastest) way to serve static files with Twisted?  Or would
using Apache or lighttpd for static files significantly speed it up (i don't
know how to do this, btw)?
Thx.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080421/d963ef1f/attachment.html>

From duncan.mcgreggor at gmail.com  Mon Apr 21 22:52:48 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 21 Apr 2008 23:52:48 -0500
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
References: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
Message-ID: <1208839968.4882.326.camel@gondor>


On Mon, 2008-04-21 at 11:03 -0400, Jean-Paul Calderone wrote:
> Hello all,
> 
> The first TSF sponsored Twisted sprint is done.  Here's a quick rundown of
> some of the things that happened.
> 
>   * Glyph Lefkowitz made a huge dent in the current review queue, dealing
>     with more than half of the outstanding tickets.
> 
>   * After some discussion about the value of a bugfix-only release vs a
>     normal bugfix and feature enhancement release, Christopher Armstrong
>     got the wheels rolling on 8.1.0 (which will be of the latter type).
>     You probably already saw the pre1 announcement.  Give it a spin!
> 
>   * Paul Swartz continued to strive towards the goal of Twisted Conch
>     being as soft and cuddly as a little bunny rabbit.
> 
>   * Ying Li worked on permission and ownership features for FilePath.
> 
>   * Jeff Mancuso came by for a while and talked about Twisted Conch
>     performance (and did some benchmarks) and SFTP access control
>     issues.
> 
>   * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
>     an API to get arbitrary X509v3 extensions.
> 
>   * Itamar Shtull-Trauring helped out all around.
> 
>   * I finished fixing some reactor startup and shutdown issues introduced
>     in 8.0.
> 
> We also discussed Twisted's backwards compatibility policy, guided
> mostly by Jonathan Lange's email of the 18th to this list, with the
> goal of creating an official document.
> 
> The next sprint is tentatively scheduled for May 18th at the Divmod office.
> 
> Jean-Paul

JP,

Thanks for writing this up! And thanks to the Twisted folks who were
able to sprint, either virtually or in meatspace. I was off the nets
this weekend, so this was really great to read :-)

d




From mailing_lists at evotex.ch  Tue Apr 22 00:17:54 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 08:17:54 +0200
Subject: [Twisted-Python] April 20th Sprint Report
In-Reply-To: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
References: <20080421150346.6859.1367590115.divmod.quotient.33117@ohm>
Message-ID: <480D8312.2060003@evotex.ch>

Jean-Paul Calderone wrote:
> Hello all,
>
> The first TSF sponsored Twisted sprint is done.  Here's a quick 
> rundown of
> some of the things that happened.
>
>  * Glyph Lefkowitz made a huge dent in the current review queue, dealing
>    with more than half of the outstanding tickets.
>
>  * After some discussion about the value of a bugfix-only release vs a
>    normal bugfix and feature enhancement release, Christopher Armstrong
>    got the wheels rolling on 8.1.0 (which will be of the latter type).
>    You probably already saw the pre1 announcement.  Give it a spin!
>
>  * Paul Swartz continued to strive towards the goal of Twisted Conch
>    being as soft and cuddly as a little bunny rabbit.
>
>  * Ying Li worked on permission and ownership features for FilePath.
>
>  * Jeff Mancuso came by for a while and talked about Twisted Conch
>    performance (and did some benchmarks) and SFTP access control
>    issues.
>
>  * Roland Hedberg got his hands dirty in pyOpenSSL working on adding
>    an API to get arbitrary X509v3 extensions.
>
>  * Itamar Shtull-Trauring helped out all around.
>
>  * I finished fixing some reactor startup and shutdown issues introduced
>    in 8.0.
>
> We also discussed Twisted's backwards compatibility policy, guided
> mostly by Jonathan Lange's email of the 18th to this list, with the
> goal of creating an official document.
>
> The next sprint is tentatively scheduled for May 18th at the Divmod 
> office.
>
> Jean-Paul
Thanks to all of you for your commitment to great software and a great 
community!

Gabriel



From mailing_lists at evotex.ch  Tue Apr 22 03:02:19 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 11:02:19 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
Message-ID: <480DA99B.9090404@evotex.ch>

Hello,

I keep on getting stopProducing()  called on my push producer (yes, I'm 
going to try it anyways). From what I read, that means that the consumer 
died, correct? What can make the consumer die? My consumer is a TCP/IP 
transport and all my tests are done through the loopback interface, thus 
the network can't be down, any ideas?

Gabriel



From mailing_lists at evotex.ch  Tue Apr 22 03:42:32 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 11:42:32 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <480DA99B.9090404@evotex.ch>
References: <480DA99B.9090404@evotex.ch>
Message-ID: <480DB308.9080900@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I keep on getting stopProducing()  called on my push producer (yes, 
> I'm going to try it anyways). From what I read, that means that the 
> consumer died, correct? What can make the consumer die? My consumer is 
> a TCP/IP transport and all my tests are done through the loopback 
> interface, thus the network can't be down, any ideas?
>
> Gabriel
>
Is there a way to log the execution of twisted? I'm getting a connection 
loss and I don't know where it comes from and why. I'm not explicitly 
calling looseConnection.

Thanks



From mithrandi at mithrandi.net  Tue Apr 22 04:48:15 2008
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 22 Apr 2008 12:48:15 +0200
Subject: [Twisted-Python] Re: question about twisted web2
In-Reply-To: <200804220225.20228.maarten@treewalker.org>
References: <da776a8c0804210520m29394c21t907558f5b178fb41@mail.gmail.com>
	<da776a8c0804211447v4f4c280bn22f5f267f4111ba8@mail.gmail.com>
	<200804220225.20228.maarten@treewalker.org>
Message-ID: <20080422104815.GA8550@mithrandi.net>

* Maarten ter Huurne <maarten at treewalker.org> [2008-04-22 02:25:15 +0200]:

> > also, does twisted web2 support pipelining responses or only requests?
> 
> As far as I know, pipelining means re-using the same TCP connection for 
> multiple request/response cycles.

Pipelining refers to sending another request before the previous
response has been received; connection reuse is a separate feature,
although obviously pipelining relies on connection reuse.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080422/faecff36/attachment.sig>

From sipickles at hotmail.com  Tue Apr 22 07:11:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 14:11:02 +0100
Subject: [Twisted-Python] Location of remote errors with PB
Message-ID: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>

Hello,

my app uses twisted.pb to communicate across its parts.

Is there any way a caller can find out the whole traceback rather than 
just the description( eg "*global name 'true' is not defined*"?)

This is so I can have help debugging.

Thanks

Si


-- 
Linux Counter: User# 424693 






From drew.smathers at gmail.com  Tue Apr 22 08:28:42 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 22 Apr 2008 10:28:42 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
In-Reply-To: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
References: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
Message-ID: <368574aa0804220728r44e178f5qa95fe7b6e18aea97@mail.gmail.com>

On Mon, Apr 21, 2008 at 11:42 PM, inhahe <inhahe at gmail.com> wrote:
> What is the best (fastest) way to serve static files with Twisted?

twisted.web.static.StaticFile

> Or would using Apache or lighttpd for static files significantly speed it up (i don't
> know how to do this, btw)?
> Thx.

Both apache and lighttpd, of course, are going to beet Twisted in
terms of static file-serving speed.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/ \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\ /\\\ \\
/ /\\\ /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
 d.p.s



From andrewfr_ice at yahoo.com  Tue Apr 22 08:40:22 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 22 Apr 2008 07:40:22 -0700 (PDT)
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <E1JoIHn-0002ju-S3@cube.twistedmatrix.com>
Message-ID: <743985.24485.qm@web34205.mail.mud.yahoo.com>

Hi Gabriel:

>Is there a way to log the execution of twisted? I'm
>getting a connection loss and I don't know where it
>comes from and why. I'm not explicitly calling
>looseConnection.

I think the easiest way to do logging is

from   twisted.python                              
import log

...

log.startLogging(a file descriptor - i.e., sys.stdout)

Twisted will start emitting log messages. You can use
log.msg() for additional messages.

I also found using a debugger is a slow but good way
to trace through what Twisted is doing.

Cheers,
Andrew





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ



From phil at bubblehouse.org  Tue Apr 22 08:51:18 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 22 Apr 2008 10:51:18 -0400
Subject: [Twisted-Python] what is the best way to serve static files?
In-Reply-To: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
References: <da776a8c0804212042g32aec5cw4fe37d05452f8846@mail.gmail.com>
Message-ID: <52799C28-82FF-4D96-967C-B90861A740D2@bubblehouse.org>


On Apr 21, 2008, at 11:42 PM, inhahe wrote:
> What is the best (fastest) way to serve static files with Twisted?   
> Or would using Apache or lighttpd for static files significantly  
> speed it up (i don't know how to do this, btw)?
> Thx.

If you want to serve your static files with apache, you'll want to  
look into the ReverseProxy directive. Then you can just define Alias  
directives that override your various asset URLs.

I like having my Twisted web app setup so it can serve static files,  
using the same URLs I have aliased in Apache. Then I can omit Apache  
for development, but use it for production without changing any paths.

-phil



From mailing_lists at evotex.ch  Tue Apr 22 08:55:16 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 16:55:16 +0200
Subject: [Twisted-Python] Why is stopProducing() called?
In-Reply-To: <743985.24485.qm@web34205.mail.mud.yahoo.com>
References: <743985.24485.qm@web34205.mail.mud.yahoo.com>
Message-ID: <480DFC54.4010702@evotex.ch>

Andrew Francis wrote:
> Hi Gabriel:
>
>   
>> Is there a way to log the execution of twisted? I'm
>> getting a connection loss and I don't know where it
>> comes from and why. I'm not explicitly calling
>> looseConnection.
>>     
>
> I think the easiest way to do logging is
>
> from   twisted.python                              
> import log
>
> ...
>
> log.startLogging(a file descriptor - i.e., sys.stdout)
>
> Twisted will start emitting log messages. You can use
> log.msg() for additional messages.
>
> I also found using a debugger is a slow but good way
> to trace through what Twisted is doing.
>
> Cheers,
> Andrew
>
>
>   
Thank you Andrew!

Gabriel



From yqiang at gmail.com  Tue Apr 22 09:08:08 2008
From: yqiang at gmail.com (Yi Qiang)
Date: Tue, 22 Apr 2008 08:08:08 -0700
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
Message-ID: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>

When you create your server factory, you can optionally pass in a
parameter called unsafeTracebacks=True. This will give the client the
whole traceback I believe.

    client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)

I think it's called unsafe because it can potentially reveal quite a
bit information about your server, someone correct me if I'm wrong
though :-)

Cheers,
Yi

http://yiqiang.org	

On Tue, Apr 22, 2008 at 6:11 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hello,
>
>  my app uses twisted.pb to communicate across its parts.
>
>  Is there any way a caller can find out the whole traceback rather than just
> the description( eg "*global name 'true' is not defined*"?)
>
>  This is so I can have help debugging.
>
>  Thanks
>
>  Si
>
>
>  --
>  Linux Counter: User# 424693
>
>
>
>  _______________________________________________
>  Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From sipickles at hotmail.com  Tue Apr 22 11:48:43 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 18:48:43 +0100
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
	<3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
Message-ID: <BAY114-DAV29E1FE64EEE87DC7483CABEE00@phx.gbl>

Yi Qiang wrote:
> When you create your server factory, you can optionally pass in a
> parameter called unsafeTracebacks=True. This will give the client the
> whole traceback I believe.
>
>     client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)
>
>
>   
Thanks Yi, I hadn't clocked that.

After it ran with PBServerFactory, I checked the docs for 
PBClientFactory which claim to have a similar parameter for __init__

So I did this with my inherited class:

class pbFactory(pb.PBClientFactory):
    def __init__(self, name, signOn):
        self.name = name
        self.DoSignOn = signOn
        pb.PBClientFactory.__init__(self, unsafeTracebacks = True)

But got this:

    pb.PBClientFactory.__init__(self, unsafeTracebacks = True)
exceptions.TypeError: __init__() got an unexpected keyword argument 
'unsafeTracebacks'

I guess I should post a ticket about this?

First time for everything!

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Tue Apr 22 11:58:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 22 Apr 2008 13:58:21 -0400
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <BAY114-DAV29E1FE64EEE87DC7483CABEE00@phx.gbl>
Message-ID: <20080422175821.6859.133687420.divmod.quotient.33620@ohm>

On Tue, 22 Apr 2008 18:48:43 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
> [snip]
>
>But got this:
>
>    pb.PBClientFactory.__init__(self, unsafeTracebacks = True)
>exceptions.TypeError: __init__() got an unexpected keyword argument 
>'unsafeTracebacks'
>
>I guess I should post a ticket about this?
>
>First time for everything!

Are you using Twisted 2.5?  unsafeTracebacks wasn't a parameter to
PBClientFactory.__init__ in 2.5, though you can still set it as an
attribute on an instance to achieve that effect.  Twisted 8.0 adds
that parameter to __init__, and the API documentation currently on
the website is for Twisted 8.0.

Jean-Paul



From sipickles at hotmail.com  Tue Apr 22 12:08:13 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Tue, 22 Apr 2008 19:08:13 +0100
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
Message-ID: <BAY114-DAV2EA04B5FD8BE631DE4BF8BEE00@phx.gbl>

Hi,

Out of curiosity, are there plans to update the Ubuntu Repositories with 
v8? It is still at 2.5.0

I was having trouble building the latest version since Hardy is missing 
the python-dev package at present.

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Tue Apr 22 12:26:06 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 22 Apr 2008 14:26:06 -0400
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <BAY114-DAV2EA04B5FD8BE631DE4BF8BEE00@phx.gbl>
Message-ID: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>

On Tue, 22 Apr 2008 19:08:13 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>Hi,
>
>Out of curiosity, are there plans to update the Ubuntu Repositories with v8? 
>It is still at 2.5.0
>
>I was having trouble building the latest version since Hardy is missing the 
>python-dev package at present.
>

We don't build the Debian/Ubuntu packages for Twisted.  You probably need
to ask the Debian maintainer.

Jean-Paul



From mailing_lists at evotex.ch  Tue Apr 22 13:07:39 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 22 Apr 2008 21:07:39 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
Message-ID: <480E377B.9080903@evotex.ch>

Hello,

I have been trying to use the producer/consumer paradigm to transfer 
large strings. I've been having trouble because I have strange things 
going on, but I now suspect it isn't the P/C that's not working, because 
it works fine with smaller strings than the ones I'm having trouble 
with, so I suspect the problem comes from elsewhere. What happens is it 
starts off fine, but then the destination at some point only gets part 
of the string but the source has already sent everything, closed it's 
transport and called stopProducing(). Could there be some internal 
buffering problem, like I'm sending too much data at too high of a 
throughput, or maybe something like some sort of max time a socket can 
stay open or something? If I tell it to split the string up into smaller 
parts, it doesn't change anything, if I make the string smaller, 
whatever the size of each chunk, it transfers fine.

Thanks,
Gabriel



From george at ringdevelopment.com  Tue Apr 22 14:24:25 2008
From: george at ringdevelopment.com (George Pauly)
Date: Tue, 22 Apr 2008 16:24:25 -0400
Subject: [Twisted-Python] Location of remote errors with PB
In-Reply-To: <3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
References: <BAY114-DAV96B9370285630AADBD7D6BEE00@phx.gbl>
	<3af8969a0804220808w502484a9tc16e4841ddb4d5c9@mail.gmail.com>
Message-ID: <1208895865.27701.48.camel@localhost.localdomain>

On Tue, 2008-04-22 at 08:08 -0700, Yi Qiang wrote:
> When you create your server factory, you can optionally pass in a
> parameter called unsafeTracebacks=True. This will give the client the
> whole traceback I believe.
> 
>     client_factory = pb.PBServerFactory(p, unsafeTracebacks=True)
> 
> I think it's called unsafe because it can potentially reveal quite a
> bit information about your server, someone correct me if I'm wrong
> though :-)
> 
> Cheers,
> Yi
> 
> http://yiqiang.org	
> 
> On Tue, Apr 22, 2008 at 6:11 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> > Hello,
> >
> >  my app uses twisted.pb to communicate across its parts.
> >
> >  Is there any way a caller can find out the whole traceback rather than just
> > the description( eg "*global name 'true' is not defined*"?)
> >
> >  This is so I can have help debugging.
> >
> >  Thanks
> >
> >  Si
> >
> >
> >  --
> >  Linux Counter: User# 424693
> >
> >
> >
> >  _______________________________________________
> >  Twisted-Python mailing list
> >  Twisted-Python at twistedmatrix.com
> >  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From hoganxian at gmail.com  Tue Apr 22 17:32:14 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Wed, 23 Apr 2008 07:32:14 +0800
Subject: [Twisted-Python] Big/Little-endian problem
Message-ID: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>

Hi All,

I am newbie to Twisted.

In Twisted, do the user need to take care of the big/little-endian issues?

For example, I receive a buffer via UDP which actually represents a unsinged
int value. So, how can i convert this buffer[0:1] to unsigned int ?

Thanks,
Xian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080423/8184cdab/attachment.html>

From radix at twistedmatrix.com  Tue Apr 22 17:41:08 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 22 Apr 2008 19:41:08 -0400
Subject: [Twisted-Python] Big/Little-endian problem
In-Reply-To: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
References: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
Message-ID: <60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>

On Tue, Apr 22, 2008 at 7:32 PM, Xian Chen <hoganxian at gmail.com> wrote:
> In Twisted, do the user need to take care of the big/little-endian issues?

The basic Twisted protocol system is purely in terms of bytes,
represented by the Python 'str' type.

> For example, I receive a buffer via UDP which actually represents a unsinged
> int value. So, how can i convert this buffer[0:1] to unsigned int ?

Check out the 'struct' Python module,
http://docs.python.org/lib/module-struct.html

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From hoganxian at gmail.com  Tue Apr 22 17:57:17 2008
From: hoganxian at gmail.com (Xian Chen)
Date: Wed, 23 Apr 2008 07:57:17 +0800
Subject: [Twisted-Python] Big/Little-endian problem
In-Reply-To: <60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>
References: <a2dd20fc0804221632n3601c768q14999214543da1d8@mail.gmail.com>
	<60ed19d40804221641t5dc29e07ra141f08f4c0e5639@mail.gmail.com>
Message-ID: <a2dd20fc0804221657s52fe1265k537dde8f2a740809@mail.gmail.com>

Thanks~~

On Wed, Apr 23, 2008 at 7:41 AM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Tue, Apr 22, 2008 at 7:32 PM, Xian Chen <hoganxian at gmail.com> wrote:
> > In Twisted, do the user need to take care of the big/little-endian
> issues?
>
> The basic Twisted protocol system is purely in terms of bytes,
> represented by the Python 'str' type.
>
> > For example, I receive a buffer via UDP which actually represents a
> unsinged
> > int value. So, how can i convert this buffer[0:1] to unsigned int ?
>
> Check out the 'struct' Python module,
> http://docs.python.org/lib/module-struct.html
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080423/9ff78d04/attachment.html>

From kim at hawtin.net.au  Wed Apr 23 00:48:49 2008
From: kim at hawtin.net.au (Kim Hawtin)
Date: Wed, 23 Apr 2008 16:18:49 +0930
Subject: [Twisted-Python] Ubuntu Deb Packages
In-Reply-To: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>
References: <20080422182606.6859.1709708958.divmod.quotient.33633@ohm>
Message-ID: <480EDBD1.6040904@hawtin.net.au>

Jean-Paul Calderone wrote:
> On Tue, 22 Apr 2008 19:08:13 +0100, Simon Pickles
> <sipickles at hotmail.com> wrote:
>> Out of curiosity, are there plans to update the Ubuntu Repositories
>> with v8? It is still at 2.5.0
>>
>> I was having trouble building the latest version since Hardy is
>> missing the python-dev package at present.
> 
> We don't build the Debian/Ubuntu packages for Twisted.  You probably need
> to ask the Debian maintainer.

Perhaps the easiest way to find these folks is to check the Maintainer and
Original-Maintainer fields;

$ apt-cache search twisted
python-twisted - Event-based framework for internet applications (transitional
package)
python-twisted-bin - Event-based framework for internet applications
...
...

$ apt-cache show python-twisted
Package: python-twisted
Priority: extra
Section: python
Installed-Size: 60
Maintainer: Ubuntu Core Developers <ubuntu-devel-discuss at lists.ubuntu.com>
Original-Maintainer: Matthias Klose <doko at debian.org>
Architecture: all
Source: twisted
Version: 2.5.0-2build1
Depends: python-twisted-core (>= 2.5), python-twisted-conch (>= 1:0.8),
python-twisted-mail (>= 0.4), python-twisted-lore (>= 0.2),
python-twisted-names (>= 0.4), python-twisted-news (>= 0.3),
python-twisted-runner (>= 0.2), python-twisted-web (>= 0.7),
python-twisted-words (>= 0.5)
Filename: pool/main/t/twisted/python-twisted_2.5.0-2build1_all.deb
Size: 8958
MD5sum: e97b408484713fc1692b623824f61117
SHA1: 4f329a3c9bd020044ca64bb7d0b5f5fbe8ed34b9
SHA256: d7bb08cba2978d4aafea6a0822b9d7b7abcaf74ce6cdf011b54d34d52f322bac
Description: Event-based framework for internet applications (transitional
package)
 This is a transitional package that depends on the twisted core library and
 all the libraries split out to separate packages starting with Twisted-2.0.1.
Python-Version: all
Bugs: mailto:ubuntu-users at lists.ubuntu.com
Origin: Ubuntu

regards,

Kim



From mailing_lists at evotex.ch  Wed Apr 23 01:23:01 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 09:23:01 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480E377B.9080903@evotex.ch>
References: <480E377B.9080903@evotex.ch>
Message-ID: <480EE3D5.8060101@evotex.ch>

Gabriel Rossetti wrote:
> Hello,
>
> I have been trying to use the producer/consumer paradigm to transfer 
> large strings. I've been having trouble because I have strange things 
> going on, but I now suspect it isn't the P/C that's not working, 
> because it works fine with smaller strings than the ones I'm having 
> trouble with, so I suspect the problem comes from elsewhere. What 
> happens is it starts off fine, but then the destination at some point 
> only gets part of the string but the source has already sent 
> everything, closed it's transport and called stopProducing(). Could 
> there be some internal buffering problem, like I'm sending too much 
> data at too high of a throughput, or maybe something like some sort of 
> max time a socket can stay open or something? If I tell it to split 
> the string up into smaller parts, it doesn't change anything, if I 
> make the string smaller, whatever the size of each chunk, it transfers 
> fine.
>
> Thanks,
> Gabriel
>
I removed the P/C code and used the previous version and the problem 
persists, if I send a XML msg (very small XML part) with a data payload 
containing a string generated like this :

    initialMsg = "".join([str(x) for x in range(5000)])


which is 10374 bytes of data (including the XML), this makes me suspect 
that there is maybe some sort of buffer or something that is full and 
doesn't have the time to empty and twisted stops working or something. 
I'm using the 2.5 version since Ubuntu hasn't upgraded (and apparently 
won't upgrade until the lenny) their version yet and I can't get it to 
compile from source (yes, I installed python-dev and build-essentials), 
so maybe it's a problem only to this version. Does anyone have an Idea 
of what the problem is? I'm using the following code to send messages, I 
don't think that's the problem but you never know :

    def sendMessage(address, port, message, needAnswer=False):

        d = defer.Deferred() if needAnswer else None
       
        class MessageSender(Protocol):

            def sendMessage(self, msg):
                if domish.IElement.providedBy(msg):
                    msg = msg.toXml()
        
                if isinstance(msg, unicode):
                    msg = msg.encode('utf-8')
                   
                self.transport.write(msg)
               
            def dataReceived(self, data):
                d.callback(data)
           
        def gotProtocol(proto):
            proto.sendMessage(message)
            if(not needAnswer):
                proto.transport.loseConnection()

        c = ClientCreator(reactor, MessageSender)
        c.connectTCP(address, port).addCallback(gotProtocol)
        return d

   
Gabriel





From mailing_lists at evotex.ch  Wed Apr 23 02:41:29 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 10:41:29 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EE3D5.8060101@evotex.ch>
References: <480E377B.9080903@evotex.ch> <480EE3D5.8060101@evotex.ch>
Message-ID: <480EF639.3010008@evotex.ch>

Gabriel Rossetti wrote:
> Gabriel Rossetti wrote:
>> Hello,
>>
>> I have been trying to use the producer/consumer paradigm to transfer 
>> large strings. I've been having trouble because I have strange things 
>> going on, but I now suspect it isn't the P/C that's not working, 
>> because it works fine with smaller strings than the ones I'm having 
>> trouble with, so I suspect the problem comes from elsewhere. What 
>> happens is it starts off fine, but then the destination at some point 
>> only gets part of the string but the source has already sent 
>> everything, closed it's transport and called stopProducing(). Could 
>> there be some internal buffering problem, like I'm sending too much 
>> data at too high of a throughput, or maybe something like some sort 
>> of max time a socket can stay open or something? If I tell it to 
>> split the string up into smaller parts, it doesn't change anything, 
>> if I make the string smaller, whatever the size of each chunk, it 
>> transfers fine.
>>
>> Thanks,
>> Gabriel
>>
> I removed the P/C code and used the previous version and the problem 
> persists, if I send a XML msg (very small XML part) with a data 
> payload containing a string generated like this :
>
>    initialMsg = "".join([str(x) for x in range(5000)])
>
>
> which is 10374 bytes of data (including the XML), this makes me 
> suspect that there is maybe some sort of buffer or something that is 
> full and doesn't have the time to empty and twisted stops working or 
> something. I'm using the 2.5 version since Ubuntu hasn't upgraded (and 
> apparently won't upgrade until the lenny) their version yet and I 
> can't get it to compile from source (yes, I installed python-dev and 
> build-essentials), so maybe it's a problem only to this version. Does 
> anyone have an Idea of what the problem is? I'm using the following 
> code to send messages, I don't think that's the problem but you never 
> know :
>
>    def sendMessage(address, port, message, needAnswer=False):
>
>        d = defer.Deferred() if needAnswer else None
>              class MessageSender(Protocol):
>
>            def sendMessage(self, msg):
>                if domish.IElement.providedBy(msg):
>                    msg = msg.toXml()
>                       if isinstance(msg, unicode):
>                    msg = msg.encode('utf-8')
>                                  self.transport.write(msg)
>                          def dataReceived(self, data):
>                d.callback(data)
>                  def gotProtocol(proto):
>            proto.sendMessage(message)
>            if(not needAnswer):
>                proto.transport.loseConnection()
>
>        c = ClientCreator(reactor, MessageSender)
>        c.connectTCP(address, port).addCallback(gotProtocol)
>        return d
>
>   Gabriel
>
>
Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up 
to 16k, after that it splits the message up, thus this would explain the 
lockup, since the app expects a whole XML message and can't process the 
second part correctly. So if I understand it correctly, even when I use 
the P/C paradigm, it waits until the buffer is full before sending the 
message, so when I get the message on the other side, I only get part of 
it, the other half is a new message/data arrival, and thus like I said 
above, the XML is not correct.

Does anyone have an idea of how to solve this?

Thanks,
Gabriel



From chris.yan at saybot.com  Wed Apr 23 04:20:59 2008
From: chris.yan at saybot.com (Chris)
Date: Wed, 23 Apr 2008 18:20:59 +0800
Subject: [Twisted-Python] about using twisted to write a RT server.
Message-ID: <480F0D8B.7070109@saybot.com>

Hi everyone,
I want to write a server,it works just like this:
1.client will connect to the server,maybe with some auth information.
2.the server verify the client,if it's ok,accept the connection.
3.the client starts to sent some binary data to server buffer by buffer
,the server will use it to calculate in real time.
4.when all the data is sent,the client will tell the server no data any
more.
5.the server gets a result from the data,and sends the result to the
client(the client is ASCII code)
6.server shuts down the connection.

first,I want to know which protocol I should use?the LineReceiver is ok
for this?

second,I know the LineReceiver protocol can switch between line mode and
row mode,I think I will use line mode to send the control command,and
use raw mode to sent the data,but how the client can inform the server
which mode should use?because sometimes the data which is received in
raw mode is exactly a legal command,but it is just only a part of the data.

third,I don't know very much about how to send the binary data,I heard I
should use struct modul,is it right?

any hint is helpful,please just give me a direction,I hope my question
will not take too much time to answer,thanks a lot.

Regards
Chris




From exarkun at divmod.com  Wed Apr 23 04:26:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 06:26:27 -0400
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EF639.3010008@evotex.ch>
Message-ID: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>

On Wed, 23 Apr 2008 10:41:29 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up to 
>16k, after that it splits the message up, thus this would explain the 
>lockup, since the app expects a whole XML message and can't process the 
>second part correctly. So if I understand it correctly, even when I use the 
>P/C paradigm, it waits until the buffer is full before sending the message, 
>so when I get the message on the other side, I only get part of it, the 
>other half is a new message/data arrival, and thus like I said above, the 
>XML is not correct.
>
>Does anyone have an idea of how to solve this?

This can't be solved.  From the way you describe it, the software on the
receiving end is simply broken.  TCP provides no guarantees about how much
data will be delivered to the recipient at a time, regardless of how much
is sent at a time.  Every participant along the delivery path between the
sender and the recipient is allowed to break packets into smaller pieces
or coalesce packets into larger pieces.  The recipient *must* be able to
handle incomplete messages by waiting for more bytes.  It must also be able
to handle packets which contain bytes from more than one message.

There are a number of ways to address this.  Almost all of them involve
changing the software running on the peer you're sending messages to and
the protocol the two programs are using to talk to each other.  For
example, you can send a length prefix before each message allowing the
recipient to buffer up the correct number of bytes before trying to deal
with them.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 05:11:21 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 13:11:21 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>
References: <20080423102627.6859.1577299059.divmod.quotient.33980@ohm>
Message-ID: <480F1959.2060003@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 10:41:29 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send 
>> up to 16k, after that it splits the message up, thus this would 
>> explain the lockup, since the app expects a whole XML message and 
>> can't process the second part correctly. So if I understand it 
>> correctly, even when I use the P/C paradigm, it waits until the 
>> buffer is full before sending the message, so when I get the message 
>> on the other side, I only get part of it, the other half is a new 
>> message/data arrival, and thus like I said above, the XML is not 
>> correct.
>>
>> Does anyone have an idea of how to solve this?
>
> This can't be solved.  From the way you describe it, the software on the
> receiving end is simply broken.  TCP provides no guarantees about how 
> much
> data will be delivered to the recipient at a time, regardless of how much
> is sent at a time.  Every participant along the delivery path between the
> sender and the recipient is allowed to break packets into smaller pieces
> or coalesce packets into larger pieces.  The recipient *must* be able to
> handle incomplete messages by waiting for more bytes.  It must also be 
> able
> to handle packets which contain bytes from more than one message.
>
> There are a number of ways to address this.  Almost all of them involve
> changing the software running on the peer you're sending messages to and
> the protocol the two programs are using to talk to each other.  For
> example, you can send a length prefix before each message allowing the
> recipient to buffer up the correct number of bytes before trying to deal
> with them.
>
> Jean-Paul
>
Thank you Jean-Paul, I'll do something like that then and fix the peer, 
I didn't realize that and thought I could get the message as a whole 
somehow. At lease I know my P/C is working :-)

Gabriel



From roland.hedberg at adm.umu.se  Wed Apr 23 05:50:27 2008
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 23 Apr 2008 13:50:27 +0200
Subject: [Twisted-Python] Re: therve changed u'Changes to TwistedNames to
 make it support NAPTR records'
In-Reply-To: <E1JoaiB-0002yw-9S@cube.twistedmatrix.com>
References: <E1JoaiB-0002yw-9S@cube.twistedmatrix.com>
Message-ID: <480F2283.2010702@adm.umu.se>

trac at twistedmatrix.com wrote:
> Ticket u'Changes to TwistedNames to make it support NAPTR records'
> changed by therve <therve at free.fr>:
> 
> First, thanks a lot for your contribution. I'm sorry we lost some
> much time handling it. I think it's already in pretty good shape, but
> it would need more documentation and tests to land in trunk. Are you
> willing to help on these topics? 

Could do that!

What would the process be ?

-- Roland



From mailing_lists at evotex.ch  Wed Apr 23 07:31:08 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 15:31:08 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
Message-ID: <480F3A1C.2020403@evotex.ch>

Hello,

I was looking at pcp.py and I noticed this :

    def resumeProducing(self):
        self.paused = False
        if self._buffer:
            data = ''.join(self._buffer)
            bytesSent = self._writeSomeData(data)
            if bytesSent < len(data):
                unsent = data[bytesSent:]
                assert not self.iAmStreaming, (
                    "Streaming producer did not write all its data.")
                self._buffer[:] = [unsent]
            else:
                self._buffer[:] = []
        else:
            bytesSent = 0
...


in the ProducerConsumerProxy class, self._writeSomeData(data) returns 
the length of what was written, but in the test right afterwards 
bytesSent is compared to len(data), but they both have the same value, 
shouldn't it be "if bytesSent < len(self._buffer):" instead?

Gabriel



From maarten at treewalker.org  Wed Apr 23 08:02:37 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 23 Apr 2008 16:02:37 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <480EF639.3010008@evotex.ch>
References: <480E377B.9080903@evotex.ch> <480EE3D5.8060101@evotex.ch>
	<480EF639.3010008@evotex.ch>
Message-ID: <200804231602.43214.maarten@treewalker.org>

On Wednesday 23 April 2008, Gabriel Rossetti wrote:

> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up
> to 16k, after that it splits the message up, thus this would explain the
> lockup, since the app expects a whole XML message and can't process the
> second part correctly.

If you use an event-based XML parser (like something that implements SAX), 
you can simply feed it the bytes as they come in from the network. The XML 
tag nesting will tell you when the entire message has been received, which 
is when you receive the "close tag" callback for the root tag.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080423/b85b53be/attachment.sig>

From exarkun at divmod.com  Wed Apr 23 08:29:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 10:29:57 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F3A1C.2020403@evotex.ch>
Message-ID: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>

On Wed, 23 Apr 2008 15:31:08 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Hello,
>
>I was looking at pcp.py and I noticed this :
>
>    def resumeProducing(self):
>        self.paused = False
>        if self._buffer:
>            data = ''.join(self._buffer)
>            bytesSent = self._writeSomeData(data)
>            if bytesSent < len(data):
>                unsent = data[bytesSent:]
>                assert not self.iAmStreaming, (
>                    "Streaming producer did not write all its data.")
>                self._buffer[:] = [unsent]
>            else:
>                self._buffer[:] = []
>        else:
>            bytesSent = 0
>...
>
>
>in the ProducerConsumerProxy class, self._writeSomeData(data) returns the 
>length of what was written, but in the test right afterwards bytesSent is 
>compared to len(data), but they both have the same value, shouldn't it be 
>"if bytesSent < len(self._buffer):" instead?

`self._buffer´ is a list of strings (hence the join call to create `data´)
so comparing the number of bytes sent to its length wouldn't make sense.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 08:48:26 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 16:48:26 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>
References: <20080423142957.6859.1305487379.divmod.quotient.34062@ohm>
Message-ID: <480F4C3A.7000002@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 15:31:08 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Hello,
>>
>> I was looking at pcp.py and I noticed this :
>>
>>    def resumeProducing(self):
>>        self.paused = False
>>        if self._buffer:
>>            data = ''.join(self._buffer)
>>            bytesSent = self._writeSomeData(data)
>>            if bytesSent < len(data):
>>                unsent = data[bytesSent:]
>>                assert not self.iAmStreaming, (
>>                    "Streaming producer did not write all its data.")
>>                self._buffer[:] = [unsent]
>>            else:
>>                self._buffer[:] = []
>>        else:
>>            bytesSent = 0
>> ...
>>
>>
>> in the ProducerConsumerProxy class, self._writeSomeData(data) returns 
>> the length of what was written, but in the test right afterwards 
>> bytesSent is compared to len(data), but they both have the same 
>> value, shouldn't it be "if bytesSent < len(self._buffer):" instead?
>
> `self._buffer´ is a list of strings (hence the join call to create 
> `data´)
> so comparing the number of bytes sent to its length wouldn't make sense.
>
> Jean-Paul
>
Ok, yes, true, but there is still the fact that bytesSent == len(data) 
and thus the test will never be true, or did I miss something? From my 
tests self.transport.write(data) doesn't modify the data, and so it 
still has the same size as it had before being sent.

Gabriel



From exarkun at divmod.com  Wed Apr 23 09:07:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 11:07:03 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F4C3A.7000002@evotex.ch>
Message-ID: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>

On Wed, 23 Apr 2008 16:48:26 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
>Jean-Paul Calderone wrote:
> [snip]
>>
>>`self._buffer´ is a list of strings (hence the join call to create `data´)
>>so comparing the number of bytes sent to its length wouldn't make sense.
>>
>>Jean-Paul
>Ok, yes, true, but there is still the fact that bytesSent == len(data) and 
>thus the test will never be true, or did I miss something? From my tests 
>self.transport.write(data) doesn't modify the data, and so it still has the 
>same size as it had before being sent.

If bytesSent == len(data), then the else case is taken and the buffer is
empty.  I'm not really sure what you're getting at.

Jean-Paul



From mailing_lists at evotex.ch  Wed Apr 23 09:30:17 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Wed, 23 Apr 2008 17:30:17 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>
References: <20080423150703.6859.119981778.divmod.quotient.34069@ohm>
Message-ID: <480F5609.1090406@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 16:48:26 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> Jean-Paul Calderone wrote:
>> [snip]
>>>
>>> `self._buffer´ is a list of strings (hence the join call to create 
>>> `data´)
>>> so comparing the number of bytes sent to its length wouldn't make 
>>> sense.
>>>
>>> Jean-Paul
>> Ok, yes, true, but there is still the fact that bytesSent == 
>> len(data) and thus the test will never be true, or did I miss 
>> something? From my tests self.transport.write(data) doesn't modify 
>> the data, and so it still has the same size as it had before being sent.
>
> If bytesSent == len(data), then the else case is taken and the buffer is
> empty.  I'm not really sure what you're getting at.
>
> Jean-Paul
>
Ok, I must be way off, because as I see it bytesSent < len(data) is 
never true.

Gabriel



From exarkun at divmod.com  Wed Apr 23 09:59:54 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Apr 2008 11:59:54 -0400
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <480F5609.1090406@evotex.ch>
Message-ID: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>

On Wed, 23 Apr 2008 17:30:17 +0200, Gabriel Rossetti <mailing_lists at evotex.ch> wrote:
> [snip]
>>
>>If bytesSent == len(data), then the else case is taken and the buffer is
>>empty.  I'm not really sure what you're getting at.
>>
>>Jean-Paul
>Ok, I must be way off, because as I see it bytesSent < len(data) is never 
>true.

Ah.  Yes, you're right.  I'm not sure why this code is written this way.  It's
pretty old and I haven't used it much myself.  I don't know if this means there
is a bug or not.  If you think there is one, the next step is to write a unit
test. :)

Jean-Paul



From mailing_lists at evotex.ch  Thu Apr 24 00:25:35 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 24 Apr 2008 08:25:35 +0200
Subject: [Twisted-Python] Could this be an error in pcp.py?
In-Reply-To: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>
References: <20080423155954.6859.10872470.divmod.quotient.34077@ohm>
Message-ID: <481027DF.6060005@evotex.ch>

Jean-Paul Calderone wrote:
> On Wed, 23 Apr 2008 17:30:17 +0200, Gabriel Rossetti 
> <mailing_lists at evotex.ch> wrote:
>> [snip]
>>>
>>> If bytesSent == len(data), then the else case is taken and the 
>>> buffer is
>>> empty.  I'm not really sure what you're getting at.
>>>
>>> Jean-Paul
>> Ok, I must be way off, because as I see it bytesSent < len(data) is 
>> never true.
>
> Ah.  Yes, you're right.  I'm not sure why this code is written this 
> way.  It's
> pretty old and I haven't used it much myself.  I don't know if this 
> means there
> is a bug or not.  If you think there is one, the next step is to write 
> a unit
> test. :)
>
> Jean-Paul
Ok, I'll do that as soon as possible :-)

Gabriel



From inhahe at gmail.com  Thu Apr 24 02:33:37 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:33:37 -0400
Subject: [Twisted-Python] pipelining with FireFox and twisted.web2
Message-ID: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>

it wasn't easy to find, but i finally found something that states directly
that Twisted
http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080424/85d1292c/attachment.html>

From inhahe at gmail.com  Thu Apr 24 02:46:09 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:46:09 -0400
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
Message-ID: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>

It took some searching, but I found something that states directly that
Twisted doesn't support pipelining (
http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html-
". Twisted doesn't support HTTP/1.1 pipelining and neither does
urllib.")
I think I read elsewhere that web2 does support pipelining, but I'm not sure
if FireFox is using pipelining with twisted.web2; it uses heuristics to
determine whether to use pipelining or not (provided you enabled pipelining)
based on the server type.  Wikipedia says most servers support pipelining so
I assume Apache does, so I was thinking I could make web2 pose as an Apache
server by doing setHeader("Server", "Apache/2.2.8(Unix)"), but I get this
error..

            ctx.setHeader("Server", "Apache/2.2.8(Unix)")
        exceptions.AttributeError: 'Request' object has no attribute
'setHeader'

so how do I set a header using web2?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080424/7feaedb3/attachment.html>

From inhahe at gmail.com  Thu Apr 24 02:47:05 2008
From: inhahe at gmail.com (inhahe)
Date: Thu, 24 Apr 2008 04:47:05 -0400
Subject: [Twisted-Python] Re: pipelining with FireFox and twisted.web2
In-Reply-To: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>
References: <da776a8c0804240133x685e2504qbfd64909c61067a@mail.gmail.com>
Message-ID: <da776a8c0804240147x620e2c23t81206d58830c7740@mail.gmail.com>

disregard this message..gmail sent it while i was in the middle of it

On Thu, Apr 24, 2008 at 4:33 AM, inhahe <inhahe at gmail.com> wrote:

> it wasn't easy to find, but i finally found something that states directly
> that Twisted
>
> http://www.dalkescientific.com/writings/diary/archive/2006/08/28/levels_of_abstraction.html
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080424/be954346/attachment.html>

From mailing_lists at evotex.ch  Thu Apr 24 05:40:40 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Thu, 24 Apr 2008 13:40:40 +0200
Subject: [Twisted-Python] Strange behavior when transferring large strings
In-Reply-To: <200804231602.43214.maarten@treewalker.org>
References: <480E377B.9080903@evotex.ch>
	<480EE3D5.8060101@evotex.ch>	<480EF639.3010008@evotex.ch>
	<200804231602.43214.maarten@treewalker.org>
Message-ID: <481071B8.80901@evotex.ch>

Maarten ter Huurne wrote:
> On Wednesday 23 April 2008, Gabriel Rossetti wrote:
>
>   
>> Ok, so apparently it (Twisted, Python, the OS?) can buffer and send up
>> to 16k, after that it splits the message up, thus this would explain the
>> lockup, since the app expects a whole XML message and can't process the
>> second part correctly.
>>     
>
> If you use an event-based XML parser (like something that implements SAX), 
> you can simply feed it the bytes as they come in from the network. The XML 
> tag nesting will tell you when the entire message has been received, which 
> is when you receive the "close tag" callback for the root tag.
>
> Bye,
> 		Maarten
>   
Yes, that's what I ended up doing :-) It works great! Thanks

Gabriel



From itamar at itamarst.org  Thu Apr 24 06:48:52 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Apr 2008 08:48:52 -0400
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
In-Reply-To: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
References: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
Message-ID: <1209041332.16249.13.camel@localhost.localdomain>

1. You probably want to use twisted-web mailing list for these
questions.

2. twisted.web *server* does support pipelining, if I remember
correctly. The client doesn't.




From camrdale at gmail.com  Thu Apr 24 09:20:48 2008
From: camrdale at gmail.com (Cameron Dale)
Date: Thu, 24 Apr 2008 08:20:48 -0700
Subject: [Twisted-Python] twisted.web2's equivalent to setHeader?
In-Reply-To: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
References: <da776a8c0804240146u58f26e49qc7669ee6cc787609@mail.gmail.com>
Message-ID: <f4438a6a0804240820q17e71cc0y8e7c8955fc42155e@mail.gmail.com>

On 4/24/08, inhahe <inhahe at gmail.com> wrote:
>             ctx.setHeader("Server", "Apache/2.2.8(Unix)")
>         exceptions.AttributeError: 'Request' object has no attribute
> 'setHeader'
>
> so how do I set a header using web2?

Try ctx.headers.setHeader(). web2 requests have a headers attribute of
this class:

http://twistedmatrix.com/documents/2.5.0/api/twisted.web2.http_headers.Headers.html

Cameron



From bschmer at yahoo.com  Thu Apr 24 12:54:41 2008
From: bschmer at yahoo.com (Bryan Schmersal)
Date: Thu, 24 Apr 2008 11:54:41 -0700 (PDT)
Subject: [Twisted-Python] Forcing telnet connections to character mode using
	twisted.conch.telnet.Telnet
Message-ID: <62929.3048.qm@web32107.mail.mud.yahoo.com>

I've been using twisted for about 36 hours now and have an application put together, but in order to get it working just the way I want it to, I want to force the other end of the telnet connection to go into character-at-a-time mode.  I haven't seen any examples of setting IAC options, but perhaps I haven't been looking in the proper places.

Does anyone have any hints?

Bryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080424/98e99b47/attachment.html>

From exarkun at divmod.com  Thu Apr 24 13:24:25 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Apr 2008 15:24:25 -0400
Subject: [Twisted-Python] Forcing telnet connections to character mode
	using twisted.conch.telnet.Telnet
In-Reply-To: <62929.3048.qm@web32107.mail.mud.yahoo.com>
Message-ID: <20080424192425.6859.1809263100.divmod.quotient.34548@ohm>

On Thu, 24 Apr 2008 11:54:41 -0700 (PDT), Bryan Schmersal <bschmer at yahoo.com> wrote:
>I've been using twisted for about 36 hours now and have an application put together, but in order to get it working just the way I want it to, I want to force the other end of the telnet connection to go into character-at-a-time mode.  I haven't seen any examples of setting IAC options, but perhaps I haven't been looking in the proper places.
>
>Does anyone have any hints?

twisted.conch.telnet.Telnet has four methods for option negotiation:
do, dont, will, and wont.  These correspond to IAC DO, IAC DONT, IAC
WILL, and IAC WONT, respectively.  You probably want to do something
with the LINEMODE option, but I forget what exactly.  Once you enable
LINEMODE, you'll probably want to do some subnegotiation about it.
Telnet has a requestNegotiate method for this.  A quick look at RFC
1184 suggests that what you want is roughly IAC DO LINEMODE and,
assuming that succeeds, IAC SB LINEMODE MODE (~EDIT & other) IAC SE.
This is easy enough to do with the Telnet class:

    d = self.do(LINEMODE)
    def cbLinemode(ignored):
        self.requestNegotiate(LINEMODE, LINEMODE_MODE + '\0')

You'll also need an enableRemote implementation which allows LINEMODE
to be enabled (it just needs to return True for that option).

Hope this helps, let me know how it turns out. :)

Jean-Paul



From exarkun at divmod.com  Thu Apr 24 13:30:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Apr 2008 15:30:51 -0400
Subject: [Twisted-Python] Forcing telnet connections to character mode
	using twisted.conch.telnet.Telnet
In-Reply-To: <20080424192425.6859.1809263100.divmod.quotient.34548@ohm>
Message-ID: <20080424193051.6859.315542258.divmod.quotient.34552@ohm>

On Thu, 24 Apr 2008 15:24:25 -0400, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>
>    d = self.do(LINEMODE)
>    def cbLinemode(ignored):
>        self.requestNegotiate(LINEMODE, LINEMODE_MODE + '\0')

Of course, cbLinemode should have been added as a callback to d.

Jean-Paul



From terry at jon.es  Fri Apr 25 02:53:17 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 25 Apr 2008 10:53:17 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func returning
	a called deferred
Message-ID: <18449.39933.404142.47145@jon.es>

>From searching and reading the list archives, I know the following comes up
under various guises, and although I think I understand what's going on, I
don't see a nice solution.

I'm trying to write a standalone script. It calls externalFunc, a function
someone else wrote that returns a deferred. My script could look something
like this:

    from twisted.internet import reactor
    from twisted.python import log

    if __name__ == '__main__':
        def ok(result):
            print "ok called with", result
        def nok(failure):
            print "nok called with", failure
            return failure
        def stop(x):
            reactor.stop()

        d = externalFunc()
        d.addCallback(ok)
        d.addErrback(nok)
        d.addBoth(stop)
        d.addErrback(log.err)
        reactor.run()

And that works fine.

Now suppose I want to do some testing in which I swap out the external
function for a library I wrote myself (or for another implementation).  In
the testing library, externalFunc is simplified and uses defer.success() to
return its result.

In this case the script raises RuntimeError, "can't stop reactor that isn't
running" because the deferred that comes back from externalFunc has already
been called. So when I add the call/errbacks, they are fired right away and
the reactor isn't running when the stop function tries to stop it.

And script never exits because it then starts the reactor.

At this point there are various contortions I can try. Catching the
RuntimeError works, but the script never exits. Catching the RuntimeError
and then calling sys.exit doesn't work because sys.exit raises SystemExit
and that is caught in twisted/internet/defer.py _runCallbacks.

Supposing I had more control, the calling function could create the
deferred, pause it, pass it to externalFunc, add callbacks, then unpause.
But that doesn't work either as the callbacks fire as soon as unpause is
called, and you get the reactor not started error, followed by no exit as
you then start the reactor.

Testing reactor.running before trying to stop it in stop gets rid of the
error, but the reactor is then started and not stopped.

The only bulletproof way to deal with this that I've come up with is to
call self.fireSystemEvent("shutdown") but that feels wrong.

Several solutions seem possible with changes to Twisted: don't catch
SystemExit; give reactor.stop a (default False) keyword arg to tell it to
ignore a stopped reactor; stop deferreds from firing call/err backs if they
are paused (IMO it's a bit non-paradigmatic to have call/errback events
firing when the reactor isn't even running), etc.

I suppose I'm just not doing things right. Can someone tell me how I should
be doing this?

Terry



From amauryfa at gmail.com  Fri Apr 25 03:27:58 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Fri, 25 Apr 2008 11:27:58 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func
	returning a called deferred
In-Reply-To: <18449.39933.404142.47145@jon.es>
References: <18449.39933.404142.47145@jon.es>
Message-ID: <e27efe130804250227w59733764r703f7e3351309aed@mail.gmail.com>

Hello,

Terry Jones wrote:
> >From searching and reading the list archives, I know the following comes up
>  under various guises, and although I think I understand what's going on, I
>  don't see a nice solution.
>
>  I'm trying to write a standalone script. It calls externalFunc, a function
>  someone else wrote that returns a deferred. My script could look something
>  like this:
>
>     from twisted.internet import reactor
>     from twisted.python import log
>
>     if __name__ == '__main__':
>         def ok(result):
>             print "ok called with", result
>         def nok(failure):
>             print "nok called with", failure
>             return failure
>         def stop(x):
>             reactor.stop()
>
>         d = externalFunc()
>         d.addCallback(ok)
>         d.addErrback(nok)
>         d.addBoth(stop)
>         d.addErrback(log.err)
>         reactor.run()
>
>  And that works fine.
>
>  Now suppose I want to do some testing in which I swap out the external
>  function for a library I wrote myself (or for another implementation).  In
>  the testing library, externalFunc is simplified and uses defer.success() to
>  return its result.
>
>  In this case the script raises RuntimeError, "can't stop reactor that isn't
>  running" because the deferred that comes back from externalFunc has already
>  been called. So when I add the call/errbacks, they are fired right away and
>  the reactor isn't running when the stop function tries to stop it.
>
>  And script never exits because it then starts the reactor.

did you try something like:

       def stop(x):
           reactor.callLater(0, reactor.stop)

This ensures that the reactor is started before you tell it to stop.

-- 
Amaury Forgeot d'Arc



From terry at jon.es  Fri Apr 25 04:04:43 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 25 Apr 2008 12:04:43 +0200
Subject: [Twisted-Python] Problem exiting script that calls a func
	returning a called deferred
In-Reply-To: Your message at 11:27:58 on Friday, 25 April 2008
References: <18449.39933.404142.47145@jon.es>
	<e27efe130804250227w59733764r703f7e3351309aed@mail.gmail.com>
Message-ID: <18449.44219.107770.944150@jon.es>

Hi Amaury

> did you try something like:
> 
>        def stop(x):
>            reactor.callLater(0, reactor.stop)
> 
> This ensures that the reactor is started before you tell it to stop.

That's perfect, thanks.

Terry



From jmp at MIT.EDU  Fri Apr 25 05:42:41 2008
From: jmp at MIT.EDU (Justin Mazzola Paluska)
Date: Fri, 25 Apr 2008 07:42:41 -0400
Subject: [Twisted-Python] Moving from PB to other RPC protocols
Message-ID: <20080425114241.GA28232@mit.edu>

Hi,

I’m using PB to connect together various servers in my application.
In the application clients connect to a “master” server, which then
farms out work to “worker” servers.  The master server exports PB
objects with two types of functions: (1) accessors that return PB
Cacheables and (2) mutators that change the state of the server (and
consquently alter any outstanding Cacheables).  In the past all of our
client programs (some wx, a GTK client, and some command line tools)
were all written in Python.

Now, however, we want to integrate two new applications with our
system.  One is a web application with a developer who’d rather write
a WSGI application and use some blocking RPC method and the other is a
large C++ application that can’t be re-written in Python.

How do we get everyone to communicate?  In order to support these new
applications, it looks like our master server will need to offer two
interfaces: one PB and one something else.

- I imagine that we can choose any old RPC method (XML-RPC, json-rpc,
  random protocol over HTTP) to implement our mutator functions.  In
  the Twisted mailing list archives, most people recommend XML-RPC,
  though json-rpc looks intruiging (especially for the web stuff).
  
- Is there any common RPC mechanism with anything like Cacheables?  I
  loathe to have these new applications polling the server all the
  time when they could just be waiting for something.

Thanks,
	—Justin



From sipickles at hotmail.com  Sat Apr 26 13:10:13 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Apr 2008 20:10:13 +0100
Subject: [Twisted-Python] Problem with Jelly
Message-ID: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>

Hi,

I thought I was following the doc 'Passing Complex Types' but am still 
getting unsecure Jellies.

I've got a file, imported by both pb.Client and pb.Server:

#------------------------------------------------
#jellyable.gameObject.py

class GameObject:
    # full of stuff
   pass
 
class PortableGameObject(GameObject, pb.Copyable):
    pass

class GameObjectReceiver(GameObject, pb.RemoteCopy):
    pass

pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)

#------------------------------------------------

The client is trying to send an instance of a PortableGameObject thru 
PB, but the server spits out:

twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
allowed (in type jellyable.gameObject.PortableGameObject).


Why does it refer to 'Module jellyable.gameObject'? I know I am sending 
this thru the pipe:

Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, msg: 
OBJECT_CHANGESECTOR, data: (<jellyable.gameObject.PortableGameObject 
instance at 0x87bab4c>,)

I remember reading that it is crucial to get the naming right on send 
and receive. How have I got it wrong?

Thanks

Simon


-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From radix at twistedmatrix.com  Sat Apr 26 15:45:55 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 26 Apr 2008 17:45:55 -0400
Subject: [Twisted-Python] Twisted 8.1.0pre2
Message-ID: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>

Hey all. I just put together Twisted 8.1.0pre2, because pre1 had a
regression in IOCP. It's been fixed now along with some other updates.
Please download it and test your software, especially if you use a
non-select-on-unix platform! There have been some reactor changes in
this release.

http://twistedmatrix.com/users/radix/8.1.0pre2/

Note that many of the files are still 'pre1', because they didn't need
any updates. Only the main Twisted distribution, Core, Conch, and
Words were updated.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sat Apr 26 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Apr 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1209269107.86.109221577@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080427/6bc1cc01/attachment.html>

From sipickles at hotmail.com  Sun Apr 27 03:19:56 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 10:19:56 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
Message-ID: <BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>

Simon Pickles wrote:
> Hi,
>
> I thought I was following the doc 'Passing Complex Types' but am still 
> getting unsecure Jellies.
>
> I've got a file, imported by both pb.Client and pb.Server:
>
> #------------------------------------------------
> #jellyable.gameObject.py
>
> class GameObject:
>    # full of stuff
>   pass
>
> class PortableGameObject(GameObject, pb.Copyable):
>    pass
>
> class GameObjectReceiver(GameObject, pb.RemoteCopy):
>    pass
>
> pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)
>
> #------------------------------------------------
>
> The client is trying to send an instance of a PortableGameObject thru 
> PB, but the server spits out:
>
> twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
> allowed (in type jellyable.gameObject.PortableGameObject).
>
>
> Why does it refer to 'Module jellyable.gameObject'? I know I am 
> sending this thru the pipe:
>
> Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, msg: 
> OBJECT_CHANGESECTOR, data: (<jellyable.gameObject.PortableGameObject 
> instance at 0x87bab4c>,)
>
> I remember reading that it is crucial to get the naming right on send 
> and receive. How have I got it wrong?
>
> Thanks
>
> Simon
>
>
Okay, well I think my first issue was I wasn't importing 
jellyable.gameObject into the server.

After doing this, I now get this slightly vague error:

twisted.spread.jelly.InsecureJelly: method

I think this may be because GameObject is a compound class, including 
instance of Mobile, Selectable, Intelligent and Container component 
classes.

Is it possible to send Compound classes? or should I distil my 
GameObject for transportation? (i'd rather not, obviously!)

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sun Apr 27 05:07:37 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 12:07:37 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>
	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
Message-ID: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>

Simon Pickles wrote:
> Simon Pickles wrote:
>> Hi,
>>
>> I thought I was following the doc 'Passing Complex Types' but am 
>> still getting unsecure Jellies.
>>
>> I've got a file, imported by both pb.Client and pb.Server:
>>
>> #------------------------------------------------
>> #jellyable.gameObject.py
>>
>> class GameObject:
>>    # full of stuff
>>   pass
>>
>> class PortableGameObject(GameObject, pb.Copyable):
>>    pass
>>
>> class GameObjectReceiver(GameObject, pb.RemoteCopy):
>>    pass
>>
>> pb.setUnjellyableForClass(PortableGameObject, GameObjectReceiver)
>>
>> #------------------------------------------------
>>
>> The client is trying to send an instance of a PortableGameObject thru 
>> PB, but the server spits out:
>>
>> twisted.spread.jelly.InsecureJelly: Module jellyable.gameObject not 
>> allowed (in type jellyable.gameObject.PortableGameObject).
>>
>>
>> Why does it refer to 'Module jellyable.gameObject'? I know I am 
>> sending this thru the pipe:
>>
>> Sat Apr 26 20:06:57 2008 - BROKER: Do Remote Call - target: None, 
>> msg: OBJECT_CHANGESECTOR, data: 
>> (<jellyable.gameObject.PortableGameObject instance at 0x87bab4c>,)
>>
>> I remember reading that it is crucial to get the naming right on send 
>> and receive. How have I got it wrong?
>>
>> Thanks
>>
>> Simon
>>
>>
> Okay, well I think my first issue was I wasn't importing 
> jellyable.gameObject into the server.
>
> After doing this, I now get this slightly vague error:
>
> twisted.spread.jelly.InsecureJelly: method
>
> I think this may be because GameObject is a compound class, including 
> instance of Mobile, Selectable, Intelligent and Container component 
> classes.
>
> Is it possible to send Compound classes? or should I distil my 
> GameObject for transportation? (i'd rather not, obviously!)
>
> Thanks
>
> Si
>
Update #3

Using a simple test class, TestJelly, I was able to succeed in 
transferring the instance. It was fairly trivial to also make those 
component classes jellyable in the same manner as their owner.

I kept adding complexity to TestJelly, approaching the structure of my 
GameObject class. It failed (with the InsecureJelly:method error) when I 
needed to make the passed class type an inherited one.

I realised that GameObject is a subclass of Actor, and calls 
Actor.__init__() in its own __init__.

So I tried making the actor jellyable too by doing this:
----------------------
#actor.py
import stackless
from log import logger
from twisted.spread import pb

class Actor:
    def __init__(self, ch, logFunction):
        self.rx = ch
        self.logger = logFunction
        self.processMessageMethod = self.MessageHandler
        self.logger("rx: %s" % self.rx)
        stackless.tasklet(self.ProcessMessage)()

    def ProcessMessage(self):
        while 1:
            self.logger("...... waiting for event message ......")
            self.processMessageMethod(self.rx.receive())

    def MessageHandler(self,args):
        # Overridden by subclasses
        self.logger("ERROR - Unhandled Message: %s" % args)
     

class PortableActor(Actor, pb.Copyable):
    pass

class ActorReceiver(pb.RemoteCopy, Actor):
    pass

pb.setUnjellyableForClass(PortableActor, ActorReceiver)
----------------------
# testJelly.py
# An instance of which I am trying to pass

from twisted.spread import pb
import stackless

from actor import PortableActor
from log import logger

class TestJelly(PortableActor):
    def __init__(self):
        PortableActor.__init__(self, stackless.channel(), logger.SYS)

class PortableTestJelly(TestJelly, pb.Copyable):
    pass

class TestJellyReceiver(pb.RemoteCopy, TestJelly):
    pass

pb.setUnjellyableForClass(PortableTestJelly, TestJellyReceiver)

------------------

No good! Something about the PortableActor.__init__ is breaking it.

Advice gratefully received.

Thanks
Si



-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From exarkun at divmod.com  Sun Apr 27 07:34:47 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 27 Apr 2008 09:34:47 -0400
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
Message-ID: <20080427133447.6859.1301914948.divmod.quotient.55640@ohm>

On Sun, 27 Apr 2008 12:07:37 +0100, Simon Pickles <sipickles at hotmail.com> wrote:
>
> [snip]
>
>I kept adding complexity to TestJelly, approaching the structure of my 
>GameObject class. It failed (with the InsecureJelly:method error) when I 
>needed to make the passed class type an inherited one.
>
>I realised that GameObject is a subclass of Actor, and calls 
>Actor.__init__() in its own __init__.
>
>So I tried making the actor jellyable too by doing this:
>----------------------
>#actor.py
>import stackless
>from log import logger
>from twisted.spread import pb
>
>class Actor:
>    def __init__(self, ch, logFunction):
>        self.rx = ch
>        self.logger = logFunction
>        self.processMessageMethod = self.MessageHandler

What are these three attributes?  `self.rx´, `self.logger´, and
`self.processMessageMethod´ have to be jellyable if you want to
mix `Actor´ into a class that you are going to jelly.  If these
attributes aren't supposed to be sent to the peer, then you need
to provide custom jellying logic to exclude them.

Jean-Paul



From sipickles at hotmail.com  Sun Apr 27 07:45:20 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 14:45:20 +0100
Subject: [Twisted-Python] Problem with Jelly
In-Reply-To: <BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>
	<BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
Message-ID: <BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>

The solution seems to be to use pb.Copyable.getStateToCopy() to control 
which members to send.

I am then replacing problem ones (stackless channels and tasklets 
mainly) with new local references at the receiving end.

(As Jean says I notice!)

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From sipickles at hotmail.com  Sun Apr 27 09:22:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sun, 27 Apr 2008 16:22:02 +0100
Subject: [Twisted-Python] Bending Jelly
In-Reply-To: <BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>
References: <BAY114-DAV12F6A0818DBA6BE72BB218BEDC0@phx.gbl>	<BAY114-DAV9B5C1D35D45002737A049BEDF0@phx.gbl>	<BAY114-DAV120A3D136F7FF093818653BEDF0@phx.gbl>
	<BAY114-DAV2BB5CF65C3D0B72917504BEDF0@phx.gbl>
Message-ID: <BAY114-DAV171F6FFD8DE3C19C67FEBBEDF0@phx.gbl>

So.... what are the ramifications of doing this:

class PortableGameObject(GameObject, pb.Copyable, pb.RemoteCopy):
    def getStateToCopy(self):
        d = self.__dict__.copy()
        return d
    def setCopyableState(self, state):
        #newDict = { 'newness' : 1 }
        self.__dict__ = state

pb.setUnjellyableForClass(PortableGameObject, PortableGameObject)


I only ask since I want to make the objects transmittable and receivable.

Thanks

Si

-- 

http://www.squirtual-reality.com
--------------------------------
Linux user #458601 - http://counter.li.org.






From kozneb at gmail.com  Sun Apr 27 09:23:08 2008
From: kozneb at gmail.com (=?UTF-8?Q?Harald_Bl=C3=A5tand?=)
Date: Sun, 27 Apr 2008 17:23:08 +0200
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
Message-ID: <1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>

Apologies for cross-posting; don't seem to have any luck with twisted-web.



---------- Forwarded message ----------
From: Harald Blåtand <kozneb at gmail.com>
Date: Sun, Apr 27, 2008 at 2:58 PM
Subject: Athena onbeforeunload ?
To: Twisted Web World <twisted-web at twistedmatrix.com>


Hi all,

Trying to have the server know at once when a client goes away.
Seemed like function bindEvents of Nevow.Athena.PageWidget would do the
trick, but...
Checking with alert's in bindEvents()  (ok), and function onbeforeunload;
however, the latter doesn't seem to get called??

Please, what am I missing here?
k
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080427/649206d5/attachment.html>

From foom at fuhm.net  Sun Apr 27 10:18:50 2008
From: foom at fuhm.net (James Y Knight)
Date: Sun, 27 Apr 2008 12:18:50 -0400
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
	<1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
Message-ID: <0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>

On Apr 27, 2008, at 11:23 AM, Harald Blåtand wrote:
> Apologies for cross-posting; don't seem to have any luck with  
> twisted-web.

That's rather rude, please don't do that.

You only waited 3 hours before complaining about not getting a reply.  
You should wait for a reply for at least for a couple of days before  
sending a follow-up ping.

James


From kozneb at gmail.com  Sun Apr 27 10:43:16 2008
From: kozneb at gmail.com (=?UTF-8?Q?Harald_Bl=C3=A5tand?=)
Date: Sun, 27 Apr 2008 18:43:16 +0200
Subject: [Twisted-Python] Fwd: Athena onbeforeunload ?
In-Reply-To: <0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>
References: <1ff309e60804270558v7d8fc980w9ed7222d8a881780@mail.gmail.com>
	<1ff309e60804270823k657fde50l2cef5e7d27b124ff@mail.gmail.com>
	<0D3684BF-0B36-4DB6-9230-024F5561E80C@fuhm.net>
Message-ID: <1ff309e60804270943j4085cc9ehb0fa4137f8a6d425@mail.gmail.com>

On Sun, Apr 27, 2008 at 6:18 PM, James Y Knight <foom at fuhm.net> wrote:

> On Apr 27, 2008, at 11:23 AM, Harald Blåtand wrote:
>
> > Apologies for cross-posting; don't seem to have any luck with
> > twisted-web.
> >
>
> That's rather rude, please don't do that.
>
> You only waited 3 hours before complaining about not getting a reply. You
> should wait for a reply for at least for a couple of days before sending a
> follow-up ping.
>
> James


Sorry.
I wasn't complaining about not getting a reply. I just thought I would
receive my own question back from the mailing-list (which made me think
twisted-web wasn't up or something), but that's obviously not how it works.

Sorry again.
k


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080427/701fd90c/attachment.html>

From glyph at divmod.com  Mon Apr 28 00:50:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 06:50:59 -0000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
Message-ID: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>

On 18 Apr, 05:06 am, jml at mumak.net wrote:
>Hello everyone,
>
>Now that the release is out[1], I'd like to start work on fixing #1216
>-- official deprecation policy.

Sorry for the delay.  Due to a miscommunication, I thought that Chris 
would be the one writing up our meeting notes and announcing this. 
After I realized I was the one who was supposed to be doing it, I wanted 
to write up something official-sounding on the wiki first, but of 
course, there's never enough time.  So here's a rough cut at the policy 
that we (the current "TSF board", such as it is: chris, me, JP, and 
itamar) agreed on at the sprint in Cambridge.

Thanks, Jonathan, for motivating this; we've needed a clear statement 
for a long time.  Someone (and this will probably be me) needs to make a 
complete and unambiguous index of official Twisted policy and put it 
together somewhere, probably on the wiki, at least at first.
>I think these are all the questions we need to answer:

The proposed policy does break down as a list of answers to these 
questions, so one point at a time:
>- Is it time-based or release-based?

Both.  There will be a minimum amount of time and a minimum number of 
releases before a deprecated feature may be removed.
>- How long for?

Every deprecation must last for a minimum of 2 releases and a minimum of 
one year.  Of course, anyone who wants to keep maintaining deprecated 
APIs for longer than that may do so.

I know this is somewhat longer than you've suggested, but at the meeting 
we ran down a laundry list of real-world usages of Twisted and pretty 
much nobody upgrades Twisted more than once per year.  In fact, once per 
2 years seems to be the average, and that's a fairly ambitious estimate. 
The objective of providing a year-long deprecation period is to allow a 
user who is performing their bi-yearly Twisted upgrade to do so with no 
more than 2 intermediary upgrades.
>- Do we grade deprecations? How?

There will be three phases of deprecation.  When a deprecation is first 
introduced (in trunk) the "deprecation counter" will be at 3.  When that 
deprecation sees its first release, it decrements to 2.  Deprecations at 
levels 3 and 2 will be PendingDeprecationWarning.  When that same 
deprecation sees its second release after a 6-month period, the counter 
decrements to 1, and finally, after a second 6-month period, it 
decrements to 0 and can be removed.  Deprecations with a counter at 1 
and at 0 (if they still exist) should emit a DeprecationWarning.

The counter may not move down past 2 until *all instances of the emitted 
warning* have been removed from the Twisted test suite, with the 
exception of tests specifically for the deprecated functionality itself 
(i.e. tests that call assertWarns).

The reason that this is described as a counter rather than primarily in 
terms of (Pending)DeprecationWarning is that this was a subject of 
intense debate during the meeting.  There is definitely a consensus that 
the Python warnings system is not a sufficient tool we have to deal with 
the kind of notifications that we want to provide.  There is also a 
consensus that it is the only tool available.  So, let me provide some 
more detail on the desired behavior here.

The idea behind using PendingDeprecationWarning is that *users* of a 
piece of software which depends on Twisted should, in principle, be able 
to upgrade Twisted by one version without seeing any error output. 
However, *maintainers* of that software should immediately see all the 
warnings when they test with a new release.  Trial should change to show 
all PendingDeprecationWarnings by default.  However, this might be 
impractical due to other uses of PendingDeprecationWarning - if that is 
the case, Twisted should include its own warning class.  It may be 
helpful to do that in order to include the additional metadata required 
for an automated deprecation workflow, however.  The desired deprecation 
workflow is:

  * Twisted developer deprecates functionality, by adding a 
warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the 
code.

  * The release process automatically runs "update-deprecations" over the 
codebase, updating the deprecation counters in the developer-supplied 
metadata appropriately.  The release goes out.  (Ideally this would be 
done without actually having to modify the whole codebase, updating a 
central deprecation / release index.)

  * Another release happens that sets some counters to zero.

  * A developer drops support for some deprecated functionality, 
confident in their ability to do so by observing the zero (or negative) 
value for the counter.

An obvious remaining piece of work to implement this final policy is to 
define some temporary manual things that we can do until such a tool is 
implemented, and implement the tool itself as soon as possible.  I don't 
believe any tickets have yet been filed for this, and *that* I am 
leaving in our venerable release manager's court, since this is all a 
part of the release process except for the fairly minor change to trial.

However, in the absence of any tools, this policy does apply now, it 
will just be a bit of a pain to work out where the counter stands on any 
particular deprecation until we've got some more metadata to help us.
>- Which code is subject to this policy?

All Python code released in Twisted, with the exceptions of private 
modules and test modules.

Only code which has been present in a release needs to be deprecated. 
Anything which was added after the last release and has not yet been 
present in any other release may be modified at will.  (We try to keep 
trunk stable, but this only applies to code that was relying on features 
in previous releases.)  I think that CompatibilityPolicy's explanation 
of an "incompatible change" explains this.

Users: do not import anything from a package named "test", or any name 
(module, class, or function) which begins with "_"; bears will eat you. 
This code may change at any time.

(Not a part of the policy: I personally want to add some caveats here, 
where users of Twisted can ask for a grace period on private APIs that 
people actually needed to use, but I think for now let's err on the side 
of allowing the deprecation - I don't want to encourage people to use 
private APIs.  Users: if you find that there are things you can't do 
with the public APIs and you really need a grace period to upgrade your 
applications, please speak up.  Eventually, I'd like to have a very 
aggressive "you can't even import (or invoke) this if it's private" 
regime where users can't accidentally use private functionality without 
first seeing a runtime error of some kind that they have to explicitly 
silence, as with my "pyexport" hack.  Once we've done *that* we should 
definitely have a zero-tolerance policy on supporting private stuff, 
though...)

There's obviously some work to do here to make this policy easy and 
convenient to follow.  This needs to be edited, CompatibilityPolicy 
updated, and prominently linked.  We need someone to write up at least 
two different summaries: one for maintainers of projects using Twisted 
("What kind of compatibility should I expect from Twisted releases?") 
one for Twisted contributors ("How do I add a deprecation?  When can I 
remove it?") and maybe one for users and one for packagers, too.  We 
need some tools to help us update deprecations.  We need trial to change 
so that developers are notified earlier than their users.

Do I hear any volunteers...? :)



From glyph at divmod.com  Mon Apr 28 00:59:43 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 06:59:43 -0000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
Message-ID: <20080428065943.25821.1880039352.divmod.xquotient.1136@joule.divmod.com>


On 06:50 am, glyph at divmod.com wrote:
>All Python code released in Twisted, with the exceptions of private 
>modules and test modules.

To be specific, this means code actually present in the Twisted release, 
which does not, for example, include web2.  I guess that's still be an 
exception.  So this doesn't just mean "everything in the repository".

(Maybe we should do a release of web2 and just admit people are actually 
using it.  But that's a totally separate discussion; please let's not 
start it here.)



From jml at mumak.net  Mon Apr 28 01:36:00 2008
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 28 Apr 2008 17:36:00 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
Message-ID: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>

On Mon, Apr 28, 2008 at 4:50 PM,  <glyph at divmod.com> wrote:
> On 18 Apr, 05:06 am, jml at mumak.net wrote:
>
> > Hello everyone,
> >
> > Now that the release is out[1], I'd like to start work on fixing #1216
> > -- official deprecation policy.
> >
>
>  Sorry for the delay.  Due to a miscommunication, I thought that Chris would
> be the one writing up our meeting notes and announcing this. After I
> realized I was the one who was supposed to be doing it, I wanted to write up
> something official-sounding on the wiki first, but of course, there's never
> enough time.  So here's a rough cut at the policy that we (the current "TSF
> board", such as it is: chris, me, JP, and itamar) agreed on at the sprint in
> Cambridge.
>
>  Thanks, Jonathan, for motivating this; we've needed a clear statement for a
> long time.  Someone (and this will probably be me) needs to make a complete
> and unambiguous index of official Twisted policy and put it together
> somewhere, probably on the wiki, at least at first.
>

I'm glad I could help and I'm glad that this is being worked on.

Although I'm happy to leave the decision in your hands, there are a
couple of things I'd like to comment on (disagree with).

Also, I'd be happy to start the work of collating policy.

>
> > - Is it time-based or release-based?
> >
>
>  Both.  There will be a minimum amount of time and a minimum number of
> releases before a deprecated feature may be removed.
>

I dislike this. I think that deprecations should be release-based and
that we should commit to time-based releases. I think this is simpler
for users and for developers.

This complaint would be largely solved by automation.

> > - How long for?
> >
>
>  Every deprecation must last for a minimum of 2 releases and a minimum of
> one year.  Of course, anyone who wants to keep maintaining deprecated APIs
> for longer than that may do so.
>

Presumably the timer starts at a release and only increments at a release?

So, for example:

T - 1 month: deprecate feature in trunk
T: Release N
T + 7 months: Release N+1
T + 14 months: Release N+2, feature removed.

Is this understanding correct?

(The fact that I need to ask is largely why I don't like "both time &
release based".)

>  I know this is somewhat longer than you've suggested, but at the meeting we
> ran down a laundry list of real-world usages of Twisted and pretty much
> nobody upgrades Twisted more than once per year.

I think the data on this is skewed, since there was about a 1.4 year
gap between the last 2 releases of Twisted. If we released each month,
I can imagine this would change.

Nevertheless, I'm content with this sort of time frame for now, as
long as the support for it is well automated.

>  The idea behind using PendingDeprecationWarning is that *users* of a piece
> of software which depends on Twisted should, in principle, be able to
> upgrade Twisted by one version without seeing any error output.

I think that this is a nice feature, but not worth breaking our backs
over. (It might be really easy to do though).

> However,
> *maintainers* of that software should immediately see all the warnings when
> they test with a new release.  Trial should change to show all
> PendingDeprecationWarnings by default.  However, this might be impractical
> due to other uses of PendingDeprecationWarning - if that is the case,
> Twisted should include its own warning class.  It may be helpful to do that
> in order to include the additional metadata required for an automated
> deprecation workflow, however.  The desired deprecation workflow is:
>
>   * Twisted developer deprecates functionality, by adding a
> warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the code.
>

I disagree very strongly on this detail. The deprecation API should be
higher level than that.

Specifically, even we implement it with the warnings system, I don't
think we should litter that decision all over our code base.

>  An obvious remaining piece of work to implement this final policy is to
> define some temporary manual things that we can do until such a tool is
> implemented, and implement the tool itself as soon as possible.  I don't
> believe any tickets have yet been filed for this, and *that* I am leaving in
> our venerable release manager's court, since this is all a part of the
> release process except for the fairly minor change to trial.
>

I think this is wasted effort. Let's just build the damn tool.

> > - Which code is subject to this policy?
> >
>
>  All Python code released in Twisted, with the exceptions of private modules
> and test modules.
>

What about code currently marked as deprecated?

>  There's obviously some work to do here to make this policy easy and
> convenient to follow.  This needs to be edited, CompatibilityPolicy updated,
> and prominently linked.  We need someone to write up at least two different
> summaries: one for maintainers of projects using Twisted ("What kind of
> compatibility should I expect from Twisted releases?") one for Twisted
> contributors ("How do I add a deprecation?  When can I remove it?") and
> maybe one for users and one for packagers, too.  We need some tools to help
> us update deprecations.  We need trial to change so that developers are
> notified earlier than their users.
>
>  Do I hear any volunteers...? :)
>

Me. I wouldn't have raised the issue if I wasn't willing.

jml



From jml at mumak.net  Mon Apr 28 01:50:33 2008
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 28 Apr 2008 17:50:33 +1000
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
Message-ID: <d06a5cd30804280050t3b36ff8ei4feae1bc758e61fd@mail.gmail.com>

On Mon, Apr 28, 2008 at 5:36 PM, Jonathan Lange <jml at mumak.net> wrote:
> On Mon, Apr 28, 2008 at 4:50 PM,  <glyph at divmod.com> wrote:
>  >  There's obviously some work to do here to make this policy easy and
>  > convenient to follow.  This needs to be edited, CompatibilityPolicy updated,
>  > and prominently linked.  We need someone to write up at least two different
>  > summaries: one for maintainers of projects using Twisted ("What kind of
>  > compatibility should I expect from Twisted releases?") one for Twisted
>  > contributors ("How do I add a deprecation?  When can I remove it?") and
>  > maybe one for users and one for packagers, too.  We need some tools to help
>  > us update deprecations.  We need trial to change so that developers are
>  > notified earlier than their users.
>  >
>  >  Do I hear any volunteers...? :)
>  >
>
>  Me. I wouldn't have raised the issue if I wasn't willing.
>

That said, I would be greatly surprised if you guys *didn't* have
opinions about implementation beyond what Glyph has already mentioned.

If you have opinions, either mention them now or out-volunteer me, so
I don't end up wasting my time.

jml



From miguel.filho at gmail.com  Mon Apr 28 06:38:00 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 09:38:00 -0300
Subject: [Twisted-Python] Aplication process uid/gid
Message-ID: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>

Hello list,

The code:
===============================
import pwd
from apolicy.config import config
...
from twisted.protocols import basic
from twisted.internet import reactor, protocol, task
from twisted.application import internet, service
...
user = pwd.getpwnam(config.get("main","user"))
application = service.Application('apolicy', uid=user[2], gid=user[3])
serviceCollection = service.IServiceCollection(application)

address, port = config.get("main", "listen").split(":")

internet.TCPServer(int(port), ACLPolicyDaemonFactory(),
interface=address).setServiceParent(serviceCollection)
===============================

I'm using twistd to start my daemon, the process starts normally and
the owner is the user nobody.

# ps uaxf | grep nobody
nobody   29052  0.1  0.6  13140  6440 ?        S    09:11   0:01
/usr/bin/python /usr/bin/twistd -y
/usr/lib/python2.4/site-packages/apolicy/server.py -q --logfile
/var/log/twistd.log --pidfile=/var/run/twistd.pid

My class ACLPolicyDaemonFactory() tries to write a file to test if the
path given to my application is writable and has no problems, but the
file is created as root. What is the point where the process is
already running as nobody?

Regards,

Miguel



From exarkun at divmod.com  Mon Apr 28 06:46:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 08:46:57 -0400
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>
Message-ID: <20080428124657.6859.422762456.divmod.quotient.56137@ohm>

On Mon, 28 Apr 2008 09:38:00 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>Hello list,
>
>The code:
>===============================
> [snip]
>application = service.Application('apolicy', uid=user[2], gid=user[3])
>serviceCollection = service.IServiceCollection(application)
>
>address, port = config.get("main", "listen").split(":")
>
>internet.TCPServer(int(port), ACLPolicyDaemonFactory(),
>interface=address).setServiceParent(serviceCollection)
>===============================
>
>I'm using twistd to start my daemon, the process starts normally and
>the owner is the user nobody.
>
># ps uaxf | grep nobody
>nobody   29052  0.1  0.6  13140  6440 ?        S    09:11   0:01
>/usr/bin/python /usr/bin/twistd -y
>/usr/lib/python2.4/site-packages/apolicy/server.py -q --logfile
>/var/log/twistd.log --pidfile=/var/run/twistd.pid
>
>My class ACLPolicyDaemonFactory() tries to write a file to test if the
>path given to my application is writable and has no problems, but the
>file is created as root. What is the point where the process is
>already running as nobody?

Privileges aren't shed immediately when Application is created.  They're
shed after privilegedStartService and before startService.  You should
delay any potentially sensitive operations until startService (ie, don't
do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
meant you were opening that file).

Jean-Paul



From itamar at itamarst.org  Mon Apr 28 07:00:59 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 28 Apr 2008 09:00:59 -0400
Subject: [Twisted-Python] [RFC] Deprecation Policy
In-Reply-To: <d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
References: <d06a5cd30804172206u582d32e1g7c4804aa4fea4e4a@mail.gmail.com>
	<20080428065059.25821.2000772510.divmod.xquotient.1130@joule.divmod.com>
	<d06a5cd30804280036v2a7af29esf7ca18b0e54752f6@mail.gmail.com>
Message-ID: <1209387659.6476.10.camel@localhost.localdomain>



> I'm glad I could help and I'm glad that this is being worked on.
> 
> Although I'm happy to leave the decision in your hands, there are a
> couple of things I'd like to comment on (disagree with).

Of course! This wasn't meant to be a dictate.

> Also, I'd be happy to start the work of collating policy.
> 
> >
> > > - Is it time-based or release-based?
> > >
> >
> >  Both.  There will be a minimum amount of time and a minimum number of
> > releases before a deprecated feature may be removed.
> >
> 
> I dislike this. I think that deprecations should be release-based and
> that we should commit to time-based releases. I think this is simpler
> for users and for developers.

The hope is that this will be the effective end result. But our release
process is not *yet* (though it is the goal) completely automated, so
having fall back position of minimum time is handy. Also, what happens
if we decide to switch to more (or less frequent releases)?


> Presumably the timer starts at a release and only increments at a release?
> 
> So, for example:
> 
> T - 1 month: deprecate feature in trunk
> T: Release N
> T + 7 months: Release N+1
> T + 14 months: Release N+2, feature removed.
> 
> Is this understanding correct?

I think so.

> I think the data on this is skewed, since there was about a 1.4 year
> gap between the last 2 releases of Twisted. If we released each month,
> I can imagine this would change.

At ITA we've been using 2.4 for quite a while... though someone recently
switched us to 2.5.

> >   * Twisted developer deprecates functionality, by adding a
> > warnings.warn(TwistedDeprecationWarning(some useful metadata)) to the code.
> >
> 
> I disagree very strongly on this detail. The deprecation API should be
> higher level than that.
> 
> Specifically, even we implement it with the warnings system, I don't
> think we should litter that decision all over our code base.

I agree. We actually talked about high level API at the meeting,
possibly glyph forgot, disagrees, or just took inaccurate notes :)





From miguel.filho at gmail.com  Mon Apr 28 07:40:23 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 10:40:23 -0300
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <20080428124657.6859.422762456.divmod.quotient.56137@ohm>
References: <394cf6840804280538j4f36890bnaf2e4077d0b2d838@mail.gmail.com>
	<20080428124657.6859.422762456.divmod.quotient.56137@ohm>
Message-ID: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>

On Mon, Apr 28, 2008 at 9:46 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>  Privileges aren't shed immediately when Application is created.  They're
>  shed after privilegedStartService and before startService.  You should
>  delay any potentially sensitive operations until startService (ie, don't
>  do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
>  meant you were opening that file).

Indeed,  I'm doing it from ACLPolicyDaemonFactory.__init__.  Should I
implement startService in my Factory class or somewhere else?

Miguel



From exarkun at divmod.com  Mon Apr 28 07:52:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 09:52:58 -0400
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>
Message-ID: <20080428135258.6859.683821717.divmod.quotient.56160@ohm>

On Mon, 28 Apr 2008 10:40:23 -0300, Miguel Filho <miguel.filho at gmail.com> wrote:
>On Mon, Apr 28, 2008 at 9:46 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>
>>  Privileges aren't shed immediately when Application is created.  They're
>>  shed after privilegedStartService and before startService.  You should
>>  delay any potentially sensitive operations until startService (ie, don't
>>  do them in ACLPolicyDaemonFactory.__init__ which is when I assume you
>>  meant you were opening that file).
>
>Indeed,  I'm doing it from ACLPolicyDaemonFactory.__init__.  Should I
>implement startService in my Factory class or somewhere else?

Only services which are children of the application get startService called
on them.  So to do it this way, you'll need a service in that situation.
Factories get startFactory called on them when they're bound to their first
port (and stopFactory when they're unbound from their last).  If you're
binding a privileged port, though, then this will happen while the process
is still running as root, so it's not as reliable as using startService.

To make a service, you need to implement IService:

http://twistedmatrix.com/documents/current/api/twisted.application.service.IService.html

You may also want to give the service a reference to your factory, or vice
versa, so that they can share state or call methods on each other or
whatever else is necessary.

Jean-Paul



From miguel.filho at gmail.com  Mon Apr 28 09:09:01 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 28 Apr 2008 12:09:01 -0300
Subject: [Twisted-Python] Aplication process uid/gid
In-Reply-To: <20080428135258.6859.683821717.divmod.quotient.56160@ohm>
References: <394cf6840804280640g36e5818cjd7a82cc17c6688d6@mail.gmail.com>
	<20080428135258.6859.683821717.divmod.quotient.56160@ohm>
Message-ID: <394cf6840804280809l11a6ca09ta600c6ea4aa82530@mail.gmail.com>

On Mon, Apr 28, 2008 at 10:52 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
>
>  Only services which are children of the application get startService called
>  on them.  So to do it this way, you'll need a service in that situation.
>  Factories get startFactory called on them when they're bound to their first
>  port (and stopFactory when they're unbound from their last).  If you're
>  binding a privileged port, though, then this will happen while the process
>  is still running as root, so it's not as reliable as using startService.
>

There we go:

class ACLPolicyDaemonService(service.Service):
    def __init__(self):
        self.factory = ACLPolicyDaemonFactory()

    def startService(self):
        self.factory.configure()
        service.Service.startService(self)

I borrowed the code and ideas from the tutorial[1] and it is working
fine, I call my configure() method inside the service, and the file is
created as nobody as needed. Thank you very much for the help.

Regards,

Miguel

[1] http://twistedmatrix.com/projects/core/documentation/howto/tutorial/protocol.html#auto2



From klok000 at gmail.com  Mon Apr 28 13:23:47 2008
From: klok000 at gmail.com (klok000 at gmail.com)
Date: Mon, 28 Apr 2008 15:23:47 -0400
Subject: [Twisted-Python] cannot get simple example to run
Message-ID: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>

Hello everyone.  Try as I might I cannot get a very simple example to run.
I basically want a server that accepts connections, and periodically issues
messages to all clients.  The docs for twisted.word says things are in flux
so I would rather avoid that and just use a LineReceiver.  However right now
I can't get anything to work.

I start the server and it seems to be happy to sit around and accept
connections.  However when I run the client it quits (without saying why)
and no connection is made.  Any help would be very much appreciated.  Here's
the code, log messages below that.  Thanks!

       Kevin

##################################################
# server.py
##################################################
import sys
from twisted.internet.protocol import log
from twisted.internet.protocol import Factory
from twisted.internet.protocol import Protocol
from twisted.internet import reactor

class Echo(Protocol):

    def connectionMade(self):
        sys.stderr.write('Server connectionMade\n')
        self.factory.numProtocols = self.factory.numProtocols+1
        if self.factory.numProtocols > 100:
            self.transport.write("Too many connections, try later")
            self.transport.loseConnection()

    def connectionLost(self, reason):
        sys.stderr.write('Server connectionLost\n')
        self.factory.numProtocols = self.factory.numProtocols-1

    def dataReceived(self, data):
        sys.stderr.write('Server dataReceived\n')
        self.transport.write(data)


factory = Factory()
factory.protocol = Echo

log.startLogging(file('server.log', 'w'))

sys.stderr.write('Server starting...\n')
# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(9010, factory)
reactor.run()
sys.stderr.write('Server done\n')





##################################################
# client.py
##################################################
import sys
from twisted.internet import reactor
from twisted.internet.protocol import log
from twisted.internet.protocol import Protocol
from twisted.internet.protocol import ClientCreator
from twisted.internet.protocol import ClientFactory

class Greeter(Protocol):
    def sendMessage(self, msg):
        sys.stderr.write('Client sendMessage\n')
        self.transport.write("MESSAGE %s\n" % msg)


class GreeterClientFactory(ClientFactory):
    def startedConnecting(self, connector):
        sys.stderr.write('Client startedConnecting\n')

    def buildProtocol(self, addr):
        sys.stderr.write('Client connected\n')
        g = Greeter()
        reactor.callLater(1, g.sendMessage, "This is sent in 1 second")
        reactor.callLater(2, g.sendMessage, "This is sent in 2 second")
        reactor.callLater(3, g.sendMessage, "This is sent in 3 second")
        return Greeter()

    def clientConnectionLost(self, connector, reason):
        sys.stderr.write('Client connectionLost: ' + reason + '\n')

    def clientConnectionFailed(self, connector, reason):
        sys.stderr.write('Client connectionFailed: ' + reason + '\n')


log.startLogging(file('client.log', 'w'))

sys.stderr.write('Client connecting...\n')

f = GreeterClientFactory()
reactor.connectTCP("localhost", 9010, f)

sys.stderr.write('Client done\n')




##################################################
# client.log
##################################################
2008/04/28 12:38 -0400 [-] Log opened.
2008/04/28 12:38 -0400 [-] Client connecting...
2008/04/28 12:38 -0400 [-] Starting factory <__main__.GreeterClientFactory
instance at 0x8354d8c>
2008/04/28 12:38 -0400 [-] Client startedConnecting
2008/04/28 12:38 -0400 [-] Client done





##################################################
# server.log
##################################################
2008/04/28 14:41 -0400 [-] Log opened.
2008/04/28 14:41 -0400 [-] Server starting...
2008/04/28 14:41 -0400 [-] twisted.internet.protocol.Factory starting on
9010
2008/04/28 14:41 -0400 [-] Starting factory
<twisted.internet.protocol.Factory instance at 0xb7cc18cc>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080428/8a8aa965/attachment.html>

From exarkun at divmod.com  Mon Apr 28 13:33:30 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Apr 2008 15:33:30 -0400
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <20080428193330.6859.561461447.divmod.quotient.56272@ohm>

On Mon, 28 Apr 2008 15:23:47 -0400, klok000 at gmail.com wrote:
>Hello everyone.  Try as I might I cannot get a very simple example to run.
>I basically want a server that accepts connections, and periodically issues
>messages to all clients.  The docs for twisted.word says things are in flux
>so I would rather avoid that and just use a LineReceiver.  However right now
>I can't get anything to work.
>
>I start the server and it seems to be happy to sit around and accept
>connections.  However when I run the client it quits (without saying why)
>and no connection is made.  Any help would be very much appreciated.  Here's
>the code, log messages below that.  Thanks!
>
> [snip]

>##################################################
># client.py
>##################################################
> [snip]
>sys.stderr.write('Client connecting...\n')
>
>f = GreeterClientFactory()
>reactor.connectTCP("localhost", 9010, f)
>
>sys.stderr.write('Client done\n')
>

After reactor.connectTCP, you may want to call reactor.run. :)

>##################################################
># client.log
>##################################################
>2008/04/28 12:38 -0400 [-] Log opened.
>2008/04/28 12:38 -0400 [-] Client connecting...
>2008/04/28 12:38 -0400 [-] Starting factory <__main__.GreeterClientFactory
>instance at 0x8354d8c>
>2008/04/28 12:38 -0400 [-] Client startedConnecting
>2008/04/28 12:38 -0400 [-] Client done

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 28 13:36:05 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 28 Apr 2008 15:36:05 -0400
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
References: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <60ed19d40804281236o7607c3fet3f19ab56f9009042@mail.gmail.com>

On Mon, Apr 28, 2008 at 3:23 PM,  <klok000 at gmail.com> wrote:
> Hello everyone.  Try as I might I cannot get a very simple example to run.
> I basically want a server that accepts connections, and periodically issues
> messages to all clients.  The docs for twisted.word says things are in flux
> so I would rather avoid that and just use a LineReceiver.  However right now
> I can't get anything to work.
>
> I start the server and it seems to be happy to sit around and accept
> connections.  However when I run the client it quits (without saying why)
> and no connection is made.  Any help would be very much appreciated.  Here's
> the code, log messages below that.  Thanks!

You're not running the reactor in the client example.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Mon Apr 28 13:38:54 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 28 Apr 2008 19:38:54 -0000
Subject: [Twisted-Python] cannot get simple example to run
In-Reply-To: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
References: <c5828440804281223n3a557a8y27760eacf3bd9cf0@mail.gmail.com>
Message-ID: <20080428193854.25821.1900888453.divmod.xquotient.1174@joule.divmod.com>


On 07:23 pm, klok000 at gmail.com wrote:
>I start the server and it seems to be happy to sit around and accept
>connections.  However when I run the client it quits (without saying 
>why)
>and no connection is made.  Any help would be very much appreciated. 
>Here's
>the code, log messages below that.  Thanks!

You forgot "reactor.run()", so effectively the program never starts :).



From miguel.filho at gmail.com  Tue Apr 29 05:56:04 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Tue, 29 Apr 2008 08:56:04 -0300
Subject: [Twisted-Python] Exit code using twistd
Message-ID: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>

Hello list,

I'm calling my program using twistd, like this:
# twistd -y /usr/lib/python2.4/site-packages/apolicy/server.py -q
--logfile /var/log/twistd.log --pidfile=/var/run/twistd.pid

All right, no problem. But my program makes some tests while starting
the service, like loading configuration files, etc.
If there is any exception twistd keeps running, so I tried calling
reactor.stop(), but I get an RuntimeError saying that it is not
possible to stop the reactor because it is not running. So I tried
calling sys.exit(1). twistd exits, but the code I'm passing is not
returned by twistd, witch returns 0. This messes with my init scripts,
so if my user calls 'service mydaemon start' the system will print an
'OK', but twistd will not be running in case of any errors.

How can I proceed to avoid this behavior?

Regards,

Miguel



From therve at free.fr  Tue Apr 29 14:44:31 2008
From: therve at free.fr (Thomas =?utf-8?q?Herv=C3=A9?=)
Date: Tue, 29 Apr 2008 22:44:31 +0200
Subject: [Twisted-Python] Twisted 8.1.0pre2
In-Reply-To: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>
References: <60ed19d40804261445l7c8a880at7d93aa1c4381ba6c@mail.gmail.com>
Message-ID: <200804292244.31888.therve@free.fr>

Le Saturday 26 April 2008 23:45:55 Christopher Armstrong, vous avez écrit :
> Hey all. I just put together Twisted 8.1.0pre2, because pre1 had a
> regression in IOCP. It's been fixed now along with some other updates.
> Please download it and test your software, especially if you use a
> non-select-on-unix platform! There have been some reactor changes in
> this release.
>
> http://twistedmatrix.com/users/radix/8.1.0pre2/
>
> Note that many of the files are still 'pre1', because they didn't need
> any updates. Only the main Twisted distribution, Core, Conch, and
> Words were updated.

The windows installers for Python 2.4 and 2.5 have just been uploaded. In 
particular, these installers should include zope.interface correctly. Also, 
uninstall has been slightly improved: any feedback is welcome.

Thanks!

-- 
Thomas



From miles.chris at gmail.com  Tue Apr 29 19:54:39 2008
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 30 Apr 2008 11:54:39 +1000
Subject: [Twisted-Python] Exit code using twistd
In-Reply-To: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
References: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
Message-ID: <32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>


On 29/04/2008, at 9:56 PM, Miguel Filho wrote:
> Hello list,
>
> I'm calling my program using twistd, like this:
> # twistd -y /usr/lib/python2.4/site-packages/apolicy/server.py -q
> --logfile /var/log/twistd.log --pidfile=/var/run/twistd.pid
>
> All right, no problem. But my program makes some tests while starting
> the service, like loading configuration files, etc.
> If there is any exception twistd keeps running, so I tried calling
> reactor.stop(), but I get an RuntimeError saying that it is not
> possible to stop the reactor because it is not running. So I tried
> calling sys.exit(1). twistd exits, but the code I'm passing is not
> returned by twistd, witch returns 0. This messes with my init scripts,
> so if my user calls 'service mydaemon start' the system will print an
> 'OK', but twistd will not be running in case of any errors.
>
> How can I proceed to avoid this behavior?

Are you using the Twisted Application Framework to initialise your app?
http://twistedmatrix.com/projects/core/documentation/howto/application.html

If I try to replicate what you describe with one my apps, forcing an  
error during configuration file parsing I get a startup failure with  
non-0 status. e.g.:

$ twistd -y vencoderd.tac -q
Failed to load application: invalid literal for int(): asdf
$ echo $?
1

I actually deploy my apps as a Twisted Plugin, http://twistedmatrix.com/projects/core/documentation/howto/tap.html 
, which makes life a little easier, but gives the same behaviour as  
above. e.g.

$ twistd vencoderd -c configuration.ini
$ echo $?
1
$ tail -2 twistd.log
2008/04/30 12:47 +1100 [-]     self.options[option_name] =  
int(self.options[option_name])
2008/04/30 12:47 +1100 [-] ValueError: invalid literal for int(): asdf

In this case, the error ended up in the log file.

In my application, I parse the configuration file and set everything  
up before creating the service.Application and adding services.

Cheers,
Chris Miles





From miguel.filho at gmail.com  Tue Apr 29 22:30:32 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Wed, 30 Apr 2008 01:30:32 -0300
Subject: [Twisted-Python] Exit code using twistd
In-Reply-To: <32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>
References: <394cf6840804290456ta1b4711n7fda62b5fd897ed5@mail.gmail.com>
	<32626F7C-7EF7-43B9-B4C9-F10D74515870@gmail.com>
Message-ID: <394cf6840804292130v2a82f43cva85f6d81ba387a3d@mail.gmail.com>

On Tue, Apr 29, 2008 at 10:54 PM, Chris Miles <miles.chris at gmail.com> wrote:
>
>  Are you using the Twisted Application Framework to initialise your app?
>  http://twistedmatrix.com/projects/core/documentation/howto/application.html

Yes, I am.

>  In my application, I parse the configuration file and set everything up
> before creating the service.Application and adding services.

All right, the code was much further in the process, running inside
startService and then calling sys.exit(1).

I was looking inside the code, and the service creation is executed
AFTER calling daemonize() I suppose, so my code was calling
sys.exit(1) while the process was already forked and has returned 0 to
the script.

I have moved all code to be loaded before creating any service at all
as you suggested and raising the proper exceptions. It's working fine,
thanks for the input.

Regards,

Miguel



