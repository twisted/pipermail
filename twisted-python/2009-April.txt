From terry at jon.es  Wed Apr  1 07:54:03 2009
From: terry at jon.es (Terry Jones)
Date: Wed, 1 Apr 2009 13:54:03 +0200
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
Message-ID: <18899.21979.864647.248897@jon.es>

I was thinking it would be nice to have a Twisted interest group meetup at
EuroPython (June 30 - July 2) http://www.europython.eu

Would people be interested in attending? Does someone more qualified want
to organize it? Are any Twisted developers planning to be at EuroPython?

The submissions page http://www.europython.eu/submission/ has a category
for Interest Group Meeting or Discussion. I'm thinking more along the lines
of the former - that it would be nice to be better connected to other
Twisted programmers in Europe, to put a face to some of the names on the
mailing list / IRC, etc.

Terry



From nadav at MIT.EDU  Wed Apr  1 13:16:18 2009
From: nadav at MIT.EDU (Nadav Aharony)
Date: Wed, 01 Apr 2009 13:16:18 -0400
Subject: [Twisted-Python] Twistd and application framework questions
Message-ID: <49D3A162.90804@mit.edu>

Hello,

I have finally gotten to a stage where I want to run my very large 
application as a daemonized twisted app, and I have two questions:

1) The program uses multiple UDP/TCP clients and servers that are 
currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've 
been using MultiService, according to the twisted documentation.
Some of these services were are at a top level of my app so it was easy 
to turn that part into a .tac file and switch the reacor calls to 
internet.TCPServer etc.
However, some of them are deep inside my code, and are instantiated on 
the fly.

What is the "right" way to attach them to my service parent? (the part 
with ".setServiceParent(<myMultiservice>")
Should I now add a pointer to my MultiService that will be propagated 
down the  code hierarchy to each of these calls and be accessible at the 
inner scopes?
Is there a neater way to do it just with importing the right modules? 
(in the same way that in usual twisted scripts the loaded reactor is a 
global reactor)

2)  There are still scenarios where I would want to run my code the 
"reactor" way rather than than using the application framework, and I 
would love to be able to keep a single file that's compatible with both 
modes..
Is there a way to detect in runtime whether the code is being run 
through 'twistd' and the app framework or if its run directly?
I was thinking of doing something like:

if <test if we are run as an app>:
    internet.TCPServer(<port>,<factory>).setServiceParent(<myMultiservice>)
else:
    reactor.listenTCP(<port>,<factory>)


Thanks!
Nadav





From jml at mumak.net  Wed Apr  1 18:11:18 2009
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Apr 2009 09:11:18 +1100
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <d06a5cd30904011511w65b8ca4fg35cb425ccde92760@mail.gmail.com>

On Wed, Apr 1, 2009 at 10:54 PM, Terry Jones <terry at jon.es> wrote:
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
>
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?
>

I'll probably be attending in my capacity as a sometime Bazaar
developer, and will be organizing the Bazaar sprints.

I'm happy to attend a Twisted session, but I'm not going to organize
anything more.

jml



From esteve at sindominio.net  Wed Apr  1 18:57:44 2009
From: esteve at sindominio.net (Esteve =?iso-8859-1?Q?Fern=E0ndez?=)
Date: Thu, 2 Apr 2009 00:57:44 +0200 (CEST)
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <48454.128.54.44.241.1238626664.squirrel@webmail.sindominio.net>

> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
>
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?

I don't know, it all depends on whether my company will allow me to go
EuroPython :-) But I'm not qualified at all, I'm just a padawan Twisted dev,
Glyph forced^Wvolunteered me to become one at PyCon. Man, that guy is very
convincing :-)

> The submissions page http://www.europython.eu/submission/ has a category
> for Interest Group Meeting or Discussion. I'm thinking more along the lines
> of the former - that it would be nice to be better connected to other
> Twisted programmers in Europe, to put a face to some of the names on the
> mailing list / IRC, etc.

I'd definitely be interested in a meeting of Twisted programmers at
EuroPython, unfortunately I didn't meet any European Twisted programmers at
PyCon.

Cheers.




From hoadley at gmail.com  Wed Apr  1 19:42:02 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Wed, 1 Apr 2009 16:42:02 -0700
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: <49D3A162.90804@mit.edu>
References: <49D3A162.90804@mit.edu>
Message-ID: <9bb390e70904011642j628a32cfi6b93d17a2183d2d3@mail.gmail.com>

I can help you with this question:

> 2) ?There are still scenarios where I would want to run my code the
> "reactor" way rather than than using the application framework, and I would
> love to be able to keep a single file that's compatible with both modes..
> Is there a way to detect in runtime whether the code is being run through
> 'twistd' and the app framework or if its run directly?
> I was thinking of doing something like:
>

I'm sure there's a way to introspect and figure out how you are being
run. But...

Why do you want to do this?

If it's because you have different environments between prod and
development then you can look at twisted plugins or I just use ENV
vars from my os.environ.  When the app starts it pulls os.environ
vars.

If it's to debug? You can twistd -noy.

I'd also recommend that you are better off in the long run if you
create a number of unittests. trial offers a way to run unittests
within the reactor.  If you haven't done this step it's a major
lifesaver. Tests help you understand how your service,protocol,etc
react and gives you confidence to roll all your services code together
and have it just work.  I've even used trial to do all kinds of crazy
stuff  in my normal non-twisted python coding. Also buildbot to
automatically run the tests is handy.

If it's to run just one service? You'd add this to the bottom of your
service file (i'm assuming you've separated your service from your tac
file)

if __name__ == "__main__":
    #start your service/services here

the tac file won't execute main when importing the service.  So it's
not two files.  But I'm not sure what your end goal is here.  Do tell.

-rob



From tim at commsecure.com.au  Wed Apr  1 23:21:14 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 2 Apr 2009 14:21:14 +1100
Subject: [Twisted-Python] official packaging
In-Reply-To: <200902231148.04217.esteve@sindominio.net>
References: <200902231148.04217.esteve@sindominio.net>
Message-ID: <20090402142114.0a0e435f@ws35.commsecure.com.au>

Esteve Fernandez <esteve at sindominio.net> wrote:
> Anyway, it would be great to have recent packages of Twisted for distributions 
> that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
> that tend to get a bit outdated.

It's worth mentioning that someone has recently stepped up to fix
ticket 1696 after I'd ignored it for Far Too Long, and very soon it
should be possible to build Twisted RPMs for RHEL just by running
"./setup.py bdist_rpm" in a fresh checkout.

For Debian-based distros, I hear there's a tool called "debhelper" that
apparently has some useful tricks for making .deb packages from a
distutils setup.py; I'm not sure how it interacts with or without
python-central, and I don't know how well it would deal with Twisted's
rather... customised setup.py.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/dc8164af/attachment.pgp 

From therve at free.fr  Thu Apr  2 03:16:02 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Thu, 02 Apr 2009 09:16:02 +0200
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <1238656562.11216.2.camel@minime>

Le mercredi 01 avril 2009 ? 13:54 +0200, Terry Jones a ?crit :
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
> 
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?
> 
> The submissions page http://www.europython.eu/submission/ has a category
> for Interest Group Meeting or Discussion. I'm thinking more along the lines
> of the former - that it would be nice to be better connected to other
> Twisted programmers in Europe, to put a face to some of the names on the
> mailing list / IRC, etc.

I'll probably be there, although I didn't confirm yet. As others, I
won't have the time to organize something too official, but I'll be
happy to join and help.

-- 
Thomas




From stodge at gmail.com  Thu Apr  2 08:02:42 2009
From: stodge at gmail.com (Mike Stoddart)
Date: Thu, 2 Apr 2009 08:02:42 -0400
Subject: [Twisted-Python] PBServerFactory - which client disconnected?
Message-ID: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>

I'm experimenting with Twisted Spread for a registry server, among other
things. I'm just curious how the onDisconnect function knows which client
disconnected? I'm also curious why the PBServerFactory class doesn't have a
disconnection function to complement clientConnectionMade? I don't need
security - this is running on a closed, secure LAN and I don't need
"Avatars". Any suggestions on how to improve this?

from twisted.internet import protocol, reactor
from twisted.python import log
from twisted.spread import pb
import sys

log.startLogging(sys.stdout)


class RegistryService(pb.Root):
    def __init__(self):
        self._clientCount = 0
        self._clients = {}

    def remote_register(self, name, service):
        log.msg("Registering service " + name)
        log.msg(str(service))

        # Welcome the client.
        service.callRemote("welcome")

    def onDisconnect(self):
        log.msg("onDisconnect")

        log.msg("Client count = " + str(len(self._clients)))

    def onConnect(self, broker):
        s = broker.transport.getPeer().host + ":" +
str(broker.transport.getPeer().port)
        log.msg("onConnect - client at " + s)

        # Add the client.
        self._clients[s] = broker.transport
        log.msg("Client count = " + str(len(self._clients)))

        # Set a callback in case they disconnect.
        broker.notifyOnDisconnect(self.onDisconnect)

class MyPBFactory(pb.PBServerFactory):
    def __init__(self, root):
        pb.PBServerFactory.__init__(self, root)

    def clientConnectionMade(self, broker):
        log.msg("clientConnectionMade")
        self.root.onConnect(broker)

registry = RegistryService()
f = MyPBFactory(RegistryService())
reactor.listenTCP(9999, f)
reactor.run()


Thanks
Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/ca084ac5/attachment.htm 

From itamar at itamarst.org  Thu Apr  2 08:40:14 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Apr 2009 08:40:14 -0400
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: <49D3A162.90804@mit.edu>
References: <49D3A162.90804@mit.edu>
Message-ID: <1238676014.16592.52.camel@pintsize>

On Wed, 2009-04-01 at 13:16 -0400, Nadav Aharony wrote:

> 1) The program uses multiple UDP/TCP clients and servers that are 
> currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've 
> been using MultiService, according to the twisted documentation.
> Some of these services were are at a top level of my app so it was easy 
> to turn that part into a .tac file and switch the reacor calls to 
> internet.TCPServer etc.
> However, some of them are deep inside my code, and are instantiated on 
> the fly.
> 
> What is the "right" way to attach them to my service parent? (the part 
> with ".setServiceParent(<myMultiservice>")
> Should I now add a pointer to my MultiService that will be propagated 
> down the  code hierarchy to each of these calls and be accessible at the 
> inner scopes?
> Is there a neater way to do it just with importing the right modules? 
> (in the same way that in usual twisted scripts the loaded reactor is a 
> global reactor)
> 
> 2)  There are still scenarios where I would want to run my code the 
> "reactor" way rather than than using the application framework, and I 
> would love to be able to keep a single file that's compatible with both 
> modes..
> Is there a way to detect in runtime whether the code is being run 
> through 'twistd' and the app framework or if its run directly?
> I was thinking of doing something like:
> 
> if <test if we are run as an app>:
>     internet.TCPServer(<port>,<factory>).setServiceParent(<myMultiservice>)
> else:

1. You don't need to attach to parents service, you can also call
start/stopService directly.

2. You can still call "self.port = reactor.listenTCP(...)" directly in a
custom startService, and self.port.stopListening() in a custom
stopService. You don't have to use twisted.application.internet, it
doesn't add much beyond a little convenience.

The point of services is to encapsulate startup and shutdown logic, not
to make your life harder :)




From dripton at ripton.net  Thu Apr  2 10:04:11 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 2 Apr 2009 07:04:11 -0700
Subject: [Twisted-Python] official packaging
In-Reply-To: <20090402142114.0a0e435f@ws35.commsecure.com.au>
References: <200902231148.04217.esteve@sindominio.net>
	<20090402142114.0a0e435f@ws35.commsecure.com.au>
Message-ID: <20090402140411.GC10882@vidar.dreamhost.com>

On 2009.04.02 14:21:14 +1100, Tim Allen wrote:
> Esteve Fernandez <esteve at sindominio.net> wrote:
> > Anyway, it would be great to have recent packages of Twisted for distributions 
> > that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
> > that tend to get a bit outdated.
> 
> It's worth mentioning that someone has recently stepped up to fix
> ticket 1696 after I'd ignored it for Far Too Long, and very soon it
> should be possible to build Twisted RPMs for RHEL just by running
> "./setup.py bdist_rpm" in a fresh checkout.

Thanks Tim.  I make RHEL5 rpms for Twisted at work, using "setup.py
bdist_rpm" rather than a manually generated spec file.  I thought we
were just about the only ones who cared about this, so I've never really
tried to push the (small) changes upstream.  But when your changes land
I'll test that they work for us too.

An issue with pushing this kind of change to RPM-based distros is that
writing .spec files by hand and maintaining them is their core
competency, so they mostly think using setup.py bdist_rpm to
autogenerate them is weird and unnecessary and wrong.

-- 
David Ripton    dripton at ripton.net



From cary.hull at gmail.com  Thu Apr  2 12:05:27 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Thu, 2 Apr 2009 09:05:27 -0700
Subject: [Twisted-Python] Documentation overviews
Message-ID: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>

Hi folks,

One of the goals for the Pycon sprint was to develop user oriented overviews
for existing documentation.
These would ideally guide users through everything they would need to read
in order to accomplish a desired goal with Twisted.

I've formulated the following 'track' suggestions based on a conversation in
the sprint room a few nights ago.
Feedback would be greatly appreciated.

---

Overviews

#   The basics of event driven applications (beginner)

#   No hand holding, just the facts (advanced, already familiar with
concepts involved)

#   Testing Twisted applications

#   Driving processes (interactively or otherwise)

#   Custom protocols

#   When it makes sense to use threads

#   Persisting application data (Would cover various options including
Axiom)

#   Task scheduling (Would cover various options including Axiom)

#   Web clients

#   Web applications using just Twisted

#   Web applications using WSGI (Maybe show how to run Django)

#   Mail clients

#   Mail servers

#   SSH clients

#   SSH servers

#   XMPP (Jabber) clients

#   XMPP (Jabber) servers

#   Multiple servers in a single application

#   GUI applications (non web)

#   Networked video games
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/f2961b1c/attachment.htm 

From msoulier at digitaltorque.ca  Thu Apr  2 12:46:20 2009
From: msoulier at digitaltorque.ca (Michael P. Soulier)
Date: Thu, 2 Apr 2009 12:46:20 -0400
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <20090402164618.GO26849@anton.digitaltorque.ca>

On 02/04/09 Cary Hull said:

> #   Web clients
> 
> #   Web applications using just Twisted
> 
> #   Web applications using WSGI (Maybe show how to run Django)

# Web proxies, with and without authentication, with and without SSL

Mike
-- 
Michael P. Soulier <msoulier at digitaltorque.ca>
"Any intelligent fool can make things bigger and more complex... It takes a
touch of genius - and a lot of courage to move in the opposite direction."
--Albert Einstein
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/78fb59a5/attachment.pgp 

From terry at jon.es  Thu Apr  2 12:29:47 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 2 Apr 2009 18:29:47 +0200
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: Your message at 08:40:14 on Thursday, 2 April 2009
References: <49D3A162.90804@mit.edu>
	<1238676014.16592.52.camel@pintsize>
Message-ID: <18900.59387.760567.695239@jon.es>

Hi Nadav, Itamar

>>>>> "Itamar" == Itamar Shtull-Trauring <itamar at itamarst.org> writes:
Itamar> On Wed, 2009-04-01 at 13:16 -0400, Nadav Aharony wrote:

>> 1) The program uses multiple UDP/TCP clients and servers that are
>> currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've
>> been using MultiService, according to the twisted documentation.  Some
>> of these services were are at a top level of my app so it was easy to
>> turn that part into a .tac file and switch the reacor calls to
>> internet.TCPServer etc.  However, some of them are deep inside my code,
>> and are instantiated on the fly.

We (at Fluidinfo) have a similar situation, though I wouldn't say the
services that start/stop later are deeply buried. They're just not started
right away when startService is called on the MultiService via the plugin
mechanism.

>> What is the "right" way to attach them to my service parent? (the part
>> with ".setServiceParent(<myMultiservice>") Should I now add a pointer to
>> my MultiService that will be propagated down the code hierarchy to each
>> of these calls and be accessible at the inner scopes?  Is there a neater
>> way to do it just with importing the right modules?  (in the same way
>> that in usual twisted scripts the loaded reactor is a global reactor)

At the suggestion/insistence :-) of Esteve Fernandez, we do this by using
the components machinery of Twisted. You write an adaptor that knows how to
take the core of your service and adapt it to some other form of service
interface. The adaptor can have access to the original Multiservice, it can
provide startService and stopService methods that call into the special
service that you're trying to launch, etc.  It's nice because the
mechanisms for creating a new service and getting it hooked up to the
outside world, can be encapsulated in the adaptor and don't pollute the
code that's trying to just provide the underlying service (your "business
logic" I guess you'd call that :-))

BTW, we also have some service startup ordering constraints that we fixed
by subclassing Multiservice. There's a slow-motion thread on this approach,
so the jury's still out, but the code described here works fine for me:

  http://twistedmatrix.com/pipermail/twisted-python/2009-February/019225.html
  http://twistedmatrix.com/pipermail/twisted-python/2009-February/019249.html

Itamar> 1. You don't need to attach to parents service, you can also call
Itamar> start/stopService directly.

Itamar> 2. You can still call "self.port = reactor.listenTCP(...)" directly
Itamar> in a custom startService, and self.port.stopListening() in a custom
Itamar> stopService. You don't have to use twisted.application.internet, it
Itamar> doesn't add much beyond a little convenience.

Itamar> The point of services is to encapsulate startup and shutdown logic,
Itamar> not to make your life harder :)

The main reason I like to add the new service to the original Multiservice
is that its stopService gets called at the right time and I don't have to
think about it. That's a nice convenience.

Terry



From stodge at gmail.com  Thu Apr  2 14:18:07 2009
From: stodge at gmail.com (Mike Stoddart)
Date: Thu, 2 Apr 2009 14:18:07 -0400
Subject: [Twisted-Python] Re: PBServerFactory - which client disconnected?
In-Reply-To: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>
References: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>
Message-ID: <b63684450904021118j22edf8cco259693345b2bade3@mail.gmail.com>

So I can do the following but the onDisconnect and onConnect functions don't
receive the broker - odd design decision?
Also, there's a comment in PBServerFactory.clientConnectionMade --> "# XXX
does this method make any sense?".  Weird.

class MyServerObject(pb.Root):
    def __init__(self):
        pass

    def onConnect(self):
        log.msg("MyServerObject::onConnect")

    def onDisconnect(self):
        log.msg("MyServerObject::onDisconnect")

class MyServerFactory(pb.PBServerFactory):

    def buildProtocol(self, addr):
        s = addr.host + ":" + str(addr.port)
        log.msg("MyServerFactory::buildProtocol - building protocol for " +
s)
        broker = pb.PBServerFactory.buildProtocol(self, addr)
        broker.notifyOnDisconnect(self.root.onDisconnect)
        broker.notifyOnConnect(self.root.onConnect)
        return broker

reactor.listenTCP(9999, MyServerFactory(MyServerObject()))
reactor.run()

On Thu, Apr 2, 2009 at 8:02 AM, Mike Stoddart <stodge at gmail.com> wrote:

> I'm experimenting with Twisted Spread for a registry server, among other
> things. I'm just curious how the onDisconnect function knows which client
> disconnected? I'm also curious why the PBServerFactory class doesn't have a
> disconnection function to complement clientConnectionMade? I don't need
> security - this is running on a closed, secure LAN and I don't need
> "Avatars". Any suggestions on how to improve this?
>
> from twisted.internet import protocol, reactor
> from twisted.python import log
> from twisted.spread import pb
> import sys
>
> log.startLogging(sys.stdout)
>
>
> class RegistryService(pb.Root):
>     def __init__(self):
>         self._clientCount = 0
>         self._clients = {}
>
>     def remote_register(self, name, service):
>         log.msg("Registering service " + name)
>         log.msg(str(service))
>
>         # Welcome the client.
>         service.callRemote("welcome")
>
>     def onDisconnect(self):
>         log.msg("onDisconnect")
>
>         log.msg("Client count = " + str(len(self._clients)))
>
>     def onConnect(self, broker):
>         s = broker.transport.getPeer().host + ":" +
> str(broker.transport.getPeer().port)
>         log.msg("onConnect - client at " + s)
>
>         # Add the client.
>         self._clients[s] = broker.transport
>         log.msg("Client count = " + str(len(self._clients)))
>
>         # Set a callback in case they disconnect.
>         broker.notifyOnDisconnect(self.onDisconnect)
>
> class MyPBFactory(pb.PBServerFactory):
>     def __init__(self, root):
>         pb.PBServerFactory.__init__(self, root)
>
>     def clientConnectionMade(self, broker):
>         log.msg("clientConnectionMade")
>         self.root.onConnect(broker)
>
> registry = RegistryService()
> f = MyPBFactory(RegistryService())
> reactor.listenTCP(9999, f)
> reactor.run()
>
>
> Thanks
> Mike
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/30a73876/attachment.htm 

From jay at splitstreams.com  Thu Apr  2 15:53:19 2009
From: jay at splitstreams.com (Jay Deiman)
Date: Thu, 02 Apr 2009 14:53:19 -0500
Subject: [Twisted-Python] Question about application exit handling
Message-ID: <49D517AF.5020104@splitstreams.com>

First, I'm pretty new to the Twisted framework and I've spent a lot of 
time poking through documentation and subsequently, I've managed to 
figure out a lot of things on my own.

Here is one issue I'm having right now.  I wrote an application to be 
run under twistd and it works great, except for one problem.  When I try 
to exit twistd, it hangs.  I know why this is, it's due to a 
twisted.python.threadpool.ThreadPool that I've instantiated and use in 
my code.  Now, here is the actual question.  Is there a 
callback/signal/notifier of some sort that is triggered when an 
application is closed?  I know twistd handles the SIGINT, SIGTERM, etc., 
but is there some sort of notification that is sent to the current 
running application that I can use for clean up?

Thanks,

Jay

-- 
Jay Deiman

\033:wq!



From jay at splitstreams.com  Thu Apr  2 16:27:59 2009
From: jay at splitstreams.com (Jay Deiman)
Date: Thu, 02 Apr 2009 15:27:59 -0500
Subject: [Twisted-Python] Question about application exit handling
In-Reply-To: <49D517AF.5020104@splitstreams.com>
References: <49D517AF.5020104@splitstreams.com>
Message-ID: <49D51FCF.6020009@splitstreams.com>

Jay Deiman wrote:
> First, I'm pretty new to the Twisted framework and I've spent a lot of 
> time poking through documentation and subsequently, I've managed to 
> figure out a lot of things on my own.
> 
> Here is one issue I'm having right now.  I wrote an application to be 
> run under twistd and it works great, except for one problem.  When I try 
> to exit twistd, it hangs.  I know why this is, it's due to a 
> twisted.python.threadpool.ThreadPool that I've instantiated and use in 
> my code.  Now, here is the actual question.  Is there a 
> callback/signal/notifier of some sort that is triggered when an 
> application is closed?  I know twistd handles the SIGINT, SIGTERM, etc., 
> but is there some sort of notification that is sent to the current 
> running application that I can use for clean up?

Nevermind.  I initially misunderstood the startFactory() and 
stopFactory() method docs for the Factory class.  Everything works 
perfectly now.

-- 
Jay Deiman

\033:wq!



From mr.file at gmail.com  Thu Apr  2 17:31:12 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 2 Apr 2009 23:31:12 +0200
Subject: [Twisted-Python] PBClientFactory and getRootObject
Message-ID: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>

Hi everyone,
I'm writing a server and a client using Perspective Broker with no Avatar
and no auth.
The server accumulates some data using a DeferredQueue.
The clients using a remote call retrieve one item per time from the queue
and elaborates it making some changes on a database using adbapi.
What i want to know is:
1) how can i recursively call the remote method to retrieve the items from
the server?
2) can i defer the database operations to a thread so every client can
elaborates multiple requests per time?

The code i'm using is this:

from twisted.internet import reactor, defer, pb
from twisted.enterprise import adbapi
from twisted.python import log
import os

globalConfigurationFile=os.path.abspath('conf' + os.sep +
'configuration.ini')

class DataBasePreparerClient(object):
    '''
    DataBasePreparerClient()
    '''

    def __init__(self, globalConfigurationFile):
        self._gcf = globalConfigurationFile
        self.data = {}
        self._parseConfig()
        self._createDbPool()
        self.d = defer.Deferred()
        self.clientfactory = pb.PBClientFactory()

    def _createDbPool(self):
        self.dbpool = adbapi.ConnectionPool('cx_Oracle',
self.data['db_username'], self.data['db_password'], self.data['db_tns'])

    def connect(self):
        reactor.connectTCP(self.data['server_ip'], self.data['server_port'],
self.clientfactory)
        self.d = self.clientfactory.getRootObject()
        self.dbpool.connect()
        self.d.addCallbacks(self.get_item, self._eb)

    def _eb(self, reason):
        print "Failure: ", reason.getErrorMessage()

    def get_item(self, result):
        d = result.callRemote("get_item")
        d.addCallback(self.got_item)

    def got_item(self, item):
        query = "update table where ..."
        res = self.dbpool.runOperation(query)
        res.addErrback(self._eb)
        self.d = self.clientfactory.getRootObject()
        self.d.addCallbacks(self.get_item, self._eb)

if __name__ == "__main__":
    DataBasePreparerClient(globalConfigurationFile).connect()
    reactor.run()

To call recursively the remote object in function connect i call
clientfactory.getRootObject() and addCallback() for the first time, and the
i recall always self.clientfactory.getRootObject() and self.d.addCallback
when the db query has completed.
Is this correct?
Do I have to always call self.clientfactory.getRootObject() every time i
have to call a remote method?
Can i deferToThread the function got_item or
self.dbpool.runOperation(query)?
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090402/871d5ba2/attachment.htm 

From mr.file at gmail.com  Fri Apr  3 10:08:27 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Fri, 3 Apr 2009 16:08:27 +0200
Subject: [Twisted-Python] twisted and logging
Message-ID: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>

Hi,
i'm using the package twisted.python.log to log messages. Till now, it's all
ok, but with the standard logging package from python i had setup a logging
system that logged normal logs to one file, error logs to a separete files,
and some special operations to one other file. Every logging instance was an
instance of the RotatingFileHandler logging class.
I saw that there is a rotating file handler like class in twisted, but how
can i achieve the same behaviour above? (Three different logging instances
to three different rotating files?)
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090403/9124ecba/attachment.htm 

From andrewfr_ice at yahoo.com  Fri Apr  3 13:57:12 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 3 Apr 2009 10:57:12 -0700 (PDT)
Subject: [Twisted-Python] Documentation overviews
Message-ID: <169823.84197.qm@web34202.mail.mud.yahoo.com>


Message: 1
Date: Thu, 2 Apr 2009 09:05:27 -0700
From: Cary Hull <cary.hull at gmail.com>
Subject: [Twisted-Python] Documentation overviews
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <3fce0ae70904020905l286b78acvb17f4f0d572d9680 at mail.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi Cary:

>One of the goals for the Pycon sprint was to develop user oriented >overviews for existing documentation. These would ideally guide users >through everything they would need to read in order to accomplish a >desired goal with Twisted.

>I've formulated the following 'track' suggestions based on a conversation >in the sprint room a few nights ago. Feedback would be greatly >appreciated.

Sadly I couldn't make it to PyCon 2009 this year. However I would add two things.

1) A Section on Control Flow. 

In my PyCon 2008 talk, I tried to explain what the control flow of a Twisted programme was. I consider this lack of information a deficiency in the Fettig book (a book that helped me). I needed to understand control flow to solve my problem. I believe how control flow understand how Twisted can provide a form of non-preemptive multitasking without threads. It also explains how to structure a Twisted programme.

2) The Class Hierarchy

I believe a source of confusion is over how the classes are used. It would be good to have something like UML class diagrammes.

Cheers,
Andrew

P.S - one of these days I have to fix the slides for "Adventures" and write the paper companion









      



From glyph at divmod.com  Fri Apr  3 17:25:35 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 03 Apr 2009 21:25:35 -0000
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <20090403212535.12555.983534910.divmod.xquotient.6963@weber.divmod.com>


On 2 Apr, 04:05 pm, cary.hull at gmail.com wrote:
>Hi folks,
>
>One of the goals for the Pycon sprint was to develop user oriented 
>overviews
>for existing documentation.
>These would ideally guide users through everything they would need to 
>read
>in order to accomplish a desired goal with Twisted.
>
>I've formulated the following 'track' suggestions based on a 
>conversation in
>the sprint room a few nights ago.

>Feedback would be greatly appreciated.

(list elided)

It would be nice if these could be phrased as the completions to a 
sentence so it was clear what they meant.

For example, "so, you want to ... Twisted"

"So, you want to write a web application with Twisted."

"So, you want to learn the basics of Twisted."

"So, you want to deploy a plugin for Twisted."

Maybe someone can propose a better sentence to fill out; the idea 
though, is to have some consistent perspective on the task the user is 
trying to perform, rather than the things they might want to learn 
(since they may need to learn multiple things in order to perform the 
task at hand).



From dave at davebritton.com  Sat Apr  4 12:38:32 2009
From: dave at davebritton.com (Dave Britton)
Date: Sat, 4 Apr 2009 11:38:32 -0500
Subject: [Twisted-Python] Documentation overviews
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <029501c9b543$cabd7520$0500a8c0@yoda>

Twisted masters,
As a twisted newbie, who still doesn't really feel like I get it, but is really drawn to it anyway, my humble advice is to teach how to navigate the use of the libraries,. especially with respect to how data is passed from one process to another, and how to understand the process flow, and how to integrate your own code for your application into the library correctly. It seems like there is an expected but unstated right approach or style that will work best and most easily... the tao of twisted so to speak... but what is this path?
   Being old I still think in terms of sequences, conditionals and iterations, so it took a while to get that if I wanted a sequence of operations to happen as an asynchronous event (a Deferred) that went off on its own for a while, (and when it returns, whatever was going on wherever it was called from is long gone, like the deferred was some spaceship returning from a long near-lightspeed journey!) I had to construct that sequence as a string of callbacks, each attached to the previous, and to get any conditional or iterative activity within that sequence I had to figure out how to pass arguments that would provide enough information to the next callback. That has been extra tricky for me in the context of how to correctly use the library of classes available, especially how and/or when to extend or subclass them. In part this is because although I have used python for a number of years, I have never pushed the envelope in terms of power programming techniques. Thus, it would be helpful also if there was a subsection of the documentation that discussed how advanced python techniques (eg Factories) are used (more about python than twisted, per se, but essential to understanding and using twisted). The Protocol class and how to use it viz the Factory a Protocol goes with is especially confusing to me, for example, yet this is essential in twisted.
   So I admire you guys tremendously and appreciate your work. I hope someday I grok it enough to be able to contribute to the documentation in some way.
-Dave Britton
  ----- Original Message ----- 
  From: Cary Hull 
  To: Twisted general discussion 
  Sent: Thursday, April 02, 2009 11:05 AM
  Subject: [Twisted-Python] Documentation overviews


  Hi folks,

  One of the goals for the Pycon sprint was to develop user oriented overviews for existing documentation.
  These would ideally guide users through everything they would need to read in order to accomplish a desired goal with Twisted.

  I've formulated the following 'track' suggestions based on a conversation in the sprint room a few nights ago.
  Feedback would be greatly appreciated.

  ---

  Overviews

  #   The basics of event driven applications (beginner)

  #   No hand holding, just the facts (advanced, already familiar with concepts involved)

  #   Testing Twisted applications

  #   Driving processes (interactively or otherwise)

  #   Custom protocols

  #   When it makes sense to use threads

  #   Persisting application data (Would cover various options including Axiom)

  #   Task scheduling (Would cover various options including Axiom)

  #   Web clients

  #   Web applications using just Twisted

  #   Web applications using WSGI (Maybe show how to run Django)

  #   Mail clients

  #   Mail servers

  #   SSH clients

  #   SSH servers

  #   XMPP (Jabber) clients

  #   XMPP (Jabber) servers

  #   Multiple servers in a single application

  #   GUI applications (non web)

  #   Networked video games



------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090404/1ae0573c/attachment.htm 

From drew.smathers at gmail.com  Sat Apr  4 14:18:38 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sat, 4 Apr 2009 14:18:38 -0400
Subject: [Twisted-Python] twisted and logging
In-Reply-To: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>
References: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>
Message-ID: <368574aa0904041118y1b528b28g2e97bbbd2a08425d@mail.gmail.com>

On Fri, Apr 3, 2009 at 10:08 AM, Fabrizio Mancini <mr.file at gmail.com> wrote:
> Hi,
> i'm using the package twisted.python.log to log messages. Till now, it's all
> ok, but with the standard logging package from python i had setup a logging
> system that logged normal logs to one file, error logs to a separete files,
> and some special operations to one other file. Every logging instance was an
> instance of the RotatingFileHandler logging class.
> I saw that there is a rotating file handler like class in twisted, but how
> can i achieve the same behaviour above? (Three different logging instances
> to three different rotating files?)
> Thanks in advance


Why not just continue using the standard logging API?  Twisted doesn't
preclude you from doing so:

http://twistedmatrix.com/projects/core/documentation/howto/logging.html#auto3

I use standard logging with twisted without any issues for the same
use case you've described using handlers and filters.

-Drew



From andrewfr_ice at yahoo.com  Sat Apr  4 18:04:49 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 4 Apr 2009 15:04:49 -0700 (PDT)
Subject: [Twisted-Python] Question about Descriptors and SelectReactor 
Message-ID: <141009.42235.qm@web34204.mail.mud.yahoo.com>


Hi:

Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?

Cheers,
Andrew


      



From exarkun at twistedmatrix.com  Sun Apr  5 00:05:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Apr 2009 04:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1238904318.84.3148232@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090405/6a701d29/attachment.htm 

From drew.smathers at gmail.com  Mon Apr  6 11:39:49 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 6 Apr 2009 11:39:49 -0400
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <141009.42235.qm@web34204.mail.mud.yahoo.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
Message-ID: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>

On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi:
>
> Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?
>

I would say a function of the operating system - or specifically
ulimit on a *nix system.

-Drew



From travis at crystaltech.com  Mon Apr  6 12:36:25 2009
From: travis at crystaltech.com (Travis Kiel)
Date: Mon, 6 Apr 2009 11:36:25 -0500
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <E083C354AEE0094BB00E091C7305C2AD05FE9757@NEWTEKEXCH02.newtekcapital.com>

On Win32, OS select() can take somewhere between 400-450 handles from what I recall.  You will start to suffer although I think you can get beyond this via subprocesses, yet I haven't explored that area yet.

-Tkiel

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Drew Smathers
Sent: Monday, April 06, 2009 8:40 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Question about Descriptors and SelectReactor

On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi:
>
> Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?
>

I would say a function of the operating system - or specifically
ulimit on a *nix system.

-Drew

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Notice: This communication, including attachments, may contain information that is confidential. It constitutes non-public information intended to be conveyed only to the designated recipient(s). If the reader or recipient of this communication is not the intended recipient, an employee or agent of the intended recipient who is responsible for delivering it to the intended recipient, or if you believe that you have received this communication in error, please notify the sender immediately by return e-mail and promptly delete this e-mail, including attachments without reading or saving them in any manner. The unauthorized use, dissemination, distribution, or reproduction of this e-mail, including attachments, is prohibited and may be unlawful. If you have received this email in error, please notify us immediately by e-mail or telephone and delete the e-mail and the attachments (if any).

From drew.smathers at gmail.com  Mon Apr  6 16:07:13 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 6 Apr 2009 16:07:13 -0400
Subject: [Twisted-Python] New user - plugin question
In-Reply-To: <BAY112-W549DD83E0677DCFACA1096D18D0@phx.gbl>
References: <BAY112-W549DD83E0677DCFACA1096D18D0@phx.gbl>
Message-ID: <368574aa0904061307x763f21b2s42f82eae342de9ad@mail.gmail.com>

On Mon, Mar 30, 2009 at 6:27 PM, tim wylie <timwylie at hotmail.com> wrote:
> Hello,
> ?? I'm a long time linux/python user who's just now starting to use
> twisted.? I am looking for advice more than anything specific.? We're
> working on a small game/etc server that has several small games that can be
> played between users.? Maybe a card game, tic-tac-toe, etc.? There are a lot
> of different plugin subclasses to inherit from-how do you know which is
> best?? And with this kind of framework, is it better to have one interface
> class, say iGame, that all the games inherit from, or is it better to treat
> each game like a seperate plugin inheriting from different twisted plugin
> classes?
>

Unfortunately, I don't think many people will have advice beyond: "Do
what feels right."

Design is an iterative process, you learn from your mistakes.  Try
just writing your game - doing it the "wrong" way first - and then
think more about what makes sense in terms of design, or ask more
specific questions about design later when you've actually implemented
something.

> ? There is a lot of good twisted documentation, but that is what also makes
> it difficult because each one does things differently depending on what
> they're implementing and it makes it difficult to decide which is the
> correct approach for what I want to do.? So, if there are any good documents
> related closer to what I'm doing I'd appreciate the heads up on that as
> well.? Well, thanks for your time.

Try going through the classic finger tutorial and then relating those
concepts to your application:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

There is never going to be a document "How to write the very
application you're thinking of now", but rather always "How to write
some other application" - so you're tasked with realizing an
isomorphism between the concepts.

-Drew



From cary.hull at gmail.com  Mon Apr  6 16:38:21 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Mon, 6 Apr 2009 13:38:21 -0700
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <029501c9b543$cabd7520$0500a8c0@yoda>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
Message-ID: <3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>

Thanks all for the excellent feedback so far. I will adapt it to a
refinement on the proposal and update this thread sometime during the week.

On Sat, Apr 4, 2009 at 9:38 AM, Dave Britton <dave at davebritton.com> wrote:

>  Twisted masters,
> As a twisted newbie, who still doesn't really feel like I get it, but is
> really drawn to it anyway, my humble advice is to teach how to navigate the
> use of the libraries,. especially with respect to how data is passed from
> one process to another, and how to understand the process flow, and how to
> integrate your own code for your application into the library correctly. It
> seems like there is an expected but unstated right approach or style that
> will work best and most easily... the tao of twisted so to speak... but what
> is this path?
>    Being old I still think in terms of sequences, conditionals and
> iterations, so it took a while to get that if I wanted a sequence of
> operations to happen as an asynchronous event (a Deferred) that went off on
> its own for a while, (and when it returns, whatever was going on wherever it
> was called from is long gone, like the deferred was some spaceship returning
> from a long near-lightspeed journey!) I had to construct that sequence as
> a string of callbacks, each attached to the previous, and to get any
> conditional or iterative activity within that sequence I had to figure out
> how to pass arguments that would provide enough information to the next
> callback. That has been extra tricky for me in the context of how to
> correctly use the library of classes available, especially how and/or when
> to extend or subclass them. In part this is because although I have used
> python for a number of years, I have never pushed the envelope in terms of
> power programming techniques. Thus, it would be helpful also if there was a
> subsection of the documentation that discussed how advanced python
> techniques (eg Factories) are used (more about python than twisted, per se,
> but essential to understanding and using twisted). The Protocol class and
> how to use it viz the Factory a Protocol goes with is especially confusing
> to me, for example, yet this is essential in twisted.
>    So I admire you guys tremendously and appreciate your work. I hope
> someday I grok it enough to be able to contribute to the documentation in
> some way.
> -Dave Britton
>
> ----- Original Message -----
> *From:* Cary Hull <cary.hull at gmail.com>
> *To:* Twisted general discussion <twisted-python at twistedmatrix.com>
> *Sent:* Thursday, April 02, 2009 11:05 AM
> *Subject:* [Twisted-Python] Documentation overviews
>
> Hi folks,
>
> One of the goals for the Pycon sprint was to develop user oriented
> overviews for existing documentation.
> These would ideally guide users through everything they would need to read
> in order to accomplish a desired goal with Twisted.
>
> I've formulated the following 'track' suggestions based on a conversation
> in the sprint room a few nights ago.
> Feedback would be greatly appreciated.
>
> ---
>
> Overviews
>
> #   The basics of event driven applications (beginner)
>
> #   No hand holding, just the facts (advanced, already familiar with
> concepts involved)
>
> #   Testing Twisted applications
>
> #   Driving processes (interactively or otherwise)
>
> #   Custom protocols
>
> #   When it makes sense to use threads
>
> #   Persisting application data (Would cover various options including
> Axiom)
>
> #   Task scheduling (Would cover various options including Axiom)
>
> #   Web clients
>
> #   Web applications using just Twisted
>
> #   Web applications using WSGI (Maybe show how to run Django)
>
> #   Mail clients
>
> #   Mail servers
>
> #   SSH clients
>
> #   SSH servers
>
> #   XMPP (Jabber) clients
>
> #   XMPP (Jabber) servers
>
> #   Multiple servers in a single application
>
> #   GUI applications (non web)
>
> #   Networked video games
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090406/de572cb2/attachment.htm 

From glyph at divmod.com  Mon Apr  6 17:47:59 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 06 Apr 2009 21:47:59 -0000
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
	<3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
Message-ID: <20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>


On 08:38 pm, cary.hull at gmail.com wrote:
>Thanks all for the excellent feedback so far. I will adapt it to a
>refinement on the proposal and update this thread sometime during the 
>week.

Thanks for your time.  We're all looking forward to see what you can do 
with the documentation :-).



From eyork at apple.com  Mon Apr  6 18:25:39 2009
From: eyork at apple.com (Eric York)
Date: Mon, 6 Apr 2009 15:25:39 -0700
Subject: [Twisted-Python] Fork/Spawn children to accept connections on the
	same port. 
Message-ID: <64BF3FFB-954C-4D6D-AB50-86B8F37CBF5E@apple.com>

I am trying to get the highest level of performance using all of the  
processors cores on a server.

In the past, a unix app would bind/listen to a socket and then fork or  
spawn children to accept connections on that socket. I can?t see how  
to do that in Twisted. Can someone point me in the right direction?

The solution of using a single process to accept connections and then  
farm out work to child processes, while a workable solution, isn?t at  
the same level of performance as children processes that are doing  
their own accepts.

Eric




From matusis at yahoo.com  Mon Apr  6 21:23:25 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 6 Apr 2009 18:23:25 -0700
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <009601c9b71f$736c5b00$5a451100$@com>

I think 1024 on most linux kernels (2.4 and 2.6) for select, you need to go to poll/epoll if you want more, or recompile your kernel.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Monday, April 06, 2009 8:40 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Question about Descriptors and
> SelectReactor
> 
> On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> wrote:
> >
> > Hi:
> >
> > Perhaps this question has been asked before but is there a limit to
> the number of descriptors the SelectReactor can handle? Is this a
> function of the operating system?
> >
> 
> I would say a function of the operating system - or specifically
> ulimit on a *nix system.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From matusis at yahoo.com  Mon Apr  6 21:25:45 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 6 Apr 2009 18:25:45 -0700
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>

> I would say a function of the operating system - or specifically
> ulimit on a *nix system.

I do not think this is correct, on linux: ulimit -n is the number of fds that can be written/read by a process, but the 1024 limit on select is actually hard-compiled into the kernel and can be changed only in the headers with kernel recompilation. 

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Monday, April 06, 2009 8:40 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Question about Descriptors and
> SelectReactor
> 
> On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> wrote:
> >
> > Hi:
> >
> > Perhaps this question has been asked before but is there a limit to
> the number of descriptors the SelectReactor can handle? Is this a
> function of the operating system?
> >
> 
> I would say a function of the operating system - or specifically
> ulimit on a *nix system.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johann.borck at densedata.com  Tue Apr  7 10:13:53 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Tue, 07 Apr 2009 16:13:53 +0200
Subject: [Twisted-Python] trac server error
Message-ID: <49DB5FA1.3050503@densedata.com>

there seems to be some serious problem with http://twistedmatrix.com/trac/
this is what the browser shows me on about one third of the requests:

Traceback (most recent call last):
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/api.py", line 382, in send_error
    'text/html')
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/chrome.py", line 475, in render_template
    return stream.render(method, doctype=doctype)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 146, in render
    output = u''.join(list(generator))
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 200, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 486, in __call__
    for kind, data, pos in chain(stream, [(None, None, None)]):
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 436, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/chrome.py", line 478, in _strip_accesskeys
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1145, in _match
    content = list(content)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1120, in _match
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1109, in _strip
    event = stream.next()
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 941, in _eval
    for event in substream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 920, in _eval
    ctxt):
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 930, in _eval
    result = data.evaluate(ctxt)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/eval.py", line 101, in evaluate
    {'data': data})
  File "/home/trac/.local/share/trac/templates/error.html", line 36, in <Expression u"get_reporter_id(req)">
    <input type="hidden" name="reporter" value="${get_reporter_id(req)}" />
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/util/__init__.py", line 50, in get_reporter_id
    name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'





From andrewfr_ice at yahoo.com  Tue Apr  7 13:13:10 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 7 Apr 2009 10:13:10 -0700 (PDT)
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
Message-ID: <321939.67966.qm@web34205.mail.mud.yahoo.com>


Hi Alec and Drew:

Thanks for answering my question. From reading an excerpt of Steven's "UNIX Network Programming," it implies that the FD_SETSIZE is defined in the kernel. If you want a bigger FD_SETSIZE, you need to recompile the kernel. At least that is the case in BSD 4.4 UNIX.

However I am using Linux. The Twisted documentation is recommending that it may be better to use pollreactor.

Cheers,
Andrew

--- On Tue, 4/7/09, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com> wrote:

> From: twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com>
> Subject: Twisted-Python Digest, Vol 61, Issue 10
> To: twisted-python at twistedmatrix.com
> Date: Tuesday, April 7, 2009, 9:00 AM
> Send Twisted-Python mailing list
> submissions to
>     twisted-python at twistedmatrix.com
> 
> To subscribe or unsubscribe via the World Wide Web, visit
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help'
> to
>     twisted-python-request at twistedmatrix.com
> 
> You can reach the person managing the list at
>     twisted-python-owner at twistedmatrix.com
> 
> When replying, please edit your Subject line so it is more
> specific
> than "Re: Contents of Twisted-Python digest..."
> 
> 
> Today's Topics:
> 
>    1. RE: Question about Descriptors and
> SelectReactor (Alec Matusis)
>    2. trac server error (Johann Borck)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Mon, 6 Apr 2009 18:25:45 -0700
> From: "Alec Matusis" <matusis at yahoo.com>
> Subject: RE: [Twisted-Python] Question about Descriptors
> and
>     SelectReactor
> To: "'Twisted general discussion'" <twisted-python at twistedmatrix.com>
> Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>
> Content-Type: text/plain;   
> charset="utf-8"
> 
> > I would say a function of the operating system - or
> specifically
> > ulimit on a *nix system.
> 
> I do not think this is correct, on linux: ulimit -n is the
> number of fds that can be written/read by a process, but the
> 1024 limit on select is actually hard-compiled into the
> kernel and can be changed only in the headers with kernel
> recompilation. 
> 
> > -----Original Message-----
> > From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-
> > bounces at twistedmatrix.com]
> On Behalf Of Drew Smathers
> > Sent: Monday, April 06, 2009 8:40 AM
> > To: Twisted general discussion
> > Subject: Re: [Twisted-Python] Question about
> Descriptors and
> > SelectReactor
> > 
> > On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> > wrote:
> > >
> > > Hi:
> > >
> > > Perhaps this question has been asked before but
> is there a limit to
> > the number of descriptors the SelectReactor can
> handle? Is this a
> > function of the operating system?
> > >
> > 
> > I would say a function of the operating system - or
> specifically
> > ulimit on a *nix system.
> > 
> > -Drew
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



      



From matusis at yahoo.com  Tue Apr  7 14:17:25 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 7 Apr 2009 11:17:25 -0700
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <321939.67966.qm@web34205.mail.mud.yahoo.com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>
Message-ID: <00e301c9b7ad$1abf9c40$503ed4c0$@com>

> However I am using Linux. The Twisted documentation is recommending
> that it may be better to use pollreactor

I would be actually quite curious to know the rationale of choosing select()
over epoll() these days.
epoll() scales like O(1) with the number of file descriptors, it is very
performant, stable, and has no limitation on the overall number of fds on
linux (except for your /proc and ulimit -n settings). I'd use epoll reactor,
unless you have some very specialized requirement.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Andrew Francis
> Sent: Tuesday, April 07, 2009 10:13 AM
> To: twisted-python at twistedmatrix.com
> Subject: [Twisted-Python] RE: Question about Descriptors and
> SelectReactor
> 
> 
> Hi Alec and Drew:
> 
> Thanks for answering my question. From reading an excerpt of Steven's
> "UNIX Network Programming," it implies that the FD_SETSIZE is defined
> in the kernel. If you want a bigger FD_SETSIZE, you need to recompile
> the kernel. At least that is the case in BSD 4.4 UNIX.
> 
> However I am using Linux. The Twisted documentation is recommending
> that it may be better to use pollreactor.
> 
> Cheers,
> Andrew
> 
> --- On Tue, 4/7/09, twisted-python-request at twistedmatrix.com <twisted-
> python-request at twistedmatrix.com> wrote:
> 
> > From: twisted-python-request at twistedmatrix.com <twisted-python-
> request at twistedmatrix.com>
> > Subject: Twisted-Python Digest, Vol 61, Issue 10
> > To: twisted-python at twistedmatrix.com
> > Date: Tuesday, April 7, 2009, 9:00 AM
> > Send Twisted-Python mailing list
> > submissions to
> >     twisted-python at twistedmatrix.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > or, via email, send a message with subject or body 'help'
> > to
> >     twisted-python-request at twistedmatrix.com
> >
> > You can reach the person managing the list at
> >     twisted-python-owner at twistedmatrix.com
> >
> > When replying, please edit your Subject line so it is more
> > specific
> > than "Re: Contents of Twisted-Python digest..."
> >
> >
> > Today's Topics:
> >
> >    1. RE: Question about Descriptors and
> > SelectReactor (Alec Matusis)
> >    2. trac server error (Johann Borck)
> >
> >
> > ---------------------------------------------------------------------
> -
> >
> > Message: 1
> > Date: Mon, 6 Apr 2009 18:25:45 -0700
> > From: "Alec Matusis" <matusis at yahoo.com>
> > Subject: RE: [Twisted-Python] Question about Descriptors
> > and
> >     SelectReactor
> > To: "'Twisted general discussion'" <twisted-python at twistedmatrix.com>
> > Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>
> > Content-Type: text/plain;
> > charset="utf-8"
> >
> > > I would say a function of the operating system - or
> > specifically
> > > ulimit on a *nix system.
> >
> > I do not think this is correct, on linux: ulimit -n is the
> > number of fds that can be written/read by a process, but the
> > 1024 limit on select is actually hard-compiled into the
> > kernel and can be changed only in the headers with kernel
> > recompilation.
> >
> > > -----Original Message-----
> > > From: twisted-python-bounces at twistedmatrix.com
> > [mailto:twisted-python-
> > > bounces at twistedmatrix.com]
> > On Behalf Of Drew Smathers
> > > Sent: Monday, April 06, 2009 8:40 AM
> > > To: Twisted general discussion
> > > Subject: Re: [Twisted-Python] Question about
> > Descriptors and
> > > SelectReactor
> > >
> > > On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis
> <andrewfr_ice at yahoo.com>
> > > wrote:
> > > >
> > > > Hi:
> > > >
> > > > Perhaps this question has been asked before but
> > is there a limit to
> > > the number of descriptors the SelectReactor can
> > handle? Is this a
> > > function of the operating system?
> > > >
> > >
> > > I would say a function of the operating system - or
> > specifically
> > > ulimit on a *nix system.
> > >
> > > -Drew
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From rowen at u.washington.edu  Tue Apr  7 15:20:50 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Tue, 07 Apr 2009 12:20:50 -0700
Subject: [Twisted-Python] Can't quit a Tkinter application on MacOS X when
	using Twisted; fix? workaround?
Message-ID: <rowen-6F098F.12205007042009@news.gmane.org>

I am trying to convert a cross-platform Python/Tkinter application to 
use Twisted and have run into a problem: at least on MacOS X I can no 
longer quit the application.

I have appended a minimal script showing the problem.

This is probably not an issue on unix and WIndows because I find I have 
to add my own Quit menu item anyway, so I can make it do what I like. 
But on MacOS X with Aqua Tcl/Tk that item is added by the system and its 
meaning appears to be hard-wired -- I suspect to it calls "quit" on Tk's 
mainloop, but I don't know.

Any suggestion for a workaround would be most appreciated. Also if this 
is not a known issue I will file a bug report.

-- Russell

"""Script showing failure-to-quit bug
At least on MacOS XO 10.5.6 with twisted 8.2.0, python 2.5.2 (from 
python.org) and Aqua Tck/Tk 8.4.19 the File>Quit menu has no effect and 
typing ctrl-Q causes the menu to briefly highlight (as usual) but has no 
other effect.
""
import Tkinter
import twisted.internet.tksupport

root = Tkinter.Tk()
twisted.internet.tksupport.install(root)
reactor = twisted.internet.reactor

reactor.run()




From glyph at divmod.com  Tue Apr  7 23:02:22 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 08 Apr 2009 03:02:22 -0000
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <00e301c9b7ad$1abf9c40$503ed4c0$@com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>
	<00e301c9b7ad$1abf9c40$503ed4c0$@com>
Message-ID: <20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>


On 7 Apr, 06:17 pm, matusis at yahoo.com wrote:
>>However I am using Linux. The Twisted documentation is recommending
>>that it may be better to use pollreactor
>
>I would be actually quite curious to know the rationale of choosing 
>select()
>over epoll() these days.
>epoll() scales like O(1) with the number of file descriptors, it is 
>very
>performant, stable, and has no limitation on the overall number of fds 
>on
>linux (except for your /proc and ulimit -n settings). I'd use epoll 
>reactor,
>unless you have some very specialized requirement.

Short answer: because select() is always available.

Longer answer: Looks like maybe you want to contribute a patch for this 
ticket :)

    http://twistedmatrix.com/trac/ticket/2234



From akrherz at iastate.edu  Wed Apr  8 12:14:33 2009
From: akrherz at iastate.edu (akrherz at iastate.edu)
Date: Wed, 8 Apr 2009 11:14:33 -0500 (CDT)
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd app
Message-ID: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>

Hi Twisted!

Could a kind soul provide me an example of how to connect my StandardIO 
factory to a twistd app?  Here is an overview of my code

class MyProtocol(basic.LineReceiver):
     # Blah Blah

class MyFactory( stdio.StandardIO ):
     def __init__(self, protocol):
         self.protocol = protocol

# then by .tac has
application = service.Application("Ingestor")
serviceCollection = service.IServiceCollection(application)

proto = MyProtocol()
factory = MyFactory( proto )


It is not clear to me how to connect my factory to the application, I do 
this many other times for network related factories by connecting via a 
TCPServer or TCPClient .

Sorry for what I suspect is an embarrassingly simple question. :(

thank you!
   daryl



From clemesha at gmail.com  Wed Apr  8 13:11:29 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 8 Apr 2009 10:11:29 -0700
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd 
	app
In-Reply-To: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
References: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
Message-ID: <d272f0690904081011l448fab10k711b997ec4bd9aeb@mail.gmail.com>

On Wed, Apr 8, 2009 at 9:14 AM,  <akrherz at iastate.edu> wrote:
> Hi Twisted!
>
> Could a kind soul provide me an example of how to connect my StandardIO
> factory to a twistd app? ?Here is an overview of my code
>
> class MyProtocol(basic.LineReceiver):
> ? ?# Blah Blah
>
> class MyFactory( stdio.StandardIO ):
> ? ?def __init__(self, protocol):
> ? ? ? ?self.protocol = protocol
>
> # then by .tac has
> application = service.Application("Ingestor")
> serviceCollection = service.IServiceCollection(application)
>
> proto = MyProtocol()
> factory = MyFactory( proto )
>
>
> It is not clear to me how to connect my factory to the application, I do
> this many other times for network related factories by connecting via a
> TCPServer or TCPClient .

Looks like all you need to do is add this import:
from twisted.application import internet

and then do:
port = 8080 #or whatever
internet.TCPServer(port, factory).setServiceParent(serviceCollection)



hope this helps,
Alex



>
> Sorry for what I suspect is an embarrassingly simple question. :(
>
> thank you!
> ?daryl
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From andrewfr_ice at yahoo.com  Wed Apr  8 14:26:41 2009
From: andrewfr_ice at yahoo.com (andrewfr_ice at yahoo.com)
Date: Wed, 8 Apr 2009 11:26:41 -0700 (PDT)
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
Message-ID: <608344.74126.qm@web34203.mail.mud.yahoo.com>


Hi Glyph and Folks:

AM>I would be actually quite curious to know the rationale of choosing
AM>select() over epoll() these days. epoll() scales like O(1) with the AM>number of file descriptors, it is very performant, stable, and has no AM>limitation on the overall number of fds on linux (except for your /proc AM>and ulimit -n settings). I'd use epoll reactor, unless you have some AM>very specialized requirement.

G>Short answer: because select() is always available.

Thanks. I do most development in Linux now.

The main thing I wanted to avoid was altering file descriptor limits and bundling a new AMI and still not having the ability to test above a certain descriptor limit.

After the semester is over, I want to conduct some new tests with Stackless Python and Twisted. I am also playing with new designs. I am interested in comparing Stackless/Twisted solutions to pure Twisted solutions (just to gauge of inefficiencies). 

I am particularly interested in how channel preferences (a Stackless scheduling mechanism) affect certain performance metrics depending on the number of (and I guess duration) of connections. I will probably start looking at Reactor code again. This is why in the donate time thread, I was willing to volunteer time there (if I can actually be of help)

Cheers,
Andrew






      



From cfoster at oda.state.or.us  Wed Apr  8 15:00:18 2009
From: cfoster at oda.state.or.us (Chris Foster)
Date: Wed, 8 Apr 2009 12:00:18 -0700
Subject: [Twisted-Python] Twisted mirror down?
In-Reply-To: <608344.74126.qm@web34203.mail.mud.yahoo.com>
References: <608344.74126.qm@web34203.mail.mud.yahoo.com>
Message-ID: <BCEC6C59-A94C-4099-88B8-64571AD53363@oda.state.or.us>

Who/where/how do we report a problem with http://tmrc.mit.edu/mirror/twisted/Twisted/8.2/Twisted-8.2.0.tar.bz2 
  ? 



From itamar at itamarst.org  Wed Apr  8 16:19:36 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 8 Apr 2009 16:19:36 -0400 (EDT)
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd 
	app
In-Reply-To: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
References: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
Message-ID: <45778.63.107.91.99.1239221976.squirrel@webmail.zoteca.com>

> Hi Twisted!
>
> Could a kind soul provide me an example of how to connect my StandardIO
> factory to a twistd app?  Here is an overview of my code
>
> class MyProtocol(basic.LineReceiver):
>      # Blah Blah
>
> class MyFactory( stdio.StandardIO ):
>      def __init__(self, protocol):
>          self.protocol = protocol

You should not subclass StandardIO, nor do you need a factory. You just do
"stdio = StandardIO(protocolInstance)" and then keep that reference
around.


> It is not clear to me how to connect my factory to the application, I do
> this many other times for network related factories by connecting via a
> TCPServer or TCPClient .

Write a custom service, with a startService that creates a StandardIO
instance and shuts it down in stopService.




From rowen at u.washington.edu  Wed Apr  8 19:23:07 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Wed, 08 Apr 2009 16:23:07 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-6F098F.12205007042009@news.gmane.org>
Message-ID: <rowen-BD0808.16230708042009@news.gmane.org>

In article <rowen-6F098F.12205007042009 at news.gmane.org>,
 "Russell E. Owen" <rowen at u.washington.edu> wrote:

> I am trying to convert a cross-platform Python/Tkinter application to 
> use Twisted and have run into a problem: at least on MacOS X I can no 
> longer quit the application.
>....
> """Script showing failure-to-quit bug...""
> import Tkinter
> import twisted.internet.tksupport
> 
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)
> reactor = twisted.internet.reactor
> 
> reactor.run()

Just after posting this Kevin Walzer provided an answer. The Quit menu 
on MacOS X calls the tcl "exit" function. One can easily intercept this 
in Python/Tkinter using createcommand, e.g.:

    def myQuit():
        reactor.stop()

    root.createcommand('exit', myQuit)

-- Russell




From matusis at yahoo.com  Wed Apr  8 22:37:19 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 8 Apr 2009 19:37:19 -0700
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>	<00e301c9b7ad$1abf9c40$503ed4c0$@com>
	<20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>
Message-ID: <044c01c9b8bc$1b16a0c0$5143e240$@com>

> Longer answer: Looks like maybe you want to contribute a patch for this
> ticket :)
> 
>     http://twistedmatrix.com/trac/ticket/2234


I will look at this at some point (really swamped with work). But my question is: are you going to use python's select.epoll() that was introduced in python 2.6 and abandon the custom C module? In that case, the check of the default reactor would be trivial.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
> Sent: Tuesday, April 07, 2009 8:02 PM
> To: Twisted general discussion
> Subject: RE: [Twisted-Python] RE: Question about Descriptors and
> SelectReactor
> 
> 
> On 7 Apr, 06:17 pm, matusis at yahoo.com wrote:
> >>However I am using Linux. The Twisted documentation is recommending
> >>that it may be better to use pollreactor
> >
> >I would be actually quite curious to know the rationale of choosing
> >select()
> >over epoll() these days.
> >epoll() scales like O(1) with the number of file descriptors, it is
> >very
> >performant, stable, and has no limitation on the overall number of fds
> >on
> >linux (except for your /proc and ulimit -n settings). I'd use epoll
> >reactor,
> >unless you have some very specialized requirement.
> 
> Short answer: because select() is always available.
> 
> Longer answer: Looks like maybe you want to contribute a patch for this
> ticket :)
> 
>     http://twistedmatrix.com/trac/ticket/2234
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From gtaylor at clemson.edu  Thu Apr  9 02:34:23 2009
From: gtaylor at clemson.edu (Greg Taylor)
Date: Thu, 9 Apr 2009 02:34:23 -0400
Subject: [Twisted-Python] Two-way telnet client problem
Message-ID: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>

Hello all,

I'm still pretty new with Twisted, so the documentation is a little
bit cryptic and strange to wade through. I'm writing a MUD server that
I'd like to add InterMUD Protocol (IMC) to. This basically allows any
of the games running the MUD server to connect to an IMC server that
lets players from other games talk to one another. I'm thinking I'll
create another thread and run the IMC client from there so as to not
block the main server thread.

I've started tinkering with how to get the IMC client connected and
able to send and receive, but I'm hitting a problem. If you look at my
pasted example at http://python.pastebin.com/m155730ed you will see at
the end that once the reactor is running, I _think_ this blocks things
up for this thread. This is just fine, I assumed it'd be the case.
However, let's go back to my main MUD server's thread for a moment.
How would I tell the IMC client to send a line of text now? I assume
it'd be something to do with the factory or reactor objects, but I'm
just not sure.

I've seen mention of something like:
p = reactor.buildProtocol()
p.sendLine('blah\n')

But can't quite seem to piece it together. I'd really love to figure
this out, as it'd do a lot for my game. I may be doing this horribly
wrong, any direction would be great.

Greg



From einar.twisted at norsk-esport.no  Thu Apr  9 09:28:18 2009
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 9 Apr 2009 15:28:18 +0200
Subject: [Twisted-Python] ZeroC Ice + Twisted?
Message-ID: <e97d8e3b0904090628x6cb40444rb577abce470b5137@mail.gmail.com>

Dear listmembers,

I have a project that requires me to use ZeroC Ice for communicating with a
server application. I would very much like to use Twisted for this project,
and am therefore wondering if anyone has any experience with using Twisted
with ZeroC Ice?

Previous posts on this list have mentioned that ZeroC Ice has asynchronous
operations and therefore should be easily twistable, but its Python bindings
and type system are unpythonic (Stephen Waterbury, May 30th 2006) . But I
haven't found any posts by people that have actually used Ice with Twisted,
and whether it is possible to achieve proper twistified asynchronous
behaviour.

Any tales of experience, code snippets or anything else that could help me
get started using Ice with Twisted and avoid *not* using Twisted would be
greatly appreciated :)

Cheers,
Einar S. Ids?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090409/00cbd121/attachment.htm 

From alecf at metaweb.com  Thu Apr  9 19:09:41 2009
From: alecf at metaweb.com (Alec Flett)
Date: Thu, 9 Apr 2009 16:09:41 -0700
Subject: [Twisted-Python] HTTP Proxy client?
Message-ID: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>

Is there any way to make twisted.web.client talk through an HTTP proxy?

I don't know enough about http to know if its as simple as opening the  
connection to the proxy and just including the full URL in the GET line?

Alec



From jack at chesspark.com  Thu Apr  9 19:47:20 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Thu, 9 Apr 2009 17:47:20 -0600
Subject: [Twisted-Python] HTTP Proxy client?
In-Reply-To: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>
References: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>
Message-ID: <9b58f4550904091647t88b931at7c3b67f879959be4@mail.gmail.com>

> Is there any way to make twisted.web.client talk through an HTTP proxy?
>
> I don't know enough about http to know if its as simple as opening the
> connection to the proxy and just including the full URL in the GET line?

I would expect that twisted.web.proxy.ProxyClient does what you want.
You can read about it here:

http://twistedmatrix.com/documents/current/api/twisted.web.proxy.html

I just recently made use of the ReverseProxy parts, and they worked well.

jack.



From exarkun at divmod.com  Fri Apr 10 11:44:20 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:44:20 -0400
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <044c01c9b8bc$1b16a0c0$5143e240$@com>
Message-ID: <20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>

On Wed, 8 Apr 2009 19:37:19 -0700, Alec Matusis <matusis at yahoo.com> wrote:
>> Longer answer: Looks like maybe you want to contribute a patch for this
>> ticket :)
>>
>>     http://twistedmatrix.com/trac/ticket/2234
>
>
>I will look at this at some point (really swamped with work). But my question is: are you going to use python's select.epoll() that was introduced in python 2.6 and abandon the custom C module? In that case, the check of the default reactor would be trivial.

The new epoll support in Python is partially based on our epoll wrapper. ;)
At some point, it is quite likely that we'll start trying to use it (our
customer wrapper is still required to support Python 2.5 and older, though).
I think this will only complicate (trivially) the process of selecting a
good default reactor though, since it's another case to handle.  However,
it's a pretty trivial matter overall; someone just needs to do it.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 11:57:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:57:19 -0400
Subject: [Twisted-Python] Fork/Spawn children to accept connections on
	the same port. 
In-Reply-To: <64BF3FFB-954C-4D6D-AB50-86B8F37CBF5E@apple.com>
Message-ID: <20090410155719.24697.533704354.divmod.quotient.5783@henry.divmod.com>

On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>I am trying to get the highest level of performance using all of the 
>processors cores on a server.
>
>In the past, a unix app would bind/listen to a socket and then fork or 
>spawn children to accept connections on that socket. I can?t see how  to do 
>that in Twisted. Can someone point me in the right direction?
>
>The solution of using a single process to accept connections and then  farm 
>out work to child processes, while a workable solution, isn?t at  the same 
>level of performance as children processes that are doing  their own 
>accepts.

There are many ways to do this.  The common idea is to just run multiple
processes, not by allocating resources and then forking to share them, but
just by running multiple processes.  You can make this transparent to the
outside in various ways - have a load balancing port forwarded in front of
all the processes, for example.  On Linux, you can even use iptables to do
this.  It's also possible to bind a port in one process and then send it
over a UNIX socket to another process; this comes closer to the bind/fork
approach, but accomplishes the resource sharing explicitly via fd passing
rather than through fork.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 11:58:29 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:58:29 -0400
Subject: [Twisted-Python] trac server error
In-Reply-To: <49DB5FA1.3050503@densedata.com>
Message-ID: <20090410155829.24697.1862469788.divmod.quotient.5785@henry.divmod.com>

On Tue, 07 Apr 2009 16:13:53 +0200, Johann Borck <johann.borck at densedata.com> wrote:
>there seems to be some serious problem with http://twistedmatrix.com/trac/
>this is what the browser shows me on about one third of the requests:

Sorry.  This just happens sometimes.  It's due to some bug in trac.  I think
that it generally should only happen near the beginning of a session, but
I'm not certain.  If you have cookies disabled, this might cause you to see
it more frequently.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 12:01:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:01:33 -0400
Subject: [Twisted-Python] Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
In-Reply-To: <rowen-6F098F.12205007042009@news.gmane.org>
Message-ID: <20090410160133.24697.1558421192.divmod.quotient.5786@henry.divmod.com>

On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen" <rowen at u.washington.edu> wrote:
>I am trying to convert a cross-platform Python/Tkinter application to
>use Twisted and have run into a problem: at least on MacOS X I can no
>longer quit the application.
>
>I have appended a minimal script showing the problem.

The example omits this piece of code, recommended by the tksupport module
docstring:

  root.protocol('WM_DELETE_WINDOW', reactor.stop)

I know you posted another solution already, but I'm curious to know if
the recommended fix works on OS X or if we should be recommended something
else.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 12:06:34 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:06:34 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>
Message-ID: <20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>

On Thu, 9 Apr 2009 02:34:23 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>Hello all,
>
>I'm still pretty new with Twisted, so the documentation is a little
>bit cryptic and strange to wade through. I'm writing a MUD server that
>I'd like to add InterMUD Protocol (IMC) to. This basically allows any
>of the games running the MUD server to connect to an IMC server that
>lets players from other games talk to one another. I'm thinking I'll
>create another thread and run the IMC client from there so as to not
>block the main server thread.

Threading generally isn't the way to do networking with Twisted.  In fact,
Twisted is almost wholly geared toward avoiding exactly that.

>From your example, it appears as though you've figured out how to do basic
client setup.  What you're missing is how to use the connection once it
is established.  You need to be thinking of your program in terms of events.

> [snip]
>
>I've seen mention of something like:
>p = reactor.buildProtocol()
>p.sendLine('blah\n')

You can't really do this.  Instead, it seems that since you want to send
a line once the connection is established, you should be putting code into
the event handler for "connection is established".  Your example code
already defined behavior for this event, in fact - but you only put a
print statement into it.  Try expanding your `connectionMade? method to
do the other things you want to happen at connection setup time.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 12:09:41 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:09:41 -0400
Subject: [Twisted-Python] PBClientFactory and getRootObject
In-Reply-To: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>
Message-ID: <20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>

On Thu, 2 Apr 2009 23:31:12 +0200, Fabrizio Mancini <mr.file at gmail.com> wrote:
>Hi everyone,
>I'm writing a server and a client using Perspective Broker with no Avatar
>and no auth.
>The server accumulates some data using a DeferredQueue.
>The clients using a remote call retrieve one item per time from the queue
>and elaborates it making some changes on a database using adbapi.
>What i want to know is:
>1) how can i recursively call the remote method to retrieve the items from
>the server?
>2) can i defer the database operations to a thread so every client can
>elaborates multiple requests per time?

I don't really understand either of these questions.

> [snip code]
>
>To call recursively the remote object in function connect i call
>clientfactory.getRootObject() and addCallback() for the first time, and the
>i recall always self.clientfactory.getRootObject() and self.d.addCallback
>when the db query has completed.
>Is this correct?
>Do I have to always call self.clientfactory.getRootObject() every time i
>have to call a remote method?

You don't.  You only need to call it once per connection, to get the root
object.  Once you have the root object, you can simply keep a reference to
it and use it to make any number of remote calls you like.

>Can i deferToThread the function got_item or
>self.dbpool.runOperation(query)?

runOperation implies threading already, since DB-API 2.0 is blocking.  So
you should already have all the threading you need.

Jean-Paul



From powo at powo.priv.at  Fri Apr 10 12:16:59 2009
From: powo at powo.priv.at (Wolfgang Powisch (privat))
Date: Fri, 10 Apr 2009 18:16:59 +0200
Subject: [Twisted-Python] adbapi and long-running transactions
Message-ID: <49DF70FB.5050503@powo.priv.at>

Hi,

I'm using twisted.enterprise.adbapi for non-blocking database interaction with
a postgres database.

Currently I'm only using runQuery or runOperation for running single queries or
some own little helper methods "runQueries" or "runOperations" for running
multiple queries within one Transaction (using runInteraction).


What I need now is to start a Transaction and access this Transaction from
multiple callbacks within my application-code in the main-thread. In the last
callback (and/or errback) I will then either commit or rollback the transaction.

Any ideas how to acomplish that, didn't find a working solution yet.

The two options I tested are:

1.) running my code within the adbapi thread using runInteraction:
    -> this is really not what I want and will screw up my code

2.) create a transaction and pass it as an argument to a function called with
    connectionpool._deferToThread
    -> this doesn't work, because I seem to end up in the wrong thread and
       another (or no) transaction.



thx in advance for your help

regards, Wolfgang




From glyph at divmod.com  Fri Apr 10 12:37:05 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 10 Apr 2009 16:37:05 -0000
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>
References: <044c01c9b8bc$1b16a0c0$5143e240$@com>
	<20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>
Message-ID: <20090410163705.12555.1381989744.divmod.xquotient.7754@weber.divmod.com>

On 03:44 pm, exarkun at divmod.com wrote:
>On Wed, 8 Apr 2009 19:37:19 -0700, Alec Matusis <matusis at yahoo.com> 
>wrote:
>>>Longer answer: Looks like maybe you want to contribute a patch for 
>>>this
>>>ticket :)
>>>
>>>     http://twistedmatrix.com/trac/ticket/2234
>>
>>
>>I will look at this at some point (really swamped with work). But my 
>>question is: are you going to use python's select.epoll() that was 
>>introduced in python 2.6 and abandon the custom C module? In that 
>>case, the check of the default reactor would be trivial.
>
>The new epoll support in Python is partially based on our epoll 
>wrapper. ;)
>At some point, it is quite likely that we'll start trying to use it 
>(our
>customer wrapper is still required to support Python 2.5 and older, 
>though).

Also, there's an existing ticket for this too:

    http://twistedmatrix.com/trac/ticket/3114

I look forward to your patches, Alec ;-).



From gtaylor at clemson.edu  Fri Apr 10 13:10:28 2009
From: gtaylor at clemson.edu (Greg Taylor)
Date: Fri, 10 Apr 2009 13:10:28 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>
References: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>
	<20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>
Message-ID: <8de369d70904101010q4b3c89a1i83d8872007325f6d@mail.gmail.com>

I guess what I'm getting confused about is how to get my listen server
(MUD server) talking to this IMC client connection. Let's say one of
my player wants to send a message over the IMC (client) connection.
This is done by telnetting into the MUD server and entering a command
like: imcmessage "hello". So I've got a reactor serving up my MUD
server process, and I'm not sure how this IMC client plugs in.

I guess I need to create some kind of queue that the IMC
ConnectionMade checks periodically and executes if I can't directly
get the MUD server talking to the IMCProtocol object.

Also, do I need to do anything special to prevent blocking?

Do I use two separate reactors or should the IMC connection be using
the same reactor or process group as the MUD server (listen server)?

Thanks for your help. I'm sure this will be really simple to do once I
figure out how to do this.

Greg

On Fri, Apr 10, 2009 at 12:06 PM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Thu, 9 Apr 2009 02:34:23 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>>
>> Hello all,
>>
>> I'm still pretty new with Twisted, so the documentation is a little
>> bit cryptic and strange to wade through. I'm writing a MUD server that
>> I'd like to add InterMUD Protocol (IMC) to. This basically allows any
>> of the games running the MUD server to connect to an IMC server that
>> lets players from other games talk to one another. I'm thinking I'll
>> create another thread and run the IMC client from there so as to not
>> block the main server thread.
>
> Threading generally isn't the way to do networking with Twisted. ?In fact,
> Twisted is almost wholly geared toward avoiding exactly that.
>
>> From your example, it appears as though you've figured out how to do basic
>
> client setup. ?What you're missing is how to use the connection once it
> is established. ?You need to be thinking of your program in terms of events.
>
>> [snip]
>>
>> I've seen mention of something like:
>> p = reactor.buildProtocol()
>> p.sendLine('blah\n')
>
> You can't really do this. ?Instead, it seems that since you want to send
> a line once the connection is established, you should be putting code into
> the event handler for "connection is established". ?Your example code
> already defined behavior for this event, in fact - but you only put a
> print statement into it. ?Try expanding your `connectionMade? method to
> do the other things you want to happen at connection setup time.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Greg Taylor
Clemson University, Class of 2009
Cell: (864) 888-7964
http://gc-taylor.com



From eyork at apple.com  Fri Apr 10 13:16:06 2009
From: eyork at apple.com (Eric York)
Date: Fri, 10 Apr 2009 10:16:06 -0700
Subject: [Twisted-Python] Fork/Spawn children to accept connections on the
	same port. 
In-Reply-To: <E1LsJ9A-0003dt-Rw@cube.twistedmatrix.com>
References: <E1LsJ9A-0003dt-Rw@cube.twistedmatrix.com>
Message-ID: <F921B017-B83B-474A-BFBF-2C9EE80580C4@apple.com>


>
> From: Jean-Paul Calderone <exarkun at divmod.com>
> Date: April 10, 2009 8:57:19 AM PDT
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Fork/Spawn children to accept  
> connections on the same port.
> Reply-To: Twisted general discussion <twisted- 
> python at twistedmatrix.com>
>
>
> On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>> I am trying to get the highest level of performance using all of  
>> the processors cores on a server.
>>
>> In the past, a unix app would bind/listen to a socket and then fork  
>> or spawn children to accept connections on that socket. I can?t see  
>> how  to do that in Twisted. Can someone point me in the right  
>> direction?
>>
>> The solution of using a single process to accept connections and  
>> then  farm out work to child processes, while a workable solution,  
>> isn?t at  the same level of performance as children processes that  
>> are doing  their own accepts.

> It's also possible to bind a port in one process and then send it
> over a UNIX socket to another process; this comes closer to the bind/ 
> fork
> approach, but accomplishes the resource sharing explicitly via fd  
> passing
> rather than through fork.


This is the path that I would like to follow. I can see how to spawn a  
child process and pass the fd in Twisted. What I can't see how to do  
in Twisted is to have a parent process just bind and listen to a  
socket and have a child process accept on that socket. In twisted/ 
internet/tcp.py in the class Port, there is a function startListening  
which does bind/listen/startReading all in this one function. It seems  
that a small refactoring would allow the parent to bind and a child to  
do startReading, if the call to startReading was moved out of  
startListening. The reactor calls would also need a small refactoring  
to allow this type of setup. How does that sound?

Eric

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090410/39d4dbe4/attachment.htm 

From powo at powo.priv.at  Fri Apr 10 14:06:28 2009
From: powo at powo.priv.at (Wolfgang Powisch (privat))
Date: Fri, 10 Apr 2009 20:06:28 +0200
Subject: [Twisted-Python] adbapi and long-running transactions
In-Reply-To: <49DF70FB.5050503@powo.priv.at>
References: <49DF70FB.5050503@powo.priv.at>
Message-ID: <49DF8AA4.1060406@powo.priv.at>

Am 10.04.2009 18:16, Wolfgang Powisch (privat) schrieb:
> What I need now is to start a Transaction and access this Transaction from
> multiple callbacks within my application-code in the main-thread. In the last
> callback (and/or errback) I will then either commit or rollback the transaction.

Even found something on that:

http://twistedmatrix.com/trac/ticket/303
and a thread on the mailinglist from December 2003

Is anyone using Bill Gribble's patch, or further improved it ?





From mr.file at gmail.com  Fri Apr 10 17:04:48 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Fri, 10 Apr 2009 23:04:48 +0200
Subject: [Twisted-Python] PBClientFactory and getRootObject
In-Reply-To: <20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>
References: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>
	<20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>
Message-ID: <793463d60904101404h2f644a26yf78f015172148589@mail.gmail.com>

On Fri, Apr 10, 2009 at 6:09 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> I don't really understand either of these questions.
>

Hi JP,
and thank you for your reply.
Don't worry if you didn't understand the question, i just didn't understand
deeply how deferred worked.
I just needed to chain different deferreds after the result of the first
deferred arrives.
I'm really new to write twisted code! :-)
Now that i've understood it it's all right.
Thank you
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090410/f73d5db9/attachment.htm 

From luper.rouch at gmail.com  Fri Apr 10 18:24:37 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 00:24:37 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
Message-ID: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>

I would like to port my Application API based services to the twistd
plugin interface, to be able to retrieve command line options.

In the existing services, I reimplemented t.a.s.MultiService
startService() and stopService() to do some actions at startup and
shutdown.

How can I do this in a plugin ?

--
Lup



From exarkun at divmod.com  Sat Apr 11 11:17:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:17:46 -0400
Subject: [Twisted-Python] Fork/Spawn children to accept connections on
	the same port. 
In-Reply-To: <F921B017-B83B-474A-BFBF-2C9EE80580C4@apple.com>
Message-ID: <20090411151746.24697.428522480.divmod.quotient.6019@henry.divmod.com>

On Fri, 10 Apr 2009 10:16:06 -0700, Eric York <eyork at apple.com> wrote:
>
>>
>>From: Jean-Paul Calderone <exarkun at divmod.com>
>>Date: April 10, 2009 8:57:19 AM PDT
>>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>Subject: Re: [Twisted-Python] Fork/Spawn children to accept  connections on 
>>the same port.
>>Reply-To: Twisted general discussion <twisted- python at twistedmatrix.com>
>>
>>
>>On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>>>I am trying to get the highest level of performance using all of  the 
>>>processors cores on a server.
>>>
>>>In the past, a unix app would bind/listen to a socket and then fork  or 
>>>spawn children to accept connections on that socket. I can?t see  how  to 
>>>do that in Twisted. Can someone point me in the right  direction?
>>>
>>>The solution of using a single process to accept connections and  then 
>>>farm out work to child processes, while a workable solution,  isn?t at 
>>>the same level of performance as children processes that  are doing  their 
>>>own accepts.
>
>>It's also possible to bind a port in one process and then send it
>>over a UNIX socket to another process; this comes closer to the bind/ fork
>>approach, but accomplishes the resource sharing explicitly via fd  passing
>>rather than through fork.
>
>
>This is the path that I would like to follow. I can see how to spawn a 
>child process and pass the fd in Twisted. What I can't see how to do  in 
>Twisted is to have a parent process just bind and listen to a  socket and 
>have a child process accept on that socket. In twisted/ internet/tcp.py in 
>the class Port, there is a function startListening  which does 
>bind/listen/startReading all in this one function. It seems  that a small 
>refactoring would allow the parent to bind and a child to  do startReading, 
>if the call to startReading was moved out of  startListening. The reactor 
>calls would also need a small refactoring  to allow this type of setup. How 
>does that sound?

The main problem that comes up with this approach is that little, or possibly
none, of Twisted is written to be fork-safe.  As with most programs, though,
this is /usually/ not a problem.  However, there are some areas where it can
be.  For example, if you use epoll reactor, the internal epoll file descriptor
may end up shared between the two processes.  This results in weird behavior
like thread wakeup messages in one process waking up the reactor thread in
the other process.  It's probably possible to fix all the problems like this,
but rather than try, I'd just not try forking a Twisted process without using
exec in one of the resulting processes shortly afterwards.

If you create a port in one process, you can just grab its fileno and pass
that to another process.  Then you can create a new Port object with that
fileno.  This may involve subclassing Port and overriding
createInternetSocket to just return the fileno you have already.  These APIs
aren't really intended for direct use by applications, but there's not really
another way to do what you want right now.  You may want to help us work out
a better API for creating Ports and such from pre-existing sockets if you go
this route so that there's less chance of some deep-down implementation
change disturbing your app.

Jean-Paul



From exarkun at divmod.com  Sat Apr 11 11:20:25 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:20:25 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
Message-ID: <20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>

On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com> wrote:
>I would like to port my Application API based services to the twistd
>plugin interface, to be able to retrieve command line options.
>
>In the existing services, I reimplemented t.a.s.MultiService
>startService() and stopService() to do some actions at startup and
>shutdown.
>
>How can I do this in a plugin ?
>

The top-level API for plugins is mostly a function that returns an IService
provider.  So if you have your own version of MultiService, you can just
return an instance of that, just like the one you were creating in your .tac
file, from a makeService function which is registered as a plugin of the
suitable type.

Jean-Paul



From exarkun at divmod.com  Sat Apr 11 11:21:28 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:21:28 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <8de369d70904101010q4b3c89a1i83d8872007325f6d@mail.gmail.com>
Message-ID: <20090411152128.24697.1488645969.divmod.quotient.6021@henry.divmod.com>

On Fri, 10 Apr 2009 13:10:28 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>I guess what I'm getting confused about is how to get my listen server
>(MUD server) talking to this IMC client connection. Let's say one of
>my player wants to send a message over the IMC (client) connection.
>This is done by telnetting into the MUD server and entering a command
>like: imcmessage "hello". So I've got a reactor serving up my MUD
>server process, and I'm not sure how this IMC client plugs in.

This sounds a lot like this FAQ:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

>
>I guess I need to create some kind of queue that the IMC
>ConnectionMade checks periodically and executes if I can't directly
>get the MUD server talking to the IMCProtocol object.

Fortunately, you can make them talk directly. :)  No need for a queue.

>Also, do I need to do anything special to prevent blocking?

As long as you're using Twisted APIs for dealing with the networking,
no - those won't block.

>Do I use two separate reactors or should the IMC connection be using
>the same reactor or process group as the MUD server (listen server)?

There's always exactly one reactor in a Twisted app.

>Thanks for your help. I'm sure this will be really simple to do once I
>figure out how to do this.

Hope this helps,

Jean-Paul



From luper.rouch at gmail.com  Sat Apr 11 13:29:28 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 19:29:28 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
References: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
	<20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
Message-ID: <4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>

2009/4/11 Jean-Paul Calderone <exarkun at divmod.com>:
> On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com>
> wrote:
>>
>> I would like to port my Application API based services to the twistd
>> plugin interface, to be able to retrieve command line options.
>>
>> In the existing services, I reimplemented t.a.s.MultiService
>> startService() and stopService() to do some actions at startup and
>> shutdown.
>>
>> How can I do this in a plugin ?
>>
>
> The top-level API for plugins is mostly a function that returns an IService
> provider. ?So if you have your own version of MultiService, you can just
> return an instance of that, just like the one you were creating in your .tac
> file, from a makeService function which is registered as a plugin of the
> suitable type.
>
Thanks I didn't think it was so simple !

I have a last question, I put my plugins in a 'twisted/plugins'
subfolder of my project, and running them from the command line works
fine. How can I invoke them in unit tests (I need to be able to start
and stop them), since the plugin files are not in a package ?



From exarkun at divmod.com  Sat Apr 11 13:42:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 13:42:31 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>
Message-ID: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>

On Sat, 11 Apr 2009 19:29:28 +0200, luper rouch <luper.rouch at gmail.com> wrote:
>2009/4/11 Jean-Paul Calderone <exarkun at divmod.com>:
>> On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com>
>> wrote:
>>>
>>> I would like to port my Application API based services to the twistd
>>> plugin interface, to be able to retrieve command line options.
>>>
>>> In the existing services, I reimplemented t.a.s.MultiService
>>> startService() and stopService() to do some actions at startup and
>>> shutdown.
>>>
>>> How can I do this in a plugin ?
>>>
>>
>> The top-level API for plugins is mostly a function that returns an IService
>> provider. ?So if you have your own version of MultiService, you can just
>> return an instance of that, just like the one you were creating in your .tac
>> file, from a makeService function which is registered as a plugin of the
>> suitable type.
>>
>Thanks I didn't think it was so simple !
>
>I have a last question, I put my plugins in a 'twisted/plugins'
>subfolder of my project, and running them from the command line works
>fine. How can I invoke them in unit tests (I need to be able to start
>and stop them), since the plugin files are not in a package ?

They can be imported from "twisted.plugins".  For example, if you name your
"dropin" file foo_plugins.py, then "from twisted.plugins import foo_plugins"
should work and let you test any code that is part of your plugin definitions.
Note that you should try to keep the amount of code and dependencies in a
dropin file to a minimum, since this must all be loaded and executed whenever
a search for any plugin is performed.

Jean-Paul



From terry at jon.es  Sat Apr 11 13:48:38 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 11 Apr 2009 19:48:38 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: Your message at 19:29:28 on Saturday, 11 April 2009
References: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
	<20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
	<4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>
Message-ID: <18912.55286.870158.381484@jon.es>

Hi Luper

>>>>> "luper" == luper rouch <luper.rouch at gmail.com> writes:

luper> I have a last question, I put my plugins in a 'twisted/plugins'
luper> subfolder of my project, and running them from the command line
luper> works fine. How can I invoke them in unit tests (I need to be able
luper> to start and stop them), since the plugin files are not in a
luper> package?

I suspect some will answer "Uh, you probably shouldn't be doing that"...

But something like this will work:

    from twisted.plugin import getPlugins
    from twisted.application.service import IServiceMaker

    def getPlugin(name):
        for plugin in getPlugins(IServiceMaker):
            if hasattr(plugin, 'tapname'):
                if plugin.tapname == name:
                    return plugin
        return None

Terry



From esteve at sindominio.net  Sat Apr 11 15:54:08 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sat, 11 Apr 2009 21:54:08 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
References: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
Message-ID: <200904112154.08757.esteve@sindominio.net>

On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
> They can be imported from "twisted.plugins".  For example, if you name your
> "dropin" file foo_plugins.py, then "from twisted.plugins import
> foo_plugins" should work and let you test any code that is part of your
> plugin definitions. Note that you should try to keep the amount of code and
> dependencies in a dropin file to a minimum, since this must all be loaded
> and executed whenever a search for any plugin is performed.

Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and 
twisted/plugins must not have __init__.py files in order for the plugin 
system to be able to find them (through getPlugins). Or did that behavior 
change in recent versions?

Cheers.



From exarkun at divmod.com  Sat Apr 11 16:39:32 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 16:39:32 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <200904112154.08757.esteve@sindominio.net>
Message-ID: <20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>

On Sat, 11 Apr 2009 21:54:08 +0200, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
>> They can be imported from "twisted.plugins".  For example, if you name your
>> "dropin" file foo_plugins.py, then "from twisted.plugins import
>> foo_plugins" should work and let you test any code that is part of your
>> plugin definitions. Note that you should try to keep the amount of code and
>> dependencies in a dropin file to a minimum, since this must all be loaded
>> and executed whenever a search for any plugin is performed.
>
>Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and
>twisted/plugins must not have __init__.py files in order for the plugin
>system to be able to find them (through getPlugins). Or did that behavior
>change in recent versions?

They must not have __init__.py files, indeed.  However, the files in
twisted/plugins/ still define sub-modules of the twisted.plugins package
due to the code in Twisted's twisted/plugins/__init__.py.

Jean-Paul



From esteve at sindominio.net  Sat Apr 11 16:41:35 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sat, 11 Apr 2009 22:41:35 +0200
Subject: [Twisted-Python] adapt from more than one interface
Message-ID: <200904112241.36178.esteve@sindominio.net>

Hi all. I have a bunch of services, which implement a set of interfaces, and I 
use a bunch of adapters to turn them into factories, making those services 
protocol-independent.

The interface/adapter stuff works great and I'm able to expose those services 
to several protocols, without changing a single line in them. However, some 
of the protocols need some extra information to be passed, so I have to do 
this:

factory = IFooFactory(myService)
factory.bar = "some value"

it works, but I'd rather use this:

factory = IFooFactory(myService, configurationObject)

which would take a second argument, an object implementing another interface 
(e.g. IConfigurationDescriptor), containing all the necessary information for 
that adapter. I don't want to put that information in the service, as it's 
only useful to the protocol and would tie the service to a particular 
protocol.

In order to implement this, registerAdapter would have to be able to take a 
tuple of interfaces, like this:

components.registerAdapter(
    AdaptToFactory,
    (IFooService, IConfigurationDescriptor),
    IFooFactory)

would that feature make sense? If so, I'll file an issue right now :-)

Cheers.



From luper.rouch at gmail.com  Sat Apr 11 16:43:36 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 22:43:36 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <200904112154.08757.esteve@sindominio.net>
References: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
	<200904112154.08757.esteve@sindominio.net>
Message-ID: <4e0636f40904111343u194a86b7xff25047a074efaa3@mail.gmail.com>

2009/4/11 Esteve Fernandez <esteve at sindominio.net>:
> On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
>> They can be imported from "twisted.plugins". ?For example, if you name your
>> "dropin" file foo_plugins.py, then "from twisted.plugins import
>> foo_plugins" should work and let you test any code that is part of your
>> plugin definitions. Note that you should try to keep the amount of code and
>> dependencies in a dropin file to a minimum, since this must all be loaded
>> and executed whenever a search for any plugin is performed.
>
> Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and
> twisted/plugins must not have __init__.py files in order for the plugin
> system to be able to find them (through getPlugins). Or did that behavior
> change in recent versions?
>
> Cheers.

It's working on 8.2.0 release, I have been able to port all my tests
to the plugins API (they even seem less hackish now...)

Thanks !



From terry at jon.es  Sat Apr 11 18:55:27 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 12 Apr 2009 00:55:27 +0200
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access to
	the deferred their wrapper will return
Message-ID: <18913.8159.929889.783594@jon.es>

This will probably fall into the too-weird or too-infrequent to be worth
implementing category, but I think it's worth mentioning. (BTW, none of the
following code has been run.)

When you write a normal function that returns a deferred, it (of course)
has access to the deferred it's going to return:

    def func():
        d = defer.Deferred()
        d.addCallback(...).addErrback(...)
        callSomethingElse(d)
        return d

Apart from operating on the deferred itself, func can pass the deferred to
some other function that might add more callbacks (as in the call to
callSomethingElse). That's all very nice and convenient.

But if I write this:

    @defer.inlineCallbacks
    def func():
        # do some stuff to calculate a result.
        defer.returnValue(result)

func never has its hands on the deferred that will be returned (by
_inlineCallbacks) to the caller of its wrapper.

I can get around this in ways that are less elegant:

    @defer.inlineCallbacks
    def func():
        # do some stuff
        d = defer.Deferred()
        callSomethingElse(d)
        d.callback(result)
        newResult = yield d
        defer.returnValue(newResult)

But I don't really like doing it that way: it's a slightly different coding
style, it's much more manual, the above is just one simple example - actual
usage could be more involved, and it doesn't feel as natural as the kind of
code I can write when I'm not using inlineCallbacks.

A way around this (which maybe will generate howls of protest) would be to
have _inlineCallbacks do something this:

    def unwindGenerator(*args, **kwargs):
        assert '_inlineCallbacksDeferred' not in kwargs
        d = Deferred()
        return _inlineCallbacks(None, f(*args, **kwargs, _inlineCallbacksDeferred=d), d)
    return mergeFunctionMetadata(f, unwindGenerator)

While I don't like this implementation much, it does manage to simply put
the deferred that _inlineCallbacks will eventually return, into the hands
of f (i.e., func above).  func can then pass the deferred around, add
callbacks to it etc. exactly as a normal (non-inlineCallbacks) function would.

Maybe there's a cleaner way to implement this?

I ran into this asymmetry today, when I wanted a function to pass its
deferred off to another function but realized that because mine was an
inlineCallbacks-decorated function I couldn't do it in the same way I would
otherwise.

Comments?

Terry



From glyph at divmod.com  Sat Apr 11 20:23:14 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:23:14 -0000
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>
References: <200904112154.08757.esteve@sindominio.net>
	<20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>
Message-ID: <20090412002314.12555.1522674597.divmod.xquotient.7807@weber.divmod.com>


On 11 Apr, 08:39 pm, exarkun at divmod.com wrote:
>On Sat, 11 Apr 2009 21:54:08 +0200, Esteve Fernandez 
><esteve at sindominio.net> wrote:

>>Shouldn't twisted and twisted/plugins be non-importable? I thought 
>>twisted and
>>twisted/plugins must not have __init__.py files in order for the 
>>plugin
>>system to be able to find them (through getPlugins). Or did that 
>>behavior
>>change in recent versions?
>
>They must not have __init__.py files, indeed.  However, the files in
>twisted/plugins/ still define sub-modules of the twisted.plugins 
>package
>due to the code in Twisted's twisted/plugins/__init__.py.

They must not have __init__.py files specifically to avoid *conflicting* 
with this Twisted's twisted/plugins/__init__.py.  Since the idea is 
that, during installation, your foo_plugin.py will go into the site's 
twisted/plugins directory, we forbid projects to make twisted/plugins a 
package because otherwise one package would stomp over the other's 
__init__.py and break things.



From glyph at divmod.com  Sat Apr 11 20:31:29 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:31:29 -0000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904112241.36178.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
Message-ID: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>


On 11 Apr, 08:41 pm, esteve at sindominio.net wrote:
>factory = IFooFactory(myService)
>factory.bar = "some value"
>
>it works, but I'd rather use this:
>
>factory = IFooFactory(myService, configurationObject)

This is a long and terrible road you're about to start down.  It's hard 
for me to explain exactly why it's so painful, but trust me, it is.

What you're doing now, passing out-of-band arguments to the IFooFactory 
adapter, whose concrete type you are *not supposed to know* at that 
point in the control flow, is bad.  But trying to force adaptation to 
become full-fledged multimethods is worse.  If you want multimethods, I 
believe PEAK provides a package that implements them.

If you want to keep doing what you're doing, you should do this:

factory = MyServiceFooFactory(myService)
factory.configureBar("some value")

i.e. don't ask for an adaptation which might give you an object without 
a "bar" attribute, just create the concrete type that does what you need 
based on the type of myService and configure it with explicitly 
documented methods.  Although if I misunderstand the spec of 
"IFooFactory" and it *does* include a bar attribute, nevermind.

If you want something more magical and adapter-ish, them maybe you want 
this:

IFooFactory(ConfigurationObject(myService, bar="some value"))

i.e. by the time you are getting around to the IFooFactory adaptation, 
you should have an object that fully provides enough information that 
the concrete FooFactory adapter type can be fully initialized when it is 
created.
>In order to implement this, registerAdapter would have to be able to 
>take a
>tuple of interfaces, like this:
>
>components.registerAdapter(
>    AdaptToFactory,
>    (IFooService, IConfigurationDescriptor),
>    IFooFactory)
>
>would that feature make sense? If so, I'll file an issue right now :-)

Unfortunately, much as I've been encouraging people to file tickets 
lately, no :).  I don't think it makes sense.



From jml at mumak.net  Sat Apr 11 20:22:08 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Apr 2009 10:22:08 +1000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
Message-ID: <d06a5cd30904111722w7f21a28dtf84737df96ef6165@mail.gmail.com>

On Sun, Apr 12, 2009 at 10:31 AM,  <glyph at divmod.com> wrote:
>
> On 11 Apr, 08:41 pm, esteve at sindominio.net wrote:
>>
>> factory = IFooFactory(myService)
>> factory.bar = "some value"
>>
>> it works, but I'd rather use this:
>>
>> factory = IFooFactory(myService, configurationObject)
>
> This is a long and terrible road you're about to start down. ?It's hard for
> me to explain exactly why it's so painful, but trust me, it is.
>
> What you're doing now, passing out-of-band arguments to the IFooFactory
> adapter, whose concrete type you are *not supposed to know* at that point in
> the control flow, is bad. ?But trying to force adaptation to become
> full-fledged multimethods is worse. ?If you want multimethods, I believe
> PEAK provides a package that implements them.
>

Also, Zope has getMultiAdapter(). The canonical example is adapting a
model object and a request object to a view object.

I don't think it's as bad as glyph says. I probably wouldn't use it in
the case you describe -- calling methods on objects is almost always
better.

jml



From glyph at divmod.com  Sat Apr 11 20:40:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:40:11 -0000
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access
	to the deferred their wrapper will return
In-Reply-To: <18913.8159.929889.783594@jon.es>
References: <18913.8159.929889.783594@jon.es>
Message-ID: <20090412004011.12555.477762120.divmod.xquotient.7830@weber.divmod.com>


On 11 Apr, 10:55 pm, terry at jon.es wrote:
>I can get around this in ways that are less elegant:
>
>    @defer.inlineCallbacks
>    def func():
>        # do some stuff
>        d = defer.Deferred()
>        callSomethingElse(d)
>        d.callback(result)
>        newResult = yield d
>        defer.returnValue(newResult)

When I write functions that take a Deferred I typically have them return 
a Deferred as well, to avoid this, and other syntactic nuisances.  Would 
you consider the following more elegant?

    @inlineCallbacks
    def func():
        # do some stuff
        returnValue(yield callSomethingElse(succeed(result)))



From exarkun at twistedmatrix.com  Sun Apr 12 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Apr 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1239509113.45.1659241418@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090412/af00ad13/attachment.htm 

From esteve at sindominio.net  Sun Apr 12 05:08:23 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 12 Apr 2009 11:08:23 +0200
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
Message-ID: <200904121108.23622.esteve@sindominio.net>

Hi

On Sunday 12 April 2009 02:31:29 glyph at divmod.com wrote:
> This is a long and terrible road you're about to start down.  It's hard
> for me to explain exactly why it's so painful, but trust me, it is.

No, I won't trust you :-) I hope you don't take what I'm going to say too 
seriously, but you couldn't sound more patronising.

Anyway, if it's so hard to explain, it's probably harder to understand, and 
thus, it's something that you cannot figure out by yourself. So, if you don't 
mind, why do you think it's so bad?

> What you're doing now, passing out-of-band arguments to the IFooFactory
> adapter, whose concrete type you are *not supposed to know* at that
> point in the control flow, is bad.  But trying to force adaptation to
> become full-fledged multimethods is worse.  If you want multimethods, I
> believe PEAK provides a package that implements them.

I know it's bad, because the resulting factory is incomplete, but that's why I 
wanted to adapt from two objects: the service itself and something that would 
make the factory complete (i.e. some configuration parameters required by 
protocols).

The main problem I see with the current adapter registry, is that adapters 
aren't configurable. In our case, we have a bunch of services, which are 
exposed to AMQP (adapted into a factory that builds instances of the AMQP 
protocol class), but since this is a client protocol that needs some extra 
arguments that can't be set beforehand in the adapter (username, password, 
vhost, encoding), they are passed after the service has been adapted into a 
factory.

So the problem is that the resulting factory is not complete, it doesn't have 
enough information to build protocols. The only workaround is to explicitly 
set those extra parameters after it has been instantiated.

> If you want to keep doing what you're doing, you should do this:
>
> factory = MyServiceFooFactory(myService)
> factory.configureBar("some value")
>
> i.e. don't ask for an adaptation which might give you an object without
> a "bar" attribute, just create the concrete type that does what you need
> based on the type of myService and configure it with explicitly
> documented methods.  Although if I misunderstand the spec of
> "IFooFactory" and it *does* include a bar attribute, nevermind.

The IFooFactory interface declares that attribute, but it's not immediately 
available when the service is adapted into a factory.

I fail to see what's the difference between bar= and configureBar() in this 
particular case. Interface attributes can be documented, so I don't see what 
makes configureBar better than bar (which can be turned into a property). 
Anyway, I think both solutions are flaky, so that's why I thought adapting 
two interfaces would be more elegant.

> If you want something more magical and adapter-ish, them maybe you want
> this:
>
> IFooFactory(ConfigurationObject(myService, bar="some value"))
>
> i.e. by the time you are getting around to the IFooFactory adaptation,
> you should have an object that fully provides enough information that
> the concrete FooFactory adapter type can be fully initialized when it is
> created.

I think that solution is even worse. That particular instance of 
ConfigurationObject is tied to myService: it can't be (de)serialized, reused 
with other adapters, ConfigurationObject and MyService are completely 
unrelated and I don't think the former should depend on the latter.

> >In order to implement this, registerAdapter would have to be able to
> >take a
> >tuple of interfaces, like this:
> >
> >components.registerAdapter(
> >    AdaptToFactory,
> >    (IFooService, IConfigurationDescriptor),
> >    IFooFactory)
> >
> >would that feature make sense? If so, I'll file an issue right now :-)
>
> Unfortunately, much as I've been encouraging people to file tickets
> lately, no :).  I don't think it makes sense.

I still think it does, but nobody wants to make the ticket count grow 
higher :-) Anyway, Zope already has this nifty thing called multi-adapters, 
which implement exactly what I described:

http://www.muthukadan.net/docs/zca.html#multi-adapter

but I always liked Twisted's adapter registry better and our application 
already uses it in quite a few places. I like being able to call IFoo(bar) 
and let the registry lookup an adapter automatically, instead of having to 
call getAdapter()/queryAdapter()

Cheers.



From terry at jon.es  Sun Apr 12 07:52:17 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 12 Apr 2009 13:52:17 +0200
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access
	to the deferred their wrapper will return
In-Reply-To: Your message at 00:40:11 on Sunday, 12 April 2009
References: <18913.8159.929889.783594@jon.es>
	<20090412004011.12555.477762120.divmod.xquotient.7830@weber.divmod.com>
Message-ID: <18913.54769.71786.416613@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> When I write functions that take a Deferred I typically have them
glyph> return a Deferred as well, to avoid this, and other syntactic
glyph> nuisances.  Would you consider the following more elegant?

Yes. And thanks for the rule of thumb.


In any case, I realized that my original idea wont work. _inlineCallbacks
returns the deferred to the caller of the wrapped function early. The
caller could add callbacks to it before the wrapped function does, which
makes the whole idea unworkable.

Terry



From glyph at divmod.com  Sun Apr 12 09:16:04 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 13:16:04 -0000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904121108.23622.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
	<200904121108.23622.esteve@sindominio.net>
Message-ID: <20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>


On 09:08 am, esteve at sindominio.net wrote:
>On Sunday 12 April 2009 02:31:29 glyph at divmod.com wrote:
>>This is a long and terrible road you're about to start down.  It's 
>>hard
>>for me to explain exactly why it's so painful, but trust me, it is.
>
>No, I won't trust you :-) I hope you don't take what I'm going to say 
>too
>seriously, but you couldn't sound more patronising.

Sorry for that; it certainly wasn't my intention.  I meant just what I 
said: I find it difficult to communicate about.  Perhaps I should have 
said, "trust me, my experience suggests that it is".
>Anyway, if it's so hard to explain, it's probably harder to understand, 
>and
>thus, it's something that you cannot figure out by yourself. So, if you 
>don't
>mind, why do you think it's so bad?

It's hard to explain because it's hard to describe a full use-case.  My 
experiences with adapter registries are diffuse, so I can't put it all 
together into one nice concrete example; just a bunch of places where I 
thought maybe I wanted multi-adaptation, started in that direction, and 
then realized that I actually wanted something else when it made a mess. 
A concrete description of one of these use-cases would probably end up 
talking more about email or templating than about interfaces.

Abstract examples tend to proliferate metasyntactic variables, so it's 
not clear what the relationships are of all the entities.  In fact, it 
may be that I'm not understanding *your* use-case because "IFooFactory" 
isn't a particularly expository name :).  But let me give it a go.

Multi-adapters are problematic because they specify a collection of 
objects, but they don't specify the relationship between those objects. 
When you adapt a model/request pair to a view in Zope, how do you know 
which one's the model and which one's the request?  If multiadapt(IFoo, 
(a, b)) works, should multiadapt(IFoo, (b, a))?  If not, why not?  If 
so, why so?  Is the position of the parameters significant?  Does it 
imply something about the role that each component plays to its adapter? 
What about multiadapt(IFoo, (b, b, a))?  I know that zope.interface has 
answers to all these questions (and indeed, in most cases I think I know 
what those answers are) but they're very hard to figure out from first 
principles; they're kind of arbitrary, whereas other edge-case rules in 
z.i, for example, the resolution order of adapters in inheritance 
relationships make perfect sense to me.

Maybe if you use zope.component it works out.  I don't have much 
experience with it, but I do know that it gives you a lot more options 
in terms of managing what adapters get used when, and by whom.  Adapters 
also have names, which gives you another level of disambiguation.

But in the context of Twisted's adapter registry, you just have one 
global registry.  When you're using this for f(x)->y type relationships, 
it provides a reasonable way for one system to hook into another, 
because system X can receive a bar when it only knows about foos, and 
say IFoo(bar) and that works because of an adapter registered by the 
system that declared bar.  But when you start putting additional 
arguments in there, it's not clear how those different systems will 
handle them.

For example, if you want a system that accepts "configuration", you can 
register an adapter from a foo, username, and password, to produce a 
bar.  i.e. (IFoo, str, str) -> IBar.  Later, what if we want an adapter 
from a foo, hostname and path?  (IFoo, str, str) is already taken.

But, if you do this by explicitly declaring an intermediate interface, 
it's much clearer.  IBarFactory(foo).configureUsernamePassword(username, 
password)->Bar makes the placement of the responsibility very clear; 
later, you could add IBarFactory(bar).configureHostnamePath(hostname, 
path)->Bar.

And this is why the explanation of its wrong-ness is difficult.  I know 
that you could get the same effect by doing (IFoo, IUsernamePassword) -> 
IBar and (IFoo, IHostnamePath).
>So the problem is that the resulting factory is not complete, it 
>doesn't have
>enough information to build protocols. The only workaround is to 
>explicitly
>set those extra parameters after it has been instantiated.

Would the specifics of your application allow you to introduce an 
intermediary IProtocolFactoryConfigurer interface, with .config* methods 
that would return the actual ProtocolFactory, as with my IBarFactory 
above?  "IBar" here would be IProtocolFactory; sorry for the confusion 
with the word "factory".
>>Although if I misunderstand the spec of
>>"IFooFactory" and it *does* include a bar attribute, nevermind.
>
>The IFooFactory interface declares that attribute, but it's not 
>immediately
>available when the service is adapted into a factory.
>
>I fail to see what's the difference between bar= and configureBar() in 
>this
>particular case.

Yeah, when I said "[if] it *does* include a bar attribute, nevermind", 
that's what I meant; I misunderstood and thought that the attribute was 
part of a different interface or concrete type.  Again, If 
.configureBar() *returns* a protocol factory, then maybe it's better.
>>If you want something more magical and adapter-ish, them maybe you 
>>want
>>this:
>>
>>IFooFactory(ConfigurationObject(myService, bar="some value"))

>I think that solution is even worse. That particular instance of
>ConfigurationObject is tied to myService: it can't be (de)serialized, 
>reused
>with other adapters, ConfigurationObject and MyService are completely
>unrelated and I don't think the former should depend on the latter.

So ConfigurationObject is purely for the IFooFactory implementation?
>> >In order to implement this, registerAdapter would have to be able to
>> >take a
>> >tuple of interfaces,
(...)
>> >would that feature make sense? If so, I'll file an issue right now 
>>:-)
>>
>>Unfortunately, much as I've been encouraging people to file tickets
>>lately, no :).  I don't think it makes sense.
>
>I still think it does, but nobody wants to make the ticket count grow
>higher :-) Anyway, Zope already has this nifty thing called multi- 
>adapters,
>which implement exactly what I described:
>
>http://www.muthukadan.net/docs/zca.html#multi-adapter

Thanks for that link, by the way, that's a great introduction to 
zope.component.  Not one I'd seen before.
>but I always liked Twisted's adapter registry better and our 
>application
>already uses it in quite a few places. I like being able to call 
>IFoo(bar)
>and let the registry lookup an adapter automatically, instead of having 
>to
>call getAdapter()/queryAdapter()

You'd still have to call something like getAdapter or queryAdapter in 
order to use multi-adapters with Twisted's registry.  IFoo((a, b, c)) 
will adapt from "tuple" to IFoo, and it would be ambiguous to change it 
to work otherwise - a number of existing systems do register adapters 
for tuples.  IFoo(a, b, c) can't be made to work because 
InterfaceClass.__call__'s signature can't be modified to support it, 
since IFoo(a, b) means "use b as default".

Actually... I got curious about the implementation work required, and I 
realized that no modification to Twisted is really necessary, if what 
you want is this syntactic convenience.  The registry used by Twisted 
already supports multi-adapters (since it's just a zope.interface 
registry), and is already explicitly exposed publicly so you can do 
zope-interface-y stuff to it directly.

I'm still not a big fan of multi-adapters, but the code's so short, and 
so non-invasive (in particular I don't believe it'll affect the 
performance of "normal", single adaptation), that I probably wouldn't 
argue too hard against it.  Feel free to file that ticket, although I 
won't promise that somebody *else* won't come along and object.  In any 
case, you can start using it right away if it suits you :).

Anyway, I hope this is useful:

# multireg.py

from zope.interface.declarations import implementedBy

from twisted.python.components import getRegistry

def registerMulti(adapter, fromInterfaces, *toInterfaces):
    registry = getRegistry()
    for interface in toInterfaces:
        registry.register(fromInterfaces, interface, '', adapter)
        registry.register([implementedBy(multi)], interface, '',
                          translateMulti(interface, registry))

def translateMulti(toInterface, registry):
    def translator(multiple):
        return registry.queryMultiAdapter(
            multiple.conformers, toInterface)
    return translator

class multi(object):
    def __init__(self, *conformers):
        self.conformers = conformers

# and here's an example:

from zope.interface import Interface, implements

class IA(Interface): ""
class IB(Interface): ""
class IC(Interface): ""

class A(object): implements(IA)
class B(object): implements(IB)

class ABC(object):
    implements(IC)
    def __init__(self, a, b):
        self.a = a
        self.b = b

registerMulti(ABC, [IA, IB], IC)

print IC(multi(A(), B()))
print IC(multi(1, 2), 3)

# -glyph



From esteve at sindominio.net  Sun Apr 12 11:11:12 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 12 Apr 2009 17:11:12 +0200
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<200904121108.23622.esteve@sindominio.net>
	<20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>
Message-ID: <200904121711.12546.esteve@sindominio.net>

On Sunday 12 April 2009 15:16:04 glyph at divmod.com wrote:
> Sorry for that; it certainly wasn't my intention.  I meant just what I
> said: I find it difficult to communicate about.  Perhaps I should have
> said, "trust me, my experience suggests that it is".

I'm too thin-skinned sometimes, so just forget what I said :-)

> And this is why the explanation of its wrong-ness is difficult.  I know
> that you could get the same effect by doing (IFoo, IUsernamePassword) ->
> IBar and (IFoo, IHostnamePath).

Actually I just discovered some of those flaws in Zope's adapter registry, so 
you're right that multi-adapters are not that easy to implement.

> Would the specifics of your application allow you to introduce an
> intermediary IProtocolFactoryConfigurer interface, with .config* methods
> that would return the actual ProtocolFactory, as with my IBarFactory
> above?  "IBar" here would be IProtocolFactory; sorry for the confusion
> with the word "factory".

I guess that would be sufficient, an "adapter factory" in some sense. In fact, 
I already came up with something similar, but found it too cumbersome 
(attached). Maybe, instead of supporting multi-adapters, a recipe like yours 
could be added to the documentation.

> So ConfigurationObject is purely for the IFooFactory implementation?

Yep. In our case, AMQP protocol instances require some arguments to be passed 
(e.g. username and password for connecting to the broker). BTW, I just 
realized that we should use usage.Options instead of our own config object.

> Thanks for that link, by the way, that's a great introduction to
> zope.component.  Not one I'd seen before.

It covers pretty much everything about adapters and interfaces, I found it 
very detailed and useful.

> I'm still not a big fan of multi-adapters, but the code's so short, and
> so non-invasive (in particular I don't believe it'll affect the
> performance of "normal", single adaptation), that I probably wouldn't
> argue too hard against it.  Feel free to file that ticket, although I
> won't promise that somebody *else* won't come along and object.  In any
> case, you can start using it right away if it suits you :).

It's very simple and elegant, I like it :-) I think it's a good idea to 
include it, or maybe add an entry to the FAQ.

Thanks!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: multi.py
Type: application/x-python
Size: 1668 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090412/fb95139d/attachment.bin 

From jml at mumak.net  Sun Apr 12 21:27:11 2009
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 13 Apr 2009 11:27:11 +1000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904121108.23622.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
	<200904121108.23622.esteve@sindominio.net>
Message-ID: <d06a5cd30904121827p7193e6ddoc91960cf689806e9@mail.gmail.com>

On Sun, Apr 12, 2009 at 7:08 PM, Esteve Fernandez <esteve at sindominio.net> wrote:
> I still think it does, but nobody wants to make the ticket count grow
> higher :-) Anyway, Zope already has this nifty thing called multi-adapters,
> which implement exactly what I described:
>
> http://www.muthukadan.net/docs/zca.html#multi-adapter
>
> but I always liked Twisted's adapter registry better and our application
> already uses it in quite a few places. I like being able to call IFoo(bar)
> and let the registry lookup an adapter automatically, instead of having to
> call getAdapter()/queryAdapter()

IFoo(bar) works just fine with the Zope adapter registry.

jml



From cary.hull at gmail.com  Sun Apr 12 23:31:14 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sun, 12 Apr 2009 20:31:14 -0700
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
	<3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
	<20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>
Message-ID: <3fce0ae70904122031y51fc80a4n405fb81182ca86a4@mail.gmail.com>

I've been short on time lately so will post these in batches. Also it will
give folks a chance to comment on the direction taken before I go too far.
Each of these should be encapsulated in some overview prose. Also it's a
good opportunity to link to external documentation such as related blog
posts, projects, etc.

Some of these are obvious and nearly mirror the current Howto indexes, not
sure if that's desired.
(Though some indexes point to some very old stuff, like woven)

If you have provided feedback and do not see it reflected yet, don't worry.
I'm still formulating how to work it in.
Any further guidance or criticism will be appreciated.

----

* So, you want to learn the basics of Twisted

http://twistedmatrix.com/projects/core/documentation/howto/async.html
http://twistedmatrix.com/projects/core/documentation/howto/reactor-basics.html
http://twistedmatrix.com/projects/core/documentation/examples/#auto0
http://twistedmatrix.com/projects/core/documentation/examples/#auto1
http://twistedmatrix.com/projects/core/documentation/howto/defer.html
http://twistedmatrix.com/projects/core/documentation/howto/application.html
http://twistedmatrix.com/projects/core/documentation/howto/design.html

* So, you want to write unittests for your Twisted code

http://twistedmatrix.com/projects/core/documentation/howto/testing.html

* So, you want to drive processes with Twisted

http://twistedmatrix.com/projects/core/documentation/howto/process.html
http://unpythonic.blogspot.com/2007/08/spawning-subprocess-with-pygtk-using.html

* So, you want to use Twisted to develop a custom protocol

http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html
http://twistedmatrix.com/projects/core/documentation/howto/udp.html
http://twistedmatrix.com/projects/core/documentation/examples/#auto2

* So, you want to use threads with Twisted

http://twistedmatrix.com/projects/core/documentation/howto/threading.html

* So, you want to persist data in a Twisted application

http://divmod.org/trac/wiki/DivmodAxiom/Tutorial
http://twistedmatrix.com/projects/core/documentation/howto/dirdbm.html
http://twistedmatrix.com/projects/core/documentation/howto/rdbms.html

* So, you want to do task scheduling in Twisted

http://twistedmatrix.com/projects/core/documentation/howto/time.html
http://divmod.org/trac/wiki/DivmodAxiom/Tutorial#UsingtheSchedulerBuildYourOwnclowHHHron

* So, you want to write a web application with Twisted

http://twistedmatrix.com/projects/web/documentation/howto/using-twistedweb.html
http://twistedmatrix.com/projects/web/documentation/howto/web-development.html
http://divmod.org/trac/wiki/DivmodNevow/Tutorial
http://divmod.org/trac/wiki/DivmodNevow/Athena
http://divmod.org/trac/wiki/MantissaHowTo
http://blog.dreid.org/2009/03/twisted-django-it-wont-burn-down-your.html

* So, you want to deploy a plugin for Twisted

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090412/75be9bbe/attachment.htm 

From ted.pederson at gmail.com  Mon Apr 13 14:25:12 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Mon, 13 Apr 2009 11:25:12 -0700
Subject: [Twisted-Python] Basic factory question
Message-ID: <834bba420904131125r15fab551n9602ae93408fca7d@mail.gmail.com>

Coming from C++ to python/twisted. Looking at samples, created a simple
server and want to create a tester file that will create many clients to
connect to and exercise my server. All very nice and easy and like this a
lot so far.

The one thing that looks strange to me is that the samples instantiate a
ClientFactory to then connect to the server via reactor.connectTCP().

I copied this pattern, worried that a factory would be created for every one
of my clients, and this is indeed what happened. Isn't the point of a
factory to generate all of the clients? I'd like to keep some aggregate info
in 1 factory, and have the factory contain the dbpools, etc.. How to do
this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090413/025a3693/attachment.htm 

From exarkun at divmod.com  Mon Apr 13 14:32:11 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Apr 2009 14:32:11 -0400
Subject: [Twisted-Python] Basic factory question
In-Reply-To: <834bba420904131125r15fab551n9602ae93408fca7d@mail.gmail.com>
Message-ID: <20090413183211.24697.245039773.divmod.quotient.7064@henry.divmod.com>

On Mon, 13 Apr 2009 11:25:12 -0700, Ted Pederson <ted.pederson at gmail.com> wrote:
>Coming from C++ to python/twisted. Looking at samples, created a simple
>server and want to create a tester file that will create many clients to
>connect to and exercise my server. All very nice and easy and like this a
>lot so far.
>
>The one thing that looks strange to me is that the samples instantiate a
>ClientFactory to then connect to the server via reactor.connectTCP().
>
>I copied this pattern, worried that a factory would be created for every one
>of my clients, and this is indeed what happened. Isn't the point of a
>factory to generate all of the clients? I'd like to keep some aggregate info
>in 1 factory, and have the factory contain the dbpools, etc.. How to do
>this?
>

You can pass a single ClientFactory instance to connectTCP multiple times,
if that's what you want to do.  If the factory is where you keep various
other resources for the client connections to use, then this makes perfect
sense.

Jean-Paul



From rowen at u.washington.edu  Mon Apr 13 16:49:58 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Mon, 13 Apr 2009 13:49:58 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-6F098F.12205007042009@news.gmane.org>
	<20090410160133.24697.1558421192.divmod.quotient.5786@henry.divmod.com>
Message-ID: <rowen-E08BC4.13495813042009@news.gmane.org>

In article 
<20090410160133.24697.1558421192.divmod.quotient.5786 at henry.divmod.com>,
 Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen" 
> <rowen at u.washington.edu> wrote:
> >I am trying to convert a cross-platform Python/Tkinter application to
> >use Twisted and have run into a problem: at least on MacOS X I can no
> >longer quit the application.
> >
> >I have appended a minimal script showing the problem.
> 
> The example omits this piece of code, recommended by the tksupport module
> docstring:
> 
>   root.protocol('WM_DELETE_WINDOW', reactor.stop)
> 
> I know you posted another solution already, but I'm curious to know if
> the recommended fix works on OS X or if we should be recommended something
> else.
> 
> Jean-Paul

Yes, that is useful if your root window can be closed. (In my case it 
cannot.)

The other fix mentioned handles the Quit menu and the Quit apple event. 
This fix handles the root window being closed killing the application 
properly.

-- Russell




From exarkun at divmod.com  Mon Apr 13 17:14:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Apr 2009 17:14:44 -0400
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS
	X when using Twisted; fix? workaround?
In-Reply-To: <rowen-E08BC4.13495813042009@news.gmane.org>
Message-ID: <20090413211444.24697.1739128157.divmod.quotient.7085@henry.divmod.com>

On Mon, 13 Apr 2009 13:49:58 -0700, "Russell E. Owen" <rowen at u.washington.edu> wrote:
>In article
><20090410160133.24697.1558421192.divmod.quotient.5786 at henry.divmod.com>,
> Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>> On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen"
>> <rowen at u.washington.edu> wrote:
>> >I am trying to convert a cross-platform Python/Tkinter application to
>> >use Twisted and have run into a problem: at least on MacOS X I can no
>> >longer quit the application.
>> >
>> >I have appended a minimal script showing the problem.
>>
>> The example omits this piece of code, recommended by the tksupport module
>> docstring:
>>
>>   root.protocol('WM_DELETE_WINDOW', reactor.stop)
>>
>> I know you posted another solution already, but I'm curious to know if
>> the recommended fix works on OS X or if we should be recommended something
>> else.
>>
>> Jean-Paul
>
>Yes, that is useful if your root window can be closed. (In my case it
>cannot.)
>
>The other fix mentioned handles the Quit menu and the Quit apple event.
>This fix handles the root window being closed killing the application
>properly.

It sounds like we should expand the Tk documentation to include the solution
you found, in case someone else without a closeable root window wants to use
Twisted with Tkinter.  Could you file a ticket for this?

Jean-Paul



From zooko at zooko.com  Tue Apr 14 12:58:04 2009
From: zooko at zooko.com (zooko)
Date: Tue, 14 Apr 2009 10:58:04 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe-LAFS v1.4
Message-ID: <430F87EA-3D15-4D4B-A597-AB0EBABC7DE7@zooko.com>

ANNOUNCING Tahoe, the Least-Authority Filesystem, v1.4

The allmydata.org team is pleased to announce the release of version
1.4.1 of "Tahoe", the Lightweight-Authorization Filesystem. This is the
first release of Tahoe-LAFS which was created solely as a labor of love
by volunteers -- it is no longer funded by allmydata.com (see [1] for
details).

Tahoe-LAFS is a secure, decentralized, fault-tolerant cloud storage
system.  All of the source code is publicly available under Free
Software, Open Source licences.

This filesystem is distributed over multiple servers in such a way the
filesystem continues to operate correctly even when some of the servers
are unavailable, malfunctioning, or malicious. Here is the one-page
explanation of Tahoe's unique security and fault-tolerance properties:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This is the successor to Tahoe-LAFS v1.3, which was released February
13, 2009 [2].  This is a major new release, adding garbage collection,
improved diagnostics and error-reporting, and fixing a critical
performance problem when downloading large (many GB) files.

See the NEWS file [3] and the known_issues.txt file [4] for more
information.

Besides the Tahoe core, a crop of related projects have sprung up,
including frontends for Windows and Macintosh, two front-ends written in
JavaScript, a Ruby interface, a plugin for duplicity, a plugin for
TiddlyWiki, a new backup tool named "GridBackup", CIFS/SMB integration,
an iPhone app, and three incomplete frontends for FUSE. See the Related
Projects page on the wiki: [5].


COMPATIBILITY

Tahoe v1.4 is fully compatible with the version 1 series of Tahoe. Files
written by v1.4 clients can be read by clients of all versions back to
v1.0. v1.4 clients can read files produced by clients of all versions  
since
v1.0.  v1.4 servers can serve clients of all versions back to v1.0  
and v1.4
clients can use servers of all versions back to v1.0.

This is the fifth release in the version 1 series. The version 1 series
of Tahoe will be actively supported and maintained for the forseeable
future, and future versions of Tahoe will retain the ability to read
files and directories produced by Tahoe v1 for the forseeable future.

The version 1 branch of Tahoe is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of servers,
such that if some of them fail or even turn out to be malicious, the
entire filesystem continues to be available. You can share your files
with other users, using a simple and flexible access control scheme.

Because this software is new, we do not categorically recommend it as
the sole repository of data which is extremely confidential or
precious.  However, we believe that erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe safer than
common alternatives, such as RAID, removable drive, tape, "on-line
storage" or "Cloud storage" systems.

This software comes with extensive tests, and there are no known
security flaws which would compromise confidentiality or data integrity.
(For all currently known issues please see the known_issues.txt file
[3].)

This release of Tahoe is suitable for the "friendnet" use case [6] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share disk space and files.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
[7] for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1 or, at your option, any later version.  (The
Transitive Grace Period Public Licence has requirements similar to the
GPL except that it allows you to wait for up to twelve months after you
redistribute a derived work before releasing the source code of your
derived work.) See the file "COPYING.TGPPL.html" [8] for the terms of
the Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris, and
probably most other systems.  Start with "docs/install.html" [9].


HACKING AND COMMUNITY

Please join us on the mailing list [10].  Patches are gratefully
accepted -- the RoadMap page [11] shows the next improvements that we
plan to make and CREDITS [12] lists the names of people who've
contributed to the project.  The wiki Dev page [13] contains resources
for hackers.


SPONSORSHIP

Tahoe was originally developed thanks to the sponsorship of Allmydata,
Inc. [14], a provider of commercial backup services.  Allmydata,
Inc. created the Tahoe project, and contributed hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
Tahoe hackers and instructing them to spend part of their work time on
this Free Software project).  Also they awarded customized t-shirts to
hackers who find security flaws in Tahoe (see http://hacktahoe.org
). After discontinuing funding of Tahoe R&D in early 2009, Allmydata,
Inc. has continued to provide servers, co-lo space and bandwidth to the
open source project. Thank you to Allmydata, Inc. for their generous and
public-spirited support.


Zooko Wilcox-O'Hearn
on behalf of the allmydata.org team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and significantly responsible for the Tahoe design as
well, not to mention most of the docs and tests and many other things
besides.

April 13, 2009
Boulder, Colorado, USA

[1] http://allmydata.org/pipermail/tahoe-dev/2009-March/001461.html
[2] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=3620
[3] http://allmydata.org/trac/tahoe/browser/NEWS?rev=3835
[4] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[6] http://allmydata.org/trac/tahoe/wiki/UseCases
[7] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[8] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[9] http://allmydata.org/source/tahoe/trunk/docs/install.html
[10] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[11] http://allmydata.org/trac/tahoe/roadmap
[12] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=3758
[13] http://allmydata.org/trac/tahoe/wiki/Dev
[14] http://allmydata.com



---
Tahoe, the Least-Authority Filesystem -- http://allmydata.org
store your data: $10/month -- http://allmydata.com/?tracking=zsig
I am available for work -- http://zooko.com/r?sum?.html




From alex at davz.net  Wed Apr 15 15:47:56 2009
From: alex at davz.net (Alex Davies)
Date: Wed, 15 Apr 2009 20:47:56 +0100
Subject: [Twisted-Python] Ldaptor for a simple python LDAP server
Message-ID: <5fb622120904151247o1cd43ae3lfc3e6a9cca5d44c3@mail.gmail.com>

Hi,

I'm looking to write a very simple LDAP server in Python. I want to
hard code the few attributes that I have, and make them available to
clients. I am not the worlds most able programmer, but have looked at
the code, documentation and talks about Ldaptor and it seems that this
can do what I need - but I can't find any examples anywhere!

Is there a simple example that shows me what is needed to build a
super-simple LDAP server in Python?

Any pointers from the more able would be much appreciated!

Many thanks,

Alex



From Benjamin.Rutt at gs.com  Wed Apr 15 16:32:48 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Wed, 15 Apr 2009 16:32:48 -0400
Subject: [Twisted-Python] Writing a shutdown command that sends an ACK back
Message-ID: <F06E1DE459099B4191D150491D42BC361BD17EA2@gsmbnbp22es.firmwide.corp.gs.com>

Is there a good way, in, say, a LineReceiver based server, to implement
a bit of code in lineReceived() that, if you receive a line like, let's
say, 'shutdown' from a client, you can call:

1) self.transport.write('goodbye\n')  # send a goodbye message to the
client

And then call

2) self.transport.close() # close the client's socket

And then

3) reactor.stop()  # terminate the server

The problem I'm finding is that since I believe self.transport.write()
enqueues the writing for later, and self.transport.close() enqueues the
closing for later, both to be picked up by the reactor soon after my
lineReceived() returns, so then if you stop the reactor in #3, it won't
be available anymore to carry out any enqueued tasks for you.  At least
I think that's what's happening in my code.

Is there any good workarounds?  E.g., is reactor.callLater(5,
reactor.stop) too much of a hack?



From rowen at u.washington.edu  Wed Apr 15 17:11:04 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Wed, 15 Apr 2009 14:11:04 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-E08BC4.13495813042009@news.gmane.org>
	<20090413211444.24697.1739128157.divmod.quotient.7085@henry.divmod.com>
Message-ID: <rowen-87C3F3.14110415042009@news.gmane.org>

In article 
<20090413211444.24697.1739128157.divmod.quotient.7085 at henry.divmod.com>,
 Jean-Paul Calderone <exarkun at divmod.com> wrote:

>...
> It sounds like we should expand the Tk documentation to include the solution
> you found, in case someone else without a closeable root window wants to use
> Twisted with Tkinter.  Could you file a ticket for this?

Great idea. Here it is: <http://twistedmatrix.com/trac/ticket/3776>.

-- Russell




From exarkun at divmod.com  Wed Apr 15 17:35:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Apr 2009 17:35:00 -0400
Subject: [Twisted-Python] Writing a shutdown command that sends an ACK back
In-Reply-To: <F06E1DE459099B4191D150491D42BC361BD17EA2@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090415213500.24697.1539247715.divmod.quotient.7816@henry.divmod.com>

On Wed, 15 Apr 2009 16:32:48 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>Is there a good way, in, say, a LineReceiver based server, to implement
>a bit of code in lineReceived() that, if you receive a line like, let's
>say, 'shutdown' from a client, you can call:
>
>1) self.transport.write('goodbye\n')  # send a goodbye message to the
>client
>
>And then call
>
>2) self.transport.close() # close the client's socket
>
>And then
>
>3) reactor.stop()  # terminate the server
>
>The problem I'm finding is that since I believe self.transport.write()
>enqueues the writing for later, and self.transport.close() enqueues the
>closing for later, both to be picked up by the reactor soon after my
>lineReceived() returns, so then if you stop the reactor in #3, it won't
>be available anymore to carry out any enqueued tasks for you.  At least
>I think that's what's happening in my code.
>
>Is there any good workarounds?  E.g., is reactor.callLater(5,
>reactor.stop) too much of a hack?

If you want to delay reactor shutdown until the connection has closed,
you can put the reactor.stop() call into the protocol's connectionLost
callback.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Apr 19 00:05:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Apr 2009 04:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240113915.22.939103235@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090419/68d347b1/attachment.htm 

From exarkun at divmod.com  Mon Apr 20 15:35:43 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Apr 2009 15:35:43 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: 0
Message-ID: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>

Hello All,

I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
with previous sprints, this is an all day event, most likely hosted at the
Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
raised plugin system improvements as a possible topic.  Other topics are
welcome as well, of course.

It's been a couple months since our last sprint.  I think it would be nice
to have a sprint early in May and another one late in May.  How do people
feel about May 2nd or 3rd for the first sprint?

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 20 15:50:23 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Apr 2009 15:50:23 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
References: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <60ed19d40904201250i66c9cfc4vd6b12cea876db51c@mail.gmail.com>

On Mon, Apr 20, 2009 at 3:35 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Hello All,
>
> I'd like to organize another Twisted sprint in Cambridge, MA in May. ?As
> with previous sprints, this is an all day event, most likely hosted at the
> Divmod office in Porter Square, for Twisted hacking. ?Chris Armstrong has
> raised plugin system improvements as a possible topic. ?Other topics are
> welcome as well, of course.
>
> It's been a couple months since our last sprint. ?I think it would be nice
> to have a sprint early in May and another one late in May. ?How do people
> feel about May 2nd or 3rd for the first sprint?

I can do that. For what it's worth, I probably won't be able to attend
a late May sprint.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From therve at free.fr  Mon Apr 20 15:56:04 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Mon, 20 Apr 2009 21:56:04 +0200
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
References: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <1240257364.6709.29.camel@brainwave>

Le lundi 20 avril 2009 ? 15:35 -0400, Jean-Paul Calderone a ?crit :
> Hello All,

Hi!

> I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
> with previous sprints, this is an all day event, most likely hosted at the
> Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
> raised plugin system improvements as a possible topic.  Other topics are
> welcome as well, of course.

As you're talking about Chris, I would suggest: release?

> It's been a couple months since our last sprint.  I think it would be nice
> to have a sprint early in May and another one late in May.  How do people
> feel about May 2nd or 3rd for the first sprint?

I may able be able to participate a bit remotely.

-- 
Thomas




From aronbierbaum at gmail.com  Mon Apr 20 19:16:39 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Mon, 20 Apr 2009 18:16:39 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <20090309143611.12853.873370890.divmod.quotient.20775@henry.divmod.com>
References: <34457a4c0903090717x92b0366x3a524e9577ba15b7@mail.gmail.com>
	<20090309143611.12853.873370890.divmod.quotient.20775@henry.divmod.com>
Message-ID: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>

I have looked into this a little more and have noticed that if I
specify a port number instead of "0" it will always bind to the
correct "127.0.0.1" address. I still don't know why this only occurs
on certain Windows machines. I will hopefully get more time to look
into this in the next couple of days.

-Aron

On Mon, Mar 9, 2009 at 9:36 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 9 Mar 2009 09:17:14 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
> wrote:
>>
>> I have been unable to reproduce this problem on multiple machines that
>> I have tested on. Also I have tried changing various network settings
>> on my machine without any change. Do you have any ideas what I should
>> be looking for?
>
> Not really, sorry. ?I know that behavior often differs subtly or grossly
> from Windows machine to Windows machine, but not why.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Apr 20 20:06:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Apr 2009 20:06:18 -0400
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
Message-ID: <20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>

On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com> wrote:
>I have looked into this a little more and have noticed that if I
>specify a port number instead of "0" it will always bind to the
>correct "127.0.0.1" address. I still don't know why this only occurs
>on certain Windows machines. I will hopefully get more time to look
>into this in the next couple of days.

Hmm.  Interesting.  Perhaps we could bind a different port, then.
I look forward to results from your further investigations.

Jean-Paul



From aronbierbaum at gmail.com  Tue Apr 21 15:22:17 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Tue, 21 Apr 2009 14:22:17 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
References: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
	<20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
Message-ID: <34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>

I have been able to reproduce the same results with a simple C++
example. I have been unable to find any specific reason why binding to
"127.0.0.1" and later calling getsockname would result in a different
address of "0.0.0.0" I did find one reference [1] that said that using
a port number of 0 will cause the operating system to listen on all
interfaces and that calling getsockname may not return a valid address
until the socket is fully connected. It might be best to use the
original patch that I sumbitted that only uses the port value from the
getsockname call, and uses the correct "127.0.0.1" IP address
regardless of the reported address. If the address returned is really
undefined, then this could be causing the problem.

-Aron

[1] http://www.sockets.com/winsock.htm#Bind

[2] Change the following line in posixbase.py

client.connect(server.getsockname())

to

client.connect(('127.0.0.1', server.getsockname()[1]))

On Mon, Apr 20, 2009 at 7:06 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
> wrote:
>>
>> I have looked into this a little more and have noticed that if I
>> specify a port number instead of "0" it will always bind to the
>> correct "127.0.0.1" address. I still don't know why this only occurs
>> on certain Windows machines. I will hopefully get more time to look
>> into this in the next couple of days.
>
> Hmm. ?Interesting. ?Perhaps we could bind a different port, then.
> I look forward to results from your further investigations.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From aronbierbaum at gmail.com  Tue Apr 21 15:35:35 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Tue, 21 Apr 2009 14:35:35 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>
References: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
	<20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
	<34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>
Message-ID: <34457a4c0904211235r77a94429l5ac18d6a219abe7d@mail.gmail.com>

Sorry, forgot to attach the C++ example.

-Aron

On Tue, Apr 21, 2009 at 2:22 PM, Aron Bierbaum <aronbierbaum at gmail.com> wrote:
> I have been able to reproduce the same results with a simple C++
> example. I have been unable to find any specific reason why binding to
> "127.0.0.1" and later calling getsockname would result in a different
> address of "0.0.0.0" I did find one reference [1] that said that using
> a port number of 0 will cause the operating system to listen on all
> interfaces and that calling getsockname may not return a valid address
> until the socket is fully connected. It might be best to use the
> original patch that I sumbitted that only uses the port value from the
> getsockname call, and uses the correct "127.0.0.1" IP address
> regardless of the reported address. If the address returned is really
> undefined, then this could be causing the problem.
>
> -Aron
>
> [1] http://www.sockets.com/winsock.htm#Bind
>
> [2] Change the following line in posixbase.py
>
> client.connect(server.getsockname())
>
> to
>
> client.connect(('127.0.0.1', server.getsockname()[1]))
>
> On Mon, Apr 20, 2009 at 7:06 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
>> wrote:
>>>
>>> I have looked into this a little more and have noticed that if I
>>> specify a port number instead of "0" it will always bind to the
>>> correct "127.0.0.1" address. I still don't know why this only occurs
>>> on certain Windows machines. I will hopefully get more time to look
>>> into this in the next couple of days.
>>
>> Hmm. ?Interesting. ?Perhaps we could bind a different port, then.
>> I look forward to results from your further investigations.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
#include <stdio.h>
#include "winsock2.h"
#include <iostream>

// Try to create a socket, bind to 127.0.0.1, and get the socket name.
void createSocket()
{
   // Create a SOCKET for listening for incoming connection requests
   SOCKET ListenSocket;
   ListenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
   if (ListenSocket == INVALID_SOCKET)
   {
	  std::cout << "Error at socket(): " << WSAGetLastError() << std::endl;
      WSACleanup();
      return;
   }

   // The sockaddr_in structure specifies the address family,
   // IP address, and port for the socket that is being bound.
   sockaddr_in service;
   service.sin_family = AF_INET;
   service.sin_addr.s_addr = inet_addr("127.0.0.1");
   service.sin_port = htons(0);

   //printf("b4 bind : %d.%d.%d.%d\n", service.sin_addr.S_un.S_un_b.s_b1,
   //                                  service.sin_addr.S_un.S_un_b.s_b2,
   //                                  service.sin_addr.S_un.S_un_b.s_b3,
   //                                  service.sin_addr.S_un.S_un_b.s_b4);

   // Bind the socket.
   if (SOCKET_ERROR == bind( ListenSocket, (SOCKADDR*) &service, sizeof(service)))
   {
      printf("bind() failed.\n");
      closesocket(ListenSocket);
      return;
   }
   //listen(ListenSocket, 5);

   int name_len;
   sockaddr outname;
   name_len = sizeof (struct sockaddr_in);
   memset(&outname, 0, name_len);

   getsockname(ListenSocket, &outname, &name_len);

   // Get the port number.
   struct sockaddr_in* get_port = (sockaddr_in*)&outname;
   int port = ntohs(get_port->sin_port);

   if (outname.sa_data[2] == 0 && 0 == outname.sa_data[3]&& 0 == outname.sa_data[3]&& 0 == outname.sa_data[3])
   {
      std::cout << "Bound to wrong address." << std::endl;
      // Display the address.
      printf("Address %d.%d.%d.%d:%d\n", outname.sa_data[2], outname.sa_data[3],
                                         outname.sa_data[4], outname.sa_data[5], port);
   }

   closesocket(ListenSocket);
   return;
}

void main()
{
   // Initialize Winsock
   WSADATA wsaData;
   if (NO_ERROR != WSAStartup(MAKEWORD(2,2), &wsaData))
   {
      printf("Error at WSAStartup()\n");
   }
 
   // Try to create a socket, bind to 127.0.0.1, and get the socket name.
   for (int i = 0; i < 100; ++i)
   {
      createSocket();
   }

   // Cleanup Winsock
   WSACleanup();
}


From tv at twistedmatrix.com  Wed Apr 22 05:04:15 2009
From: tv at twistedmatrix.com (Hope Rios)
Date: Wed, 22 Apr 2009 04:04:15 -0500
Subject: [Twisted-Python] One of a kind Gucci reps
Message-ID: <3343gsz160106XIUItv@twistedmatrix.com>

So you thought owning a brand name watch was out of your reach? Think again!
http://www.wofovaxuc.cn

Diam0nd Reps has it all: Rolex, Cartier, Tag Heuer, Breitling, and many more, for a fraction of the price of an original watch. And don't forget: when you order two watches, you get an extra 15 percent discount over our already low prices!
http://www.wofovaxuc.cn

With so many watches that look and work like the real thing, I guarantee you'll have a delicious time finding yours at our store!








From terry at jon.es  Wed Apr 22 20:22:27 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 02:22:27 +0200
Subject: [Twisted-Python] Transparent pooling of deferreds to be fired upon
	another deferred firing
Message-ID: <18927.46275.7780.346325@jon.es>

I have a need to make sure that a deferred-returning function is not called
multiple times, but I want to be able to write code without having to worry
about that.

To be more concrete:

Suppose I have a function called alertSupervisor that takes a string
message for the supervisor and which returns a deferred. I want to be able
to call that function from anywhere in my code, and I always want to get a
deferred back, but if there's already a call in progress to tell the
supervisor the same thing then I don't want to bug him/her by sending
another message, but I do want to know when the original call fires.

So code fragment A calls

  d = alertSupervisor("We have a problem in the boiler room!")

and before the deferred has fired, code fragment B notices the same
underlying problem, and also calls

  d = alertSupervisor("We have a problem in the boiler room!")

I want A and B's deferreds to both be called back with the result/failure.
If I can write it like the above it has the advantage of looking like
regular code and no-one has to think about what's going on. Underneath
there's a pool of deferreds whose firing is triggered by the firing of the
single original deferred.

Note that I specifically only want to pool deferreds like this if there is
a call already underway (i.e., the original deferred has not fired). That
implies you could not pool calls to functions that return via defer.succeed
or defer.fail since those deferreds have already fired.  If someone calls
alertSupervisor("We have a problem in the boiler room!") and their deferred
fires, then a subsequent call to alertSupervisor("We have a problem in the
boiler room!") should get through to the supervisor, as per normal.

This may all seem a bit esoteric, but I have several uses for it. In
particular when the service providing alertSupervisor lives on one machine
and is being called via RPC by A and B, both on separate machines.  As for
how to nicely make RPC calls like this, see Thrift [1] which now has
built-in support for Twisted.

Here's a first cut at a solution:

    from twisted.internet import defer
    from twisted.python import failure

    class DeferredPooler(object):
        def __init__(self, func):
            self.pool = {}
            self.func = func

        def _callOthers(self, result, key):
            if isinstance(result, failure.Failure):
                for d in self.pool[key]:
                    d.errback(result)
            else:
                for d in self.pool[key]:
                    d.callback(result)
            del self.pool[key]
            return result

        def __call__(self, *args, **kwargs):
            key = (args, hash(tuple(sorted(kwargs.items()))))
            if key in self.pool:
                d = defer.Deferred()
                self.pool[key].append(d)
                return d
            else:
                self.pool[key] = []
                d = self.func(*args, **kwargs)
                assert isinstance(d, defer.Deferred)
                d.addBoth(self._callOthers, key)
                return d


You use the class transparently, via a decorator:

    from twisted.internet import reactor

    @DeferredPooler
    def x(*args, **kwargs):
        print 'x called: args = %r, kwargs = %r' % (args, kwargs)
        d = defer.Deferred()
        reactor.callLater(2, d.callback, args)
        return d

    def printer(what):
        print 'printer received:', what

    def stop(_):
        reactor.stop()

    if __name__ == '__main__':

        d1 = x('fred')
        d1.addCallback(printer)

        d2 = x('fred')
        d2.addCallback(printer)

        d = defer.DeferredList([d1, d2])
        d.addBoth(stop)
        reactor.run()


If you run this you'll see x is called only once, but d1 and d2 are each
fired properly.

For more Twisted pleasure/pain, you can also try out funky things like:

        d1 = x('fred')
        d1.addCallback(printer)
        d1.addCallback(x)
        d1.addCallback(printer)

        d2 = x('fred')
        d2.addCallback(printer)
        d2.addCallback(x)
        d2.addCallback(printer)

Here there are 4 calls to x, but only 2 get through.

I could say more, as usual. But I'll wait to see if there's any reaction.
One issue to consider further is the simplistic use of hash.  

Terry


[1] Thrift: http://incubator.apache.org/thrift/



From andrewfr_ice at yahoo.com  Thu Apr 23 12:24:44 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 23 Apr 2009 09:24:44 -0700 (PDT)
Subject: [Twisted-Python] Re: Transparent pooling of deferreds to be fired
	upon another
Message-ID: <992574.37917.qm@web34205.mail.mud.yahoo.com>


Hi Terry:

--- On Thu, 4/23/09, twisted-python-request at twistedmatrix.com 

> Suppose I have a function called alertSupervisor that takes
> a string message for the supervisor and which returns a deferred. I
> want to be able to call that function from anywhere in my code, and I
> always want to get a deferred back, but if there's already a call in >progress to tell the supervisor the same thing then I don't want to bug >him/her by sending another message, but I do want to know when the >original >call fires.

Why can't you have the callbacks attached to the deferred, share a flag?

global flag

def callback(....):
    global flag
    if flag == False:
       flag = True
       # do body of function
    else:
       # don't do anything - flag have been previously fired

If I understand what is happening, this should work because of the non-preemptive nature of the reactor, that is you ought not get a race
condition.

Cheers,
Andrew






      



From terry at jon.es  Thu Apr 23 12:54:12 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 18:54:12 +0200
Subject: [Twisted-Python] Re: Transparent pooling of deferreds to be fired
	upon another
In-Reply-To: Your message at 09:24:44 on Thursday, 23 April 2009
References: <992574.37917.qm@web34205.mail.mud.yahoo.com>
Message-ID: <18928.40244.14518.844561@jon.es>

Hi Andrew

>>>>> "Andrew" == Andrew Francis <andrewfr_ice at yahoo.com> writes:
Andrew> Why can't you have the callbacks attached to the deferred, share a flag?

Andrew> global flag

Andrew> def callback(....):
Andrew>   global flag
Andrew>   if flag == False:
Andrew>     flag = True
Andrew>     # do body of function
Andrew>   else:
Andrew>     # don't do anything - flag have been previously fired

Andrew> If I understand what is happening, this should work because of the
Andrew> non-preemptive nature of the reactor, that is you ought not get a
Andrew> race condition.

I'm not sure if I fully understand you.

  1. If your callback above is the thing that does the work (i.e., my
     alertSupervisor function), then yes, you could use a flag to make sure
     the work is only done one.

  2. If your callback really is a callback :-) then this doesn't seem to
     address what I was after. It would stop the same piece of code in the
     same file from doing something twice.


In the case of 1, I don't get what I want because I want various pieces of
code to be able to call the deferred-returning method and each of them to
get a valid deferred back, which fires as usual.  I also don't get to call
the function and then call it again later, because the flag is one-shot.
I'm trying to deal with identical calls that happen more-or-less at the
same time.

In the case of 2, this is also not what I was after. I want, for example,
code running in a different process or on a different box to be able to
make the call (via RPC), get a deferred, etc. So a client-side solution
isn't going to work.

Or maybe you meant something else?


Sorry - I probably wasn't clear enough in my original post, and thanks for
the suggestion.

Terry



From terry at jon.es  Thu Apr 23 13:00:35 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 19:00:35 +0200
Subject: [Twisted-Python] Transparent pooling of deferreds to be fired upon
	another deferred firing
In-Reply-To: Your message at 02:22:27 on Thursday, 23 April 2009
References: <18927.46275.7780.346325@jon.es>
Message-ID: <18928.40627.324147.21197@jon.es>

BTW, below is a version of my code from yesterday that works on class
methods.  I didn't write the __get__ code, but took it from a decorator
tutorial on the web.

This version works with standalone functions, and with class methods that
also use @inlineCallbacks.  So you can do

    class MyClass(object):
        @DeferredPooler
        @defer.inlineCallbacks
        def xxx(self, ...):
            d = funcReturningADeferred()
            d.addCallbacks(...)
            yield d

and it works.  I also wrote a small test suite in case anyone wants it.
There are still some issues (e.g., with timeouts), but I've decorated some
methods with DeferredPooler and am happy with the result so far.

Terry


    from twisted.internet import defer
    from twisted.python import failure

    class DeferredPooler(object):
        def __init__(self, func):
            self.pool = {}
            self.func = func

        def _callOthers(self, result, key):
            if isinstance(result, failure.Failure):
                for d in self.pool[key]:
                    d.errback(result)
            else:
                for d in self.pool[key]:
                    d.callback(result)
            del self.pool[key]
            return result

        def __call__(self, *args, **kwargs):
            key = (args, hash(tuple(sorted(kwargs.items()))))
            if key in self.pool:
                d = defer.Deferred()
                self.pool[key].append(d)
                return d
            else:
                self.pool[key] = []
                d = self.func(*args, **kwargs)
                assert isinstance(d, defer.Deferred)
                d.addBoth(self._callOthers, key)
                return d

        def __get__(self, obj, type=None):
            if obj is None:
                return self
            new_func = self.func.__get__(obj, type)
            return self.__class__(new_func)



From thughes at thegoldfish.org  Thu Apr 23 20:26:04 2009
From: thughes at thegoldfish.org (Tim Hughes)
Date: Fri, 24 Apr 2009 01:26:04 +0100
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
Message-ID: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>

I am trying to understand this concept of async methods and i thought I had
it cracked with the code below but it doesn't seem to work as all the calls
to the xmlrpc server return one after the other like this:

Success:I started at Fri Apr 24 01:12:23 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:28 2009
Success:I started at Fri Apr 24 01:12:28 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:33 2009
Success:I started at Fri Apr 24 01:12:33 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:38 2009
Success:I started at Fri Apr 24 01:12:38 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:43 2009
Success:I started at Fri Apr 24 01:12:43 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:48 2009
Success:I started at Fri Apr 24 01:12:48 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:53 2009

Am I completly missing the point here or is there something incorrect with
my code. AT first I thought it was because the sleep was shutting the whole
thing down (probably is) so  I have also tried it with a long running
network call instead of the time.sleep() and have the same issue. Can
someone please point me in the right direction or give a bit of criticism of
the code concepts/thought processes


=========== Server ========================
#!/usr/bin/env python

from twisted.web import xmlrpc, server
from twisted.internet.defer import Deferred
from twisted.internet import reactor, threads
import time

class MyServer(xmlrpc.XMLRPC):

    def blocking_method(self, duration=5):
        """block the instance for a specified duration"""
        started = time.asctime()
        time.sleep(duration)
        data = "I started at %s and i slept %d seconds then woke at %s" %
(started, duration, time.asctime())
        return data


#    def xmlrpc_block_thread(self, duration=10):
#        """ pass to blocking method using thread """
#        return threads.deferToThread(self.blocking_method, duration)
#
#    def xmlrpc_block(self, duration=10):
#        """ pass to blocking method using defered """
#        d = Deferred()
#        d.callback(self.blocking_method(duration))
#        return d

    def xmlrpc_block_fixed(self, duration=5):
        """ pass to blocking method using defered """
        d = self.blocking_method_fixed(duration)  # return a defered
        d.addCallback(self.printdata)
        d.addErrback(self.printerror)
        return d

    def blocking_method_fixed(self, duration=5):
        d = Deferred()
        d.callback(self.blocking_method(duration))
        return d

    def printdata(self, val):
        return 'Success:'+val

    def printerror(self, val):
        return 'Error:'+val


if __name__ == '__main__':
    r = MyServer()
    reactor.listenTCP(8080, server.Site(r))
    reactor.run()

===============================================


========== Client ================================
#!/usr/bin/env python
import xmlrpclib
import datetime
import sys
proxy = xmlrpclib.ServerProxy("http://localhost:8080/", allow_none=True)
print "%s" % str(proxy.block_fixed(5))

===============================================




Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090424/abdb0561/attachment.htm 

From tim at commsecure.com.au  Thu Apr 23 23:34:47 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 24 Apr 2009 13:34:47 +1000
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
In-Reply-To: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
Message-ID: <20090424133447.5a46af17@ws35.commsecure.com.au>

Tim Hughes <thughes at thegoldfish.org> wrote:
> Am I completly missing the point here or is there something incorrect with
> my code.

Yes, it seems you have missed the point somewhere.

>     def blocking_method(self, duration=5):
>         """block the instance for a specified duration"""
>         started = time.asctime()
>         time.sleep(duration)
>         data = "I started at %s and i slept %d seconds then woke at %s" %
> (started, duration, time.asctime())
>         return data

>     def blocking_method_fixed(self, duration=5):
>         d = Deferred()
>         d.callback(self.blocking_method(duration))
>         return d

Your blocking_method_fixed() wraps the result of blocking_method() in a
Deferred, but it doesn't actually do anything to prevent
blocking_method() from blocking. Deferreds have no magical ability to
prevent things from blocking on their own, they are just a tool you can
use to handle some of the control-flow issues that arise when writing
non-blocking code.

For example, here's a method that does more or less what
blocking_method() does, but in a non-blocking manner:

    def non_blocking_method(self, duration=5):
        started = time.asctime()
        d = Deferred()
        reactor.callLater(duration, d.callback, None)

        def do_stuff_after_timeout(result):
            # Here, 'result' will contain the None we passed to
            # callLater
            data = "I started at %s and I slept %d seconds then woke " \
                   "at %s" % (started, duration, time.asctime())
            return data
        d.addCallback(do_stuff_after_timeout)
        return d

See how the method does some initial preparation, then schedules a
callback to be run after the long-running operation has completed.

If you have a long-running network call to do instead of a simple
sleep, there's probably a Twisted API or addon that will perform the
call and give you back a Deferred, rather than blocking until it has an
answer. If you're trying to use a third-party client library that
doesn't offer a non-blocking API, about the only thing you can do is
call that API in a thread, using the reactor.callInThread() method (but
note that Twisted is not thread-safe, so the thing you call in a thread
can't use any of Twisted's functionality except via
reactor.callFromThread())
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090424/1da7eadd/attachment.pgp 

From nathan.stocks at gmail.com  Fri Apr 24 02:28:19 2009
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 24 Apr 2009 00:28:19 -0600
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async 
	concept
In-Reply-To: <20090424133447.5a46af17@ws35.commsecure.com.au>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
Message-ID: <96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>

On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au> wrote:
> Tim Hughes <thughes at thegoldfish.org> wrote:
>> Am I completly missing the point here or is there something incorrect with
>> my code.
>
> Yes, it seems you have missed the point somewhere.
>
>> ? ? def blocking_method(self, duration=5):
>> ? ? ? ? """block the instance for a specified duration"""
>> ? ? ? ? started = time.asctime()
>> ? ? ? ? time.sleep(duration)
>> ? ? ? ? data = "I started at %s and i slept %d seconds then woke at %s" %
>> (started, duration, time.asctime())
>> ? ? ? ? return data
>
>> ? ? def blocking_method_fixed(self, duration=5):
>> ? ? ? ? d = Deferred()
>> ? ? ? ? d.callback(self.blocking_method(duration))
>> ? ? ? ? return d
>
> Your blocking_method_fixed() wraps the result of blocking_method() in a
> Deferred, but it doesn't actually do anything to prevent
> blocking_method() from blocking. Deferreds have no magical ability to
> prevent things from blocking on their own, they are just a tool you can
> use to handle some of the control-flow issues that arise when writing
> non-blocking code.
>
> For example, here's a method that does more or less what
> blocking_method() does, but in a non-blocking manner:
>
> ? ?def non_blocking_method(self, duration=5):
> ? ? ? ?started = time.asctime()
> ? ? ? ?d = Deferred()
> ? ? ? ?reactor.callLater(duration, d.callback, None)
>
> ? ? ? ?def do_stuff_after_timeout(result):
> ? ? ? ? ? ?# Here, 'result' will contain the None we passed to
> ? ? ? ? ? ?# callLater
> ? ? ? ? ? ?data = "I started at %s and I slept %d seconds then woke " \
> ? ? ? ? ? ? ? ? ? "at %s" % (started, duration, time.asctime())
> ? ? ? ? ? ?return data
> ? ? ? ?d.addCallback(do_stuff_after_timeout)
> ? ? ? ?return d
>
> See how the method does some initial preparation, then schedules a
> callback to be run after the long-running operation has completed.
>
> If you have a long-running network call to do instead of a simple
> sleep, there's probably a Twisted API or addon that will perform the
> call and give you back a Deferred, rather than blocking until it has an
> answer. If you're trying to use a third-party client library that
> doesn't offer a non-blocking API, about the only thing you can do is
> call that API in a thread, using the reactor.callInThread() method (but
> note that Twisted is not thread-safe, so the thing you call in a thread
> can't use any of Twisted's functionality except via
> reactor.callFromThread())

The above email makes a great FAQ item, IMO.  I know there's already
docs covering this, but this issue comes up soooo many times (it took
me a month to wrap my head around it initially) that it wouldn't hurt
to hit the issue from many directions in many styles.

~ Nathan



From drew.smathers at gmail.com  Fri Apr 24 15:33:08 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 24 Apr 2009 15:33:08 -0400
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async 
	concept
In-Reply-To: <96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
	<96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
Message-ID: <368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>

On Fri, Apr 24, 2009 at 2:28 AM, Nathan <nathan.stocks at gmail.com> wrote:
> On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au> wrote:
>> Tim Hughes <thughes at thegoldfish.org> wrote:
>>> Am I completly missing the point here or is there something incorrect with
>>> my code.
>>
>> Yes, it seems you have missed the point somewhere.
>>
>>>     def blocking_method(self, duration=5):
>>>         """block the instance for a specified duration"""
>>>         started = time.asctime()
>>>         time.sleep(duration)
>>>         data = "I started at %s and i slept %d seconds then woke at %s" %
>>> (started, duration, time.asctime())
>>>         return data
>>
>>>     def blocking_method_fixed(self, duration=5):
>>>         d = Deferred()
>>>         d.callback(self.blocking_method(duration))
>>>         return d
>>
>> Your blocking_method_fixed() wraps the result of blocking_method() in a
>> Deferred, but it doesn't actually do anything to prevent
>> blocking_method() from blocking. Deferreds have no magical ability to
>> prevent things from blocking on their own, they are just a tool you can
>> use to handle some of the control-flow issues that arise when writing
>> non-blocking code.
>>
>> For example, here's a method that does more or less what
>> blocking_method() does, but in a non-blocking manner:
>>
>>    def non_blocking_method(self, duration=5):
>>        started = time.asctime()
>>        d = Deferred()
>>        reactor.callLater(duration, d.callback, None)
>>
>>        def do_stuff_after_timeout(result):
>>            # Here, 'result' will contain the None we passed to
>>            # callLater
>>            data = "I started at %s and I slept %d seconds then woke " \
>>                   "at %s" % (started, duration, time.asctime())
>>            return data
>>        d.addCallback(do_stuff_after_timeout)
>>        return d
>>
>> See how the method does some initial preparation, then schedules a
>> callback to be run after the long-running operation has completed.
>>
>> If you have a long-running network call to do instead of a simple
>> sleep, there's probably a Twisted API or addon that will perform the
>> call and give you back a Deferred, rather than blocking until it has an
>> answer. If you're trying to use a third-party client library that
>> doesn't offer a non-blocking API, about the only thing you can do is
>> call that API in a thread, using the reactor.callInThread() method (but
>> note that Twisted is not thread-safe, so the thing you call in a thread
>> can't use any of Twisted's functionality except via
>> reactor.callFromThread())
>
> The above email makes a great FAQ item, IMO.  I know there's already
> docs covering this, but this issue comes up soooo many times (it took
> me a month to wrap my head around it initially) that it wouldn't hurt
> to hit the issue from many directions in many styles.
>

It is one of the FAQ items:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoIuseDeferredstomakemyblockingcodenon-blocking

Apparently there's also been some stitchwork done to commemorate this.

-Drew



From exarkun at twistedmatrix.com  Sun Apr 26 07:47:14 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Apr 2009 11:47:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240746434.52.1725896470@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090426/823fa2e8/attachment.htm 

From exarkun at twistedmatrix.com  Sun Apr 26 08:46:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Apr 2009 12:46:58 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240750018.13.441174210@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090426/45b5f30d/attachment.htm 

From thughes at thegoldfish.org  Sun Apr 26 17:23:11 2009
From: thughes at thegoldfish.org (Tim Hughes)
Date: Sun, 26 Apr 2009 22:23:11 +0100
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
In-Reply-To: <368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
	<96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
	<368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>
Message-ID: <977a11430904261423w11ce9950j1befb591e233bf53@mail.gmail.com>

Thanks for the help on this everyone


Tim Hughes
mailto:thughes at thegoldfish.org

Without religion, people wouldn't pray for peace, they would work towards
it.


On Fri, Apr 24, 2009 at 8:33 PM, Drew Smathers <drew.smathers at gmail.com>wrote:

> On Fri, Apr 24, 2009 at 2:28 AM, Nathan <nathan.stocks at gmail.com> wrote:
> > On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au>
> wrote:
> >> Tim Hughes <thughes at thegoldfish.org> wrote:
> >>> Am I completly missing the point here or is there something incorrect
> with
> >>> my code.
> >>
> >> Yes, it seems you have missed the point somewhere.
> >>
> >>>     def blocking_method(self, duration=5):
> >>>         """block the instance for a specified duration"""
> >>>         started = time.asctime()
> >>>         time.sleep(duration)
> >>>         data = "I started at %s and i slept %d seconds then woke at %s"
> %
> >>> (started, duration, time.asctime())
> >>>         return data
> >>
> >>>     def blocking_method_fixed(self, duration=5):
> >>>         d = Deferred()
> >>>         d.callback(self.blocking_method(duration))
> >>>         return d
> >>
> >> Your blocking_method_fixed() wraps the result of blocking_method() in a
> >> Deferred, but it doesn't actually do anything to prevent
> >> blocking_method() from blocking. Deferreds have no magical ability to
> >> prevent things from blocking on their own, they are just a tool you can
> >> use to handle some of the control-flow issues that arise when writing
> >> non-blocking code.
> >>
> >> For example, here's a method that does more or less what
> >> blocking_method() does, but in a non-blocking manner:
> >>
> >>    def non_blocking_method(self, duration=5):
> >>        started = time.asctime()
> >>        d = Deferred()
> >>        reactor.callLater(duration, d.callback, None)
> >>
> >>        def do_stuff_after_timeout(result):
> >>            # Here, 'result' will contain the None we passed to
> >>            # callLater
> >>            data = "I started at %s and I slept %d seconds then woke " \
> >>                   "at %s" % (started, duration, time.asctime())
> >>            return data
> >>        d.addCallback(do_stuff_after_timeout)
> >>        return d
> >>
> >> See how the method does some initial preparation, then schedules a
> >> callback to be run after the long-running operation has completed.
> >>
> >> If you have a long-running network call to do instead of a simple
> >> sleep, there's probably a Twisted API or addon that will perform the
> >> call and give you back a Deferred, rather than blocking until it has an
> >> answer. If you're trying to use a third-party client library that
> >> doesn't offer a non-blocking API, about the only thing you can do is
> >> call that API in a thread, using the reactor.callInThread() method (but
> >> note that Twisted is not thread-safe, so the thing you call in a thread
> >> can't use any of Twisted's functionality except via
> >> reactor.callFromThread())
> >
> > The above email makes a great FAQ item, IMO.  I know there's already
> > docs covering this, but this issue comes up soooo many times (it took
> > me a month to wrap my head around it initially) that it wouldn't hurt
> > to hit the issue from many directions in many styles.
> >
>
> It is one of the FAQ items:
>
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoIuseDeferredstomakemyblockingcodenon-blocking
>
> Apparently there's also been some stitchwork done to commemorate this.
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090426/55ef66fa/attachment.htm 

From exarkun at divmod.com  Mon Apr 27 12:29:57 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Apr 2009 12:29:57 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <20090427162957.24697.1773342602.divmod.quotient.12450@henry.divmod.com>

On Mon, 20 Apr 2009 15:35:43 -0400, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>Hello All,
>
>I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
>with previous sprints, this is an all day event, most likely hosted at the
>Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
>raised plugin system improvements as a possible topic.  Other topics are
>welcome as well, of course.
>
>It's been a couple months since our last sprint.  I think it would be nice
>to have a sprint early in May and another one late in May.  How do people
>feel about May 2nd or 3rd for the first sprint?
>

Okay, it's official.  Sprint is on for this Saturday, May 2nd.  I'll be
there by 10 AM and probably be around until at least 6 PM (likely later).

Anyone who would like directions or other information about how to
participate, please feel free to contact.

I'll also propose a couple days for the next one.  Does anyone have a
preference between May 23rd and May 30th?

Jean-Paul



From jjconti at gmail.com  Mon Apr 27 20:06:38 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Mon, 27 Apr 2009 21:06:38 -0300
Subject: [Twisted-Python] Polling from Twisted
Message-ID: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>

Hi, this is my first mail to the list.

I am writing a server using Twisted, extending LineOnlyReceiver. In it I
maintain a list of clients connected.

I'd like to poll every client for certain status information every 30
seconds. Which is the correct approach to implement this?

Thanks in advance,

-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090427/c1e16e80/attachment.htm 

From hoooooosety at gmail.com  Tue Apr 28 03:33:54 2009
From: hoooooosety at gmail.com (=?utf-8?B?aG9vb29vb3NldHk=?=)
Date: Tue, 28 Apr 2009 15:33:54 +0800
Subject: [Twisted-Python] =?utf-8?q?Polling_from_Twisted?=
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
Message-ID: <200904281533514846519@gmail.com>

juanjo,

you could use twisted.internet.task module to implement this, try LoopingCall, it's easy to use.
more info in this page,http://twistedmatrix.com/projects/core/documentation/howto/time.html 


2009-04-28 



hoooooosety 



???? Juanjo Conti 
????? 2009-04-28  08:07:26 
???? twisted-python 
??? 
??? [Twisted-Python] Polling from Twisted 
 
Hi, this is my first mail to the list.

I am writing a server using Twisted, extending LineOnlyReceiver. In it I maintain a list of clients connected.

I'd like to poll every client for certain status information every 30 seconds. Which is the correct approach to implement this?

Thanks in advance,

-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090428/4565ba4a/attachment.htm 

From ltaylor.volks at gmail.com  Tue Apr 28 03:48:37 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 28 Apr 2009 00:48:37 -0700
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
Message-ID: <49F6B4D5.5060606@gmail.com>

On 4/27/09 5:06 PM, Juanjo Conti wrote:
> Hi, this is my first mail to the list.
> 
> I am writing a server using Twisted, extending LineOnlyReceiver. In it I
> maintain a list of clients connected.
> 
> I'd like to poll every client for certain status information every 30
> seconds. Which is the correct approach to implement this?
> 

A simple option is to setup a task.LoopingCall in your factory to
iterate over the list of clients every 30 seconds and issue your status
request. I don't know if it is correct for your application, but this
should illustrate the basic idea:


from twisted.internet import reactor, task

class StatusPollingReceiver(LineOnlyReceiver):
    def connectionMade(self):
        self.factory.clients.append(self)

    def lineReceived(self, line):
	print('Rx: %s' % line)

    def connectionLost(self, reason):
        self.factory.clients.remove(self)


class StatusPollingFactory(Factory):

    def __init__(self):
        self.clients = []

        # send a status request to each client every 30 seconds
        self.statusloop = task.LoopingCall(self.requestStatus)
        self.statusloop.start(30.0)

    def requestStatus(self):
        for client in self.clients:
            client.transport.write('stat\r\n')

    def stopFactory(self):
        self.statusloop.stop()

    def buildProtocol(self, addr):
        p = StatusPollingReceiver()
        p.factory = self
        return p




see:
http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html





From jjconti at gmail.com  Tue Apr 28 07:11:41 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Tue, 28 Apr 2009 08:11:41 -0300
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <49F6B4D5.5060606@gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
	<49F6B4D5.5060606@gmail.com>
Message-ID: <3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>

Thanks both for th soon replies.


My code looks a lot like Lucas suggested (I was messing the stop stuff).

Another question. Thinking twisted (and thinking about performance), it's ok
to loop every 30 seconds over the clients asking their status or should be
better to schudle a new polling rutine starting 30 seconds from now every
time a client is connected? In the second approach the polls will be more
spread? Is a good Idea?

It will be something like:

from twisted.internet import reactor, task

class StatusPollingReceiver(LineOnlyReceiver):
   def requestStatus(self):
       self.transport.write('stat\r\n')

   def connectionMade(self):
       self.factory.clients.append(self)
       statusloop = task.LoopingCall(self.requestStatus)
       statusloop.start(30.0)

   def lineReceived(self, line):
       print('Rx: %s' % line)

   def connectionLost(self, reason):
       self.factory.clients.remove(self)


class StatusPollingFactory(Factory):

   def __init__(self):
       self.clients = []

   def stopFactory(self):
       self.statusloop.stop()

   def buildProtocol(self, addr):
       p = StatusPollingReceiver()
       p.factory = self
       return p

2009/4/28 Lucas Taylor <ltaylor.volks at gmail.com>

> On 4/27/09 5:06 PM, Juanjo Conti wrote:
> > Hi, this is my first mail to the list.
> >
> > I am writing a server using Twisted, extending LineOnlyReceiver. In it I
> > maintain a list of clients connected.
> >
> > I'd like to poll every client for certain status information every 30
> > seconds. Which is the correct approach to implement this?
> >
>
> A simple option is to setup a task.LoopingCall in your factory to
> iterate over the list of clients every 30 seconds and issue your status
> request. I don't know if it is correct for your application, but this
> should illustrate the basic idea:
>
>
> from twisted.internet import reactor, task
>
> class StatusPollingReceiver(LineOnlyReceiver):
>    def connectionMade(self):
>        self.factory.clients.append(self)
>
>    def lineReceived(self, line):
>        print('Rx: %s' % line)
>
>    def connectionLost(self, reason):
>        self.factory.clients.remove(self)
>
>
> class StatusPollingFactory(Factory):
>
>    def __init__(self):
>        self.clients = []
>
>        # send a status request to each client every 30 seconds
>        self.statusloop = task.LoopingCall(self.requestStatus)
>        self.statusloop.start(30.0)
>
>    def requestStatus(self):
>        for client in self.clients:
>            client.transport.write('stat\r\n')
>
>    def stopFactory(self):
>        self.statusloop.stop()
>
>    def buildProtocol(self, addr):
>        p = StatusPollingReceiver()
>        p.factory = self
>        return p
>
>
>
>
> see:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090428/b1ab2e88/attachment.htm 

From ltaylor.volks at gmail.com  Tue Apr 28 13:28:14 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 28 Apr 2009 10:28:14 -0700
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>	
	<49F6B4D5.5060606@gmail.com>
	<3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
Message-ID: <49F73CAE.4080505@gmail.com>

On 4/28/09 4:11 AM, Juanjo Conti wrote:
> 
> Another question. Thinking twisted (and thinking about performance),
> it's ok to loop every 30 seconds over the clients asking their status or
> should be better to schudle a new polling rutine starting 30 seconds
> from now every time a client is connected? In the second approach the
> polls will be more spread? Is a good Idea?


If this basic approach works for your application, then either way seems
simple enough to swap out and test. Whether it is a good idea or not
depends on your application, the # of clients, etc.

I don't think you're going to find it makes much of a difference for
some low number of connected clients, so keeping a single timer in the
factory seems easier to manage.

But if you need more control and want to make sure your clients aren't
being polled before it is necessary (i.e. < 30s from connect), then your
second approach might be better.

Lucas

> It will be something like:
> 
> from twisted.internet import reactor, task
> 
> class StatusPollingReceiver(LineOnlyReceiver):
>    def requestStatus(self):
>        self.transport.write('stat\r\n')
>           
>    def connectionMade(self):
>        self.factory.clients.append(self)
>        statusloop = task.LoopingCall(self.requestStatus)
>        statusloop.start(30.0)
> 
>    def lineReceived(self, line):
>        print('Rx: %s' % line)
> 
>    def connectionLost(self, reason):
>        self.factory.clients.remove(self)
> 
> 
> class StatusPollingFactory(Factory):
> 
>    def __init__(self):
>        self.clients = []
> 
>    def stopFactory(self):
>        self.statusloop.stop()
> 
>    def buildProtocol(self, addr):
>        p = StatusPollingReceiver()
>        p.factory = self
>        return p



From jjconti at gmail.com  Tue Apr 28 13:57:31 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Tue, 28 Apr 2009 14:57:31 -0300
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <49F73CAE.4080505@gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
	<49F6B4D5.5060606@gmail.com>
	<3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
	<49F73CAE.4080505@gmail.com>
Message-ID: <3f9007680904281057o4f61e9a7kd3577727c2cdf095@mail.gmail.com>

I'll 400 clients in the first deploy and some thousands later. Do you
think are many?

2009/4/28, Lucas Taylor <ltaylor.volks at gmail.com>:
> On 4/28/09 4:11 AM, Juanjo Conti wrote:
>>
>> Another question. Thinking twisted (and thinking about performance),
>> it's ok to loop every 30 seconds over the clients asking their status or
>> should be better to schudle a new polling rutine starting 30 seconds
>> from now every time a client is connected? In the second approach the
>> polls will be more spread? Is a good Idea?
>
>
> If this basic approach works for your application, then either way seems
> simple enough to swap out and test. Whether it is a good idea or not
> depends on your application, the # of clients, etc.
>
> I don't think you're going to find it makes much of a difference for
> some low number of connected clients, so keeping a single timer in the
> factory seems easier to manage.
>
> But if you need more control and want to make sure your clients aren't
> being polled before it is necessary (i.e. < 30s from connect), then your
> second approach might be better.
>
> Lucas
>
>> It will be something like:
>>
>> from twisted.internet import reactor, task
>>
>> class StatusPollingReceiver(LineOnlyReceiver):
>>    def requestStatus(self):
>>        self.transport.write('stat\r\n')
>>
>>    def connectionMade(self):
>>        self.factory.clients.append(self)
>>        statusloop = task.LoopingCall(self.requestStatus)
>>        statusloop.start(30.0)
>>
>>    def lineReceived(self, line):
>>        print('Rx: %s' % line)
>>
>>    def connectionLost(self, reason):
>>        self.factory.clients.remove(self)
>>
>>
>> class StatusPollingFactory(Factory):
>>
>>    def __init__(self):
>>        self.clients = []
>>
>>    def stopFactory(self):
>>        self.statusloop.stop()
>>
>>    def buildProtocol(self, addr):
>>        p = StatusPollingReceiver()
>>        p.factory = self
>>        return p
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Juanjo Conti



From exarkun at divmod.com  Tue Apr 28 14:08:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Apr 2009 14:08:46 -0400
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904281057o4f61e9a7kd3577727c2cdf095@mail.gmail.com>
Message-ID: <20090428180846.24697.388659364.divmod.quotient.12810@henry.divmod.com>

On Tue, 28 Apr 2009 14:57:31 -0300, Juanjo Conti <jjconti at gmail.com> wrote:
>I'll 400 clients in the first deploy and some thousands later. Do you
>think are many?

You might want to consider a more efficient protocol.  For example, when
a client connects, you could tell it that you want it to send you its
status once every thirty seconds.  Then you don't need to send the request
to each client twice a minute, which saves you the transmission overhead
and the time-based scheduling overhead.

Jean-Paul



From spiritualmechanic at yahoo.com  Wed Apr 29 13:39:30 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Wed, 29 Apr 2009 10:39:30 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <500017.87254.qm@web111312.mail.gq1.yahoo.com>

It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

I'm seeing the "Rollback failed" log message and then the ConnectionLost exception being thrown. I have cp_reconnect set to True, so it's skipping down to the try/except and failing on rollback. Should the code try to rollback if the connection is lost?

Thanks in advance,
Steve



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090429/b64ad944/attachment.htm 

From exarkun at divmod.com  Wed Apr 29 13:46:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Apr 2009 13:46:46 -0400
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
In-Reply-To: 0
Message-ID: <20090429174646.24697.1296596797.divmod.quotient.13657@henry.divmod.com>

On Wed, 29 Apr 2009 10:39:30 -0700 (PDT), Steve Lewis <spiritualmechanic at yahoo.com> wrote:
>It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:
>
>    def rollback(self):
>        if not self._pool.reconnect:
>            self._connection.rollback()
>            return
>
>        try:
>            self._connection.rollback()
>            curs = self._connection.cursor()
>            curs.execute(self._pool.good_sql)
>            curs.close()
>            self._connection.commit()
>            return
>        except:
>            log.err(None, "Rollback failed")
>
>        self._pool.disconnect(self._connection)
>
>        if self._pool.noisy:
>            log.msg("Connection lost.")
>
>        raise ConnectionLost()
>
>I'm seeing the "Rollback failed" log message and then the ConnectionLost exception being thrown. I have cp_reconnect set to True, so it's skipping down to the try/except and failing on rollback. Should the code try to rollback if the connection is lost?

Is there some way it can determine that the connection has been lost aside
from trying the rollback (and is compatible with other DB-API 2.0 modules)?

Jean-Paul



From minesh at gmail.com  Wed Apr 29 14:45:09 2009
From: minesh at gmail.com (Minesh Patel)
Date: Wed, 29 Apr 2009 11:45:09 -0700
Subject: [Twisted-Python] deferToThread help
Message-ID: <b804d5d90904291145p62c3a53sa4df770001d3eb8a@mail.gmail.com>

Sorry if this is a newbie question.

I have a blocking function that I defer to thread, let's say 'foo' and
I would like to add a callback that gets called after say 10 minues
after Thread finishes

def foo():
   # Blocks for a while

def bar():
   # Do some stuff

d = threads.deferToThread(foo)
d.addCallback(bar) # How can I add timing to the callback???

Currently I have the following code which works but doesn't account
for the threads execution time:

reactor.callInThread(self.bootIso, self.iloIp, pathToIsoRename)
# 10 minutes sleep
d = task.deferLater(reactor, 600, bar)

-- 
Thanks,
./Minesh



From exarkun at divmod.com  Wed Apr 29 15:02:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Apr 2009 15:02:33 -0400
Subject: [Twisted-Python] deferToThread help
In-Reply-To: <b804d5d90904291145p62c3a53sa4df770001d3eb8a@mail.gmail.com>
Message-ID: <20090429190233.24697.732042006.divmod.quotient.13670@henry.divmod.com>

On Wed, 29 Apr 2009 11:45:09 -0700, Minesh Patel <minesh at gmail.com> wrote:
>Sorry if this is a newbie question.
>
>I have a blocking function that I defer to thread, let's say 'foo' and
>I would like to add a callback that gets called after say 10 minues
>after Thread finishes
>
>def foo():
>   # Blocks for a while
>
>def bar():
>   # Do some stuff
>
>d = threads.deferToThread(foo)
>d.addCallback(bar) # How can I add timing to the callback???
>
>Currently I have the following code which works but doesn't account
>for the threads execution time:
>
>reactor.callInThread(self.bootIso, self.iloIp, pathToIsoRename)
># 10 minutes sleep
>d = task.deferLater(reactor, 600, bar)
>

You just need to combine the relevant parts of these two solutions.  First,
the deferToThread call which will let you know when the task in the thread
has completed (this is not when the thread exits, because deferToThread uses
a thread pool and threads are re-used for many tasks):

    fooComplete = deferToThread(foo)

Next, when `foo? is finished, you want to wait 10 minutes.  You had the
right idea with deferLater, but you don't want to call it until `foo? is
finished:

    def waitTenMinutes(result):
        return deferLater(reactor, 600, lambda: result)
    fooComplete.addCallback(waitTenMinutes)

Finally, after a ten minute delay, you want to call `bar?:

    fooComplete.addCallback(bar)

Since a Deferred has a chain of callbacks which are called one after the
other, and since return a Deferred from a callback causes things to wait
for the result of that new Deferred before moving on to the next callback
in the original chain, combining deferToThread, deferLater, and bar as
above will give you the desired behavior.

Jean-Paul



From nestor at tiendalinux.com  Wed Apr 29 19:09:08 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Wed, 29 Apr 2009 18:09:08 -0500
Subject: [Twisted-Python] Catching exception on a Serial Connection
Message-ID: <49F8DE14.6030300@tiendalinux.com>

Hello, i am newbie to twisted, i am trying to find a way to catch 
exceptions raised from a protocol over a serial line, like the 
twisted.protocol.gps.zodiac, i see the demo script, on the twisted 
website: 
http://twistedmatrix.com/projects/core/documentation/examples/gpsfix.py 
but i don't figure yet how to handle exceptions coming from the protocol 
since i didn't figure how to register a callback for an error, cause i 
haven't found a way to create a deferred object for a serial connection.

for example, the gpsfix.py main portion is as simple as this:

    s = SerialPort(GPSTest(), o.opts['port'], reactor, baudrate=baudrate)
    reactor.run()

whereas GPSTest() is a class that inherits from protocol.Protocol, 
source code on: 
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/gps/rockwell.py

Any help would be appreciated.

thanks.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From exarkun at divmod.com  Thu Apr 30 08:14:14 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Apr 2009 08:14:14 -0400
Subject: [Twisted-Python] Catching exception on a Serial Connection
In-Reply-To: <49F8DE14.6030300@tiendalinux.com>
Message-ID: <20090430121414.24697.1232702604.divmod.quotient.13987@henry.divmod.com>

On Wed, 29 Apr 2009 18:09:08 -0500, "Nestor A. Diaz" <nestor at tiendalinux.com> wrote:
>Hello, i am newbie to twisted, i am trying to find a way to catch
>exceptions raised from a protocol over a serial line, like the
>twisted.protocol.gps.zodiac, i see the demo script, on the twisted
>website:
>http://twistedmatrix.com/projects/core/documentation/examples/gpsfix.py
>but i don't figure yet how to handle exceptions coming from the protocol
>since i didn't figure how to register a callback for an error, cause i
>haven't found a way to create a deferred object for a serial connection.

Protocol's aren't supposed to raise exceptions from their dataReceived
method.  If they do, then they're basically giving up control - both of
what happens to the exception and what happens to the connection (usually
it will be closed for them shortly afterwards).

If you'd like to handle these exceptions, you should handle them /before/
they escape from dataReceived.  For example:

    class Foo(Protocol):
        def dataReceived(self, bytes):
            try:
                print 'Received', int(bytes)
            except ValueError:
                print 'Received non-int', repr(bytes)

Jean-Paul



From mr.file at gmail.com  Thu Apr 30 08:44:08 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 14:44:08 +0200
Subject: [Twisted-Python] handling CTRL-C
Message-ID: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>

Hi,
i know twisted already manage CTRL-C keystroke, but i'd like to add some
other action when CTRL-C is pressed.
I've implemented a perspective broker server, which have a DeferredQueue and
a lot of elements in it.
I'd like to write to a file all those elements before the program shuts
down.
Is there a way to handle this kind of situation?
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090430/d4ffb865/attachment.htm 

From itamar at itamarst.org  Thu Apr 30 09:04:44 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 30 Apr 2009 09:04:44 -0400
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
Message-ID: <1241096684.23446.2.camel@pintsize>

On Thu, 2009-04-30 at 14:44 +0200, Fabrizio Mancini wrote:
> Hi,
> i know twisted already manage CTRL-C keystroke, but i'd like to add
> some other action when CTRL-C is pressed.
> I've implemented a perspective broker server, which have a
> DeferredQueue and a lot of elements in it.
> I'd like to write to a file all those elements before the program
> shuts down.
> Is there a way to handle this kind of situation?

def cleanupFunction():
   for item in queue:
      item.saveToDisk()
reactor.addSystemEventTrigger("before", "shutdown", cleanupFunction)


The function can return a Deferred in order to delay shutdown during
cleanup.




From exarkun at divmod.com  Thu Apr 30 09:14:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Apr 2009 09:14:59 -0400
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
Message-ID: <20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>

On Thu, 30 Apr 2009 14:44:08 +0200, Fabrizio Mancini <mr.file at gmail.com> wrote:
>Hi,
>i know twisted already manage CTRL-C keystroke, but i'd like to add some
>other action when CTRL-C is pressed.
>I've implemented a perspective broker server, which have a DeferredQueue and
>a lot of elements in it.
>I'd like to write to a file all those elements before the program shuts
>down.
>Is there a way to handle this kind of situation?

The best way is to have an IService provider with a stopService method
which does whatever shutdown cleanup you want done, possibly returning
a Deferred which doesn't fire until it has finished.  However your app
is shut down, this will cause your cleanup code to run.

Jean-Paul



From mr.file at gmail.com  Thu Apr 30 09:24:16 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 15:24:16 +0200
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <1241096684.23446.2.camel@pintsize>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
	<1241096684.23446.2.camel@pintsize>
Message-ID: <793463d60904300624p5ae6e6adw7f46fe528dd6e403@mail.gmail.com>

On Thu, Apr 30, 2009 at 3:04 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2009-04-30 at 14:44 +0200, Fabrizio Mancini wrote:
>> Hi,
>> i know twisted already manage CTRL-C keystroke, but i'd like to add
>> some other action when CTRL-C is pressed.
>> I've implemented a perspective broker server, which have a
>> DeferredQueue and a lot of elements in it.
>> I'd like to write to a file all those elements before the program
>> shuts down.
>> Is there a way to handle this kind of situation?
>
> def cleanupFunction():
> ? for item in queue:
> ? ? ?item.saveToDisk()
> reactor.addSystemEventTrigger("before", "shutdown", cleanupFunction)
>
>
> The function can return a Deferred in order to delay shutdown during
> cleanup.

WOW,
that's amazing!!! thank you very very much!
Twisted is fantastic!!!
Fabrizio



From mr.file at gmail.com  Thu Apr 30 13:59:48 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 19:59:48 +0200
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
	<20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>
Message-ID: <793463d60904301059m29a2ed9elfc7a219ecfd2bad0@mail.gmail.com>

> The best way is to have an IService provider with a stopService method
> which does whatever shutdown cleanup you want done, possibly returning
> a Deferred which doesn't fire until it has finished. ?However your app
> is shut down, this will cause your cleanup code to run.

Thank you,
i will study how to implement this in my app.
fabrizio



From spiritualmechanic at yahoo.com  Thu Apr 30 15:04:01 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Thu, 30 Apr 2009 12:04:01 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <364416.27803.qm@web111302.mail.gq1.yahoo.com>

(If anyone gets this twice, apology in advance. I think I jumped the gun in sending the email before I got my acknowledge welcome email for the list.)

It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

I'm
seeing the "Rollback failed" log message and then the ConnectionLost
exception being thrown. I have cp_reconnect set to True, so it's
skipping down to the try/except and failing on rollback. Should the
code try to rollback if the connection is lost?

Thanks in advance,
Steve


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090430/80216b99/attachment.htm 

From spiritualmechanic at yahoo.com  Thu Apr 30 15:08:13 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Thu, 30 Apr 2009 12:08:13 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <920941.59090.qm@web111315.mail.gq1.yahoo.com>

> Is there some way it can determine that the connection has been lost aside
> from trying the rollback (and is compatible with other DB-API 2.0 modules)?
>
> Jean-Paul

Oops, I actually did see my message going through now. Sorry for the duplicate. 

To answer your question, I was under the impression that the cp_reconnect would check to see if the connection existed already. Is there a way to have it check that query before rolling back? I'm guessing other databases/apis don't throw exceptions on a rollback if the connection is gone?
Steve



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090430/368bff8f/attachment.htm 

From mr.file at gmail.com  Thu Apr 30 17:03:06 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 23:03:06 +0200
Subject: [Twisted-Python] subclassing and mixing
	protocol.ReconnectingClientFactory and pb.PBClientFactory
Message-ID: <793463d60904301403k2e012506g81976595d2aad1f7@mail.gmail.com>

Hi,
i've implemented a pb client by writing a class which inherits from
object and a class which inherits from ReconnectingClientFactory and
PBClientFactory.
Till now it's all ok, the client detects the disconnection and try to
reconnect with an exponential delay if the connection is not
immediatly reestabilished.
The calls to the callRemote("get_item") method are repetitive, but for
sake of simplicity i've cut off the code that controls if there is
already another call running.
The problem:
i'd like to manage something like the clientConnectionMade method when
the client reconnect (thanks to the ReconnectingClientFactory) after a
disconnection and launch again the MypbClient.connect() method as i do
in the "if __name__ " statement, but i can't guess how to do it.
This is the code i'm using.
Thanks in advanche, any help appreciated, and hope to have been clear enough
Fabrizio

class MypbClient(object):

? ?def __init__(self):
? ? ? ?self.clientfactory = MypbClientFactory()
? ? ? ?self._scheduledCall] = task.LoopingCall(self.get_item)
? ? ? ?self._scheduledCall].start(10, False)

? ?def connect(self):
? ? ? ?reactor.connectTCP(server_ip, server_port, self.clientfactory)
? ? ? ?self.rootObj = self.clientfactory.getRootObject()
? ? ? ?self.rootObj.addCallback(self.initiateChain).addErrback(self._eb)

? ?def initiateChain(self, broker):
? ? ? ?self.broker = broker
? ? ? ?self.d = self.broker.callRemote("get_item")
? ? ? ?self.d.addCallback(self.got_item).addErrback(self._eb)

? ?def get_item(self, result):
? ? ? ?self.d = self.broker.callRemote("get_item")
? ? ? ?self.d.addCallback(self.got_item).addErrback(self._eb)

? ?def got_item(self, record):
? ? ? ?self.op = doSomethingWith(record) #returns a deferred

class MypbClientFactory(pb.PBClientFactory, protocol.ReconnectingClientFactory):
? ?def __init__(self):
? ? ? ?pb.PBClientFactory.__init__(self)

? ?def clientConnectionMade(self, broker):
? ? ? ?self.resetDelay()
? ? ? ?pb.PBClientFactory.clientConnectionMade(self, broker)

? ?def clientConnectionFailed(self, connector, reason):
? ? ? ?pb.PBClientFactory.clientConnectionFailed(self, connector, reason)
? ? ? ?if self.continueTrying:
? ? ? ? ? ?self.connector = connector
? ? ? ? ? ?self.retry()

? ?def clientConnectionLost(self, connector, reason, reconnecting=1):
? ? ? ?pb.PBClientFactory.clientConnectionLost(self, connector,
reason, reconnecting=reconnecting)
? ? ? ?protocol.ReconnectingClientFactory.clientConnectionLost(self,
connector, reason)

if __name__ == "__main__":
? ?dpc = MypbClient()
? ?dpc.connect()
? ?reactor.run()



From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.3.1247782916.23371.twisted-python@twistedmatrix.com>

system
(so that it can receive corba messages)

on the other hand, I wanted twisted to listen on port 80 to receive
synchronious HTTP 
request (using twisted wsgi)


and for the item 2) Python QT application, I think QT needs to be in
'main' loop
but I want the application to use twisted infrastructure for
communication to twisted servers
and be a 'twisted' server as well


So wanted just to ask for pointers for above directions.  I admittedly
did not 
do extensive documents reading on the above, so just high-level pointers
to where
I should look -- would be very much appreciated.


Thank you 
-- 
Vlad P
author of C++  ORM  http://github.com/vladp/CppOrm/tree/master


-- 
http://www.fastmail.fm - A fast, anti-spam email service.



From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.5.1249585064.23371.twisted-python@twistedmatrix.com>

just kill and restart dead connections then.

>> ...is this module widely used in production, or are most people using
>> something like SqlAlchemy (or "rolling their own")?
>
>I use it widely in production with cx_Oracle. I use a subclass so I can
>set arraysize. I use it to provide connections to other scripts, so
when
>the connections go wonky I close and reopen the pool, or just restart
>the process.

Thanks for your insight Dave.


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.9.1254253895.23371.twisted-python@twistedmatrix.com>

servers is finding memory leaks, and to a lesser extent debugging
intermittent silent server crashes.
It's not easy to attach a debugger to a production sever if you are looking
for sources of intermittent crashes for example. 
Looking for memory leaks, esp Python garbage collection problems/circular
references is not easy as well, the manhole does not always help here.
Again, attaching a debugger that allows to list *all* objects in the memory,
is not often feasible for a production server under high load. And memory
leaks often appear only under CPU utilization, due to problems with
scheduling garbage collection.

I believe E has a way to dynamically and meaningfully inspect ALL objects in
the memory of any running process.

> I think we are accounting way too much time to the unfounded
> unaccountable random blathering of a troll :-)


As you can see from the %CPU column, I have my reasons for concern ;) This
is current copy and paste from a node with 2x quad core xeon L5420  @
2.50GHz - 1 twistd process per core.

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND

24448 nobody     20   0  991m 607m 2452 R   99  4.3  24764:37 twistd

28553 nobody     20   0  909m 453m 2412 R   95  3.2   1346:51 twistd

24640 nobody     20   0 1092m 676m 2452 R   93  4.8  32750:14 twistd

29900 nobody     20   0  802m 362m 2412 R   93  2.6   1180:53 twistd

24279 nobody     20   0  761m 277m 2424 R   42  2.0  13891:58 twistd

32422 nobody     20   0 1381m 962m 2372 R   10  6.9  13241:54 twistd

24210 nobody     20   0  599m 236m 2396 S    4  1.7   9063:29 twistd

29862 nobody     20   0  323m  14m 2384 S    2  0.1  71:53.50 twistd     





> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Laurens Van Houtven
> Sent: Tuesday, September 29, 2009 12:28 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] I found an interisting comment about
> Twisted vs. Erlang
> 
> I think we are accounting way too much time to the unfounded
> unaccountable random blathering of a troll :-)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.11.1254768579.23371.twisted-python@twistedmatrix.com>

me, but  I'll start taking a look at it in more detail, and see what I can
come up with.  Might need some more tests, etc.

Kevin "Someone" Horn

--000e0cd66c320b268804753493ba
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div class=3D"gmail_quote">On Mon, Oct 5, 2009 at 1:32 PM, Glyph Lefkowitz =
<span dir=3D"ltr">&lt;<a href=3D"mailto:glyph at twistedmatrix.com">glyph at twis=
tedmatrix.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" st=
yle=3D"border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex=
; padding-left: 1ex;">
<div class=3D"gmail_quote"><div class=3D"im">On Mon, Oct 5, 2009 at 12:34 P=
M, Kevin Horn <span dir=3D"ltr">&lt;<a href=3D"mailto:kevin.horn at gmail.com"=
 target=3D"_blank">kevin.horn at gmail.com</a>&gt;</span> wrote:<br><blockquot=
e class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, 204, 204);=
 margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">

I&#39;d like to see this ticket get moving again.</blockquote></div><div><b=
r>Excellent!<br>=A0</div><div class=3D"im"><blockquote class=3D"gmail_quote=
" style=3D"border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0=
.8ex; padding-left: 1ex;">

I&#39;ve gone over what&#39;s been done so far (and put my comments in the =
ticket), and it looks like everything is at least mostly ready to be merged=
 into the Twisted trunk.<br></blockquote></div><div><br>Your analysis on th=
e ticket looks fairly thorough.<br>
</div></div></blockquote><div><br>Thanks!=A0 Though, really I just went ove=
r the changesets that therve submitted, and checked them against exarkun&#3=
9;s suggestions.<br>=A0</div><blockquote class=3D"gmail_quote" style=3D"bor=
der-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-=
left: 1ex;">
<div class=3D"gmail_quote"><div>
=A0</div><div class=3D"im"><blockquote class=3D"gmail_quote" style=3D"borde=
r-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-le=
ft: 1ex;">So what else needs to be done to get this to happen?=A0 I&#39;m h=
appy to try and get it done, but a little direction would be really handy. =
;)<font color=3D"#888888"><br>

</font></blockquote></div><div><br>The workflow is pretty simple.<br><ol><l=
i>author submits change<br></li><li>reviewer reviews change</li><li>someone=
 responds to feedback</li><li>&quot;someone&quot; becomes &quot;author&quot=
;, repeat</li>

</ol>Right now we&#39;re stuck in the middle of step 3, but given that ther=
ve does not appear to be actively working on this branch, the path forward =
is clear.=A0 <i>You</i> become &quot;someone&quot;, and submit a patch that=
 finishes dealing with the issues that you have mentioned as not already ta=
ken care of by therve&#39;s subsequent changesets.=A0 The best way to do th=
is is to submit a patch against the branch, rather than against trunk.=A0 G=
iven such a patch, a twisted committer can then apply the patch to the bran=
ch and submit to buildbots (etc) as appropriate.=A0 By submitting it agains=
t the branch, you make it easy for the reviewer to examine the changes you&=
#39;re submitting in isolation from the rest of the larger change, to see i=
f they address the points that you&#39;ve brought up.<br>

<br>If the reviewer is happy with your changes, then the patch + branch wil=
l be immediately merged to trunk; of course, the next review might have a l=
ittle more feedback for you to deal with ;).<br><br>Thanks for your interes=
t!<br>

</div></div>
<br></blockquote><div>=A0</div><div>That&#39;s kind of what I figured.=A0 <=
br><br>From my previous review of the current status, it looks pretty well =
done to me, but=A0 I&#39;ll start taking a look at it in more detail, and s=
ee what I can come up with.=A0 Might need some more tests, etc.<br>
<br>Kevin &quot;Someone&quot; Horn<br><br>=A0<br></div></div>

--000e0cd66c320b268804753493ba--


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.12.1256632528.23371.twisted-python@twistedmatrix.com>

classes in a base class's mro will be preserved in classes that
inherit from it.  Since "object" inherits from nothing, it can always
be shunted to the end of the mro, provided it hasn't ever been
declared to be ahead of anything else.


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.13.1259785294.23371.twisted-python@twistedmatrix.com>

Twisted is an event-driven networking engine written in Python and
licensed under the MIT license.

See the FAQ for commonly asked questions about Twisted.

    http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions

If you want to get started with Twisted, the first thing you should do
is read the Twisted Core Documentation.

    http://twistedmatrix.com/projects/core/documentation/howto/index.html

Twisted projects variously support TCP, UDP, SSL/TLS, multicast, Unix
sockets, a large number of protocols (including HTTP, NNTP, IMAP, SSH,
IRC, FTP, and others), and much more.

Enjoy!

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.16.1264093913.23371.twisted-python@twistedmatrix.com>

docutisl "Parser" object, which could read the Lore sources and translate it
into a "doctree" of nodes.  From there you could generate the output in
whatever format is supported by docutils.  This would be doable in theory,
but I don't think it would be trivial or even easy, and then you'd have
another tool to maintain until the end of time.

Sphinx adds a bunch of extensions and conventions on top of docutils proper,
and I have little to no idea of what would be involved in handling those
issues.



> >
> >>   - Foolscap 0.5 was released today, which made me wonder what they
> >>use for
> >>     docs...and it's Lore.  I brought this up on IRC, and it was
> >>suggested
> >>     by many that Lore should stick around even after the conversion
> >>according
> >>     to the standard Twisted compatibility policy, to give anyone who
> >>still
> >>     uses it time to migrate.  This sounds like a fine idea to me.
> >>     Any thoughts?
> >
> >Since nobody really uses lore's API, the same compatibility policy
> >doesn't really apply.  In lore's case, I would say that the policy
> >should be that we include it with X more releases just for packaging
> >convenience, but stop doing maintenance immediately.
>
> As long as someone wants to do maintenance, I don't see any reason to
> stop them from doing it.  We might mark all the Lore tickets lowest
> priority or otherwise signal that some subset of the "core" developers
> aren't interested in maintaining it.... but then, how would that be any
> different from the status quo?
>
> Jean-Paul
>
>
If someone wants to maintain Lore, I certainly have no objection, but I
don't think anyone really does.  And it's not like it won't still be in the
SVN repos back in the history someplace, even if it were to be "removed"
from trunk.

I don't have strong feelings about it either way, but my feeling is Lore
should maybe be officially deprecated for a release (or 2, 3, etc.) and then
"removed" from trunk, and if someone wants to maintain it themselves, they
can fork it and deal with it outside the Twisted project.  Or it can be
"resurrected" later on if someone wants.  At the very least, don't force
users to install Lore along with the rest of Twisted once Lore is out of
general use.  Maybe it could be a separate package like web2?

But if it were just up to me, I would just get rid of it, to avoid taking up
developer time, cluttering up trac with open tickets, etc.

Kevin Horn

--000e0cd6eeba77a29f047dafcbd0
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div class=3D"gmail_quote">On Thu, Jan 21, 2010 at 3:03 AM,  <span dir=3D"l=
tr">&lt;<a href=3D"mailto:exarkun at twistedmatrix.com">exarkun at twistedmatrix.=
com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"bor=
der-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-=
left: 1ex;">
<br>
On IRC last night I brought up the idea that we could skip the<br>
conversion to ReST and use Sphinx with xhtml input documents. =A0The<br>
conclusion seemed to be that this might be difficult, but no one was<br>
really sure what work would be involved in this approach. =A0Kevin&#39;s<br=
>
already put a lot of effort into the conversion. =A0It would be nice if<br>
someone else could investigate this.<br></blockquote><div><br>From a docuti=
ls point of view, I _think_ it would involve creating a docutisl &quot;Pars=
er&quot; object, which could read the Lore sources and translate it into a =
&quot;doctree&quot; of nodes.=A0 From there you could generate the output i=
n whatever format is supported by docutils.=A0 This would be doable in theo=
ry, but I don&#39;t think it would be trivial or even easy, and then you&#3=
9;d have another tool to maintain until the end of time.<br>
<br>Sphinx adds a bunch of extensions and conventions on top of docutils pr=
oper, and I have little to no idea of what would be involved in handling th=
ose issues.<br><br>=A0</div><blockquote class=3D"gmail_quote" style=3D"bord=
er-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-l=
eft: 1ex;">

<div class=3D"im">&gt;<br>
&gt;&gt; =A0 - Foolscap 0.5 was released today, which made me wonder what t=
hey<br>
&gt;&gt;use for<br>
&gt;&gt; =A0 =A0 docs...and it&#39;s Lore. =A0I brought this up on IRC, and=
 it was<br>
&gt;&gt;suggested<br>
&gt;&gt; =A0 =A0 by many that Lore should stick around even after the conve=
rsion<br>
&gt;&gt;according<br>
&gt;&gt; =A0 =A0 to the standard Twisted compatibility policy, to give anyo=
ne who<br>
&gt;&gt;still<br>
&gt;&gt; =A0 =A0 uses it time to migrate. =A0This sounds like a fine idea t=
o me.<br>
&gt;&gt; =A0 =A0 Any thoughts?<br>
&gt;<br>
&gt;Since nobody really uses lore&#39;s API, the same compatibility policy<=
br>
&gt;doesn&#39;t really apply. =A0In lore&#39;s case, I would say that the p=
olicy<br>
&gt;should be that we include it with X more releases just for packaging<br=
>
&gt;convenience, but stop doing maintenance immediately.<br>
<br>
</div>As long as someone wants to do maintenance, I don&#39;t see any reaso=
n to<br>
stop them from doing it. =A0We might mark all the Lore tickets lowest<br>
priority or otherwise signal that some subset of the &quot;core&quot; devel=
opers<br>
aren&#39;t interested in maintaining it.... but then, how would that be any=
<br>
different from the status quo?<br>
<br>
Jean-Paul<br>
<br></blockquote></div><br>If someone wants to maintain Lore, I certainly h=
ave no objection, but I don&#39;t think anyone really does.=A0 And it&#39;s=
 not like it won&#39;t still be in the SVN repos back in the history somepl=
ace, even if it were to be &quot;removed&quot; from trunk.<br>
<br>I don&#39;t have strong feelings about it either way, but my feeling is=
 Lore should maybe be officially deprecated for a release (or 2, 3, etc.) a=
nd then &quot;removed&quot; from trunk, and if someone wants to maintain it=
 themselves, they can fork it and deal with it outside the Twisted project.=
=A0 Or it can be &quot;resurrected&quot; later on if someone wants.=A0 At t=
he very least, don&#39;t force users to install Lore along with the rest of=
 Twisted once Lore is out of general use.=A0 Maybe it could be a separate p=
ackage like web2?<br>
<br>But if it were just up to me, I would just get rid of it, to avoid taki=
ng up developer time, cluttering up trac with open tickets, etc.<br><br>Kev=
in Horn<br>

--000e0cd6eeba77a29f047dafcbd0--


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.17.1265398413.23371.twisted-python@twistedmatrix.com>

meeting now, so can't dig into it ATM. Also, I have Spinx 0.6.3 installed,
not 0.6.4

BTW, why is there a Python 2.6 requirement?  I wrote all the FluidDB docs
in Sphinx with 2.5 (http://doc.fluidinfo.com/fluidDB/).

Terry


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.18.1267472512.23371.twisted-python@twistedmatrix.com>

requests and have the server reply for each request.
So, for example: if the client sends "Hello!", the server will reply :
"Hello, [ip address of client]".
But my point is: I can handle the communication between 1 server and 1
client only, but how Can I do if I have multiple clients connected?
My objective is: I have 4 clients connected, and I want the server to send a
data to only one specific client (I will provide the ip address and port for
this specific client)
I imagine that The correct way to do this is: having one thread for each
client connection, and calling that specific thread to write down a message,
am I correct?

Does someone has an example on how can I do that?

Thanks in advance,

Renan Mathias Fernandes





_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

--001485f7c50e6a60310480c27093
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<p>Hi Renan:</p>
<p>I asked almost the same question a few weeks ago.=A0 Look at<br>
<a href=3D"http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Howd=
oImakeinputononeconnectionresultinoutputonanother">http://twistedmatrix.com=
/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultino=
utputonanother</a></p>

<p>The factory can access a list of the connections.</p>
<p>Mark</p>
<p><blockquote type=3D"cite">On Mar 1, 2010 2:24 PM, &quot;Renan Mathias Fe=
rnandes&quot; &lt;<a href=3D"mailto:renan at renanfernandes.org">renan at renanfe=
rnandes.org</a>&gt; wrote:<br><br>Hello,<br>
<br>
I am trying to learn about Twisted Matrix, and for that I am modifying the =
Echo Client &amp; Server example to archive few goals:<br>

From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.19.1267472513.23371.twisted-python@twistedmatrix.com>

ts and have the server reply for each request.<br>
So, for example: if the client sends &quot;Hello!&quot;, the server will re=
ply : &quot;Hello, [ip address of client]&quot;.<br>
But my point is: I can handle the communication between 1 server and 1 clie=
nt only, but how Can I do if I have multiple clients connected?<br>
My objective is: I have 4 clients connected, and I want the server to send =
a data to only one specific client (I will provide the ip address and port =
for this specific client)<br>
I imagine that The correct way to do this is: having one thread for each cl=
ient connection, and calling that specific thread to write down a message, =
am I correct?<br>
<br>
Does someone has an example on how can I do that?<br>
<br>
Thanks in advance,<br>
<br>
Renan Mathias Fernandes<br>
<br>
<br>
<br>
<br>
<br>
_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></p>

--001485f7c50e6a60310480c27093--


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.20.1270550877.23371.twisted-python@twistedmatrix.com>

    class NetstringReceiver(protocol.Protocol):

        def doLength(self):
            ...
            raise NetstringParseError, "netstring too long"
            ...

        def dataReceived(self, data):
            ...
            try:
                ...
                self.doLength()
                ...
            except NetstringParseError:
                self.transport.loseConnection()
                self.brokenPeer = 1

The error message "netstring too long" is shadowed by the except
block. I'd like to see it in my log files.

Would it make sense to emit logging messaged for those errors, or is
there any particular reason why they are silenced?

Cheers,

Carlos


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.21.1272299314.23371.twisted-python@twistedmatrix.com>

Unlike other network libraries and similar to eventlet, gevent starts
the event loop implicitly in a dedicated greenlet. There's no
``reactor`` that you must ``run()`` or ``dispatch()`` function to call.
When a function from gevent API wants to block, it obtains the
:class:`Hub` - a greenlet that runs the event loop - and switches to it.
If there's no :class:`Hub` instance yet, one is created on the fly.

Not sure if you can say that "coroutines are scheduled directly in the
main loop".


>> while with Twisted and Python applications
>> embedded in C servers like Nginx, you have to return control to the
>> "framework" (this what the x-wsgiorg.suspend WSGI extension does).
> 
> It looks like I misremembered the interface provided by txwsgi.  I 
> thought it let you switch to another coroutine directly, 

No, since this would not be possible with a WSGI implementation embedded
in Nginx.

You *need* to return control to the event loop (process cycle in Nginx).

> rather than 
> requiring that you yield an empty string after (the equivalent of) 
> setting a flag.  This seems to be more because of WSGI constraints than 
> anything else, though.
> 

Regards  Manlio


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.22.1274866881.23371.twisted-python@twistedmatrix.com>

out it's too big, I just branch again for a new review unit). So, I want to
do something with entanglement:
lp:~lvh/twisted/quantum-transmogrification-entanglement, and it's good, so
someone reviews and sends it back.

lp's merge proposals let you do the code review in arbitrarily small chunks.
So if the thing I do next
is lp:~lvh/twisted/quantum-transmogrification-ftl-travel, and it turns out
FTL travel is really really hard so I need two smaller
branches lp:~lvh/twisted/quantum-transmogrification-tunnels
and lp:~lvh/twisted/quantum-transmogrification-ansible. Both are good, so
they get put back into ~lvh/twisted/quantum-transmogrification-ftl-travel.

Each review would verify that all children (if any) have also been
reviewed. So, the final review is pretty small, as suggested :-) This does
not limit a developer's freedom to branch at will, because code review is
opt-in (merge proposal), not opt-out. If you don't do it, that code in that
branch isn't covered by a previous review, and must be reviewed later.

How exactly code review coverage would work is somewhat of an open question
and it's the obvious failure in this system. We use it in production and it
turns out to not be a problem, because people always end up doing two
things:

1) always branch at least once from the first branch off trunk (so branch
off lp:~lvh/twisted/quantum-transmogrification). Net
result: lp:~lvh/twisted/quantum-transmogrification only introduces code in
the form of merges.
2) always do code review on branches being merged into your first branch off
trunk (so everything merged into lp:~lvh/twisted/quantum-transmogrification
has to be reviewed already)

Note that our merges into trunk are automagic. If it's merged into a direct
branch off of trunk and it satisfies some qualities (such as full test
coverage :)), it gets put into trunk, and that gets pushed to production
servers. No human interaction. Scary at first, but then you realize humans
were already involved in the QC process extensively at every point -- doing
it this way just makes them take testing more seriously :)

I think a bug would be similar except the root would not be a blueprint but
a bug.


Laurens

--001485f44be061c57f04877c13a5
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

I&#39;ve said something in #twisted but I hadn&#39;t read this reply yet, s=
o for sake of saving this for posterity, I agree with jml here. I think we&=
#39;re mostly being bitten because of a lack of software tools, in the form=
 of svn and trac. Disclaimer: I really dislike svn since I never figured ou=
t how Combinator works. I really dislike trac.<div>
<br></div><div>So, for the rest of this e-mail, let&#39;s pretend we&#39;re=
 implementing a big new feature since that&#39;s the thing I tried to do to=
 some extent.</div><div><br></div><div>Major stuff could be a blueprint on =
Launchpad. Blueprints match a branch for the &quot;big feature&quot;. So, w=
e have the Twisted blueprint quantum-transmogrification and a branch lp:~lv=
h/twisted/quantum-transmogrification.</div>
<div><br></div><div>From that branch I create a bunch of branches of review=
 units (if it turns out it&#39;s too big, I just branch again for a new rev=
iew unit). So, I want to do something with entanglement: lp:~lvh/twisted/qu=
antum-transmogrification-entanglement, and it&#39;s good, so someone review=
s and sends it back.</div>
<div><br></div><div>lp&#39;s merge proposals let you do the code review in =
arbitrarily small chunks. So if the thing I do next is=C2=A0lp:~lvh/twisted=
/quantum-transmogrification-ftl-travel, and it turns out FTL travel is real=
ly really hard so I need two smaller branches=C2=A0lp:~lvh/twisted/quantum-=
transmogrification-tunnels and=C2=A0lp:~lvh/twisted/quantum-transmogrificat=
ion-ansible. Both are good, so they get put back into=C2=A0~lvh/twisted/qua=
ntum-transmogrification-ftl-travel.</div>
<div><br></div><div>Each review would verify that all children (if any) hav=
e also been reviewed.=C2=A0So, the final review is pretty small, as suggest=
ed :-) This does not limit a developer&#39;s freedom to branch at will, bec=
ause code review is opt-in (merge proposal), not opt-out. If you don&#39;t =
do it, that code in that branch isn&#39;t covered by a previous review, and=
 must be reviewed later.</div>
<div><br></div><div>How exactly code review coverage would work is somewhat=
 of an open question and it&#39;s the obvious failure in this system. We us=
e it in production and it turns out to not be a problem, because people alw=
ays end up doing two things:</div>
<div><br></div><div>1) always branch at least once from the first branch of=
f trunk (so branch off=C2=A0lp:~lvh/twisted/quantum-transmogrification). Ne=
t result:=C2=A0lp:~lvh/twisted/quantum-transmogrification only introduces c=
ode in the form of merges.</div>
<div>2) always do code review on branches being merged into your first bran=
ch off trunk (so everything merged into lp:~lvh/twisted/quantum-transmogrif=
ication has to be reviewed already)</div><div><br></div><div>Note that our =
merges into trunk are automagic. If it&#39;s merged into a direct branch of=
f of trunk and it satisfies some qualities (such as full test coverage :)),=
 it gets put into trunk, and that gets pushed to production servers. No hum=
an interaction. Scary at first, but then you=C2=A0realize=C2=A0humans were =
already involved in the QC process extensively at every point -- doing it t=
his way just makes them take testing more seriously :)</div>
<div><br></div><div>I think a bug would be similar except the root would no=
t be a blueprint but a bug.</div><div><br></div><div><br></div><div>Laurens=
</div>

--001485f44be061c57f04877c13a5--


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.23.1276950921.23371.twisted-python@twistedmatrix.com>

wanders across the waves of the Internet, saying that it's jolly well
pleased to announce the first 10.1.0 pre-release.

Tarballs for Twisted 10.1.0pre1 are now available at:
 http://people.canonical.com/~jml/Twisted/10.1.0pre1/

Highlights include:

 * Deferreds now support cancellation

 * A new "endpoint" interface which can abstractly describe stream
transport endpoints such as TCP and SSL

 * inotify support for Linux, which allows monitoring of file system events.

 * AMP supports transferring timestamps

For more information, see the NEWS file.

Please download the tarballs and test them as much as possible.

Thanks,
jml


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.24.1284138113.23371.twisted-python@twistedmatrix.com>

<div><br></div><div>c) (From (a, b)) The ICredentialsChecker needs to be ab=
le to communicate the expiration to the avatar.</div><div>d) The ICredentia=
lsChecker and IRealm can only communicate through the avatarId.</div><div>
<br></div><div>Conclusion (from c,d): The expiration time needs to be in th=
e avatarId?</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8=
ex;border-left:1px #ccc solid;padding-left:1ex"><div style=3D"word-wrap:bre=
ak-word">
<div><div><blockquote type=3D"cite"><div>=C2=A0=C2=A0 =C2=A0- the refresh t=
oken (another ascii string, similar to the access token, optional)</div></b=
lockquote><div><br></div></div><div>Implementation detail of the authentica=
tion protocol. =C2=A0The client library and server library should be transp=
arently refreshing this without telling either the client application code =
or server application code, right?</div>
</div></div></blockquote><div><br></div><div>Sure, but we&#39;re still writ=
ing library code here.</div><div><br></div><div>If the avatar interface=C2=
=A0isn&#39;t actually IResource, but a new interface IAccessToken, getting =
the refresh token later might be feasible. (It should be a different interf=
ace, because in order to create a refresh token outside of this entire cred=
 cycle, I need to know about the thing it&#39;s refreshing -- so, the infor=
mation in the response needs to be easily accessible and not just an opaque=
 IResource).</div>
<div><br></div><div>I agree entirely that clever client library code would =
abstract this mess away from application code. However, right now this code=
 still needs to somehow be able to eventually produce HTTP responses that d=
on&#39;t abstract anything yet and just contain all the appropriate data, b=
ecause that&#39;s just what the OAuth spec says it needs to be able to do. =
There isn&#39;t any real application code in the token endpoint; they&#39;r=
e pretty similar for all OAuth setups, and customization would typically ha=
ppen through implementing the appropriate ICredentialsChecker.</div>
<div><br></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex=
;border-left:1px #ccc solid;padding-left:1ex"><div style=3D"word-wrap:break=
-word"><div><div><blockquote type=3D"cite"><div>=C2=A0=C2=A0 =C2=A0- scope =
(an ascii string consisting of a set of space-separated words, optional)</d=
iv>
</blockquote></div></div><div><br></div>This part doesn&#39;t quite fit, bu=
t could be expressed in one of two ways: a modification to the avatar ID, o=
r as some extra structure on the Mind that modifies what functionality the =
Realm bundles in to your avatar implementation (without changing the interf=
ace provided by that object, of course).</div>


</blockquote><div><br></div><div>Unfortunately I don&#39;t believe this can=
 be done through the mind. Again working under the previous assumption that=
 ICredentialsChecker and not the IRealm is responsible for creating the acc=
ess token, and scope is known to the thing that makes the access token, the=
 ICredentialsChecker knows about the scope. Unfortunately the only way to p=
ass stuff =C2=A0between the ICredentialsChecker and the IRealm is the avata=
r ID, so you don&#39;t have a choice.</div>
<div><br></div><div>=C2=A0</div></div>thanks for your infinite patience,
<div>Laurens</div>

--0016364ef5036a18a2048feab383--


From bogus@does.not.exist.com  Sun Apr 26 08:47:01 2009
From: bogus@does.not.exist.com ()
Date: Sun, 26 Apr 2009 12:47:01 -0000
Subject: No subject
Message-ID: <mailman.25.1285326555.23371.twisted-python@twistedmatrix.com>

    statusCode = 1 #or whatever
    reactor.stop()

in the method that stops the reactor

and the exit call should be added where (after) the reactor is started:

    reactor.run()
    # this will be executed after reactor stops
    sys.exit(statusCode)

Please, correct me if I write nonsense here.

Pandelis Theodosiou

On Fri, Sep 24, 2010 at 4:49 AM, David Cournapeau <cournape at gmail.com>wrote:

> Hi,
>
> I have a program run through twistd, and would like to exit with a non
> zero status code on some error. I have a callback which stops the
> reactor and then sys.exit(some_value), but twistd still seems to catch
> the SystemExit exception after calling for reactor.stop():
>
> Unhandled error in Deferred:
> Traceback (most recent call last):
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/base.py",
> line 1031, in connectionFailed
>    self.factory.clientConnectionFailed(self, reason)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/web/client.py",
> line 350, in clientConnectionFailed
>    self.deferred.errback(reason)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 307, in errback
>    self._startRunCallbacks(fail)
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 354, in _startRunCallbacks
>    self._runCallbacks()
> --- <exception caught here> ---
>  File
> "/home/david/local/lib/python2.6/site-packages/twisted/internet/defer.py",
> line 371, in _runCallbacks
>    self.result = callback(self.result, *args, **kw)
>  File "scripts/tests/run_tests.py", line 69, in exit_on_error
>    sys.exit(1)
> exceptions.SystemExit: 1
>
> What's the correct way of doing this ?
>
> cheers,
>
> David
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

--00151748dbc255864b0490ff68e3
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

I think that you should not put the sys.exit(1) call, after the reactor.sto=
p() call.<br>From my very limited understanding of how Twisted reactor work=
s, it could be done with something like:<br><br>=C2=A0=C2=A0=C2=A0 statusCo=
de =3D 1 #or whatever<br>
=C2=A0=C2=A0=C2=A0 reactor.stop()<br><br>in the method that stops the react=
or<br><br>and the exit call should be added where (after) the reactor is st=
arted:<br><br>=C2=A0 =C2=A0 reactor.run()<br>=C2=A0=C2=A0=C2=A0 # this will=
 be executed after reactor stops<br>
=C2=A0=C2=A0=C2=A0 sys.exit(statusCode)<br><br>Please, correct me if I writ=
e nonsense here. <br><br>Pandelis Theodosiou<br><br><div class=3D"gmail_quo=
te">On Fri, Sep 24, 2010 at 4:49 AM, David Cournapeau <span dir=3D"ltr">&lt=
;<a href=3D"mailto:cournape at gmail.com">cournape at gmail.com</a>&gt;</span> wr=
ote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">Hi,<br>
<br>
I have a program run through twistd, and would like to exit with a non<br>
zero status code on some error. I have a callback which stops the<br>
reactor and then sys.exit(some_value), but twistd still seems to catch<br>
the SystemExit exception after calling for reactor.stop():<br>
<br>
Unhandled error in Deferred:<br>
Traceback (most recent call last):<br>
 =C2=A0File &quot;/home/david/local/lib/python2.6/site-packages/twisted/int=
ernet/base.py&quot;,<br>
line 1031, in connectionFailed<br>
 =C2=A0 =C2=A0self.factory.clientConnectionFailed(self, reason)<br>
 =C2=A0File &quot;/home/david/local/lib/python2.6/site-packages/twisted/web=
/client.py&quot;,<br>
line 350, in clientConnectionFailed<br>
 =C2=A0 =C2=A0self.deferred.errback(reason)<br>
 =C2=A0File &quot;/home/david/local/lib/python2.6/site-packages/twisted/int=
ernet/defer.py&quot;,<br>
line 307, in errback<br>
 =C2=A0 =C2=A0self._startRunCallbacks(fail)<br>
 =C2=A0File &quot;/home/david/local/lib/python2.6/site-packages/twisted/int=
ernet/defer.py&quot;,<br>
line 354, in _startRunCallbacks<br>
 =C2=A0 =C2=A0self._runCallbacks()<br>
--- &lt;exception caught here&gt; ---<br>
 =C2=A0File &quot;/home/david/local/lib/python2.6/site-packages/twisted/int=
ernet/defer.py&quot;,<br>
line 371, in _runCallbacks<br>
 =C2=A0 =C2=A0self.result =3D callback(self.result, *args, **kw)<br>
 =C2=A0File &quot;scripts/tests/run_tests.py&quot;, line 69, in exit_on_err=
or<br>
 =C2=A0 =C2=A0sys.exit(1)<br>
exceptions.SystemExit: 1<br>
<br>
What&#39;s the correct way of doing this ?<br>
<br>
cheers,<br>
<br>
David<br>
<br>
_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></div><br><div style=3D"visibility: hidden; display: inline;" =
id=3D"avg_ls_inline_popup"></div><style type=3D"text/css">#avg_ls_inline_po=
pup {  position:absolute;  z-index:9999;  padding: 0px 0px;  margin-left: 0=
px;  margin-top: 0px;  width: 240px;  overflow: hidden;  word-wrap: break-w=
ord;  color: black;  font-size: 10px;  text-align: left;  line-height: 13px=
;}</style>

--00151748dbc255864b0490ff68e3--


From terry at jon.es  Wed Apr  1 05:54:03 2009
From: terry at jon.es (Terry Jones)
Date: Wed, 1 Apr 2009 13:54:03 +0200
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
Message-ID: <18899.21979.864647.248897@jon.es>

I was thinking it would be nice to have a Twisted interest group meetup at
EuroPython (June 30 - July 2) http://www.europython.eu

Would people be interested in attending? Does someone more qualified want
to organize it? Are any Twisted developers planning to be at EuroPython?

The submissions page http://www.europython.eu/submission/ has a category
for Interest Group Meeting or Discussion. I'm thinking more along the lines
of the former - that it would be nice to be better connected to other
Twisted programmers in Europe, to put a face to some of the names on the
mailing list / IRC, etc.

Terry



From nadav at MIT.EDU  Wed Apr  1 11:16:18 2009
From: nadav at MIT.EDU (Nadav Aharony)
Date: Wed, 01 Apr 2009 13:16:18 -0400
Subject: [Twisted-Python] Twistd and application framework questions
Message-ID: <49D3A162.90804@mit.edu>

Hello,

I have finally gotten to a stage where I want to run my very large 
application as a daemonized twisted app, and I have two questions:

1) The program uses multiple UDP/TCP clients and servers that are 
currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've 
been using MultiService, according to the twisted documentation.
Some of these services were are at a top level of my app so it was easy 
to turn that part into a .tac file and switch the reacor calls to 
internet.TCPServer etc.
However, some of them are deep inside my code, and are instantiated on 
the fly.

What is the "right" way to attach them to my service parent? (the part 
with ".setServiceParent(<myMultiservice>")
Should I now add a pointer to my MultiService that will be propagated 
down the  code hierarchy to each of these calls and be accessible at the 
inner scopes?
Is there a neater way to do it just with importing the right modules? 
(in the same way that in usual twisted scripts the loaded reactor is a 
global reactor)

2)  There are still scenarios where I would want to run my code the 
"reactor" way rather than than using the application framework, and I 
would love to be able to keep a single file that's compatible with both 
modes..
Is there a way to detect in runtime whether the code is being run 
through 'twistd' and the app framework or if its run directly?
I was thinking of doing something like:

if <test if we are run as an app>:
    internet.TCPServer(<port>,<factory>).setServiceParent(<myMultiservice>)
else:
    reactor.listenTCP(<port>,<factory>)


Thanks!
Nadav





From jml at mumak.net  Wed Apr  1 16:11:18 2009
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Apr 2009 09:11:18 +1100
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <d06a5cd30904011511w65b8ca4fg35cb425ccde92760@mail.gmail.com>

On Wed, Apr 1, 2009 at 10:54 PM, Terry Jones <terry at jon.es> wrote:
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
>
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?
>

I'll probably be attending in my capacity as a sometime Bazaar
developer, and will be organizing the Bazaar sprints.

I'm happy to attend a Twisted session, but I'm not going to organize
anything more.

jml



From esteve at sindominio.net  Wed Apr  1 16:57:44 2009
From: esteve at sindominio.net (Esteve =?iso-8859-1?Q?Fern=E0ndez?=)
Date: Thu, 2 Apr 2009 00:57:44 +0200 (CEST)
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <48454.128.54.44.241.1238626664.squirrel@webmail.sindominio.net>

> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
>
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?

I don't know, it all depends on whether my company will allow me to go
EuroPython :-) But I'm not qualified at all, I'm just a padawan Twisted dev,
Glyph forced^Wvolunteered me to become one at PyCon. Man, that guy is very
convincing :-)

> The submissions page http://www.europython.eu/submission/ has a category
> for Interest Group Meeting or Discussion. I'm thinking more along the lines
> of the former - that it would be nice to be better connected to other
> Twisted programmers in Europe, to put a face to some of the names on the
> mailing list / IRC, etc.

I'd definitely be interested in a meeting of Twisted programmers at
EuroPython, unfortunately I didn't meet any European Twisted programmers at
PyCon.

Cheers.




From hoadley at gmail.com  Wed Apr  1 17:42:02 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Wed, 1 Apr 2009 16:42:02 -0700
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: <49D3A162.90804@mit.edu>
References: <49D3A162.90804@mit.edu>
Message-ID: <9bb390e70904011642j628a32cfi6b93d17a2183d2d3@mail.gmail.com>

I can help you with this question:

> 2)  There are still scenarios where I would want to run my code the
> "reactor" way rather than than using the application framework, and I would
> love to be able to keep a single file that's compatible with both modes..
> Is there a way to detect in runtime whether the code is being run through
> 'twistd' and the app framework or if its run directly?
> I was thinking of doing something like:
>

I'm sure there's a way to introspect and figure out how you are being
run. But...

Why do you want to do this?

If it's because you have different environments between prod and
development then you can look at twisted plugins or I just use ENV
vars from my os.environ.  When the app starts it pulls os.environ
vars.

If it's to debug? You can twistd -noy.

I'd also recommend that you are better off in the long run if you
create a number of unittests. trial offers a way to run unittests
within the reactor.  If you haven't done this step it's a major
lifesaver. Tests help you understand how your service,protocol,etc
react and gives you confidence to roll all your services code together
and have it just work.  I've even used trial to do all kinds of crazy
stuff  in my normal non-twisted python coding. Also buildbot to
automatically run the tests is handy.

If it's to run just one service? You'd add this to the bottom of your
service file (i'm assuming you've separated your service from your tac
file)

if __name__ == "__main__":
    #start your service/services here

the tac file won't execute main when importing the service.  So it's
not two files.  But I'm not sure what your end goal is here.  Do tell.

-rob



From tim at commsecure.com.au  Wed Apr  1 21:21:14 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 2 Apr 2009 14:21:14 +1100
Subject: [Twisted-Python] official packaging
In-Reply-To: <200902231148.04217.esteve@sindominio.net>
References: <200902231148.04217.esteve@sindominio.net>
Message-ID: <20090402142114.0a0e435f@ws35.commsecure.com.au>

Esteve Fernandez <esteve at sindominio.net> wrote:
> Anyway, it would be great to have recent packages of Twisted for distributions 
> that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
> that tend to get a bit outdated.

It's worth mentioning that someone has recently stepped up to fix
ticket 1696 after I'd ignored it for Far Too Long, and very soon it
should be possible to build Twisted RPMs for RHEL just by running
"./setup.py bdist_rpm" in a fresh checkout.

For Debian-based distros, I hear there's a tool called "debhelper" that
apparently has some useful tricks for making .deb packages from a
distutils setup.py; I'm not sure how it interacts with or without
python-central, and I don't know how well it would deal with Twisted's
rather... customised setup.py.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090402/dc8164af/attachment.sig>

From therve at free.fr  Thu Apr  2 01:16:02 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Thu, 02 Apr 2009 09:16:02 +0200
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <1238656562.11216.2.camel@minime>

Le mercredi 01 avril 2009 à 13:54 +0200, Terry Jones a écrit :
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu
> 
> Would people be interested in attending? Does someone more qualified want
> to organize it? Are any Twisted developers planning to be at EuroPython?
> 
> The submissions page http://www.europython.eu/submission/ has a category
> for Interest Group Meeting or Discussion. I'm thinking more along the lines
> of the former - that it would be nice to be better connected to other
> Twisted programmers in Europe, to put a face to some of the names on the
> mailing list / IRC, etc.

I'll probably be there, although I didn't confirm yet. As others, I
won't have the time to organize something too official, but I'll be
happy to join and help.

-- 
Thomas




From stodge at gmail.com  Thu Apr  2 06:02:42 2009
From: stodge at gmail.com (Mike Stoddart)
Date: Thu, 2 Apr 2009 08:02:42 -0400
Subject: [Twisted-Python] PBServerFactory - which client disconnected?
Message-ID: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>

I'm experimenting with Twisted Spread for a registry server, among other
things. I'm just curious how the onDisconnect function knows which client
disconnected? I'm also curious why the PBServerFactory class doesn't have a
disconnection function to complement clientConnectionMade? I don't need
security - this is running on a closed, secure LAN and I don't need
"Avatars". Any suggestions on how to improve this?

from twisted.internet import protocol, reactor
from twisted.python import log
from twisted.spread import pb
import sys

log.startLogging(sys.stdout)


class RegistryService(pb.Root):
    def __init__(self):
        self._clientCount = 0
        self._clients = {}

    def remote_register(self, name, service):
        log.msg("Registering service " + name)
        log.msg(str(service))

        # Welcome the client.
        service.callRemote("welcome")

    def onDisconnect(self):
        log.msg("onDisconnect")

        log.msg("Client count = " + str(len(self._clients)))

    def onConnect(self, broker):
        s = broker.transport.getPeer().host + ":" +
str(broker.transport.getPeer().port)
        log.msg("onConnect - client at " + s)

        # Add the client.
        self._clients[s] = broker.transport
        log.msg("Client count = " + str(len(self._clients)))

        # Set a callback in case they disconnect.
        broker.notifyOnDisconnect(self.onDisconnect)

class MyPBFactory(pb.PBServerFactory):
    def __init__(self, root):
        pb.PBServerFactory.__init__(self, root)

    def clientConnectionMade(self, broker):
        log.msg("clientConnectionMade")
        self.root.onConnect(broker)

registry = RegistryService()
f = MyPBFactory(RegistryService())
reactor.listenTCP(9999, f)
reactor.run()


Thanks
Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090402/ca084ac5/attachment.html>

From itamar at itamarst.org  Thu Apr  2 06:40:14 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Apr 2009 08:40:14 -0400
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: <49D3A162.90804@mit.edu>
References: <49D3A162.90804@mit.edu>
Message-ID: <1238676014.16592.52.camel@pintsize>

On Wed, 2009-04-01 at 13:16 -0400, Nadav Aharony wrote:

> 1) The program uses multiple UDP/TCP clients and servers that are 
> currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've 
> been using MultiService, according to the twisted documentation.
> Some of these services were are at a top level of my app so it was easy 
> to turn that part into a .tac file and switch the reacor calls to 
> internet.TCPServer etc.
> However, some of them are deep inside my code, and are instantiated on 
> the fly.
> 
> What is the "right" way to attach them to my service parent? (the part 
> with ".setServiceParent(<myMultiservice>")
> Should I now add a pointer to my MultiService that will be propagated 
> down the  code hierarchy to each of these calls and be accessible at the 
> inner scopes?
> Is there a neater way to do it just with importing the right modules? 
> (in the same way that in usual twisted scripts the loaded reactor is a 
> global reactor)
> 
> 2)  There are still scenarios where I would want to run my code the 
> "reactor" way rather than than using the application framework, and I 
> would love to be able to keep a single file that's compatible with both 
> modes..
> Is there a way to detect in runtime whether the code is being run 
> through 'twistd' and the app framework or if its run directly?
> I was thinking of doing something like:
> 
> if <test if we are run as an app>:
>     internet.TCPServer(<port>,<factory>).setServiceParent(<myMultiservice>)
> else:

1. You don't need to attach to parents service, you can also call
start/stopService directly.

2. You can still call "self.port = reactor.listenTCP(...)" directly in a
custom startService, and self.port.stopListening() in a custom
stopService. You don't have to use twisted.application.internet, it
doesn't add much beyond a little convenience.

The point of services is to encapsulate startup and shutdown logic, not
to make your life harder :)




From dripton at ripton.net  Thu Apr  2 08:04:11 2009
From: dripton at ripton.net (David Ripton)
Date: Thu, 2 Apr 2009 07:04:11 -0700
Subject: [Twisted-Python] official packaging
In-Reply-To: <20090402142114.0a0e435f@ws35.commsecure.com.au>
References: <200902231148.04217.esteve@sindominio.net>
	<20090402142114.0a0e435f@ws35.commsecure.com.au>
Message-ID: <20090402140411.GC10882@vidar.dreamhost.com>

On 2009.04.02 14:21:14 +1100, Tim Allen wrote:
> Esteve Fernandez <esteve at sindominio.net> wrote:
> > Anyway, it would be great to have recent packages of Twisted for distributions 
> > that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
> > that tend to get a bit outdated.
> 
> It's worth mentioning that someone has recently stepped up to fix
> ticket 1696 after I'd ignored it for Far Too Long, and very soon it
> should be possible to build Twisted RPMs for RHEL just by running
> "./setup.py bdist_rpm" in a fresh checkout.

Thanks Tim.  I make RHEL5 rpms for Twisted at work, using "setup.py
bdist_rpm" rather than a manually generated spec file.  I thought we
were just about the only ones who cared about this, so I've never really
tried to push the (small) changes upstream.  But when your changes land
I'll test that they work for us too.

An issue with pushing this kind of change to RPM-based distros is that
writing .spec files by hand and maintaining them is their core
competency, so they mostly think using setup.py bdist_rpm to
autogenerate them is weird and unnecessary and wrong.

-- 
David Ripton    dripton at ripton.net



From cary.hull at gmail.com  Thu Apr  2 10:05:27 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Thu, 2 Apr 2009 09:05:27 -0700
Subject: [Twisted-Python] Documentation overviews
Message-ID: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>

Hi folks,

One of the goals for the Pycon sprint was to develop user oriented overviews
for existing documentation.
These would ideally guide users through everything they would need to read
in order to accomplish a desired goal with Twisted.

I've formulated the following 'track' suggestions based on a conversation in
the sprint room a few nights ago.
Feedback would be greatly appreciated.

---

Overviews

#   The basics of event driven applications (beginner)

#   No hand holding, just the facts (advanced, already familiar with
concepts involved)

#   Testing Twisted applications

#   Driving processes (interactively or otherwise)

#   Custom protocols

#   When it makes sense to use threads

#   Persisting application data (Would cover various options including
Axiom)

#   Task scheduling (Would cover various options including Axiom)

#   Web clients

#   Web applications using just Twisted

#   Web applications using WSGI (Maybe show how to run Django)

#   Mail clients

#   Mail servers

#   SSH clients

#   SSH servers

#   XMPP (Jabber) clients

#   XMPP (Jabber) servers

#   Multiple servers in a single application

#   GUI applications (non web)

#   Networked video games
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090402/f2961b1c/attachment.html>

From msoulier at digitaltorque.ca  Thu Apr  2 10:46:20 2009
From: msoulier at digitaltorque.ca (Michael P. Soulier)
Date: Thu, 2 Apr 2009 12:46:20 -0400
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <20090402164618.GO26849@anton.digitaltorque.ca>

On 02/04/09 Cary Hull said:

> #   Web clients
> 
> #   Web applications using just Twisted
> 
> #   Web applications using WSGI (Maybe show how to run Django)

# Web proxies, with and without authentication, with and without SSL

Mike
-- 
Michael P. Soulier <msoulier at digitaltorque.ca>
"Any intelligent fool can make things bigger and more complex... It takes a
touch of genius - and a lot of courage to move in the opposite direction."
--Albert Einstein
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090402/78fb59a5/attachment.sig>

From terry at jon.es  Thu Apr  2 10:29:47 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 2 Apr 2009 18:29:47 +0200
Subject: [Twisted-Python] Twistd and application framework questions
In-Reply-To: Your message at 08:40:14 on Thursday, 2 April 2009
References: <49D3A162.90804@mit.edu>
	<1238676014.16592.52.camel@pintsize>
Message-ID: <18900.59387.760567.695239@jon.es>

Hi Nadav, Itamar

>>>>> "Itamar" == Itamar Shtull-Trauring <itamar at itamarst.org> writes:
Itamar> On Wed, 2009-04-01 at 13:16 -0400, Nadav Aharony wrote:

>> 1) The program uses multiple UDP/TCP clients and servers that are
>> currently launched with reactor.listenTCP / UDP connectTCP/UDP etc. I've
>> been using MultiService, according to the twisted documentation.  Some
>> of these services were are at a top level of my app so it was easy to
>> turn that part into a .tac file and switch the reacor calls to
>> internet.TCPServer etc.  However, some of them are deep inside my code,
>> and are instantiated on the fly.

We (at Fluidinfo) have a similar situation, though I wouldn't say the
services that start/stop later are deeply buried. They're just not started
right away when startService is called on the MultiService via the plugin
mechanism.

>> What is the "right" way to attach them to my service parent? (the part
>> with ".setServiceParent(<myMultiservice>") Should I now add a pointer to
>> my MultiService that will be propagated down the code hierarchy to each
>> of these calls and be accessible at the inner scopes?  Is there a neater
>> way to do it just with importing the right modules?  (in the same way
>> that in usual twisted scripts the loaded reactor is a global reactor)

At the suggestion/insistence :-) of Esteve Fernandez, we do this by using
the components machinery of Twisted. You write an adaptor that knows how to
take the core of your service and adapt it to some other form of service
interface. The adaptor can have access to the original Multiservice, it can
provide startService and stopService methods that call into the special
service that you're trying to launch, etc.  It's nice because the
mechanisms for creating a new service and getting it hooked up to the
outside world, can be encapsulated in the adaptor and don't pollute the
code that's trying to just provide the underlying service (your "business
logic" I guess you'd call that :-))

BTW, we also have some service startup ordering constraints that we fixed
by subclassing Multiservice. There's a slow-motion thread on this approach,
so the jury's still out, but the code described here works fine for me:

  http://twistedmatrix.com/pipermail/twisted-python/2009-February/019225.html
  http://twistedmatrix.com/pipermail/twisted-python/2009-February/019249.html

Itamar> 1. You don't need to attach to parents service, you can also call
Itamar> start/stopService directly.

Itamar> 2. You can still call "self.port = reactor.listenTCP(...)" directly
Itamar> in a custom startService, and self.port.stopListening() in a custom
Itamar> stopService. You don't have to use twisted.application.internet, it
Itamar> doesn't add much beyond a little convenience.

Itamar> The point of services is to encapsulate startup and shutdown logic,
Itamar> not to make your life harder :)

The main reason I like to add the new service to the original Multiservice
is that its stopService gets called at the right time and I don't have to
think about it. That's a nice convenience.

Terry



From stodge at gmail.com  Thu Apr  2 12:18:07 2009
From: stodge at gmail.com (Mike Stoddart)
Date: Thu, 2 Apr 2009 14:18:07 -0400
Subject: [Twisted-Python] Re: PBServerFactory - which client disconnected?
In-Reply-To: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>
References: <b63684450904020502i61f9bb1p2a6b450c979b1812@mail.gmail.com>
Message-ID: <b63684450904021118j22edf8cco259693345b2bade3@mail.gmail.com>

So I can do the following but the onDisconnect and onConnect functions don't
receive the broker - odd design decision?
Also, there's a comment in PBServerFactory.clientConnectionMade --> "# XXX
does this method make any sense?".  Weird.

class MyServerObject(pb.Root):
    def __init__(self):
        pass

    def onConnect(self):
        log.msg("MyServerObject::onConnect")

    def onDisconnect(self):
        log.msg("MyServerObject::onDisconnect")

class MyServerFactory(pb.PBServerFactory):

    def buildProtocol(self, addr):
        s = addr.host + ":" + str(addr.port)
        log.msg("MyServerFactory::buildProtocol - building protocol for " +
s)
        broker = pb.PBServerFactory.buildProtocol(self, addr)
        broker.notifyOnDisconnect(self.root.onDisconnect)
        broker.notifyOnConnect(self.root.onConnect)
        return broker

reactor.listenTCP(9999, MyServerFactory(MyServerObject()))
reactor.run()

On Thu, Apr 2, 2009 at 8:02 AM, Mike Stoddart <stodge at gmail.com> wrote:

> I'm experimenting with Twisted Spread for a registry server, among other
> things. I'm just curious how the onDisconnect function knows which client
> disconnected? I'm also curious why the PBServerFactory class doesn't have a
> disconnection function to complement clientConnectionMade? I don't need
> security - this is running on a closed, secure LAN and I don't need
> "Avatars". Any suggestions on how to improve this?
>
> from twisted.internet import protocol, reactor
> from twisted.python import log
> from twisted.spread import pb
> import sys
>
> log.startLogging(sys.stdout)
>
>
> class RegistryService(pb.Root):
>     def __init__(self):
>         self._clientCount = 0
>         self._clients = {}
>
>     def remote_register(self, name, service):
>         log.msg("Registering service " + name)
>         log.msg(str(service))
>
>         # Welcome the client.
>         service.callRemote("welcome")
>
>     def onDisconnect(self):
>         log.msg("onDisconnect")
>
>         log.msg("Client count = " + str(len(self._clients)))
>
>     def onConnect(self, broker):
>         s = broker.transport.getPeer().host + ":" +
> str(broker.transport.getPeer().port)
>         log.msg("onConnect - client at " + s)
>
>         # Add the client.
>         self._clients[s] = broker.transport
>         log.msg("Client count = " + str(len(self._clients)))
>
>         # Set a callback in case they disconnect.
>         broker.notifyOnDisconnect(self.onDisconnect)
>
> class MyPBFactory(pb.PBServerFactory):
>     def __init__(self, root):
>         pb.PBServerFactory.__init__(self, root)
>
>     def clientConnectionMade(self, broker):
>         log.msg("clientConnectionMade")
>         self.root.onConnect(broker)
>
> registry = RegistryService()
> f = MyPBFactory(RegistryService())
> reactor.listenTCP(9999, f)
> reactor.run()
>
>
> Thanks
> Mike
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090402/30a73876/attachment.html>

From jay at splitstreams.com  Thu Apr  2 13:53:19 2009
From: jay at splitstreams.com (Jay Deiman)
Date: Thu, 02 Apr 2009 14:53:19 -0500
Subject: [Twisted-Python] Question about application exit handling
Message-ID: <49D517AF.5020104@splitstreams.com>

First, I'm pretty new to the Twisted framework and I've spent a lot of 
time poking through documentation and subsequently, I've managed to 
figure out a lot of things on my own.

Here is one issue I'm having right now.  I wrote an application to be 
run under twistd and it works great, except for one problem.  When I try 
to exit twistd, it hangs.  I know why this is, it's due to a 
twisted.python.threadpool.ThreadPool that I've instantiated and use in 
my code.  Now, here is the actual question.  Is there a 
callback/signal/notifier of some sort that is triggered when an 
application is closed?  I know twistd handles the SIGINT, SIGTERM, etc., 
but is there some sort of notification that is sent to the current 
running application that I can use for clean up?

Thanks,

Jay

-- 
Jay Deiman

\033:wq!



From jay at splitstreams.com  Thu Apr  2 14:27:59 2009
From: jay at splitstreams.com (Jay Deiman)
Date: Thu, 02 Apr 2009 15:27:59 -0500
Subject: [Twisted-Python] Question about application exit handling
In-Reply-To: <49D517AF.5020104@splitstreams.com>
References: <49D517AF.5020104@splitstreams.com>
Message-ID: <49D51FCF.6020009@splitstreams.com>

Jay Deiman wrote:
> First, I'm pretty new to the Twisted framework and I've spent a lot of 
> time poking through documentation and subsequently, I've managed to 
> figure out a lot of things on my own.
> 
> Here is one issue I'm having right now.  I wrote an application to be 
> run under twistd and it works great, except for one problem.  When I try 
> to exit twistd, it hangs.  I know why this is, it's due to a 
> twisted.python.threadpool.ThreadPool that I've instantiated and use in 
> my code.  Now, here is the actual question.  Is there a 
> callback/signal/notifier of some sort that is triggered when an 
> application is closed?  I know twistd handles the SIGINT, SIGTERM, etc., 
> but is there some sort of notification that is sent to the current 
> running application that I can use for clean up?

Nevermind.  I initially misunderstood the startFactory() and 
stopFactory() method docs for the Factory class.  Everything works 
perfectly now.

-- 
Jay Deiman

\033:wq!



From mr.file at gmail.com  Thu Apr  2 15:31:12 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 2 Apr 2009 23:31:12 +0200
Subject: [Twisted-Python] PBClientFactory and getRootObject
Message-ID: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>

Hi everyone,
I'm writing a server and a client using Perspective Broker with no Avatar
and no auth.
The server accumulates some data using a DeferredQueue.
The clients using a remote call retrieve one item per time from the queue
and elaborates it making some changes on a database using adbapi.
What i want to know is:
1) how can i recursively call the remote method to retrieve the items from
the server?
2) can i defer the database operations to a thread so every client can
elaborates multiple requests per time?

The code i'm using is this:

from twisted.internet import reactor, defer, pb
from twisted.enterprise import adbapi
from twisted.python import log
import os

globalConfigurationFile=os.path.abspath('conf' + os.sep +
'configuration.ini')

class DataBasePreparerClient(object):
    '''
    DataBasePreparerClient()
    '''

    def __init__(self, globalConfigurationFile):
        self._gcf = globalConfigurationFile
        self.data = {}
        self._parseConfig()
        self._createDbPool()
        self.d = defer.Deferred()
        self.clientfactory = pb.PBClientFactory()

    def _createDbPool(self):
        self.dbpool = adbapi.ConnectionPool('cx_Oracle',
self.data['db_username'], self.data['db_password'], self.data['db_tns'])

    def connect(self):
        reactor.connectTCP(self.data['server_ip'], self.data['server_port'],
self.clientfactory)
        self.d = self.clientfactory.getRootObject()
        self.dbpool.connect()
        self.d.addCallbacks(self.get_item, self._eb)

    def _eb(self, reason):
        print "Failure: ", reason.getErrorMessage()

    def get_item(self, result):
        d = result.callRemote("get_item")
        d.addCallback(self.got_item)

    def got_item(self, item):
        query = "update table where ..."
        res = self.dbpool.runOperation(query)
        res.addErrback(self._eb)
        self.d = self.clientfactory.getRootObject()
        self.d.addCallbacks(self.get_item, self._eb)

if __name__ == "__main__":
    DataBasePreparerClient(globalConfigurationFile).connect()
    reactor.run()

To call recursively the remote object in function connect i call
clientfactory.getRootObject() and addCallback() for the first time, and the
i recall always self.clientfactory.getRootObject() and self.d.addCallback
when the db query has completed.
Is this correct?
Do I have to always call self.clientfactory.getRootObject() every time i
have to call a remote method?
Can i deferToThread the function got_item or
self.dbpool.runOperation(query)?
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090402/871d5ba2/attachment.html>

From mr.file at gmail.com  Fri Apr  3 08:08:27 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Fri, 3 Apr 2009 16:08:27 +0200
Subject: [Twisted-Python] twisted and logging
Message-ID: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>

Hi,
i'm using the package twisted.python.log to log messages. Till now, it's all
ok, but with the standard logging package from python i had setup a logging
system that logged normal logs to one file, error logs to a separete files,
and some special operations to one other file. Every logging instance was an
instance of the RotatingFileHandler logging class.
I saw that there is a rotating file handler like class in twisted, but how
can i achieve the same behaviour above? (Three different logging instances
to three different rotating files?)
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090403/9124ecba/attachment.html>

From andrewfr_ice at yahoo.com  Fri Apr  3 11:57:12 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 3 Apr 2009 10:57:12 -0700 (PDT)
Subject: [Twisted-Python] Documentation overviews
Message-ID: <169823.84197.qm@web34202.mail.mud.yahoo.com>


Message: 1
Date: Thu, 2 Apr 2009 09:05:27 -0700
From: Cary Hull <cary.hull at gmail.com>
Subject: [Twisted-Python] Documentation overviews
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <3fce0ae70904020905l286b78acvb17f4f0d572d9680 at mail.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

Hi Cary:

>One of the goals for the Pycon sprint was to develop user oriented >overviews for existing documentation. These would ideally guide users >through everything they would need to read in order to accomplish a >desired goal with Twisted.

>I've formulated the following 'track' suggestions based on a conversation >in the sprint room a few nights ago. Feedback would be greatly >appreciated.

Sadly I couldn't make it to PyCon 2009 this year. However I would add two things.

1) A Section on Control Flow. 

In my PyCon 2008 talk, I tried to explain what the control flow of a Twisted programme was. I consider this lack of information a deficiency in the Fettig book (a book that helped me). I needed to understand control flow to solve my problem. I believe how control flow understand how Twisted can provide a form of non-preemptive multitasking without threads. It also explains how to structure a Twisted programme.

2) The Class Hierarchy

I believe a source of confusion is over how the classes are used. It would be good to have something like UML class diagrammes.

Cheers,
Andrew

P.S - one of these days I have to fix the slides for "Adventures" and write the paper companion









      



From glyph at divmod.com  Fri Apr  3 15:25:35 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 03 Apr 2009 21:25:35 -0000
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <20090403212535.12555.983534910.divmod.xquotient.6963@weber.divmod.com>


On 2 Apr, 04:05 pm, cary.hull at gmail.com wrote:
>Hi folks,
>
>One of the goals for the Pycon sprint was to develop user oriented 
>overviews
>for existing documentation.
>These would ideally guide users through everything they would need to 
>read
>in order to accomplish a desired goal with Twisted.
>
>I've formulated the following 'track' suggestions based on a 
>conversation in
>the sprint room a few nights ago.

>Feedback would be greatly appreciated.

(list elided)

It would be nice if these could be phrased as the completions to a 
sentence so it was clear what they meant.

For example, "so, you want to ... Twisted"

"So, you want to write a web application with Twisted."

"So, you want to learn the basics of Twisted."

"So, you want to deploy a plugin for Twisted."

Maybe someone can propose a better sentence to fill out; the idea 
though, is to have some consistent perspective on the task the user is 
trying to perform, rather than the things they might want to learn 
(since they may need to learn multiple things in order to perform the 
task at hand).



From dave at davebritton.com  Sat Apr  4 10:38:32 2009
From: dave at davebritton.com (Dave Britton)
Date: Sat, 4 Apr 2009 11:38:32 -0500
Subject: [Twisted-Python] Documentation overviews
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
Message-ID: <029501c9b543$cabd7520$0500a8c0@yoda>

Twisted masters,
As a twisted newbie, who still doesn't really feel like I get it, but is really drawn to it anyway, my humble advice is to teach how to navigate the use of the libraries,. especially with respect to how data is passed from one process to another, and how to understand the process flow, and how to integrate your own code for your application into the library correctly. It seems like there is an expected but unstated right approach or style that will work best and most easily... the tao of twisted so to speak... but what is this path?
   Being old I still think in terms of sequences, conditionals and iterations, so it took a while to get that if I wanted a sequence of operations to happen as an asynchronous event (a Deferred) that went off on its own for a while, (and when it returns, whatever was going on wherever it was called from is long gone, like the deferred was some spaceship returning from a long near-lightspeed journey!) I had to construct that sequence as a string of callbacks, each attached to the previous, and to get any conditional or iterative activity within that sequence I had to figure out how to pass arguments that would provide enough information to the next callback. That has been extra tricky for me in the context of how to correctly use the library of classes available, especially how and/or when to extend or subclass them. In part this is because although I have used python for a number of years, I have never pushed the envelope in terms of power programming techniques. Thus, it would be helpful also if there was a subsection of the documentation that discussed how advanced python techniques (eg Factories) are used (more about python than twisted, per se, but essential to understanding and using twisted). The Protocol class and how to use it viz the Factory a Protocol goes with is especially confusing to me, for example, yet this is essential in twisted.
   So I admire you guys tremendously and appreciate your work. I hope someday I grok it enough to be able to contribute to the documentation in some way.
-Dave Britton
  ----- Original Message ----- 
  From: Cary Hull 
  To: Twisted general discussion 
  Sent: Thursday, April 02, 2009 11:05 AM
  Subject: [Twisted-Python] Documentation overviews


  Hi folks,

  One of the goals for the Pycon sprint was to develop user oriented overviews for existing documentation.
  These would ideally guide users through everything they would need to read in order to accomplish a desired goal with Twisted.

  I've formulated the following 'track' suggestions based on a conversation in the sprint room a few nights ago.
  Feedback would be greatly appreciated.

  ---

  Overviews

  #   The basics of event driven applications (beginner)

  #   No hand holding, just the facts (advanced, already familiar with concepts involved)

  #   Testing Twisted applications

  #   Driving processes (interactively or otherwise)

  #   Custom protocols

  #   When it makes sense to use threads

  #   Persisting application data (Would cover various options including Axiom)

  #   Task scheduling (Would cover various options including Axiom)

  #   Web clients

  #   Web applications using just Twisted

  #   Web applications using WSGI (Maybe show how to run Django)

  #   Mail clients

  #   Mail servers

  #   SSH clients

  #   SSH servers

  #   XMPP (Jabber) clients

  #   XMPP (Jabber) servers

  #   Multiple servers in a single application

  #   GUI applications (non web)

  #   Networked video games



------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090404/1ae0573c/attachment.html>

From drew.smathers at gmail.com  Sat Apr  4 12:18:38 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sat, 4 Apr 2009 14:18:38 -0400
Subject: [Twisted-Python] twisted and logging
In-Reply-To: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>
References: <793463d60904030708v55722aaeg80c7138570ab4d1b@mail.gmail.com>
Message-ID: <368574aa0904041118y1b528b28g2e97bbbd2a08425d@mail.gmail.com>

On Fri, Apr 3, 2009 at 10:08 AM, Fabrizio Mancini <mr.file at gmail.com> wrote:
> Hi,
> i'm using the package twisted.python.log to log messages. Till now, it's all
> ok, but with the standard logging package from python i had setup a logging
> system that logged normal logs to one file, error logs to a separete files,
> and some special operations to one other file. Every logging instance was an
> instance of the RotatingFileHandler logging class.
> I saw that there is a rotating file handler like class in twisted, but how
> can i achieve the same behaviour above? (Three different logging instances
> to three different rotating files?)
> Thanks in advance


Why not just continue using the standard logging API?  Twisted doesn't
preclude you from doing so:

http://twistedmatrix.com/projects/core/documentation/howto/logging.html#auto3

I use standard logging with twisted without any issues for the same
use case you've described using handlers and filters.

-Drew



From andrewfr_ice at yahoo.com  Sat Apr  4 16:04:49 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 4 Apr 2009 15:04:49 -0700 (PDT)
Subject: [Twisted-Python] Question about Descriptors and SelectReactor 
Message-ID: <141009.42235.qm@web34204.mail.mud.yahoo.com>


Hi:

Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?

Cheers,
Andrew


      



From exarkun at twistedmatrix.com  Sat Apr  4 22:05:18 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Apr 2009 04:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1238904318.84.3148232@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090405/6a701d29/attachment.html>

From drew.smathers at gmail.com  Mon Apr  6 09:39:49 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 6 Apr 2009 11:39:49 -0400
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <141009.42235.qm@web34204.mail.mud.yahoo.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
Message-ID: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>

On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi:
>
> Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?
>

I would say a function of the operating system - or specifically
ulimit on a *nix system.

-Drew



From travis at crystaltech.com  Mon Apr  6 10:36:25 2009
From: travis at crystaltech.com (Travis Kiel)
Date: Mon, 6 Apr 2009 11:36:25 -0500
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <E083C354AEE0094BB00E091C7305C2AD05FE9757@NEWTEKEXCH02.newtekcapital.com>

On Win32, OS select() can take somewhere between 400-450 handles from what I recall.  You will start to suffer although I think you can get beyond this via subprocesses, yet I haven't explored that area yet.

-Tkiel

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Drew Smathers
Sent: Monday, April 06, 2009 8:40 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Question about Descriptors and SelectReactor

On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi:
>
> Perhaps this question has been asked before but is there a limit to the number of descriptors the SelectReactor can handle? Is this a function of the operating system?
>

I would say a function of the operating system - or specifically
ulimit on a *nix system.

-Drew

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Notice: This communication, including attachments, may contain information that is confidential. It constitutes non-public information intended to be conveyed only to the designated recipient(s). If the reader or recipient of this communication is not the intended recipient, an employee or agent of the intended recipient who is responsible for delivering it to the intended recipient, or if you believe that you have received this communication in error, please notify the sender immediately by return e-mail and promptly delete this e-mail, including attachments without reading or saving them in any manner. The unauthorized use, dissemination, distribution, or reproduction of this e-mail, including attachments, is prohibited and may be unlawful. If you have received this email in error, please notify us immediately by e-mail or telephone and delete the e-mail and the attachments (if any).

From drew.smathers at gmail.com  Mon Apr  6 14:07:13 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 6 Apr 2009 16:07:13 -0400
Subject: [Twisted-Python] New user - plugin question
In-Reply-To: <BAY112-W549DD83E0677DCFACA1096D18D0@phx.gbl>
References: <BAY112-W549DD83E0677DCFACA1096D18D0@phx.gbl>
Message-ID: <368574aa0904061307x763f21b2s42f82eae342de9ad@mail.gmail.com>

On Mon, Mar 30, 2009 at 6:27 PM, tim wylie <timwylie at hotmail.com> wrote:
> Hello,
>    I'm a long time linux/python user who's just now starting to use
> twisted.  I am looking for advice more than anything specific.  We're
> working on a small game/etc server that has several small games that can be
> played between users.  Maybe a card game, tic-tac-toe, etc.  There are a lot
> of different plugin subclasses to inherit from-how do you know which is
> best?  And with this kind of framework, is it better to have one interface
> class, say iGame, that all the games inherit from, or is it better to treat
> each game like a seperate plugin inheriting from different twisted plugin
> classes?
>

Unfortunately, I don't think many people will have advice beyond: "Do
what feels right."

Design is an iterative process, you learn from your mistakes.  Try
just writing your game - doing it the "wrong" way first - and then
think more about what makes sense in terms of design, or ask more
specific questions about design later when you've actually implemented
something.

>   There is a lot of good twisted documentation, but that is what also makes
> it difficult because each one does things differently depending on what
> they're implementing and it makes it difficult to decide which is the
> correct approach for what I want to do.  So, if there are any good documents
> related closer to what I'm doing I'd appreciate the heads up on that as
> well.  Well, thanks for your time.

Try going through the classic finger tutorial and then relating those
concepts to your application:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/index.html

There is never going to be a document "How to write the very
application you're thinking of now", but rather always "How to write
some other application" - so you're tasked with realizing an
isomorphism between the concepts.

-Drew



From cary.hull at gmail.com  Mon Apr  6 14:38:21 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Mon, 6 Apr 2009 13:38:21 -0700
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <029501c9b543$cabd7520$0500a8c0@yoda>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
Message-ID: <3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>

Thanks all for the excellent feedback so far. I will adapt it to a
refinement on the proposal and update this thread sometime during the week.

On Sat, Apr 4, 2009 at 9:38 AM, Dave Britton <dave at davebritton.com> wrote:

>  Twisted masters,
> As a twisted newbie, who still doesn't really feel like I get it, but is
> really drawn to it anyway, my humble advice is to teach how to navigate the
> use of the libraries,. especially with respect to how data is passed from
> one process to another, and how to understand the process flow, and how to
> integrate your own code for your application into the library correctly. It
> seems like there is an expected but unstated right approach or style that
> will work best and most easily... the tao of twisted so to speak... but what
> is this path?
>    Being old I still think in terms of sequences, conditionals and
> iterations, so it took a while to get that if I wanted a sequence of
> operations to happen as an asynchronous event (a Deferred) that went off on
> its own for a while, (and when it returns, whatever was going on wherever it
> was called from is long gone, like the deferred was some spaceship returning
> from a long near-lightspeed journey!) I had to construct that sequence as
> a string of callbacks, each attached to the previous, and to get any
> conditional or iterative activity within that sequence I had to figure out
> how to pass arguments that would provide enough information to the next
> callback. That has been extra tricky for me in the context of how to
> correctly use the library of classes available, especially how and/or when
> to extend or subclass them. In part this is because although I have used
> python for a number of years, I have never pushed the envelope in terms of
> power programming techniques. Thus, it would be helpful also if there was a
> subsection of the documentation that discussed how advanced python
> techniques (eg Factories) are used (more about python than twisted, per se,
> but essential to understanding and using twisted). The Protocol class and
> how to use it viz the Factory a Protocol goes with is especially confusing
> to me, for example, yet this is essential in twisted.
>    So I admire you guys tremendously and appreciate your work. I hope
> someday I grok it enough to be able to contribute to the documentation in
> some way.
> -Dave Britton
>
> ----- Original Message -----
> *From:* Cary Hull <cary.hull at gmail.com>
> *To:* Twisted general discussion <twisted-python at twistedmatrix.com>
> *Sent:* Thursday, April 02, 2009 11:05 AM
> *Subject:* [Twisted-Python] Documentation overviews
>
> Hi folks,
>
> One of the goals for the Pycon sprint was to develop user oriented
> overviews for existing documentation.
> These would ideally guide users through everything they would need to read
> in order to accomplish a desired goal with Twisted.
>
> I've formulated the following 'track' suggestions based on a conversation
> in the sprint room a few nights ago.
> Feedback would be greatly appreciated.
>
> ---
>
> Overviews
>
> #   The basics of event driven applications (beginner)
>
> #   No hand holding, just the facts (advanced, already familiar with
> concepts involved)
>
> #   Testing Twisted applications
>
> #   Driving processes (interactively or otherwise)
>
> #   Custom protocols
>
> #   When it makes sense to use threads
>
> #   Persisting application data (Would cover various options including
> Axiom)
>
> #   Task scheduling (Would cover various options including Axiom)
>
> #   Web clients
>
> #   Web applications using just Twisted
>
> #   Web applications using WSGI (Maybe show how to run Django)
>
> #   Mail clients
>
> #   Mail servers
>
> #   SSH clients
>
> #   SSH servers
>
> #   XMPP (Jabber) clients
>
> #   XMPP (Jabber) servers
>
> #   Multiple servers in a single application
>
> #   GUI applications (non web)
>
> #   Networked video games
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090406/de572cb2/attachment.html>

From glyph at divmod.com  Mon Apr  6 15:47:59 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 06 Apr 2009 21:47:59 -0000
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
	<3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
Message-ID: <20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>


On 08:38 pm, cary.hull at gmail.com wrote:
>Thanks all for the excellent feedback so far. I will adapt it to a
>refinement on the proposal and update this thread sometime during the 
>week.

Thanks for your time.  We're all looking forward to see what you can do 
with the documentation :-).



From eyork at apple.com  Mon Apr  6 16:25:39 2009
From: eyork at apple.com (Eric York)
Date: Mon, 6 Apr 2009 15:25:39 -0700
Subject: [Twisted-Python] Fork/Spawn children to accept connections on the
	same port. 
Message-ID: <64BF3FFB-954C-4D6D-AB50-86B8F37CBF5E@apple.com>

I am trying to get the highest level of performance using all of the  
processors cores on a server.

In the past, a unix app would bind/listen to a socket and then fork or  
spawn children to accept connections on that socket. I can’t see how  
to do that in Twisted. Can someone point me in the right direction?

The solution of using a single process to accept connections and then  
farm out work to child processes, while a workable solution, isn’t at  
the same level of performance as children processes that are doing  
their own accepts.

Eric




From matusis at yahoo.com  Mon Apr  6 19:23:25 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 6 Apr 2009 18:23:25 -0700
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <009601c9b71f$736c5b00$5a451100$@com>

I think 1024 on most linux kernels (2.4 and 2.6) for select, you need to go to poll/epoll if you want more, or recompile your kernel.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Monday, April 06, 2009 8:40 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Question about Descriptors and
> SelectReactor
> 
> On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> wrote:
> >
> > Hi:
> >
> > Perhaps this question has been asked before but is there a limit to
> the number of descriptors the SelectReactor can handle? Is this a
> function of the operating system?
> >
> 
> I would say a function of the operating system - or specifically
> ulimit on a *nix system.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From matusis at yahoo.com  Mon Apr  6 19:25:45 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 6 Apr 2009 18:25:45 -0700
Subject: [Twisted-Python] Question about Descriptors and SelectReactor
In-Reply-To: <368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
References: <141009.42235.qm@web34204.mail.mud.yahoo.com>
	<368574aa0904060839k5da2d0c4oc88219fead5319dd@mail.gmail.com>
Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>

> I would say a function of the operating system - or specifically
> ulimit on a *nix system.

I do not think this is correct, on linux: ulimit -n is the number of fds that can be written/read by a process, but the 1024 limit on select is actually hard-compiled into the kernel and can be changed only in the headers with kernel recompilation. 

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Monday, April 06, 2009 8:40 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Question about Descriptors and
> SelectReactor
> 
> On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> wrote:
> >
> > Hi:
> >
> > Perhaps this question has been asked before but is there a limit to
> the number of descriptors the SelectReactor can handle? Is this a
> function of the operating system?
> >
> 
> I would say a function of the operating system - or specifically
> ulimit on a *nix system.
> 
> -Drew
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johann.borck at densedata.com  Tue Apr  7 08:13:53 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Tue, 07 Apr 2009 16:13:53 +0200
Subject: [Twisted-Python] trac server error
Message-ID: <49DB5FA1.3050503@densedata.com>

there seems to be some serious problem with http://twistedmatrix.com/trac/
this is what the browser shows me on about one third of the requests:

Traceback (most recent call last):
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/api.py", line 382, in send_error
    'text/html')
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/chrome.py", line 475, in render_template
    return stream.render(method, doctype=doctype)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 146, in render
    output = u''.join(list(generator))
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 200, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 486, in __call__
    for kind, data, pos in chain(stream, [(None, None, None)]):
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/output.py", line 436, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/core.py", line 207, in _ensure
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/web/chrome.py", line 478, in _strip_accesskeys
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1145, in _match
    content = list(content)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/filters.py", line 313, in __call__
    for kind, data, pos in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1120, in _match
    for event in stream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 1109, in _strip
    event = stream.next()
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 941, in _eval
    for event in substream:
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 920, in _eval
    ctxt):
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/template.py", line 930, in _eval
    result = data.evaluate(ctxt)
  File "/srv/trac/.local/lib/python2.4/site-packages/genshi/eval.py", line 101, in evaluate
    {'data': data})
  File "/home/trac/.local/share/trac/templates/error.html", line 36, in <Expression u"get_reporter_id(req)">
    <input type="hidden" name="reporter" value="${get_reporter_id(req)}" />
  File "/srv/trac/.local/lib/python2.4/site-packages/trac/util/__init__.py", line 50, in get_reporter_id
    name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'





From andrewfr_ice at yahoo.com  Tue Apr  7 11:13:10 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 7 Apr 2009 10:13:10 -0700 (PDT)
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
Message-ID: <321939.67966.qm@web34205.mail.mud.yahoo.com>


Hi Alec and Drew:

Thanks for answering my question. From reading an excerpt of Steven's "UNIX Network Programming," it implies that the FD_SETSIZE is defined in the kernel. If you want a bigger FD_SETSIZE, you need to recompile the kernel. At least that is the case in BSD 4.4 UNIX.

However I am using Linux. The Twisted documentation is recommending that it may be better to use pollreactor.

Cheers,
Andrew

--- On Tue, 4/7/09, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com> wrote:

> From: twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com>
> Subject: Twisted-Python Digest, Vol 61, Issue 10
> To: twisted-python at twistedmatrix.com
> Date: Tuesday, April 7, 2009, 9:00 AM
> Send Twisted-Python mailing list
> submissions to
>     twisted-python at twistedmatrix.com
> 
> To subscribe or unsubscribe via the World Wide Web, visit
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help'
> to
>     twisted-python-request at twistedmatrix.com
> 
> You can reach the person managing the list at
>     twisted-python-owner at twistedmatrix.com
> 
> When replying, please edit your Subject line so it is more
> specific
> than "Re: Contents of Twisted-Python digest..."
> 
> 
> Today's Topics:
> 
>    1. RE: Question about Descriptors and
> SelectReactor (Alec Matusis)
>    2. trac server error (Johann Borck)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Mon, 6 Apr 2009 18:25:45 -0700
> From: "Alec Matusis" <matusis at yahoo.com>
> Subject: RE: [Twisted-Python] Question about Descriptors
> and
>     SelectReactor
> To: "'Twisted general discussion'" <twisted-python at twistedmatrix.com>
> Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>
> Content-Type: text/plain;   
> charset="utf-8"
> 
> > I would say a function of the operating system - or
> specifically
> > ulimit on a *nix system.
> 
> I do not think this is correct, on linux: ulimit -n is the
> number of fds that can be written/read by a process, but the
> 1024 limit on select is actually hard-compiled into the
> kernel and can be changed only in the headers with kernel
> recompilation. 
> 
> > -----Original Message-----
> > From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-
> > bounces at twistedmatrix.com]
> On Behalf Of Drew Smathers
> > Sent: Monday, April 06, 2009 8:40 AM
> > To: Twisted general discussion
> > Subject: Re: [Twisted-Python] Question about
> Descriptors and
> > SelectReactor
> > 
> > On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis <andrewfr_ice at yahoo.com>
> > wrote:
> > >
> > > Hi:
> > >
> > > Perhaps this question has been asked before but
> is there a limit to
> > the number of descriptors the SelectReactor can
> handle? Is this a
> > function of the operating system?
> > >
> > 
> > I would say a function of the operating system - or
> specifically
> > ulimit on a *nix system.
> > 
> > -Drew
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



      



From matusis at yahoo.com  Tue Apr  7 12:17:25 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 7 Apr 2009 11:17:25 -0700
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <321939.67966.qm@web34205.mail.mud.yahoo.com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>
Message-ID: <00e301c9b7ad$1abf9c40$503ed4c0$@com>

> However I am using Linux. The Twisted documentation is recommending
> that it may be better to use pollreactor

I would be actually quite curious to know the rationale of choosing select()
over epoll() these days.
epoll() scales like O(1) with the number of file descriptors, it is very
performant, stable, and has no limitation on the overall number of fds on
linux (except for your /proc and ulimit -n settings). I'd use epoll reactor,
unless you have some very specialized requirement.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Andrew Francis
> Sent: Tuesday, April 07, 2009 10:13 AM
> To: twisted-python at twistedmatrix.com
> Subject: [Twisted-Python] RE: Question about Descriptors and
> SelectReactor
> 
> 
> Hi Alec and Drew:
> 
> Thanks for answering my question. From reading an excerpt of Steven's
> "UNIX Network Programming," it implies that the FD_SETSIZE is defined
> in the kernel. If you want a bigger FD_SETSIZE, you need to recompile
> the kernel. At least that is the case in BSD 4.4 UNIX.
> 
> However I am using Linux. The Twisted documentation is recommending
> that it may be better to use pollreactor.
> 
> Cheers,
> Andrew
> 
> --- On Tue, 4/7/09, twisted-python-request at twistedmatrix.com <twisted-
> python-request at twistedmatrix.com> wrote:
> 
> > From: twisted-python-request at twistedmatrix.com <twisted-python-
> request at twistedmatrix.com>
> > Subject: Twisted-Python Digest, Vol 61, Issue 10
> > To: twisted-python at twistedmatrix.com
> > Date: Tuesday, April 7, 2009, 9:00 AM
> > Send Twisted-Python mailing list
> > submissions to
> >     twisted-python at twistedmatrix.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > or, via email, send a message with subject or body 'help'
> > to
> >     twisted-python-request at twistedmatrix.com
> >
> > You can reach the person managing the list at
> >     twisted-python-owner at twistedmatrix.com
> >
> > When replying, please edit your Subject line so it is more
> > specific
> > than "Re: Contents of Twisted-Python digest..."
> >
> >
> > Today's Topics:
> >
> >    1. RE: Question about Descriptors and
> > SelectReactor (Alec Matusis)
> >    2. trac server error (Johann Borck)
> >
> >
> > ---------------------------------------------------------------------
> -
> >
> > Message: 1
> > Date: Mon, 6 Apr 2009 18:25:45 -0700
> > From: "Alec Matusis" <matusis at yahoo.com>
> > Subject: RE: [Twisted-Python] Question about Descriptors
> > and
> >     SelectReactor
> > To: "'Twisted general discussion'" <twisted-python at twistedmatrix.com>
> > Message-ID: <009701c9b71f$ca82aac0$5f880040$@com>
> > Content-Type: text/plain;
> > charset="utf-8"
> >
> > > I would say a function of the operating system - or
> > specifically
> > > ulimit on a *nix system.
> >
> > I do not think this is correct, on linux: ulimit -n is the
> > number of fds that can be written/read by a process, but the
> > 1024 limit on select is actually hard-compiled into the
> > kernel and can be changed only in the headers with kernel
> > recompilation.
> >
> > > -----Original Message-----
> > > From: twisted-python-bounces at twistedmatrix.com
> > [mailto:twisted-python-
> > > bounces at twistedmatrix.com]
> > On Behalf Of Drew Smathers
> > > Sent: Monday, April 06, 2009 8:40 AM
> > > To: Twisted general discussion
> > > Subject: Re: [Twisted-Python] Question about
> > Descriptors and
> > > SelectReactor
> > >
> > > On Sat, Apr 4, 2009 at 6:04 PM, Andrew Francis
> <andrewfr_ice at yahoo.com>
> > > wrote:
> > > >
> > > > Hi:
> > > >
> > > > Perhaps this question has been asked before but
> > is there a limit to
> > > the number of descriptors the SelectReactor can
> > handle? Is this a
> > > function of the operating system?
> > > >
> > >
> > > I would say a function of the operating system - or
> > specifically
> > > ulimit on a *nix system.
> > >
> > > -Drew
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From rowen at u.washington.edu  Tue Apr  7 13:20:50 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Tue, 07 Apr 2009 12:20:50 -0700
Subject: [Twisted-Python] Can't quit a Tkinter application on MacOS X when
	using Twisted; fix? workaround?
Message-ID: <rowen-6F098F.12205007042009@news.gmane.org>

I am trying to convert a cross-platform Python/Tkinter application to 
use Twisted and have run into a problem: at least on MacOS X I can no 
longer quit the application.

I have appended a minimal script showing the problem.

This is probably not an issue on unix and WIndows because I find I have 
to add my own Quit menu item anyway, so I can make it do what I like. 
But on MacOS X with Aqua Tcl/Tk that item is added by the system and its 
meaning appears to be hard-wired -- I suspect to it calls "quit" on Tk's 
mainloop, but I don't know.

Any suggestion for a workaround would be most appreciated. Also if this 
is not a known issue I will file a bug report.

-- Russell

"""Script showing failure-to-quit bug
At least on MacOS XO 10.5.6 with twisted 8.2.0, python 2.5.2 (from 
python.org) and Aqua Tck/Tk 8.4.19 the File>Quit menu has no effect and 
typing ctrl-Q causes the menu to briefly highlight (as usual) but has no 
other effect.
""
import Tkinter
import twisted.internet.tksupport

root = Tkinter.Tk()
twisted.internet.tksupport.install(root)
reactor = twisted.internet.reactor

reactor.run()




From glyph at divmod.com  Tue Apr  7 21:02:22 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 08 Apr 2009 03:02:22 -0000
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <00e301c9b7ad$1abf9c40$503ed4c0$@com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>
	<00e301c9b7ad$1abf9c40$503ed4c0$@com>
Message-ID: <20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>


On 7 Apr, 06:17 pm, matusis at yahoo.com wrote:
>>However I am using Linux. The Twisted documentation is recommending
>>that it may be better to use pollreactor
>
>I would be actually quite curious to know the rationale of choosing 
>select()
>over epoll() these days.
>epoll() scales like O(1) with the number of file descriptors, it is 
>very
>performant, stable, and has no limitation on the overall number of fds 
>on
>linux (except for your /proc and ulimit -n settings). I'd use epoll 
>reactor,
>unless you have some very specialized requirement.

Short answer: because select() is always available.

Longer answer: Looks like maybe you want to contribute a patch for this 
ticket :)

    http://twistedmatrix.com/trac/ticket/2234



From akrherz at iastate.edu  Wed Apr  8 10:14:33 2009
From: akrherz at iastate.edu (akrherz at iastate.edu)
Date: Wed, 8 Apr 2009 11:14:33 -0500 (CDT)
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd app
Message-ID: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>

Hi Twisted!

Could a kind soul provide me an example of how to connect my StandardIO 
factory to a twistd app?  Here is an overview of my code

class MyProtocol(basic.LineReceiver):
     # Blah Blah

class MyFactory( stdio.StandardIO ):
     def __init__(self, protocol):
         self.protocol = protocol

# then by .tac has
application = service.Application("Ingestor")
serviceCollection = service.IServiceCollection(application)

proto = MyProtocol()
factory = MyFactory( proto )


It is not clear to me how to connect my factory to the application, I do 
this many other times for network related factories by connecting via a 
TCPServer or TCPClient .

Sorry for what I suspect is an embarrassingly simple question. :(

thank you!
   daryl



From clemesha at gmail.com  Wed Apr  8 11:11:29 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 8 Apr 2009 10:11:29 -0700
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd 
	app
In-Reply-To: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
References: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
Message-ID: <d272f0690904081011l448fab10k711b997ec4bd9aeb@mail.gmail.com>

On Wed, Apr 8, 2009 at 9:14 AM,  <akrherz at iastate.edu> wrote:
> Hi Twisted!
>
> Could a kind soul provide me an example of how to connect my StandardIO
> factory to a twistd app?  Here is an overview of my code
>
> class MyProtocol(basic.LineReceiver):
>    # Blah Blah
>
> class MyFactory( stdio.StandardIO ):
>    def __init__(self, protocol):
>        self.protocol = protocol
>
> # then by .tac has
> application = service.Application("Ingestor")
> serviceCollection = service.IServiceCollection(application)
>
> proto = MyProtocol()
> factory = MyFactory( proto )
>
>
> It is not clear to me how to connect my factory to the application, I do
> this many other times for network related factories by connecting via a
> TCPServer or TCPClient .

Looks like all you need to do is add this import:
from twisted.application import internet

and then do:
port = 8080 #or whatever
internet.TCPServer(port, factory).setServiceParent(serviceCollection)



hope this helps,
Alex



>
> Sorry for what I suspect is an embarrassingly simple question. :(
>
> thank you!
>  daryl
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From andrewfr_ice at yahoo.com  Wed Apr  8 12:26:41 2009
From: andrewfr_ice at yahoo.com (andrewfr_ice at yahoo.com)
Date: Wed, 8 Apr 2009 11:26:41 -0700 (PDT)
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
Message-ID: <608344.74126.qm@web34203.mail.mud.yahoo.com>


Hi Glyph and Folks:

AM>I would be actually quite curious to know the rationale of choosing
AM>select() over epoll() these days. epoll() scales like O(1) with the AM>number of file descriptors, it is very performant, stable, and has no AM>limitation on the overall number of fds on linux (except for your /proc AM>and ulimit -n settings). I'd use epoll reactor, unless you have some AM>very specialized requirement.

G>Short answer: because select() is always available.

Thanks. I do most development in Linux now.

The main thing I wanted to avoid was altering file descriptor limits and bundling a new AMI and still not having the ability to test above a certain descriptor limit.

After the semester is over, I want to conduct some new tests with Stackless Python and Twisted. I am also playing with new designs. I am interested in comparing Stackless/Twisted solutions to pure Twisted solutions (just to gauge of inefficiencies). 

I am particularly interested in how channel preferences (a Stackless scheduling mechanism) affect certain performance metrics depending on the number of (and I guess duration) of connections. I will probably start looking at Reactor code again. This is why in the donate time thread, I was willing to volunteer time there (if I can actually be of help)

Cheers,
Andrew






      



From cfoster at oda.state.or.us  Wed Apr  8 13:00:18 2009
From: cfoster at oda.state.or.us (Chris Foster)
Date: Wed, 8 Apr 2009 12:00:18 -0700
Subject: [Twisted-Python] Twisted mirror down?
In-Reply-To: <608344.74126.qm@web34203.mail.mud.yahoo.com>
References: <608344.74126.qm@web34203.mail.mud.yahoo.com>
Message-ID: <BCEC6C59-A94C-4099-88B8-64571AD53363@oda.state.or.us>

Who/where/how do we report a problem with http://tmrc.mit.edu/mirror/twisted/Twisted/8.2/Twisted-8.2.0.tar.bz2 
  ? 



From itamar at itamarst.org  Wed Apr  8 14:19:36 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 8 Apr 2009 16:19:36 -0400 (EDT)
Subject: [Twisted-Python] How to hook at StandardIO factory to a twistd 
	app
In-Reply-To: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
References: <alpine.LRH.2.00.0904081103250.5447@akrherz-laptop.agron.iastate.edu>
Message-ID: <45778.63.107.91.99.1239221976.squirrel@webmail.zoteca.com>

> Hi Twisted!
>
> Could a kind soul provide me an example of how to connect my StandardIO
> factory to a twistd app?  Here is an overview of my code
>
> class MyProtocol(basic.LineReceiver):
>      # Blah Blah
>
> class MyFactory( stdio.StandardIO ):
>      def __init__(self, protocol):
>          self.protocol = protocol

You should not subclass StandardIO, nor do you need a factory. You just do
"stdio = StandardIO(protocolInstance)" and then keep that reference
around.


> It is not clear to me how to connect my factory to the application, I do
> this many other times for network related factories by connecting via a
> TCPServer or TCPClient .

Write a custom service, with a startService that creates a StandardIO
instance and shuts it down in stopService.




From rowen at u.washington.edu  Wed Apr  8 17:23:07 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Wed, 08 Apr 2009 16:23:07 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-6F098F.12205007042009@news.gmane.org>
Message-ID: <rowen-BD0808.16230708042009@news.gmane.org>

In article <rowen-6F098F.12205007042009 at news.gmane.org>,
 "Russell E. Owen" <rowen at u.washington.edu> wrote:

> I am trying to convert a cross-platform Python/Tkinter application to 
> use Twisted and have run into a problem: at least on MacOS X I can no 
> longer quit the application.
>....
> """Script showing failure-to-quit bug...""
> import Tkinter
> import twisted.internet.tksupport
> 
> root = Tkinter.Tk()
> twisted.internet.tksupport.install(root)
> reactor = twisted.internet.reactor
> 
> reactor.run()

Just after posting this Kevin Walzer provided an answer. The Quit menu 
on MacOS X calls the tcl "exit" function. One can easily intercept this 
in Python/Tkinter using createcommand, e.g.:

    def myQuit():
        reactor.stop()

    root.createcommand('exit', myQuit)

-- Russell




From matusis at yahoo.com  Wed Apr  8 20:37:19 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 8 Apr 2009 19:37:19 -0700
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>
References: <321939.67966.qm@web34205.mail.mud.yahoo.com>	<00e301c9b7ad$1abf9c40$503ed4c0$@com>
	<20090408030222.12555.953282376.divmod.xquotient.7148@weber.divmod.com>
Message-ID: <044c01c9b8bc$1b16a0c0$5143e240$@com>

> Longer answer: Looks like maybe you want to contribute a patch for this
> ticket :)
> 
>     http://twistedmatrix.com/trac/ticket/2234


I will look at this at some point (really swamped with work). But my question is: are you going to use python's select.epoll() that was introduced in python 2.6 and abandon the custom C module? In that case, the check of the default reactor would be trivial.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
> Sent: Tuesday, April 07, 2009 8:02 PM
> To: Twisted general discussion
> Subject: RE: [Twisted-Python] RE: Question about Descriptors and
> SelectReactor
> 
> 
> On 7 Apr, 06:17 pm, matusis at yahoo.com wrote:
> >>However I am using Linux. The Twisted documentation is recommending
> >>that it may be better to use pollreactor
> >
> >I would be actually quite curious to know the rationale of choosing
> >select()
> >over epoll() these days.
> >epoll() scales like O(1) with the number of file descriptors, it is
> >very
> >performant, stable, and has no limitation on the overall number of fds
> >on
> >linux (except for your /proc and ulimit -n settings). I'd use epoll
> >reactor,
> >unless you have some very specialized requirement.
> 
> Short answer: because select() is always available.
> 
> Longer answer: Looks like maybe you want to contribute a patch for this
> ticket :)
> 
>     http://twistedmatrix.com/trac/ticket/2234
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From gtaylor at clemson.edu  Thu Apr  9 00:34:23 2009
From: gtaylor at clemson.edu (Greg Taylor)
Date: Thu, 9 Apr 2009 02:34:23 -0400
Subject: [Twisted-Python] Two-way telnet client problem
Message-ID: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>

Hello all,

I'm still pretty new with Twisted, so the documentation is a little
bit cryptic and strange to wade through. I'm writing a MUD server that
I'd like to add InterMUD Protocol (IMC) to. This basically allows any
of the games running the MUD server to connect to an IMC server that
lets players from other games talk to one another. I'm thinking I'll
create another thread and run the IMC client from there so as to not
block the main server thread.

I've started tinkering with how to get the IMC client connected and
able to send and receive, but I'm hitting a problem. If you look at my
pasted example at http://python.pastebin.com/m155730ed you will see at
the end that once the reactor is running, I _think_ this blocks things
up for this thread. This is just fine, I assumed it'd be the case.
However, let's go back to my main MUD server's thread for a moment.
How would I tell the IMC client to send a line of text now? I assume
it'd be something to do with the factory or reactor objects, but I'm
just not sure.

I've seen mention of something like:
p = reactor.buildProtocol()
p.sendLine('blah\n')

But can't quite seem to piece it together. I'd really love to figure
this out, as it'd do a lot for my game. I may be doing this horribly
wrong, any direction would be great.

Greg



From einar.twisted at norsk-esport.no  Thu Apr  9 07:28:18 2009
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 9 Apr 2009 15:28:18 +0200
Subject: [Twisted-Python] ZeroC Ice + Twisted?
Message-ID: <e97d8e3b0904090628x6cb40444rb577abce470b5137@mail.gmail.com>

Dear listmembers,

I have a project that requires me to use ZeroC Ice for communicating with a
server application. I would very much like to use Twisted for this project,
and am therefore wondering if anyone has any experience with using Twisted
with ZeroC Ice?

Previous posts on this list have mentioned that ZeroC Ice has asynchronous
operations and therefore should be easily twistable, but its Python bindings
and type system are unpythonic (Stephen Waterbury, May 30th 2006) . But I
haven't found any posts by people that have actually used Ice with Twisted,
and whether it is possible to achieve proper twistified asynchronous
behaviour.

Any tales of experience, code snippets or anything else that could help me
get started using Ice with Twisted and avoid *not* using Twisted would be
greatly appreciated :)

Cheers,
Einar S. Idsø
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090409/00cbd121/attachment.html>

From alecf at metaweb.com  Thu Apr  9 17:09:41 2009
From: alecf at metaweb.com (Alec Flett)
Date: Thu, 9 Apr 2009 16:09:41 -0700
Subject: [Twisted-Python] HTTP Proxy client?
Message-ID: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>

Is there any way to make twisted.web.client talk through an HTTP proxy?

I don't know enough about http to know if its as simple as opening the  
connection to the proxy and just including the full URL in the GET line?

Alec



From jack at chesspark.com  Thu Apr  9 17:47:20 2009
From: jack at chesspark.com (Jack Moffitt)
Date: Thu, 9 Apr 2009 17:47:20 -0600
Subject: [Twisted-Python] HTTP Proxy client?
In-Reply-To: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>
References: <C42C3EE9-2C40-40B0-B417-770FC5946C20@metaweb.com>
Message-ID: <9b58f4550904091647t88b931at7c3b67f879959be4@mail.gmail.com>

> Is there any way to make twisted.web.client talk through an HTTP proxy?
>
> I don't know enough about http to know if its as simple as opening the
> connection to the proxy and just including the full URL in the GET line?

I would expect that twisted.web.proxy.ProxyClient does what you want.
You can read about it here:

http://twistedmatrix.com/documents/current/api/twisted.web.proxy.html

I just recently made use of the ReverseProxy parts, and they worked well.

jack.



From exarkun at divmod.com  Fri Apr 10 09:44:20 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:44:20 -0400
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <044c01c9b8bc$1b16a0c0$5143e240$@com>
Message-ID: <20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>

On Wed, 8 Apr 2009 19:37:19 -0700, Alec Matusis <matusis at yahoo.com> wrote:
>> Longer answer: Looks like maybe you want to contribute a patch for this
>> ticket :)
>>
>>     http://twistedmatrix.com/trac/ticket/2234
>
>
>I will look at this at some point (really swamped with work). But my question is: are you going to use python's select.epoll() that was introduced in python 2.6 and abandon the custom C module? In that case, the check of the default reactor would be trivial.

The new epoll support in Python is partially based on our epoll wrapper. ;)
At some point, it is quite likely that we'll start trying to use it (our
customer wrapper is still required to support Python 2.5 and older, though).
I think this will only complicate (trivially) the process of selecting a
good default reactor though, since it's another case to handle.  However,
it's a pretty trivial matter overall; someone just needs to do it.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 09:57:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:57:19 -0400
Subject: [Twisted-Python] Fork/Spawn children to accept connections on
	the same port. 
In-Reply-To: <64BF3FFB-954C-4D6D-AB50-86B8F37CBF5E@apple.com>
Message-ID: <20090410155719.24697.533704354.divmod.quotient.5783@henry.divmod.com>

On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>I am trying to get the highest level of performance using all of the 
>processors cores on a server.
>
>In the past, a unix app would bind/listen to a socket and then fork or 
>spawn children to accept connections on that socket. I can’t see how  to do 
>that in Twisted. Can someone point me in the right direction?
>
>The solution of using a single process to accept connections and then  farm 
>out work to child processes, while a workable solution, isn’t at  the same 
>level of performance as children processes that are doing  their own 
>accepts.

There are many ways to do this.  The common idea is to just run multiple
processes, not by allocating resources and then forking to share them, but
just by running multiple processes.  You can make this transparent to the
outside in various ways - have a load balancing port forwarded in front of
all the processes, for example.  On Linux, you can even use iptables to do
this.  It's also possible to bind a port in one process and then send it
over a UNIX socket to another process; this comes closer to the bind/fork
approach, but accomplishes the resource sharing explicitly via fd passing
rather than through fork.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 09:58:29 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 11:58:29 -0400
Subject: [Twisted-Python] trac server error
In-Reply-To: <49DB5FA1.3050503@densedata.com>
Message-ID: <20090410155829.24697.1862469788.divmod.quotient.5785@henry.divmod.com>

On Tue, 07 Apr 2009 16:13:53 +0200, Johann Borck <johann.borck at densedata.com> wrote:
>there seems to be some serious problem with http://twistedmatrix.com/trac/
>this is what the browser shows me on about one third of the requests:

Sorry.  This just happens sometimes.  It's due to some bug in trac.  I think
that it generally should only happen near the beginning of a session, but
I'm not certain.  If you have cookies disabled, this might cause you to see
it more frequently.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 10:01:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:01:33 -0400
Subject: [Twisted-Python] Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
In-Reply-To: <rowen-6F098F.12205007042009@news.gmane.org>
Message-ID: <20090410160133.24697.1558421192.divmod.quotient.5786@henry.divmod.com>

On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen" <rowen at u.washington.edu> wrote:
>I am trying to convert a cross-platform Python/Tkinter application to
>use Twisted and have run into a problem: at least on MacOS X I can no
>longer quit the application.
>
>I have appended a minimal script showing the problem.

The example omits this piece of code, recommended by the tksupport module
docstring:

  root.protocol('WM_DELETE_WINDOW', reactor.stop)

I know you posted another solution already, but I'm curious to know if
the recommended fix works on OS X or if we should be recommended something
else.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 10:06:34 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:06:34 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>
Message-ID: <20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>

On Thu, 9 Apr 2009 02:34:23 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>Hello all,
>
>I'm still pretty new with Twisted, so the documentation is a little
>bit cryptic and strange to wade through. I'm writing a MUD server that
>I'd like to add InterMUD Protocol (IMC) to. This basically allows any
>of the games running the MUD server to connect to an IMC server that
>lets players from other games talk to one another. I'm thinking I'll
>create another thread and run the IMC client from there so as to not
>block the main server thread.

Threading generally isn't the way to do networking with Twisted.  In fact,
Twisted is almost wholly geared toward avoiding exactly that.

>From your example, it appears as though you've figured out how to do basic
client setup.  What you're missing is how to use the connection once it
is established.  You need to be thinking of your program in terms of events.

> [snip]
>
>I've seen mention of something like:
>p = reactor.buildProtocol()
>p.sendLine('blah\n')

You can't really do this.  Instead, it seems that since you want to send
a line once the connection is established, you should be putting code into
the event handler for "connection is established".  Your example code
already defined behavior for this event, in fact - but you only put a
print statement into it.  Try expanding your `connectionMade´ method to
do the other things you want to happen at connection setup time.

Jean-Paul



From exarkun at divmod.com  Fri Apr 10 10:09:41 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 10 Apr 2009 12:09:41 -0400
Subject: [Twisted-Python] PBClientFactory and getRootObject
In-Reply-To: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>
Message-ID: <20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>

On Thu, 2 Apr 2009 23:31:12 +0200, Fabrizio Mancini <mr.file at gmail.com> wrote:
>Hi everyone,
>I'm writing a server and a client using Perspective Broker with no Avatar
>and no auth.
>The server accumulates some data using a DeferredQueue.
>The clients using a remote call retrieve one item per time from the queue
>and elaborates it making some changes on a database using adbapi.
>What i want to know is:
>1) how can i recursively call the remote method to retrieve the items from
>the server?
>2) can i defer the database operations to a thread so every client can
>elaborates multiple requests per time?

I don't really understand either of these questions.

> [snip code]
>
>To call recursively the remote object in function connect i call
>clientfactory.getRootObject() and addCallback() for the first time, and the
>i recall always self.clientfactory.getRootObject() and self.d.addCallback
>when the db query has completed.
>Is this correct?
>Do I have to always call self.clientfactory.getRootObject() every time i
>have to call a remote method?

You don't.  You only need to call it once per connection, to get the root
object.  Once you have the root object, you can simply keep a reference to
it and use it to make any number of remote calls you like.

>Can i deferToThread the function got_item or
>self.dbpool.runOperation(query)?

runOperation implies threading already, since DB-API 2.0 is blocking.  So
you should already have all the threading you need.

Jean-Paul



From powo at powo.priv.at  Fri Apr 10 10:16:59 2009
From: powo at powo.priv.at (Wolfgang Powisch (privat))
Date: Fri, 10 Apr 2009 18:16:59 +0200
Subject: [Twisted-Python] adbapi and long-running transactions
Message-ID: <49DF70FB.5050503@powo.priv.at>

Hi,

I'm using twisted.enterprise.adbapi for non-blocking database interaction with
a postgres database.

Currently I'm only using runQuery or runOperation for running single queries or
some own little helper methods "runQueries" or "runOperations" for running
multiple queries within one Transaction (using runInteraction).


What I need now is to start a Transaction and access this Transaction from
multiple callbacks within my application-code in the main-thread. In the last
callback (and/or errback) I will then either commit or rollback the transaction.

Any ideas how to acomplish that, didn't find a working solution yet.

The two options I tested are:

1.) running my code within the adbapi thread using runInteraction:
    -> this is really not what I want and will screw up my code

2.) create a transaction and pass it as an argument to a function called with
    connectionpool._deferToThread
    -> this doesn't work, because I seem to end up in the wrong thread and
       another (or no) transaction.



thx in advance for your help

regards, Wolfgang




From glyph at divmod.com  Fri Apr 10 10:37:05 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 10 Apr 2009 16:37:05 -0000
Subject: [Twisted-Python] RE: Question about Descriptors and SelectReactor
In-Reply-To: <20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>
References: <044c01c9b8bc$1b16a0c0$5143e240$@com>
	<20090410154420.24697.181565400.divmod.quotient.5780@henry.divmod.com>
Message-ID: <20090410163705.12555.1381989744.divmod.xquotient.7754@weber.divmod.com>

On 03:44 pm, exarkun at divmod.com wrote:
>On Wed, 8 Apr 2009 19:37:19 -0700, Alec Matusis <matusis at yahoo.com> 
>wrote:
>>>Longer answer: Looks like maybe you want to contribute a patch for 
>>>this
>>>ticket :)
>>>
>>>     http://twistedmatrix.com/trac/ticket/2234
>>
>>
>>I will look at this at some point (really swamped with work). But my 
>>question is: are you going to use python's select.epoll() that was 
>>introduced in python 2.6 and abandon the custom C module? In that 
>>case, the check of the default reactor would be trivial.
>
>The new epoll support in Python is partially based on our epoll 
>wrapper. ;)
>At some point, it is quite likely that we'll start trying to use it 
>(our
>customer wrapper is still required to support Python 2.5 and older, 
>though).

Also, there's an existing ticket for this too:

    http://twistedmatrix.com/trac/ticket/3114

I look forward to your patches, Alec ;-).



From gtaylor at clemson.edu  Fri Apr 10 11:10:28 2009
From: gtaylor at clemson.edu (Greg Taylor)
Date: Fri, 10 Apr 2009 13:10:28 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>
References: <8de369d70904082334m67cceadt7dc7cdba7c22cb68@mail.gmail.com>
	<20090410160634.24697.1697484587.divmod.quotient.5788@henry.divmod.com>
Message-ID: <8de369d70904101010q4b3c89a1i83d8872007325f6d@mail.gmail.com>

I guess what I'm getting confused about is how to get my listen server
(MUD server) talking to this IMC client connection. Let's say one of
my player wants to send a message over the IMC (client) connection.
This is done by telnetting into the MUD server and entering a command
like: imcmessage "hello". So I've got a reactor serving up my MUD
server process, and I'm not sure how this IMC client plugs in.

I guess I need to create some kind of queue that the IMC
ConnectionMade checks periodically and executes if I can't directly
get the MUD server talking to the IMCProtocol object.

Also, do I need to do anything special to prevent blocking?

Do I use two separate reactors or should the IMC connection be using
the same reactor or process group as the MUD server (listen server)?

Thanks for your help. I'm sure this will be really simple to do once I
figure out how to do this.

Greg

On Fri, Apr 10, 2009 at 12:06 PM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Thu, 9 Apr 2009 02:34:23 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>>
>> Hello all,
>>
>> I'm still pretty new with Twisted, so the documentation is a little
>> bit cryptic and strange to wade through. I'm writing a MUD server that
>> I'd like to add InterMUD Protocol (IMC) to. This basically allows any
>> of the games running the MUD server to connect to an IMC server that
>> lets players from other games talk to one another. I'm thinking I'll
>> create another thread and run the IMC client from there so as to not
>> block the main server thread.
>
> Threading generally isn't the way to do networking with Twisted.  In fact,
> Twisted is almost wholly geared toward avoiding exactly that.
>
>> From your example, it appears as though you've figured out how to do basic
>
> client setup.  What you're missing is how to use the connection once it
> is established.  You need to be thinking of your program in terms of events.
>
>> [snip]
>>
>> I've seen mention of something like:
>> p = reactor.buildProtocol()
>> p.sendLine('blah\n')
>
> You can't really do this.  Instead, it seems that since you want to send
> a line once the connection is established, you should be putting code into
> the event handler for "connection is established".  Your example code
> already defined behavior for this event, in fact - but you only put a
> print statement into it.  Try expanding your `connectionMade´ method to
> do the other things you want to happen at connection setup time.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Greg Taylor
Clemson University, Class of 2009
Cell: (864) 888-7964
http://gc-taylor.com



From eyork at apple.com  Fri Apr 10 11:16:06 2009
From: eyork at apple.com (Eric York)
Date: Fri, 10 Apr 2009 10:16:06 -0700
Subject: [Twisted-Python] Fork/Spawn children to accept connections on the
	same port. 
In-Reply-To: <E1LsJ9A-0003dt-Rw@cube.twistedmatrix.com>
References: <E1LsJ9A-0003dt-Rw@cube.twistedmatrix.com>
Message-ID: <F921B017-B83B-474A-BFBF-2C9EE80580C4@apple.com>


>
> From: Jean-Paul Calderone <exarkun at divmod.com>
> Date: April 10, 2009 8:57:19 AM PDT
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Fork/Spawn children to accept  
> connections on the same port.
> Reply-To: Twisted general discussion <twisted- 
> python at twistedmatrix.com>
>
>
> On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>> I am trying to get the highest level of performance using all of  
>> the processors cores on a server.
>>
>> In the past, a unix app would bind/listen to a socket and then fork  
>> or spawn children to accept connections on that socket. I can’t see  
>> how  to do that in Twisted. Can someone point me in the right  
>> direction?
>>
>> The solution of using a single process to accept connections and  
>> then  farm out work to child processes, while a workable solution,  
>> isn’t at  the same level of performance as children processes that  
>> are doing  their own accepts.

> It's also possible to bind a port in one process and then send it
> over a UNIX socket to another process; this comes closer to the bind/ 
> fork
> approach, but accomplishes the resource sharing explicitly via fd  
> passing
> rather than through fork.


This is the path that I would like to follow. I can see how to spawn a  
child process and pass the fd in Twisted. What I can't see how to do  
in Twisted is to have a parent process just bind and listen to a  
socket and have a child process accept on that socket. In twisted/ 
internet/tcp.py in the class Port, there is a function startListening  
which does bind/listen/startReading all in this one function. It seems  
that a small refactoring would allow the parent to bind and a child to  
do startReading, if the call to startReading was moved out of  
startListening. The reactor calls would also need a small refactoring  
to allow this type of setup. How does that sound?

Eric

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090410/39d4dbe4/attachment.html>

From powo at powo.priv.at  Fri Apr 10 12:06:28 2009
From: powo at powo.priv.at (Wolfgang Powisch (privat))
Date: Fri, 10 Apr 2009 20:06:28 +0200
Subject: [Twisted-Python] adbapi and long-running transactions
In-Reply-To: <49DF70FB.5050503@powo.priv.at>
References: <49DF70FB.5050503@powo.priv.at>
Message-ID: <49DF8AA4.1060406@powo.priv.at>

Am 10.04.2009 18:16, Wolfgang Powisch (privat) schrieb:
> What I need now is to start a Transaction and access this Transaction from
> multiple callbacks within my application-code in the main-thread. In the last
> callback (and/or errback) I will then either commit or rollback the transaction.

Even found something on that:

http://twistedmatrix.com/trac/ticket/303
and a thread on the mailinglist from December 2003

Is anyone using Bill Gribble's patch, or further improved it ?





From mr.file at gmail.com  Fri Apr 10 15:04:48 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Fri, 10 Apr 2009 23:04:48 +0200
Subject: [Twisted-Python] PBClientFactory and getRootObject
In-Reply-To: <20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>
References: <793463d60904021431h4bca71c6p42ecc00bb214412f@mail.gmail.com>
	<20090410160941.24697.466786248.divmod.quotient.5790@henry.divmod.com>
Message-ID: <793463d60904101404h2f644a26yf78f015172148589@mail.gmail.com>

On Fri, Apr 10, 2009 at 6:09 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> I don't really understand either of these questions.
>

Hi JP,
and thank you for your reply.
Don't worry if you didn't understand the question, i just didn't understand
deeply how deferred worked.
I just needed to chain different deferreds after the result of the first
deferred arrives.
I'm really new to write twisted code! :-)
Now that i've understood it it's all right.
Thank you
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090410/f73d5db9/attachment.html>

From luper.rouch at gmail.com  Fri Apr 10 16:24:37 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 00:24:37 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
Message-ID: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>

I would like to port my Application API based services to the twistd
plugin interface, to be able to retrieve command line options.

In the existing services, I reimplemented t.a.s.MultiService
startService() and stopService() to do some actions at startup and
shutdown.

How can I do this in a plugin ?

--
Lup



From exarkun at divmod.com  Sat Apr 11 09:17:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:17:46 -0400
Subject: [Twisted-Python] Fork/Spawn children to accept connections on
	the same port. 
In-Reply-To: <F921B017-B83B-474A-BFBF-2C9EE80580C4@apple.com>
Message-ID: <20090411151746.24697.428522480.divmod.quotient.6019@henry.divmod.com>

On Fri, 10 Apr 2009 10:16:06 -0700, Eric York <eyork at apple.com> wrote:
>
>>
>>From: Jean-Paul Calderone <exarkun at divmod.com>
>>Date: April 10, 2009 8:57:19 AM PDT
>>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>Subject: Re: [Twisted-Python] Fork/Spawn children to accept  connections on 
>>the same port.
>>Reply-To: Twisted general discussion <twisted- python at twistedmatrix.com>
>>
>>
>>On Mon, 6 Apr 2009 15:25:39 -0700, Eric York <eyork at apple.com> wrote:
>>>I am trying to get the highest level of performance using all of  the 
>>>processors cores on a server.
>>>
>>>In the past, a unix app would bind/listen to a socket and then fork  or 
>>>spawn children to accept connections on that socket. I can’t see  how  to 
>>>do that in Twisted. Can someone point me in the right  direction?
>>>
>>>The solution of using a single process to accept connections and  then 
>>>farm out work to child processes, while a workable solution,  isn’t at 
>>>the same level of performance as children processes that  are doing  their 
>>>own accepts.
>
>>It's also possible to bind a port in one process and then send it
>>over a UNIX socket to another process; this comes closer to the bind/ fork
>>approach, but accomplishes the resource sharing explicitly via fd  passing
>>rather than through fork.
>
>
>This is the path that I would like to follow. I can see how to spawn a 
>child process and pass the fd in Twisted. What I can't see how to do  in 
>Twisted is to have a parent process just bind and listen to a  socket and 
>have a child process accept on that socket. In twisted/ internet/tcp.py in 
>the class Port, there is a function startListening  which does 
>bind/listen/startReading all in this one function. It seems  that a small 
>refactoring would allow the parent to bind and a child to  do startReading, 
>if the call to startReading was moved out of  startListening. The reactor 
>calls would also need a small refactoring  to allow this type of setup. How 
>does that sound?

The main problem that comes up with this approach is that little, or possibly
none, of Twisted is written to be fork-safe.  As with most programs, though,
this is /usually/ not a problem.  However, there are some areas where it can
be.  For example, if you use epoll reactor, the internal epoll file descriptor
may end up shared between the two processes.  This results in weird behavior
like thread wakeup messages in one process waking up the reactor thread in
the other process.  It's probably possible to fix all the problems like this,
but rather than try, I'd just not try forking a Twisted process without using
exec in one of the resulting processes shortly afterwards.

If you create a port in one process, you can just grab its fileno and pass
that to another process.  Then you can create a new Port object with that
fileno.  This may involve subclassing Port and overriding
createInternetSocket to just return the fileno you have already.  These APIs
aren't really intended for direct use by applications, but there's not really
another way to do what you want right now.  You may want to help us work out
a better API for creating Ports and such from pre-existing sockets if you go
this route so that there's less chance of some deep-down implementation
change disturbing your app.

Jean-Paul



From exarkun at divmod.com  Sat Apr 11 09:20:25 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:20:25 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
Message-ID: <20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>

On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com> wrote:
>I would like to port my Application API based services to the twistd
>plugin interface, to be able to retrieve command line options.
>
>In the existing services, I reimplemented t.a.s.MultiService
>startService() and stopService() to do some actions at startup and
>shutdown.
>
>How can I do this in a plugin ?
>

The top-level API for plugins is mostly a function that returns an IService
provider.  So if you have your own version of MultiService, you can just
return an instance of that, just like the one you were creating in your .tac
file, from a makeService function which is registered as a plugin of the
suitable type.

Jean-Paul



From exarkun at divmod.com  Sat Apr 11 09:21:28 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 11:21:28 -0400
Subject: [Twisted-Python] Two-way telnet client problem
In-Reply-To: <8de369d70904101010q4b3c89a1i83d8872007325f6d@mail.gmail.com>
Message-ID: <20090411152128.24697.1488645969.divmod.quotient.6021@henry.divmod.com>

On Fri, 10 Apr 2009 13:10:28 -0400, Greg Taylor <gtaylor at clemson.edu> wrote:
>I guess what I'm getting confused about is how to get my listen server
>(MUD server) talking to this IMC client connection. Let's say one of
>my player wants to send a message over the IMC (client) connection.
>This is done by telnetting into the MUD server and entering a command
>like: imcmessage "hello". So I've got a reactor serving up my MUD
>server process, and I'm not sure how this IMC client plugs in.

This sounds a lot like this FAQ:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

>
>I guess I need to create some kind of queue that the IMC
>ConnectionMade checks periodically and executes if I can't directly
>get the MUD server talking to the IMCProtocol object.

Fortunately, you can make them talk directly. :)  No need for a queue.

>Also, do I need to do anything special to prevent blocking?

As long as you're using Twisted APIs for dealing with the networking,
no - those won't block.

>Do I use two separate reactors or should the IMC connection be using
>the same reactor or process group as the MUD server (listen server)?

There's always exactly one reactor in a Twisted app.

>Thanks for your help. I'm sure this will be really simple to do once I
>figure out how to do this.

Hope this helps,

Jean-Paul



From luper.rouch at gmail.com  Sat Apr 11 11:29:28 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 19:29:28 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
References: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
	<20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
Message-ID: <4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>

2009/4/11 Jean-Paul Calderone <exarkun at divmod.com>:
> On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com>
> wrote:
>>
>> I would like to port my Application API based services to the twistd
>> plugin interface, to be able to retrieve command line options.
>>
>> In the existing services, I reimplemented t.a.s.MultiService
>> startService() and stopService() to do some actions at startup and
>> shutdown.
>>
>> How can I do this in a plugin ?
>>
>
> The top-level API for plugins is mostly a function that returns an IService
> provider.  So if you have your own version of MultiService, you can just
> return an instance of that, just like the one you were creating in your .tac
> file, from a makeService function which is registered as a plugin of the
> suitable type.
>
Thanks I didn't think it was so simple !

I have a last question, I put my plugins in a 'twisted/plugins'
subfolder of my project, and running them from the command line works
fine. How can I invoke them in unit tests (I need to be able to start
and stop them), since the plugin files are not in a package ?



From exarkun at divmod.com  Sat Apr 11 11:42:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 13:42:31 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>
Message-ID: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>

On Sat, 11 Apr 2009 19:29:28 +0200, luper rouch <luper.rouch at gmail.com> wrote:
>2009/4/11 Jean-Paul Calderone <exarkun at divmod.com>:
>> On Sat, 11 Apr 2009 00:24:37 +0200, luper rouch <luper.rouch at gmail.com>
>> wrote:
>>>
>>> I would like to port my Application API based services to the twistd
>>> plugin interface, to be able to retrieve command line options.
>>>
>>> In the existing services, I reimplemented t.a.s.MultiService
>>> startService() and stopService() to do some actions at startup and
>>> shutdown.
>>>
>>> How can I do this in a plugin ?
>>>
>>
>> The top-level API for plugins is mostly a function that returns an IService
>> provider.  So if you have your own version of MultiService, you can just
>> return an instance of that, just like the one you were creating in your .tac
>> file, from a makeService function which is registered as a plugin of the
>> suitable type.
>>
>Thanks I didn't think it was so simple !
>
>I have a last question, I put my plugins in a 'twisted/plugins'
>subfolder of my project, and running them from the command line works
>fine. How can I invoke them in unit tests (I need to be able to start
>and stop them), since the plugin files are not in a package ?

They can be imported from "twisted.plugins".  For example, if you name your
"dropin" file foo_plugins.py, then "from twisted.plugins import foo_plugins"
should work and let you test any code that is part of your plugin definitions.
Note that you should try to keep the amount of code and dependencies in a
dropin file to a minimum, since this must all be loaded and executed whenever
a search for any plugin is performed.

Jean-Paul



From terry at jon.es  Sat Apr 11 11:48:38 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 11 Apr 2009 19:48:38 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: Your message at 19:29:28 on Saturday, 11 April 2009
References: <4e0636f40904101524t18bb6cd9se51b8f1c9286615f@mail.gmail.com>
	<20090411152025.24697.1593106064.divmod.quotient.6020@henry.divmod.com>
	<4e0636f40904111029y7b6b3fa1g691769ae4377e846@mail.gmail.com>
Message-ID: <18912.55286.870158.381484@jon.es>

Hi Luper

>>>>> "luper" == luper rouch <luper.rouch at gmail.com> writes:

luper> I have a last question, I put my plugins in a 'twisted/plugins'
luper> subfolder of my project, and running them from the command line
luper> works fine. How can I invoke them in unit tests (I need to be able
luper> to start and stop them), since the plugin files are not in a
luper> package?

I suspect some will answer "Uh, you probably shouldn't be doing that"...

But something like this will work:

    from twisted.plugin import getPlugins
    from twisted.application.service import IServiceMaker

    def getPlugin(name):
        for plugin in getPlugins(IServiceMaker):
            if hasattr(plugin, 'tapname'):
                if plugin.tapname == name:
                    return plugin
        return None

Terry



From esteve at sindominio.net  Sat Apr 11 13:54:08 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sat, 11 Apr 2009 21:54:08 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
References: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
Message-ID: <200904112154.08757.esteve@sindominio.net>

On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
> They can be imported from "twisted.plugins".  For example, if you name your
> "dropin" file foo_plugins.py, then "from twisted.plugins import
> foo_plugins" should work and let you test any code that is part of your
> plugin definitions. Note that you should try to keep the amount of code and
> dependencies in a dropin file to a minimum, since this must all be loaded
> and executed whenever a search for any plugin is performed.

Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and 
twisted/plugins must not have __init__.py files in order for the plugin 
system to be able to find them (through getPlugins). Or did that behavior 
change in recent versions?

Cheers.



From exarkun at divmod.com  Sat Apr 11 14:39:32 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Apr 2009 16:39:32 -0400
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <200904112154.08757.esteve@sindominio.net>
Message-ID: <20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>

On Sat, 11 Apr 2009 21:54:08 +0200, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
>> They can be imported from "twisted.plugins".  For example, if you name your
>> "dropin" file foo_plugins.py, then "from twisted.plugins import
>> foo_plugins" should work and let you test any code that is part of your
>> plugin definitions. Note that you should try to keep the amount of code and
>> dependencies in a dropin file to a minimum, since this must all be loaded
>> and executed whenever a search for any plugin is performed.
>
>Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and
>twisted/plugins must not have __init__.py files in order for the plugin
>system to be able to find them (through getPlugins). Or did that behavior
>change in recent versions?

They must not have __init__.py files, indeed.  However, the files in
twisted/plugins/ still define sub-modules of the twisted.plugins package
due to the code in Twisted's twisted/plugins/__init__.py.

Jean-Paul



From esteve at sindominio.net  Sat Apr 11 14:41:35 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sat, 11 Apr 2009 22:41:35 +0200
Subject: [Twisted-Python] adapt from more than one interface
Message-ID: <200904112241.36178.esteve@sindominio.net>

Hi all. I have a bunch of services, which implement a set of interfaces, and I 
use a bunch of adapters to turn them into factories, making those services 
protocol-independent.

The interface/adapter stuff works great and I'm able to expose those services 
to several protocols, without changing a single line in them. However, some 
of the protocols need some extra information to be passed, so I have to do 
this:

factory = IFooFactory(myService)
factory.bar = "some value"

it works, but I'd rather use this:

factory = IFooFactory(myService, configurationObject)

which would take a second argument, an object implementing another interface 
(e.g. IConfigurationDescriptor), containing all the necessary information for 
that adapter. I don't want to put that information in the service, as it's 
only useful to the protocol and would tie the service to a particular 
protocol.

In order to implement this, registerAdapter would have to be able to take a 
tuple of interfaces, like this:

components.registerAdapter(
    AdaptToFactory,
    (IFooService, IConfigurationDescriptor),
    IFooFactory)

would that feature make sense? If so, I'll file an issue right now :-)

Cheers.



From luper.rouch at gmail.com  Sat Apr 11 14:43:36 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Sat, 11 Apr 2009 22:43:36 +0200
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <200904112154.08757.esteve@sindominio.net>
References: <20090411174231.24697.160861307.divmod.quotient.6043@henry.divmod.com>
	<200904112154.08757.esteve@sindominio.net>
Message-ID: <4e0636f40904111343u194a86b7xff25047a074efaa3@mail.gmail.com>

2009/4/11 Esteve Fernandez <esteve at sindominio.net>:
> On Saturday 11 April 2009 19:42:31 Jean-Paul Calderone wrote:
>> They can be imported from "twisted.plugins".  For example, if you name your
>> "dropin" file foo_plugins.py, then "from twisted.plugins import
>> foo_plugins" should work and let you test any code that is part of your
>> plugin definitions. Note that you should try to keep the amount of code and
>> dependencies in a dropin file to a minimum, since this must all be loaded
>> and executed whenever a search for any plugin is performed.
>
> Shouldn't twisted and twisted/plugins be non-importable? I thought twisted and
> twisted/plugins must not have __init__.py files in order for the plugin
> system to be able to find them (through getPlugins). Or did that behavior
> change in recent versions?
>
> Cheers.

It's working on 8.2.0 release, I have been able to port all my tests
to the plugins API (they even seem less hackish now...)

Thanks !



From terry at jon.es  Sat Apr 11 16:55:27 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 12 Apr 2009 00:55:27 +0200
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access to
	the deferred their wrapper will return
Message-ID: <18913.8159.929889.783594@jon.es>

This will probably fall into the too-weird or too-infrequent to be worth
implementing category, but I think it's worth mentioning. (BTW, none of the
following code has been run.)

When you write a normal function that returns a deferred, it (of course)
has access to the deferred it's going to return:

    def func():
        d = defer.Deferred()
        d.addCallback(...).addErrback(...)
        callSomethingElse(d)
        return d

Apart from operating on the deferred itself, func can pass the deferred to
some other function that might add more callbacks (as in the call to
callSomethingElse). That's all very nice and convenient.

But if I write this:

    @defer.inlineCallbacks
    def func():
        # do some stuff to calculate a result.
        defer.returnValue(result)

func never has its hands on the deferred that will be returned (by
_inlineCallbacks) to the caller of its wrapper.

I can get around this in ways that are less elegant:

    @defer.inlineCallbacks
    def func():
        # do some stuff
        d = defer.Deferred()
        callSomethingElse(d)
        d.callback(result)
        newResult = yield d
        defer.returnValue(newResult)

But I don't really like doing it that way: it's a slightly different coding
style, it's much more manual, the above is just one simple example - actual
usage could be more involved, and it doesn't feel as natural as the kind of
code I can write when I'm not using inlineCallbacks.

A way around this (which maybe will generate howls of protest) would be to
have _inlineCallbacks do something this:

    def unwindGenerator(*args, **kwargs):
        assert '_inlineCallbacksDeferred' not in kwargs
        d = Deferred()
        return _inlineCallbacks(None, f(*args, **kwargs, _inlineCallbacksDeferred=d), d)
    return mergeFunctionMetadata(f, unwindGenerator)

While I don't like this implementation much, it does manage to simply put
the deferred that _inlineCallbacks will eventually return, into the hands
of f (i.e., func above).  func can then pass the deferred around, add
callbacks to it etc. exactly as a normal (non-inlineCallbacks) function would.

Maybe there's a cleaner way to implement this?

I ran into this asymmetry today, when I wanted a function to pass its
deferred off to another function but realized that because mine was an
inlineCallbacks-decorated function I couldn't do it in the same way I would
otherwise.

Comments?

Terry



From glyph at divmod.com  Sat Apr 11 18:23:14 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:23:14 -0000
Subject: [Twisted-Python] Plugin startup and shutdown actions
In-Reply-To: <20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>
References: <200904112154.08757.esteve@sindominio.net>
	<20090411203932.24697.1003387455.divmod.quotient.6083@henry.divmod.com>
Message-ID: <20090412002314.12555.1522674597.divmod.xquotient.7807@weber.divmod.com>


On 11 Apr, 08:39 pm, exarkun at divmod.com wrote:
>On Sat, 11 Apr 2009 21:54:08 +0200, Esteve Fernandez 
><esteve at sindominio.net> wrote:

>>Shouldn't twisted and twisted/plugins be non-importable? I thought 
>>twisted and
>>twisted/plugins must not have __init__.py files in order for the 
>>plugin
>>system to be able to find them (through getPlugins). Or did that 
>>behavior
>>change in recent versions?
>
>They must not have __init__.py files, indeed.  However, the files in
>twisted/plugins/ still define sub-modules of the twisted.plugins 
>package
>due to the code in Twisted's twisted/plugins/__init__.py.

They must not have __init__.py files specifically to avoid *conflicting* 
with this Twisted's twisted/plugins/__init__.py.  Since the idea is 
that, during installation, your foo_plugin.py will go into the site's 
twisted/plugins directory, we forbid projects to make twisted/plugins a 
package because otherwise one package would stomp over the other's 
__init__.py and break things.



From glyph at divmod.com  Sat Apr 11 18:31:29 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:31:29 -0000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904112241.36178.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
Message-ID: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>


On 11 Apr, 08:41 pm, esteve at sindominio.net wrote:
>factory = IFooFactory(myService)
>factory.bar = "some value"
>
>it works, but I'd rather use this:
>
>factory = IFooFactory(myService, configurationObject)

This is a long and terrible road you're about to start down.  It's hard 
for me to explain exactly why it's so painful, but trust me, it is.

What you're doing now, passing out-of-band arguments to the IFooFactory 
adapter, whose concrete type you are *not supposed to know* at that 
point in the control flow, is bad.  But trying to force adaptation to 
become full-fledged multimethods is worse.  If you want multimethods, I 
believe PEAK provides a package that implements them.

If you want to keep doing what you're doing, you should do this:

factory = MyServiceFooFactory(myService)
factory.configureBar("some value")

i.e. don't ask for an adaptation which might give you an object without 
a "bar" attribute, just create the concrete type that does what you need 
based on the type of myService and configure it with explicitly 
documented methods.  Although if I misunderstand the spec of 
"IFooFactory" and it *does* include a bar attribute, nevermind.

If you want something more magical and adapter-ish, them maybe you want 
this:

IFooFactory(ConfigurationObject(myService, bar="some value"))

i.e. by the time you are getting around to the IFooFactory adaptation, 
you should have an object that fully provides enough information that 
the concrete FooFactory adapter type can be fully initialized when it is 
created.
>In order to implement this, registerAdapter would have to be able to 
>take a
>tuple of interfaces, like this:
>
>components.registerAdapter(
>    AdaptToFactory,
>    (IFooService, IConfigurationDescriptor),
>    IFooFactory)
>
>would that feature make sense? If so, I'll file an issue right now :-)

Unfortunately, much as I've been encouraging people to file tickets 
lately, no :).  I don't think it makes sense.



From jml at mumak.net  Sat Apr 11 18:22:08 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Apr 2009 10:22:08 +1000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
Message-ID: <d06a5cd30904111722w7f21a28dtf84737df96ef6165@mail.gmail.com>

On Sun, Apr 12, 2009 at 10:31 AM,  <glyph at divmod.com> wrote:
>
> On 11 Apr, 08:41 pm, esteve at sindominio.net wrote:
>>
>> factory = IFooFactory(myService)
>> factory.bar = "some value"
>>
>> it works, but I'd rather use this:
>>
>> factory = IFooFactory(myService, configurationObject)
>
> This is a long and terrible road you're about to start down.  It's hard for
> me to explain exactly why it's so painful, but trust me, it is.
>
> What you're doing now, passing out-of-band arguments to the IFooFactory
> adapter, whose concrete type you are *not supposed to know* at that point in
> the control flow, is bad.  But trying to force adaptation to become
> full-fledged multimethods is worse.  If you want multimethods, I believe
> PEAK provides a package that implements them.
>

Also, Zope has getMultiAdapter(). The canonical example is adapting a
model object and a request object to a view object.

I don't think it's as bad as glyph says. I probably wouldn't use it in
the case you describe -- calling methods on objects is almost always
better.

jml



From glyph at divmod.com  Sat Apr 11 18:40:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 00:40:11 -0000
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access
	to the deferred their wrapper will return
In-Reply-To: <18913.8159.929889.783594@jon.es>
References: <18913.8159.929889.783594@jon.es>
Message-ID: <20090412004011.12555.477762120.divmod.xquotient.7830@weber.divmod.com>


On 11 Apr, 10:55 pm, terry at jon.es wrote:
>I can get around this in ways that are less elegant:
>
>    @defer.inlineCallbacks
>    def func():
>        # do some stuff
>        d = defer.Deferred()
>        callSomethingElse(d)
>        d.callback(result)
>        newResult = yield d
>        defer.returnValue(newResult)

When I write functions that take a Deferred I typically have them return 
a Deferred as well, to avoid this, and other syntactic nuisances.  Would 
you consider the following more elegant?

    @inlineCallbacks
    def func():
        # do some stuff
        returnValue(yield callSomethingElse(succeed(result)))



From exarkun at twistedmatrix.com  Sat Apr 11 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Apr 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1239509113.45.1659241418@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090412/af00ad13/attachment.html>

From esteve at sindominio.net  Sun Apr 12 03:08:23 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 12 Apr 2009 11:08:23 +0200
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
Message-ID: <200904121108.23622.esteve@sindominio.net>

Hi

On Sunday 12 April 2009 02:31:29 glyph at divmod.com wrote:
> This is a long and terrible road you're about to start down.  It's hard
> for me to explain exactly why it's so painful, but trust me, it is.

No, I won't trust you :-) I hope you don't take what I'm going to say too 
seriously, but you couldn't sound more patronising.

Anyway, if it's so hard to explain, it's probably harder to understand, and 
thus, it's something that you cannot figure out by yourself. So, if you don't 
mind, why do you think it's so bad?

> What you're doing now, passing out-of-band arguments to the IFooFactory
> adapter, whose concrete type you are *not supposed to know* at that
> point in the control flow, is bad.  But trying to force adaptation to
> become full-fledged multimethods is worse.  If you want multimethods, I
> believe PEAK provides a package that implements them.

I know it's bad, because the resulting factory is incomplete, but that's why I 
wanted to adapt from two objects: the service itself and something that would 
make the factory complete (i.e. some configuration parameters required by 
protocols).

The main problem I see with the current adapter registry, is that adapters 
aren't configurable. In our case, we have a bunch of services, which are 
exposed to AMQP (adapted into a factory that builds instances of the AMQP 
protocol class), but since this is a client protocol that needs some extra 
arguments that can't be set beforehand in the adapter (username, password, 
vhost, encoding), they are passed after the service has been adapted into a 
factory.

So the problem is that the resulting factory is not complete, it doesn't have 
enough information to build protocols. The only workaround is to explicitly 
set those extra parameters after it has been instantiated.

> If you want to keep doing what you're doing, you should do this:
>
> factory = MyServiceFooFactory(myService)
> factory.configureBar("some value")
>
> i.e. don't ask for an adaptation which might give you an object without
> a "bar" attribute, just create the concrete type that does what you need
> based on the type of myService and configure it with explicitly
> documented methods.  Although if I misunderstand the spec of
> "IFooFactory" and it *does* include a bar attribute, nevermind.

The IFooFactory interface declares that attribute, but it's not immediately 
available when the service is adapted into a factory.

I fail to see what's the difference between bar= and configureBar() in this 
particular case. Interface attributes can be documented, so I don't see what 
makes configureBar better than bar (which can be turned into a property). 
Anyway, I think both solutions are flaky, so that's why I thought adapting 
two interfaces would be more elegant.

> If you want something more magical and adapter-ish, them maybe you want
> this:
>
> IFooFactory(ConfigurationObject(myService, bar="some value"))
>
> i.e. by the time you are getting around to the IFooFactory adaptation,
> you should have an object that fully provides enough information that
> the concrete FooFactory adapter type can be fully initialized when it is
> created.

I think that solution is even worse. That particular instance of 
ConfigurationObject is tied to myService: it can't be (de)serialized, reused 
with other adapters, ConfigurationObject and MyService are completely 
unrelated and I don't think the former should depend on the latter.

> >In order to implement this, registerAdapter would have to be able to
> >take a
> >tuple of interfaces, like this:
> >
> >components.registerAdapter(
> >    AdaptToFactory,
> >    (IFooService, IConfigurationDescriptor),
> >    IFooFactory)
> >
> >would that feature make sense? If so, I'll file an issue right now :-)
>
> Unfortunately, much as I've been encouraging people to file tickets
> lately, no :).  I don't think it makes sense.

I still think it does, but nobody wants to make the ticket count grow 
higher :-) Anyway, Zope already has this nifty thing called multi-adapters, 
which implement exactly what I described:

http://www.muthukadan.net/docs/zca.html#multi-adapter

but I always liked Twisted's adapter registry better and our application 
already uses it in quite a few places. I like being able to call IFoo(bar) 
and let the registry lookup an adapter automatically, instead of having to 
call getAdapter()/queryAdapter()

Cheers.



From terry at jon.es  Sun Apr 12 05:52:17 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 12 Apr 2009 13:52:17 +0200
Subject: [Twisted-Python] Giving inlineCallbacks-wrapped functions access
	to the deferred their wrapper will return
In-Reply-To: Your message at 00:40:11 on Sunday, 12 April 2009
References: <18913.8159.929889.783594@jon.es>
	<20090412004011.12555.477762120.divmod.xquotient.7830@weber.divmod.com>
Message-ID: <18913.54769.71786.416613@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> When I write functions that take a Deferred I typically have them
glyph> return a Deferred as well, to avoid this, and other syntactic
glyph> nuisances.  Would you consider the following more elegant?

Yes. And thanks for the rule of thumb.


In any case, I realized that my original idea wont work. _inlineCallbacks
returns the deferred to the caller of the wrapped function early. The
caller could add callbacks to it before the wrapped function does, which
makes the whole idea unworkable.

Terry



From glyph at divmod.com  Sun Apr 12 07:16:04 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 12 Apr 2009 13:16:04 -0000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904121108.23622.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
	<200904121108.23622.esteve@sindominio.net>
Message-ID: <20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>


On 09:08 am, esteve at sindominio.net wrote:
>On Sunday 12 April 2009 02:31:29 glyph at divmod.com wrote:
>>This is a long and terrible road you're about to start down.  It's 
>>hard
>>for me to explain exactly why it's so painful, but trust me, it is.
>
>No, I won't trust you :-) I hope you don't take what I'm going to say 
>too
>seriously, but you couldn't sound more patronising.

Sorry for that; it certainly wasn't my intention.  I meant just what I 
said: I find it difficult to communicate about.  Perhaps I should have 
said, "trust me, my experience suggests that it is".
>Anyway, if it's so hard to explain, it's probably harder to understand, 
>and
>thus, it's something that you cannot figure out by yourself. So, if you 
>don't
>mind, why do you think it's so bad?

It's hard to explain because it's hard to describe a full use-case.  My 
experiences with adapter registries are diffuse, so I can't put it all 
together into one nice concrete example; just a bunch of places where I 
thought maybe I wanted multi-adaptation, started in that direction, and 
then realized that I actually wanted something else when it made a mess. 
A concrete description of one of these use-cases would probably end up 
talking more about email or templating than about interfaces.

Abstract examples tend to proliferate metasyntactic variables, so it's 
not clear what the relationships are of all the entities.  In fact, it 
may be that I'm not understanding *your* use-case because "IFooFactory" 
isn't a particularly expository name :).  But let me give it a go.

Multi-adapters are problematic because they specify a collection of 
objects, but they don't specify the relationship between those objects. 
When you adapt a model/request pair to a view in Zope, how do you know 
which one's the model and which one's the request?  If multiadapt(IFoo, 
(a, b)) works, should multiadapt(IFoo, (b, a))?  If not, why not?  If 
so, why so?  Is the position of the parameters significant?  Does it 
imply something about the role that each component plays to its adapter? 
What about multiadapt(IFoo, (b, b, a))?  I know that zope.interface has 
answers to all these questions (and indeed, in most cases I think I know 
what those answers are) but they're very hard to figure out from first 
principles; they're kind of arbitrary, whereas other edge-case rules in 
z.i, for example, the resolution order of adapters in inheritance 
relationships make perfect sense to me.

Maybe if you use zope.component it works out.  I don't have much 
experience with it, but I do know that it gives you a lot more options 
in terms of managing what adapters get used when, and by whom.  Adapters 
also have names, which gives you another level of disambiguation.

But in the context of Twisted's adapter registry, you just have one 
global registry.  When you're using this for f(x)->y type relationships, 
it provides a reasonable way for one system to hook into another, 
because system X can receive a bar when it only knows about foos, and 
say IFoo(bar) and that works because of an adapter registered by the 
system that declared bar.  But when you start putting additional 
arguments in there, it's not clear how those different systems will 
handle them.

For example, if you want a system that accepts "configuration", you can 
register an adapter from a foo, username, and password, to produce a 
bar.  i.e. (IFoo, str, str) -> IBar.  Later, what if we want an adapter 
from a foo, hostname and path?  (IFoo, str, str) is already taken.

But, if you do this by explicitly declaring an intermediate interface, 
it's much clearer.  IBarFactory(foo).configureUsernamePassword(username, 
password)->Bar makes the placement of the responsibility very clear; 
later, you could add IBarFactory(bar).configureHostnamePath(hostname, 
path)->Bar.

And this is why the explanation of its wrong-ness is difficult.  I know 
that you could get the same effect by doing (IFoo, IUsernamePassword) -> 
IBar and (IFoo, IHostnamePath).
>So the problem is that the resulting factory is not complete, it 
>doesn't have
>enough information to build protocols. The only workaround is to 
>explicitly
>set those extra parameters after it has been instantiated.

Would the specifics of your application allow you to introduce an 
intermediary IProtocolFactoryConfigurer interface, with .config* methods 
that would return the actual ProtocolFactory, as with my IBarFactory 
above?  "IBar" here would be IProtocolFactory; sorry for the confusion 
with the word "factory".
>>Although if I misunderstand the spec of
>>"IFooFactory" and it *does* include a bar attribute, nevermind.
>
>The IFooFactory interface declares that attribute, but it's not 
>immediately
>available when the service is adapted into a factory.
>
>I fail to see what's the difference between bar= and configureBar() in 
>this
>particular case.

Yeah, when I said "[if] it *does* include a bar attribute, nevermind", 
that's what I meant; I misunderstood and thought that the attribute was 
part of a different interface or concrete type.  Again, If 
.configureBar() *returns* a protocol factory, then maybe it's better.
>>If you want something more magical and adapter-ish, them maybe you 
>>want
>>this:
>>
>>IFooFactory(ConfigurationObject(myService, bar="some value"))

>I think that solution is even worse. That particular instance of
>ConfigurationObject is tied to myService: it can't be (de)serialized, 
>reused
>with other adapters, ConfigurationObject and MyService are completely
>unrelated and I don't think the former should depend on the latter.

So ConfigurationObject is purely for the IFooFactory implementation?
>> >In order to implement this, registerAdapter would have to be able to
>> >take a
>> >tuple of interfaces,
(...)
>> >would that feature make sense? If so, I'll file an issue right now 
>>:-)
>>
>>Unfortunately, much as I've been encouraging people to file tickets
>>lately, no :).  I don't think it makes sense.
>
>I still think it does, but nobody wants to make the ticket count grow
>higher :-) Anyway, Zope already has this nifty thing called multi- 
>adapters,
>which implement exactly what I described:
>
>http://www.muthukadan.net/docs/zca.html#multi-adapter

Thanks for that link, by the way, that's a great introduction to 
zope.component.  Not one I'd seen before.
>but I always liked Twisted's adapter registry better and our 
>application
>already uses it in quite a few places. I like being able to call 
>IFoo(bar)
>and let the registry lookup an adapter automatically, instead of having 
>to
>call getAdapter()/queryAdapter()

You'd still have to call something like getAdapter or queryAdapter in 
order to use multi-adapters with Twisted's registry.  IFoo((a, b, c)) 
will adapt from "tuple" to IFoo, and it would be ambiguous to change it 
to work otherwise - a number of existing systems do register adapters 
for tuples.  IFoo(a, b, c) can't be made to work because 
InterfaceClass.__call__'s signature can't be modified to support it, 
since IFoo(a, b) means "use b as default".

Actually... I got curious about the implementation work required, and I 
realized that no modification to Twisted is really necessary, if what 
you want is this syntactic convenience.  The registry used by Twisted 
already supports multi-adapters (since it's just a zope.interface 
registry), and is already explicitly exposed publicly so you can do 
zope-interface-y stuff to it directly.

I'm still not a big fan of multi-adapters, but the code's so short, and 
so non-invasive (in particular I don't believe it'll affect the 
performance of "normal", single adaptation), that I probably wouldn't 
argue too hard against it.  Feel free to file that ticket, although I 
won't promise that somebody *else* won't come along and object.  In any 
case, you can start using it right away if it suits you :).

Anyway, I hope this is useful:

# multireg.py

from zope.interface.declarations import implementedBy

from twisted.python.components import getRegistry

def registerMulti(adapter, fromInterfaces, *toInterfaces):
    registry = getRegistry()
    for interface in toInterfaces:
        registry.register(fromInterfaces, interface, '', adapter)
        registry.register([implementedBy(multi)], interface, '',
                          translateMulti(interface, registry))

def translateMulti(toInterface, registry):
    def translator(multiple):
        return registry.queryMultiAdapter(
            multiple.conformers, toInterface)
    return translator

class multi(object):
    def __init__(self, *conformers):
        self.conformers = conformers

# and here's an example:

from zope.interface import Interface, implements

class IA(Interface): ""
class IB(Interface): ""
class IC(Interface): ""

class A(object): implements(IA)
class B(object): implements(IB)

class ABC(object):
    implements(IC)
    def __init__(self, a, b):
        self.a = a
        self.b = b

registerMulti(ABC, [IA, IB], IC)

print IC(multi(A(), B()))
print IC(multi(1, 2), 3)

# -glyph



From esteve at sindominio.net  Sun Apr 12 09:11:12 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 12 Apr 2009 17:11:12 +0200
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>
References: <200904112241.36178.esteve@sindominio.net>
	<200904121108.23622.esteve@sindominio.net>
	<20090412131604.12555.1094647633.divmod.xquotient.8104@weber.divmod.com>
Message-ID: <200904121711.12546.esteve@sindominio.net>

On Sunday 12 April 2009 15:16:04 glyph at divmod.com wrote:
> Sorry for that; it certainly wasn't my intention.  I meant just what I
> said: I find it difficult to communicate about.  Perhaps I should have
> said, "trust me, my experience suggests that it is".

I'm too thin-skinned sometimes, so just forget what I said :-)

> And this is why the explanation of its wrong-ness is difficult.  I know
> that you could get the same effect by doing (IFoo, IUsernamePassword) ->
> IBar and (IFoo, IHostnamePath).

Actually I just discovered some of those flaws in Zope's adapter registry, so 
you're right that multi-adapters are not that easy to implement.

> Would the specifics of your application allow you to introduce an
> intermediary IProtocolFactoryConfigurer interface, with .config* methods
> that would return the actual ProtocolFactory, as with my IBarFactory
> above?  "IBar" here would be IProtocolFactory; sorry for the confusion
> with the word "factory".

I guess that would be sufficient, an "adapter factory" in some sense. In fact, 
I already came up with something similar, but found it too cumbersome 
(attached). Maybe, instead of supporting multi-adapters, a recipe like yours 
could be added to the documentation.

> So ConfigurationObject is purely for the IFooFactory implementation?

Yep. In our case, AMQP protocol instances require some arguments to be passed 
(e.g. username and password for connecting to the broker). BTW, I just 
realized that we should use usage.Options instead of our own config object.

> Thanks for that link, by the way, that's a great introduction to
> zope.component.  Not one I'd seen before.

It covers pretty much everything about adapters and interfaces, I found it 
very detailed and useful.

> I'm still not a big fan of multi-adapters, but the code's so short, and
> so non-invasive (in particular I don't believe it'll affect the
> performance of "normal", single adaptation), that I probably wouldn't
> argue too hard against it.  Feel free to file that ticket, although I
> won't promise that somebody *else* won't come along and object.  In any
> case, you can start using it right away if it suits you :).

It's very simple and elegant, I like it :-) I think it's a good idea to 
include it, or maybe add an entry to the FAQ.

Thanks!
-------------- next part --------------
A non-text attachment was scrubbed...
Name: multi.py
Type: application/x-python
Size: 1668 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090412/fb95139d/attachment-0002.bin>

From jml at mumak.net  Sun Apr 12 19:27:11 2009
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 13 Apr 2009 11:27:11 +1000
Subject: [Twisted-Python] adapt from more than one interface
In-Reply-To: <200904121108.23622.esteve@sindominio.net>
References: <200904112241.36178.esteve@sindominio.net>
	<20090412003129.12555.566578569.divmod.xquotient.7823@weber.divmod.com>
	<200904121108.23622.esteve@sindominio.net>
Message-ID: <d06a5cd30904121827p7193e6ddoc91960cf689806e9@mail.gmail.com>

On Sun, Apr 12, 2009 at 7:08 PM, Esteve Fernandez <esteve at sindominio.net> wrote:
> I still think it does, but nobody wants to make the ticket count grow
> higher :-) Anyway, Zope already has this nifty thing called multi-adapters,
> which implement exactly what I described:
>
> http://www.muthukadan.net/docs/zca.html#multi-adapter
>
> but I always liked Twisted's adapter registry better and our application
> already uses it in quite a few places. I like being able to call IFoo(bar)
> and let the registry lookup an adapter automatically, instead of having to
> call getAdapter()/queryAdapter()

IFoo(bar) works just fine with the Zope adapter registry.

jml



From cary.hull at gmail.com  Sun Apr 12 21:31:14 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sun, 12 Apr 2009 20:31:14 -0700
Subject: [Twisted-Python] Documentation overviews
In-Reply-To: <20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>
References: <3fce0ae70904020905l286b78acvb17f4f0d572d9680@mail.gmail.com>
	<029501c9b543$cabd7520$0500a8c0@yoda>
	<3fce0ae70904061338h4581917y5e22f493e9df6e5b@mail.gmail.com>
	<20090406214759.12555.1462340275.divmod.xquotient.7005@weber.divmod.com>
Message-ID: <3fce0ae70904122031y51fc80a4n405fb81182ca86a4@mail.gmail.com>

I've been short on time lately so will post these in batches. Also it will
give folks a chance to comment on the direction taken before I go too far.
Each of these should be encapsulated in some overview prose. Also it's a
good opportunity to link to external documentation such as related blog
posts, projects, etc.

Some of these are obvious and nearly mirror the current Howto indexes, not
sure if that's desired.
(Though some indexes point to some very old stuff, like woven)

If you have provided feedback and do not see it reflected yet, don't worry.
I'm still formulating how to work it in.
Any further guidance or criticism will be appreciated.

----

* So, you want to learn the basics of Twisted

http://twistedmatrix.com/projects/core/documentation/howto/async.html
http://twistedmatrix.com/projects/core/documentation/howto/reactor-basics.html
http://twistedmatrix.com/projects/core/documentation/examples/#auto0
http://twistedmatrix.com/projects/core/documentation/examples/#auto1
http://twistedmatrix.com/projects/core/documentation/howto/defer.html
http://twistedmatrix.com/projects/core/documentation/howto/application.html
http://twistedmatrix.com/projects/core/documentation/howto/design.html

* So, you want to write unittests for your Twisted code

http://twistedmatrix.com/projects/core/documentation/howto/testing.html

* So, you want to drive processes with Twisted

http://twistedmatrix.com/projects/core/documentation/howto/process.html
http://unpythonic.blogspot.com/2007/08/spawning-subprocess-with-pygtk-using.html

* So, you want to use Twisted to develop a custom protocol

http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html
http://twistedmatrix.com/projects/core/documentation/howto/udp.html
http://twistedmatrix.com/projects/core/documentation/examples/#auto2

* So, you want to use threads with Twisted

http://twistedmatrix.com/projects/core/documentation/howto/threading.html

* So, you want to persist data in a Twisted application

http://divmod.org/trac/wiki/DivmodAxiom/Tutorial
http://twistedmatrix.com/projects/core/documentation/howto/dirdbm.html
http://twistedmatrix.com/projects/core/documentation/howto/rdbms.html

* So, you want to do task scheduling in Twisted

http://twistedmatrix.com/projects/core/documentation/howto/time.html
http://divmod.org/trac/wiki/DivmodAxiom/Tutorial#UsingtheSchedulerBuildYourOwnclowHHHron

* So, you want to write a web application with Twisted

http://twistedmatrix.com/projects/web/documentation/howto/using-twistedweb.html
http://twistedmatrix.com/projects/web/documentation/howto/web-development.html
http://divmod.org/trac/wiki/DivmodNevow/Tutorial
http://divmod.org/trac/wiki/DivmodNevow/Athena
http://divmod.org/trac/wiki/MantissaHowTo
http://blog.dreid.org/2009/03/twisted-django-it-wont-burn-down-your.html

* So, you want to deploy a plugin for Twisted

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090412/75be9bbe/attachment.html>

From ted.pederson at gmail.com  Mon Apr 13 12:25:12 2009
From: ted.pederson at gmail.com (Ted Pederson)
Date: Mon, 13 Apr 2009 11:25:12 -0700
Subject: [Twisted-Python] Basic factory question
Message-ID: <834bba420904131125r15fab551n9602ae93408fca7d@mail.gmail.com>

Coming from C++ to python/twisted. Looking at samples, created a simple
server and want to create a tester file that will create many clients to
connect to and exercise my server. All very nice and easy and like this a
lot so far.

The one thing that looks strange to me is that the samples instantiate a
ClientFactory to then connect to the server via reactor.connectTCP().

I copied this pattern, worried that a factory would be created for every one
of my clients, and this is indeed what happened. Isn't the point of a
factory to generate all of the clients? I'd like to keep some aggregate info
in 1 factory, and have the factory contain the dbpools, etc.. How to do
this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090413/025a3693/attachment.html>

From exarkun at divmod.com  Mon Apr 13 12:32:11 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Apr 2009 14:32:11 -0400
Subject: [Twisted-Python] Basic factory question
In-Reply-To: <834bba420904131125r15fab551n9602ae93408fca7d@mail.gmail.com>
Message-ID: <20090413183211.24697.245039773.divmod.quotient.7064@henry.divmod.com>

On Mon, 13 Apr 2009 11:25:12 -0700, Ted Pederson <ted.pederson at gmail.com> wrote:
>Coming from C++ to python/twisted. Looking at samples, created a simple
>server and want to create a tester file that will create many clients to
>connect to and exercise my server. All very nice and easy and like this a
>lot so far.
>
>The one thing that looks strange to me is that the samples instantiate a
>ClientFactory to then connect to the server via reactor.connectTCP().
>
>I copied this pattern, worried that a factory would be created for every one
>of my clients, and this is indeed what happened. Isn't the point of a
>factory to generate all of the clients? I'd like to keep some aggregate info
>in 1 factory, and have the factory contain the dbpools, etc.. How to do
>this?
>

You can pass a single ClientFactory instance to connectTCP multiple times,
if that's what you want to do.  If the factory is where you keep various
other resources for the client connections to use, then this makes perfect
sense.

Jean-Paul



From rowen at u.washington.edu  Mon Apr 13 14:49:58 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Mon, 13 Apr 2009 13:49:58 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-6F098F.12205007042009@news.gmane.org>
	<20090410160133.24697.1558421192.divmod.quotient.5786@henry.divmod.com>
Message-ID: <rowen-E08BC4.13495813042009@news.gmane.org>

In article 
<20090410160133.24697.1558421192.divmod.quotient.5786 at henry.divmod.com>,
 Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen" 
> <rowen at u.washington.edu> wrote:
> >I am trying to convert a cross-platform Python/Tkinter application to
> >use Twisted and have run into a problem: at least on MacOS X I can no
> >longer quit the application.
> >
> >I have appended a minimal script showing the problem.
> 
> The example omits this piece of code, recommended by the tksupport module
> docstring:
> 
>   root.protocol('WM_DELETE_WINDOW', reactor.stop)
> 
> I know you posted another solution already, but I'm curious to know if
> the recommended fix works on OS X or if we should be recommended something
> else.
> 
> Jean-Paul

Yes, that is useful if your root window can be closed. (In my case it 
cannot.)

The other fix mentioned handles the Quit menu and the Quit apple event. 
This fix handles the root window being closed killing the application 
properly.

-- Russell




From exarkun at divmod.com  Mon Apr 13 15:14:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Apr 2009 17:14:44 -0400
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS
	X when using Twisted; fix? workaround?
In-Reply-To: <rowen-E08BC4.13495813042009@news.gmane.org>
Message-ID: <20090413211444.24697.1739128157.divmod.quotient.7085@henry.divmod.com>

On Mon, 13 Apr 2009 13:49:58 -0700, "Russell E. Owen" <rowen at u.washington.edu> wrote:
>In article
><20090410160133.24697.1558421192.divmod.quotient.5786 at henry.divmod.com>,
> Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>> On Tue, 07 Apr 2009 12:20:50 -0700, "Russell E. Owen"
>> <rowen at u.washington.edu> wrote:
>> >I am trying to convert a cross-platform Python/Tkinter application to
>> >use Twisted and have run into a problem: at least on MacOS X I can no
>> >longer quit the application.
>> >
>> >I have appended a minimal script showing the problem.
>>
>> The example omits this piece of code, recommended by the tksupport module
>> docstring:
>>
>>   root.protocol('WM_DELETE_WINDOW', reactor.stop)
>>
>> I know you posted another solution already, but I'm curious to know if
>> the recommended fix works on OS X or if we should be recommended something
>> else.
>>
>> Jean-Paul
>
>Yes, that is useful if your root window can be closed. (In my case it
>cannot.)
>
>The other fix mentioned handles the Quit menu and the Quit apple event.
>This fix handles the root window being closed killing the application
>properly.

It sounds like we should expand the Tk documentation to include the solution
you found, in case someone else without a closeable root window wants to use
Twisted with Tkinter.  Could you file a ticket for this?

Jean-Paul



From zooko at zooko.com  Tue Apr 14 10:58:04 2009
From: zooko at zooko.com (zooko)
Date: Tue, 14 Apr 2009 10:58:04 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe-LAFS v1.4
Message-ID: <430F87EA-3D15-4D4B-A597-AB0EBABC7DE7@zooko.com>

ANNOUNCING Tahoe, the Least-Authority Filesystem, v1.4

The allmydata.org team is pleased to announce the release of version
1.4.1 of "Tahoe", the Lightweight-Authorization Filesystem. This is the
first release of Tahoe-LAFS which was created solely as a labor of love
by volunteers -- it is no longer funded by allmydata.com (see [1] for
details).

Tahoe-LAFS is a secure, decentralized, fault-tolerant cloud storage
system.  All of the source code is publicly available under Free
Software, Open Source licences.

This filesystem is distributed over multiple servers in such a way the
filesystem continues to operate correctly even when some of the servers
are unavailable, malfunctioning, or malicious. Here is the one-page
explanation of Tahoe's unique security and fault-tolerance properties:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This is the successor to Tahoe-LAFS v1.3, which was released February
13, 2009 [2].  This is a major new release, adding garbage collection,
improved diagnostics and error-reporting, and fixing a critical
performance problem when downloading large (many GB) files.

See the NEWS file [3] and the known_issues.txt file [4] for more
information.

Besides the Tahoe core, a crop of related projects have sprung up,
including frontends for Windows and Macintosh, two front-ends written in
JavaScript, a Ruby interface, a plugin for duplicity, a plugin for
TiddlyWiki, a new backup tool named "GridBackup", CIFS/SMB integration,
an iPhone app, and three incomplete frontends for FUSE. See the Related
Projects page on the wiki: [5].


COMPATIBILITY

Tahoe v1.4 is fully compatible with the version 1 series of Tahoe. Files
written by v1.4 clients can be read by clients of all versions back to
v1.0. v1.4 clients can read files produced by clients of all versions  
since
v1.0.  v1.4 servers can serve clients of all versions back to v1.0  
and v1.4
clients can use servers of all versions back to v1.0.

This is the fifth release in the version 1 series. The version 1 series
of Tahoe will be actively supported and maintained for the forseeable
future, and future versions of Tahoe will retain the ability to read
files and directories produced by Tahoe v1 for the forseeable future.

The version 1 branch of Tahoe is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of servers,
such that if some of them fail or even turn out to be malicious, the
entire filesystem continues to be available. You can share your files
with other users, using a simple and flexible access control scheme.

Because this software is new, we do not categorically recommend it as
the sole repository of data which is extremely confidential or
precious.  However, we believe that erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe safer than
common alternatives, such as RAID, removable drive, tape, "on-line
storage" or "Cloud storage" systems.

This software comes with extensive tests, and there are no known
security flaws which would compromise confidentiality or data integrity.
(For all currently known issues please see the known_issues.txt file
[3].)

This release of Tahoe is suitable for the "friendnet" use case [6] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share disk space and files.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
[7] for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1 or, at your option, any later version.  (The
Transitive Grace Period Public Licence has requirements similar to the
GPL except that it allows you to wait for up to twelve months after you
redistribute a derived work before releasing the source code of your
derived work.) See the file "COPYING.TGPPL.html" [8] for the terms of
the Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris, and
probably most other systems.  Start with "docs/install.html" [9].


HACKING AND COMMUNITY

Please join us on the mailing list [10].  Patches are gratefully
accepted -- the RoadMap page [11] shows the next improvements that we
plan to make and CREDITS [12] lists the names of people who've
contributed to the project.  The wiki Dev page [13] contains resources
for hackers.


SPONSORSHIP

Tahoe was originally developed thanks to the sponsorship of Allmydata,
Inc. [14], a provider of commercial backup services.  Allmydata,
Inc. created the Tahoe project, and contributed hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
Tahoe hackers and instructing them to spend part of their work time on
this Free Software project).  Also they awarded customized t-shirts to
hackers who find security flaws in Tahoe (see http://hacktahoe.org
). After discontinuing funding of Tahoe R&D in early 2009, Allmydata,
Inc. has continued to provide servers, co-lo space and bandwidth to the
open source project. Thank you to Allmydata, Inc. for their generous and
public-spirited support.


Zooko Wilcox-O'Hearn
on behalf of the allmydata.org team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and significantly responsible for the Tahoe design as
well, not to mention most of the docs and tests and many other things
besides.

April 13, 2009
Boulder, Colorado, USA

[1] http://allmydata.org/pipermail/tahoe-dev/2009-March/001461.html
[2] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=3620
[3] http://allmydata.org/trac/tahoe/browser/NEWS?rev=3835
[4] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[6] http://allmydata.org/trac/tahoe/wiki/UseCases
[7] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[8] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[9] http://allmydata.org/source/tahoe/trunk/docs/install.html
[10] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[11] http://allmydata.org/trac/tahoe/roadmap
[12] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=3758
[13] http://allmydata.org/trac/tahoe/wiki/Dev
[14] http://allmydata.com



---
Tahoe, the Least-Authority Filesystem -- http://allmydata.org
store your data: $10/month -- http://allmydata.com/?tracking=zsig
I am available for work -- http://zooko.com/résumé.html




From alex at davz.net  Wed Apr 15 13:47:56 2009
From: alex at davz.net (Alex Davies)
Date: Wed, 15 Apr 2009 20:47:56 +0100
Subject: [Twisted-Python] Ldaptor for a simple python LDAP server
Message-ID: <5fb622120904151247o1cd43ae3lfc3e6a9cca5d44c3@mail.gmail.com>

Hi,

I'm looking to write a very simple LDAP server in Python. I want to
hard code the few attributes that I have, and make them available to
clients. I am not the worlds most able programmer, but have looked at
the code, documentation and talks about Ldaptor and it seems that this
can do what I need - but I can't find any examples anywhere!

Is there a simple example that shows me what is needed to build a
super-simple LDAP server in Python?

Any pointers from the more able would be much appreciated!

Many thanks,

Alex



From Benjamin.Rutt at gs.com  Wed Apr 15 14:32:48 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Wed, 15 Apr 2009 16:32:48 -0400
Subject: [Twisted-Python] Writing a shutdown command that sends an ACK back
Message-ID: <F06E1DE459099B4191D150491D42BC361BD17EA2@gsmbnbp22es.firmwide.corp.gs.com>

Is there a good way, in, say, a LineReceiver based server, to implement
a bit of code in lineReceived() that, if you receive a line like, let's
say, 'shutdown' from a client, you can call:

1) self.transport.write('goodbye\n')  # send a goodbye message to the
client

And then call

2) self.transport.close() # close the client's socket

And then

3) reactor.stop()  # terminate the server

The problem I'm finding is that since I believe self.transport.write()
enqueues the writing for later, and self.transport.close() enqueues the
closing for later, both to be picked up by the reactor soon after my
lineReceived() returns, so then if you stop the reactor in #3, it won't
be available anymore to carry out any enqueued tasks for you.  At least
I think that's what's happening in my code.

Is there any good workarounds?  E.g., is reactor.callLater(5,
reactor.stop) too much of a hack?



From rowen at u.washington.edu  Wed Apr 15 15:11:04 2009
From: rowen at u.washington.edu (Russell E. Owen)
Date: Wed, 15 Apr 2009 14:11:04 -0700
Subject: [Twisted-Python] Re: Can't quit a Tkinter application on MacOS X
	when using Twisted; fix? workaround?
References: <rowen-E08BC4.13495813042009@news.gmane.org>
	<20090413211444.24697.1739128157.divmod.quotient.7085@henry.divmod.com>
Message-ID: <rowen-87C3F3.14110415042009@news.gmane.org>

In article 
<20090413211444.24697.1739128157.divmod.quotient.7085 at henry.divmod.com>,
 Jean-Paul Calderone <exarkun at divmod.com> wrote:

>...
> It sounds like we should expand the Tk documentation to include the solution
> you found, in case someone else without a closeable root window wants to use
> Twisted with Tkinter.  Could you file a ticket for this?

Great idea. Here it is: <http://twistedmatrix.com/trac/ticket/3776>.

-- Russell




From exarkun at divmod.com  Wed Apr 15 15:35:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Apr 2009 17:35:00 -0400
Subject: [Twisted-Python] Writing a shutdown command that sends an ACK back
In-Reply-To: <F06E1DE459099B4191D150491D42BC361BD17EA2@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090415213500.24697.1539247715.divmod.quotient.7816@henry.divmod.com>

On Wed, 15 Apr 2009 16:32:48 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>Is there a good way, in, say, a LineReceiver based server, to implement
>a bit of code in lineReceived() that, if you receive a line like, let's
>say, 'shutdown' from a client, you can call:
>
>1) self.transport.write('goodbye\n')  # send a goodbye message to the
>client
>
>And then call
>
>2) self.transport.close() # close the client's socket
>
>And then
>
>3) reactor.stop()  # terminate the server
>
>The problem I'm finding is that since I believe self.transport.write()
>enqueues the writing for later, and self.transport.close() enqueues the
>closing for later, both to be picked up by the reactor soon after my
>lineReceived() returns, so then if you stop the reactor in #3, it won't
>be available anymore to carry out any enqueued tasks for you.  At least
>I think that's what's happening in my code.
>
>Is there any good workarounds?  E.g., is reactor.callLater(5,
>reactor.stop) too much of a hack?

If you want to delay reactor shutdown until the connection has closed,
you can put the reactor.stop() call into the protocol's connectionLost
callback.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Apr 18 22:05:15 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Apr 2009 04:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240113915.22.939103235@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090419/68d347b1/attachment.html>

From exarkun at divmod.com  Mon Apr 20 13:35:43 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Apr 2009 15:35:43 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: 0
Message-ID: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>

Hello All,

I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
with previous sprints, this is an all day event, most likely hosted at the
Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
raised plugin system improvements as a possible topic.  Other topics are
welcome as well, of course.

It's been a couple months since our last sprint.  I think it would be nice
to have a sprint early in May and another one late in May.  How do people
feel about May 2nd or 3rd for the first sprint?

Jean-Paul



From radix at twistedmatrix.com  Mon Apr 20 13:50:23 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Apr 2009 15:50:23 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
References: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <60ed19d40904201250i66c9cfc4vd6b12cea876db51c@mail.gmail.com>

On Mon, Apr 20, 2009 at 3:35 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Hello All,
>
> I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
> with previous sprints, this is an all day event, most likely hosted at the
> Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
> raised plugin system improvements as a possible topic.  Other topics are
> welcome as well, of course.
>
> It's been a couple months since our last sprint.  I think it would be nice
> to have a sprint early in May and another one late in May.  How do people
> feel about May 2nd or 3rd for the first sprint?

I can do that. For what it's worth, I probably won't be able to attend
a late May sprint.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From therve at free.fr  Mon Apr 20 13:56:04 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Mon, 20 Apr 2009 21:56:04 +0200
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
References: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <1240257364.6709.29.camel@brainwave>

Le lundi 20 avril 2009 à 15:35 -0400, Jean-Paul Calderone a écrit :
> Hello All,

Hi!

> I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
> with previous sprints, this is an all day event, most likely hosted at the
> Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
> raised plugin system improvements as a possible topic.  Other topics are
> welcome as well, of course.

As you're talking about Chris, I would suggest: release?

> It's been a couple months since our last sprint.  I think it would be nice
> to have a sprint early in May and another one late in May.  How do people
> feel about May 2nd or 3rd for the first sprint?

I may able be able to participate a bit remotely.

-- 
Thomas




From aronbierbaum at gmail.com  Mon Apr 20 17:16:39 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Mon, 20 Apr 2009 18:16:39 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <20090309143611.12853.873370890.divmod.quotient.20775@henry.divmod.com>
References: <34457a4c0903090717x92b0366x3a524e9577ba15b7@mail.gmail.com>
	<20090309143611.12853.873370890.divmod.quotient.20775@henry.divmod.com>
Message-ID: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>

I have looked into this a little more and have noticed that if I
specify a port number instead of "0" it will always bind to the
correct "127.0.0.1" address. I still don't know why this only occurs
on certain Windows machines. I will hopefully get more time to look
into this in the next couple of days.

-Aron

On Mon, Mar 9, 2009 at 9:36 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 9 Mar 2009 09:17:14 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
> wrote:
>>
>> I have been unable to reproduce this problem on multiple machines that
>> I have tested on. Also I have tried changing various network settings
>> on my machine without any change. Do you have any ideas what I should
>> be looking for?
>
> Not really, sorry.  I know that behavior often differs subtly or grossly
> from Windows machine to Windows machine, but not why.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Apr 20 18:06:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 20 Apr 2009 20:06:18 -0400
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
Message-ID: <20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>

On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com> wrote:
>I have looked into this a little more and have noticed that if I
>specify a port number instead of "0" it will always bind to the
>correct "127.0.0.1" address. I still don't know why this only occurs
>on certain Windows machines. I will hopefully get more time to look
>into this in the next couple of days.

Hmm.  Interesting.  Perhaps we could bind a different port, then.
I look forward to results from your further investigations.

Jean-Paul



From aronbierbaum at gmail.com  Tue Apr 21 13:22:17 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Tue, 21 Apr 2009 14:22:17 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
References: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
	<20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
Message-ID: <34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>

I have been able to reproduce the same results with a simple C++
example. I have been unable to find any specific reason why binding to
"127.0.0.1" and later calling getsockname would result in a different
address of "0.0.0.0" I did find one reference [1] that said that using
a port number of 0 will cause the operating system to listen on all
interfaces and that calling getsockname may not return a valid address
until the socket is fully connected. It might be best to use the
original patch that I sumbitted that only uses the port value from the
getsockname call, and uses the correct "127.0.0.1" IP address
regardless of the reported address. If the address returned is really
undefined, then this could be causing the problem.

-Aron

[1] http://www.sockets.com/winsock.htm#Bind

[2] Change the following line in posixbase.py

client.connect(server.getsockname())

to

client.connect(('127.0.0.1', server.getsockname()[1]))

On Mon, Apr 20, 2009 at 7:06 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
> wrote:
>>
>> I have looked into this a little more and have noticed that if I
>> specify a port number instead of "0" it will always bind to the
>> correct "127.0.0.1" address. I still don't know why this only occurs
>> on certain Windows machines. I will hopefully get more time to look
>> into this in the next couple of days.
>
> Hmm.  Interesting.  Perhaps we could bind a different port, then.
> I look forward to results from your further investigations.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From aronbierbaum at gmail.com  Tue Apr 21 13:35:35 2009
From: aronbierbaum at gmail.com (Aron Bierbaum)
Date: Tue, 21 Apr 2009 14:35:35 -0500
Subject: [Twisted-Python] _Win32Waker
In-Reply-To: <34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>
References: <34457a4c0904201616j39032fc8rc68992c44fa92fa1@mail.gmail.com>
	<20090421000618.24697.1870320777.divmod.quotient.9917@henry.divmod.com>
	<34457a4c0904211222s2d0a2b74v7f57a8bc82575d2f@mail.gmail.com>
Message-ID: <34457a4c0904211235r77a94429l5ac18d6a219abe7d@mail.gmail.com>

Sorry, forgot to attach the C++ example.

-Aron

On Tue, Apr 21, 2009 at 2:22 PM, Aron Bierbaum <aronbierbaum at gmail.com> wrote:
> I have been able to reproduce the same results with a simple C++
> example. I have been unable to find any specific reason why binding to
> "127.0.0.1" and later calling getsockname would result in a different
> address of "0.0.0.0" I did find one reference [1] that said that using
> a port number of 0 will cause the operating system to listen on all
> interfaces and that calling getsockname may not return a valid address
> until the socket is fully connected. It might be best to use the
> original patch that I sumbitted that only uses the port value from the
> getsockname call, and uses the correct "127.0.0.1" IP address
> regardless of the reported address. If the address returned is really
> undefined, then this could be causing the problem.
>
> -Aron
>
> [1] http://www.sockets.com/winsock.htm#Bind
>
> [2] Change the following line in posixbase.py
>
> client.connect(server.getsockname())
>
> to
>
> client.connect(('127.0.0.1', server.getsockname()[1]))
>
> On Mon, Apr 20, 2009 at 7:06 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Mon, 20 Apr 2009 18:16:39 -0500, Aron Bierbaum <aronbierbaum at gmail.com>
>> wrote:
>>>
>>> I have looked into this a little more and have noticed that if I
>>> specify a port number instead of "0" it will always bind to the
>>> correct "127.0.0.1" address. I still don't know why this only occurs
>>> on certain Windows machines. I will hopefully get more time to look
>>> into this in the next couple of days.
>>
>> Hmm.  Interesting.  Perhaps we could bind a different port, then.
>> I look forward to results from your further investigations.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
#include <stdio.h>
#include "winsock2.h"
#include <iostream>

// Try to create a socket, bind to 127.0.0.1, and get the socket name.
void createSocket()
{
   // Create a SOCKET for listening for incoming connection requests
   SOCKET ListenSocket;
   ListenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
   if (ListenSocket == INVALID_SOCKET)
   {
	  std::cout << "Error at socket(): " << WSAGetLastError() << std::endl;
      WSACleanup();
      return;
   }

   // The sockaddr_in structure specifies the address family,
   // IP address, and port for the socket that is being bound.
   sockaddr_in service;
   service.sin_family = AF_INET;
   service.sin_addr.s_addr = inet_addr("127.0.0.1");
   service.sin_port = htons(0);

   //printf("b4 bind : %d.%d.%d.%d\n", service.sin_addr.S_un.S_un_b.s_b1,
   //                                  service.sin_addr.S_un.S_un_b.s_b2,
   //                                  service.sin_addr.S_un.S_un_b.s_b3,
   //                                  service.sin_addr.S_un.S_un_b.s_b4);

   // Bind the socket.
   if (SOCKET_ERROR == bind( ListenSocket, (SOCKADDR*) &service, sizeof(service)))
   {
      printf("bind() failed.\n");
      closesocket(ListenSocket);
      return;
   }
   //listen(ListenSocket, 5);

   int name_len;
   sockaddr outname;
   name_len = sizeof (struct sockaddr_in);
   memset(&outname, 0, name_len);

   getsockname(ListenSocket, &outname, &name_len);

   // Get the port number.
   struct sockaddr_in* get_port = (sockaddr_in*)&outname;
   int port = ntohs(get_port->sin_port);

   if (outname.sa_data[2] == 0 && 0 == outname.sa_data[3]&& 0 == outname.sa_data[3]&& 0 == outname.sa_data[3])
   {
      std::cout << "Bound to wrong address." << std::endl;
      // Display the address.
      printf("Address %d.%d.%d.%d:%d\n", outname.sa_data[2], outname.sa_data[3],
                                         outname.sa_data[4], outname.sa_data[5], port);
   }

   closesocket(ListenSocket);
   return;
}

void main()
{
   // Initialize Winsock
   WSADATA wsaData;
   if (NO_ERROR != WSAStartup(MAKEWORD(2,2), &wsaData))
   {
      printf("Error at WSAStartup()\n");
   }
 
   // Try to create a socket, bind to 127.0.0.1, and get the socket name.
   for (int i = 0; i < 100; ++i)
   {
      createSocket();
   }

   // Cleanup Winsock
   WSACleanup();
}


From tv at twistedmatrix.com  Wed Apr 22 03:04:15 2009
From: tv at twistedmatrix.com (Hope Rios)
Date: Wed, 22 Apr 2009 04:04:15 -0500
Subject: [Twisted-Python] One of a kind Gucci reps
Message-ID: <3343gsz160106XIUItv@twistedmatrix.com>

So you thought owning a brand name watch was out of your reach? Think again!
http://www.wofovaxuc.cn

Diam0nd Reps has it all: Rolex, Cartier, Tag Heuer, Breitling, and many more, for a fraction of the price of an original watch. And don't forget: when you order two watches, you get an extra 15 percent discount over our already low prices!
http://www.wofovaxuc.cn

With so many watches that look and work like the real thing, I guarantee you'll have a delicious time finding yours at our store!








From terry at jon.es  Wed Apr 22 18:22:27 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 02:22:27 +0200
Subject: [Twisted-Python] Transparent pooling of deferreds to be fired upon
	another deferred firing
Message-ID: <18927.46275.7780.346325@jon.es>

I have a need to make sure that a deferred-returning function is not called
multiple times, but I want to be able to write code without having to worry
about that.

To be more concrete:

Suppose I have a function called alertSupervisor that takes a string
message for the supervisor and which returns a deferred. I want to be able
to call that function from anywhere in my code, and I always want to get a
deferred back, but if there's already a call in progress to tell the
supervisor the same thing then I don't want to bug him/her by sending
another message, but I do want to know when the original call fires.

So code fragment A calls

  d = alertSupervisor("We have a problem in the boiler room!")

and before the deferred has fired, code fragment B notices the same
underlying problem, and also calls

  d = alertSupervisor("We have a problem in the boiler room!")

I want A and B's deferreds to both be called back with the result/failure.
If I can write it like the above it has the advantage of looking like
regular code and no-one has to think about what's going on. Underneath
there's a pool of deferreds whose firing is triggered by the firing of the
single original deferred.

Note that I specifically only want to pool deferreds like this if there is
a call already underway (i.e., the original deferred has not fired). That
implies you could not pool calls to functions that return via defer.succeed
or defer.fail since those deferreds have already fired.  If someone calls
alertSupervisor("We have a problem in the boiler room!") and their deferred
fires, then a subsequent call to alertSupervisor("We have a problem in the
boiler room!") should get through to the supervisor, as per normal.

This may all seem a bit esoteric, but I have several uses for it. In
particular when the service providing alertSupervisor lives on one machine
and is being called via RPC by A and B, both on separate machines.  As for
how to nicely make RPC calls like this, see Thrift [1] which now has
built-in support for Twisted.

Here's a first cut at a solution:

    from twisted.internet import defer
    from twisted.python import failure

    class DeferredPooler(object):
        def __init__(self, func):
            self.pool = {}
            self.func = func

        def _callOthers(self, result, key):
            if isinstance(result, failure.Failure):
                for d in self.pool[key]:
                    d.errback(result)
            else:
                for d in self.pool[key]:
                    d.callback(result)
            del self.pool[key]
            return result

        def __call__(self, *args, **kwargs):
            key = (args, hash(tuple(sorted(kwargs.items()))))
            if key in self.pool:
                d = defer.Deferred()
                self.pool[key].append(d)
                return d
            else:
                self.pool[key] = []
                d = self.func(*args, **kwargs)
                assert isinstance(d, defer.Deferred)
                d.addBoth(self._callOthers, key)
                return d


You use the class transparently, via a decorator:

    from twisted.internet import reactor

    @DeferredPooler
    def x(*args, **kwargs):
        print 'x called: args = %r, kwargs = %r' % (args, kwargs)
        d = defer.Deferred()
        reactor.callLater(2, d.callback, args)
        return d

    def printer(what):
        print 'printer received:', what

    def stop(_):
        reactor.stop()

    if __name__ == '__main__':

        d1 = x('fred')
        d1.addCallback(printer)

        d2 = x('fred')
        d2.addCallback(printer)

        d = defer.DeferredList([d1, d2])
        d.addBoth(stop)
        reactor.run()


If you run this you'll see x is called only once, but d1 and d2 are each
fired properly.

For more Twisted pleasure/pain, you can also try out funky things like:

        d1 = x('fred')
        d1.addCallback(printer)
        d1.addCallback(x)
        d1.addCallback(printer)

        d2 = x('fred')
        d2.addCallback(printer)
        d2.addCallback(x)
        d2.addCallback(printer)

Here there are 4 calls to x, but only 2 get through.

I could say more, as usual. But I'll wait to see if there's any reaction.
One issue to consider further is the simplistic use of hash.  

Terry


[1] Thrift: http://incubator.apache.org/thrift/



From andrewfr_ice at yahoo.com  Thu Apr 23 10:24:44 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 23 Apr 2009 09:24:44 -0700 (PDT)
Subject: [Twisted-Python] Re: Transparent pooling of deferreds to be fired
	upon another
Message-ID: <992574.37917.qm@web34205.mail.mud.yahoo.com>


Hi Terry:

--- On Thu, 4/23/09, twisted-python-request at twistedmatrix.com 

> Suppose I have a function called alertSupervisor that takes
> a string message for the supervisor and which returns a deferred. I
> want to be able to call that function from anywhere in my code, and I
> always want to get a deferred back, but if there's already a call in >progress to tell the supervisor the same thing then I don't want to bug >him/her by sending another message, but I do want to know when the >original >call fires.

Why can't you have the callbacks attached to the deferred, share a flag?

global flag

def callback(....):
    global flag
    if flag == False:
       flag = True
       # do body of function
    else:
       # don't do anything - flag have been previously fired

If I understand what is happening, this should work because of the non-preemptive nature of the reactor, that is you ought not get a race
condition.

Cheers,
Andrew






      



From terry at jon.es  Thu Apr 23 10:54:12 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 18:54:12 +0200
Subject: [Twisted-Python] Re: Transparent pooling of deferreds to be fired
	upon another
In-Reply-To: Your message at 09:24:44 on Thursday, 23 April 2009
References: <992574.37917.qm@web34205.mail.mud.yahoo.com>
Message-ID: <18928.40244.14518.844561@jon.es>

Hi Andrew

>>>>> "Andrew" == Andrew Francis <andrewfr_ice at yahoo.com> writes:
Andrew> Why can't you have the callbacks attached to the deferred, share a flag?

Andrew> global flag

Andrew> def callback(....):
Andrew>   global flag
Andrew>   if flag == False:
Andrew>     flag = True
Andrew>     # do body of function
Andrew>   else:
Andrew>     # don't do anything - flag have been previously fired

Andrew> If I understand what is happening, this should work because of the
Andrew> non-preemptive nature of the reactor, that is you ought not get a
Andrew> race condition.

I'm not sure if I fully understand you.

  1. If your callback above is the thing that does the work (i.e., my
     alertSupervisor function), then yes, you could use a flag to make sure
     the work is only done one.

  2. If your callback really is a callback :-) then this doesn't seem to
     address what I was after. It would stop the same piece of code in the
     same file from doing something twice.


In the case of 1, I don't get what I want because I want various pieces of
code to be able to call the deferred-returning method and each of them to
get a valid deferred back, which fires as usual.  I also don't get to call
the function and then call it again later, because the flag is one-shot.
I'm trying to deal with identical calls that happen more-or-less at the
same time.

In the case of 2, this is also not what I was after. I want, for example,
code running in a different process or on a different box to be able to
make the call (via RPC), get a deferred, etc. So a client-side solution
isn't going to work.

Or maybe you meant something else?


Sorry - I probably wasn't clear enough in my original post, and thanks for
the suggestion.

Terry



From terry at jon.es  Thu Apr 23 11:00:35 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 23 Apr 2009 19:00:35 +0200
Subject: [Twisted-Python] Transparent pooling of deferreds to be fired upon
	another deferred firing
In-Reply-To: Your message at 02:22:27 on Thursday, 23 April 2009
References: <18927.46275.7780.346325@jon.es>
Message-ID: <18928.40627.324147.21197@jon.es>

BTW, below is a version of my code from yesterday that works on class
methods.  I didn't write the __get__ code, but took it from a decorator
tutorial on the web.

This version works with standalone functions, and with class methods that
also use @inlineCallbacks.  So you can do

    class MyClass(object):
        @DeferredPooler
        @defer.inlineCallbacks
        def xxx(self, ...):
            d = funcReturningADeferred()
            d.addCallbacks(...)
            yield d

and it works.  I also wrote a small test suite in case anyone wants it.
There are still some issues (e.g., with timeouts), but I've decorated some
methods with DeferredPooler and am happy with the result so far.

Terry


    from twisted.internet import defer
    from twisted.python import failure

    class DeferredPooler(object):
        def __init__(self, func):
            self.pool = {}
            self.func = func

        def _callOthers(self, result, key):
            if isinstance(result, failure.Failure):
                for d in self.pool[key]:
                    d.errback(result)
            else:
                for d in self.pool[key]:
                    d.callback(result)
            del self.pool[key]
            return result

        def __call__(self, *args, **kwargs):
            key = (args, hash(tuple(sorted(kwargs.items()))))
            if key in self.pool:
                d = defer.Deferred()
                self.pool[key].append(d)
                return d
            else:
                self.pool[key] = []
                d = self.func(*args, **kwargs)
                assert isinstance(d, defer.Deferred)
                d.addBoth(self._callOthers, key)
                return d

        def __get__(self, obj, type=None):
            if obj is None:
                return self
            new_func = self.func.__get__(obj, type)
            return self.__class__(new_func)



From thughes at thegoldfish.org  Thu Apr 23 18:26:04 2009
From: thughes at thegoldfish.org (Tim Hughes)
Date: Fri, 24 Apr 2009 01:26:04 +0100
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
Message-ID: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>

I am trying to understand this concept of async methods and i thought I had
it cracked with the code below but it doesn't seem to work as all the calls
to the xmlrpc server return one after the other like this:

Success:I started at Fri Apr 24 01:12:23 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:28 2009
Success:I started at Fri Apr 24 01:12:28 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:33 2009
Success:I started at Fri Apr 24 01:12:33 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:38 2009
Success:I started at Fri Apr 24 01:12:38 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:43 2009
Success:I started at Fri Apr 24 01:12:43 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:48 2009
Success:I started at Fri Apr 24 01:12:48 2009 and i slept 5 seconds then
woke at Fri Apr 24 01:12:53 2009

Am I completly missing the point here or is there something incorrect with
my code. AT first I thought it was because the sleep was shutting the whole
thing down (probably is) so  I have also tried it with a long running
network call instead of the time.sleep() and have the same issue. Can
someone please point me in the right direction or give a bit of criticism of
the code concepts/thought processes


=========== Server ========================
#!/usr/bin/env python

from twisted.web import xmlrpc, server
from twisted.internet.defer import Deferred
from twisted.internet import reactor, threads
import time

class MyServer(xmlrpc.XMLRPC):

    def blocking_method(self, duration=5):
        """block the instance for a specified duration"""
        started = time.asctime()
        time.sleep(duration)
        data = "I started at %s and i slept %d seconds then woke at %s" %
(started, duration, time.asctime())
        return data


#    def xmlrpc_block_thread(self, duration=10):
#        """ pass to blocking method using thread """
#        return threads.deferToThread(self.blocking_method, duration)
#
#    def xmlrpc_block(self, duration=10):
#        """ pass to blocking method using defered """
#        d = Deferred()
#        d.callback(self.blocking_method(duration))
#        return d

    def xmlrpc_block_fixed(self, duration=5):
        """ pass to blocking method using defered """
        d = self.blocking_method_fixed(duration)  # return a defered
        d.addCallback(self.printdata)
        d.addErrback(self.printerror)
        return d

    def blocking_method_fixed(self, duration=5):
        d = Deferred()
        d.callback(self.blocking_method(duration))
        return d

    def printdata(self, val):
        return 'Success:'+val

    def printerror(self, val):
        return 'Error:'+val


if __name__ == '__main__':
    r = MyServer()
    reactor.listenTCP(8080, server.Site(r))
    reactor.run()

===============================================


========== Client ================================
#!/usr/bin/env python
import xmlrpclib
import datetime
import sys
proxy = xmlrpclib.ServerProxy("http://localhost:8080/", allow_none=True)
print "%s" % str(proxy.block_fixed(5))

===============================================




Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090424/abdb0561/attachment.html>

From tim at commsecure.com.au  Thu Apr 23 21:34:47 2009
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 24 Apr 2009 13:34:47 +1000
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
In-Reply-To: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
Message-ID: <20090424133447.5a46af17@ws35.commsecure.com.au>

Tim Hughes <thughes at thegoldfish.org> wrote:
> Am I completly missing the point here or is there something incorrect with
> my code.

Yes, it seems you have missed the point somewhere.

>     def blocking_method(self, duration=5):
>         """block the instance for a specified duration"""
>         started = time.asctime()
>         time.sleep(duration)
>         data = "I started at %s and i slept %d seconds then woke at %s" %
> (started, duration, time.asctime())
>         return data

>     def blocking_method_fixed(self, duration=5):
>         d = Deferred()
>         d.callback(self.blocking_method(duration))
>         return d

Your blocking_method_fixed() wraps the result of blocking_method() in a
Deferred, but it doesn't actually do anything to prevent
blocking_method() from blocking. Deferreds have no magical ability to
prevent things from blocking on their own, they are just a tool you can
use to handle some of the control-flow issues that arise when writing
non-blocking code.

For example, here's a method that does more or less what
blocking_method() does, but in a non-blocking manner:

    def non_blocking_method(self, duration=5):
        started = time.asctime()
        d = Deferred()
        reactor.callLater(duration, d.callback, None)

        def do_stuff_after_timeout(result):
            # Here, 'result' will contain the None we passed to
            # callLater
            data = "I started at %s and I slept %d seconds then woke " \
                   "at %s" % (started, duration, time.asctime())
            return data
        d.addCallback(do_stuff_after_timeout)
        return d

See how the method does some initial preparation, then schedules a
callback to be run after the long-running operation has completed.

If you have a long-running network call to do instead of a simple
sleep, there's probably a Twisted API or addon that will perform the
call and give you back a Deferred, rather than blocking until it has an
answer. If you're trying to use a third-party client library that
doesn't offer a non-blocking API, about the only thing you can do is
call that API in a thread, using the reactor.callInThread() method (but
note that Twisted is not thread-safe, so the thing you call in a thread
can't use any of Twisted's functionality except via
reactor.callFromThread())
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090424/1da7eadd/attachment.sig>

From nathan.stocks at gmail.com  Fri Apr 24 00:28:19 2009
From: nathan.stocks at gmail.com (Nathan)
Date: Fri, 24 Apr 2009 00:28:19 -0600
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async 
	concept
In-Reply-To: <20090424133447.5a46af17@ws35.commsecure.com.au>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
Message-ID: <96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>

On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au> wrote:
> Tim Hughes <thughes at thegoldfish.org> wrote:
>> Am I completly missing the point here or is there something incorrect with
>> my code.
>
> Yes, it seems you have missed the point somewhere.
>
>>     def blocking_method(self, duration=5):
>>         """block the instance for a specified duration"""
>>         started = time.asctime()
>>         time.sleep(duration)
>>         data = "I started at %s and i slept %d seconds then woke at %s" %
>> (started, duration, time.asctime())
>>         return data
>
>>     def blocking_method_fixed(self, duration=5):
>>         d = Deferred()
>>         d.callback(self.blocking_method(duration))
>>         return d
>
> Your blocking_method_fixed() wraps the result of blocking_method() in a
> Deferred, but it doesn't actually do anything to prevent
> blocking_method() from blocking. Deferreds have no magical ability to
> prevent things from blocking on their own, they are just a tool you can
> use to handle some of the control-flow issues that arise when writing
> non-blocking code.
>
> For example, here's a method that does more or less what
> blocking_method() does, but in a non-blocking manner:
>
>    def non_blocking_method(self, duration=5):
>        started = time.asctime()
>        d = Deferred()
>        reactor.callLater(duration, d.callback, None)
>
>        def do_stuff_after_timeout(result):
>            # Here, 'result' will contain the None we passed to
>            # callLater
>            data = "I started at %s and I slept %d seconds then woke " \
>                   "at %s" % (started, duration, time.asctime())
>            return data
>        d.addCallback(do_stuff_after_timeout)
>        return d
>
> See how the method does some initial preparation, then schedules a
> callback to be run after the long-running operation has completed.
>
> If you have a long-running network call to do instead of a simple
> sleep, there's probably a Twisted API or addon that will perform the
> call and give you back a Deferred, rather than blocking until it has an
> answer. If you're trying to use a third-party client library that
> doesn't offer a non-blocking API, about the only thing you can do is
> call that API in a thread, using the reactor.callInThread() method (but
> note that Twisted is not thread-safe, so the thing you call in a thread
> can't use any of Twisted's functionality except via
> reactor.callFromThread())

The above email makes a great FAQ item, IMO.  I know there's already
docs covering this, but this issue comes up soooo many times (it took
me a month to wrap my head around it initially) that it wouldn't hurt
to hit the issue from many directions in many styles.

~ Nathan



From drew.smathers at gmail.com  Fri Apr 24 13:33:08 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 24 Apr 2009 15:33:08 -0400
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async 
	concept
In-Reply-To: <96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
	<96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
Message-ID: <368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>

On Fri, Apr 24, 2009 at 2:28 AM, Nathan <nathan.stocks at gmail.com> wrote:
> On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au> wrote:
>> Tim Hughes <thughes at thegoldfish.org> wrote:
>>> Am I completly missing the point here or is there something incorrect with
>>> my code.
>>
>> Yes, it seems you have missed the point somewhere.
>>
>>>     def blocking_method(self, duration=5):
>>>         """block the instance for a specified duration"""
>>>         started = time.asctime()
>>>         time.sleep(duration)
>>>         data = "I started at %s and i slept %d seconds then woke at %s" %
>>> (started, duration, time.asctime())
>>>         return data
>>
>>>     def blocking_method_fixed(self, duration=5):
>>>         d = Deferred()
>>>         d.callback(self.blocking_method(duration))
>>>         return d
>>
>> Your blocking_method_fixed() wraps the result of blocking_method() in a
>> Deferred, but it doesn't actually do anything to prevent
>> blocking_method() from blocking. Deferreds have no magical ability to
>> prevent things from blocking on their own, they are just a tool you can
>> use to handle some of the control-flow issues that arise when writing
>> non-blocking code.
>>
>> For example, here's a method that does more or less what
>> blocking_method() does, but in a non-blocking manner:
>>
>>    def non_blocking_method(self, duration=5):
>>        started = time.asctime()
>>        d = Deferred()
>>        reactor.callLater(duration, d.callback, None)
>>
>>        def do_stuff_after_timeout(result):
>>            # Here, 'result' will contain the None we passed to
>>            # callLater
>>            data = "I started at %s and I slept %d seconds then woke " \
>>                   "at %s" % (started, duration, time.asctime())
>>            return data
>>        d.addCallback(do_stuff_after_timeout)
>>        return d
>>
>> See how the method does some initial preparation, then schedules a
>> callback to be run after the long-running operation has completed.
>>
>> If you have a long-running network call to do instead of a simple
>> sleep, there's probably a Twisted API or addon that will perform the
>> call and give you back a Deferred, rather than blocking until it has an
>> answer. If you're trying to use a third-party client library that
>> doesn't offer a non-blocking API, about the only thing you can do is
>> call that API in a thread, using the reactor.callInThread() method (but
>> note that Twisted is not thread-safe, so the thing you call in a thread
>> can't use any of Twisted's functionality except via
>> reactor.callFromThread())
>
> The above email makes a great FAQ item, IMO.  I know there's already
> docs covering this, but this issue comes up soooo many times (it took
> me a month to wrap my head around it initially) that it wouldn't hurt
> to hit the issue from many directions in many styles.
>

It is one of the FAQ items:

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoIuseDeferredstomakemyblockingcodenon-blocking

Apparently there's also been some stitchwork done to commemorate this.

-Drew



From exarkun at twistedmatrix.com  Sun Apr 26 05:47:14 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Apr 2009 11:47:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240746434.52.1725896470@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090426/823fa2e8/attachment.html>

From exarkun at twistedmatrix.com  Sun Apr 26 06:46:58 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Apr 2009 12:46:58 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1240750018.13.441174210@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090426/45b5f30d/attachment.html>

From thughes at thegoldfish.org  Sun Apr 26 15:23:11 2009
From: thughes at thegoldfish.org (Tim Hughes)
Date: Sun, 26 Apr 2009 22:23:11 +0100
Subject: [Twisted-Python] xmlrpc - Possable failure to understand async
	concept
In-Reply-To: <368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>
References: <977a11430904231726i207efde7o11b16f06ab90b2da@mail.gmail.com>
	<20090424133447.5a46af17@ws35.commsecure.com.au>
	<96c9d6a80904232328o81a3edbnf277416bec463bc5@mail.gmail.com>
	<368574aa0904241233n650f3c7es1800a61375e5139b@mail.gmail.com>
Message-ID: <977a11430904261423w11ce9950j1befb591e233bf53@mail.gmail.com>

Thanks for the help on this everyone


Tim Hughes
mailto:thughes at thegoldfish.org

Without religion, people wouldn't pray for peace, they would work towards
it.


On Fri, Apr 24, 2009 at 8:33 PM, Drew Smathers <drew.smathers at gmail.com>wrote:

> On Fri, Apr 24, 2009 at 2:28 AM, Nathan <nathan.stocks at gmail.com> wrote:
> > On Thu, Apr 23, 2009 at 9:34 PM, Tim Allen <tim at commsecure.com.au>
> wrote:
> >> Tim Hughes <thughes at thegoldfish.org> wrote:
> >>> Am I completly missing the point here or is there something incorrect
> with
> >>> my code.
> >>
> >> Yes, it seems you have missed the point somewhere.
> >>
> >>>     def blocking_method(self, duration=5):
> >>>         """block the instance for a specified duration"""
> >>>         started = time.asctime()
> >>>         time.sleep(duration)
> >>>         data = "I started at %s and i slept %d seconds then woke at %s"
> %
> >>> (started, duration, time.asctime())
> >>>         return data
> >>
> >>>     def blocking_method_fixed(self, duration=5):
> >>>         d = Deferred()
> >>>         d.callback(self.blocking_method(duration))
> >>>         return d
> >>
> >> Your blocking_method_fixed() wraps the result of blocking_method() in a
> >> Deferred, but it doesn't actually do anything to prevent
> >> blocking_method() from blocking. Deferreds have no magical ability to
> >> prevent things from blocking on their own, they are just a tool you can
> >> use to handle some of the control-flow issues that arise when writing
> >> non-blocking code.
> >>
> >> For example, here's a method that does more or less what
> >> blocking_method() does, but in a non-blocking manner:
> >>
> >>    def non_blocking_method(self, duration=5):
> >>        started = time.asctime()
> >>        d = Deferred()
> >>        reactor.callLater(duration, d.callback, None)
> >>
> >>        def do_stuff_after_timeout(result):
> >>            # Here, 'result' will contain the None we passed to
> >>            # callLater
> >>            data = "I started at %s and I slept %d seconds then woke " \
> >>                   "at %s" % (started, duration, time.asctime())
> >>            return data
> >>        d.addCallback(do_stuff_after_timeout)
> >>        return d
> >>
> >> See how the method does some initial preparation, then schedules a
> >> callback to be run after the long-running operation has completed.
> >>
> >> If you have a long-running network call to do instead of a simple
> >> sleep, there's probably a Twisted API or addon that will perform the
> >> call and give you back a Deferred, rather than blocking until it has an
> >> answer. If you're trying to use a third-party client library that
> >> doesn't offer a non-blocking API, about the only thing you can do is
> >> call that API in a thread, using the reactor.callInThread() method (but
> >> note that Twisted is not thread-safe, so the thing you call in a thread
> >> can't use any of Twisted's functionality except via
> >> reactor.callFromThread())
> >
> > The above email makes a great FAQ item, IMO.  I know there's already
> > docs covering this, but this issue comes up soooo many times (it took
> > me a month to wrap my head around it initially) that it wouldn't hurt
> > to hit the issue from many directions in many styles.
> >
>
> It is one of the FAQ items:
>
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoIuseDeferredstomakemyblockingcodenon-blocking
>
> Apparently there's also been some stitchwork done to commemorate this.
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090426/55ef66fa/attachment.html>

From exarkun at divmod.com  Mon Apr 27 10:29:57 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Apr 2009 12:29:57 -0400
Subject: [Twisted-Python] Upcoming Twisted Sprint in Cambridge, MA
In-Reply-To: <20090420193543.24697.1980607465.divmod.quotient.9823@henry.divmod.com>
Message-ID: <20090427162957.24697.1773342602.divmod.quotient.12450@henry.divmod.com>

On Mon, 20 Apr 2009 15:35:43 -0400, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>Hello All,
>
>I'd like to organize another Twisted sprint in Cambridge, MA in May.  As
>with previous sprints, this is an all day event, most likely hosted at the
>Divmod office in Porter Square, for Twisted hacking.  Chris Armstrong has
>raised plugin system improvements as a possible topic.  Other topics are
>welcome as well, of course.
>
>It's been a couple months since our last sprint.  I think it would be nice
>to have a sprint early in May and another one late in May.  How do people
>feel about May 2nd or 3rd for the first sprint?
>

Okay, it's official.  Sprint is on for this Saturday, May 2nd.  I'll be
there by 10 AM and probably be around until at least 6 PM (likely later).

Anyone who would like directions or other information about how to
participate, please feel free to contact.

I'll also propose a couple days for the next one.  Does anyone have a
preference between May 23rd and May 30th?

Jean-Paul



From jjconti at gmail.com  Mon Apr 27 18:06:38 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Mon, 27 Apr 2009 21:06:38 -0300
Subject: [Twisted-Python] Polling from Twisted
Message-ID: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>

Hi, this is my first mail to the list.

I am writing a server using Twisted, extending LineOnlyReceiver. In it I
maintain a list of clients connected.

I'd like to poll every client for certain status information every 30
seconds. Which is the correct approach to implement this?

Thanks in advance,

-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090427/c1e16e80/attachment.html>

From hoooooosety at gmail.com  Tue Apr 28 01:33:54 2009
From: hoooooosety at gmail.com (=?utf-8?B?aG9vb29vb3NldHk=?=)
Date: Tue, 28 Apr 2009 15:33:54 +0800
Subject: [Twisted-Python] =?utf-8?q?Polling_from_Twisted?=
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
Message-ID: <200904281533514846519@gmail.com>

juanjo,

you could use twisted.internet.task module to implement this, try LoopingCall, it's easy to use.
more info in this page,http://twistedmatrix.com/projects/core/documentation/howto/time.html 


2009-04-28 



hoooooosety 



发件人： Juanjo Conti 
发送时间： 2009-04-28  08:07:26 
收件人： twisted-python 
抄送： 
主题： [Twisted-Python] Polling from Twisted 
 
Hi, this is my first mail to the list.

I am writing a server using Twisted, extending LineOnlyReceiver. In it I maintain a list of clients connected.

I'd like to poll every client for certain status information every 30 seconds. Which is the correct approach to implement this?

Thanks in advance,

-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090428/4565ba4a/attachment.html>

From ltaylor.volks at gmail.com  Tue Apr 28 01:48:37 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 28 Apr 2009 00:48:37 -0700
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
Message-ID: <49F6B4D5.5060606@gmail.com>

On 4/27/09 5:06 PM, Juanjo Conti wrote:
> Hi, this is my first mail to the list.
> 
> I am writing a server using Twisted, extending LineOnlyReceiver. In it I
> maintain a list of clients connected.
> 
> I'd like to poll every client for certain status information every 30
> seconds. Which is the correct approach to implement this?
> 

A simple option is to setup a task.LoopingCall in your factory to
iterate over the list of clients every 30 seconds and issue your status
request. I don't know if it is correct for your application, but this
should illustrate the basic idea:


from twisted.internet import reactor, task

class StatusPollingReceiver(LineOnlyReceiver):
    def connectionMade(self):
        self.factory.clients.append(self)

    def lineReceived(self, line):
	print('Rx: %s' % line)

    def connectionLost(self, reason):
        self.factory.clients.remove(self)


class StatusPollingFactory(Factory):

    def __init__(self):
        self.clients = []

        # send a status request to each client every 30 seconds
        self.statusloop = task.LoopingCall(self.requestStatus)
        self.statusloop.start(30.0)

    def requestStatus(self):
        for client in self.clients:
            client.transport.write('stat\r\n')

    def stopFactory(self):
        self.statusloop.stop()

    def buildProtocol(self, addr):
        p = StatusPollingReceiver()
        p.factory = self
        return p




see:
http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html





From jjconti at gmail.com  Tue Apr 28 05:11:41 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Tue, 28 Apr 2009 08:11:41 -0300
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <49F6B4D5.5060606@gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
	<49F6B4D5.5060606@gmail.com>
Message-ID: <3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>

Thanks both for th soon replies.


My code looks a lot like Lucas suggested (I was messing the stop stuff).

Another question. Thinking twisted (and thinking about performance), it's ok
to loop every 30 seconds over the clients asking their status or should be
better to schudle a new polling rutine starting 30 seconds from now every
time a client is connected? In the second approach the polls will be more
spread? Is a good Idea?

It will be something like:

from twisted.internet import reactor, task

class StatusPollingReceiver(LineOnlyReceiver):
   def requestStatus(self):
       self.transport.write('stat\r\n')

   def connectionMade(self):
       self.factory.clients.append(self)
       statusloop = task.LoopingCall(self.requestStatus)
       statusloop.start(30.0)

   def lineReceived(self, line):
       print('Rx: %s' % line)

   def connectionLost(self, reason):
       self.factory.clients.remove(self)


class StatusPollingFactory(Factory):

   def __init__(self):
       self.clients = []

   def stopFactory(self):
       self.statusloop.stop()

   def buildProtocol(self, addr):
       p = StatusPollingReceiver()
       p.factory = self
       return p

2009/4/28 Lucas Taylor <ltaylor.volks at gmail.com>

> On 4/27/09 5:06 PM, Juanjo Conti wrote:
> > Hi, this is my first mail to the list.
> >
> > I am writing a server using Twisted, extending LineOnlyReceiver. In it I
> > maintain a list of clients connected.
> >
> > I'd like to poll every client for certain status information every 30
> > seconds. Which is the correct approach to implement this?
> >
>
> A simple option is to setup a task.LoopingCall in your factory to
> iterate over the list of clients every 30 seconds and issue your status
> request. I don't know if it is correct for your application, but this
> should illustrate the basic idea:
>
>
> from twisted.internet import reactor, task
>
> class StatusPollingReceiver(LineOnlyReceiver):
>    def connectionMade(self):
>        self.factory.clients.append(self)
>
>    def lineReceived(self, line):
>        print('Rx: %s' % line)
>
>    def connectionLost(self, reason):
>        self.factory.clients.remove(self)
>
>
> class StatusPollingFactory(Factory):
>
>    def __init__(self):
>        self.clients = []
>
>        # send a status request to each client every 30 seconds
>        self.statusloop = task.LoopingCall(self.requestStatus)
>        self.statusloop.start(30.0)
>
>    def requestStatus(self):
>        for client in self.clients:
>            client.transport.write('stat\r\n')
>
>    def stopFactory(self):
>        self.statusloop.stop()
>
>    def buildProtocol(self, addr):
>        p = StatusPollingReceiver()
>        p.factory = self
>        return p
>
>
>
>
> see:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Juanjo Conti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090428/b1ab2e88/attachment.html>

From ltaylor.volks at gmail.com  Tue Apr 28 11:28:14 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Tue, 28 Apr 2009 10:28:14 -0700
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>	
	<49F6B4D5.5060606@gmail.com>
	<3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
Message-ID: <49F73CAE.4080505@gmail.com>

On 4/28/09 4:11 AM, Juanjo Conti wrote:
> 
> Another question. Thinking twisted (and thinking about performance),
> it's ok to loop every 30 seconds over the clients asking their status or
> should be better to schudle a new polling rutine starting 30 seconds
> from now every time a client is connected? In the second approach the
> polls will be more spread? Is a good Idea?


If this basic approach works for your application, then either way seems
simple enough to swap out and test. Whether it is a good idea or not
depends on your application, the # of clients, etc.

I don't think you're going to find it makes much of a difference for
some low number of connected clients, so keeping a single timer in the
factory seems easier to manage.

But if you need more control and want to make sure your clients aren't
being polled before it is necessary (i.e. < 30s from connect), then your
second approach might be better.

Lucas

> It will be something like:
> 
> from twisted.internet import reactor, task
> 
> class StatusPollingReceiver(LineOnlyReceiver):
>    def requestStatus(self):
>        self.transport.write('stat\r\n')
>           
>    def connectionMade(self):
>        self.factory.clients.append(self)
>        statusloop = task.LoopingCall(self.requestStatus)
>        statusloop.start(30.0)
> 
>    def lineReceived(self, line):
>        print('Rx: %s' % line)
> 
>    def connectionLost(self, reason):
>        self.factory.clients.remove(self)
> 
> 
> class StatusPollingFactory(Factory):
> 
>    def __init__(self):
>        self.clients = []
> 
>    def stopFactory(self):
>        self.statusloop.stop()
> 
>    def buildProtocol(self, addr):
>        p = StatusPollingReceiver()
>        p.factory = self
>        return p



From jjconti at gmail.com  Tue Apr 28 11:57:31 2009
From: jjconti at gmail.com (Juanjo Conti)
Date: Tue, 28 Apr 2009 14:57:31 -0300
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <49F73CAE.4080505@gmail.com>
References: <3f9007680904271706x52b22933n15218012fe777ed6@mail.gmail.com>
	<49F6B4D5.5060606@gmail.com>
	<3f9007680904280411i185b90ebt4dc99e48a487bd40@mail.gmail.com>
	<49F73CAE.4080505@gmail.com>
Message-ID: <3f9007680904281057o4f61e9a7kd3577727c2cdf095@mail.gmail.com>

I'll 400 clients in the first deploy and some thousands later. Do you
think are many?

2009/4/28, Lucas Taylor <ltaylor.volks at gmail.com>:
> On 4/28/09 4:11 AM, Juanjo Conti wrote:
>>
>> Another question. Thinking twisted (and thinking about performance),
>> it's ok to loop every 30 seconds over the clients asking their status or
>> should be better to schudle a new polling rutine starting 30 seconds
>> from now every time a client is connected? In the second approach the
>> polls will be more spread? Is a good Idea?
>
>
> If this basic approach works for your application, then either way seems
> simple enough to swap out and test. Whether it is a good idea or not
> depends on your application, the # of clients, etc.
>
> I don't think you're going to find it makes much of a difference for
> some low number of connected clients, so keeping a single timer in the
> factory seems easier to manage.
>
> But if you need more control and want to make sure your clients aren't
> being polled before it is necessary (i.e. < 30s from connect), then your
> second approach might be better.
>
> Lucas
>
>> It will be something like:
>>
>> from twisted.internet import reactor, task
>>
>> class StatusPollingReceiver(LineOnlyReceiver):
>>    def requestStatus(self):
>>        self.transport.write('stat\r\n')
>>
>>    def connectionMade(self):
>>        self.factory.clients.append(self)
>>        statusloop = task.LoopingCall(self.requestStatus)
>>        statusloop.start(30.0)
>>
>>    def lineReceived(self, line):
>>        print('Rx: %s' % line)
>>
>>    def connectionLost(self, reason):
>>        self.factory.clients.remove(self)
>>
>>
>> class StatusPollingFactory(Factory):
>>
>>    def __init__(self):
>>        self.clients = []
>>
>>    def stopFactory(self):
>>        self.statusloop.stop()
>>
>>    def buildProtocol(self, addr):
>>        p = StatusPollingReceiver()
>>        p.factory = self
>>        return p
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Juanjo Conti



From exarkun at divmod.com  Tue Apr 28 12:08:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Apr 2009 14:08:46 -0400
Subject: [Twisted-Python] Polling from Twisted
In-Reply-To: <3f9007680904281057o4f61e9a7kd3577727c2cdf095@mail.gmail.com>
Message-ID: <20090428180846.24697.388659364.divmod.quotient.12810@henry.divmod.com>

On Tue, 28 Apr 2009 14:57:31 -0300, Juanjo Conti <jjconti at gmail.com> wrote:
>I'll 400 clients in the first deploy and some thousands later. Do you
>think are many?

You might want to consider a more efficient protocol.  For example, when
a client connects, you could tell it that you want it to send you its
status once every thirty seconds.  Then you don't need to send the request
to each client twice a minute, which saves you the transmission overhead
and the time-based scheduling overhead.

Jean-Paul



From spiritualmechanic at yahoo.com  Wed Apr 29 11:39:30 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Wed, 29 Apr 2009 10:39:30 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <500017.87254.qm@web111312.mail.gq1.yahoo.com>

It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

I'm seeing the "Rollback failed" log message and then the ConnectionLost exception being thrown. I have cp_reconnect set to True, so it's skipping down to the try/except and failing on rollback. Should the code try to rollback if the connection is lost?

Thanks in advance,
Steve



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090429/b64ad944/attachment.html>

From exarkun at divmod.com  Wed Apr 29 11:46:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Apr 2009 13:46:46 -0400
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
In-Reply-To: 0
Message-ID: <20090429174646.24697.1296596797.divmod.quotient.13657@henry.divmod.com>

On Wed, 29 Apr 2009 10:39:30 -0700 (PDT), Steve Lewis <spiritualmechanic at yahoo.com> wrote:
>It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:
>
>    def rollback(self):
>        if not self._pool.reconnect:
>            self._connection.rollback()
>            return
>
>        try:
>            self._connection.rollback()
>            curs = self._connection.cursor()
>            curs.execute(self._pool.good_sql)
>            curs.close()
>            self._connection.commit()
>            return
>        except:
>            log.err(None, "Rollback failed")
>
>        self._pool.disconnect(self._connection)
>
>        if self._pool.noisy:
>            log.msg("Connection lost.")
>
>        raise ConnectionLost()
>
>I'm seeing the "Rollback failed" log message and then the ConnectionLost exception being thrown. I have cp_reconnect set to True, so it's skipping down to the try/except and failing on rollback. Should the code try to rollback if the connection is lost?

Is there some way it can determine that the connection has been lost aside
from trying the rollback (and is compatible with other DB-API 2.0 modules)?

Jean-Paul



From minesh at gmail.com  Wed Apr 29 12:45:09 2009
From: minesh at gmail.com (Minesh Patel)
Date: Wed, 29 Apr 2009 11:45:09 -0700
Subject: [Twisted-Python] deferToThread help
Message-ID: <b804d5d90904291145p62c3a53sa4df770001d3eb8a@mail.gmail.com>

Sorry if this is a newbie question.

I have a blocking function that I defer to thread, let's say 'foo' and
I would like to add a callback that gets called after say 10 minues
after Thread finishes

def foo():
   # Blocks for a while

def bar():
   # Do some stuff

d = threads.deferToThread(foo)
d.addCallback(bar) # How can I add timing to the callback???

Currently I have the following code which works but doesn't account
for the threads execution time:

reactor.callInThread(self.bootIso, self.iloIp, pathToIsoRename)
# 10 minutes sleep
d = task.deferLater(reactor, 600, bar)

-- 
Thanks,
./Minesh



From exarkun at divmod.com  Wed Apr 29 13:02:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Apr 2009 15:02:33 -0400
Subject: [Twisted-Python] deferToThread help
In-Reply-To: <b804d5d90904291145p62c3a53sa4df770001d3eb8a@mail.gmail.com>
Message-ID: <20090429190233.24697.732042006.divmod.quotient.13670@henry.divmod.com>

On Wed, 29 Apr 2009 11:45:09 -0700, Minesh Patel <minesh at gmail.com> wrote:
>Sorry if this is a newbie question.
>
>I have a blocking function that I defer to thread, let's say 'foo' and
>I would like to add a callback that gets called after say 10 minues
>after Thread finishes
>
>def foo():
>   # Blocks for a while
>
>def bar():
>   # Do some stuff
>
>d = threads.deferToThread(foo)
>d.addCallback(bar) # How can I add timing to the callback???
>
>Currently I have the following code which works but doesn't account
>for the threads execution time:
>
>reactor.callInThread(self.bootIso, self.iloIp, pathToIsoRename)
># 10 minutes sleep
>d = task.deferLater(reactor, 600, bar)
>

You just need to combine the relevant parts of these two solutions.  First,
the deferToThread call which will let you know when the task in the thread
has completed (this is not when the thread exits, because deferToThread uses
a thread pool and threads are re-used for many tasks):

    fooComplete = deferToThread(foo)

Next, when `foo´ is finished, you want to wait 10 minutes.  You had the
right idea with deferLater, but you don't want to call it until `foo´ is
finished:

    def waitTenMinutes(result):
        return deferLater(reactor, 600, lambda: result)
    fooComplete.addCallback(waitTenMinutes)

Finally, after a ten minute delay, you want to call `bar´:

    fooComplete.addCallback(bar)

Since a Deferred has a chain of callbacks which are called one after the
other, and since return a Deferred from a callback causes things to wait
for the result of that new Deferred before moving on to the next callback
in the original chain, combining deferToThread, deferLater, and bar as
above will give you the desired behavior.

Jean-Paul



From nestor at tiendalinux.com  Wed Apr 29 17:09:08 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Wed, 29 Apr 2009 18:09:08 -0500
Subject: [Twisted-Python] Catching exception on a Serial Connection
Message-ID: <49F8DE14.6030300@tiendalinux.com>

Hello, i am newbie to twisted, i am trying to find a way to catch 
exceptions raised from a protocol over a serial line, like the 
twisted.protocol.gps.zodiac, i see the demo script, on the twisted 
website: 
http://twistedmatrix.com/projects/core/documentation/examples/gpsfix.py 
but i don't figure yet how to handle exceptions coming from the protocol 
since i didn't figure how to register a callback for an error, cause i 
haven't found a way to create a deferred object for a serial connection.

for example, the gpsfix.py main portion is as simple as this:

    s = SerialPort(GPSTest(), o.opts['port'], reactor, baudrate=baudrate)
    reactor.run()

whereas GPSTest() is a class that inherits from protocol.Protocol, 
source code on: 
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/gps/rockwell.py

Any help would be appreciated.

thanks.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From exarkun at divmod.com  Thu Apr 30 06:14:14 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Apr 2009 08:14:14 -0400
Subject: [Twisted-Python] Catching exception on a Serial Connection
In-Reply-To: <49F8DE14.6030300@tiendalinux.com>
Message-ID: <20090430121414.24697.1232702604.divmod.quotient.13987@henry.divmod.com>

On Wed, 29 Apr 2009 18:09:08 -0500, "Nestor A. Diaz" <nestor at tiendalinux.com> wrote:
>Hello, i am newbie to twisted, i am trying to find a way to catch
>exceptions raised from a protocol over a serial line, like the
>twisted.protocol.gps.zodiac, i see the demo script, on the twisted
>website:
>http://twistedmatrix.com/projects/core/documentation/examples/gpsfix.py
>but i don't figure yet how to handle exceptions coming from the protocol
>since i didn't figure how to register a callback for an error, cause i
>haven't found a way to create a deferred object for a serial connection.

Protocol's aren't supposed to raise exceptions from their dataReceived
method.  If they do, then they're basically giving up control - both of
what happens to the exception and what happens to the connection (usually
it will be closed for them shortly afterwards).

If you'd like to handle these exceptions, you should handle them /before/
they escape from dataReceived.  For example:

    class Foo(Protocol):
        def dataReceived(self, bytes):
            try:
                print 'Received', int(bytes)
            except ValueError:
                print 'Received non-int', repr(bytes)

Jean-Paul



From mr.file at gmail.com  Thu Apr 30 06:44:08 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 14:44:08 +0200
Subject: [Twisted-Python] handling CTRL-C
Message-ID: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>

Hi,
i know twisted already manage CTRL-C keystroke, but i'd like to add some
other action when CTRL-C is pressed.
I've implemented a perspective broker server, which have a DeferredQueue and
a lot of elements in it.
I'd like to write to a file all those elements before the program shuts
down.
Is there a way to handle this kind of situation?
Thanks in advance
Fabrizio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090430/d4ffb865/attachment.html>

From itamar at itamarst.org  Thu Apr 30 07:04:44 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 30 Apr 2009 09:04:44 -0400
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
Message-ID: <1241096684.23446.2.camel@pintsize>

On Thu, 2009-04-30 at 14:44 +0200, Fabrizio Mancini wrote:
> Hi,
> i know twisted already manage CTRL-C keystroke, but i'd like to add
> some other action when CTRL-C is pressed.
> I've implemented a perspective broker server, which have a
> DeferredQueue and a lot of elements in it.
> I'd like to write to a file all those elements before the program
> shuts down.
> Is there a way to handle this kind of situation?

def cleanupFunction():
   for item in queue:
      item.saveToDisk()
reactor.addSystemEventTrigger("before", "shutdown", cleanupFunction)


The function can return a Deferred in order to delay shutdown during
cleanup.




From exarkun at divmod.com  Thu Apr 30 07:14:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Apr 2009 09:14:59 -0400
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
Message-ID: <20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>

On Thu, 30 Apr 2009 14:44:08 +0200, Fabrizio Mancini <mr.file at gmail.com> wrote:
>Hi,
>i know twisted already manage CTRL-C keystroke, but i'd like to add some
>other action when CTRL-C is pressed.
>I've implemented a perspective broker server, which have a DeferredQueue and
>a lot of elements in it.
>I'd like to write to a file all those elements before the program shuts
>down.
>Is there a way to handle this kind of situation?

The best way is to have an IService provider with a stopService method
which does whatever shutdown cleanup you want done, possibly returning
a Deferred which doesn't fire until it has finished.  However your app
is shut down, this will cause your cleanup code to run.

Jean-Paul



From mr.file at gmail.com  Thu Apr 30 07:24:16 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 15:24:16 +0200
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <1241096684.23446.2.camel@pintsize>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
	<1241096684.23446.2.camel@pintsize>
Message-ID: <793463d60904300624p5ae6e6adw7f46fe528dd6e403@mail.gmail.com>

On Thu, Apr 30, 2009 at 3:04 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2009-04-30 at 14:44 +0200, Fabrizio Mancini wrote:
>> Hi,
>> i know twisted already manage CTRL-C keystroke, but i'd like to add
>> some other action when CTRL-C is pressed.
>> I've implemented a perspective broker server, which have a
>> DeferredQueue and a lot of elements in it.
>> I'd like to write to a file all those elements before the program
>> shuts down.
>> Is there a way to handle this kind of situation?
>
> def cleanupFunction():
>   for item in queue:
>      item.saveToDisk()
> reactor.addSystemEventTrigger("before", "shutdown", cleanupFunction)
>
>
> The function can return a Deferred in order to delay shutdown during
> cleanup.

WOW,
that's amazing!!! thank you very very much!
Twisted is fantastic!!!
Fabrizio



From mr.file at gmail.com  Thu Apr 30 11:59:48 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 19:59:48 +0200
Subject: [Twisted-Python] handling CTRL-C
In-Reply-To: <20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>
References: <793463d60904300544occeff46pc0769281b2cf1bd2@mail.gmail.com>
	<20090430131459.24697.1924040757.divmod.quotient.14001@henry.divmod.com>
Message-ID: <793463d60904301059m29a2ed9elfc7a219ecfd2bad0@mail.gmail.com>

> The best way is to have an IService provider with a stopService method
> which does whatever shutdown cleanup you want done, possibly returning
> a Deferred which doesn't fire until it has finished.  However your app
> is shut down, this will cause your cleanup code to run.

Thank you,
i will study how to implement this in my app.
fabrizio



From spiritualmechanic at yahoo.com  Thu Apr 30 13:04:01 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Thu, 30 Apr 2009 12:04:01 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <364416.27803.qm@web111302.mail.gq1.yahoo.com>

(If anyone gets this twice, apology in advance. I think I jumped the gun in sending the email before I got my acknowledge welcome email for the list.)

It looks like the latest version 8.2 tries to rollback without seeing if the connection is even open or not:

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

I'm
seeing the "Rollback failed" log message and then the ConnectionLost
exception being thrown. I have cp_reconnect set to True, so it's
skipping down to the try/except and failing on rollback. Should the
code try to rollback if the connection is lost?

Thanks in advance,
Steve


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090430/80216b99/attachment.html>

From spiritualmechanic at yahoo.com  Thu Apr 30 13:08:13 2009
From: spiritualmechanic at yahoo.com (Steve Lewis)
Date: Thu, 30 Apr 2009 12:08:13 -0700 (PDT)
Subject: [Twisted-Python] cx_Oracle, Twisted - rollback failed
Message-ID: <920941.59090.qm@web111315.mail.gq1.yahoo.com>

> Is there some way it can determine that the connection has been lost aside
> from trying the rollback (and is compatible with other DB-API 2.0 modules)?
>
> Jean-Paul

Oops, I actually did see my message going through now. Sorry for the duplicate. 

To answer your question, I was under the impression that the cp_reconnect would check to see if the connection existed already. Is there a way to have it check that query before rolling back? I'm guessing other databases/apis don't throw exceptions on a rollback if the connection is gone?
Steve



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090430/368bff8f/attachment.html>

From mr.file at gmail.com  Thu Apr 30 15:03:06 2009
From: mr.file at gmail.com (Fabrizio Mancini)
Date: Thu, 30 Apr 2009 23:03:06 +0200
Subject: [Twisted-Python] subclassing and mixing
	protocol.ReconnectingClientFactory and pb.PBClientFactory
Message-ID: <793463d60904301403k2e012506g81976595d2aad1f7@mail.gmail.com>

Hi,
i've implemented a pb client by writing a class which inherits from
object and a class which inherits from ReconnectingClientFactory and
PBClientFactory.
Till now it's all ok, the client detects the disconnection and try to
reconnect with an exponential delay if the connection is not
immediatly reestabilished.
The calls to the callRemote("get_item") method are repetitive, but for
sake of simplicity i've cut off the code that controls if there is
already another call running.
The problem:
i'd like to manage something like the clientConnectionMade method when
the client reconnect (thanks to the ReconnectingClientFactory) after a
disconnection and launch again the MypbClient.connect() method as i do
in the "if __name__ " statement, but i can't guess how to do it.
This is the code i'm using.
Thanks in advanche, any help appreciated, and hope to have been clear enough
Fabrizio

class MypbClient(object):

   def __init__(self):
       self.clientfactory = MypbClientFactory()
       self._scheduledCall] = task.LoopingCall(self.get_item)
       self._scheduledCall].start(10, False)

   def connect(self):
       reactor.connectTCP(server_ip, server_port, self.clientfactory)
       self.rootObj = self.clientfactory.getRootObject()
       self.rootObj.addCallback(self.initiateChain).addErrback(self._eb)

   def initiateChain(self, broker):
       self.broker = broker
       self.d = self.broker.callRemote("get_item")
       self.d.addCallback(self.got_item).addErrback(self._eb)

   def get_item(self, result):
       self.d = self.broker.callRemote("get_item")
       self.d.addCallback(self.got_item).addErrback(self._eb)

   def got_item(self, record):
       self.op = doSomethingWith(record) #returns a deferred

class MypbClientFactory(pb.PBClientFactory, protocol.ReconnectingClientFactory):
   def __init__(self):
       pb.PBClientFactory.__init__(self)

   def clientConnectionMade(self, broker):
       self.resetDelay()
       pb.PBClientFactory.clientConnectionMade(self, broker)

   def clientConnectionFailed(self, connector, reason):
       pb.PBClientFactory.clientConnectionFailed(self, connector, reason)
       if self.continueTrying:
           self.connector = connector
           self.retry()

   def clientConnectionLost(self, connector, reason, reconnecting=1):
       pb.PBClientFactory.clientConnectionLost(self, connector,
reason, reconnecting=reconnecting)
       protocol.ReconnectingClientFactory.clientConnectionLost(self,
connector, reason)

if __name__ == "__main__":
   dpc = MypbClient()
   dpc.connect()
   reactor.run()



